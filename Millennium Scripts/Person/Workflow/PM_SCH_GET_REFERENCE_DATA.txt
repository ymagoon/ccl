 ;;Solution_Test/script/Person Management/PMSearch/PM_SCH_GET_REFERENCE_DATA.PRG Turn on black mode

  drop program PM_SCH_GET_REFERENCE_DATA:dba go
create program PM_SCH_GET_REFERENCE_DATA:dba

/****************************************************************************
 *                                                                          *
 *  Copyright Notice:  (c) 1983 Laboratory Information Systems &            *
 *                              Technology, Inc.                            *
 *       Revision      (c) 1984-1997 Cerner Corporation                     *
 *                                                                          *
 *  Cerner (R) Proprietary Rights Notice:  All rights reserved.             *
 *  This material contains the valuable properties and trade secrets of     *
 *  Cerner Corporation of Kansas City, Missouri, United States of           *
 *  America (Cerner), embodying substantial creative efforts and            *
 *  confidential information, ideas and expressions, no part of which       *
 *  may be reproduced or transmitted in any form or by any means, or        *
 *  retained in any storage or retrieval system without the express         *
 *  written permission of Cerner.                                           *
 *                                                                          *
 *  Cerner is a registered mark of Cerner Corporation.                      *
 *                                                                          *
 *                                                                          *
 ****************************************************************************

          Date Written:       07/06/98
          Source file name:   PM_SCH_GET_REFERENCE_DATA
          Object name:        PM_SCH_GET_REFERENCE_DATA
          Request #:          100044

          Product:            Person Management
          Product Team:       Person Management
          HNA Version:        V500
          CCL Version:        

          Program purpose:    Retrieves reference data for
                              the search routine

          Tables read:        
          Tables updated:
          Executing from:
          Special Notes:

 ***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod Date     Engineer        Feature  Comment                            *
 *--- -------- --------------- -------  -----------------------------------*
  000 07/06/98 Darryl Shippy            Initial release
  001 07/14/99 Darryl Shippy            Optimization
 D002 04/11/01 Bill White               Add codeset 27520
CL003 02/11/02 Chinh Luu                Get code value extension of 263 & 4
MH004 05/30/02 Matt Hawkins                added cki value returns and ssn/cmrn
									alias pool code returns
ZS005 01/23/03 Zaheer Saeed	        Add Codeset 213 name_type to display name in the preview ITN 106692
VI006 08/18/03 VI3847          36297    Add codeset 24269 Profit Encounter Status
47322 10/29/04 Chad Pugh                CAPEP00144508 - Performance fixes
49388  11/30/04 Jason Mullinnix         Added codeset 391571 for archive
129148 04/30/07 Jason Roberts			CR 1-736774302 - Added Logic for Shared Domain - Organizations
164350 03/28/08 Robert Huggins          1-446403768 - Changed a join to exists in a code_value_extension query that didn't
                                                      need the code value table.
165131 04/09/08 Chirag Pujara   165131   Get Code_Value_Extension "LEADINGZEROS" for code_set 4, 319.           
198735 01/13/09 Jereme Wilson          CR 1-3002541261 Performance fixes to pmSearch window load timer
305283 08/29/11 Chiranjeevi	305283  CR 1-5020995975 - PMSearch search performance issue 
344225 11/20/12 Charley Donnici 344225  CR 1-4972803967  
                                        CR 1-6345593461 - Search Quality Enhancement & DM Archive Removal
 ***********************************************************************/
 if (validate(last_mod, "NOMOD") = "NOMOD")
    declare last_mod = c6 with noconstant(" "), private
 endif
 

 set last_mod = "47322"
 set last_mod = "49388"
 set last_mod = "129148"
 set last_mod = "164350"
 set last_mod = "165131"
 set last_mod = "198735"
 set last_mod = "305283"
 set last_mod = "344225"     ;344225
/*
record request
(
  1  quick                     = i2
)
*/

record reply
(
  1  opf                       = i2
  1  code_set[*]
     2  code_set               = i4
     2  code[*]
        3  code_value          = f8
        3  display             = vc
        3  meaning             = vc
;MH004 ++
     	3  cki				   = vc
;MH004 --
  1  client[*]
     2  name                   = vc
     2  organization_id        = f8
  1  facility[*]
     2  code_value             = f8
     2  display                = vc
     2  building[*]
        3  code_value          = f8
        3  display             = vc
        3  location[*]
           4  code_value       = f8
           4  display          = vc
;CL003 ++
  1  alias_pool[*]
     2 code_value              = f8
     2 mnemonic                = vc
  1  use_mnemonic[*]
     2 code_value              = f8
     2 meaning                 = c12
;CL003 --

;MH004 ++
  1  CMRN_alias_pool_cd		   = f8
  1  SSN_alias_pool_cd		   = f8
;MH004 --

;165131 ++
  1  allow_leadingzeros[*]
     2 code_value              = f8
     
;165131 --

  1  status_data
     2  status                 = c1
     2  subeventstatus[1]
        3  operationname       = vc
        3  operationstatus     = c1
        3  targetobjectname    = vc
        3  targetobjectvalue   = vc
)

declare dPerfFlag = i2 with noconstant (validate (request->perf_flag,-1)) ;198735

execute from 1000_INITIALIZE to 1999_INITIALIZE_EXIT
execute from 2000_READ to 2999_READ_EXIT
go to 9999_EXIT_PROGRAM
 
;+47322 - This isn't necessary
/*
subroutine meaning_code(mc_codeset, mc_meaning)
  set mc_code = 0.0
  set mc_text = fillstring(12, " ")
  set mc_text = mc_meaning
  set mc_stat = uar_get_meaning_by_codeset(mc_codeset, mc_text, 1, mc_code)
  if (mc_code > 0.0)
    return(mc_code)
  else
    return(-1.0)
  endif
end
*/
;-47322
 
;MH004 ++
    ;+47322
	;declare CMRN_alias_type_cd = f8 with noconstant(0)
	;declare SSN_alias_type_cd = f8 with noconstant(0)
	declare CMRN_alias_type_cd = f8 with noconstant(0.0)
	declare SSN_alias_type_cd = f8 with noconstant(0.0)
	;-47322
  	declare AliasCnt    =   i4  with noconstant(0)
  	
;MH004 --
   
    
#1000_INITIALIZE
;Initialize the reply structure
  set reply->status_data->status = "F"

;Set variables according to the data in the persistent structure
 
  ;+47322
  ;set client_org_type_cd = meaning_code(278, "CLIENT")
  ;set building_cd = meaning_code(222, "BUILDING")
  ;set facility_cd = meaning_code(222, "FACILITY")
  set client_org_type_cd = 0.0
  set building_cd = 0.0
  set facility_cd = 0.0
  set stat = uar_get_meaning_by_codeset(278, "CLIENT", 1, client_org_type_cd)
  set stat = uar_get_meaning_by_codeset(222, "BUILDING", 1, building_cd)
  set stat = uar_get_meaning_by_codeset(222, "FACILITY", 1, facility_cd)
  ;-47322
 
#1999_INITIALIZE_EXIT
 
 
#2000_READ
;Determine whether we're in "quick" mode or not
  if (validate(request->quick, 0) = 0)
    set quick = 0
  else
    set quick = 1
  endif

;Determine whether OPF is installed
  select into "nl:" i.info_number
    from dm_info i
   where i.info_name = "OPEN PERSON FOUNDATION"
     and i.info_domain = "INSTALLED PRODUCTS"
     and i.info_long_id = 30
     and i.info_number = 1
  detail
    reply->opf = 1
  with nocounter 

;Initialize counters
  set client_count = 0
  set code_set_count = 0
  set code_count = 0
  set code_total = 0

;If we're not in quick mode, skip the quick load section
  if (quick = 0)
    go to 2100_CONTINUE
  endif
if (dPerfFlag != 1 ) ;198735
;Grab code values from code sets where a valid meaning is required
  select into "nl:" c.code_value
    from code_value c
    plan c
;   where c.code_set in (4, 43, 57, 212, 319, 331,333) ;D002
;344225    where c.code_set in (4, 43, 57, 212, 213, 319, 331, 333, 27520, 391571)   ;49388  ;D002
    where c.code_set in (4, 43, 57, 212, 213, 319, 331, 333, 27520)   
     ;+47322
     ;and c.active_ind + 0 = 1
     ;and c.begin_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
     ;and c.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
     and c.code_value > 0
     and c.active_ind = 1
     and c.begin_effective_dt_tm < cnvtdatetime(curdate, curtime3)
     and c.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
     ;-47322
     and trim(c.display) > " "
     and trim(c.cdf_meaning) > " "
  order by c.code_set, c.display
  head c.code_set
    code_set_count = code_set_count + 1
 
    ;+47322
    if (code_set_count > 1 and code_count > 0)
       stat = alterlist(reply->code_set[code_set_count - 1]->code, code_count)
    endif
    ;-47322
 
    code_count = 0
 
    ;+47322
    ;stat = alterlist(reply->code_set, code_set_count)
    if (mod(code_set_count, 10) = 1)
       stat = alterlist(reply->code_set, code_set_count + 9)
    endif
    ;-47322
 
    reply->code_set[code_set_count]->code_set = c.code_set
  head c.code_value
    code_count = code_count + 1
    code_total = code_total + 1
 
    ;+47322
    ;stat = alterlist(reply->code_set[code_set_count]->code, code_count)
    if (mod(code_count, 10) = 1)
       stat = alterlist(reply->code_set[code_set_count]->code, code_count + 9)
    endif
    ;-47322
 
    ;MH004 ++
    reply->code_set[code_set_count]->code[code_count]->cki = c.cki
    ;MH004 --
    reply->code_set[code_set_count]->code[code_count]->code_value = c.code_value
    reply->code_set[code_set_count]->code[code_count]->display = trim(c.display, 3)
    reply->code_set[code_set_count]->code[code_count]->meaning = cnvtupper(trim(c.cdf_meaning, 3))
  with nocounter
 
  ;+47322
  if (code_count > 0)
     set stat = alterlist(reply->code_set[code_set_count]->code, code_count)
  endif
 
  if (code_set_count > 0)
     set stat = alterlist(reply->code_set, code_set_count)
  endif
  ;-47322
        endif ; perf_flag <= 0 198735
 
;MH004 ++
; get the SSN and CMRN alias pool codes

	set CMRN_alias_type_cd = uar_get_code_by("MEANING", 4, "CMRN")
	set SSN_alias_type_cd = uar_get_code_by("MEANING", 4, "SSN")
 
    ;+47322
    /*
	if (CMRN_alias_type_cd > 0 and SSN_alias_type_cd > 0)
		select distinct p.alias_pool_cd
		from org_alias_pool_reltn p
		where ((p.alias_entity_alias_type_cd = ssn_alias_type_cd or
			   p.alias_entity_alias_type_cd = CMRN_alias_type_cd) and
			   p.alias_entity_name = "PERSON_ALIAS" and
			   p.beg_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3) and
			   p.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3) and
			   p.active_ind + 0 = 1)
		Order by alias_entity_alias_type_cd

		head p.alias_entity_alias_type_cd
			AliasCnt = 0
		detail
			AliasCnt = AliasCnt + 1
		foot p.alias_entity_alias_type_cd
			if (p.alias_entity_alias_type_cd = ssn_alias_type_cd)
				if (AliasCnt = 1)
					reply->SSN_alias_pool_cd = p.alias_pool_cd
				else
					reply->SSN_alias_pool_cd = 0
				endif
			elseif (p.alias_entity_alias_type_cd = CMRN_alias_type_cd)
				if (AliasCnt = 1)
					reply->CMRN_alias_pool_cd = p.alias_pool_cd
				else
					reply->CMRN_alias_pool_cd = 0
				endif
			endif
		with nocounter
	endif
;MH004 --
    */
    ;Do two different selects so that you hit the index correctly
    ;I don't think that these select statements are right though b/c you can have
    ;  multiple alias_pool_cds since each org has it own pool
    if (CMRN_alias_type_cd > 0)
		select distinct p.alias_pool_cd
		 from org_alias_pool_reltn p
		  where p.alias_entity_alias_type_cd = CMRN_alias_type_cd
		    and p.alias_entity_name = "PERSON_ALIAS"
		    and p.active_ind = 1
		    and p.beg_effective_dt_tm < cnvtdatetime(curdate, curtime3)
		    and p.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
		  order by p.alias_entity_alias_type_cd
          detail
 		   reply->CMRN_alias_pool_cd = p.alias_pool_cd
		with nocounter
	endif
 
	if (SSN_alias_type_cd > 0)
		select distinct p.alias_pool_cd
		 from org_alias_pool_reltn p
		  where p.alias_entity_alias_type_cd = SSN_alias_type_cd
		    and p.alias_entity_name = "PERSON_ALIAS"
		    and p.active_ind = 1
		    and p.beg_effective_dt_tm < cnvtdatetime(curdate, curtime3)
		    and p.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
		  order by p.alias_entity_alias_type_cd
          detail
 		   reply->SSN_alias_pool_cd = p.alias_pool_cd
		with nocounter
	endif
    ;-47322
 
;If in quick mode, exit
  if (quick)
    go to 2900_FINISH
  endif

#2100_CONTINUE
  ;+129148
%i cclsource:pm_get_logical_domain.inc
  declare lExpandCnt = i4 with noconstant(0)
  declare lSize = i4 with noconstant(0)
  declare bStatus = i4 with noconstant(0)
  declare sLogicalDomain = vc with noconstant("")
 
  set bStatus = get_logical_domains("ORGANIZATION")
  if(bStatus = LD_SUCCESS)
    set lSize = size(logical_domains->qual,5)
    if(lSize > 1)
      set sLogicalDomain = "expand(lExpandCnt,1,lSize,o.logical_domain_id,logical_domains->qual[lExpandCnt]->logical_domain_id)"
    else
      set sLogicalDomain = "o.logical_domain_id = logical_domains->qual[1].logical_domain_id"
    endif
  elseif(bStatus = LD_NO_SCHEMA)
    set sLogicalDomain = "0 = 0"
  else
    set reply->status_data->operationname = "get_logical_domains"
    set reply->status_data->subeventstatus[1]->operationstatus = "F"
    set reply->status_data->subeventstatus[1]->targetobjectname = "pm_sch_get_reference_data"
    set reply->status_data->subeventstatus[1]->targetobjectvalue = "Error occurred while retrieving user's logical domains"
    set reply->status_data->status = "F"
    go to 9999_EXIT_PROGRAM
  endif
  ;-129148
  
;Grab code values from all other code sets
    if (dPerfFlag <= 0 ) ;198735
  select into "nl:" c.code_value
    from code_value c
    plan c
;   where c.code_set in (34, 67, 69, 71, 88, 261, 268, 282, 302, 354)    ;VI006
   where c.code_set in (34, 67, 69, 71, 88, 261, 268, 282, 302, 354, 24269)    ;VI006
     ;+47322
     ;and c.active_ind + 0 = 1
     ;and c.begin_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
     ;and c.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
     and c.code_value > 0
     and c.active_ind = 1
     and c.begin_effective_dt_tm < cnvtdatetime(curdate, curtime3)
     and c.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
     ;-47322
     and trim(c.display) > " "
   order by c.code_set, c.display
  head c.code_set
    code_set_count = code_set_count + 1
 
    ;+47322
    if (code_set_count > 1 and code_count > 0)
       stat = alterlist(reply->code_set[code_set_count - 1]->code, code_count)
    endif
    ;-47322
 
    code_count = 0
 
    ;+47322
    ;stat = alterlist(reply->code_set, code_set_count)
    if (mod(code_set_count, 10) = 1)
       stat = alterlist(reply->code_set, code_set_count + 9)
    endif
    ;-47322
 
    reply->code_set[code_set_count]->code_set = c.code_set
  head c.code_value
    code_count = code_count + 1
    code_total = code_total + 1
    ;+47322
    ;stat = alterlist(reply->code_set[code_set_count]->code, code_count)
    if (mod(code_count, 10) = 1)
       stat = alterlist(reply->code_set[code_set_count]->code, code_count + 9)
    endif
    ;-47322
 
    ;MH004 ++
    reply->code_set[code_set_count]->code[code_count]->cki = c.cki
    ;MH004 --
    reply->code_set[code_set_count]->code[code_count]->code_value = c.code_value
    reply->code_set[code_set_count]->code[code_count]->display = trim(c.display, 3)
    reply->code_set[code_set_count]->code[code_count]->meaning = cnvtupper(trim(c.cdf_meaning, 3))
  with nocounter
 
  ;+47322
  if (code_count > 0)
     set stat = alterlist(reply->code_set[code_set_count]->code, code_count)
  endif
 
  if (code_set_count > 0)
     set stat = alterlist(reply->code_set, code_set_count)
  endif
  ;-47322
        endif;(request->perf_flag <=0) ;198735
 
;Grab all clients
  select into "nl:" o.organization_id
    from organization o, org_type_reltn t
    plan t
     where t.org_type_cd = client_org_type_cd
     ;+47322
     ;and t.active_ind + 0 = 1
     ;and t.beg_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
     ;and t.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
     and t.active_ind = 1
     and t.beg_effective_dt_tm < cnvtdatetime(curdate, curtime3)
     and t.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
     ;-47322
    join o
   where o.organization_id = t.organization_id
     ;+47322
     /*
     and o.active_ind + 0 = 1
     and o.beg_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
     and o.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
     */
     and o.active_ind = 1
     and o.beg_effective_dt_tm < cnvtdatetime(curdate, curtime3)
     and o.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
     ;-47322
     and trim(o.org_name) > " "
     and parser(sLogicalDomain) ;129148
   order by o.org_name, o.organization_id
  head o.organization_id
    client_count = client_count + 1
    stat = alterlist(reply->client, client_count)
    reply->client[client_count]->name = trim(o.org_name, 3)
    reply->client[client_count]->organization_id = o.organization_id
  with nocounter

;Grab all locations
  set facility_count = 0
  set building_count = 0
  set location_count = 0
  set valid = 0
  free set temp
  record temp
  (
    1  text = vc
  )

;305283  select into "nl:" facility = uar_get_code_display(n.loc_facility_cd),
;305283                    building = uar_get_code_display(n.loc_building_cd),
;305283                    location = uar_get_code_display(n.location_cd)
;305283    from nurse_unit n
;305283   where n.location_cd > 0.0
;305283     and n.loc_building_cd + 0 > 0.0
;305283     and n.loc_facility_cd + 0 > 0.0
;305283     ;+47322
;305283     ;and n.active_ind + 0 = 1
;305283     ;and n.beg_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
;305283     ;and n.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
;305283     and n.active_ind = 1
;305283     and n.beg_effective_dt_tm < cnvtdatetime(curdate, curtime3)
;305283    and n.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
;305283     ;-47322
;305283   order by facility, n.loc_facility_cd, building, n.loc_building_cd, location, n.location_cd

;305283++
  select  into "nl:" n.loc_facility_cd,
                     n.loc_building_cd,
                     n.location_cd,
                     facility = f.display,
                     building = b.display,
                     location = l.display
    from  nurse_unit  n,
          code_value f,
          code_value b,
          code_value l 
    where (n.location_cd>0.0 ) 
          and ((n.loc_building_cd+0 )>0.0 ) 
          and ((n.loc_facility_cd+0 )>0.0 ) 
          and (n.active_ind=1 ) 
          and (n.beg_effective_dt_tm< cnvtdatetime ( curdate ,  curtime3 )) 
          and (n.end_effective_dt_tm> cnvtdatetime ( curdate ,  curtime3 ))
          and n.loc_facility_cd = f.code_value
          and n.loc_building_cd = b.code_value
          and n.location_cd = l.code_value
    order by  f.display ,
          n.loc_facility_cd,
          b.display ,
          n.loc_building_cd,
          l.display ,
          n.location_cd
;305283--
  head n.loc_facility_cd
    valid = 0
    temp->text = trim(facility, 3)
    if (size(temp->text) > 0)
      valid = 1
      facility_count = facility_count + 1
      stat = alterlist(reply->facility, facility_count)
      reply->facility[facility_count]->code_value = n.loc_facility_cd
      reply->facility[facility_count]->display = temp->text
    endif
    building_count = 0    
  head n.loc_building_cd
    if (valid)
      valid = 0
      temp->text = trim(building, 3)
      if (size(temp->text) > 0)
        valid = 1
        building_count = building_count + 1
        stat = alterlist(reply->facility[facility_count]->building, building_count)
        reply->facility[facility_count]->building[building_count]->code_value = n.loc_building_cd
        reply->facility[facility_count]->building[building_count]->display = temp->text
      endif
    endif
    location_count = 0
  head n.location_cd
    if (valid)
      temp->text = trim(location, 3)
      if (size(temp->text) > 0)
        location_count = location_count + 1
        stat = alterlist(reply->facility[facility_count]->building[building_count]->location, location_count)
        reply->facility[facility_count]->building[building_count]->location[location_count]->code_value = n.location_cd
        reply->facility[facility_count]->building[building_count]->location[location_count]->display = temp->text
      endif
    endif
  with nocounter
  
;CL003 ++
;  select MNEMONIC code value extension for cs 263
   declare  k      =   i4  with noconstant(0)
   declare  cnt    =   i4  with noconstant(0)

   select into "nl:"
   from code_value_extension cve ;, code_value cv 164350 comment out
;   plan cve ;164350 comment out
   where cve.code_set = 263
     ;+47322
     ;and trim(cve.field_name) = "MNEMONIC"  ;This was killing the index
     ;and cve.code_value > 0.0
     and cve.field_name = "MNEMONIC"  
     and cve.code_value + 0 > 0.0
     ;-47322
   ;join cv ;164350 Comment out
   ;+47322
   ;where cv.code_set = 263
   ;  and cv.code_value + 0 = cve.code_value
   ;  and cv.active_ind + 0 = 1
   ;  and cv.begin_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
   ;  and cv.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
   ;  order by cve.field_value
     ;164350++
     and Exists(
       select cv.code_value
       from code_value cv
     ;164350--
       where cv.code_value = cve.code_value
         and cv.code_set = 263
         and cv.active_ind = 1
         and cv.begin_effective_dt_tm < cnvtdatetime(curdate, curtime3)
         and cv.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
       ) ;164350 
       
   order by cve.field_value
   ;-47322
   detail
     cnt = cnt + 1
     if (mod (cnt,10) = 1 )
        stat = alterlist(reply->alias_pool, cnt + 9 )
     endif
     reply->alias_pool[cnt]->code_value = cve.code_value
     reply->alias_pool[cnt]->mnemonic = cnvtupper(trim(cve.field_value, 3))
   with nocounter
   set stat = alterlist (reply->alias_pool, cnt ) ;resize it


;select USEMNEM code value extension for cs 4
   select into "nl:"
   from code_value_extension cve , code_value cv 
   plan cve
   where cve.code_set = 4
     ;and cnvtupper(trim(cve.field_name,3)) = "USEMNEM"  ;47322
     and cve.field_name = "USEMNEM"  ;47322
     and cve.field_value = "1"
   join cv
   ;+47322
   ;where cv.code_set = 4
   ;  and cv.code_value + 0= cve.code_value
   ;  and cv.active_ind + 0 = 1
   ;  and cv.begin_effective_dt_tm + 0 <= cnvtdatetime(curdate, curtime3)
   ;  and cv.end_effective_dt_tm + 0 >= cnvtdatetime(curdate, curtime3)
   where cv.code_value = cve.code_value
     and cv.code_set = 4
     and cv.active_ind = 1
     and cv.begin_effective_dt_tm < cnvtdatetime(curdate, curtime3)
     and cv.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
   ;-47322
   order by cv.cdf_meaning
   detail
       k = k + 1
       if (mod (k,10) = 1 )
          stat = alterlist(reply->use_mnemonic, k + 9)
       endif
       temp->text = cv.cdf_meaning
       if (textlen(temp->text) > 0)
         reply->use_mnemonic[k]->code_value = cve.code_value
         reply->use_mnemonic[k]->meaning =cnvtupper(trim(temp->text, 3))
       endif
   with nocounter
   set stat = alterlist(reply->use_mnemonic, k ) ;resize it
;CL003 --


;165131 ++
;select LEADINGZEROS code value extension for cs 4 and 319

 declare iLeadingZeroCnt      =   i4  with noconstant(0)  ;165131
select into "nl:"
   from code_value_extension cve , code_value cv 
   plan cve
   where cve.code_set in (4, 319)
     and cve.field_name = "LEADINGZEROS"  
     and cve.field_value = "1"
   join cv
   
   where cv.code_value = cve.code_value
     and cv.active_ind = 1
     and cv.begin_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
     and cv.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
   
   order by cv.cdf_meaning
   detail
       iLeadingZeroCnt = iLeadingZeroCnt + 1
       if (mod (iLeadingZeroCnt,10) = 1 )
          stat = alterlist(reply->allow_leadingzeros, iLeadingZeroCnt + 9)
       endif
       temp->text = cv.cdf_meaning
       if (textlen(temp->text) > 0)
         reply->allow_leadingzeros[iLeadingZeroCnt]->code_value = cv.code_value
         ;reply->allow_leadingzeros[k]->meaning =cnvtupper(trim(temp->text, 3))
       endif
   with nocounter
   set stat = alterlist(reply->allow_leadingzeros, iLeadingZeroCnt ) ;resize it
;165131 --

#2900_FINISH
;If we get here, return a good status
  set reply->status_data->status = "S"
#2999_READ_EXIT


#9999_EXIT_PROGRAM
free record logical_domains ;129148
  end 
  go

;Generated by GNU enscript 1.6.4.
