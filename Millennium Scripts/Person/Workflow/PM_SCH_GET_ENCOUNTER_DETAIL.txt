 ;;Solution_Test/script/Person Management/PMSearch/PM_SCH_GET_ENCOUNTER_DETAIL.PRG Turn on black mode

  drop program PM_SCH_GET_ENCOUNTER_DETAIL:dba go
create program PM_SCH_GET_ENCOUNTER_DETAIL:dba

/****************************************************************************
 *                                                                          *
 *  Copyright Notice:  (c) 1983 Laboratory Information Systems &            *
 *                              Technology, Inc.                            *
 *       Revision      (c) 1984-1998 Cerner Corporation                     *
 *                                                                          *
 *  Cerner (R) Proprietary Rights Notice:  All rights reserved.             *
 *  This material contains the valuable properties and trade secrets of     *
 *  Cerner Corporation of Kansas City, Missouri, United States of           *
 *  America (Cerner), embodying substantial creative efforts and            *
 *  confidential information, ideas and expressions, no part of which       *
 *  may be reproduced or transmitted in any form or by any means, or        *
 *  retained in any storage or retrieval system without the express         *
 *  written permission of Cerner.                                           *
 *                                                                          *
 *  Cerner is a registered mark of Cerner Corporation.                      *
 *                                                                          *
 *                                                                          *
 ****************************************************************************

          Date Written:       07/15/98
          Source file name:   PM_SCH_GET_ENCOUNTER_DETAIL
          Object name:        PM_SCH_GET_ENCOUNTER_DETAIL
          Request #:          100043

          Product:            Person Management
          Product Team:       Person Management
          HNA Version:        V500
          CCL Version:        

          Program purpose:    Retrieves detail information about a
                              single person for the search routine.
                             
          Tables read:        
          Tables updated:
          Executing from:
          Special Notes:

 ***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod   Date        Engineer            Comment                            *
 *---   --------    ----------------    -----------------------------------*
  000   07/15/98    Darryl Shippy       Initial release
  001   05/05/00    Darryl Shippy       Added canceled encounter mode
KW002   08/01/01    Kim Wesley          Added program service and specialty unit
                                        to returned encounter items
SS003   07/29/02    Sara Schmidt        Added retrieval of multiple values for preadmit_testing_cd
74836   11/17/05    Chad Pugh           CR 1-446384725 - Performance issues
77849   10.09.06    JB013981            Added encntr_id to reply structure
145471  08/24/07    Van Batchelder      Adding location_extension to reply.
174119  06/23/08    Joseph Scaduto      CR 1-1363271188 added active_ind reply
286328  06/21/11    Jiansheng Chen  CR 1-4690364471 smart write - warning when you are merging...
 ***********************************************************************/

  if (validate(last_mod, "NOMOD") = "NOMOD")
     declare last_mod = c5 with private, noconstant("")
  endif
 
  set last_mod = "77849"
  set last_mod = "174119"
  set last_mod = "286328"

/*
record request
(
  1  encntr_id                 = f8
  1  options                   = vc ;001
)
*/

%i cclsource:pm_passive_check.inc ;ss003

free record reply   ;74836
record reply
(
  1  accommodation_cd            = f8
  1  accommodation_disp          = vc
  1  accommodation_mean          = vc
  1  accommodation_request_cd    = f8
  1  accommodation_request_disp  = vc
  1  accommodation_request_mean  = vc
  1  admit_mode_cd               = f8
  1  admit_mode_disp             = vc
  1  admit_mode_mean             = vc
  1  admit_src_cd                = f8
  1  admit_src_disp              = vc
  1  admit_src_mean              = vc
  1  admit_type_cd               = f8
  1  admit_type_disp             = vc
  1  admit_type_mean             = vc
  1  admit_with_medication_cd    = f8
  1  admit_with_medication_disp  = vc
  1  admit_with_medication_mean  = vc
  1  alt_result_dest_cd          = f8
  1  alt_result_dest_disp        = vc
  1  alt_result_dest_mean        = vc
  1  ambulatory_cond_cd          = f8
  1  ambulatory_cond_disp        = vc
  1  ambulatory_cond_mean        = vc
  1  arrive_dt_tm                = dq8
  1  confid_level_cd             = f8
  1  confid_level_disp           = vc
  1  confid_level_mean           = vc
  1  courtesy_cd                 = f8
  1  courtesy_disp               = vc
  1  courtesy_mean               = vc
  1  data_status_cd              = f8
  1  data_status_disp            = vc
  1  data_status_mean            = vc
  1  depart_dt_tm                = dq8
  1  diet_type_cd                = f8
  1  diet_type_disp              = vc
  1  diet_type_mean              = vc
  1  disch_dt_tm                 = dq8
  1  disch_disposition_cd        = f8
  1  disch_disposition_disp      = vc
  1  disch_disposition_mean      = vc
  1  disch_to_loctn_cd           = f8
  1  disch_to_loctn_disp         = vc
  1  disch_to_loctn_mean         = vc
  1  encntr_class_cd             = f8
  1  encntr_class_disp           = vc
  1  encntr_class_mean           = vc
  1  encntr_financial_id         = f8
  1  encntr_status_cd            = f8
  1  encntr_status_disp          = vc
  1  encntr_status_mean          = vc
  1  encntr_type_cd              = f8
  1  encntr_type_disp            = vc
  1  encntr_type_mean            = vc
  1  est_arrive_dt_tm            = dq8
  1  est_depart_dt_tm            = dq8
  1  financial_class_cd          = f8
  1  financial_class_disp        = vc
  1  financial_class_mean        = vc
  1  guarantor_type_cd           = f8
  1  guarantor_type_disp         = vc
  1  guarantor_type_mean         = vc
  1  isolation_cd                = f8
  1  isolation_disp              = vc
  1  isolation_mean              = vc
  1  location_cd                 = f8
  1  location_disp               = vc
  1  location_mean               = vc
  1  loc_bed_cd                  = f8
  1  loc_bed_disp                = vc
  1  loc_building_cd             = f8
  1  loc_building_disp           = vc
  1  loc_facility_cd             = f8
  1  loc_facility_disp           = vc
  1  loc_nurse_unit_cd           = f8
  1  loc_nurse_unit_disp         = vc
  1  loc_nurse_unit_mean         = vc
  1  loc_room_cd                 = f8
  1  loc_room_disp               = vc
  1  loc_temp_cd                 = f8
  1  loc_temp_disp               = vc
  1  loc_temp_mean               = vc
  1  med_service_cd              = f8
  1  med_service_disp            = vc
  1  med_service_mean            = vc
  1  organization_id             = f8
  1  pre_reg_dt_tm               = dq8
  1  pre_reg_prsnl_id            = f8
  1  preadmit_nbr                = vc
  1  preadmit_testing_cd         = f8
  1  preadmit_testing_disp       = vc
  1  preadmit_testing_mean       = vc
  1  readmit_cd                  = f8
  1  readmit_disp                = vc
  1  readmit_mean                = vc
  1  reason_for_visit            = vc
  1  referring_comment           = vc
  1  reg_dt_tm                   = dq8
  1  reg_prsnl_id                = f8
  1  result_dest_cd              = f8
  1  result_dest_disp            = vc
  1  result_dest_mean            = vc
  1  vip_cd                      = f8
  1  vip_disp                    = vc
  1  vip_mean                    = vc
  1  person_id                   = f8
  1  program_service_cd          = f8   ;KW002
  1  program_service_disp        = vc   ;KW002
  1  program_service_mean        = vc   ;KW002
  1  specialty_unit_cd           = f8   ;KW002
  1  specialty_unit_disp         = vc   ;KW002
  1  specialty_unit_mean         = vc   ;KW002
  1  phone_id                    = f8   ;145471
  1  location_extension          = vc   ;145471
  1  multi_preadmit_testing[*]			;SS003
     2  preadmit_testing_cd		 = f8	;SS003
     2  preadmit_testing_disp	 = c40	;SS003
     2  preadmit_testing_mean	 = c12	;SS003
  1  alias[*]
     2  encntr_alias_id          = f8
     2  alias                    = vc
     2  alias_formatted          = vc
     2  alias_pool_cd            = f8
     2  alias_pool_disp          = vc
     2  alias_pool_mean          = vc
     2  encntr_alias_type_cd     = f8
     2  encntr_alias_type_disp   = vc
     2  encntr_alias_type_mean   = vc
  1  provider[*]
     2  encntr_prsnl_reltn_id    = f8
     2  encntr_prsnl_r_cd        = f8
     2  encntr_prsnl_r_disp      = vc
     2  encntr_prsnl_r_mean      = vc
     2  name_first               = vc
     2  name_full_formatted      = vc
     2  name_last                = vc    
     2  physician_ind            = i2
     2  prsnl_person_id          = f8
  1  status_data
     2  status                   = c1
     2  subeventstatus[1]
        3  operationname         = vc
        3  operationstatus       = c1
        3  targetobjectname      = vc
        3  targetobjectvalue     = vc
  1  encntr_id                   = f8 ;77849
  1  active_ind	                 = i2 ;174119
)

;+74836
;execute from 1000_INITIALIZE to 1999_INITIALIZE_EXIT
;execute from 2000_READ to 2999_READ_EXIT
;go to 9999_EXIT_PROGRAM
;-74836

;#1000_INITIALIZE  ;74836
;Initialize reply fields
  set reply->status_data->status = "F"
  declare pt_cnt = i4 with public, noconstant(0) ;ss003
  
  declare sAliasTable = vc with noconstant("") ;74836
  declare sPrsnlTable = vc with noconstant("") ;74836
  declare iActiveInd  = i2 with noconstant(0)  ;74836
  
;#1999_INITIALIZE_EXIT  ;74836

;#2000_READ  ;74836
;Set a variable according to the encounter ID given in the request
  ;set encntr_id = request->encntr_id  ;74836

;001 - Determine whether we're in canceled encounter mode
  set canceled_encounter_mode = 0                                                                                      ;001
  if (validate(request->options, "?") != "?")                                                                          ;001
    if (size(request->options) > 4)                                                                                    ;001
      if (substring(5, 1, request->options) = "1")                                                                     ;001
        set canceled_encounter_mode = 1                                                                                ;001
      endif                                                                                                            ;001
    endif                                                                                                              ;001
  endif                                                                                                                ;001

;001 - Set "active" query variables according to the mode                                                              ;001
  if (canceled_encounter_mode)                                                                                         ;001
    ;set active_ind = 0     ;74836
    set iActiveInd = FALSE  ;74836
  else                                                                                                                 ;001
    ;set active_ind = 1     ;74836
    set iActiveInd = TRUE   ;74836
  endif                                                                                                                ;001

;001 - Set "active status range" variables according to the mode
                                                                                   
  ;+74836
  /*
  if (canceled_encounter_mode)                                                                                         ;001
    set low_active_status_cd = 0.0                                                                                     ;001
    select into "nl:" c.code_value                                                                                     ;001
      from code_value c                                                                                                ;001
     where c.code_set = 48                                                                                             ;001
       and c.cdf_meaning = "DELETED"                                                                                   ;001
       and c.active_ind = 1                                                                                            ;001
       and c.begin_effective_dt_tm <= cnvtdatetime(curdate, curtime3)                                                  ;001
       and c.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)                                                    ;001
    detail                                                                                                             ;001
      low_active_status_cd = c.code_value                                                                              ;001
    with nocounter                                                                                                     ;001
    set high_active_status_cd = low_active_status_cd                                                                   ;001
  else                                                                                                                 ;001
    set low_active_status_cd = 0.0                                                                                     ;001
    set high_active_status_cd = 9999999999.0                                                                           ;001
  endif                                                                                                                ;001
  */

  if (canceled_encounter_mode)  
     set sAliasTable = "a.active_status_cd = outerjoin(reqData->deleted_cd)"
     set sPrsnlTable = "r.active_status_cd = reqData->deleted_cd"
  else
     set sAliasTable = "a.active_status_cd >= outerjoin(0.0)"
     set sPrsnlTable = "r.active_status_cd >= 0.0"
  endif  
  ;-74836

;Retrieve encounter information
  ;+74836
  /*
  select into "nl:" e.accommodation_cd,
      prog_service = validate(e.program_service_cd, 0), ;KW002
      spec_unit = validate(e.specialty_unit_cd, 0) ;KW002
    from encounter e
   where e.encntr_id = encntr_id
  detail
    reply->accommodation_cd = e.accommodation_cd
    reply->accommodation_request_cd = e.accommodation_request_cd
    reply->admit_mode_cd = e.admit_mode_cd
    reply->admit_src_cd = e.admit_src_cd
    reply->admit_type_cd = e.admit_type_cd
    reply->admit_with_medication_cd = e.admit_with_medication_cd
    reply->alt_result_dest_cd = e.alt_result_dest_cd
    reply->ambulatory_cond_cd = e.ambulatory_cond_cd
    reply->arrive_dt_tm = e.arrive_dt_tm
    reply->confid_level_cd = e.confid_level_cd
    reply->courtesy_cd = e.courtesy_cd
    reply->data_status_cd = e.data_status_cd
    reply->depart_dt_tm = e.depart_dt_tm
    reply->diet_type_cd = e.diet_type_cd
    reply->disch_dt_tm = e.disch_dt_tm
    reply->disch_disposition_cd = e.disch_disposition_cd
    reply->disch_to_loctn_cd = e.disch_to_loctn_cd
    reply->encntr_class_cd = e.encntr_class_cd
    reply->encntr_financial_id = e.encntr_financial_id
    reply->encntr_status_cd = e.encntr_status_cd
    reply->encntr_type_cd = e.encntr_type_cd
    reply->est_arrive_dt_tm = e.est_arrive_dt_tm
    reply->est_depart_dt_tm = e.est_depart_dt_tm
    reply->financial_class_cd = e.financial_class_cd
    reply->guarantor_type_cd = e.guarantor_type_cd
    reply->isolation_cd = e.isolation_cd
    reply->location_cd = e.location_cd
    reply->loc_bed_cd = e.loc_bed_cd
    reply->loc_building_cd = e.loc_building_cd
    reply->loc_facility_cd = e.loc_facility_cd
    reply->loc_nurse_unit_cd = e.loc_nurse_unit_cd
    reply->loc_room_cd = e.loc_room_cd
    reply->loc_temp_cd = e.loc_temp_cd
    reply->med_service_cd = e.med_service_cd
    reply->organization_id = e.organization_id
    reply->pre_reg_dt_tm = e.pre_reg_dt_tm
    reply->pre_reg_prsnl_id = e.pre_reg_prsnl_id
    reply->preadmit_nbr = e.preadmit_nbr
    reply->preadmit_testing_cd = e.preadmit_testing_cd
    reply->readmit_cd = e.readmit_cd
    reply->reason_for_visit = e.reason_for_visit
    reply->referring_comment = e.referring_comment
    reply->reg_dt_tm = e.reg_dt_tm
    reply->reg_prsnl_id = e.reg_prsnl_id
    reply->result_dest_cd = e.result_dest_cd
    reply->vip_cd = e.vip_cd
    reply->person_id = e.person_id
    reply->program_service_cd = prog_service  ;KW002
    reply->specialty_unit_cd = spec_unit      ;KW002
  with nocounter

;Retrieve alias information for the encounter
  set i = 0
  select into "nl:" a.encntr_alias_id
    from encntr_alias a
   where a.encntr_id = encntr_id
;001     and a.active_ind = 1
     and a.active_ind = active_ind                                                                                     ;001
     and a.active_status_cd between low_active_status_cd and high_active_status_cd                                     ;001
     and a.beg_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
     and a.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)
  detail
    i = i + 1
    stat = alterlist(reply->alias, i)
    reply->alias[i]->encntr_alias_id = a.encntr_alias_id
    reply->alias[i]->alias = a.alias
    reply->alias[i]->alias_formatted = cnvtalias(a.alias, a.alias_pool_cd)
    reply->alias[i]->alias_pool_cd = a.alias_pool_cd
    reply->alias[i]->encntr_alias_type_cd = a.encntr_alias_type_cd
  with nocounter
  */
  
  set i = 0
  
  select into "nl:" 
  	e.encntr_id
   from encounter e, encntr_alias a
    plan e
     where e.encntr_id = request->encntr_id
    join a
     where a.encntr_id = outerjoin(e.encntr_id)
       and a.active_ind = outerjoin(iActiveInd)
       and parser(sAliasTable)
       and a.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate, curtime3))
       and a.end_effective_dt_tm >= outerjoin(cnvtdatetime(curdate, curtime3))
    order by e.encntr_id
    head e.encntr_id
      reply->encntr_id = e.encntr_id ;77849
	  reply->accommodation_cd = e.accommodation_cd
	  reply->accommodation_request_cd = e.accommodation_request_cd
	  reply->active_ind = e.active_ind ;174119
	  reply->admit_mode_cd = e.admit_mode_cd
	  reply->admit_src_cd = e.admit_src_cd
	  reply->admit_type_cd = e.admit_type_cd
	  reply->admit_with_medication_cd = e.admit_with_medication_cd
	  reply->alt_result_dest_cd = e.alt_result_dest_cd
	  reply->ambulatory_cond_cd = e.ambulatory_cond_cd
	  reply->arrive_dt_tm = e.arrive_dt_tm
	  reply->confid_level_cd = e.confid_level_cd
	  reply->courtesy_cd = e.courtesy_cd
	  reply->data_status_cd = e.data_status_cd
	  reply->depart_dt_tm = e.depart_dt_tm
	  reply->diet_type_cd = e.diet_type_cd
	  reply->disch_dt_tm = e.disch_dt_tm
	  reply->disch_disposition_cd = e.disch_disposition_cd
	  reply->disch_to_loctn_cd = e.disch_to_loctn_cd
	  reply->encntr_class_cd = e.encntr_class_cd
	  reply->encntr_financial_id = e.encntr_financial_id
	  reply->encntr_status_cd = e.encntr_status_cd
	  reply->encntr_type_cd = e.encntr_type_cd
	  reply->est_arrive_dt_tm = e.est_arrive_dt_tm
	  reply->est_depart_dt_tm = e.est_depart_dt_tm
	  reply->financial_class_cd = e.financial_class_cd
	  reply->guarantor_type_cd = e.guarantor_type_cd
	  reply->isolation_cd = e.isolation_cd
	  reply->location_cd = e.location_cd
	  reply->loc_bed_cd = e.loc_bed_cd
	  reply->loc_building_cd = e.loc_building_cd
	  reply->loc_facility_cd = e.loc_facility_cd
	  reply->loc_nurse_unit_cd = e.loc_nurse_unit_cd
	  reply->loc_room_cd = e.loc_room_cd
	  reply->loc_temp_cd = e.loc_temp_cd
	  reply->med_service_cd = e.med_service_cd
	  reply->organization_id = e.organization_id
	  reply->pre_reg_dt_tm = e.pre_reg_dt_tm
	  reply->pre_reg_prsnl_id = e.pre_reg_prsnl_id
	  reply->preadmit_nbr = e.preadmit_nbr
	  reply->preadmit_testing_cd = e.preadmit_testing_cd
	  reply->readmit_cd = e.readmit_cd
	  reply->reason_for_visit = e.reason_for_visit
	  reply->referring_comment = e.referring_comment
	  reply->reg_dt_tm = e.reg_dt_tm
	  reply->reg_prsnl_id = e.reg_prsnl_id
	  reply->result_dest_cd = e.result_dest_cd
	  reply->vip_cd = e.vip_cd
	  reply->person_id = e.person_id
	  reply->program_service_cd = e.program_service_cd  
	  reply->specialty_unit_cd = e.specialty_unit_cd
    detail
      if (a.encntr_alias_id > 0)
         i = i + 1
         
         if (mod(i, 100) = 1)
	        stat = alterlist(reply->alias, i + 99)
	     endif
	     
         reply->alias[i]->encntr_alias_id = a.encntr_alias_id
         reply->alias[i]->alias = a.alias
         reply->alias[i]->alias_formatted = cnvtalias(a.alias, a.alias_pool_cd)
         reply->alias[i]->alias_pool_cd = a.alias_pool_cd
         reply->alias[i]->encntr_alias_type_cd = a.encntr_alias_type_cd
      endif
  with nocounter
  
  set stat = alterlist(reply->alias, i)  
  ;-74836
  
  ;145471+
  if (reply->loc_bed_cd > 0.0 or reply->loc_room_cd > 0.0 or reply->loc_nurse_unit_cd > 0.0)
    select into 'nl:'
    from phone p
    plan p where
        p.parent_entity_id in (reply->loc_bed_cd,reply->loc_room_cd,reply->loc_nurse_unit_cd) and
        p.parent_entity_name = 'LOCATION'
    head report
        bBedFound = FALSE
        bRoomFound = FALSE
        bSetNumber = FALSE
    detail
        if (p.parent_entity_id > 0)
            case (p.parent_entity_id)
            of reply->loc_bed_cd:
                bBedFound = TRUE
                bSetNumber = TRUE
            of reply->loc_room_cd:
                bRoomFound = TRUE
                if (bBedFound = FALSE or size(trim(reply->location_extension, 3)) = 0)
                    bSetNumber = TRUE
                endif
            of reply->loc_nurse_unit_cd:
                if ((bBedFound = FALSE and bRoomFound = FALSE) or size(trim(reply->location_extension, 3)) = 0)
                    bSetNumber = TRUE
                endif
            endcase
            
            if (bSetNumber)
                reply->phone_id = p.phone_id
                if (size(trim(p.extension, 3)) > 0)
                    reply->location_extension = trim(p.extension, 3)
                elseif (size(trim(p.phone_num, 3)) > 0)
                    reply->location_extension = trim(cnvtphone(p.phone_num,p.phone_format_cd), 3)
                elseif (size(trim(p.paging_code, 3)) > 0)
                    reply->location_extension = trim(p.paging_code, 3)
                endif
            endif
        endif
    with nocounter
  endif
  ;145471-

;Retrieve provider information for the encounter
  set i = 0
  
  select into "nl:" r.encntr_prsnl_reltn_id
    from encntr_prsnl_reltn r, prsnl p
    plan r
   ;where r.encntr_id = encntr_id  ;74836
   where r.encntr_id = request->encntr_id  ;74836
   
;001     and r.active_ind = 1
     ;+74836
     ;and r.active_ind = active_ind                                                                                     ;001
     ;and r.active_status_cd between low_active_status_cd and high_active_status_cd                                     ;001
     
     and r.active_ind = iActiveInd
     and parser(sPrsnlTable)
     ;-74836
     
     and r.beg_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
     and r.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)
    join p
   where p.person_id = r.prsnl_person_id
     and p.active_ind = 1
     and p.beg_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
     and p.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)
  detail
    i = i + 1
    
    ;+74836
    ;stat = alterlist(reply->provider, i)

    if (mod(i, 100) = 1)
       stat = alterlist(reply->provider, i + 99)
    endif
    ;-74836

    reply->provider[i]->encntr_prsnl_reltn_id = r.encntr_prsnl_reltn_id
    reply->provider[i]->name_first = p.name_first
    reply->provider[i]->name_full_formatted = p.name_full_formatted
    reply->provider[i]->name_last = p.name_last
    reply->provider[i]->encntr_prsnl_r_cd = r.encntr_prsnl_r_cd
    reply->provider[i]->physician_ind = p.physician_ind
    reply->provider[i]->prsnl_person_id = r.prsnl_person_id
  with nocounter

  set stat = alterlist(reply->provider, i)  ;74836

;ss003+
;first check to make sure we have the encntr_code_value_r table
  if (Column_Exists("ENCNTR_CODE_VALUE_R", "ENCNTR_ID"))
    ;retrieve preadmit_testing_cd's and add them to the multi_preadmit_testing record
    select into "nl:"
      from encntr_code_value_r e
      
     ;+74836 
     ;where e.encntr_id = encntr_id   
     ;and e.code_set + 0 = 366 
     where e.encntr_id = request->encntr_id    
       and e.code_set = 366
       and e.active_ind = 1                                                ;286328
	   and e.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)         ;286328
	   and e.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)         ;286328  
     ;-74836
     
    detail
      pt_cnt = pt_cnt + 1
      if (mod(pt_cnt, 10) = 1)
        stat = alterlist(reply->multi_preadmit_testing, pt_cnt + 9)
      endif
      reply->multi_preadmit_testing[pt_cnt]->preadmit_testing_cd = e.code_value
    with nocounter
    
    ;resize list structure
    if (pt_cnt > 0)
      set stat = alterlist(reply->multi_preadmit_testing, pt_cnt)
    endif
  endif
;ss003-

;If we get here, return a good status
  set reply->status_data->status = "S"
;#2999_READ_EXIT  ;74836


#9999_EXIT_PROGRAM
  call echorecord(reply)
  end 
  go

;Generated by GNU enscript 1.6.4.
