 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Reportselection/bbt_rpt_locked_prods.prg Turn on black mode

/*****************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2005 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_rpt_locked_prods.prg
        Object name:            bbt_rpt_locked_prods
        Request #:              225650

        Product:                Blood Bank
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            8.2.1

        Program purpose:        Provide a database audit for modification options

        Tables read:            PRODUCT
                                BLOOD_PRODUCT
                                PRSNL
                                APPLICATION_CONTEXT
                                APPLICATION

        Tables updated:         None

        Executing from:         OpsView Scheduler, Report Selection

        Special Notes:          None

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 04/20/04 Jim Jensen           Initial Release                     *
;    *001 06/29/04 David Fifer          Rearranged the report to handle a 25*
;    *                                  character eurocode product number.  *
;    *002 02/02/05 Cedric Daniels		If there is a fourth line for the   *
;	 *									address, it won't get over written  *
;    *									by the owner and inventory.         *
;    *003 10/13/05 Jason Coy            Shorten report filename to deal with*
;    *                                  large sequence numbers.             *
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_rpt_locked_prods:dba go
create program bbt_rpt_locked_prods:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************
    record request
    (
        1  beg_dt_tm                = dq8
        1  end_dt_tm                = dq8
        1  batch_selection          = c100
        1  output_dist              = c100
        1  ops_date                 = dq8
        1  cur_owner_area_cd        = f8
        1  cur_inv_area_cd          = f8
        1  address_location_cd      = f8
    )
*/

/****************************************************************************
* Reply Record                                                              *
****************************************************************************/
record reply
(
  1 rpt_list[*]
    2 rpt_filename          = vc
%i cclsource:status_block.inc
)

/****************************************************************************
* Internationalization                                                      *
****************************************************************************/
%i cclsource:i18n_uar.inc

set i18nHandle = 0
set h = uar_i18nlocalizationinit(i18nHandle, curprog, "", curcclrev)

record captions
(
   1 rpt_locked_unit            = vc
   1 time                       = vc
   1 as_of_date                 = vc
   1 bb_owner                   = vc
   1 inventory_area             = vc
   1 beg_date                   = vc
   1 end_date                   = vc
   1 lock_dt_tm                 = vc
   1 product_nbr                = vc
   1 product_type               = vc
   1 tech                       = vc
   1 application                = vc
   1 device_location            = vc
   1 all                        = vc
   1 unknown                    = vc
   1 report_id                  = vc
   1 page_no                    = vc
   1 printed                    = vc
   1 end_of_report              = vc
)

set captions->rpt_locked_unit = uar_i18ngetmessage(i18nHandle,
  "rpt_locked_unit", "L O C K E D   U N I T S   R E P O R T")
set captions->time = uar_i18ngetmessage(i18nHandle,
  "time", "Time:")
set captions->as_of_date  = uar_i18ngetmessage(i18nHandle,
  "as_of_date", "As of Date:")
set captions->bb_owner = uar_i18ngetmessage(i18nHandle,
  "bb_owner", "Blood Bank Owner: ")
set captions->inventory_area = uar_i18ngetmessage(i18nHandle,
  "inventory_area", "Inventory Area: ")
set captions->beg_date = uar_i18ngetmessage(i18nHandle,
  "beg_date", "Beginning Date:")
set captions->end_date = uar_i18ngetmessage(i18nHandle,
  "end_date", "Ending Date:")
set captions->lock_dt_tm = uar_i18ngetmessage(i18nHandle,
  "lock_dt_tm", "Lock Dt/Tm")
set captions->product_nbr = uar_i18ngetmessage(i18nHandle,
  "product_nbr", "Product Number/")
set captions->product_type = uar_i18ngetmessage(i18nHandle,
  "product_type", "Product Type")
set captions->tech = uar_i18ngetmessage(i18nHandle,
  "tech", "Tech")
set captions->application = uar_i18ngetmessage(i18nHandle,
  "application", "Application")
set captions->device_location = uar_i18ngetmessage(i18nHandle,
  "device_location", "Device Location")
set captions->all = uar_i18ngetmessage(i18nHandle,
  "all", "(All)")
set captions->unknown = uar_i18ngetmessage(i18nHandle,
  "unknown", "<Unknown>")
set captions->report_id = uar_i18ngetmessage(i18nHandle,
  "report_id", "Report ID: BBT_RPT_LOCK_PRD")
set captions->page_no = uar_i18ngetmessage(i18nHandle,
  "page_no", "Page:")
set captions->printed = uar_i18ngetmessage(i18nHandle,
  "printed", "Printed:")
set captions->end_of_report = uar_i18ngetmessage(i18nHandle,
  "end_of_report", "* * * End of Report * * *")
 
/**************************************************************************/
/*       variables used in the script                                     */
/**************************************************************************/
;declare variables
declare rpt_cnt                 = i4  with private,   noconstant(0)
declare count1                  = i4  with private,   noconstant(0)
declare select_ok_ind           = i2  with protected, noconstant(0)
declare cur_owner_area_disp     = c40 with protected, noconstant(" ")
declare cur_inv_area_disp       = c40 with protected, noconstant(" ")

set reply->status_data->status  = "S"
set cur_owner_area_disp         = fillstring(40," ")
set cur_inv_area_disp           = fillstring(40, " ")

/****************************************************************************
* Script                                                                    *
****************************************************************************/

/* If printing from OPS, set-up beg/end_dt_tm */
if (trim(request->batch_selection) > " ")
  set begday = request->ops_date
  set endday = request->ops_date
  set temp_string = cnvtupper(trim(request->batch_selection))
  CALL CHECK_OPT_DATE_PASSED("bbt_rpt_locked_prods")
  if (reply->status_data->status != "F")
        set request->beg_dt_tm = begday
        set request->end_dt_tm = endday
  endif

  call CHECK_OWNER_CD ("bbt_rpt_locked_prods")
  call CHECK_INVENTORY_CD ("bbt_rpt_locked_prods")
  call CHECK_LOCATION_CD ("bbt_rpt_locked_prods")
endif

;Process values in the request->batch_selection field when running from operations
%i cclsource:bbt_ops_parm_passed.inc

;013 -has to be after batch_selection processing
%i cclsource:bbt_get_location_info.inc

/* Retrieve display values for requested Owner Area and Inventory Area */
if (request->cur_owner_area_cd = 0.0)
   set cur_owner_area_disp = captions->all
else
   set cur_owner_area_disp = uar_get_code_display(request->cur_owner_area_cd)
endif

if (request->cur_inv_area_cd = 0.0)
   set cur_inv_area_disp = captions->all
else
   set cur_inv_area_disp = uar_get_code_display(request->cur_inv_area_cd)
endif

execute cpm_create_file_name_logical "bbt_rpt_lock_prd", "txt", "x"

  select into cpm_cfn_info->file_name_logical
         pr.product_id,
         pr.product_nbr,
         pr.product_sub_nbr,
         prod_type = uar_get_code_display(pr.product_cd),
         pr.locked_ind,
         pr.updt_dt_tm,
         pr.updt_applctx,
         pr.updt_id,
         bp.supplier_prefix,
         pnl.username,
         ac.applctx,
         ac.device_location,
         a.application_number,
         a.description
 
  from   product pr,
         blood_product bp,
         prsnl pnl,
         application_context ac,
         application a
 
  plan   pr  where pr.locked_ind = 1
              and (pr.updt_dt_tm > cnvtdatetime(request->beg_dt_tm)
              and  pr.updt_dt_tm < cnvtdatetime(request->end_dt_tm))
 
              and ((request->cur_owner_area_cd > 0.0
              and   request->cur_owner_area_cd = pr.cur_owner_area_cd)
               or  (request->cur_owner_area_cd = 0.0))
 
              and ((request->cur_inv_area_cd > 0.0
              and   request->cur_inv_area_cd = pr.cur_inv_area_cd)
               or  (request->cur_inv_area_cd = 0.0))
 
  join   bp  where bp.product_id        = outerjoin(pr.product_id)
  join   pnl where pnl.person_id        = pr.updt_id
  join   ac  where ac.applctx           = outerjoin(pr.updt_applctx)
  join   a   where a.application_number = outerjoin(ac.application_number)

  order by
         pr.updt_dt_tm,
         pr.product_nbr,
         pr.product_id
 
head report
  beg_dt_tm     = cnvtdatetime(request->beg_dt_tm)
  end_dt_tm     = cnvtdatetime(request->end_dt_tm)
  line1         = fillstring(11, "-")		;001
  line2         = fillstring(25, "-")		;001
  line3         = fillstring(10, "-")
  line4         = fillstring(45, "-")		;001
  line5         = fillstring(25, "-")
  line6         = fillstring(125, "-")
  application   = fillstring(48, " ")
  device        = fillstring(25, " ")
  new_page      = "Y"
 
head page

  col 104, captions->time
  col 118, curtime "@TIMENOSECONDS;;M"
  row + 1
  col 104, captions->as_of_date
  col 118, curdate "@DATECONDENSED;;d"
  
%i cclsource:bbt_print_location_info.inc
 
  SAVE_ROW = ROW
  ROW 1  
  call center(captions->rpt_locked_unit, 1, 125)
  ROW SAVE_ROW
  ROW + 1
  col   1, captions->bb_owner
  col  19, cur_owner_area_disp
  row + 1
  col   1, captions->inventory_area
  col  17, cur_inv_area_disp
  row + 2
 
  col  32, captions->beg_date
  col  48, beg_dt_tm "@DATETIMECONDENSED;;d"
  col  69, captions->end_date
  col  82, end_dt_tm "@DATETIMECONDENSED;;d"
  row + 2
 
  call center(captions->product_nbr, 13, 37)			;001
  row + 1
  call center(captions->lock_dt_tm, 1, 11)				;001
  call center(captions->product_type, 13, 37)			;001
  call center(captions->tech, 39, 47)					;001
  call center(captions->application, 50, 98)			;001
  call center(captions->device_location, 100, 124)
  row + 1
  col   1, line1
  col  13, line2		;001
  col  39, line3		;001
  col  50, line4		;001
  col 100, line5
  row + 1
 
head pr.product_id
  product_display = concat(trim(bp.supplier_prefix), trim(pr.product_nbr), " ", trim(pr.product_sub_nbr))

detail
  if (new_page = "N")
    row + 2
    if (row > 54)
      break
      new_page = "Y"
    endif
  endif
  col   1, pr.updt_dt_tm "@DATECONDENSED;;d"
  col  13, product_display						;001
  col  39, pnl.username							;001
  if (ac.applctx > 0)
    application = a.description
    device      = ac.device_location
  else
    application = captions->unknown
    device      = captions->unknown
  endif
  col  50, application		;001
  col 100, device
 
  row + 1
  if (row > 56)
    break
    new_page = "Y"
  else
    new_page = "N"
  endif
 
  col   1, pr.updt_dt_tm "@TIMENOSECONDS;;M"
  col  13, prod_type							;001
 
foot page
  row  57
  col   0, line6
  row + 1
  col   1, captions->report_id
  col  58, captions->page_no
  col  64, curpage "###"
  col 100, captions->printed
  col 110, curdate "@DATECONDENSED;;d"
  col 120, curtime "@TIMENOSECONDS;;M"
 
foot report
  row  60
  col  51, captions->end_of_report
  select_ok_ind = 1
 
with  nocounter,
      nullreport,
      maxrow = 61,
      nolandscape,
      compress
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if (select_ok_ind = 0)
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alterlist(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->status = "F"
    set reply->status_data->subeventstatus[count1]->OperationName = "Select failed"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_rpt_locked_prods"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = build("Report not generated")
else
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alterlist(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->status = "S"
    set reply->status_data->subeventstatus[count1]->OperationName = "Generate Locked Units Rpt"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "S"
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_rpt_locked_prods"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = build("Report generated successfully")
endif
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set rpt_cnt = rpt_cnt +1
set stat = alterlist(reply->rpt_list, rpt_cnt)
set reply->rpt_list[rpt_cnt].rpt_filename = concat("cer_print:", cpm_cfn_info->file_name)

if (trim(request->batch_selection) > " ")
   set i = 0
   for (i = 1 to rpt_cnt)
      set spool value(reply->rpt_list[i].rpt_filename) VALUE(request->Output_Dist) ;WITH NOTIFY
   endfor
endif
 
#EXIT_SCRIPT
if (select_ok_ind = 1)
    set reply->status_data->status = "S"
else
    set reply->status_data->status = "F"
endif

end
go

;Generated by GNU enscript 1.6.4.
