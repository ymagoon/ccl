 ;;Solution_Test/script/PathNet -- BB Transfusion/bbt_rpt_state_chg_err/bbt_rpt_state_chg_err.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-2010 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_rpt_state_chg_err.prg
        Object name:            bbt_rpt_state_chg_err 
        Request #:              225047

        Product:                Blood Bank Transfusion
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Report products with status not updated correctly

        Tables read:            bb_edn_admin, 
                                bb_edn_product, 
                                bb_edn_problem, 
                                person,
                                prsnl

        Tables updated:         none

        Executing from:         VB

        Special Notes:          none
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date       Engineer             Comment                           *
;    *--- --------   -------------------- --------------------------------- *
;     001 04/30/2010 Ronda Zheng          Initial Release                   *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_rpt_state_chg_err :dba go
create program bbt_rpt_state_chg_err :dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/        
/*
record request
(
  1  beg_dt_tm                = di8
  1  end_dt_tm                = di8
  1  ops_date                 = dq8
  1  batch_selection          = c100
  1  output_dist              = c100
  1  facility_cd              = f8  
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
  1 rpt_list[*]
    2 rpt_filename  = vc
%i cclsource:status_block.inc
)

/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
declare rpt_cnt   = i2   with protect, noconstant(0)
declare LINE131   = c131 with protect, constant(fillstring(131, "-"))
 
declare i18nHandle          = i4   with protect, noconstant(0)
declare stat                = i4   with protect, noconstant(0)
declare facility_disp       = vc   with protect, noconstant(fillstring(40,""))

/*****************************************************************************
* Internationalization                                                       *
*****************************************************************************/
%i cclsource:i18n_uar.inc                										  
                                                                       
set i18nHandle = 0                                                     
set h = uar_i18nlocalizationinit(i18nHandle, curprog, "", curcclrev)
record captions
(
  1 as_of_date          = vc
  1 rpt_time            = vc
  1 beg_date            = vc
  1 end_date            = vc
  1 rpt_title           = vc
  1 rpt_page            = vc
  1 rpt_id              = vc
  1 end_of_report       = vc
  1 facility            = vc
  1 all                 = vc
  1 date                = vc
  1 product_number      = vc
  1 reason              = vc
  1 product_type        = vc
  1 div                 = vc
  1 prsnl               = vc
  1 patient             = vc
  1 name                = vc
  1 identifier          = vc
  1 dob                 = vc
)

set captions->as_of_date = uar_i18ngetmessage(i18nHandle,
  "as_of_date", "As Of Date:")
set captions->rpt_time = uar_i18ngetmessage(i18nHandle,
  "rpt_time", "Time:")  
set captions->beg_date = uar_i18ngetmessage(i18nHandle,
  "beg_date", "Beginning Date:")
set captions->end_date = uar_i18ngetmessage(i18nHandle,
  "end_date", "Ending Date:")  
set captions->rpt_title = uar_i18ngetmessage(i18nHandle,
  "rpt_title", "PRODUCT STATUS NOT UPDATED")
set captions->rpt_page = uar_i18ngetmessage(i18nHandle,
  "rpt_page", "Page:")
set captions->rpt_id = uar_i18ngetmessage(i18nHandle,
  "rpt_id", "Report ID:")  
set captions->end_of_report = uar_i18ngetmessage(i18nHandle,
  "end_of_report", "*** End of Report ***")  
set captions->facility = uar_i18ngetmessage(i18nHandle,
  "facility", "Facility")    
set captions->all = uar_i18ngetmessage(i18nHandle,
  "all", "(All)")  
set captions->date = uar_i18ngetmessage(i18nHandle,
  "date", "Date")    
set captions->product_number = uar_i18ngetmessage(i18nHandle,
  "product_number", "Product Number")
set captions->reason = uar_i18ngetmessage(i18nHandle,
  "reason", "Reason")
set captions->product_type = uar_i18ngetmessage(i18nHandle,
  "product_type", "Product Type")  
set captions->div = uar_i18ngetmessage(i18nHandle,
  "div", "Div")   
set captions->prsnl = uar_i18ngetmessage(i18nHandle,
  "prsl", "Personnel") 
set captions->patient = uar_i18ngetmessage(i18nHandle,
  "patient", "Patient")   
set captions->name = uar_i18ngetmessage(i18nHandle,
  "name", "Name")
set captions->identifier = uar_i18ngetmessage(i18nHandle,
  "identifier", "Identifier")
set captions->dob = uar_i18ngetmessage(i18nHandle,
  "dob", "DOB")

;Process values in the request->batch_selection field when running from operations
%i cclsource:bbt_ops_parm_passed.inc
%i cclsource:bbt_get_location_info.inc

if (trim(request->batch_selection) > " ")
  set temp_string = cnvtupper(trim(request->batch_selection))
  set begday = request->ops_date
  set endday = request->ops_date
  
  CALL CHECK_OPT_DATE_PASSED("bbt_rpt_state_chg_err")
  if (reply->status_data->status != "F")
      set request->beg_dt_tm = begday
      set request->end_dt_tm = endday
  endif
  
  call CHECK_FACILITY_CD ("bbt_rpt_state_chg_err")
endif

declare DEVICE_INVALID_MEANING = vc with protect, constant("DEVICE_INVD")

;Check if there is any qualified row in bb_edn_admin table.
select into "nl:"
      bea.bb_edn_admin_id 
from
      bb_edn_admin bea
      
where bea.admin_dt_tm between cnvtdatetime(request->beg_dt_tm) and cnvtdatetime(request->end_dt_tm)
  and ((request->facility_cd != 0.0 and bea.destination_loc_cd = request->facility_cd )
        or  request->facility_cd = 0.0)
  and bea.bb_edn_admin_id > 0
  and bea.edn_complete_ind = 0
  and (bea.protocol_nbr = 5
  	or bea.protocol_nbr = 100)
  
with nocounter, maxqual(bea, 1)

if (curqual = 0)
   set reply->status_data->status = "Z"
   go to EXIT_SCRIPT
endif

;Generate a unique filename for the report
execute cpm_create_file_name_logical "bbt_statechgerr", "txt", "x"

set rpt_cnt = rpt_cnt + 1
set stat = alterlist(reply->rpt_list, rpt_cnt)
set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

set cur_owner_area_disp = fillstring(40," ")
set cur_inv_area_disp = fillstring(40, " ")
set q = 0
 
/* Retrieve display values for requested facility*/
if (request->facility_cd = 0.0)
   set facility_disp = captions->all
else
   set facility_disp = uar_get_code_display(request->facility_cd)   
endif
 
select into cpm_cfn_info->file_name_logical
      admin_date = cnvtdate(bea.admin_dt_tm),
      bb_edn_prod_id = bep.bb_edn_product_id,
      product_number = trim(substring(1, 20, bep.edn_product_nbr_ident)),
      product_disp = trim(substring(1, 25, uar_get_code_display(bep.product_cd))),
      product_code = trim(substring(1, 25, bep.product_type_txt)),
      div = trim(bep.product_sub_nbr_txt),
      prsnl_name = trim(substring(1, 16, pr.name_full_formatted)),
      person_name = trim(substring(1, 16, p.name_full_formatted)),
      person_alias = trim(substring(1, 20, cnvtalias(bep.alias, bep.alias_pool_cd))),
      person_dob = cnvtdatetime(p.birth_dt_tm),
      reason = trim(uar_get_definition(bepb.problem_type_cd)),
      reason_mean = uar_get_code_meaning(bepb.problem_type_cd)
     
from
      bb_edn_admin    bea,
      bb_edn_product  bep,
      bb_edn_problem  bepb,
      prsnl           pr,
      person          p
	    
plan  bea where	bea.admin_dt_tm between cnvtdatetime(request->beg_dt_tm) and cnvtdatetime(request->end_dt_tm)
            and ((request->facility_cd != 0.0 and bea.destination_loc_cd = request->facility_cd)
                  or request->facility_cd = 0.0)
            and bea.bb_edn_admin_id > 0
            and bea.edn_complete_ind = 0 
            and (bea.protocol_nbr = 5
            or bea.protocol_nbr = 100)
                  
join  bep where bep.bb_edn_admin_id = bea.bb_edn_admin_id
		        and bep.product_complete_ind = 0
		        
join  bepb where bepb.bb_edn_product_id = bep.bb_edn_product_id

join  p   where p.person_id = bep.person_id

join  pr  where pr.person_id = bep.event_prsnl_id

order by
      admin_date,
      product_number,
      bep.bb_edn_product_id 
 
head report
    row 0
 
head page
    row 0
    call center(captions->rpt_title, 0, 125)
    col 110, captions->rpt_time
    col 122, curtime
    row + 1
    col 110, captions->as_of_date
    col 122, curdate "@DATECONDENSED;;d"
    SAVE_ROW = row
%i cclsource:bbt_print_location_info.inc
    if( SAVE_ROW > row )
        row SAVE_ROW
    endif
    row + 1
    col 30, captions->beg_date
    col 46, request->beg_dt_tm "@DATETIMECONDENSED;;d"
    col 72, captions->end_date
    col 85, request->end_dt_tm "@DATETIMECONDENSED;;d"
    row + 2 
    col 0,  captions->facility
    col 12, facility_disp
    row + 2
    col 3,  captions->product_number
    col 24, captions->product_type
    col 50, captions->div
    col 56, captions->prsnl
    col 77, captions->patient
    col 98, captions->patient
    col 119, captions->patient
    row + 1
    col 3,  captions->reason
    col 56, captions->name 
    col 77, captions->name
    col 98, captions->identifier
    col 119, captions->dob    
    row + 1
    col 0,  LINE131
    row + 1
 
head admin_date
    if( row > 52 )
        break
    endif
    col 0, admin_date "@SHORTDATE;;d"
    row + 2
 
head product_number
    row + 0 
    
head bep.bb_edn_product_id
    if(row > 54)
    	break
    endif
    
    col 3,  product_number
    if (product_disp > " ")
      col 24, product_disp
    else
      col 24, product_code
    endif
    col 50, div    
    col 56, prsnl_name
    col 77, person_name
    col 98, person_alias
    if(bep.person_id > 0)
    	col 119, person_dob "@SHORTDATE;;d"
    endif
    row + 1

detail
    if(row > 55)
    	break
    endif
	if(reason_mean = DEVICE_INVALID_MEANING)
    	col 3, reason 
    	col 35, bep.device_txt
    else
    	col 3, reason
    endif
    row + 2
 
foot product_number
  row + 0
 
foot admin_date
    row + 1
 
foot page
    row 57
    col 0, LINE131
    row + 1
    col 0,  captions->rpt_id
    col 11, cpm_cfn_info->file_name
    col 113, captions->rpt_page
    col 120, curpage ";l"
    row + 1
 
foot report
    row 59
    call center(captions->end_of_report, 1, 125)
with  nocounter,
      maxrow = 61,
      nullreport,
      compress, nolandscape 
      
if (trim(request->batch_selection) > " ")
  set spool value(reply->rpt_list[rpt_cnt].rpt_filename) value(request->output_dist)
endif

set reply->status_data->status = "S"

#EXIT_SCRIPT
end 
go

;Generated by GNU enscript 1.6.4.
