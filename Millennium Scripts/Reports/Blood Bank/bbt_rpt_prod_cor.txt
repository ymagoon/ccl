 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Reportselection/bbt_rpt_prod_cor.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_rpt_prod_cor.prg
        Object name:            bbt_rpt_prod_cor
        Request #:              225236

        Product:                Blood Bank Transfusion
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Report pertinent information relating to all
                                products that have been corrected during a user
                                defined date range

        Tables read:            code_value

        Tables updated:         none

        Executing from:         VB

        Special Notes:          none
****************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 11/04/96 Brian Franke         Initial Release                     *
;     005 06/12/97 Doug Saus            Modified to select owner and        *
;                                       inventory areas                     *
;         09/09/97 John Weekes          Modified to include expected_usage_ *
;                                       date, patient_name, patient_id if   *
;                                       corrected (for autologous product)  *
;         10/09/97 David Hall           Prints corrected pool product with  *
;                                       proper format.                      *
;         12/03/97 David Hall           Prints corrected blood product      *
;                                       prefix, alphatranslation changes and*
;                                       derivative,manufacturer, quantity,  *
;                                       and international unit changes.     *
;     006 03/24/98 Matt Benson          Modified to retrieve Institution    *
;                                       name from preferences               *
;     007 06/08/98 Amy Therrien         Modified to include Visual Insp. &  *
;                                       shipping condition to report
;     008 10/08/98 Jon Weekes           Modified format of Correct Pooled   *
;                                       Product Report and created "select" *
;                                       variables for Blood_Product fields  *
;                                       to correct display of bp data which *
;                                       was displaying blank                *
;     009 12/29/98 Jose Suarez          Added logic to print location name  *
;                                       and address. Added address_location_cd
;                                       to request. Added bbt_get_location_info.inc
;                                       Added bbt_print_location_info.inc   *
;    010 04/30/99 Badari Kopparapu      Reorganized this script so that each*
;                                       correction is in a seperate prg file*
;                                       and .inc files are made to share the*
;                                       most common code.                   *
;     011 05/21/99 Jose Suarez          change cer_temp to cer_print        *
;     012 09/01/99 Badari Kopparapu     Modified to use bbt_ops_owninvloc.inc
;                                       for processing owner area, inventory*
;                                       area & location address from batch  *
;                                       selection field in Ops Job Templates*
;                                       Modified to use ops_date for computing
;                                       the report date range.              *
;     013 11/10/99 Jose Suarez          Enhancement when running from ops   *
;                                       removed bbt_ops_owninvloc.inc and   *
;                                       added bbt_ops_parm_passed.inc       *
;     014 02/09/00 Jon Weekes           Added declaration for rpt_filename  *
;       to accommodate varying file name lengths.                           *
;     015 08/09/00 Lawrence Dsouza      internationalized date and time     *
;     016 03/09/01 Chris Noe		    Internationalize text			    *
;     017 07/26/02 Jason Osborn			Unique RPT filename project			*
;     018 11/24/03 Chris Noe            Removed temp_string per             *
;                                       CAPEP00018259.                      *
;     019 12/16/03 John Rieck           Updated with "change indicators" to *
;                                       help determine if data has changed. *
;     020 05/13/04 Jim Jensen           Remove "Select" for own/inv info and*
;                                       use UAR, instead.                   *
;     021 05/28/04 Hal Patchen          Add the temp_string variable back   *
;                                       that was removed by mod 018.  It is *
;                                       used by the BBT_OPT_PARM_PASSED.inc * 
;	  022 12/19/05 Joe Troy             Add Change to accept Final          *
;                                       Disposition report                  *
;     023 01/25/06 Jason Coy            Update to handle donation type and  *
;                                       disease.                            *
;     024 07/03/07 Nikhil Shah          Fixed CR 1-1168031338               *
;     025 06/25/10 Christi Ditmars	    Add recon correction type           *
;     026 02/10/14 Fitsum Abebe         Added Dispense product order        *
;                                       Correction report                   *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_rpt_prod_cor:dba go
create program bbt_rpt_prod_cor:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
          1  beg_dt_tm = di8
          1  end_dt_tm = di8
          1  correction_type_cd = f8
          1  printer_name             = vc
          1  batch_selection          = c100
          1  output_dist              = c100
          1  ops_date                 = dq8
          1  cur_owner_area_cd  = f8
          1  cur_inv_area_cd    = f8
          1  address_location_cd = f8
          1  null_ind = i2
        )
        */

/****************************************************************************
*       Reply record                                                        *
****************************************************************************/
record reply
(
  1 rpt_list[*]
    2 rpt_filename  = vc
%i cclsource:status_block.inc
)

;Begin 016
/*****************************************************************************
* Internationalization                                                       *
*****************************************************************************/
%i cclsource:i18n_uar.inc

;Process values in the request->batch_selection field when running from operations
%i cclsource:bbt_ops_parm_passed.inc

set i18nHandle = 0
set h = uar_i18nlocalizationinit(i18nHandle, curprog, "", curcclrev)

declare dDemogCd = f8 with protect, noconstant(0.0)
declare dErdisCd = f8 with protect, noconstant(0.0)
declare dUnlockCd = f8 with protect, noconstant(0.0)
declare dDispCd = f8 with protect, noconstant(0.0)
declare dPoolCd = f8 with protect, noconstant(0.0)
declare dSpecCd = f8 with protect, noconstant(0.0)
declare dReconCd = f8 with protect, noconstant(0.0)
declare sRet = vc with protect, noconstant(" ")
declare chg_recon_cd = f8 with protect, noconstant (0.0)
declare chg_recon_disp = vc with protect


declare GetOpsParam(sParam = vc) = vc with persist

record captions
(
  1  all       				 = vc
)

set captions->all = uar_i18ngetmessage(i18nHandle, "all", "(All)")
;End 016

record cor_pr
(
 1  cor_rec[*]
    2  correction_type_cd= f8
    2  correction_reason = c18
    2  product_nbr       = c20
    2  product_sub_nbr   = c5
    2  supplier_prefix   = c5
    2  alternate_nbr     = c20
    2  product_type      = c30
    2  ship_cond         = c30  ;added ALT 6-8-98 #007
    2  vis_insp          = c30  ;added ALT 6-8-98 #007
    2  product_cat       = c30
    2  product_class     = c30
    2  org_name          = c30
    2  recv_dt_tm        = dq8
    2  volume            = i4
    2  unit_of_measure   = c25
    2  expire_dt_tm      = dq8
    2  drawn_dt_tm       = dq8  ;DMS 7-29-98
    2  abo_cd            = f8
    2  abo_disp          = c40
    2  rh_cd             = f8
    2  rh_disp           = c40
    2  aborh_disp        = c80
    2  intended_use      = vc
    2  segment_nbr       = c25
    2  username          = c6
    2  updt_dt_tm        = dq8
    2  correction_note   = vc
    2  ad_ind            = i2       ;added JOW 08/27/97
    2  person_id         = f8       ;added JOW 08/27/97
    2  encntr_id         = f8       ;added JOW 08/27/97
    2  ad_disp_name      = c27      ;added JOW 08/27/97
    2  ad_disp_alias       = c20    ;added JOW 08/27/97
    2  expected_usage_dt_tm = dq8   ;added JOW 08/27/97
    2  owner_area_disp   = c40
    2  inv_area_disp     = c40
    2  manufacturer_id   = f8
    2  manu_name         = c30
    2  cur_avail_qty     = i4
    2  cur_intl_units    = i4
    2  spcltst[*]
        3  new_spec_test_ind    = i2
        3  special_testing_cd   = f8
        3  special_testing_disp = c12
    2  abo_cd_chg_ind               = i2
    2  alternate_nbr_chg_ind        = i2
    2  correction_note_chg_ind      = i2
    2  cur_avail_qty_chg_ind        = i2
    2  cur_intl_units_chg_ind       = i2
    2  cur_inv_area_cd_chg_ind      = i2
    2  cur_owner_area_cd_chg_ind    = i2
    2  drawn_dt_tm_chg_ind          = i2
    2  encntr_id_chg_ind            = i2
    2  expected_usage_dt_tm_chg_ind = i2
    2  expire_dt_tm_chg_ind         = i2
    2  manufacturer_id_chg_ind      = i2
    2  person_id_chg_ind            = i2
    2  product_cat_cd_chg_ind       = i2
    2  product_cd_chg_ind           = i2
    2  product_class_cd_chg_ind     = i2
    2  product_nbr_chg_ind          = i2
    2  product_sub_nbr_chg_ind      = i2
    2  recv_dt_tm_chg_ind           = i2
    2  rh_cd_chg_ind                = i2
    2  intended_use_chg_ind         = i2
    2  segment_nbr_chg_ind          = i2
    2  ship_cond_cd_chg_ind         = i2
    2  supplier_id_chg_ind          = i2
    2  supplier_prefix_chg_ind      = i2
    2  unit_meas_cd_chg_ind         = i2
    2  vis_insp_cd_chg_ind          = i2
    2  volume_chg_ind               = i2
    2  donation_type_disp           = c40
    2  donation_type_chg_ind        = i2
    2  disease_disp                 = c40
    2  disease_chg_ind              = i2
    2  product_type_bc_chg_ind		= i2
    2  product_type_bc				= vc
    2  units_per_vial				= i4
    2  units_per_vial_chg_ind   = i2
)

record st_rec
(
 1  st[*]
     2  special_testing_cd      = f8
     2  special_testing_disp    = c12
)


; return operations parameter value (as string) based on passed parameter.
; if param not found, then return empty string, otherwise return what was found
subroutine GetOpsParam(sParam)
	declare sTemp = vc with protect, noconstant(" ")
  	declare nPosBegin = i4 with protect, noconstant(0)
  	declare nPosEnd = i4 with protect, noconstant(0)
	; all comparisons to be done in uppercase
  	set sTemp = cnvtupper(trim(request->batch_selection))
  	set sParam = cnvtupper(sParam)
  	set nPosBegin = findstring(concat(sParam, "["), sTemp, 1, 0)
  	if(nPosBegin > 0)
  		; set begin position to start of found param + length of param + 1 for space after "["
  		set nPosBegin = nPosBegin + textlen(sParam) + 1
  		set nPosEnd = findstring("]", sTemp, nPosBegin, 0)
      	if (nPosEnd > 0)
        	return(substring(nPosBegin, nPosEnd - nPosBegin, sTemp))
		endif
	endif
    return("")
end


if (trim(request->batch_selection) > " ")
  set begday = request->ops_date
  set endday = request->ops_date
  set temp_string = cnvtupper(trim(request->batch_selection))
  CALL CHECK_OPT_DATE_PASSED("bbt_rpt_prod_cor")
  if (reply->status_data->status != "F")
        set request->beg_dt_tm = begday
        set request->end_dt_tm = endday
  endif

  call CHECK_OWNER_CD ("bbt_rpt_prod_cor")
  call CHECK_INVENTORY_CD ("bbt_rpt_prod_cor")
  call CHECK_LOCATION_CD ("bbt_rpt_prod_cor")
  ;Set this to a default of on.
  set request->null_ind = 1
  call CHECK_NULL_REPORT ("bbt_rpt_prod_cor")
  set request->printer_name = trim(request->output_dist)
  ; retrieve exception type if passed in
  set sRet = trim(GetOpsParam("COR"))
  set request->correction_type_cd = evaluate(isnumeric(sRet), 0, 0.0, cnvtreal(sRet))
endif

%i cclsource:bbt_get_location_info.inc

set cur_owner_area_disp = fillstring(40," ")
set cur_inv_area_disp = fillstring(40, " ")

/* Retrieve display values for requested Owner Area and Inventory Area */  
if (request->cur_owner_area_cd = 0.0)
   set cur_owner_area_disp = captions->all
else
   set cur_owner_area_disp = uar_get_code_display(request->cur_owner_area_cd)
endif

if (request->cur_inv_area_cd = 0.0)
   set cur_inv_area_disp = captions->all
else
   set cur_inv_area_disp = uar_get_code_display(request->cur_inv_area_cd)
endif

/******************************************************************************
                              Define Variables
******************************************************************************/
set line                        = fillstring(125,"_")
set type_display                = fillstring(40, " ")
set typ_idx                     = 0
set cor_idx                     = 0
set x                           = 0

SET y                           = 0
set unlock_cd                   = 0.0
set unlock_disp                 = fillstring(40, " ")
set erdis_cd                    = 0.0
set erdis_disp                  = fillstring(40, " ")
set chg_pool_cd                 = 0.0
set chg_pool_disp               = fillstring(40, " ")
set spec_test_cd                = 0.0
set spec_test_disp              = fillstring(40, " ")
set demog_cd                    = 0.0
set demog_disp                  = fillstring(40, " ")
set disp_cd                     = 0.0
set disp_disp                   = fillstring(40, " ")
set disProdOrdCd                = 0.0
set disProdOrd_disp             = fillstring(40, " ")


record text
(
 1  s_char         = c1
)

;Correction Note variables
set  b_cnt = 0                          /* Current character in b_strg */
set  b_strg = fillstring(255, " ")      /* the note to print */
set  col_cnt = 0                        /* current position of the column */
set  start_col_cnt = 0                  /* where to start    */
set  max_width = 0                      /* within this width */
set  pos_left = 0                       /* where to continue on the next line */
set  b_str_len = 0                      /* length of the correction note */

declare rpt_filename    = c30           ; 014

set temp_cdf_meaning = fillstring(12, " ")
set mrn_code = 0.0
set cv_cnt  = 1
set temp_cdf_meaning = "MRN"
set stat = uar_get_meaning_by_codeset(4, nullterm(temp_cdf_meaning), cv_cnt, mrn_code)

set mrn_encntr_alias_type_cd = 0.0
set cv_cnt = 1
set temp_cdf_meaning = "MRN"
set stat = uar_get_meaning_by_codeset(319, nullterm(temp_cdf_meaning), cv_cnt, mrn_encntr_alias_type_cd)

set rpt_cnt = 0

set dUnlockCd = uar_get_code_by("MEANING", 14115, "UNLOCK")
set dDemogCd = uar_get_code_by("MEANING", 14115, "DEMOG")
set dErdisCd = uar_get_code_by("MEANING", 14115, "ERDIS")
set dDispCd = uar_get_code_by("MEANING", 14115, "FINALDISP")
set dPoolCd = uar_get_code_by("MEANING", 14115, "POOL")
set dSpecCd = uar_get_code_by("MEANING", 14115, "SPECTEST")
set dReconCd = uar_get_code_by("MEANING", 14115, "RECONRBC")
set dDisProdOrder = uar_get_code_by("MEANING", 14115, "DISPPRODORD")

;execute this part only if unlock_product corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dUnlockCd) or (request->correction_type_cd = 0.0))
	execute cpm_create_file_name_logical "bbt_unlock_cor", "txt", "x"
	set unlock_cd = dUnlockCd
	set unlock_disp = uar_get_code_display(dUnlockCd)
    set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename =cpm_cfn_info->file_name_path

    execute bbt_rpt_unlock_cor with replace("CAPTIONS", "CAP1")
endif

;execute this part only if emergency dispense corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dErdisCd) or (request->correction_type_cd = 0.0))
    execute cpm_create_file_name_logical "bbt_erdis_corr", "txt", "x"
   	set erdis_cd = dErdisCd
	set erdis_disp = uar_get_code_display(dErdisCd)
    set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

    execute bbt_rpt_erdis_cor with replace("CAPTIONS", "CAP2")
endif

;execute this part only if pooled product corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dPoolCd) or (request->correction_type_cd = 0.0))
    execute cpm_create_file_name_logical "bbt_pool_prd_cor", "txt", "x"
   	set chg_pool_cd = dPoolCd
	set chg_pool_disp = uar_get_code_display(dPoolCd)
    set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

    execute bbt_rpt_pool_prod_cor with replace("CAPTIONS", "CAP3")
endif

;execute this part only if recon product corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dReconCd) or (request->correction_type_cd = 0.0))
    execute cpm_create_file_name_logical "bbt_recon_cor", "txt", "x"
   	set chg_recon_cd = dReconCd 
	set chg_recon_disp = uar_get_code_display(dReconCd)
    set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

    execute bbt_rpt_recon_prod_cor with replace("CAPTIONS", "CAP7")
endif

;execute this part only if special testing corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dSpecCd) or (request->correction_type_cd = 0.0))
    execute cpm_create_file_name_logical "bbt_spec_tst_cor", "txt", "x"
   	set spec_test_cd = dSpecCd
	set spec_test_disp = uar_get_code_display(dSpecCd)
	set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

    execute bbt_rpt_spec_test_cor with replace("CAPTIONS", "CAP4")
endif

;execute this part only if demographic corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dDemogCd) or (request->correction_type_cd = 0.0))
   	set demog_cd = dDemogCd
   	set demog_disp = uar_get_code_display(dDemogCd)

   	execute bbt_rpt_demog_cor with replace("CAPTIONS", "CAP5")
endif

;execute this part only if disposition corrections are requested or all corrections are requested.
if (request->correction_type_cd in(dDispCd, 0.0))
	execute cpm_create_file_name_logical "bbt_fin_disp_cor", "txt", "x"
	set disp_cd = dDispCd
	set disp_disp = uar_get_code_display(dDispCd)
    set rpt_cnt = rpt_cnt +1
    set stat = alterlist(reply->rpt_list, rpt_cnt)
    set reply->rpt_list[rpt_cnt].rpt_filename = cpm_cfn_info->file_name_path

    execute bbt_rpt_final_disp_cor with replace("CAPTIONS", "CAP6")
endif

;execute this part only if dispense product order corrections are requested or all corrections are requested.
if ((request->correction_type_cd = dDisProdOrder) or (request->correction_type_cd = 0.0))
    set disProdOrdCd = dDisProdOrder
    set disProdOrd_disp = uar_get_code_display(dDisProdOrder)
    execute bbt_rpt_disprodord_cor with replace("CAPTIONS", "CAP7")
endif

if (request->batch_selection > " ")
  set i = 0
  for (i = 1 to rpt_cnt)
      set spool value(reply->rpt_list[i].rpt_filename) value(request->printer_name)
  endfor
endif
set reply->status_data->status = "S"

#EXIT_SCRIPT
end go

;Generated by GNU enscript 1.6.4.
