 ;;Solution_Test/script/PathNet -- BB Transfusion/bb_rpt_quar_products/bb_rpt_quar_products.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2003 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
 
        Source file name:       bb_rpt_quar_products.prg
        Object name:            bb_rpt_quar_products
        Request #:              225676
 
        Product:                Blood Bank
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            Rev 8.0
 
        Program purpose:        Generate a report displaying all products that have been quarantined.
 
        Tables read:            PRODUCT_EVENT
                                QUARANTINE
                                QUARANTINE_RELEASE
                                BLOOD_PRODUCT
                                PRODUCT
 
        Tables updated:         NONE
 
        Executing from:         Report Selection
 
        Special Notes:          NONE
 
;~DB~****************************************************************************************
;*                      GENERATED MODIFICATION CONTROL LOG                                  *
;********************************************************************************************
;*                                                                                          *
;*Mod Date     Engineer             ITN     Feature      Comment                            *
;*--- -------- -------------------- ------- ------------ -----------------------------------*
;*000 1/26/05  Tom Brecht            0120161 65948        Initial Release                   *
;*001 6/12/06  Jason Osborn          0120163 65949        Correct Page Break Issue          *
;*001 5/27/09  Jacob Anderson        138814  209070       Correct File Name Create when     *
;                                                         queries above 10.000,000          *
;~DE~****************************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ***********************************/
 
drop program bb_rpt_quar_products:dba go
create program bb_rpt_quar_products:dba
 
 
/*****************************************************************************/
/* Request record                                                            */
/*****************************************************************************/
/*
record request
(
  1 beg_dt_tm           = dq8;                  ; DAY[], MONTH[], YEAR[]
  1 end_dt_tm           = dq8;                  ; DAY[], MONTH[], YEAR[]
  1 transfusion_ind     = i2;
  1 batch_selection     = c100;
  1 output_dist         = c100;
  1 ops_date            = dq8;
  1 cur_owner_area_cd   = f8;                   ; OWN[]
  1 cur_inv_area_cd     = f8;                   ; INV[]
  1 address_location_cd = f8;                   ; LOC[]
  1 null_ind            = i2;                   ; NULLRPT[]
)
*/
 
 
/*****************************************************************************/
/* Reply record                                                              */
/*****************************************************************************/
record reply
(
  1 rpt_list[*]
    2 rpt_filename  = vc
%i cclsource:status_block.inc
)
 
/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
set modify predeclare
 
declare i18nHandle          = i4   with protect, noconstant(0)
declare errmsg              = c132 with protect, noconstant(fillstring(132," "))
declare error_check         = i2   with protect, noconstant(error(errmsg,1))
declare stat                = i4   with protect, noconstant(0)
declare lastQuarProdEventID = f8   with noconstant(0.0)
 
declare SCRIPT_NAME         = c20  with protect, constant("bb_rpt_quar_products")
declare QUAR_CD             = f8   with protect, constant(uar_get_code_by("MEANING",1610,"2"))
declare BLOOD_CD            = f8   with protect, constant(uar_get_code_by("MEANING",1606,"BLOOD"))
declare DERIV_CD            = f8   with protect, constant(uar_get_code_by("MEANING",1606,"DERIVATIVE"))
declare LINE20              = c20  with protect, constant(fillstring(20, "-"))
declare LINE13              = c13  with protect, constant(fillstring(13, "-"))
declare LINE8               = c8   with protect, constant(fillstring(8, "-"))
declare LINE131             = c131 with protect, constant(fillstring(131, "-"))
 
 
/*****************************************************************************/
/* Internationalization                                                      */
/*****************************************************************************/
%i cclsource:i18n_uar.inc
 
set stat = uar_i18nlocalizationinit(i18nHandle, curprog, "", curcclrev)
 
record captions
(
  1 as_of_date          = vc
  1 beg_date            = vc
  1 end_date            = vc
  1 rpt_owner           = vc
  1 rpt_all             = vc
  1 rpt_inv_area        = vc
  1 rpt_quar_date       = vc
  1 rpt_quar_res        = vc
  1 rpt_prod_nbr        = vc
  1 rpt_aborh           = vc
  1 rpt_release         = vc
  1 rpt_date            = vc
  1 rpt_rel_reas        = vc
  1 rpt_title           = vc
  1 rpt_page            = vc
  1 rpt_time            = vc
  1 head_products       = vc
  1 rpt_qnty            = vc
  1 rpt_intl            = vc
  1 rpt_units           = vc
  1 end_of_report       = vc
)
 
set captions->as_of_date = uar_i18ngetmessage(i18nHandle,
  "as_of_date", "As Of Date:")
set captions->rpt_title = uar_i18ngetmessage(i18nHandle,
  "rpt_title", "SUMMARY OF PRODUCTS QUARANTINED AND RELEASED")
set captions->rpt_page = uar_i18ngetmessage(i18nHandle,
  "rpt_page", "Page:")
set captions->rpt_time = uar_i18ngetmessage(i18nHandle,
  "rpt_time", "Time:")
set captions->beg_date = uar_i18ngetmessage(i18nHandle,
  "beg_date", "Beginning Date:")
set captions->end_date = uar_i18ngetmessage(i18nHandle,
  "end_date", "Ending Date:")
set captions->rpt_owner = uar_i18ngetmessage(i18nHandle,
  "rpt_owner", "Blood Bank Owner:")
set captions->rpt_inv_area = uar_i18ngetmessage(i18nHandle,
  "rpt_inv_area", "Inventory Area:")
set captions->rpt_quar_date = uar_i18ngetmessage(i18nHandle,
  "rpt_quar_date", "Quarantine Date")
set captions->rpt_quar_res = uar_i18ngetmessage(i18nHandle,
  "rpt_quar_res", "Quarantine Reason")
set captions->rpt_prod_nbr = uar_i18ngetmessage(i18nHandle,
  "rpt_prod_nbr", "Product Number")
set captions->rpt_aborh = uar_i18ngetmessage(i18nHandle,
  "rpt_aborh", "ABO/Rh")
set captions->rpt_release = uar_i18ngetmessage(i18nHandle,
  "rpt_release", "Release")
set captions->rpt_date = uar_i18ngetmessage(i18nHandle,
  "rpt_date", "Date")
set captions->rpt_rel_reas = uar_i18ngetmessage(i18nHandle,
  "rpt_rel_reas", "Release Reason")
set captions->rpt_all = uar_i18ngetmessage(i18nHandle,
  "rpt_all", "(All)")
set captions->rpt_qnty = uar_i18ngetmessage(i18nHandle,
  "rpt_qnty", "Quantity")
set captions->rpt_intl = uar_i18ngetmessage(i18nHandle,
  "rpt_intl", "International")
set captions->rpt_units = uar_i18ngetmessage(i18nHandle,
  "rpt_units", "Units")
set captions->head_products = uar_i18ngetmessage(i18nHandle,
  "head_products", "Product")
set captions->end_of_report = uar_i18ngetmessage(i18nHandle,
  "end_of_report", "*** End of Report ***")
 
set lastQuarProdEventID = 0
 
/*****************************************************************************/
/* Script                                                                    */
/*****************************************************************************/
set reply->status_data->status = "Z"
 
if( QUAR_CD = 0.0 )
    set reply->status_data.status = "F"
    call subevent_add ("bb_rpt_quar_products.prg", "F", "uar_get_code_by",
        "Unable to retrieve the code_value for the quarantined cdf_meaning in code_set 1610.")
    go to EXIT_SCRIPT
endif
 
set modify nopredeclare
; Check for batch selection parameters
if (size(trim(request->batch_selection)) > 0)
    set begday = request->ops_date
    set endday = request->ops_date
    set temp_string = cnvtupper(trim(request->batch_selection))
    CALL CHECK_OPT_DATE_PASSED(SCRIPT_NAME)
    if (reply->status_data->status != "F")
        set request->beg_dt_tm = begday
        set request->end_dt_tm = endday
    endif
    call CHECK_OWNER_CD (SCRIPT_NAME)
    call CHECK_INVENTORY_CD (SCRIPT_NAME)
    call CHECK_LOCATION_CD (SCRIPT_NAME)
    call CHECK_NULL_REPORT(SCRIPT_NAME)
endif
 
%i cclsource:pcs_subevent.inc
%i cclsource:bbt_ops_parm_passed.inc
%i cclsource:bbt_get_location_info.inc
 
set modify predeclare
 
set reply->status_data->status = "F";Set now to allow batch parameters to be checked
 
; Generate a unique filename for the report
execute cpm_create_file_name_logical "bb_quar_prods", "txt", "x"
 
select
    if (request->null_ind = 1)
        with nullreport, compress, nolandscape
    else
        with nocounter, compress, nolandscape
    endif
 
into cpm_cfn_info->file_name_logical
    q_quar_reason_disp = substring(1, 20, uar_get_code_display( q.quar_reason_cd )),
    qr_release_reason_disp = substring(1, 20, uar_get_code_display( qr.release_reason_cd )),
    product_number = substring(1, 20, concat( trim(bp.supplier_prefix), trim(p.product_nbr), " ", trim(p.product_sub_nbr) )),
    quar_date = cnvtdate(pe.event_dt_tm),
    p_product_disp = substring(1, 20, uar_get_code_display( p.product_cd )),
    p_inv_area = uar_get_code_display( p.cur_inv_area_cd ),
    p_owner_area = uar_get_code_display( p.cur_owner_area_cd ),
    aborh = substring(1, 10, concat(trim(uar_get_code_display( bp.cur_abo_cd )), " ", trim(uar_get_code_display( bp.cur_rh_cd ))))
 
from
    product_event  pe,
    quarantine  q,
    quarantine_release  qr,
    product  p,
    blood_product  bp
 
plan pe where  pe.event_type_cd = QUAR_CD
          and  pe.event_dt_tm between cnvtdatetime( request->beg_dt_tm )
                                  and cnvtdatetime( request->end_dt_tm )
join q where   q.product_event_id =   pe.product_event_id
join qr where  qr.product_event_id =   outerjoin(q.product_event_id)
join p where   p.product_id = q.product_id
         and  (( request->cur_inv_area_cd != 0.0 and p.cur_inv_area_cd = request->cur_inv_area_cd)
           or  ( request->cur_inv_area_cd = 0.0 ))
         and  (( request->cur_owner_area_cd != 0.0 and p.cur_owner_area_cd = request->cur_owner_area_cd)
           or  ( request->cur_owner_area_cd = 0.0 ))
join bp where  bp.product_id =  outerjoin(p.product_id)
 
order by
    p.cur_owner_area_cd,
    p.cur_inv_area_cd,
    quar_date,
    p_product_disp,
    qr.release_dt_tm
 
 
head report
    first_page = 1
 
head page
    row 0
    call center(captions->rpt_title, 1, 125)
    col 110, captions->rpt_time
    col 122, curtime
    row + 1
    col 110, captions->as_of_date
    col 122, curdate "@DATECONDENSED;;d"
    SAVE_ROW = row
%i cclsource:bbt_print_location_info.inc
    if( SAVE_ROW > row )
        row SAVE_ROW
    endif
    row + 1
    col 30, captions->beg_date
    col 46, request->beg_dt_tm "@DATETIMECONDENSED;;d"
    col 72, captions->end_date
    col 85, request->end_dt_tm "@DATETIMECONDENSED;;d"
    row + 2
    col 0, captions->rpt_owner
    col 18, p_owner_area
    row + 1
    col 0, captions->rpt_inv_area
    col 18, p_inv_area
    row + 2
    col 0, captions->rpt_quar_date
    col 64, captions->rpt_intl
    col 101, captions->rpt_release
    row + 1
    col 0, captions->head_products
    col 22, captions->rpt_prod_nbr
    col 44, captions->rpt_aborh
    col 54, captions->rpt_qnty
    col 64, captions->rpt_units
    col 79, captions->rpt_quar_res
    col 101, captions->rpt_date
    col 111, captions->rpt_rel_reas
    row + 1
    col 0, LINE20
    col 22, LINE20
    col 44, LINE8
    col 54, LINE8
    col 64, LINE13
    col 79, LINE20
    col 101, LINE8
    col 111, LINE20
    row + 1
 
head p.cur_owner_area_cd
    if( first_page != 1 )
        first_page = 1
        break
    endif
 
head p.cur_inv_area_cd
    if( first_page = 1 )
        first_page = 0
    else
        break
    endif
 
head quar_date
    if( row > 54 )
        break
    endif
    col 0, quar_date "@SHORTDATE;;d"
    row + 1
 
detail
    if( row > 56 )
        break
    endif
 
    if( lastQuarProdEventID != q.product_event_id ) ; this condition ensures the Prod/Prod # are only displayed once.
    	col 0, p_product_disp ";r"
    	col 22, product_number
    endif
 
    if( p.product_class_cd = BLOOD_CD )
    	new_row = 0 ;variable that states whether or not we need to add a new row for the released product,this case false (0)
        col 44, aborh
    elseif( p.product_class_cd = DERIV_CD )
    	if( lastQuarProdEventID = q.product_event_id )
    		; in other words, multiple instances of partially releasing a quarantined product have been found
       		out_str = cnvtstring(qr.release_qty)
    		col 54, out_str
    		out_str = cnvtstring(qr.release_intl_units)
    		col 64, out_str
    		new_row = 0 ;variable that states whether or not we need to add a new row for the released product,this case false (0)
    	else
    		new_row = 0 ; variable that states whether or not we need to add a new row for the released product
	        out_str = cnvtstring(q.orig_quar_qty)
    	    col 54, out_str
        	out_str = cnvtstring(q.orig_quar_intl_units)
        	col 64, out_str
 
        	if( qr.release_qty > 0 ) 					; if its a line displaying release quarantine information
        		row + 1									; need to put this on the next row
        		out_str = cnvtstring(qr.release_qty)
        		col 54, out_str							; place the release_qty at this column value
        		out_str = cnvtstring(qr.release_intl_units)
        		col 64, out_str							; place the released int'l units at this column.
        		row - 1									; return to original row.
        		new_row = 1
        	endif
        endif
    endif
 
    if( lastQuarProdEventID != q.product_event_id ) 	; if its not a duplicate prod_event_id, display the quar reason.
	    col 79, q_quar_reason_disp
	endif
 
	; if there was a duplicate prod_event_id, then increase the row by one.
    if( new_row = 1 )
    	row + 1
    endif
 
    col 101, qr.release_dt_tm "@SHORTDATE;;d"
    col 111, qr_release_reason_disp
 
    lastQuarProdEventID = q.product_event_id
    row + 1
 
foot quar_date
    row + 1
    if( row > 56 )
        first_page = 1
        break
    endif
 
foot p.cur_inv_area_cd
    row + 0
 
foot p.cur_owner_area_cd
    row + 0
 
foot page
    row 57
    col 0, LINE131
    row + 1
    col 0, cpm_cfn_info->file_name
    col 113, captions->rpt_page
    col 120, curpage ";l"
    row + 1
 
foot report
    row 59
    call center(captions->end_of_report, 1, 125)
 
;* Check for CCL errors.
set error_check = error(errmsg,0)
if (error_check != 0)
    set reply->status_data.status = "F"
    call subevent_add ("Select quarantined products.", "F", "bb_rpt_quar_products.prg", errmsg)
    go to EXIT_SCRIPT
endif
 
/*****************************************************************************/
/* Status set and exit script                                                */
/*****************************************************************************/
#SET_STATUS
if ( curqual = 0)
   set reply->status_data->status = "Z"
else
   set reply->status_data->status = "S"
endif
 
if( request->null_ind = 1 or reply->status_data->status = "S" )
    set stat = alterlist(reply->rpt_list, 1)
    set reply->rpt_list[1].rpt_filename = cpm_cfn_info->file_name_path
    if(size(request->batch_selection, 1) > 0)
        call echo(request->output_dist)
        if(CHECKQUEUE(request->output_dist) = 1)
            set spool value(reply->rpt_list[1].rpt_filename) value(request->output_dist)
        endif
    endif
endif
 
#EXIT_SCRIPT
 
free set captions
set modify nopredeclare
 
end
go
 
 
 

;Generated by GNU enscript 1.6.4.
