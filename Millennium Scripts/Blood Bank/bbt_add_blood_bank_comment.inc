 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_PERSONNOTES/BBT_ADD_BLOOD_BANK_COMMENT.INC Turn on black mode

/* 
 * bbt_add_blood_bank_comment.inc:  creates bb_comment and long_text rows
 *
 * USE:
 *  1.  Initialize the following GLOBAL variables in the calling program:
 *        set new_pathnet_seq = 0.0
 *        set new_bb_comment_id = 0.0
 *        set new_long_text_id = 0.0 
 *        set gsub_status = " "
 *        set gsub_process = fillstring(200, " ")
 *        set gsub_message = fillstring(200, " ")
 *  3.  Include in calling program as follows (NOTE:  the 'END' for the subroutine is to be coded in the calling program
 *      to allow for additional functionality for the subroutine by the calling program):
 *        %i cclsource:bbt_add_blood_bank_comment.inc
 *        END           ; end subroutine ADD_BB_COMMENT
 *  4.  Include 'bbt_add_long_text.inc' in calling program as well, as follows (NOTE: the 'END' for the subroutine is to
 *      be coded in the calling program here as well):
 *        %i cclsource:bbt_add_long_text.inc
 *        END           ; end subroutine ADD_LONG_TEXT
 *  5.  Call 'ADD_BB_COMMENT' as follows: */
 ;          Call ADD_BB_COMMENT
 ;              (
 ;               /* product_id  */ <person_id>
 ;               /* bb_comment */ <bb_comment>
 ;              )
/*  6.  Evaluate gsub_process to determine success/failure of add.  gsub_process and gsub_message will have information
 *      regarding the success or failure of the add.
 */

subroutine ADD_BB_COMMENT
    (
     sub_person_id,
     sub_bb_comment
    )     

    /*
     * Retrieve new sequence number for bb_comment_id
     */
    set new_bb_comment_id = 0.0

%i cclsource:bbt_get_pathnet_seq.inc

    if (curqual = 0)
        set gsub_status = "F"
        set gsub_process = "get new bb_comment_id (PATHNET_SEQ)"
        set gsub_message = "get new bb_comment_id (PATHNET_SEQ) failed"
    else
        set new_bb_comment_id = new_pathnet_seq

        /* Retrieve new sequence number for long_text_id */

        set new_long_text_id = 0.0
     
        select into "nl:"
            seqn = seq(LONG_DATA_SEQ, nextval)
        from        dual
        detail
            new_long_text_id   = seqn
        with        format, nocounter

        if (curqual = 0)
            set gsub_status = "F"
            set gsub_process = "get new long_text_id (LONG_DATA_SEQ)"
            set gsub_message = "get new long_text_id (LONG_DATA_SEQ) failed"
        else

            /* 
             * Add bb_comment row
             */
            insert into blood_bank_comment bbc
                set bbc.bb_comment_id            = new_bb_comment_id,
                    bbc.person_id                = sub_person_id,
                    bbc.long_text_id             = new_long_text_id,
                    bbc.active_ind               = 1,
                    bbc.active_status_cd         = reqdata->active_status_cd,
                    bbc.active_status_dt_tm      = cnvtdatetime(curdate, curtime3),
                    bbc.active_status_prsnl_id   = reqinfo->updt_id,
                    bbc.updt_cnt                 = 0,
                    bbc.updt_dt_tm               = cnvtdatetime(curdate, curtime3),
                    bbc.updt_id                  = reqinfo->updt_id,
                    bbc.updt_task                = reqinfo->updt_task,
                    bbc.updt_applctx             = reqinfo->updt_applctx
            with    nocounter

        if (curqual = 0)
            set gsub_status = "F"
            set gsub_process = "insert into bb_comment"
            set gsub_message = "insert into blood_bank_comment failed"
        else
                    
            /* Insert long_text row for bb_comment */
            call ADD_LONG_TEXT
               (
                /* long_text_id       */ new_long_text_id,
                /* parent_entity_name */ "BLOOD_BANK_COMMENT",
                /* parent_entity_name */ new_bb_comment_id,
                /* long_text          */ sub_bb_comment
               )

             if (curqual = 0)
                 set gsub_status = "F"
                 set gsub_process = "insert into long_text"
                 set gsub_message = "insert into long_text failed"
            endif       ; endif curqual = 0 long_text
        endif       ; endif curqual = 0 bb_comment
    endif       ; endif curqual = 0 get new long_text_id
endif       ; endif curqual = 0 get new pathnet_seq

/* END for subroutine is to be coded in calling program to allow for additional processing in subroutine */

;Generated by GNU enscript 1.6.4.
