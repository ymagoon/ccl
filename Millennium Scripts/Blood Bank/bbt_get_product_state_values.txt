 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Get_Product_State_Values/BBT_GET_PRODUCT_STATE_VALUES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_product_state_values.prg
        Object name:            bbt_get_product_state_values
        Request #:              225075

        Product:                        PathNet Transfusion
        Product Team:               PathNet
        HNA Version:            500
        CCL Version:            4.0    
        
        Program purpose:        Get all code_value table values for all product states for product state class

        Tables read:            code_value
        Tables updated:             (none)
        Executing from:         product state class (VB)

        Special Notes:          ?

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer                     Comment                                 *
;    *--- -------- -------------------- ----------------------------------- *
;     000 05/22/96 Jon Weekes           Initial Release                             *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_product_state_values:dba go
create program bbt_get_product_state_values:dba

record reply
(
 1  qual[20]   
     2  CODE_VALUE                    =   F8      
     2  CODE_SET                      =   I4      
     2  CDF_MEANING                   =   C12     
     2  PRIMARY_IND                   =   I2      
     2  DISPLAY                       =   C40    
     2  DISPLAY_KEY                   =   C40    
     2  DESCRIPTION                   =   VC   
     2  DEFINITION                    =   VC  
     2  COLLATION_SEQ                 =   I4     
%i cclsource:status_block.inc
)

/*
 * Initialize Global Variables
 */
set reply->status_data->status = "F"
set state_cnt = 0
set count1 = 0

/* 
 * Initialize constants 
 */
set product_state_code_set = 1610

#BEGIN_MAIN

    select into "nl:"
        cv.CODE_VALUE,   
        cv.CODE_SET,     
        cv.CDF_MEANING,        
        cv.DISPLAY,              
        cv.DISPLAY_KEY,          
        cv.DESCRIPTION,          
        cv.DEFINITION,           
        cv.COLLATION_SEQ
    from
        code_value cv
    where
        cv.code_set             = product_state_code_set
          and cv.active_ind     = 1

    order by    cv.CDF_MEANING

    head report
        state_cnt = 0

    detail
        state_cnt = state_cnt + 1
        if (mod(state_cnt,20) = 1 and state_cnt != 1)
            stat = alter(reply->qual,state_cnt + 19)
        endif
        reply->qual[state_cnt]->code_value      = cv.code_value
        reply->qual[state_cnt]->CODE_SET        = cv.CODE_Set
        reply->qual[state_cnt]->CDF_MEANING     = cv.CDF_MEANING
        reply->qual[state_cnt]->PRIMARY_IND     = 0
        reply->qual[state_cnt]->DISPLAY         = cv.DISPLAY          
        reply->qual[state_cnt]->DISPLAY_KEY     = cv.DISPLAY_KEY
        reply->qual[state_cnt]->DESCRIPTION     = cv.DESCRIPTION         
        reply->qual[state_cnt]->DEFINITION      = cv.DEFINITION          
        reply->qual[state_cnt]->COLLATION_SEq   = cv.COLLATION_SEq

    with    nocounter

go to EXIT_SCRIPT
#END_MAIN

#EXIT_SCRIPT
if (state_cnt > 0)
    set reply->status_data->status = "S"    ; Success
    set count1 = count1 + 1
    if (mod(count1,10) = 1 and count1 != 1)
        set stat = alter(reply->status_data, count1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = "get product state values"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "S"
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "SUCCESS"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = build(state_cnt, " product states returned")
else
    set reply->status_data->status = "F"    ; Fail
    set count1 = count1 + 1
    if (mod(count1,10) = 1 and count1 != 1)
        set stat = alter(reply->status_data, count1)
    endif
    set reply->status_data->status = "F"       ; Script Failure
    set reply->status_data->subeventstatus[count1]->OperationName = "get product state values"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "F"                                        
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "SCRIPT FAILURE"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = "no product states found"
endif

/* reset size of reply array = to actual number of retrieved product states */
set stat = alter(reply->qual,state_cnt)

for (x = 1 to state_cnt)
    call echo(build(x, ".",
    reply->qual[x]->code_value,     "/",
    reply->qual[x]->CODE_SET,       "/",
    reply->qual[x]->CDF_MEANING,    "/",
    reply->qual[x]->PRIMARY_IND,    "/",
    reply->qual[x]->DISPLAY,        "/",
    reply->qual[x]->DISPLAY_KEY,    "/",
    reply->qual[x]->DESCRIPTION,    "/",
    reply->qual[x]->DEFINITION,     "/",
    reply->qual[x]->COLLATION_SEQ))
endfor

end go

;Generated by GNU enscript 1.6.4.
