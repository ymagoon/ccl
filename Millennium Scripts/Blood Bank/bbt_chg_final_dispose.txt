 ;;Solution_Test/script/PathNet -- BB Transfusion/SCRIPTCORRECTINVENTORY/BBT_CHG_FINAL_DISPOSE.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       BBT_CHG_FINAL_DISPOSE.PRG
        Object name:            BBT_CHG_FINAL_DISPOSE.PRG
        Request #:              225246
 
        Product:                Pathnet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:
        Tables read:            none
 
        Tables updated:         dispose, destruction, product_event, corrected_product
        Executing from:         Product Corrections
        Special Notes:          none
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *001 12/18/96 Mike Goings          Initial Release                     *
;    *002 04/28/03 John Rieck           Updated to store the time zone on   *
;    *                                  the PRODUCT_EVENT table for UTC     *
;    *                                  compliance.                         *
;    *003 07/07/05 Jeff Wain            Removed cnvtint formatting on seqn  *
;    *004 12/19/05 Joe Troy             Modified to accept Change Final     *
;    *                                  Disposition report                  *
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program BBT_CHG_FINAL_DISPOSE:dba go
create program BBT_CHG_FINAL_DISPOSE:dba
 
/*
record request
(
  1 dispose_ind = c1    ; "T" will update the dispose information, "F" will not
  1 dispose_event_ind = c1    ; "T" will update the dispose product event table, "F" will not
  1 dispose_table_ind = c1    ; "T" will update the disposition table, "F" will not
  1 destruction_ind = c1    ; "T" will update the destruction information, "F" will not
  1 destruction_event_ind = c1    ; "T" will update the destruction product event table, "F" will not
  1 destruction_table_ind = c1    ; "T" will update the destruction table, "F" will not
  2 product_id = f8
  2 product_updt_cnt = i2
  2 correction_mode = c5 ; "DEMOG" "FINAL" "EMERG" OR "UNLOK"
  2 corr_reason_cd = f8
  2 corr_note = vc255
  2 dispose_product_event_id = f8
  2 dispose_pe_updt_cnt = i4       ; update count for the product event table
  2 dispose_pe_active_ind = i2     ; active ind for the product event table
  2 dispose_d_updt_cnt = i4        ; update count for the disposition table
  2 dispose_d_active_ind = i2      ; active ind for the disposition table
  2 dispose_dt_tm = dq8
  2 dispose_reason_cd = f8
  2 orig_dispose_dt_tm = dq8
  2 orig_dispose_reason_cd = f8
  2 disp_orig_updt_cnt =i4
  2 disp_orig_updt_dt_tm = dq8
  2 disp_orig_updt_id = f8
  2 disp_orig_updt_task = i4
  2 disp_orig_updt_applctx = i4
  2 destruction_product_event_id = f8
  2 destruction_pe_updt_cnt = i4       ; update count for the product event table
  2 destruction_pe_active_ind = i2     ; active ind for the product event table
  2 destruction_d_updt_cnt = i4        ; update count for the destruction table
  2 destruction_d_active_ind = i2      ; active ind for the destruction table
  2 destruction_dt_tm = dq8
  2 destruction_method_cd = f8
  2 autoclave_ind = i2
  2 manifest_nbr = vc
  2 destruction_org_id = f8
  2 orig_destruction_dt_tm = dq8
  2 orig_destruction_method_cd = f8
  2 orig_autoclave_ind = i2
  2 orig_manifest_nbr = vc
  2 orig_destruction_org_id = f8
  2 dest_orig_updt_cnt =i4
  2 dest_orig_updt_dt_tm = dq8
  2 dest_orig_updt_id = f8
  2 dest_orig_updt_task = i4
  2 dest_orig_updt_applctx = i4
)
 */
 
record reply
(
1  status_data
      2  status                    = c1
      2  subeventstatus[1]
          3  SourceObjectName       = c15
          3  SourceObjectQual       = i4
          3  SourceObjectValue      = c50
          3  OperationName          = c8
          3  OperationStatus        = c1
          3  TargetObjectName       = c15
          3  TargetObjectValue      = c50
          3  Sub_Event_dt_tm        = di8
 )
 
/* Initialize Variables */
declare count1 					= i4 with protect, noconstant(0)
;declare y = 0
declare next_code 				= f8 with protect, noconstant(0.0)
declare corr_id 				= f8 with protect, noconstant(0.0)
set reply->status_data->status 	= "F"
declare failed 					= c1 with protect, noconstant("F")
declare new_pathnet_seq			= f8 with protect, noconstant(0.0)

declare dDemogCd = f8 with protect, noconstant(0.0)
declare dErdisCd = f8 with protect, noconstant(0.0)
declare dUnlockCd = f8 with protect, noconstant(0.0)
declare dDispCd = f8 with protect, noconstant(0.0)

/*****************************************/
/*   lock the product table for update   */
/*****************************************/
select into "nl:"
      p.*
from
      product p
where
      p.product_id = request->product_id and
      p.updt_cnt = request->product_updt_cnt and
      p.active_ind = 1
with counter, forupdate(p)
 
if (curqual = 0)
  set failed = "T",
  set reply->status_data->subeventstatus[1]->SourceObjectName
             = "script",
  set reply->status_data->subeventstatus[1]->SourceObjectValue
             = "bbt_chg_final_dispose",
  set reply->status_data->subeventstatus[1]->OperationName
             = "Lock",
  set reply->status_data->subeventstatus[1]->OperationStatus
             = "F",
  set reply->status_data->subeventstatus[1]->TargetObjectName
             = "product",
  set reply->status_data->subeventstatus[1]->TargetObjectValue
             = "Product table",
  set reply->status_data->subeventstatus[1]->SourceObjectQual
             = 1,
  set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
             = cnvtdatetime(curdate,curtime),
  go to exit_script
endif
 
/***********************************/
/*        update product           */
/***********************************/
update into product p set
    p.locked_ind = 0,
    p.updt_cnt = p.updt_cnt + 1,
    p.corrected_ind = 1,
    p.updt_dt_tm = cnvtdatetime(curdate,curtime3),
    p.updt_id = reqinfo->updt_id,
    p.updt_task = reqinfo->updt_task,
    p.updt_applctx = reqinfo->updt_applctx
 
where
      p.product_id = request->product_id and
      p.updt_cnt = request->product_updt_cnt and
      p.active_ind = 1
with nocounter
 
if (curqual = 0)
  set failed = "T",
  set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
  set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbt_chg_final_dispose",
  set reply->status_data->subeventstatus[1]->OperationName
           = "update",
  set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
  set reply->status_data->subeventstatus[1]->TargetObjectName
           = "product",
  set reply->status_data->subeventstatus[1]->TargetObjectValue
           = "Product Table"
  set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
  set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
  go to exit_script
endif

set dDemogCd = uar_get_code_by("MEANING", 14115, "DEMOG")
set dErdisCd = uar_get_code_by("MEANING", 14115, "ERDIS")
set dDispCd = uar_get_code_by("MEANING", 14115, "FINALDISP")
set dUnlockCd = uar_get_code_by("MEANING", 14115, "UNLOCK")

/*************************************/
/*  disposition information update   */
/*************************************/
if (request->dispose_ind = "T")
  if (request->dispose_event_ind = "T")
    /*****************************************/
    /*   lock the product event for update   */
    /*****************************************/
    select into "nl:"
        p.*
    from
        product_event p
    where
       p.product_id = request->product_id and
       p.product_event_id = request->dispose_product_event_id and
       p.updt_cnt = request->dispose_pe_updt_cnt and
       p.active_ind = request->dispose_pe_active_ind
    with counter, forupdate(p)
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
                 = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
                 = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
                 = "Lock",
      set reply->status_data->subeventstatus[1]->OperationStatus
                 = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
                 = "product_event",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
                 = "Product event",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
                 = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
                 = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->dispose_table_ind = "T")
    /***************************************/
    /*   lock the disposition for update   */
    /***************************************/
    select into "nl:"
          d.*
    from
          disposition d
    where
         d.product_id = request->product_id and
         d.product_event_id = request->dispose_product_event_id and
         d.updt_cnt = request->dispose_d_updt_cnt
    with counter, forupdate(d)
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
                 = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
                 = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
                 = "Lock",
      set reply->status_data->subeventstatus[1]->OperationStatus
                 = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
                 = "disposition",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
                 = "Disposition",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
                 = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
                 = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->dispose_event_ind = "T")
    /***********************************/
    /*      update product event       */
    /***********************************/
    update into product_event p set
        p.event_dt_tm = cnvtdatetime(request->dispose_dt_tm),
        p.updt_cnt = p.updt_cnt + 1,
        p.updt_dt_tm = cnvtdatetime(curdate,curtime3),
        p.updt_id = reqinfo->updt_id,
        p.updt_task = reqinfo->updt_task,
        p.updt_applctx = reqinfo->updt_applctx,
        p.event_tz = if (CurUTC = 1)
                        CurTimeZoneApp
                     else
                        0
                     endif
 
    where
       p.product_id = request->product_id and
       p.product_event_id = request->dispose_product_event_id and
       p.updt_cnt = request->dispose_pe_updt_cnt and
       p.active_ind = request->dispose_pe_active_ind
    with nocounter
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
               = "update",
      set reply->status_data->subeventstatus[1]->OperationStatus
               = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
               = "product",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
               = "Product Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->dispose_table_ind = "T")
    /***********************************/
    /*    update disposition           */
    /***********************************/
    update into disposition d set
        d.reason_cd = request->dispose_reason_cd,
        d.updt_cnt = d.updt_cnt + 1,
        d.updt_dt_tm = cnvtdatetime(curdate,curtime3),
        d.updt_id = reqinfo->updt_id,
        d.updt_task = reqinfo->updt_task,
        d.updt_applctx = reqinfo->updt_applctx
 
    where
         d.product_id = request->product_id and
         d.product_event_id = request->dispose_product_event_id and
         d.updt_cnt = request->dispose_d_updt_cnt
    with nocounter
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
               = "update",
      set reply->status_data->subeventstatus[1]->OperationStatus
               = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
               = "disposition",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
               = "Disposition Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  /***********************************/
  /*    update corrected product     */
  /***********************************/
    set new_pathnet_seq = 0.0
    select into "nl:"
        seqn        = seq(pathnet_seq,nextval) "###########################;rp0"
    from
        dual
    detail
         new_pathnet_seq        = seqn
    with
        format, nocounter
  set corr_id = new_pathnet_seq
  ; autoclave_ind = -2 -> dispose change
  ; autoclave_ind > -2 -> destruction change
  insert into corrected_product cp set
     cp.correction_id = corr_id,
     cp.product_id = request->product_id,
     cp.correction_type_cd =
     				 if (request->correction_mode = "DEMOG")
     					dDemogCd                        
                     elseif (request->correction_mode = "ERDIS")
						dErdisCd
                     elseif (request->correction_mode = "FINAL")
						dDispCd
                     else
						dUnlockCd
                     endif,
     cp.correction_reason_cd = request->corr_reason_cd,
     cp.product_nbr =  null,
     cp.product_sub_nbr = null,
     cp.alternate_nbr = null,
     cp.product_cd = 0,
     cp.product_class_cd = 0,
     cp.product_cat_cd = 0,
     cp.supplier_id = 0,
     cp.recv_dt_tm = null,
     cp.volume = null,
     cp.unit_meas_cd = 0,
     cp.expire_dt_tm = null,
     cp.abo_cd = 0,
     cp.rh_cd = 0,
     cp.segment_nbr = null,
     cp.orig_updt_cnt =request->disp_orig_updt_cnt,
     cp.orig_updt_dt_tm = cnvtdatetime(request->orig_dispose_dt_tm),
     cp.orig_updt_id = request->disp_orig_updt_id,
     cp.orig_updt_task = request->disp_orig_updt_task,
     cp.orig_updt_applctx = request->disp_orig_updt_applctx,
     cp.correction_note = if (request->corr_note = "-1")
                        null
                     else
                        request->corr_note
                     endif,
     cp.unknown_patient_text = null,
     cp.event_dt_tm = if (request->disp_orig_updt_dt_tm = -1)
                        null
                      else
                        cnvtdatetime(request->disp_orig_updt_dt_tm)
                      endif,
     cp.reason_cd = request->orig_dispose_reason_cd,
     cp.autoclave_ind = -2,
     cp.destruction_method_cd = 0,
     cp.destruction_org_id = 0,
     cp.manifest_nbr = null,
     cp.product_event_id = request->dispose_product_event_id,
     cp.updt_cnt =  0,
     cp.updt_dt_tm = cnvtdatetime(curdate,curtime3),
     cp.updt_id =  reqinfo->updt_id,
     cp.updt_task =  reqinfo->updt_task,
     cp.updt_applctx =  reqinfo->updt_applctx
  with nocounter
 
  if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
    set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbt_chg_final_dispose",
    set reply->status_data->subeventstatus[1]->OperationName
           = "update",
    set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
           = "corrected product",
    set reply->status_data->subeventstatus[1]->TargetObjectValue
           = "Corrected Product Table",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
    set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
    go to exit_script
  endif
endif
 
/*************************************/
/*  destruction information update   */
/*************************************/
if (request->destruction_ind = "T")
  if (request->destruction_event_ind = "T")
    /*****************************************/
    /*   lock the product event for update   */
    /*****************************************/
    select into "nl:"
        p.*
    from
        product_event p
    where
       p.product_id = request->product_id and
       p.product_event_id = request->destruction_product_event_id and
       p.updt_cnt = request->destruction_pe_updt_cnt and
       p.active_ind = request->destruction_pe_active_ind
    with counter, forupdate(p)
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
                 = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
                 = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
                 = "Lock",
      set reply->status_data->subeventstatus[1]->OperationStatus
                 = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
                 = "product_event",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
                 = "Product Event Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
                 = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
                 = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->destruction_table_ind = "T")
    /***************************************/
    /*   lock the destruction for update   */
    /***************************************/
    select into "nl:"
          d.*
    from
          destruction d
    where
         d.product_id = request->product_id and
         d.product_event_id = request->destruction_product_event_id and
         d.updt_cnt = request->destruction_d_updt_cnt
    with counter, forupdate(d)
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
                 = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
                 = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
                 = "Lock",
      set reply->status_data->subeventstatus[1]->OperationStatus
                 = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
                 = "destruction",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
                 = "Destruction Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
                 = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
                 = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->destruction_event_ind = "T")
    /***********************************/
    /*      update product event       */
    /***********************************/
    update into product_event p set
        p.event_dt_tm = cnvtdatetime(request->destruction_dt_tm),
        p.updt_cnt = p.updt_cnt + 1,
        p.updt_dt_tm = cnvtdatetime(curdate,curtime3),
        p.updt_id = reqinfo->updt_id,
        p.updt_task = reqinfo->updt_task,
        p.updt_applctx = reqinfo->updt_applctx,
        p.event_tz = if (CurUTC = 1)
                        CurTimeZoneApp
                     else
                        0
                     endif
 
    where
       p.product_id = request->product_id and
       p.product_event_id = request->destruction_product_event_id and
       p.updt_cnt = request->destruction_pe_updt_cnt and
       p.active_ind = request->destruction_pe_active_ind
    with nocounter
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
               = "update",
      set reply->status_data->subeventstatus[1]->OperationStatus
               = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
               = "product event2",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
               = "Product Event Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  if (request->destruction_table_ind = "T")
    /***********************************/
    /*    update destruction           */
    /***********************************/
    update into destruction d set
        d.method_cd = if (request->destruction_method_cd = -1)
                        d.method_cd
                      else
                        request->destruction_method_cd
                      endif,
        d.autoclave_ind = if (request->autoclave_ind = -1)
                        d.autoclave_ind
                          else
                        request->autoclave_ind
                          endif,
        d.manifest_nbr = if (request->manifest_nbr = "-1")
                           d.manifest_nbr
                         else
                           request->manifest_nbr
                         endif,
        d.destruction_org_id = if (request->destruction_org_id = -1)
                           d.destruction_org_id
                               else
                           request->destruction_org_id
                               endif,
        d.updt_cnt = d.updt_cnt + 1,
        d.updt_dt_tm = cnvtdatetime(curdate,curtime3),
        d.updt_id = reqinfo->updt_id,
        d.updt_task = reqinfo->updt_task,
        d.updt_applctx = reqinfo->updt_applctx
 
    where
         d.product_id = request->product_id and
         d.product_event_id = request->destruction_product_event_id and
         d.updt_cnt = request->destruction_d_updt_cnt
    with nocounter
 
    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
      set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "bbt_chg_final_dispose",
      set reply->status_data->subeventstatus[1]->OperationName
               = "update",
      set reply->status_data->subeventstatus[1]->OperationStatus
               = "F",
      set reply->status_data->subeventstatus[1]->TargetObjectName
               = "destruction",
      set reply->status_data->subeventstatus[1]->TargetObjectValue
               = "Destruction Table",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
      set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime),
      go to exit_script
    endif
  endif
  /***********************************/
  /*    update corrected product     */
  /***********************************/
    set new_pathnet_seq = 0.0
    select into "nl:"
        seqn        = seq(pathnet_seq,nextval) "###########################;rp0"
    from
        dual
    detail
         new_pathnet_seq        = seqn
    with
        format, nocounter
  set corr_id = new_pathnet_seq
  insert into corrected_product cp set
     cp.correction_id = corr_id,
     cp.product_id = request->product_id,
     cp.correction_type_cd =
     				 if (request->correction_mode = "DEMOG")
						dDemogCd
                     elseif (request->correction_mode = "ERDIS")
                     	dErdisCd
                     elseif (request->correction_mode = "FINAL")
						dDispCd
                     else
						dUnlockCd
                     endif,
     cp.correction_reason_cd = request->corr_reason_cd,
     cp.product_nbr =  null,
     cp.product_sub_nbr = null,
     cp.alternate_nbr = null,
     cp.product_cd = 0,
     cp.product_class_cd = 0,
     cp.product_cat_cd = 0,
     cp.supplier_id = 0,
     cp.recv_dt_tm = null,
     cp.volume = null,
     cp.unit_meas_cd = 0,
     cp.expire_dt_tm = null,
     cp.abo_cd = 0,
     cp.rh_cd = 0,
     cp.segment_nbr = null,
     cp.orig_updt_cnt =request->dest_orig_updt_cnt,
     cp.orig_updt_dt_tm = if (request->orig_destruction_dt_tm = 0.0)
     						null
     					  else
     					  	cnvtdatetime(request->orig_destruction_dt_tm)
     					  endif,
     cp.orig_updt_id = request->dest_orig_updt_id,
     cp.orig_updt_task = request->dest_orig_updt_task,
     cp.orig_updt_applctx = request->dest_orig_updt_applctx,
     cp.correction_note = if (request->corr_note = "-1")
                        null
                     else
                        request->corr_note
                     endif,
     cp.unknown_patient_text = null,
     cp.event_dt_tm = if (request->dest_orig_updt_dt_tm = 0.0)
                        null
                      else
                         cnvtdatetime(request->dest_orig_updt_dt_tm)
                      endif,
     cp.reason_cd = 0,
     cp.autoclave_ind = request->orig_autoclave_ind,
     cp.destruction_method_cd = request->orig_destruction_method_cd,
     cp.destruction_org_id = request->orig_destruction_org_id,
     cp.manifest_nbr = request->orig_manifest_nbr,
     cp.product_event_id = request->destruction_product_event_id,
     cp.updt_cnt =  0,
     cp.updt_dt_tm = cnvtdatetime(curdate,curtime3),
     cp.updt_id =  reqinfo->updt_id,
     cp.updt_task =  reqinfo->updt_task,
     cp.updt_applctx =  reqinfo->updt_applctx
  with nocounter
 
  if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
    set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbt_chg_final_dispose",
    set reply->status_data->subeventstatus[1]->OperationName
           = "update2",
    set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
           = "corrected product",
    set reply->status_data->subeventstatus[1]->TargetObjectValue
           = "Corrected Product Table",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
    set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
    go to exit_script
  endif
endif
 
#exit_script
if (failed = "T")
   rollback,
   set reply->status_data->status = "F"
else
   commit,
   set reply->status_data->status = "T"
endif
 
end go

;Generated by GNU enscript 1.6.4.
