 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Productnotes/BBT_ARCHIVE_PRODUCT_NOTE.INC Turn on black mode

/* 
 * bbt_archive_product_note.inc:  archives (inactivates) product_note and long_text rows
 *
 * USE:
 *  1.  Initialize the following GLOBAL variables in the calling program:
 *        set gsub_status = " "
 *        set gsub_process = fillstring(200, " ")
 *        set gsub_message = fillstring(200, " ")
 *  3.  Include in calling program as follows (NOTE:  the 'END' for the subroutine is to be coded in the calling program
 *      to allow for additional functionality for the subroutine by the calling program):
 *        %i cclsource:bbt_archive_product_note.inc
 *        END           ; end subroutine ARCHIVE_PRODUCT_NOTE
 *  4.  Include 'bbt_chg_long_text.inc' in calling program as well, as follows (NOTE: the 'END' for the subroutine is to
 *      be coded in the calling program here as well):
 *        %i cclsource:bbt_chg_long_text.inc
 *        END           ; end subroutine CHG_LONG_TEXT
 *  5.  Call 'ARCIVE_PRODUCT_NOTE' as follows: */
 ;          call ARCHIVE_PRODUCT_NOTE
 ;              (
 ;               /* product_note_id        */ <product_note_id>, 
 ;               /* product_id             */ <product_id,        
 ;               /* product_note_updtt_cnt */ <product_note_updt_cnt>,
 ;               /* lont_text_id           */ <long_text_id>,
 ;               /* long_text_updt_cnt     */ <long_text_updt_cnt>
 ;              )
/*  6.  Evaluate gsub_process to determine success/failure ("S"/"F").  gsub_process and gsub_message will have information
 *      regarding the success or failure.
 */

subroutine ARCHIVE_PRODUCT_NOTE
    (
     sub_product_note_id,
     sub_product_id,
     sub_product_note_updt_cnt,
     sub_pn_long_text_id,
     sub_pn_long_text_updt_cnt
    )

    /*
     * Inactivate current active product_note row
     */

    update into product_note pn
        set pn.active_ind               = 0,
            pn.active_status_cd         = reqdata->inactive_status_cd,
            pn.active_status_dt_tm      = cnvtdatetime(curdate, curtime3),
            pn.active_status_prsnl_id   = reqinfo->updt_id,
            pn.updt_cnt                 = pn.updt_cnt + 1,
            pn.updt_dt_tm               = cnvtdatetime(curdate, curtime3), 
            pn.updt_id                  = reqinfo->updt_id,
            pn.updt_task                = reqinfo->updt_task,
            pn.updt_applctx             = reqinfo->updt_applctx

    where   pn.product_note_id          = sub_product_note_id
              and pn.product_id         = sub_product_id
              and pn.updt_cnt           = sub_product_note_updt_cnt

    with    nocounter

    if (curqual = 0)
        set gsub_status = "F"
        set gsub_process = "inactivate/archive product_note"
        set gsub_message = "current active product_note row could not be archived--product_note not added"
    else
        
        /* Inactivate long_text row */
        call CHG_LONG_TEXT
            (
             /* long_text_id       */ sub_pn_long_text_id,
             /* long_text_updt_cnt */ sub_pn_long_text_updt_cnt,
             /* long_text          */ " ",
             /* active_ind         */ 0, 
             /* active_status_cd   */ reqdata->inactive_status_cd, 
             /* update_text_ind    */ 0                             ; 1=update text, 0 = do NOT update text 
            )

        if (curqual = 0)
            set gsub_status = "F"
            set gsub_process = "inactivate/archive long_text"
            set gsub_message = "current active long_text row could not be archived--product_note not added"
        endif           ; endif curqual = 0 long_text
    endif           ; endif curqual = 0 product_note

;Generated by GNU enscript 1.6.4.
