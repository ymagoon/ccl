 ;;Solution_Test/script/PathNet -- BB Transfusion/SCRIPTCORRECTINVENTORY/BBT_GET_PROD_CORRECTIONS.PRG Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_prod_corrections.prg
        Object name:            bbt_get_prod_corrections
        Request #:              225194

        Product:                Pathnet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:
        Tables read:

        Tables updated:
        Executing from:
        Special Notes:          For this script to work, the locked_ind on the 
                                product table must be 1 meaning a product must 
				be in use by an application
******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 10/10/96 Martin Olson         Initial Release                     *
;     002 01/15/02 Sasi Gandham         Add order by for Head               *
;    *003 12/03/03 John Rieck           Updated to search by untranslated   *
;    *                                  product number as well and returned *
;    *                                  supplier prefix for display.        *
;    *004 02/01/08 Ronda Zheng          Added cur_owner_area_cd and cur_inv_area_cd*
;                                       to reply                            *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

        drop program bbt_get_prod_corrections:dba go
        create program bbt_get_prod_corrections:dba

        /*
        record request
        (
          1 start_prodnbr = c20
          1 start_prodid = f8
          1 untranslated_product_nbr = c20
        )
        */

        record reply
        ( 1 qual[*]
              ;product_table
              2 product_id = f8
              2 product_nbr = c20
              2 alternate_nbr = c20
              2 product_sub_nbr = c5
              2 product_cd = f8
              2 product_cd_disp = c40
              2 unit_of_meas_cd = f8
              2 unit_of_meas_cd_disp = c40
              2 volume = i4
              2 supplier_disp = c40
              2 updt_cnt = i2
              2 updt_dt_tm = dq8
              2 updt_id = f8
              2 updt_task = i4
              2 updt_applctx = i4
              2 locked_ind = i2

              ;product notes
              2 comments_ind = i2

              ;blood_product
              2 cur_abo_cd = f8
              2 cur_abo_cd_disp = c40
              2 cur_rh_cd = f8
              2 cur_rh_cd_disp = c40
              2 supplier_prefix = c5

              ;application information
              2  application_nbr  = i4
              2  user_name        = c100
              2  app_start_dt_tm  = dq8
              2  device_location  = c50
              2  application_desc = c200
              
              ;owner/inv area
              2  cur_owner_area_cd = f8
              2  cur_inv_area_cd   = f8


         1  status_data
            2  status                    = c1
            2  subeventstatus[1]
               3  OperationName          = c15
               3  OperationStatus        = c1
               3  TargetObjectName       = c15
               3  TargetObjectValue      = vc

        )

/* Initialize Variables */
        set reply->status_data->status = "F"
        set count1 = 0
        set count2 = 0
        set count3 = 0
        ;set MaxNumStates = 0
        set max2 = 1
        set qualstep = 0
        set product_updt_applctx = 0

/* Select Records */
        if (size(request->untranslated_product_nbr) = 0)
           set request->untranslated_product_nbr = request->start_prodnbr
        endif
        
        select
        if (request->start_prodid = 0)
         plan p where (p.product_nbr = CNVTUPPER(request->start_prodnbr)
                   or (CNVTUPPER(request->start_prodnbr) = p.barcode_nbr)
                   or (p.product_nbr = CNVTUPPER(request->untranslated_product_nbr)))
         join (o where o.organization_id = p.cur_supplier_id)
         join (d_pn   where (d_pn.seq = 1)
               join pn   where (pn.product_id = p.product_id)
                         and pn.active_ind  = 1
              )
         join (d_app where (d_app.seq = 1)
               join ac where (p.updt_applctx = ac.applctx)
               join a where (ac.application_number = a.application_number)
              )
         join (d1 where (d1.seq = 1))
               join (b where (b.product_id = p.product_id))
               orjoin (dr where (dr.product_id = p.product_id)
              )
        else
         plan p where (
                        p.product_id = request->start_prodid
                      )
         join (o where o.organization_id = p.cur_supplier_id)
         join (d_pn   where (d_pn.seq = 1)
               join pn   where (pn.product_id = p.product_id)
                         and pn.active_ind  = 1
              )
         join (d_app where (d_app.seq = 1)
               join ac where (p.updt_applctx = ac.applctx)
               join a where (ac.application_number = a.application_number)
              )
         join (d1 where (d1.seq = 1))
               join (b where (b.product_id = p.product_id))
               orjoin (dr where (dr.product_id = p.product_id)
              )
        endif
        into "nl:"
                ;product
                p.product_id,
                p.product_nbr,
                p.alternate_nbr,
                p.product_sub_nbr,
                p.product_cd,
                p.locked_ind,

                ;product note
                pn.product_id,

                ;blood_product
                b.cur_abo_cd,
                b.cur_rh_cd,
                b.supplier_prefix,

                ;derivative
                dr.product_id,
                tablefrom = decode(b.seq, "b", dr.seq, "d","x"),

                ;application information
                ac.applctx,
                ac.application_number,
                ac.name,
                ac.start_dt_tm,
                ac.device_location,
                a.application_number,
                a.description
        from
                product p,
                organization o,
                blood_product b,
                derivative dr,
                product_note pn,
                (dummyt d_pn with seq = 1),
                application_context ac,
                application a,
                (dummyt d_app with seq = 1),
                (dummyt d1 with seq = 1)

         plan p where (
                       ((request->start_prodnbr != " ") and (CNVTUPPER(request->start_prodnbr) = p.product_nbr))
                      )
;                       and (p.locked_ind = 1)
         join (o where o.organization_id = p.cur_supplier_id)
         join (d_pn   where (d_pn.seq = 1)
               join pn   where (pn.product_id = p.product_id)
                         and pn.active_ind  = 1
              )
         join (d_app where (d_app.seq = 1)
               join ac where (p.updt_applctx = ac.applctx)
               join a where (ac.application_number = a.application_number)
              )
         join (d1 where (d1.seq = 1))
               join (b where (b.product_id = p.product_id))
               orjoin (dr where (dr.product_id = p.product_id)
              )
        order by p.product_id              
        head report
            count1 = 0
            max2 = 1
        head p.product_id
            count2 = 0
            count1 = count1 + 1

        detail
                ;PRODUCT TABLE INFORMATION
           if (p.locked_ind = 1)
                count3 = count3 + 1
                stat = alterlist(reply->qual,count3)
                reply->qual[count3].product_id = p.product_id
                reply->qual[count3].product_nbr = p.product_nbr
                reply->qual[count3].alternate_nbr = p.alternate_nbr
                reply->qual[count3].product_sub_nbr = p.product_sub_nbr
                reply->qual[count3].product_cd = p.product_cd
                reply->qual[count3].locked_ind = p.locked_ind
                reply->qual[count3].updt_cnt = p.updt_cnt
                reply->qual[count3].updt_dt_tm = p.updt_dt_tm
                reply->qual[count3].updt_id = p.updt_id
                reply->qual[count3].updt_task = p.updt_task
                reply->qual[count3].updt_applctx = p.updt_applctx
                reply->qual[count3].unit_of_meas_cd = p.cur_unit_meas_cd
                ;owner/inv area
                reply->qual[count3].cur_owner_area_cd   = p.cur_owner_area_cd
                reply->qual[count3].cur_inv_area_cd     = p.cur_inv_area_cd

                ;product comments
                if (pn.seq = 1)
                   reply->qual[count3].comments_ind  = 1
                else
                   reply->qual[count3].comments_ind  = 0
                endif

                if (tablefrom = "b")
                   ;BLOOD_PRODUCT TABLE INFORMATION
                   reply->qual[count3].cur_abo_cd = b.cur_abo_cd
                   reply->qual[count3].cur_rh_cd = b.cur_rh_cd
                   reply->qual[count3].volume = b.cur_volume
                   reply->qual[count3].supplier_prefix = b.supplier_prefix
                else
                   reply->qual[count3].volume = dr.item_volume
                endif

                ; supplier information

                if (p.cur_supplier_id = 0)
                  reply->qual[count3].supplier_disp = ""
                else
                  reply->qual[count3].supplier_disp = o.org_name
                endif

                ;application information
                reply->qual[count3].application_nbr     = ac.application_number
                reply->qual[count3].user_name           = ac.name
                reply->qual[count3].app_start_dt_tm     = ac.start_dt_tm
                reply->qual[count3].device_location     = ac.device_location
                reply->qual[count3].application_desc    = a.description
                
          endif
        with nocounter, dontcare = pn, dontcare = ac, dontcare = a

        if (count1 = 0)
            set reply->status_data.status = "N" ; no products found
        else
         if (count3 = 0)
            set reply->status_data.status = "Z"
         else
            set reply->status_data.status = "S"
         endif
        endif
end go

;Generated by GNU enscript 1.6.4.
