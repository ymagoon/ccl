 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Requiredtestingphasestool/BBT_ADD_REQ_TEST_PHASE.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_ADD_REQ_TEST_PHASE
        Object name:            bbt_add_req_test_phase
        Request #:              225120

        Product:                Blood Bank Transfusion
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Used to add a row to the phase group codeset
                                (1601) and a row to the PHASE_GROUP table

        Tables read:            PATHNET_SEQ

        Tables updated:         CODE_VALUE and PHASE_GROUP

        Executing from:         Required Testing Phases Tool

        Special Notes:          N/A
******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 07/31/96 Linda DeJong         Initial Release                     *
;     002 03/11/97 Jon Weekes           Add code to add sequence and required_ind
;     003 08/10/98 Amy Therrien         Add code to add cdf_meaning         *
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_add_req_test_phase:dba go
create program bbt_add_req_test_phase:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
          1  display = c40
          1  description = c40
          1  active_ind = i2
	  1  cdf_meaning = c12 ;003
          1  qual[x]
              2  task_assay_cd = f8
              2  sequence       = i4
              2  required_ind   = i2
        )
        */

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
        record reply
        (
         1  phase_group_cd      = f8
         1  phase_group_disp    = c40
%I CCLSOURCE:STATUS_BLOCK.INC
        )

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
        set reply->status_data->status = "F"
        set nbr_to_add = size(request->qual,5)
        set y = 0
        set idx = 0
        set failed = "F"
        set phase_group_cd = 0.0
/****************************************************************************
*       Get the next code_value code                                        *
*****************************************************************************/
        set next_code = 0.0
        execute cpm_next_code
        set phase_group_cd = next_code


; ** Get "Authorized" data_status_cd code_value
%i cclsource:bbt_get_auth_data_status_cd.inc

/****************************************************************************
*       Add the row to the code value table                                 *
*****************************************************************************/
        insert into code_value c 
        set c.code_value = next_code,
            c.code_set = 1601,
            ;c.cdf_meaning = NULL,
	    c.cdf_meaning = request->cdf_meaning,
            c.display = request->display,
            c.display_key = trim(cnvtupper(request->display)),
            c.description = request->description,
            c.active_ind = request->active_ind,
            c.definition = request->description,
            c.collation_seq = 0,
            c.active_type_cd = 0.0,
            c.active_dt_tm = if (request->active_ind = 1) 
                                cnvtdatetime(curdate,curtime3)
                             else
                                NULL
                             endif,
            c.inactive_dt_tm = if (request->active_ind = 0)
                                cnvtdatetime(curdate, curtime3)
                               else
                                NULL
                               endif,
            c.begin_effective_dt_tm = cnvtdatetime(curdate,curtime3),
            c.end_effective_dt_tm = cnvtdatetime( "31-DEC-2100:00:00:00.00" ),
            c.updt_dt_tm = cnvtdatetime(curdate, curtime3),
            c.updt_id = reqinfo->updt_id,
            c.updt_cnt = 0,
            c.updt_task        = reqinfo->updt_task,
            c.updt_applctx = reqinfo->updt_applctx,
            c.data_status_cd           = auth_data_status_cd,
            c.data_status_dt_tm        = cnvtdatetime(curdate,curtime3),
            c.data_status_prsnl_id     = reqinfo->updt_id,
            c.active_status_prsnl_id   = reqinfo->updt_id
             
            with counter
            if (curqual = 0)
              set failed = "T"
            endif

        if (failed = "T")
          set reply->status_data->status = "Z"
          set reply->status_data->OperationName = "add"
          set reply->status_data->OperationStatus = "F"
          set reply->status_data->TargetObjectName = "code_value"
          set reply->status_data->TargetObjectValue = "phase not added to 1601"
          rollback
          go to END_SCRIPT
        endif

/****************************************************************************
*       Get the next phase_group_id code                                    *
*****************************************************************************/
    for (idx = 1 to nbr_to_add)
        set next_code = 0.0
        execute cpm_next_code

/****************************************************************************
*       Add the row(s) to the component table                               *
*****************************************************************************/
        insert into phase_group p
             set p.phase_group_id = next_code,
                 p.phase_group_cd = phase_group_cd,
                 p.task_assay_cd = request->qual[idx]->task_assay_cd,
                 p.sequence = request->qual[idx]->sequence,
                 p.required_ind = request->qual[idx]->required_ind,
                 p.active_ind = 1,
                 p.active_status_cd = 0,
                 p.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
                 p.active_status_prsnl_id = reqinfo->updt_id,
                 p.updt_cnt         = 0,
                 p.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
                 p.updt_id          = reqinfo->updt_id,
                 p.updt_task        = reqinfo->updt_task,
                 p.updt_applctx     = reqinfo->updt_applctx
            with counter
            if (curqual = 0)
              set y = y + 1
              if (y > 1)
                set stat = alter(reply->status_data->subeventstatus, y+1)
              endif
              set reply->status_data->subeventstatus[y]->OperationName
               = "insert"
              set reply->status_data->subeventstatus[y]->OperationStatus
               = "F"
              set reply->status_data->subeventstatus[y]->TargetObjectName
               = "phase_group"
              set reply->status_data->subeventstatus[y]->TargetObjectValue 
               = string(request->qual[idx]->task_assay_cd)
              set failed = "T"
              go to ROW_FAILED
            endif
        endfor

#ROW_FAILED
        if (failed = "T")
          set reply->status_data->status = "F"
          set reply->status_data->OperationName = "add"
          set reply->status_data->OperationStatus = "F"
          set reply->status_data->TargetObjectName = "phase_group"
          set reply->status_data->TargetObjectValue = "phase not added"
          set reqinfo->commit_ind = 0
          go to END_SCRIPT
        else    
          set reply->phase_group_cd       = phase_group_cd
          set reply->phase_group_disp     = request->display
          set reply->status_data->status = "S"
          set reqinfo->commit_ind = 1
        endif


/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/
#END_SCRIPT
call echo(build("phase_group_cd: ", reply->phase_group_cd))

end go

;Generated by GNU enscript 1.6.4.
