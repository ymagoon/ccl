 ;;Solution_Test/script/PathNet -- BB Transfusion/RESULTENTRYFORBLOODBANK/BBT_ADD_ORDER_CELL.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_ADD_ORDER_CELL
        Object name:            bbt_add_order_cell
        Request #:              225146

        Product:                Blood Bank Transfusion
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Used to add a row to the bb order cell table

        Tables read:            PATHNET_SEQ

        Tables updated:         BB_ORDER_CELL

        Executing from:         Result Entry

        Special Notes:          N/A
******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 08/13/96 Linda DeJong         Initial Release                     *
;     002 10/21/02 Christi Ditmars	    Correct Defect CAPPEP00037341       *
;     003 07/07/05 Jeff Wain            Long sequence fixes on seqn variable*
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_add_order_cell:dba go
create program bbt_add_order_cell:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
          1  order_id = f8
          1 qual[x]
            2  cell_cd = f8
            2  product_id = f8
        )
        */

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
        record reply
        (
          1  qualreply[*]
              2  cell_cd = f8
              2  product_id = f8
              2  order_cell_id = f8
%I CCLSOURCE:STATUS_BLOCK.INC
        )

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
        set reply->status_data->status = "F"
        set nbr_to_add = size(request->qual,5)
        set y = 0
        set idx = 0
        set failed = "F"

        set d_cnt = 0
/****************************************************************************
*       Get the next sequential code                                        *
*****************************************************************************/

    set d_cnt = 0  
    for (idx = 1 to nbr_to_add)
       select into "nl:"
           seqn        = seq(pathnet_seq,nextval)
       from
           dual
       detail
           d_cnt = d_cnt + 1
           stat = alterlist(reply->qualreply, d_cnt)
           reply->qualreply[d_cnt]->order_cell_id = seqn
           reply->qualreply[d_cnt]->cell_cd = request->qual[idx]->cell_cd
           reply->qualreply[d_cnt]->product_id = request->qual[idx]->product_id
       with
           format, nocounter

       if (curqual = 0)
          go to ROW_FAILED
       endif
    endfor

/****************************************************************************
*       Add the row to the order_cell table                                *
*****************************************************************************/
        insert into bb_order_cell o,
                     (dummyt d1 with seq = value(d_cnt))
             set o.order_cell_id    = reply->qualreply[d1.seq]->order_cell_id,
                 o.order_id         = request->order_id,
                 o.cell_cd          = request->qual[d1.seq]->cell_cd,
                 o.product_id       = request->qual[d1.seq]->product_id,
                 o.bb_result_id     = 0,
                 o.updt_cnt         = 0,
                 o.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
                 o.updt_id          = reqinfo->updt_id,
                 o.updt_task        = reqinfo->updt_task,
                 o.updt_applctx     = reqinfo->updt_applctx
        plan d1
        join o
        with counter

        if (curqual = 0)
           set y = y + 1
           if (y > 1)
              set stat = alter(reply->status_data->subeventstatus, y+1)
           endif
           set reply->status_data->subeventstatus[y]->OperationName
               = "insert"
           set reply->status_data->subeventstatus[y]->OperationStatus
               = "F"
           set reply->status_data->subeventstatus[y]->TargetObjectName
               = "order_cell"
           set reply->status_data->subeventstatus[y]->TargetObjectValue 
               = cnvtstring(request->qual[idx]->cell_cd,32,2)
           set failed = "T"
           go to ROW_FAILED
        endif

#ROW_FAILED
        if (failed = "T")
          set reply->status_data->status = "Z"
          set reply->status_data->OperationName = "add"
          set reply->status_data->OperationStatus = "F"
          set reply->status_data->TargetObjectName = "order_cell"
          set reply->status_data->TargetObjectValue = "order_cell not added"
          set stat = alterlist(reply->qualreply, 1)
          set reqinfo->commit_ind = 0
          go to END_SCRIPT
        else    
          set reply->status_data->status = "S"
          set reqinfo->commit_ind = 1
        endif

/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/
#END_SCRIPT
end go

;Generated by GNU enscript 1.6.4.
