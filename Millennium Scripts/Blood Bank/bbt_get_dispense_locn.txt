 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Getdispenselocations/bbt_get_dispense_locn.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Author:                 Teresa Davis
        Date Written:           08/1/96
        Source file name:       bbt_get_dispense_locn.prg
        Object name:            bbt_get_dispense_locn
        Request #:              225128

        Product:                Transfusion                               
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Need to get dispense locations from location 
                                table.

        Tables read:            location
        Tables updated:         none
        Executing from:         Location Registration

        Special Notes:          none

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 08/01/96 Teresa Davis         Initial Release                     *
;     002 02/26/97 Teresa Davis         Changes to check for "active" rows  *
;                                       based on active_ind and beg and end *
;                                       effective dates on the CODE_VALUE   *
;                                       code_set.                           *
;     003 06/07/97 Lisa Grayson         Added check for "ACTIVE" status_cd  *
;     004 11/10/09 Ronda Zheng          Added search function               *
;     005 10/16/12 Veeresh Angadi       Fix For CR 1-5057395791             *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program bbt_get_dispense_locn:dba go
create program bbt_get_dispense_locn:dba

/****************************************************************************
*       Request Record                                                      *
*****************************************************************************/
/*
record request
( 
  location_name = vc
)
*/

/****************************************************************************
*       Reply Record                                                        *
*****************************************************************************/
record reply
( 1 qual[*]
    2 location_cd       = f8
    2 location_disp     = c40
    2 location_desc     = c60
    2 location_mean     = c12
    2 location_type_cd  = f8
    2 resource_ind      = i2
    2 active_ind        = i2
    2 census_ind        = i2
    2 active_status_cd = f8
    2 active_status_dt_tm = dq8
    2 updt_cnt          = i4
  1 status_data
    2 status = c1
    2 subeventstatus[1]
      3 OperationName = c15
      3 OperationStatus = c1
      3 TargetObjectName = c15
      3 TargetObjectValue = c100
)

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
set reply->status_data->status = "F"

declare sLocationName = vc  with protect, noconstant("")

set count1 = 0

set nurse_unit_cd = 0.0
set ancilsurg_cd = 0.0
set ambulatory_cd = 0.0

set active_status_cd = 0.0
set stat = uar_get_meaning_by_codeset(48, "ACTIVE", 1, active_status_cd)

if (active_status_cd <= 0)
  set reply->status_data->status = "F"
  set count1 = count1 + 1
  if (count1 > 1)
    set stat = alter(reply->status_data->subeventstatus, count1+1)
  endif
  set reply->status_data->subeventstatus[count1]->OperationName = "get active status code value" 
  set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
  set reply->status_data->subeventstatus[count1]->TargetObjectName = "code_value" 
  set reply->status_data->subeventstatus[count1]->TargetObjectValue ="ACTIVE"
  go to EXIT_SCRIPT
endif

set nurse_unit_cd = 0.0 
set stat = uar_get_meaning_by_codeset(222, "NURSEUNIT", 1, nurse_unit_cd)

if (nurse_unit_cd <= 0)
  set reply->status_data->status = "F"
  set count1 = count1 + 1
  if (count1 > 1)
    set stat = alter(reply->status_data->subeventstatus, count1+1)
  endif
  set reply->status_data->subeventstatus[count1]->OperationName = "get Nurse Unit code value" 
  set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
  set reply->status_data->subeventstatus[count1]->TargetObjectName = "code_value" 
  set reply->status_data->subeventstatus[count1]->TargetObjectValue ="NURSEUNIT"
  go to EXIT_SCRIPT
endif

set ancilsurg_cd = 0.0 
set stat = uar_get_meaning_by_codeset(222, "ANCILSURG", 1, ancilsurg_cd)

if (ancilsurg_cd <= 0)
  set reply->status_data->status = "F"
  set count1 = count1 + 1
  if (count1 > 1)
    set stat = alter(reply->status_data->subeventstatus, count1+1)
  endif
  set reply->status_data->subeventstatus[count1]->OperationName = "get Ancillary Surgery code value" 
  set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
  set reply->status_data->subeventstatus[count1]->TargetObjectName = "code_value" 
  set reply->status_data->subeventstatus[count1]->TargetObjectValue ="ANCILSURG"
  go to EXIT_SCRIPT
endif

set ambulatory_cd = 0.0 
set stat = uar_get_meaning_by_codeset(222, "AMBULATORY", 1, ambulatory_cd)

if (ambulatory_cd <= 0)
  set reply->status_data->status = "F"
  set count1 = count1 + 1
  if (count1 > 1)
    set stat = alter(reply->status_data->subeventstatus, count1+1)
  endif
  set reply->status_data->subeventstatus[count1]->OperationName = "get Ancillary Surgery code value" 
  set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
  set reply->status_data->subeventstatus[count1]->TargetObjectName = "code_value" 
  set reply->status_data->subeventstatus[count1]->TargetObjectValue ="AMBULATORY"
  go to EXIT_SCRIPT
endif
 
;Getting the logical Domain id of the logged in user
declare dLogicalDomain = f8 with noconstant(0.0)
 
free record acm_get_curr_logical_domain_req
free record acm_get_curr_logical_domain_rep
 
%i cclsource:logical_domain_consts.inc
%i cclsource:acm_get_curr_logical_domain_req.inc
%i cclsource:acm_get_curr_logical_domain_rep.inc
 
set acm_get_curr_logical_domain_req->concept = LD_CONCEPT_PRSNL
 
execute acm_get_curr_logical_domain
 
set dLogicalDomain = acm_get_curr_logical_domain_rep->logical_domain_id
 
free record acm_get_curr_logical_domain_req
free record acm_get_curr_logical_domain_rep

/****************************************************************************
*       Select records                                                      *
*****************************************************************************/
set sLocationName = concat(cnvtupper(request->location_name), "*")

select
  if (trim(request->location_name) = "")
    plan l where l.location_type_cd in (nurse_unit_cd, ancilsurg_cd, ambulatory_cd)
             and l.active_status_cd = active_status_cd
    join cv where (cv.code_value = l.location_cd) 
              and (CNVTDATETIME(curdate,curtime3) >= cv.begin_effective_dt_tm)
              and (CNVTDATETIME(curdate,curtime3) <= cv.end_effective_dt_tm)
              and cv.active_ind = 1
              join o where o.organization_id = l.organization_id
		      and (o.logical_domain_id = dLogicalDomain or o.organization_id = 0)
 
  else
    plan l where l.location_type_cd in (nurse_unit_cd, ancilsurg_cd, ambulatory_cd)
             and l.active_status_cd = active_status_cd
    join cv where (cv.code_value = l.location_cd) 
              and (CNVTDATETIME(curdate,curtime3) >= cv.begin_effective_dt_tm)
              and (CNVTDATETIME(curdate,curtime3) <= cv.end_effective_dt_tm)
              and cv.active_ind = 1
              and cnvtupper(cv.display) = patstring(sLocationName)
    join o where o.organization_id = l.organization_id
      and (o.logical_domain_id = dLogicalDomain or o.organization_id = 0)
  endif


into "nl:"
  l.seq,
  l.location_type_cd,
  l.resource_ind,
  l.active_ind,
  l.census_ind,
  l.active_status_cd,           
  l.active_status_dt_tm,
  l.updt_cnt,
  cv.seq

from location l,
     code_value cv,
     Organization o
 
head report
  count1 = 0

detail
  count1 = count1 + 1
  if (count1 > size(reply->qual, 5))
    stat = alterlist(reply->qual,count1 + 9)
  endif
  reply->qual[count1]->location_cd           = l.location_cd
  reply->qual[count1]->location_type_cd      = l.location_type_cd
  reply->qual[count1]->resource_ind          = l.resource_ind
  reply->qual[count1]->active_ind            = l.active_ind
  reply->qual[count1]->census_ind            = l.census_ind
  reply->qual[count1]->active_status_cd      = l.active_status_cd                 
  if (null(l.active_status_dt_tm) = 0)
    reply->qual[count1]->active_status_dt_tm = 
                       cnvtdatetime(l.active_status_dt_tm)
  endif
  reply->qual[count1]->updt_cnt              = l.updt_cnt

with nocounter

if (count1 != 0)
  set stat = alterlist(reply->qual,count1)
endif

if (count1 = 0)
  set reply->status_data->status = "Z"
else
  set reply->status_data->status = "S"
endif


#EXIT_SCRIPT

end go






;Generated by GNU enscript 1.6.4.
