 ;;Solution_Test/script/PathNet -- BB Transfusion/Productorders/BBT_GET_ORDERED_PRODUCT_ORDERS.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1997 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_get_synonym_from_order.prg       
        Object name:            bbt_get_synonym_from_order
        Request #:              225437 

        Product:                PathNet                
        Product Team:           BB Transfusion
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Get the synonym id for a destroyed product from the order table

        Tables read:            orders

        Tables updated:         <None>

        Executing from:         VB

        Special Notes:          
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 09/26/97 Jon Weekes           Initial Release                     *
;    *001 05/03/99 Doug Saus            Replaced code_value select with uar *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_ordered_product_orders:dba go
create program bbt_get_ordered_product_orders:dba

/*
record request
(
 1 product_id         = f8
)
*/

record reply
(
 1  qual[*]
     2  synonym_id        = f8
     2  catalog_type_cd   = f8
     2  catalog_cd        = f8
     2  mnemonic          = vc
     2  oe_format_id      = f8
     2  order_id          = f8
     2  orig_order_dt_tm  = dq8
     2  updt_cnt          = i4
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set select_ok_ind = 0
set ordered_status_code_set = 6004
set ordered_status_cdf_meaning = "ORDERED"
set ordered_status_cd = 0.0
set stat_size = 0

set qual_cnt = 0

set ordered_status_cd = GET_CODE_VALUE(ordered_status_code_set, ordered_status_cdf_meaning)

select into "nl:"
    o.synonym_id

from
    orders o

plan o  where   o.product_id            = request->product_id
                  and o.order_status_cd = ordered_status_cd

head report
    qual_cnt = 0
    select_ok_ind = 0
    stat = alterlist(reply->qual, 10)

detail
    qual_cnt = qual_cnt + 1
    if (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
        stat = alterlist(reply->qual, qual_cnt + 9)
    endif
    reply->qual[qual_cnt]->synonym_id       = o.synonym_id
    reply->qual[qual_cnt]->catalog_type_cd  = o.catalog_type_cd
    reply->qual[qual_cnt]->catalog_cd       = o.catalog_cd
    reply->qual[qual_cnt]->mnemonic         = o.order_mnemonic
    reply->qual[qual_cnt]->oe_format_id     = o.oe_format_id
    reply->qual[qual_cnt]->order_id         = o.order_id
    reply->qual[qual_cnt]->orig_order_dt_tm = cnvtdatetime(o.orig_order_dt_tm)
    reply->qual[qual_cnt]->updt_cnt         = o.updt_cnt

foot report
    stat = alterlist(reply->qual, qual_cnt)
    select_ok_ind = 1

with    nocounter, nullreport


set stat_size = size(reply->status_data->subeventstatus, 5)
set count1 = stat_size + 1
if (count1 > 1)
    set stat = alter(reply->status_data->subeventstatus, count1+1)
endif
set reply->status_data->subeventstatus[count1]->OperationName = "select on order table"
set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_get_ordered_product_orders"

if (select_ok_ind = 1)
    if (curqual = 0)
        set reply->status_data->status = "Z"
        set reply->status_data->subeventstatus[count1]->OperationStatus = "Z"
        set reply->status_data->subeventstatus[count1]->TargetObjectValue 
            = "No rows for on order table for product_id"
        go to EXIT_SCRIPT
    else
        set reply->status_data->status = "S"
        set reply->status_data->subeventstatus[count1]->OperationStatus = "S"
        set reply->status_data->subeventstatus[count1]->TargetObjectValue 
            = "SUCCESS"
    endif
else
    set reply->status_data->status = "F"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue 
        = "ERROR IN SCRIPT:  Select on order table failed"
endif


declare GET_CODE_VALUE(sub_code_set, sub_cdf_meaning) = f8

subroutine GET_CODE_VALUE(sub_code_set, sub_cdf_meaning)
    /*
     * Retrieve code_value using passed code_set and meaning
     */
;001 begin
    set gsub_code_value = 0.0
    set cdf_meaning = fillstring(12," ")
    set cdf_meaning = sub_cdf_meaning

    set stat = uar_get_meaning_by_codeset(sub_code_set, cdf_meaning,1,gsub_code_value)
;    call echo(gsub_code_value)
;001 end
    RETURN(gsub_code_value)
END     ; end subroutine GET_CODE_VALUE


#EXIT_SCRIPT


;call echo(reply->status_data->status)
;call echo("  ")
;for (x = 1 to qual_cnt)
;    call echo(build(x, "...",
;        reply->qual[x]->synonym_id        , "/",   
;        reply->qual[x]->catalog_type_cd   , "/",   
;        reply->qual[x]->catalog_cd        , "/",   
;        reply->qual[x]->mnemonic          , "/",   
;        reply->qual[x]->oe_format_id      , "/",   
;        reply->qual[x]->order_id          , "/",   
;        reply->qual[x]->orig_order_dt_tm  , "/",
;        reply->qual[x]->updt_cnt          ))
;endfor 

end go

;Generated by GNU enscript 1.6.4.
