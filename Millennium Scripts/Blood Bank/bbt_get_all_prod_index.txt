 ;;Solution_Test/script/PathNet -- BB Transfusion/Producttool/bbt_get_all_prod_index.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       bbt_get_all_prod_index.prg
        Object name:            bbt_get_all_prod_index
        Request #:              225050
 
        Product:                Blood Bank Transfusion
        Product Team:           Blood Bank Transfusion
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Gets all values in product index table,
                                originally written for the database building
                                tool for products/categories.
 
        Tables read:            product_index, organization, product_barcode
        Tables updated:         none
        Executing from:         Product DB tool
 
        Special Notes:
 
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 03/27/96 Lisa Grayson         Initial Release                     *
;     001 08/21/96 Lisa Grayson         Get mnemonic of confirmatory test   *
;     002 08/04/97 Doug Saus & Badari   Added logic for multiple barcodes   *
;                  Kopparapu                                                *
;     003 04/30/98 Darsit Bhakta        Storage_Temp_Cd returned and reply  *
;     004 07/9/98  Doug Saus            Added Drawn Date Indicator to reply *
;     005 04/27/99 Badari Kopparapu     Modified to return unlimited no. of *
;                                       products instead of a maxqual of 100*
;	  006 01/21/2008 Vankadaru Kiran	Joined the code_value table to get  *
;										the values of display & description *
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program bbt_get_all_prod_index:dba go
create program bbt_get_all_prod_index:dba
 
/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
 
/*
record request
( 1 product_class_cd = f8
  1 product_cat_cd = f8
)
*/
 
/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
( 1 qual[*]
    2 product_cd = f8
    2 product_disp = c40
    2 product_desc = vc
    2 barcodelist[*]
        3 product_barcode_id = f8
        3 product_barcode    = c15
        3 updt_cnt           = i4
        3 active_ind         = i2
    2 autologous_ind = i2
    2 directed_ind = i2
    2 max_days_expire = i4
    2 max_hrs_expire = i4
    2 default_volume = i4
    2 default_unit_meas_cd = f8
    2 default_unit_meas_disp = c40
    2 default_supplier_id = f8
    2 default_supplier_name = vc
    2 allow_dispense_ind = i2
    2 auto_quarantine_min = i4
    2 synonym_id = f8
    2 mnemonic = c40
    2 auto_bill_item_cd = f8
    2 auto_bill_item_disp = c40
    2 dir_bill_item_cd = f8
    2 dir_bill_item_disp = c40
    2 validate_ag_ab_ind = i2
    2 validate_trans_req_ind = i2
    2 intl_units_ind = i2
    2 storage_temp_cd = f8
    2 storage_temp_disp = c40
    2 drawn_dt_tm_ind = i2
    2 aliquot_ind = i2
%i cclsource:status_block.inc
)
 
/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
set count1              = 0
set barcode = fillstring(15, " ")
set mnemonic = fillstring(100, " ")
 
/****************************************************************************
*       Select rows and load reply record                                   *
*****************************************************************************/
set reply->status_data->status = "F"
set stat = alterlist(reply->qual, 10)
 
select into "nl:"
 
from product_index p,
	 Code_Value cv,
     organization o
 
plan p where ( p.product_class_cd = request->product_class_cd and
               p.product_cat_cd = request->product_cat_cd and
               p.active_ind = 1 )
join o  where  o.organization_id = outerjoin(p.default_supplier_id)
join cv where  cv.code_value = p.product_cd
 
head report
  count1 = 0
 
detail
  count1 = count1 + 1
  if (mod(count1,10) = 1 and count1 != 1)
    stat = alterlist(reply->qual,count1 + 9)
  endif
  reply->qual[count1]->product_cd = p.product_cd
  reply->qual[count1]->product_disp = cv.display
  reply->qual[count1]->product_desc = cv.description
  reply->qual[count1]->autologous_ind = p.autologous_ind
  reply->qual[count1]->directed_ind = p.directed_ind
  reply->qual[count1]->max_days_expire = p.max_days_expire
  reply->qual[count1]->max_hrs_expire = p.max_hrs_expire
  reply->qual[count1]->default_volume  = p.default_volume
  reply->qual[count1]->default_supplier_id = p.default_supplier_id
  reply->qual[count1].default_supplier_name = o.org_name
  reply->qual[count1]->allow_dispense_ind  = p.allow_dispense_ind
  reply->qual[count1]->synonym_id = p.synonym_id
  reply->qual[count1]->auto_quarantine_min = p.auto_quarantine_min
  reply->qual[count1]->auto_bill_item_cd = p.auto_bill_item_cd
  reply->qual[count1]->dir_bill_item_cd = p.dir_bill_item_cd
  reply->qual[count1]->validate_ag_ab_ind  = p.validate_ag_ab_ind
  reply->qual[count1]->validate_trans_req_ind  = p.validate_trans_req_ind
  reply->qual[count1]->intl_units_ind  = p.intl_units_ind
  reply->qual[count1]->storage_temp_cd = p.storage_temp_cd
  reply->qual[count1]->drawn_dt_tm_ind = p.drawn_dt_tm_ind
  reply->qual[count1]->aliquot_ind = p.aliquot_ind
 
with nocounter;005, maxqual(p,100)
 
 
/****************************************************************************
*       Resize Reply to remove unused rows and set status                   *
*****************************************************************************/
set stat = alterlist(reply->qual,count1)
 
if (curqual = 0)
  set reply->status_data->status = "Z"
else
  set reply->status_data->status = "S"
endif
 
if (reply->status_data->status = "S")
  for ( x = 1 to count1 )
     set bar_cnt = 0
     set stat = alterlist(reply->qual[x]->barcodelist, 5)
 
     select into "nl:"
         b.product_barcode_id,
         b.product_barcode,
         b.updt_cnt,
         b.active_ind
     from product_barcode b where reply->qual[x].product_cd = b.product_cd
                                    and b.active_ind = 1
 
     order by b.product_barcode
 
     detail
        bar_cnt = bar_cnt + 1
        if (mod(bar_cnt, 5) = 1 and bar_cnt != 1)
            stat = alterlist(reply->qual[x]->barcodelist, bar_cnt + 4)
        endif
        reply->qual[x]->barcodelist[bar_cnt]->product_barcode_id
            = b.product_barcode_id
        reply->qual[x]->barcodelist[bar_cnt]->product_barcode
            = b.product_barcode
        reply->qual[x]->barcodelist[bar_cnt]->updt_cnt
            = b.updt_cnt
        reply->qual[x]->barcodelist[bar_cnt]->active_ind
            = b.active_ind
 
      with nocounter
 
     set stat = alterlist(reply->qual[x]->barcodelist, bar_cnt)
  endfor
 
  for ( x = 1 to count1 )
     if ( reply->qual[x].synonym_id > 0 )
       select into "nl:"
         from order_catalog_synonym s
         where ( reply->qual[x].synonym_id = s.synonym_id )
       detail
         mnemonic = s.mnemonic
       with nocounter
       if (curqual != 0)
         set reply->qual[x].mnemonic = mnemonic
       endif
     endif
  endfor
endif
 
end go

;Generated by GNU enscript 1.6.4.
