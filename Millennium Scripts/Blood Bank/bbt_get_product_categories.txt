 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Get_Product_Categories/BBT_GET_PRODUCT_CATEGORIES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_product_categories.prg 
        Object name:            bbt_get_product_categories
        Request #:                      2252??

        Product:                        PathNet
        Product Team:               Blood Bank Transfusion
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve all product categories

        Tables read:            product_category
        Tables updated:             (none)
        Executing from:         vb application name

        Special Notes:          ?

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer                     Comment                     *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 10/30/96 Jon Weekes           Initial Release                     *
;    *001 09/03/13 Fitsum Abebe         Qualified returned results by       *
;    *                                  product class and returned product  *
;    *                                  category display value.             *

;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_product_categories:dba go
create program bbt_get_product_categories:dba

/*
record request
(
    product_class_cd  = f8
)
*/

record reply
(
 1  qual[*]
     2  product_cat_cd              = f8
     2  product_class_cd            = f8
     2  rh_required_ind             = i2
     2  confirm_required_ind        = i2
     2  red_cell_product_ind        = i2
     2  xmatch_required_ind         = i2
     2  storage_temp_cd             = f8
     2  default_ship_cond_cd        = f8
     2  default_unit_measure_cd     = f8
     2  default_vis_insp_cd         = f8
     2  prompt_vol_ind              = i2
     2  prompt_alternate_ind        = i2
     2  prompt_segment_ind          = i2
     2  special_testing_ind         = i2
     2  crossmatch_tag_ind          = i2
     2  component_tag_ind           = i2
     2  valid_aborh_compat_ind      = i2
     2  product_cat_disp            = vc
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set count1 = 0
set cat_cnt = 0
set cmpnt_cnt = 0

select into "nl:"
    pc.product_cat_cd,             
    pc.product_class_cd,           
    pc.rh_required_ind,            
    pc.confirm_required_ind,       
    pc.red_cell_product_ind,       
    pc.xmatch_required_ind,        
    pc.storage_temp_cd,            
    pc.default_ship_cond_cd,       
    pc.default_unit_measure_cd,    
    pc.default_vis_insp_cd,        
    pc.prompt_vol_ind,             
    pc.prompt_alternate_ind,       
    pc.prompt_segment_ind,         
    pc.special_testing_ind,        
    pc.crossmatch_tag_ind,         
    pc.component_tag_ind,
    pc.valid_aborh_compat_ind

from    product_category pc

where   pc.active_ind = 1 and (request->product_class_cd <= 0 or request->product_class_cd = pc.product_class_cd)

head report
    stat = alterlist(reply->qual, 10)
    cat_cnt = 0

detail
    cat_cnt = cat_cnt + 1
    if (mod(cat_cnt,10) = 1 and cat_cnt != 1)
        stat = alterlist(reply->qual, cat_cnt + 9)
    endif
    reply->qual[cat_cnt]->product_cat_cd              = pc.product_cat_cd
    reply->qual[cat_cnt]->product_class_cd            = pc.product_class_cd            
    reply->qual[cat_cnt]->rh_required_ind             = pc.rh_required_ind             
    reply->qual[cat_cnt]->confirm_required_ind        = pc.confirm_required_ind        
    reply->qual[cat_cnt]->red_cell_product_ind        = pc.red_cell_product_ind        
    reply->qual[cat_cnt]->xmatch_required_ind         = pc.xmatch_required_ind         
    reply->qual[cat_cnt]->storage_temp_cd             = pc.storage_temp_cd             
    reply->qual[cat_cnt]->default_ship_cond_cd        = pc.default_ship_cond_cd        
    reply->qual[cat_cnt]->default_unit_measure_cd     = pc.default_unit_measure_cd     
    reply->qual[cat_cnt]->default_vis_insp_cd         = pc.default_vis_insp_cd         
    reply->qual[cat_cnt]->prompt_vol_ind              = pc.prompt_vol_ind              
    reply->qual[cat_cnt]->prompt_alternate_ind        = pc.prompt_alternate_ind        
    reply->qual[cat_cnt]->prompt_segment_ind          = pc.prompt_segment_ind          
    reply->qual[cat_cnt]->special_testing_ind         = pc.special_testing_ind         
    reply->qual[cat_cnt]->crossmatch_tag_ind          = pc.crossmatch_tag_ind          
    reply->qual[cat_cnt]->component_tag_ind           = pc.component_tag_ind           
    reply->qual[cat_cnt]->valid_aborh_compat_ind      = pc.valid_aborh_compat_ind
    reply->qual[cat_cnt]->product_cat_disp            = uar_get_code_display(pc.product_cat_cd)
with    nocounter


/* Reset size of reply to actual number of selected rows */
set stat = alterlist(reply->qual, cat_cnt)

go to EXIT_SCRIPT

#EXIT_SCRIPT
set count1 = count1 + 1
if (count1 > 1)
    set stat = alterlist(reply->status_data->subeventstatus, count1)
endif
set reply->status_data->subeventstatus[count1]->OperationName = "get product_categories rows"
set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_get_product_categories"
if (cat_cnt > 0)
    set reply->status_data->status = "S"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "S"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = "SUCCESS"
else
    set reply->status_data->status = "Z"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "Z"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = "No active product_category rows found"
endif

;call echo(build("status_data->status =", reply->status_data->status))
;for (x = 1 to count1)
;    call echo(reply->status_data->subeventstatus[count1]->OperationName)
;    call echo(reply->status_data->subeventstatus[count1]->OperationStatus)
;    call echo(reply->status_data->subeventstatus[count1]->TargetObjectName)
;    call echo(reply->status_data->subeventstatus[count1]->TargetObjectValue)
;endfor

;for (x = 1 to cat_cnt)
;    call echo(build(x, "..", 
;    reply->qual[x]->product_cat_cd              , "/",
;    reply->qual[x]->product_class_cd            , "/",
;    reply->qual[x]->rh_required_ind             , "/",
;    reply->qual[x]->confirm_required_ind        , "/",
;    reply->qual[x]->red_cell_product_ind        , "/",
;    reply->qual[x]->xmatch_required_ind         , "/", 
;    reply->qual[x]->storage_temp_cd             , "/", 
;    reply->qual[x]->default_ship_cond_cd        , "/", 
;    reply->qual[x]->default_unit_measure_cd     , "/", 
;    reply->qual[x]->default_vis_insp_cd         , "/", 
;    reply->qual[x]->prompt_vol_ind              , "/", 
;    reply->qual[x]->prompt_alternate_ind        , "/", 
;    reply->qual[x]->prompt_segment_ind          , "/", 
;    reply->qual[x]->special_testing_ind         , "/", 
;    reply->qual[x]->crossmatch_tag_ind          , "/", 
;    reply->qual[x]->component_tag_ind           , "/",
;    reply->qual[x]->valid_aborh_compat_ind      ))
;endfor

end go

;Generated by GNU enscript 1.6.4.
