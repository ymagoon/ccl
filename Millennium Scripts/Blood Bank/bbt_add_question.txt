 ;;Solution_Test/script/PathNet -- BB Transfusion/Dbpreferencewizard/bbt_add_question.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       BBT_ADD_QUESTION
        Object name:            BBT_ADD_QUESTION
        Request #:              NA

        Product:                PATHNET
        Product Team:           BLOOD BANK
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Insert a row into the question and valid response tables

        Tables read:            NA
        Tables updated:         QUESTION, VALID RESPONSE
        Executing from:         NA

        Special Notes:          NA

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 03/22/96 Yvonne Klipfel       Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program bbt_add_question:dba go
create program bbt_add_question:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(
   1 module_meaning         = c12
   1 process_qual[x]
     2 process_meaning      = c12
     2 nbr_of_question      = i2
     2 question_qual[x]
       3 question_meaning  = c12
       3 question          = vc
       3 sequence          = i4
       3 response_flg      = i2
       3 response_length   = i4
       3 code_set          = i4
       3 active_ind        = i2
       3 def_answer        = vc
       3 dwb_ind           = i2
       3 nbr_of_response   = i2
       3 valid_response_qual[x]
         4 response_meaning  = c12
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
%I CCLSOURCE:STATUS_BLOCK.INC
)

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
set reply->status_data->status = "F"
set module_cd = 0.0
set process_cd = 0.0
set question_cd = 0.0
set response_cd = 0.0
set failed = "F"
set partial_update = "F"
set count1 = 0
set number_of_process = cnvtint(size(request->process_qual,5))
set number_of_question = 0
set number_of_response = 0
/****************************************************************************
*       Find the module code value to use for the question table            *
*****************************************************************************/
select into "nl:"
     c.code_value
from code_value c
where c.code_set = 1660
      and c.cdf_meaning = request->module_meaning
detail
     module_cd = c.code_value
with nocounter
if (curqual > 0)
   for (x = 1 to number_of_process)
      select into "nl:"
         c.code_value
      from code_value c
      where c.code_set = 1662
            and c.cdf_meaning = request->process_qual[x]->process_meaning
      detail
           process_cd = c.code_value
      with nocounter
/****************************************************************************
*       Insert into question table                                          *
*****************************************************************************/
      /* determine if process was found */
      if (curqual > 0 and process_cd > 0)
         set number_of_question = request->process_qual[x]->nbr_of_question
         for (y = 1 to number_of_question)
           select into "nl:"
              q.code_value
           from code_value q
           where q.code_set = 1661
             and q.cdf_meaning = request->process_qual[x]->question_qual[y]->question_meaning
           detail
              question_cd = cnvtint(q.code_value)
           with nocounter
           if (curqual > 0)
              insert into question q set
                q.module_cd       = module_cd,
                q.process_cd      = process_cd,
                q.question_cd     = question_cd,
                q.question        = request->process_qual[x]->question_qual[y]->question,
                q.sequence        = request->process_qual[x]->question_qual[y]->sequence,
                q.response_flag   = request->process_qual[x]->question_qual[y]->response_flg,
                q.response_length = request->process_qual[x]->question_qual[y]->response_length,
                q.code_set        = request->process_qual[x]->question_qual[y]->code_set,
                q.active_ind      = request->process_qual[x]->question_qual[y]->active_ind,
                q.def_answer      = request->process_qual[x]->question_qual[y]->def_answer,       
                q.dwb_ind         = request->process_qual[x]->question_qual[y]->dwb_ind,
                q.updt_dt_tm      = cnvtdatetime(curdate, curtime3),
                q.updt_id         = reqinfo->updt_id,
                q.updt_task       = reqinfo->updt_task,
                q.updt_applctx    = reqinfo->updt_applctx,
                q.updt_cnt        = 0
              with nocounter
/****************************************************************************
*       Insert into valid response table                                    *
*****************************************************************************/
              /* determine if row inserted */
              if (curqual > 0)
                 set partial_update = "T"
                 set number_of_response = request->process_qual[x]->question_qual[y]->nbr_of_response
                 if (number_of_response > 0)
                    for (z = 1 to number_of_response)
                       select into "nl:"
                           r.code_value
                       from code_value r
                       where r.code_set = 1659
                          and r.cdf_meaning = 
                                  request->process_qual[x]->question_qual[y]->valid_response_qual[z]->response_meaning
                       detail
                          response_cd = cnvtint(r.code_value)
                       with nocounter
                       if (curqual > 0)
                          insert into valid_response r set
                             r.module_cd       = module_cd,
                             r.process_cd      = process_cd,
                             r.question_cd     = question_cd,
                             r.response_cd     = response_cd,
                             r.updt_dt_tm      = cnvtdatetime(curdate, curtime3),
                             r.updt_id         = reqinfo->updt_id,
                             r.updt_task       = reqinfo->updt_task,
                             r.updt_applctx    = reqinfo->updt_applctx,
                             r.updt_cnt        = 0
                          with nocounter
                          if (curqual = 0)
                             set failed = "T"
                             set count1 = count1 + 1
                             /* create an occurrence of the reply record if the original occurrence previously used */
                             if (count1 > 1)
                                set stat = alter(reply->status_data->subeventstatus, count1+1)
                             endif
                             set reply->status_data->subeventstatus[count1]->OperationName = "ADD"
                             set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
                             set reply->status_data->subeventstatus[count1]->TargetObjectName = "Response"
                             set reply->status_data->subeventstatus[count1]->TargetObjectValue = "Valid response not added"
                          endif
                       else
                          set failed = "T"
                          set count1 = count1 + 1
                          /* create an occurrence of the reply record if the original occurrence previously used */
                          if (count1 > 1)
                             set stat = alter(reply->status_data->subeventstatus, count1+1)
                          endif
                          set reply->status_data->subeventstatus[count1]->OperationName = "ADD"
                          set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
                          set reply->status_data->subeventstatus[count1]->TargetObjectName = "Response"
                          set reply->status_data->subeventstatus[count1]->TargetObjectValue = "Response code not retrieved"
                       endif
                    endfor
                 endif
              else
                 set failed = "T"
                 set count1 = count1 + 1
                 /* create an occurrence of the reply record if the original occurrence previously used */
                 if (count1 > 1)
                    set stat = alter(reply->status_data->subeventstatus, count1+1)
                 endif
                 set reply->status_data->subeventstatus[count1]->OperationName = "ADD"
                 set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
                 set reply->status_data->subeventstatus[count1]->TargetObjectName = "Question"
                 set reply->status_data->subeventstatus[count1]->TargetObjectValue = "Question not added"
              endif
           else
              set failed = "T"
              set count1 = count1 + 1
              /* create an occurrence of the reply record if the original occurrence previously used */
              if (count1 > 1)
                 set stat = alter(reply->status_data->subeventstatus, count1+1)
              endif
              set reply->status_data->subeventstatus[count1]->OperationName = "ADD"
              set reply->status_data->subeventstatus[count1]->OperationStatus = "F"
              set reply->status_data->subeventstatus[count1]->TargetObjectName = "Question"
              set reply->status_data->subeventstatus[count1]->TargetObjectValue = "Question code not retrieved"
           endif
         endfor
      endif
   endfor
endif

/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/
#exit_script
if (failed = "T" and partial_update = "F")
   set reqinfo->commit_ind = 0
   rollback
elseif (failed = "T" and partial_update = "T")
   set reqinfo->commit_ind = 1
   set reply->status_data->status = "P"
   commit
else
   set reqinfo->commit_ind = 1
   set reply->status_data->status = "S"
   commit
endif

end go

;Generated by GNU enscript 1.6.4.
