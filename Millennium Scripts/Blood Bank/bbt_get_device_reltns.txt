 ;;Solution_Test/script/PathNet -- BB Transfusion/BBInventoryDeviceTool/BBT_GET_DEVICE_RELTNS.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_device_reltns.prg 
        Object name:            bbt_get_device_reltns
        Request #:              225529

        Product:                PathNet Transfusion                 
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Get relations (locations, inv areas, serv resources) for inventory devices

        Tables read:            bb_inv_device, bb_inv_device_r
        Tables updated:         none
        Executing from:         variety

        Special Notes:          ?

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 03/03/98 Matt Benson          Initial Release                     *
;     001 03/26/99 Matt Benson          Switched to use UARs                *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_device_reltns:dba go
create program bbt_get_device_reltns:dba

/*
record request
(
  bb_inv_device_id              =  f8
  return_inactive_ind           =  i2
  device_r_type_cd              =  f8
)
*/

Record Reply
(
  1 bb_inv_device_id            =  f8
  1 active_ind                  =  i2
  1 updt_cnt                    =  i4
  1 qual[*] 
    2  bb_inv_device_r_id       =  f8
    2  device_r_cd              =  f8 
    2  device_r_cd_disp         = c40
    2  active_ind               =  i2
    2  updt_cnt                 =  i4

%i cclsource:status_block.inc
)
set reply -> status_data -> status  =  "F" 
set qual_cnt = 0
set stat = alterlist(reply->qual, 10)
set locn_cd = 0.0
set invarea_cd = 0.0
set srvres_cd = 0.0

; 001 BEGIN
set stat = uar_get_meaning_by_codeset(17396, "BBPATLOCN", 1, locn_cd)

set stat = uar_get_meaning_by_codeset(17396, "BBINVAREA", 1, invarea_cd)

set stat = uar_get_meaning_by_codeset(17396, "BBSRVRESRC", 1, srvres_cd)
; 001 END

select into "nl:"
        bbd.bb_inv_device_id 
        , bbd.active_ind
        , bdr.bb_inv_device_r_id
        , device_r_type_mean = uar_get_code_meaning(bdr.device_r_type_cd)
        , bdr.device_r_cd
        , y = uar_get_code_display(bdr.device_r_cd)
        , bdr.active_ind

from    bb_inv_device bbd
        , (dummyt d_bdr with seq = 1)
        , bb_inv_device_r bdr

plan    bbd     where   bbd.bb_inv_device_id = request->bb_inv_device_id
                        and ((request->return_inactive_ind != 1
                              and bbd.active_ind = 1)
                            or (request->return_inactive_ind  = 1))
join    (d_bdr  where   d_bdr.seq = 1
        join    bdr     where   bbd.bb_inv_device_id = bdr.bb_inv_device_id
                                and ((request->device_r_type_mean = "BBSRVRESRC"
                                        and bdr.device_r_type_cd = srvres_cd)
                                    or (request->device_r_type_mean = "BBPATLOCN"
                                        and bdr.device_r_type_cd = locn_cd)
                                    or (request->device_r_type_mean = "BBINVAREA"
                                        and bdr.device_r_type_cd = invarea_cd))
                                and bdr.active_ind = 1)

order by bbd.bb_inv_device_id, bdr.bb_inv_device_r_id

head report
    qual_cnt = 0
    reply->bb_inv_device_id         = bbd.bb_inv_device_id
    reply->active_ind               = bbd.active_ind
    reply->updt_cnt                 = bbd.updt_cnt

detail 
    qual_cnt = qual_cnt + 1
    if (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
        stat = alterlist(reply->qual, qual_cnt + 9)
    endif    
    reply->qual[qual_cnt]->bb_inv_device_r_id       = bdr.bb_inv_device_r_id
    reply->qual[qual_cnt]->device_r_cd              = bdr.device_r_cd
    reply->qual[qual_cnt]->device_r_cd_disp         = y
    reply->qual[qual_cnt]->active_ind               = bdr.active_ind
    reply->qual[qual_cnt]->updt_cnt                 = bdr.updt_cnt

with counter, outerjoin(d_bdr)  


set stat = alterlist(reply->qual, qual_cnt)    

if (curqual != 0)     
   set reply -> status_data -> status = "S"    
else
   set reply -> status_data -> status = "Z"    
endif

end go

;Generated by GNU enscript 1.6.4.
