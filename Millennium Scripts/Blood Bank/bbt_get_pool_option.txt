 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_POOLPRODUCTS/bbt_get_pool_option.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2003 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_pool_option.prg
        Object name:            bbt_get_pool_option
        Request #:              225177

        Product:                PathNet
        Product Team:           Blood Bank Transfusion
        HNA Version:            500
        CCL Version:            8.0

        Program purpose:        Retrieve all blood bank pool options.

        Tables read:            pool_option, product_index, component,
                                bb_mod_option, bb_mod_new_product, bb_mod_orig_product
        Tables updated:         NONE
        Executing from:         CorrectInventory.exe

        Special Notes:          NONE

*****************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer                     Comment                     *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 04/18/96 Jon Weekes           Initial Release                     *
;    *001 02/16/99 Matt Benson          Retrieved max days and hrs for expire
;    *002 08/16/99 Badari Kopparapu     Now correctly resizing the cmpntlist*
;    *003 11/02/01 John Rieck           Return the product category code to *
;    *                                  allow Pool Products to validate     *
;    *                                  against patient ABO/Rh and changed  *
;    *                                  the join path for efficiency        *
;    *004 04/23/03 Chris Noe            Update to pull to the pool options  *
;    *                                  from the bb_mod_option table.       *
;    *005 07/15/04 Jason Osborn         Correct CAPEP00120558 -- The reply  *
;    *                                  structure now populates correctly   *
;    *                                  when no old pool_options exist.     *
;    *006 03/10/08 Jason Coy            Update to return default_exp_days   *
;    *                                  from the new modify products schema.*
;	 *007 07/03.12 Ravi Shankar         Added validate volume value to return.* 
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_pool_option:dba go
create program bbt_get_pool_option:dba

/*
record request
(
)
*/

record reply
(
 1  optionlist[*]
     2  option_id               = f8
     2  new_product_cd          = f8
     2  new_product_disp        = c40
     2  description             = c40
     2  prompt_vol_ind          = i2
     2  calculate_vol_ind       = i2
     2  default_exp_hrs         = i4
     2  product_nbr_prefix      = c10
     2  generate_prod_nbr_ind   = i2
     2  default_supplier_id     = f8
     2  require_assign_ind      = i2
     2  allow_no_aborh_ind      = i2
     2  max_days_expire         = i4   ;001
     2  max_hrs_expire          = i4   ;001
     2  product_cat_cd          = f8   ;Will allow validation of the pooled product and patient ABO/Rh
     2  cmpntlist[*]
         3  product_cd          = f8
         3  product_disp        = c20
     2  default_exp_days        = i4
     2  validate_vol_ind        = i2
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set count1 = 0
set option_cnt = 0
set cmpnt_cnt = 0

select into "nl:"
    po.option_id,
    po.new_product_cd,
    po.description,
    po.prompt_vol_ind,
    po.calculate_vol_ind,
    po.default_exp_hrs,
    po.product_nbr_prefix,
    po.generate_prod_nbr_ind,
    po.default_supplier_id,
    po.require_assign_ind,
    po.allow_no_aborh_ind,
    c.product_cd,
    pi.max_days_expire,  ;001
    pi.max_hrs_expire,    ;001
    pi.product_cat_cd

from    pool_option po,
        product_index pi, ;001
        component c	

plan    po  where   po.active_ind       = 1
join    pi  where   pi.product_cd = po.new_product_cd   ;001
                      and pi.active_ind = 1             ;001
join    c   where   c.option_id         = po.option_id
                      and c.active_ind  = 1

order   po.option_id

head report
    stat = alterlist(reply->optionlist, 10)
    option_cnt = 0
head po.option_id
    option_cnt = option_cnt + 1
    if (option_cnt > size(reply->optionlist, 5))
        stat = alterlist(reply->optionlist, option_cnt + 9)
    endif
    reply->optionlist[option_cnt]->option_id                = po.option_id
    reply->optionlist[option_cnt]->new_product_cd           = po. new_product_cd
    reply->optionlist[option_cnt]->description              = po.description
    reply->optionlist[option_cnt]->prompt_vol_ind           = po.prompt_vol_ind
    reply->optionlist[option_cnt]->calculate_vol_ind        = po.calculate_vol_ind
    reply->optionlist[option_cnt]->default_exp_hrs          = po.default_exp_hrs
    reply->optionlist[option_cnt]->product_nbr_prefix       = po.product_nbr_prefix
    reply->optionlist[option_cnt]->generate_prod_nbr_ind    = po.generate_prod_nbr_ind
    reply->optionlist[option_cnt]->default_supplier_id      = po.default_supplier_id
    reply->optionlist[option_cnt]->require_assign_ind       = po.require_assign_ind
    reply->optionlist[option_cnt]->allow_no_aborh_ind       = po.allow_no_aborh_ind
    reply->optionlist[option_cnt]->max_days_expire          = pi.max_days_expire
    reply->optionlist[option_cnt]->max_hrs_expire           = pi.max_hrs_expire
    reply->optionlist[option_cnt]->product_cat_cd           = pi.product_cat_cd

    stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, 10)
    cmpnt_cnt = 0
detail
    cmpnt_cnt = cmpnt_cnt + 1
    if (mod(cmpnt_cnt,10) = 1 and cmpnt_cnt != 1)
        stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, cmpnt_cnt + 9)
    endif
    reply->optionlist[option_cnt]->cmpntlist[cmpnt_cnt]->product_cd = c.product_cd

foot po.option_id
    stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, cmpnt_cnt)

with    nocounter

;Select from the bb_mod_option table so that the pool products tab of Correct Inventory
;will still work correctly with the new modify products schema.
select into "nl:"
    bbmo.option_id,
    bbmo.display,
    bbmo.prod_nbr_prefix,
    bbmo.generate_prod_nbr_ind,
    bbmnp.new_product_cd,    
    bbmnp.prompt_vol_ind,
    bbmnp.calc_vol_ind,
    bbmnp.default_exp_hrs,
    bbmnp.default_exp_days,
    bbmnp.default_supplier_id,
    bbmnp.require_assign_ind,
    bbmnp.allow_no_aborh_ind,
    bbmop.orig_product_cd,
    pi.max_days_expire,
    pi.max_hrs_expire,
    pi.product_cat_cd

from bb_mod_option bbmo,
	 bb_mod_new_product bbmnp,
     product_index pi,
     bb_mod_orig_product bbmop	

plan bbmo  where bbmo.pool_product_ind = 1
join bbmnp where bbmo.option_id = bbmnp.option_id
join pi    where pi.product_cd = bbmnp.new_product_cd
           and pi.active_ind = 1
join bbmop where bbmop.option_id = bbmnp.option_id

order bbmo.option_id

head report
    if (option_cnt = 0)
    	stat = alterlist(reply->optionlist, 10)
    endif
head bbmo.option_id
    option_cnt = option_cnt + 1
    if (option_cnt > size(reply->optionlist, 5))
        stat = alterlist(reply->optionlist, option_cnt + 9)
    endif
    reply->optionlist[option_cnt]->option_id                = bbmo.option_id
    reply->optionlist[option_cnt]->description              = bbmo.display
    reply->optionlist[option_cnt]->new_product_cd           = bbmnp.new_product_cd
    reply->optionlist[option_cnt]->prompt_vol_ind           = bbmnp.prompt_vol_ind
    reply->optionlist[option_cnt]->calculate_vol_ind        = bbmnp.calc_vol_ind
    reply->optionlist[option_cnt]->default_exp_hrs          = bbmnp.default_exp_hrs
    reply->optionlist[option_cnt]->default_exp_days         = bbmnp.default_exp_days
    reply->optionlist[option_cnt]->product_nbr_prefix       = bbmo.prod_nbr_prefix
    reply->optionlist[option_cnt]->generate_prod_nbr_ind    = bbmo.generate_prod_nbr_ind
    reply->optionlist[option_cnt]->default_supplier_id      = bbmnp.default_supplier_id
    reply->optionlist[option_cnt]->require_assign_ind       = bbmnp.require_assign_ind
    reply->optionlist[option_cnt]->allow_no_aborh_ind       = bbmnp.allow_no_aborh_ind
    reply->optionlist[option_cnt]->max_days_expire          = pi.max_days_expire
    reply->optionlist[option_cnt]->max_hrs_expire           = pi.max_hrs_expire
    reply->optionlist[option_cnt]->product_cat_cd           = pi.product_cat_cd
    reply->optionlist[option_cnt]->validate_vol_ind			= bbmnp.validate_vol_ind

    stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, 10)
    cmpnt_cnt = 0
detail
    cmpnt_cnt = cmpnt_cnt + 1
    if (mod(cmpnt_cnt,10) = 1 and cmpnt_cnt != 1)
        stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, cmpnt_cnt + 9)
    endif
    reply->optionlist[option_cnt]->cmpntlist[cmpnt_cnt]->product_cd = bbmop.orig_product_cd

foot bbmo.option_id
    stat = alterlist(reply->optionlist[option_cnt]->cmpntlist, cmpnt_cnt)

foot report
    row + 0
    
with    nocounter

/* Reset size of reply to actual number of selected rows */
set stat = alterlist(reply->optionlist, option_cnt)

go to EXIT_SCRIPT

#EXIT_SCRIPT
set count1 = count1 + 1
if (count1 > 1)
    set stat = alterlist(reply->status_data->subeventstatus, count1)
endif
set reply->status_data->subeventstatus[count1]->OperationName = "get pool_option rows"
set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_get_pool_option"
if (option_cnt > 0)
    set reply->status_data->status = "S"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "S"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = "SUCCESS"
else
    set reply->status_data->status = "Z"
    set reply->status_data->subeventstatus[count1]->OperationStatus = "Z"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue  = "No active pool_option rows found"
endif

end go

;Generated by GNU enscript 1.6.4.
