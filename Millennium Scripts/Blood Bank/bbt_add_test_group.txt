 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_RESULTGROUPTOOL/BBT_ADD_BB_TEST_GROUP.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1997 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_add_bb_test_group.prg
        Object name:            bbt_add_bb_test_group
        Request #:              

        Product:                PathNet
        Product Team:           BB Transfusion
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Add rows to the bb_test_group and bb_group_component tables

        Tables read:            <None>

        Tables updated:         bb_test_group, bb_group_component

        Executing from:         

        Special Notes:          

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 10/06/97 Jon Weekes           Initial Release                     *
;    *001 06/30/05 Jeff Wain            Removed cnvtint formatting on seqn  *
;                                       variable and fixed misnamed         *
;                                       commit_ind as comment_ind           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_add_bb_test_group:dba go
create program bbt_add_bb_test_group:dba

/*
record request
(
 1  grouplist[*]
     2  test_group_display      = c15
     2  test_group_description  = vc
     2  cmpntlist[*]
         3 catalog_cd    = f8
)
*/

record reply
(
%i cclsource:status_block.inc
)
declare new_bb_test_group_id = f8 with protect, noconstant(0.0)
declare new_bb_grp_cmpnt_id = f8 with protect, noconstant(0.0)
set count1 = 0

set group_cnt = size(request->grouplist, 5)
for (grp = 1 to group_cnt)
    set new_bb_test_group_id = 0.0
    select into "nl:"
        nextseqnum = seq(pathnet_seq,nextval)
    from dual
    detail
        new_bb_test_group_id = nextseqnum
    with format, nocounter

    if (curqual = 0)
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "F",
             /* process */ "get next pathnet_seq",
             /* message */ "could not get next pathnet_seq for bb_test_group"
            )
        go to EXIT_SCRIPT
    endif

    insert into bb_test_group btg
        set btg.bb_test_group_id        = new_bb_test_group_id
        , btg.test_group_display        = request->grouplist[grp]->test_group_display
        , btg.test_group_description    = request->grouplist[grp]->test_group_description                            
        , btg.active_ind                = 1
        , btg.active_status_dt_tm       = cnvtdatetime(curdate, curtime3)
        , btg.active_status_prsnl_id    = reqinfo->updt_id
        , btg.updt_cnt                  = 0
        , btg.updt_dt_tm                = cnvtdatetime(curdate, curtime3)
        , btg.updt_id                   = reqinfo->updt_id
        , btg.updt_task                 = reqinfo->updt_task
        , btg.updt_applctx              = reqinfo->updt_applctx

    with nocounter

    if (curqual = 0)
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "F",
             /* process */ "add bb_test_group",
             /* message */ "error inserting row in bb_test_group"
            )
        go to EXIT_SCRIPT
    endif
        
    set cmpnt_cnt = size(request->grouplist[grp]->cmpntlist, 5)
    for (cmpnt = 1 to cmpnt_cnt)
        set new_bb_grp_cmpnt_id = 0.0

        select into "nl:"
            nextseqnum = seq(pathnet_seq,nextval)
        from dual
        detail
            new_bb_grp_cmpnt_id = nextseqnum
        with format, nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "get next pathnet_seq",
                 /* message */ "could not get next pathnet_seq for bb_group_component"
                )
            go to EXIT_SCRIPT
        endif

        insert into bb_group_component bgc
            set bgc.bb_group_component_id       = new_bb_grp_cmpnt_id
            , bgc.bb_test_group_id              = new_bb_test_group_id
            , bgc.catalog_cd                    = request->grouplist[grp]->cmpntlist[cmpnt]->catalog_cd
            , bgc.active_ind                    = 1
            , bgc.active_status_dt_tm           = cnvtdatetime(curdate, curtime3)
            , bgc.active_status_prsnl_id        = reqinfo->updt_id
            , bgc.updt_cnt                      = 0
            , bgc.updt_dt_tm                    = cnvtdatetime(curdate, curtime3)
            , bgc.updt_id                       = reqinfo->updt_id
            , bgc.updt_task                     = reqinfo->updt_task
            , bgc.updt_applctx                  = reqinfo->updt_applctx

        with nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "add bb_group_component",
                 /* message */ "error inserting row in bb_group_component"
                )
            go to EXIT_SCRIPT
        endif
    endfor
endfor

go to EXIT_SCRIPT

call LOAD_PROCESS_STATUS
    (
     /* status  */ "S",
     /* process */ "SUCCESS",
     /* message */ "SUCCESS"
    )
go to EXIT_SCRIPT

subroutine LOAD_PROCESS_STATUS
    (
     sub_status,
     sub_process,
     sub_message
    )

    set reply->status_data->status = sub_status
    set count1 = size(reply->status_data->subeventstatus, 5) + 1
    if (count1 > 1)
        set stat = alter(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = sub_process
    set reply->status_data->subeventstatus[count1]->OperationStatus = sub_status
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_add_bb_test_group"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = sub_message
END         ; end subroutine LOAD_PROCESS_STATUS

#EXIT_SCRIPT

if (reply->status_data->status = "S")
    set reqinfo->commit_ind = 1
else
    set reqinfo->commit_ind = 0
endif

;call echo(reply->status_data->status)
;for (x = 1 to count1)
;    call echo(reply->status_data->subeventstatus[x]->OperationName)
;    call echo(reply->status_data->subeventstatus[x]->OperationStatus)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectName) 
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectValue) 
;endfor

end go

;Generated by GNU enscript 1.6.4.
