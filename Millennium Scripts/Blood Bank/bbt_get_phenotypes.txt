 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Specialtestingtool/BBT_GET_PHENOTYPES.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_GET_PHENOTYPES
        Object name:            BBT_GET_PHENOTYPES
        Request #:              225457

        Product:                Transfusion
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Get all the phenotypes and corresponding
                                special_testing codes.

        Tables read:            BB_RH_PHENOTYPE
                                BB_RH_PHENO_TESTING

        Tables updated:         None

        Executing from:         SpecialTesting Tool

        Special Notes:          ??
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/22/97 Badari Nath K.       Initial Release                     *
;     001 01/17/02 Sasi Gandham         Replace Head section with Detail and*
;                                       add Decode satetement to check for  *
;                                       the existence of data in            *
;                                       bb_rh_pheno_testing table           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

Drop Program BBT_GET_PHENOTYPES:DBA Go
Create Program BBT_GET_PHENOTYPES:DBA

/*
Record request
(

)
*/

Record reply
( 1  qual[*]
     2  fr_nomenclature_id      = f8
     2  w_nomenclature_id       = f8
     2  rh_phenotype_id         = f8
     2  updt_cnt                = i4
     2  active_ind              = i2
     2  pheno_testing[*]
        3  rh_pheno_testing_id  = f8
        3  special_testing_cd   = f8
        3  special_testing_disp = vc
        3  sequence             = i4
        3  updt_cnt             = i4
        3  active_ind           = i2
%i cclsource:status_block.inc
);

set reply->status_data->status = "F"
set count1 = 0
set count2 = 0
set select_ok_ind = 0

SELECT  into "nl:"
        ptype.RH_PHENO_TESTING_ID,
        ptest_rec = decode(ptest.sequence,"Y","N")

FROM
        bb_rh_phenotype ptype,
        (dummyt d1 with seq = 1),
        bb_rh_pheno_testing ptest

PLAN
        ptype where ptype.active_ind = 1
JOIN
        d1 where d1.seq = 1
JOIN
        ptest where ptest.rh_phenotype_id = ptype.rh_phenotype_id
                and ptest.active_ind = 1

order   ptype.rh_phenotype_id, ptest.sequence

head report
    count1 = 0
head ptype.rh_phenotype_id
    count1 = count1 + 1
    if (mod(count1,10) = 1)
        stat = alterlist(reply->qual, count1 + 9)
    endif
    stat = alterlist(reply->qual, count1)
    reply->qual[count1].fr_nomenclature_id  = ptype.fr_nomenclature_id
    reply->qual[count1].w_nomenclature_id = ptype.w_nomenclature_id
    reply->qual[count1].rh_phenotype_id = ptype.rh_phenotype_id
    reply->qual[count1].updt_cnt = ptype.updt_cnt
    reply->qual[count1].active_ind = ptype.active_ind
		count2 = 0
    detail
        if (ptest_rec = "Y")
   			    count2 = count2 + 1
				    if (mod(count2,10) = 1)
				        stat = alterlist(reply->qual[count1]->pheno_testing, count2 + 9)
				    endif
		        reply->qual[count1].pheno_testing[count2].rh_pheno_testing_id = ptest.rh_pheno_testing_id  ;BNK - 11/05/97
		        reply->qual[count1].pheno_testing[count2].special_testing_cd = ptest.special_testing_cd
		        reply->qual[count1].pheno_testing[count2].sequence = ptest.sequence
		        reply->qual[count1].pheno_testing[count2].updt_cnt = ptest.updt_cnt
		        reply->qual[count1].pheno_testing[count2].active_ind = ptest.active_ind
				endif
foot ptype.rh_phenotype_id
		stat = alterlist(reply->qual[count1].pheno_testing, count2)
foot report
    stat = alterlist(reply->qual, count1)
    select_ok_ind = 1

with nocounter, outerjoin(d1), nullreport

if (select_ok_ind = 1)
    if (curqual = 0)
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "Z",
             /* process */ "select bb_rh_phenotype/bb_rh_pheno_testing",
             /* message */ "ZERO rows found on bb_rh_phenotype/bb_rh_pheno_testing"
            )
    else
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "S",
             /* process */ "select bb_rh_phenotype/bb_rh_pheno_testing",
             /* message */ "SUCCESS"
            )
    endif
else
    call LOAD_PROCESS_STATUS
        (
         /* status  */ "F",
         /* process */ "select bb_rh_phenotype/bb_rh_pheno_testing",
         /* message */ "Select on bb_rh_phenotype/bb_rh_pheno_testing FAILED"
        )
endif

go to EXIT_SCRIPT


subroutine LOAD_PROCESS_STATUS
    (
     sub_status,
     sub_process,
     sub_message
    )

    set reply->status_data->status = sub_status
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alter(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = sub_process
    set reply->status_data->subeventstatus[count1]->OperationStatus = sub_status
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_get_phenotypes"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = sub_message
END         ; end subroutine LOAD_PROCESS_STATUS

#EXIT_SCRIPT

end go

;Generated by GNU enscript 1.6.4.
