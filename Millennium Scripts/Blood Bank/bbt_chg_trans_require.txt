 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_UPDATETRANSREQ/BBT_CHG_TRANS_REQUIRE.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_CHG_TRANS_REQUIRE.PRG
        Object name:            bbt_chg_trans_require
        Request #:              225220

        Product:                Blood Bank Transfusion
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Update the person transfusion 
                                requirement changes.

        Tables read:            N/A

        Tables updated:         PERSON_TRANS_REQ

        Executing from:         Update Transfusion Requirements

        Special Notes:          N/A
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 10/29/96 Linda DeJong         Initial Release                     *
;     002 03/19/12 Gayatri Samala       added fields for person_trans_req   *
;										table for storing added user details*
;										of transfusion reqs for CR 1-324245021*
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

        drop program bbt_chg_trans_req:dba go
        create program bbt_chg_trans_req:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
          1  person_id = f8
          1  encntr_id = f8
          1  qual[x]
             2  selected_changed = i2
             2  active_ind = i2
             2  requirement_cd = f8
             2  person_trans_req_id = f8
             2  updt_cnt = i4
             2  add_require = i2
        )
        */

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
        record reply
        (
%I CCLSOURCE:STATUS_BLOCK.INC
        )

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
        set reply->status_data->status = "F"
        set nbr_to_chg = size(request->qual,5)
        set y = 0
        set idx = 0
        set failed = "F"
        set require_updt_cnt = 0
        set require_active_ind = 0
        set require_active_dt_tm = cnvtdatetime(curdate, curtime3)
        set require_inactive_dt_tm = cnvtdatetime(curdate, curtime3)

/****************************************************************************
*       Determine if person transfusion requirements need to be updated     *
*****************************************************************************/
 for (idx = 1 to nbr_to_chg)
   
    if (request->qual[idx]->selected_changed = 1)
/****************************************************************************
*       Lock row to update                                                  *
*****************************************************************************/
       if (request->qual[idx]->add_require = 1)
           set next_code = 0.0
           execute cpm_next_code
           insert into person_trans_req p
               set p.person_trans_req_id = next_code,
                   p.requirement_cd = request->qual[idx]->requirement_cd,
                   p.person_id = request->person_id,
                   p.encntr_id = request->encntr_id,
                   p.active_ind = request->qual[idx]->active_ind,
                   p.active_status_cd = 0,
                   p.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
                   p.active_status_prsnl_id = reqinfo->updt_id,
                   p.updt_cnt         = 0,
                   p.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
                   p.updt_id          = reqinfo->updt_id,
                   p.updt_task        = reqinfo->updt_task,
                   p.updt_applctx     = reqinfo->updt_applctx,
                   ; if a tranasfusion requirement is added, user id and added date/time will be stored in the below fields
                   p.added_prsnl_id   = reqinfo->updt_id,
                   p.added_dt_tm      = cnvtdatetime(curdate,curtime3)
            with counter
            if (curqual = 0)
              set y = y + 1
              if (y > 1)
                set stat = alter(reply->status_data->subeventstatus, y+1)
              endif
              set reply->status_data->subeventstatus[y]->OperationName
               = "insert"
              set reply->status_data->subeventstatus[y]->OperationStatus
               = "F"
              set reply->status_data->subeventstatus[y]->TargetObjectName
               = "person_trans_req"
              set reply->status_data->subeventstatus[y]->TargetObjectValue 
               = request->qual[idx]->person_id
              set failed = "T"
              go to ROW_FAILED
            endif
       else
           select into "nl:"
              p.person_trans_req_id
           from person_trans_req p
           where (p.person_trans_req_id = request->qual[idx]->person_trans_req_id)
           detail
              require_active_ind = p.active_ind
              require_updt_cnt = p.updt_cnt
              require_active_dt_tm = p.active_status_dt_tm
           with nocounter, forupdate(p)

           if (curqual = 0)
              set failed = "T"
              set y = y +1
              if (y > 1)
                 set stat = alter(reply->status_data->subeventstatus, y +1)
              endif     
              set reply->status_data->subeventstatus[y]->OperationName = "lock"
              set reply->status_data->subeventstatus[y]->OperationStatus = "F"
              set reply->status_data->subeventstatus[y]->TargetObjectName 
                        = "Person Trans Req"
              set reply->status_data->subeventstatus[y]->TargetObjectValue 
                        = "Lock failed"
           endif

/****************************************************************************
*       Check to see if row already changed                                 *
*****************************************************************************/
           if (request->qual[idx]->updt_cnt != require_updt_cnt)
              set failed = "T"
              set reply->status_data->OperationName = "change"
              set reply->status_data->OperationStatus = "F"
              set reply->status_data->TargetObjectName = "person trans req"
              set reply->status_data->TargetObjectValue = "Update count mismatch"
           else
/****************************************************************************
*       Update the row                                                      *
*****************************************************************************/
             update into person_trans_req p

             set
              p.active_ind = request->qual[idx]->active_ind,
              p.active_status_cd = 0,
              p.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
              p.active_status_prsnl_id = reqinfo->updt_id,
              p.updt_cnt         = p.updt_cnt + 1,
              p.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
              p.updt_id          = reqinfo->updt_id,
              p.updt_task        = reqinfo->updt_task,
              p.updt_applctx     = reqinfo->updt_applctx
              where
                p.person_trans_req_id = request->qual[idx]->person_trans_req_id
            
              with counter
              if (curqual = 0)
                set y = y + 1
                if (y > 1)
                  set stat = alter(reply->status_data->subeventstatus, y+1)
                endif
                set reply->status_data->subeventstatus[y]->OperationName
                     = "change"
                set reply->status_data->subeventstatus[y]->OperationStatus
                     = "F"
                set reply->status_data->subeventstatus[y]->TargetObjectName
                     = "person trans req"
                set reply->status_data->subeventstatus[y]->TargetObjectValue 
                     = request->qual[idx]->person_trans_req_id
                set failed = "T"
                go to ROW_FAILED
              endif
           endif
       endif 
    endif 
  endfor

#ROW_FAILED
        if (failed = "T")
          set reply->status_data->status = "Z"
          set reply->status_data->OperationName = "change"
          set reply->status_data->OperationStatus = "F"
          set reply->status_data->TargetObjectName = "table"
          set reply->status_data->TargetObjectValue = "person trans req"
          rollback
          go to END_SCRIPT
        else    
          set reply->status_data->status = "S"
        endif

        commit
/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/

#END_SCRIPT
end go

;Generated by GNU enscript 1.6.4.
