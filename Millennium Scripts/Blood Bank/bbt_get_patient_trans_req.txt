 ;;Solution_Test/script/PathNet -- BB Transfusion/Dispenseassign/BBT_GET_PATIENT_TRANS_REQ.PRG Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_patient_trans_req.prg
        Object name:            bbt_get_patient_trans_req
        Request #:              225229

        Product:                Blood Bank Transfusion
        Product Team:           Blood Bank Transfusion
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Used to get all antibodies and corresponding
                                antigen negative requirements associated 
                                with a person

        Tables read:            patient_trans_req
                                transfusion_requirement

        Tables updated:         none
        Executing from:         Dispense  

        Special Notes:          none

******************************************************************************/ 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 04/27/96 Teresa Davis         Initial Release                     *
;     001 09/17/99 Jose Suarez          match with bbt_get_person to get    *
;                                       trans req if update from dispense   *
;     002 01/08/02  SD4221              Add order by to the select distinct *
;                                       Use outerjoin function              *
;     003 08/23/07 Tom Brecht           Added Antibody list to reply        *
;     004 04/08/10 Ronda Zheng          Retrieve ISBT meaning               *
;     005 09/12/13 Fitsum Abebe         Returned excluded/inapplicable      *
;                                       product category info for           *
;                                       transfusion requirements.           *
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_patient_trans_req:dba go
create program bbt_get_patient_trans_req:dba

/**************************************************************
*        Request Record
**************************************************************/
/*
record request
( 1 person_id   = f8)
*/

/***************************************************************
*        Reply Record
***************************************************************/

record reply
(
;----------------------------------------TRANSFUSION REQUIREMENTS
  1 reqs[*]
    2 REQUIREMENT_cd               =     f8
    2 REQUIREMENT_disp             =     c40
    2 REQUIREMENT_desc             =     c40
    2 REQUIREMENT_seq              =     i4
    2 antigenneg_cnt               =     i4

    2 antigen_neg_list[*]
      3 antigen_cd                 =     f8
      3 antigen_disp               =     c40
      3 antigen_mean               =     c12
      3 antigen_seq                =     i4
      3 warn_ind                   =     i2
      3 allow_override_ind         =     i2
      3 special_isbt               =     vc
    2 excluded_product_category_list[*]
      3 product_cat_cd             =     f8
      3 product_cat_disp           =     vc
  1 antibody[*]
    2 antibody_cd                  =     f8
    2 antibody_disp                =     c40
    2 antibody_desc                =     c40
    2 antibody_seq                 =     i4
    2 antigenneg_cnt               =     i4
    2 anti_d_ind                   =     i2
    2 significance_ind             =     i2

    2 antigen_neg_list[*]
      3 antigen_cd                 =     f8
      3 antigen_disp               =     c40
      3 antigen_seq                =     i4
      3 warn_ind                   =     i2
      3 allow_override_ind         =     i2

%i cclsource:status_block.inc
)

/******************************************************
*        Initialize Variables
******************************************************/
set reply->status_data->status = "F"
set anti_cnt = 0
set neg_cnt = 0
set excld_prod_cat_cnt = 0
/***************************************************************************/
#GET_TRANSFUSION_REQUIREMENTS
select distinct into "nl:"
     p.REQUIREMENT_cd,
     a.special_testing_cd
from person_trans_req p,
     trans_req_r a,
     bb_isbt_attribute_r biar,
     bb_isbt_attribute bia
 
plan p where (p.person_id = request->person_id
         and p.active_ind = 1)
join a where  a.requirement_cd = outerjoin(p.REQUIREMENT_cd) 
         and  a.active_ind = outerjoin(1)

join biar where (biar.attribute_cd = outerjoin(a.special_testing_cd)
         and biar.active_ind = outerjoin(1))
join bia where (bia.bb_isbt_attribute_id = outerjoin(biar.bb_isbt_attribute_id)
         and bia.active_ind =outerjoin(1))

Order by p.requirement_cd

head p.REQUIREMENT_cd
   neg_cnt = 0
   anti_cnt = anti_cnt + 1
   stat = alterlist(reply->reqs, anti_cnt)
   reply->reqs[anti_cnt].REQUIREMENT_cd = p.REQUIREMENT_cd

detail
   if (a.special_testing_cd > 0)
      neg_cnt = neg_cnt + 1
      stat = alterlist(reply->reqs[anti_cnt]->antigen_neg_list,neg_cnt)
      reply->reqs[anti_cnt]->antigen_neg_list[neg_cnt].antigen_cd 
                = a.special_testing_cd
      reply->reqs[anti_cnt]->antigen_neg_list[neg_cnt].warn_ind = a.warn_ind
      reply->reqs[anti_cnt]->antigen_neg_list[neg_cnt].ALLOW_OVERRIDE_IND 
                = a.ALLOW_OVERRIDE_IND
      reply->reqs[anti_cnt]->antigen_neg_list[neg_cnt].special_isbt = bia.standard_display
   endif
foot p.REQUIREMENT_cd
   reply->reqs[anti_cnt].antigenneg_cnt            = neg_cnt
with nocounter 

if (curqual = 0)
   ;log error
   set reply->status_data->status = "Z"
else
   set reply->status_data->status = "S"
endif

;Retrieve inapplicable/excluded product categories for each transfusion requirement.
select into "nl:"  
from excld_trans_req_prod_cat_r etp,
     (dummyt d with seq = value(size(reply->reqs, 5)))
      
plan d 
join etp where (etp.requirement_cd = reply->reqs[d.seq].REQUIREMENT_cd
         and etp.active_ind = 1)
order by etp.requirement_cd 
			
head  etp.requirement_cd 
   excld_prod_cat_cnt = 0
   
detail

   if (etp.product_cat_cd > 0)
      excld_prod_cat_cnt = excld_prod_cat_cnt + 1
      stat = alterlist(reply->reqs[d.seq]->excluded_product_category_list, excld_prod_cat_cnt)
      reply->reqs[d.seq]->excluded_product_category_list[excld_prod_cat_cnt].product_cat_cd 
                = etp.product_cat_cd
      reply->reqs[d.seq]->excluded_product_category_list[excld_prod_cat_cnt].product_cat_disp
                = uar_get_code_display(etp.product_cat_cd)
   endif

with nocounter

#GET_ANTIBODY_INFO
set anti_cnt = 0
set neg_cnt = 0
set max_anti = 0
set max_neg = 0

/******************************************************
*        Instructions
******************************************************/
select distinct into "nl:"
     p.antibody_cd,
     t.special_testing_cd
from person_antibody p,
     transfusion_requirements tr,
     dummyt d,
     trans_req_r t

plan p where (p.person_id = request->person_id
         and p.active_ind = 1)
join tr where (p.antibody_cd = tr.requirement_cd)
join d where (d.seq = 1)
join t where (p.antibody_cd = t.requirement_cd
         and  t.active_ind = 1)

order by p.antibody_cd,
		 t.special_testing_cd
			
head p.antibody_cd

   neg_cnt = 0
   anti_cnt = anti_cnt + 1
   stat = alterlist(reply->antibody, anti_cnt)
   reply->antibody[anti_cnt].antibody_cd               = p.antibody_cd
   reply->antibody[anti_cnt].anti_d_ind                = tr.anti_d_ind
   reply->antibody[anti_cnt].significance_ind          = tr.significance_ind ;004


detail
   if (t.special_testing_cd > 0)
      neg_cnt = neg_cnt + 1
      stat = alterlist(reply->antibody[anti_cnt]->antigen_neg_list,neg_cnt)
      reply->antibody[anti_cnt]->antigen_neg_list[neg_cnt].antigen_cd 
                = t.special_testing_cd
      reply->antibody[anti_cnt]->antigen_neg_list[neg_cnt].warn_ind = t.warn_ind
      reply->antibody[anti_cnt]->antigen_neg_list[neg_cnt].ALLOW_OVERRIDE_IND 
                = t.ALLOW_OVERRIDE_IND
   endif
foot p.antibody_cd
   reply->antibody[anti_cnt].antigenneg_cnt            = neg_cnt
with nocounter, outerjoin=d

if (curqual > 0 and reply->status_data->status != "F")
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
