 ;;Solution_Test/script/PathNet -- BB Donor/BBDReviewExceptions/BBT_CHG_EXCEPTION.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       bbd_chg_exception.prg
        Object name:            bbd_chg_exception
        Request #:              225469
 
        Product:                CPM
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Update review of exception
 
        Tables read:            none
        Tables updated:         bb_exception
                                long_text
 
        Executing from:
 
        Special Notes:
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 10/28/97 Erin Fisher          Initial Release                     *
;     002 06/23/05 Jeff Wain            Long sequence fixes on seqn variable*
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program bbt_chg_exception:dba go
create program bbt_chg_exception:dba
 
/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
          1  updt_cnt                 = i4
          1  exception_id             = f8
          1  review_dt_tm             = dq8
          1  review_status_cd         = f8
          1  review_by_prsnl_id       = f8
          1  review_doc_id            = f8
          1  long_text                = vc
          1  change_long_text         = i4
          )
        */
 
/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
        record reply
        (
%I CCLSOURCE:STATUS_BLOCK.INC
        )
set modify predeclare
/****************************************************************************
*       Declare Statements                                                      *
*****************************************************************************/
declare new_long_text_id 			= f8 with protect, noconstant(0.0)
declare new_updt_cnt            	= i4 with protect, noconstant(0)
declare cur_updt_cnt               	= i4 with protect, noconstant(0)
declare failed                     	= c1 with protect, noconstant("F")
/****************************************************************************
*       Set Statements                                                      *
*****************************************************************************/
set new_long_text_id           	= request->review_doc_id
set reply->status_data->status 	= "F"
/****************************************************************************
*       Start Code                                                          *
*****************************************************************************/
 
/****************************************************************************
*       Lock Rows to update and check for allready changed                  *
*****************************************************************************/
select into "nl:"
        bb.*
from bb_exception bb
where bb.exception_id = request->exception_id and
      bb.updt_cnt = request->updt_cnt
with nocounter , forupdate(bb)
 
if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->OperationName
         = "Lock",
    set reply->status_data->subeventstatus[1]->OperationStatus
         = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
         = "bb_exception",
    set reply->status_data->subeventstatus[1]->TargetObjectValue
         = "bb_exception table",
    go to exit_script
endif
 
if (request->change_long_text = 1)  ;If text has changed
    ;If long_text for this exception exist then lock record
    if (request->review_doc_id != 0)
            select into "nl:"
                    lg.*
            from long_text lg
            where lg.long_text_id = request->review_doc_id
            with nocounter, forupdate(lg)
 
      if (curqual = 0)
        set failed = "T",
        set reply->status_data->subeventstatus[1]->OperationName
             = "Lock",
        set reply->status_data->subeventstatus[1]->OperationStatus
             = "F",
        set reply->status_data->subeventstatus[1]->TargetObjectName
             = "long_text",
        set reply->status_data->subeventstatus[1]->TargetObjectValue
             = "long_text table",
        go to exit_script
      endif
    endif
    /************************************************************************
    *       update long_text table                                          *
    *************************************************************************/
 
    ;If long_text for this exception exist then update record
    if (request->review_doc_id != 0)
         update into long_text lg set
             lg.updt_cnt = lg.updt_cnt + 1,
             lg.updt_dt_tm = cnvtdatetime(curdate,curtime3),
             lg.updt_id = reqinfo->updt_id,
             lg.updt_task = reqinfo->updt_task,
             lg.updt_applctx = reqinfo->updt_applctx,
             lg.long_text = request->long_text
         where lg.long_text_id = request->review_doc_id
         with nocounter
    else
       ;get next long_text_id
        select into "nl:"
            seqn = seq(long_data_seq,nextval)
        from dual
        detail
            new_long_text_id = seqn
        with format, nocounter
 
        ;Write new record to Long_text table
        insert into long_text lg set
             lg.long_text = request->long_text,
             lg.long_text_id = new_long_text_id,
             lg.updt_cnt = 0,
             lg.updt_dt_tm = cnvtdatetime(curdate,curtime3),
             lg.updt_id = reqinfo->updt_id,
             lg.updt_task = reqinfo->updt_task,
             lg.updt_applctx = reqinfo->updt_applctx,
             lg.active_ind = 1,
             lg.active_status_cd = reqdata->active_status_cd,
             lg.active_status_prsnl_id = reqinfo->updt_id,
             lg.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
             lg.parent_entity_name = "BB_EXCEPTION",
             lg.parent_entity_id = request->exception_id
        with nocounter
    endif
    if (curqual = 0)
        set failed = "T",
        set reply->status_data->subeventstatus[1]->OperationName
             = "Add",
        set reply->status_data->subeventstatus[1]->OperationStatus
             = "F",
        set reply->status_data->subeventstatus[1]->TargetObjectName
             = "long_text",
        set reply->status_data->subeventstatus[1]->TargetObjectValue
             = "long_text table",
        go to exit_script
    endif
 
endif
/****************************************************************************
*       update bb_exception table                                           *
*****************************************************************************/
update into bb_exception bb set
        bb.updt_dt_tm = cnvtdatetime(curdate,curtime3),
        bb.updt_id = reqinfo->updt_id,
        bb.updt_task = reqinfo->updt_task,
        bb.updt_applctx = reqinfo->updt_applctx,
        bb.updt_cnt = bb.updt_cnt + 1,
        bb.review_dt_tm = cnvtdatetime(request->review_dt_tm),
        bb.review_status_cd = request->review_status_cd,
        bb.review_by_prsnl_id = request->review_by_prsnl_id,
        bb.review_doc_id = new_long_text_id
where bb.exception_id = request->exception_id
with nocounter
if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->OperationName
         = "Update",
    set reply->status_data->subeventstatus[1]->OperationStatus
         = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
         = "bb_exception",
    set reply->status_data->subeventstatus[1]->TargetObjectValue
         = "bb_exception table",
    go to exit_script
endif
 
/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/
#exit_script
if (failed= "T")
        set reqinfo->commit_ind = 0
else
        set reqinfo->commit_ind = 1
        set reply->status_data->status = "S"
endif
 
end go
 
 

;Generated by GNU enscript 1.6.4.
