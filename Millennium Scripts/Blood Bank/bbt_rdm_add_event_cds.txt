 ;;Solution_Test/script/PathNet -- BB Transfusion/BB_OCD_README_SCRIPTS/bbt_rdm_add_event_cds.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_rdm_add_event_cds.prg
        Object name:            bbt_rdm_add_event_cds
        Request #:              0

        Product:                PathNet
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        To add standard event codes needed to allow 
                                posting to the clinical event data model.

        Tables read,            TABLE_NAME              METHOD (UNIQUE, RANGE, FULL)
        and access method:      --------------------    -----------------------------
                                code_value              range
								v500_event_code			range
								
        Tables updated:         All updates made by dm_post_event_code.prg.  See 
                                that program's documentation for further details.
        
        Executing from:         dbimport - readme

        Special Notes:          Each section should clearly identify what the purpose
                                of that README step is.  And ALL README steps in this
                                file should be considered RUN ONCE.

        Run Occurance:          (select ONE of the following)
                                -----------------------------
                                [X] 1. RUN ONCE
                                [ ] 2. RUN MANY

        ReadMe Category:        (select ONE of the following)
                                -----------------------------
                                [X] 1. Data Load
                                [ ] 2. Data Conversion
                                [ ] 3. Data Migration

        Execution Time:         (select ONE of the following)
                                ------------------------------------
                                [X] 1. Uptime before uptime schema.
                                [ ] 2. Uptime after uptime schema.
                                [ ] 3. Downtime before downtime schema.
                                [ ] 4. Downtime after downtime schema.
                                [ ] 5. Uptime after all other components.
        
        Exec. Justification:    
      
        Parent Script:          n/a

        Check Script:           n/a

        Data file for import:   n/a
        
        Execution Duration:     (select ONE of the following)
                                ----------------------------------
                                [X] 1. Fixed Time
                                [ ] 2. Driver Table: ___________________________

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 02/06/00 Martin Myers         Initial Release                     *
;     002 08/27/02 Jason Osborn         Renamed and formatted as per        *
;                                       PathNet README standards.           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

DROP PROGRAM BBT_RDM_ADD_EVENT_CDS:DBA GO
CREATE PROGRAM BBT_RDM_ADD_EVENT_CDS:DBA

%i cclsource:pathnet_ocd_subroutines.inc

DECLARE dLABSourceCd = f8
DECLARE dBBTSourceCd = f8
DECLARE nFoundLAB = i2
DECLARE nFoundRETURNINV = i2
DECLARE nFoundTRANSFUSED = i2
DECLARE nFoundBBPRODUCT = i2
DECLARE nFoundBBPRODUCTAG = i2
DECLARE sREADME_NAME = vc
 
SET dLABSourceCd = 0
SET dBBTSourceCd = 0
SET nFoundLAB = 0
SET nFoundRETURNINV = 0
SET nFoundTRANSFUSED = 0
SET nFoundBBPRODUCT = 0
SET nFoundBBPRODUCTAG = 0

SET sREADME_NAME = "bbt_rdm_add_event_cds"
CALL LOGSCRIPTSTART(sREADME_NAME)

;//Did select on code value because readme doesn't have access to uar calls.

SELECT INTO "nl:"
  c.code_value
FROM code_value c
WHERE c.code_set = 73 and c.cdf_meaning in ("LAB", "BBT")
DETAIL
  case (c.cdf_meaning)
        of "LAB": dLABSourceCd = c.code_value
        of "BBT": dBBTSourceCd = c.code_value
  endcase
WITH NOCOUNTER

SELECT INTO "nl:"
  v.event_cd_disp_key
FROM v500_event_code v 
WHERE v.event_cd_disp_key in ("LAB", "RETURNINV", "TRANSFUSED", "BBPRODUCT", "BBPRODUCTAG")
DETAIL
   case (v.event_cd_disp_key)
         of "LAB":         nFoundLAB = 1
         of "RETURNINV":   nFoundRETURNINV = 1
         of "TRANSFUSED":  nFoundTRANSFUSED = 1 
         of "BBPRODUCT":   nFoundBBPRODUCT = 1
         of "BBPRODUCTAG": nFoundBBPRODUCTAG = 1
   endcase
WITH NOCOUNTER

IF (nFoundLAB = 0) 
  SET dm_post_event_code->event_set_name = FILLSTRING(40, " ")
  SET dm_post_event_code->event_cd_disp = "LAB"
  SET dm_post_event_code->event_cd_descr = "LAB"
  SET dm_post_event_code->event_cd_definition = "LAB"
  SET dm_post_event_code->status = "ACTIVE" 
  SET dm_post_event_code->format = "UNKNOWN"
  SET dm_post_event_code->storage = "UNKNOWN"
  SET dm_post_event_code->event_class = "UNKNOWN"
  SET dm_post_event_code->event_confid_level = "ROUTCLINICAL"
  SET dm_post_event_code->event_subclass = "UNKNOWN"
  SET dm_post_event_code->event_code_status = "AUTH"
  SET dm_post_event_code->event_cd = 0.0
  SET dm_post_event_code->parent_cd = dLABSourceCd
  SET dm_post_event_code->flex1_cd = 0.0
  SET dm_post_event_code->flex2_cd = 0.0
  SET dm_post_event_code->flex3_cd = 0.0
  SET dm_post_event_code->flex4_cd = 0.0
  SET dm_post_event_code->flex5_cd = 0.0
  EXECUTE dm_post_event_code
ENDIF

IF (nFoundRETURNINV = 0) 
  SET dm_post_event_code->event_set_name = "RETURNINV"
  SET dm_post_event_code->event_cd_disp = "RETURNINV"
  SET dm_post_event_code->event_cd_descr = "RETURNINV"
  SET dm_post_event_code->event_cd_definition = "RETURNINV"
  SET dm_post_event_code->status = "ACTIVE" 
  SET dm_post_event_code->format = "UNKNOWN"
  SET dm_post_event_code->storage = "UNKNOWN"
  SET dm_post_event_code->event_class = "UNKNOWN"
  SET dm_post_event_code->event_confid_level = "ROUTCLINICAL"
  SET dm_post_event_code->event_subclass = "UNKNOWN"
  SET dm_post_event_code->event_code_status = "AUTH"
  SET dm_post_event_code->event_cd = 0.0
  SET dm_post_event_code->parent_cd = 0.0
  SET dm_post_event_code->flex1_cd = 0.0
  SET dm_post_event_code->flex2_cd = 0.0
  SET dm_post_event_code->flex3_cd = dBBTSourceCd
  SET dm_post_event_code->flex4_cd = 0.0
  SET dm_post_event_code->flex5_cd = 0.0
  EXECUTE dm_post_event_code

ENDIF

IF (nFoundTRANSFUSED = 0) 
  SET dm_post_event_code->event_set_name = "TRANSFUSED"
  SET dm_post_event_code->event_cd_disp = "TRANSFUSED"
  SET dm_post_event_code->event_cd_descr = "TRANSFUSED"
  SET dm_post_event_code->event_cd_definition = "TRANSFUSED"
  SET dm_post_event_code->status = "ACTIVE" 
  SET dm_post_event_code->format = "UNKNOWN"
  SET dm_post_event_code->storage = "UNKNOWN"
  SET dm_post_event_code->event_class = "UNKNOWN"
  SET dm_post_event_code->event_confid_level = "ROUTCLINICAL"
  SET dm_post_event_code->event_subclass = "UNKNOWN"
  SET dm_post_event_code->event_code_status = "AUTH"
  SET dm_post_event_code->event_cd = 0.0
  SET dm_post_event_code->parent_cd = dBBTSourceCd
  SET dm_post_event_code->flex1_cd = 0.0
  SET dm_post_event_code->flex2_cd = 0.0
  SET dm_post_event_code->flex3_cd = 0.0
  SET dm_post_event_code->flex4_cd = 0.0
  SET dm_post_event_code->flex5_cd = 0.0
  EXECUTE dm_post_event_code
ENDIF

IF (nFoundBBPRODUCT = 0) 
  SET dm_post_event_code->event_set_name = "BBPRODUCT"
  SET dm_post_event_code->event_cd_disp = "BBPRODUCT"
  SET dm_post_event_code->event_cd_descr = "BBPRODUCT"
  SET dm_post_event_code->event_cd_definition = "BBPRODUCT"
  SET dm_post_event_code->status = "ACTIVE" 
  SET dm_post_event_code->format = "UNKNOWN"
  SET dm_post_event_code->storage = "UNKNOWN"
  SET dm_post_event_code->event_class = "UNKNOWN"
  SET dm_post_event_code->event_confid_level = "ROUTCLINICAL"
  SET dm_post_event_code->event_subclass = "UNKNOWN"
  SET dm_post_event_code->event_code_status = "AUTH"
  SET dm_post_event_code->event_cd = 0.0
  SET dm_post_event_code->parent_cd = 0.0
  SET dm_post_event_code->flex1_cd = dBBTSourceCd
  SET dm_post_event_code->flex2_cd = 0.0
  SET dm_post_event_code->flex3_cd = 0.0
  SET dm_post_event_code->flex4_cd = 0.0
  SET dm_post_event_code->flex5_cd = 0.0
  EXECUTE dm_post_event_code
ENDIF

IF (nFoundBBPRODUCTAG = 0) 
  SET dm_post_event_code->event_set_name = "BBPRODUCTAG"
  SET dm_post_event_code->event_cd_disp = "BBPRODUCTAG"
  SET dm_post_event_code->event_cd_descr = "BBPRODUCTAG"
  SET dm_post_event_code->event_cd_definition = "BBPRODUCTAG"
  SET dm_post_event_code->status = "ACTIVE" 
  SET dm_post_event_code->format = "UNKNOWN"
  SET dm_post_event_code->storage = "UNKNOWN"
  SET dm_post_event_code->event_class = "UNKNOWN"
  SET dm_post_event_code->event_confid_level = "ROUTCLINICAL"
  SET dm_post_event_code->event_subclass = "UNKNOWN"
  SET dm_post_event_code->event_code_status = "AUTH"
  SET dm_post_event_code->event_cd = 0.0
  SET dm_post_event_code->parent_cd = 0.0
  SET dm_post_event_code->flex1_cd = 0.0
  SET dm_post_event_code->flex2_cd = dBBTSourceCd
  SET dm_post_event_code->flex3_cd = 0.0
  SET dm_post_event_code->flex4_cd = 0.0
  SET dm_post_event_code->flex5_cd = 0.0
  EXECUTE dm_post_event_code
ENDIF

free record dm_post_event_code

call logstatus ("Exiting BBT_RDM_ADD_EVENT_CDS.PRG", "S")
call logmsg("Exiting BBT_RDM_ADD_EVENT_CDS.PRG",e_DISPMSG + e_LOGTOFILE)

CALL LOGSCRIPTEND(sREADME_NAME)

END GO

;Generated by GNU enscript 1.6.4.
