 ;;Solution_Test/script/PathNet -- BB Transfusion/Productorders/BBT_GET_PROCEDURES.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_GET_PROCEDURES.PRG
        Object name:            bbt_get_procedures
        Request #:              225199

        Product:                Blood Bank Transfusion/Donor
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Get all the possible procedures for products. 

        Tables read:            CODE_VALUE, ORDER_CATALOG, ORDER_CATALOG_SYNONYM

        Tables updated:         N/A

        Executing from:         Orders on Products

        Special Notes:          N/A
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 10/18/96  Eric Nelson         Initial Release                     *
;     002 05/06/98  Mike Goings         Return Donor Product Orders         *
;     003 05/03/99  Doug Saus           Replaced code_value selects with uar*
;     004 12/09/04  Cedric Daniels		Added a qualification in the select *
;										statement to only retrieve active   *
;		  								synonyms off the ORDER_CATALOG_SYNONYM*
;										table.				    *
;     005 01/15/09  Jacob Anderson      removed code so donor product and   *
;                                       donor activity types orders will not*
;                                       be retrieved                        *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

        drop program bbt_get_procedures:dba go
        create program bbt_get_procedures:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
        /*
        record request
        (
        )
        */

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
        record reply
        (1  qual[*]
            2  catalog_cd      = f8
            2  catalog_type_cd = f8
            2  synonym_id      = f8
            2  mnemonic        = vc
            2  oe_format_id    = f8

%I CCLSOURCE:STATUS_BLOCK.INC
        )

/****************************************************************************
*       ActivityTypes record                                                *
*****************************************************************************/
        record ActivityTypes
        (1  qual[*]
            2  activity_type_cd = f8
        )

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
        set err_cnt   = 0 
        set qual_cnt  = 0
        set qual_cnt2 = 0
        set reply->status_data.status = "F"
        set stat = alterlist(ActivityTypes->qual, 0)
         
/****************************************************************************
*       Read for activity_type_codes                                        *
*****************************************************************************/
;003 begin
;        select into "nl:"
;           c.code_value
;        
;        from code_value c
;
;        where (c.code_set = 106 and
;               c.cdf_meaning in ("BB","BBDONORPROD"))
;;               c.cdf_meaning = "BB")
;           and c.active_ind = 1 
;;               c.cdf_meaning in ("BB","GLB"))
;        detail
;            if (c.cdf_meaning = "BB")
;              BB_OWNER_CD = C.CODE_VALUE
;            else
;              DP_OWNER_CD = C.CODE_VALUE
;            endif
;;            BB_OWNER_CD = C.CODE_VALUE
;        with nocounter

        set xm_cd = 0.0
        set pat_abo_cd = 0.0
        set product_order_cd = 0.0
        set dispense_order_cd = 0.0
        set trans_react_cd = 0.0

        set BB_OWNER_CD = 0.0
        set uar_failed = 0
        set cdf_meaning = fillstring(12," ")
        set cdf_meaning = "BB"
        set stat = uar_get_meaning_by_codeset(106,cdf_meaning,1,BB_OWNER_CD)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif

        set cdf_meaning = "XM"
        set stat = uar_get_meaning_by_codeset(1635,cdf_meaning,1,xm_cd)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif

        set cdf_meaning = "PATIENT ABO"
        set stat = uar_get_meaning_by_codeset(1635,cdf_meaning,1,pat_abo_cd)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif

        set cdf_meaning = "PRODUCT ORDR"
        set stat = uar_get_meaning_by_codeset(1635,cdf_meaning,1,product_order_cd)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif

        set cdf_meaning = "DISPENSE ORD"
        set stat = uar_get_meaning_by_codeset(1635,cdf_meaning,1,dispense_order_cd)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif

        set cdf_meaning = "TRANSF REACT"
        set stat = uar_get_meaning_by_codeset(1635,cdf_meaning,1,trans_react_cd)
        if (stat = 1)
            set uar_failed = 1
            go to SKIP_REST
        endif


#SKIP_REST
        if (uar_failed = 1) 
            set reply->status_data.status = "F"
            set reply->status_data->subeventstatus[1]->OperationName = "UAR"
            set reply->status_data->subeventstatus[1]->OperationStatus = "Z"
            set reply->status_data->subeventstatus[1]->TargetObjectName =
                       "106/1635" 
            set reply->status_data->subeventstatus[1]->TargetObjectValue =
                       concat("Uar get meaning by codeset failed for ",cdf_meaning)
            go to END_SCRIPT                                       
        endif   
;003 end

;        select into "nl:"
;           c.code_value        
;        from code_value c
;        where
;              (c.code_set = 1635 and
;               not c.cdf_meaning in ("XM","PATIENT ABO","PRODUCT ORDR",
;                                     "DISPENSE ORD","TRANSF REACT"))
;        detail
;           qual_cnt = qual_cnt + 1
;           stat = alterlist(ActivityTypes->qual, qual_cnt)
;           ActivityTypes->qual[qual_cnt].activity_type_cd = c.code_value       
;
;        with nocounter
;
;        if (curqual = 0)
;            set reply->status_data.status = "F"
;            set reply->status_data->subeventstatus[1]->OperationName = "SELECT"
;            set reply->status_data->subeventstatus[1]->OperationStatus = "Z"
;            set reply->status_data->subeventstatus[1]->TargetObjectName =
;                       "1635" 
;            set reply->status_data->subeventstatus[1]->TargetObjectValue =
;                       "Unable to retrieve activity types"
;            go to END_SCRIPT                                       
;        endif


/****************************************************************************
*       Read for all catalog codes for the activity types found             *
*****************************************************************************/

        select distinct into "nl:"
          ocs.synonym_id,
          ocs.catalog_cd,
          ocs.catalog_type_cd,
          ocs.mnemonic,
          sd.catalog_cd,
          ocs.oe_format_id,
          sd.bb_processing_cd

        from order_catalog oc
            ,service_directory sd
            ,order_catalog_synonym ocs 
 ;003           ,(dummyt d1 with seq = value(qual_cnt))

 ;003       plan d1
        plan sd where sd.bb_processing_cd > 0 
        join oc where oc.active_ind = 1
                  and oc.catalog_cd = sd.catalog_cd
                  and (oc.activity_type_cd = BB_OWNER_CD)
        join ocs where oc.catalog_cd = ocs.catalog_cd and ocs.active_ind = 1

        order by ocs.synonym_id,
                 ocs.catalog_cd,
                 ocs.catalog_type_cd,
                 ocs.mnemonic,
                 ocs.oe_format_id

        detail
          if  (sd.bb_processing_cd != xm_cd and
                sd.bb_processing_cd != pat_abo_cd and
                sd.bb_processing_cd != product_order_cd and
                sd.bb_processing_cd != dispense_order_cd and
                sd.bb_processing_cd != dispense_order_cd and
                sd.bb_processing_cd != trans_react_cd)
                  qual_cnt2 = qual_cnt2 + 1
                  stat = alterlist(reply->qual, qual_cnt2)
                  reply->qual[qual_cnt2].catalog_cd = ocs.catalog_cd
                  reply->qual[qual_cnt2].catalog_type_cd = ocs.catalog_type_cd
                  reply->qual[qual_cnt2].synonym_id = ocs.synonym_id
                  reply->qual[qual_cnt2].mnemonic = ocs.mnemonic
                  reply->qual[qual_cnt2].oe_format_id = ocs.oe_format_id
            endif

        with nocounter

          if (curqual = 0)
              set err_cnt = err_cnt + 1
              set reply->status_data->subeventstatus[err_cnt]->OperationName
                 = "select"
              set reply->status_data->subeventstatus[err_cnt]->OperationStatus
                 = "Z"
              set reply->status_data->subeventstatus[err_cnt]->TargetObjectName
                 = "order_catalog_synonym"
              set reply->status_data->subeventstatus[err_cnt]->TargetObjectValue 
                 = "unable to return catalog codes"
              set reply->status_data.status = "Z"
           else
              set reply->status_data.status = "S"
           endif

/****************************************************************************
*       exit_script                                                         *
*****************************************************************************/
#END_SCRIPT
           end go

;Generated by GNU enscript 1.6.4.
