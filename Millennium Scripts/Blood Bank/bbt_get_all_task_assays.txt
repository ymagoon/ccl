 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_GET_ALL_TASK_ASSAYS/bbt_get_all_task_assays.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 2002 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_all_task_assays.prg
        Object name:            bbt_get_all_task_assays
        Request #:              225931

        Product:                PathNet Lot Maintenance
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        This script will retrieve all active
                                Blood Bank discrete task assays.

        Tables read:            discrete_task_assay

        Tables updated:         None.

        Executing from:         PathNet Lot Maintenance

        Special Notes:          None.

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 02/24/04 Mark Brooks          Initial release.                    *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_all_task_assays go
create program bbt_get_all_task_assays

%i cclsource:pcs_subevent.inc

record reply
(
  1 qual[*]
    2 task_assay_cd          = f8
    2 task_assay_disp        = c40
    2 task_assay_desc        = vc
%i cclsource:status_block.inc
)

declare lCS_ACTIVITY_TYPE   = i4 with protect, constant(106)
declare dBBTypeCd           = f8 with protect, noconstant(0.0)
declare dBBProdTypeCd       = f8 with protect, noconstant(0.0)
declare lAssayCnt           = i4 with protect, noconstant(0)
declare lStat               = i4 with protect, noconstant(0)

set reply->status_data->status = "F"

set stat = uar_get_meaning_by_codeset(lCS_ACTIVITY_TYPE, "BB", 1, dBBTypeCd)
set stat = uar_get_meaning_by_codeset(lCS_ACTIVITY_TYPE, "BB PRODUCT", 1, dBBProdTypeCd)

if (dBBTypeCd = 0 or dBBProdTypeCd = 0)
  call subevent_add ("SELECT", "Z", "CODE_VALUE", "Code values for activity type not found.")
  go to EXIT_SCRIPT
endif

select into 'nl:'
from
  discrete_task_assay dta

where
  dta.activity_type_cd = dBBTypeCd or dta.activity_type_cd = dBBProdTypeCd
    and dta.active_ind = 1

detail
  lAssayCnt = lAssayCnt + 1
  if(lAssayCnt > size(reply->qual, 5))
    lStat = alterlist(reply->qual, lAssayCnt + 9)
  endif
  reply->qual[lAssayCnt].task_assay_cd = dta.task_assay_cd
  reply->qual[lAssayCnt].task_assay_disp = uar_get_code_display(dta.task_assay_cd)
  reply->qual[lAssayCnt].task_assay_desc = uar_get_code_description(dta.task_assay_cd)

foot report
  lStat = alterlist(reply->qual, lAssayCnt)

with nocounter

if (lAssayCnt > 0)
  set reply->status_data->status = "S"
else
  set reply->status_data->status = "Z"
endif


#EXIT_SCRIPT

end
go

;Generated by GNU enscript 1.6.4.
