 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_GET_BB_MOD_POOL_NBRS/BBT_GET_BB_MOD_POOL_NBRS.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2007 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_get_bb_mod_pool_nbrs.prg
        Object name:            bbt_get_bb_mod_pool_nbrs
        Request #:              225958

        Product:                Blood Bank
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            Rev 8.0

        Program purpose:        Retrieve the current Blood Bank sequences for the 
                                given organization and modification option.

        Tables read:            bb_mod_pool_nbr
 
        Tables updated:         None
        Executing from:         

        Special Notes:          
                                

;~DB~****************************************************************************************
;*                      GENERATED MODIFICATION CONTROL LOG                                  *
;********************************************************************************************
;*                                                                                          *
;*Mod Date     Engineer             ITN     Feature      Comment                            *
;*--- -------- -------------------- ------- ------------ -----------------------------------*
;*000 05/28/07 Tom Brecht           126339  131115       Initial Release                    *
;*001 06/14/07 Ronda Zheng          126339  131115       Only return sequence for current yr*
;*004 06/25/08 Jacob Anderson       131287  164860       Update to retrieve based on FIN    *
;*                                                       instead of Org or OptionID         *
;~DE~****************************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ***********************************/

drop program BBT_GET_BB_MOD_POOL_NBRS:dba go
create program BBT_GET_BB_MOD_POOL_NBRS:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(
  1  ISBT_FIN_NBR                    = c5
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
  1  qual[*]
     2 year         = i4
     2 sequence     = i4
%i cclsource:status_block.inc
)

declare stat                           = i4    with noconstant(0)
declare count                          = i4    with noconstant(0)
declare errmsg                         = c132  with noconstant(fillstring(132," "))
declare error_check                    = i2    with noconstant(error(errmsg,1))

set reply->status_data->status = "F"

/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
set modify predeclare

select into "nl:"
    bmp.year
    , bmp.seq
from bb_mod_pool_nbr bmp
where bmp.isbt_supplier_fin = request->ISBT_FIN_NBR
           and bmp.option_id = 0

head report
    count = 0
detail
    if (bmp.year = year(cnvtdatetime(curdate, curtime3)))
        count = count + 1
        if (count > size(reply->qual, 5))
            stat = alterlist(reply->qual, count + 9)
        endif
        reply->qual[count].year     = bmp.year
        reply->qual[count].sequence = bmp.seq_nbr  + 1
    endif
foot report
    stat = alterlist(reply->qual, count)

with nocounter

;* Check for CCL errors.
set error_check = error(errmsg,0)
if (error_check != 0)
   call ErrorHandler("SELECT", "F", "BBT_GET_BB_MOD_POOL_NBRS", errmsg)
   go to SET_STATUS
endif

/*****************************************************************************/
/* ErrorHandler subroutine                                                   */
/*****************************************************************************/
declare ErrorHandler(OperationName = c25,
                     OperationStatus = c1,
                     TargetObjectName = c25,
                     TargetObjectValue = vc) = NULL

subroutine ErrorHandler(OperationName,
                        OperationStatus,
                        TargetObjectName,
                        TargetObjectValue)
   declare error_cnt = i2 with private, noconstant(0)
   
   set error_cnt = size(reply->status_data.subeventstatus, 5)
   if (error_cnt > 1
   or (error_cnt = 1 and reply->status_data.subeventstatus[error_cnt].OperationStatus != ""))
      set error_cnt = error_cnt + 1
      set stat = alter(reply->status_data.subeventstatus, error_cnt)
   endif
   
   set reply->status_data.status = "F"
   set reply->status_data.subeventstatus[error_cnt].OperationName = OperationName
   set reply->status_data.subeventstatus[error_cnt].OperationStatus = OperationStatus
   set reply->status_data.subeventstatus[error_cnt].TargetObjectName = TargetObjectName
   set reply->status_data.subeventstatus[error_cnt].TargetObjectValue = TargetObjectValue
end


#SET_STATUS
if (error_check != 0)
   set reply->status_data->status = "F"
elseif (count = 0)
   set reply->status_data->status = "Z"
else
   set reply->status_data->status = "S"
endif

#EXIT_SCRIPT

end
go

;Generated by GNU enscript 1.6.4.
