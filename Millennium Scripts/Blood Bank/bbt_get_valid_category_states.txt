 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Getvalidcatstate/BBT_GET_VALID_CATEGORY_STATES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       BBT_GET_VALID_CATEGORY_STATES
        Object name:            BBT_GET_VALID_CATEGORY_STATES
        Request #:              225078

        Product:                PATHNET
        Product Team:           BLOOD BANK
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve row(s) from the valid state table
                                for a specific category code value and process meaning

        Tables read:            VALID STATE
                                CODE VALUE
        Tables updated:         NA
        Executing from:         ##

        Special Notes:          NA

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 07/05/96 Yvonne Klipfel       Initial Release                     *
;    *001 04/06/99 Matt Benson		    Changed select on CV to UAR call    *
;    *002 01/22/04 Ronda Zheng          Only return active valid states     *
;    *003 07/29/05 Jeff Wain            Declared process_cd as f8           *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program bbt_get_valid_category_states:dba go
create program bbt_get_valid_category_states:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(
   1 process_meaning   = c12    ;table 1664
   1 category_cd       = f8     ;table 1605
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
     1 qual[*]
       2 state_cd          = f8
       2 state_disp        = c40 
       2 state_desc        = vc 
       2 state_mean        = c12 
       2 active_ind        = i2
       2 updt_cnt          = i4 
%I CCLSOURCE:STATUS_BLOCK.INC
)

%i cclsource:bbt_get_code_value.inc   

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
declare process_cd = f8 with protect, noconstant(0.0)

set reply->status_data->status = "F"
set count1 = 0
set process_cd = 0.0
/****************************************************************************
*       Find the process code value                                         *
*****************************************************************************/

set process_cd = GET_CODE_VALUE(1664, request->process_meaning)    ;001

/****************************************************************************
*       Select rows and load reply record                                   *
*****************************************************************************/
select into "nl:"
   v.state_cd
from valid_state v
where v.process_cd = process_cd and v.category_cd = request->category_cd		;001
  and v.active_ind = 1
head report 
   count1 = 0
   stat = alterlist(reply->qual, 2)
detail
   count1 = count1 + 1
   if (mod(count1, 2) = 1 and count1 != 1)
      stat = alterlist(reply->qual, count1 + 2)
   endif
   reply->qual[count1]->state_cd = v.state_cd
   reply->qual[count1]->updt_cnt = v.updt_cnt
   reply->qual[count1]->active_ind = v.active_ind
with nocounter

/****************************************************************************
*       Resize reply to remove unused rows and set status                   *
*****************************************************************************/
if (curqual = 0)
   set reply->status_data->status = "Z"
   set stat = alterlist(reply->qual, 0)
else
   set stat = alterlist(reply->qual, count1)
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
