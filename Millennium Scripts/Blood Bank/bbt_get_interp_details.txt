 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Interpretationtool/bbt_get_interp_details.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_interp_details.prg
        Object name:            bbt_get_interp_details
        Request #:              225134

        Product:                Pathnet                        
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve interpretation

        Tables read:            code_value, discrete_task_assay_code,
                                assay_process
        Tables updated:         none
        Executing from:         Interpretation Tool

        Special Notes:          
******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 08/07/96 Mike Goings          Initial Release                     *
;     002 04/28/96 Mike Goings          Donor and donor product details     *
;     003 12/15/97 Mike Goings          HLA Addition to the tool            *
;     004 01/27/98 Mike Goings          Retrieve result processing cd mean  *
;     005 02/25/98 Mike Goings          Performance changes                 *
;     996 11/25/98 Mike Goings          Changed to return by activity type  *
;     007 04/07/99 Matt Benson		Changed joins to CV to be uar calls *
;     008 01/14/04 Scott Haven          HLX addition, return concept_cki    *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
Drop Program   BBT_GET_INTERP_DETAILS : dba go
Create Program  BBT_GET_INTERP_DETAILS : dba

/*
Record  Request
(
  1 actvity_type_mean   = vc
)
*/

Record  Reply
(
  1 qual[*]
    2  task_cd       =  F8 
    2  task_display  =  vc 
    2  result_mean =  c12              ; 004
    2  concept_cki = vc
  1  status_data
      2  status                    = c1
      2  subeventstatus[1]
          3  SourceObjectName       = c15
          3  SourceObjectQual       = i4
          3  SourceObjectValue      = c50
          3  OperationName          = c8
          3  OperationStatus        = c1
          3  TargetObjectName       = c15
          3  TargetObjectValue      = c50
          3  Sub_Event_dt_tm        = di8
)

set  reply -> status_data -> status  =  "F" 
set count1 = 0
set activity_type_cd = 0.0
set hold_task_id = 0.0
set cv_cnt = 1

if (request->activity_type_mean = "AP")
   set stat = uar_get_meaning_by_codeset(106,"AP",cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "BB")               
   set stat = uar_get_meaning_by_codeset(106,"BB",cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "GLB")              
   set stat = uar_get_meaning_by_codeset(106,"GLB",cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "BBDONOR")          
   set stat = uar_get_meaning_by_codeset(106,"BBDONOR",cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "HLA")              
   set stat = uar_get_meaning_by_codeset(106,"HLA",cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "HLX")
   set stat = uar_get_meaning_by_codeset(106, "HLX", cv_cnt,activity_type_cd)
elseif (request->activity_type_mean = "BBDONORPROD")
   set stat = uar_get_meaning_by_codeset(106,"BBDONORPROD",cv_cnt,activity_type_cd)
else
   set activity_type_cd = 0.0
endif

if (activity_type_cd = 0.0)
   set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
   set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "bbt_get_interp_details.prg",
   set reply->status_data->subeventstatus[1]->OperationName
               = "UAR_GET_CODE",
   set reply->status_data->subeventstatus[1]->OperationStatus
               = "F",
   set reply->status_data->subeventstatus[1]->TargetObjectName
               = "Activity code",
   set reply->status_data->subeventstatus[1]->TargetObjectValue 
               = "Code_value for activity type",
   set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
   go to stop
endif

;*** BEGIN 007 ***
set code_value = 0.0
set cdf_meaning = fillstring(12, " ")
set cdf_meaning = "4"
set stat = uar_get_meaning_by_codeset(289, cdf_meaning, 1, code_value)

select into "nl:"

from discrete_task_assay dta,
assay_processing_r apr,
(dummyt d with seq = 1)

plan dta where dta.default_result_type_cd = code_value and 
     dta.activity_type_cd = activity_type_cd and
     dta.active_ind = 1
join (d where d.seq = 1
    join apr where apr.default_result_type_cd = code_value and
         apr.task_assay_cd = dta.task_assay_cd and
         apr.active_ind = 1)
;*** END 007 ***

HEAD REPORT
  COUNT1 = 0
detail 
 if (hold_task_id != dta.task_assay_cd)
  hold_task_id = dta.task_assay_cd,
  count1 = count1 + 1,
  stat = alterlist (reply->qual, count1)
  reply -> qual[count1]->task_cd = dta.task_assay_cd,
  reply -> qual[count1]->task_display = dta.mnemonic,
  reply->qual[count1].result_mean = uar_get_code_meaning(dta.bb_result_processing_cd)    ;007
  reply->qual[count1].concept_cki = dta.concept_cki
 endif
with counter, outerjoin(d)     ;007 -added outerjoin

if (curqual != 0)  
  set reply->status_data->status = "S"        
else
  set reply->status_data->status = "Z"       
endif

;set stat = alter(reply->qual, count1)    
# stop

end go

;Generated by GNU enscript 1.6.4.
