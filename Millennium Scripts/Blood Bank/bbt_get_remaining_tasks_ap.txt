 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Interpretationtool/bbt_get_nontext_assays_ap.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       bbt_get_remaining_tasks_ap.prg
        Object name:            bbt_get_remaining_tasks_ap
        Request #:              225172
 
        Product:                Pathnet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Retrieve non textual tasks for AP
 
        Tables read:            discrete_task_assay, code_value
        Tables updated:         none
        Executing from:         Interpretation Tool
 
        Special Notes:
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 08/14/96 Mike Goings          Initial Release                     *
;     002 07/20/98 Mike Goings          Performance Changes                 *
;     003 10/05/98 Mike Goings          Removal of search for AP REPORT mean*
;     004 04/08/99 Matt Benson		Changed joins to CV to uar calls    *
;     005 06/14/12 Satish Joshi         Changed the reply structure so as to*
;										support assays greater than 65535 as*
;										per CR 1-5955431016					*
;~DE~************************************************************************
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
Drop Program   BBT_GET_NONTEXT_ASSAYS_AP : dba go
Create Program  BBT_GET_NONTEXT_ASSAYS_AP : dba
 
/*
Record Request
(
)
*/
 
Record  Reply
(
  1 qual[*]
    2 task[*]
      3  task_cd       =  F8
      3  task_disp     =  vc
      3  meaning       =  vc
%i cclsource:bbd_status_data.inc
)
 
%i cclsource:bbt_get_code_value.inc
 
set reply->status_data.status = "F"
set count1 = 0
set hold_task_assay = 0.0
set ap_cd = 0.0
; 003 set ap_report_cd = 0.0
set code_value = 0.0				;004
set cdf_meaning = fillstring(12, " ")		;004
set cdf_meaning = "1"				;004
set cv_cnt = 1
set stat = uar_get_meaning_by_codeset(106,"AP",cv_cnt,ap_cd)
set task_count = 0

declare TASK_CHUNK = i4 with protect, constant(100)
declare TASK_MAX_SIZE = i4 with protect, constant(65535)

; 003 set cv_cnt = 1
; 003 set stat = uar_get_meaning_by_codeset(106,"AP REPORT",cv_cnt,ap_report_cd)
 
; 003 if ((ap_cd = 0.0) or (ap_report_cd = 0.0))
if (ap_cd = 0.0)                                                        ; 003
  set reply->status_data->subeventstatus[1].SourceObjectName = "BBT_GET_NONTEXT_ASSAYS_AP.PRG"
  set reply->status_data->subeventstatus[1].OperationName = "GET"
  set reply->status_data->subeventstatus[1].TargetObjectName = "CODE_VALUE"
  set reply->status_data->subeventstatus[1].TargetObjectValue = "unable to retrieve activity type"
  set reply->status_data->subeventstatus[1].SourceObjectQual = 0
  go to exit_script
endif
 
set code_value = GET_CODE_VALUE(289, cdf_meaning)			;004
 
select into "nl:"
       dta.task_assay_cd,
       dta.mnemonic
from discrete_task_assay dta
 
plan dta where dta.default_result_type_cd != code_value and		;004
               dta.activity_type_cd       = ap_cd        and      ; 003
               dta.active_ind             = 1
; 003       ((dta.activity_type_cd = ap_cd) or
; 003        (dta.activity_type_cd = ap_report_cd)) and
 
HEAD REPORT
  COUNT1 = 1
  task_count = 0
detail
  if (dta.task_assay_cd != hold_task_assay)
   	if (count1 = 1)
    	stat = alterlist(reply->qual, count1)
  	endif
 
    if (task_count >= TASK_MAX_SIZE)
    	stat = alterlist(reply->qual[count1]->task, task_count) 
    	count1 = count1 + 1
    	task_count = 0
    	stat = alterlist(reply->qual, count1)
    endif
 
    if(mod(task_count,TASK_CHUNK) = 0)
    	stat = alterlist (reply->qual[count1]->task, task_count + TASK_CHUNK)
    endif

    hold_task_assay = dta.task_assay_cd,
    task_count = task_count + 1,
    reply->qual[count1]->task[task_count].task_cd = dta.task_assay_cd,
    reply->qual[count1]->task[task_count].task_disp = dta.mnemonic,
    reply->qual[count1]->task[task_count].meaning = uar_get_code_meaning(dta.default_result_type_cd)	;004
  endif
with counter

set stat = alterlist(reply->qual[count1]->task, task_count)
 
if (curqual != 0 or count1 > 0)
  set reply->status_data->status = "S"
else
  set reply->status_data->status = "Z"
endif
 
#exit_script
 
end go

;Generated by GNU enscript 1.6.4.
