 ;;Solution_Test/script/PathNet -- BB Donor/Bbd_Commonscripts/BBD_CHG_CODE_VALUES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbd_chg_code_values.prg
        Object name:            bbd_chg_code_values
        Request #:              225268

        Product:                CPM                           
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Maintain code values to a code_set 

        Tables read:            code_set_extension
        Tables updated:         code_value

        Executing from:         Donor Outcomes Reasons Tool

        Special Notes:          
******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 02/14/97 Mike Goings          Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbd_chg_code_values:dba go
create program bbd_chg_code_values:dba

/************************/
/*    Request record    */
/************************/
/*
record request
( 1 code_set = i4
  1 code_count = i2
  1 qual[x]
    2 cdf_meaning = c12
    2 display = c40
    2 display_key = c40
    2 description = vc
    2 definition = vc
    2 collation_seq = i4
    2 active_ind = i2
    2 add_row = i2  ; 1 to indicate a new record
    2 authentic_ind = i2
    2 begin_effective_dt_tm = di8
    2 end_effective_dt_tm = di8
    2 updt_cnt = i4
    2 code_value = f8
    2 row_number = i4
 )
*/

/************************/
/*     Reply record     */
/************************/
record reply
(
  1 qual[*]
    2 code_value = f8
    2 updt_cnt   = i4 ; code value update count
    2 row_number = i4
  1  status_data
    2  status                    = c1
    2  subeventstatus[1]
        3  SourceObjectName       = c15
        3  SourceObjectQual       = i4
        3  SourceObjectValue      = c50
        3  OperationName          = c8
        3  OperationStatus        = c1
        3  TargetObjectName       = c15
        3  TargetObjectValue      = c50
        3  Sub_Event_dt_tm        = di8
)

/************************/
/* Initialize variables */
/************************/
set count1 = 0
set y = 0
set next_code = 0.0
set reply->status_data->status = "F"
set failed = "F"
set authentic_cd = 0.00
set unauthentic_cd = 0.00
set authcnt = 0

select into 'nl:'
    c.code_value,
    c.cdf_meaning
from code_value c
where c.code_set = 8
  and c.cdf_meaning in ("AUTH","UNAUTH")
order c.cdf_meaning
detail
if (authcnt = 0)
   authentic_cd = c.code_value
   authcnt = 1
else
   unauthentic_cd = c.code_value
endif
with nocounter

for (y = 1 to request->code_count)
 if (request->qual[y].add_row = 1)
  /************************/
  /* Get sequence number  */
  /************************/
  execute cpm_next_code

  /************************/
  /*   Insert code value  */
  /************************/
  insert into code_value c set
    c.code_value = next_code,
    c.code_set = request->code_set,
    c.cdf_meaning = request->qual[y].cdf_meaning,
    c.display = request->qual[y].display,
    c.display_key =                                               
        trim(cnvtupper(cnvtalphanum(request->qual[y].display))),
    c.description = request->qual[y].description,
    c.definition = request->qual[y].definition,
    c.collation_seq = request->qual[y].collation_seq,
    c.active_ind = request->qual[y].active_ind,
    c.active_type_cd = if (request->qual[y].active_ind = 1)
                          reqdata->active_status_cd
                       else                       
                          reqdata->inactive_status_cd
                       endif,
    c.data_status_cd = if (request->qual[y].authentic_ind = 1)
                          authentic_cd
                       else
                          unauthentic_cd
                       endif,
    c.active_dt_tm = if (request->qual[y].active_ind = 1)
                         cnvtdatetime(curdate,curtime3)
                        else
                         NULL
                       endif,
    c.inactive_dt_tm = if (request->qual[y].active_ind = 0)
                         cnvtdatetime(curdate,curtime3)
                       else
                         NULL
                       endif,
    c.active_status_prsnl_id = if (request->qual[y].active_ind = 1)
                         reqinfo->updt_id
                        else
                         0
                       endif,
    c.data_status_dt_tm = cnvtdatetime(curdate, curtime3),
    c.data_status_prsnl_id = if (request->qual[y].active_ind = 1)
                         reqinfo->updt_id
                        else
                         0
                       endif,
    c.updt_dt_tm = cnvtdatetime(curdate,curtime3),
    c.updt_id = reqinfo->updt_id,
    c.updt_cnt = 0,
    c.updt_task = reqinfo->updt_task,
    c.updt_applctx = reqinfo->updt_applctx,
    c.begin_effective_dt_tm = cnvtdatetime(request->qual[y].begin_effective_dt_tm),
    c.end_effective_dt_tm = cnvtdatetime(request->qual[y].end_effective_dt_tm)

  with nocounter 

  if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
    set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbd_chg_code_values",
    set reply->status_data->subeventstatus[1]->OperationName
           = "insert",
    set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
           = "code_value",
    set reply->status_data->subeventstatus[1]->TargetObjectValue 
           = "code value insert",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
    set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
    go to exit_script
  else
    set stat = alterlist (reply ->qual, y),
    set reply->qual[y].code_value = next_code,
    set reply->qual[y].row_number = request->qual[y].row_number,
    set reply->qual[y].updt_cnt = 0
  endif

 else
/*****************************/
/*  code value modification  */
/*****************************/
  /********************/
  /* lock code value  */
  /********************/
  select into "nl:"
      c.*
  from
      code_value c
  where
      c.code_set = request->code_set and
      c.code_value = request->qual[y].code_value and
      c.updt_cnt = request->qual[y].updt_cnt
  with counter, forupdate(c)

 if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
    set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbd_chg_code_values",
    set reply->status_data->subeventstatus[1]->OperationName
           = "lock",
    set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
           = "code_value",
    set reply->status_data->subeventstatus[1]->TargetObjectValue 
           = "code value lock",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
    set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
    go to exit_script
  endif

  update into code_value c set
    c.code_value = request->qual[y].code_value,
    c.code_set = request->code_set,
    c.cdf_meaning = request->qual[y].cdf_meaning,
    c.display = request->qual[y].display,
    c.display_key =                                               
        trim(cnvtupper(cnvtalphanum(request->qual[y].display))),
    c.description = request->qual[y].description,
    c.definition = request->qual[y].definition,
    c.collation_seq = request->qual[y].collation_seq,
    c.active_ind = request->qual[y].active_ind,
    c.active_type_cd = if (request->qual[y].active_ind = 1)
                          reqdata->active_status_cd
                       else                       
                          reqdata->inactive_status_cd
                       endif,
    c.data_status_cd = if (request->qual[y].authentic_ind = 1)
                          authentic_cd
                       else
                          unauthentic_cd
                       endif,
    c.active_dt_tm = if (request->qual[y].active_ind = 1)
                         cnvtdatetime(curdate,curtime3)
                        else
                         NULL
                       endif,
    c.inactive_dt_tm = if (request->qual[y].active_ind = 0)
                         cnvtdatetime(curdate,curtime3)
                       else
                         NULL
                       endif,
    c.active_status_prsnl_id = if (request->qual[y].active_ind = 1)
                         reqinfo->updt_id
                        else
                         0
                       endif,
    c.data_status_dt_tm = cnvtdatetime(curdate, curtime3),
    c.data_status_prsnl_id = if (request->qual[y].active_ind = 1)
                         reqinfo->updt_id
                        else
                         0
                       endif,
    c.updt_dt_tm = cnvtdatetime(curdate,curtime3),
    c.updt_id = reqinfo->updt_id,
    c.updt_cnt = c.updt_cnt + 1,
    c.updt_task = reqinfo->updt_task,
    c.updt_applctx = reqinfo->updt_applctx,
    c.begin_effective_dt_tm = cnvtdatetime(request->qual[y].begin_effective_dt_tm),
    c.end_effective_dt_tm = cnvtdatetime(request->qual[y].end_effective_dt_tm)
  where
      c.code_set = request->code_set and
      c.code_value = request->qual[y].code_value and
      c.updt_cnt = request->qual[y].updt_cnt
  with nocounter  

  if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
           = "script",
    set reply->status_data->subeventstatus[1]->SourceObjectValue
           = "bbd_chg_code_values",
    set reply->status_data->subeventstatus[1]->OperationName
           = "update",
    set reply->status_data->subeventstatus[1]->OperationStatus
           = "F",
    set reply->status_data->subeventstatus[1]->TargetObjectName
           = "code_value",
    set reply->status_data->subeventstatus[1]->TargetObjectValue 
           = "code value table",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
           = 1,
    set reply->status_data->subeventstatus[1]->Sub_Event_Dt_Tm
           = cnvtdatetime(curdate,curtime),
    go to exit_script
  else
    set stat = alterlist (reply ->qual, y),
    set reply->qual[y].code_value = request->qual[y].code_value,
    set reply->qual[y].row_number = request->qual[y].row_number,
    set reply->qual[y].updt_cnt = request->qual[y].updt_cnt + 1
  endif
 endif  
endfor

#exit_script

if (failed = "T")
   rollback,
   set reply->status_data->status = "F" 
else
   commit,
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
