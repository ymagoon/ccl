 ;;Solution_Test/script/PathNet -- BB Transfusion/Antibodyantigenreltool/bbt_chg_transfusion_reqs.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_chg_transfusion_reqs.prg
        Object name:            bbt_chg_transfusion_reqs
        Request #:              225041

        Product:                Blood Bank Transfusion
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Change attributes on the 
                                transfusion_requirement table

        Tables read:            Transfusion_requirement
        Tables updated:         Transfusion_requirement
        Executing from:         vb application name

        Special Notes:          none

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 04/04/96 Teresa Davis         Initial Release                     *
;     001 06/18/98 Amy Therrien         Added significance indicator        *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program bbt_chg_transfusion_reqs:dba go
create program bbt_chg_transfusion_reqs:dba
 

/**************************************************************
*        Request Record
**************************************************************/
/*
record request
( 1 code_set            = i4
  1 qual[x]
    2 cv_updt_ind       = i2
    2 code_value        = f8
    2 display           = c40
    2 display_key       = c40
    2 description       = vc
    2 definition        = vc
    2 active_type_cd    = f8
    2 active_ind        = i2
    2 updt_cnt          = i4
    2 TRANS_UPDT_IND     = i2
    2 TRANS_REQ_DESC     = vc
    2 TRANS_REQ_UPDTCNT  = i4
    2 updt_anti_d_ind   = i2
    2 anti_d_ind        = i2
    2 relationship_id   = f8
    2 rh_cd             = f8
    2 warn_ind          = i2
    2 override_ind      = i2
    2 antid_updt_cnt    = i4
    2 significance_ind      = i2 ;001 AT4131
 )
*/
/*
record reqinfo
( 1 commit_ind  = i2
  1 updt_id     = f8
  1 position_cd = f8
  1 updt_app    = i4
  1 updt_task   = i4
  1 updt_req    = i4
  1 updt_applctx= i4
) 
*/
/***************************************************************
*        Reply Record
***************************************************************/

record reply
( 1 qual[*]
    2 code_value        = f8
    2 updt_cnt          = i4
    2 TRANS_REQ_UPDTCNT  = i4
    2 relationship_id   = f8
    2 antid_updt_cnt    = i4
    2 status            = c1
  1 status_data
    2 status = c1
    2 subeventstatus[*]
      3 OperationName = c15
      3 OperationStatus = c1
      3 TargetObjectName = c15
      3 TargetObjectValue = vc
)

/******************************************************
*        Initialize Variables
******************************************************/
set reply->status_data->status  = "F"
set cur_updt_cnt[500]           = 0
set failed                      = "F"
set count1                      = 0
set nbr_to_chg                  = size(request->qual,5)
set failures = 0
set cur_updt_cnt = 0
set cur_rh_cd = 0.0
set x = 1
set next_code = 0.0
set found = 0
set new_pathnet_seq = 0.0

/******************************************************
*        Instructions
******************************************************/

#start_loop
for (x = x to nbr_to_chg)

  set failed = "F"

  if (request->qual[x]->cv_updt_ind = 1)

     /****************************/
     /*     Lock row to update   */
     /****************************/
     select into "nl:"
       c.*
     from code_value c 
     where c.code_value = request->qual[x]->code_value
       and c.code_set   = request->code_set
     detail
       cur_updt_cnt = c.updt_cnt    
     with nocounter, forupdate(c)

     if (curqual = 0)
       go to next_row
     endif

     if (cur_updt_cnt != request->qual[x]->updt_cnt)
        set failed = "T"
        go to next_row
     endif

     /*********************************/
     /*     Update Code Value record  */
     /*********************************/
     update into code_value c set
       c.display            = request->qual[x]->display,
       c.display_key        = trim(cnvtupper(cnvtalphanum(request->qual[x]->display))),
       c.description        = request->qual[x]->description,
       c.definition         = request->qual[x]->definition,
       c.active_type_cd     = request->qual[x]->active_type_cd,
       c.active_ind         = request->qual[x]->active_ind,
       c.updt_id            = reqinfo->updt_id,
       c.updt_applctx       = reqinfo->updt_applctx,
       c.updt_cnt           = c.updt_cnt + 1,
       c.updt_task          = reqinfo->updt_task,
       c.updt_dt_tm = cnvtdatetime(curdate,curtime3)
     where 
       c.code_value = request->qual[x]->code_value and
       c.code_set = request->code_set

     with nocounter

     if (curqual = 0)
       go to next_row
     endif
  
  endif

  set failed = "F"

  if (request->qual[x]->TRANS_UPDT_IND = 1)
      /**************************
      *   Lock rows to update
      **************************/
      select into "nl:"
         t.*
      from transfusion_requirements t
      where t.REQUIREMENT_CD = request->qual[x]->code_value

      detail
         cur_updt_cnt = t.updt_cnt
      with nocounter, forupdate(t)

      if (curqual = 0)
         go to next_row
      endif

      /**************************
      *   Check for changed rows
      **************************/
      if (request->qual[x]->TRANS_REQ_UPDTCNT != cur_updt_cnt)
         set failed = "T"
         go to next_row
      endif

      /**************************
      *   Update Table
      **************************/
      update into transfusion_requirements t
      set
         t.description        = request->qual[x]->TRANS_REQ_DESC,
         t.chart_name         = request->qual[x]->trans_req_desc,
         t.anti_d_ind         = if (request->qual[x]->updt_anti_d_ind = 1)
                                   request->qual[x].anti_d_ind
                                else
                                   t.anti_d_ind
                                endif,
         t.active_ind         = request->qual[x]->active_ind,
         t.significance_ind   = request->qual[x]->significance_ind, ;001 AT4131
         t.active_status_cd
            = if (request->qual[x]->active_ind = 1)
                reqdata->active_status_cd
              else
                reqdata->inactive_status_cd
              endif,
         t.updt_cnt           = t.updt_cnt + 1,
         t.updt_dt_tm         = cnvtdatetime(curdate,curtime3),
         t.updt_id            = reqinfo->updt_id,
         t.updt_task          = reqinfo->updt_task,
         t.updt_applctx       = reqinfo->updt_applctx
      where t.REQUIREMENT_CD = request->qual[x]->code_value
        and t.updt_cnt = request->qual[x]->TRANS_REQ_UPDTCNT
      with nocounter

      if (curqual = 0)
         ;log error
         go to next_row
      endif
   endif
   if (request->qual[x].updt_anti_d_ind = 1)
      /**************************
       *   Lock rows to update
       **************************/
      select into "nl:"
         t.*
      from trans_req_r t
      plan t where (t.relationship_id = request->qual[x]->relationship_id 
             and request->qual[x]->relationship_id > 0)
      detail
         cur_updt_cnt = t.updt_cnt
         cur_rh_cd = t.special_testing_cd
      with nocounter, forupdate(t)
      if (curqual = 0)
         set found = 0
      else
         set found = 1
      endif
   
      if (found = 0
      and request->qual[x].anti_d_ind = 0)
         go to next_row
      endif
      if (found = 1 and request->qual[x]->antid_updt_cnt != cur_updt_cnt)
         set failed = "T"
         go to next_row
      endif

      if (found = 0
      and request->qual[x].anti_d_ind = 1
      and request->qual[x].relationship_id = 0)
%i cclsource:bbt_get_pathnet_seq.inc
         insert into trans_req_r t
         set
            t.relationship_id            = new_pathnet_seq,
            t.REQUIREMENT_CD            = request->qual[x].code_value,
            t.special_testing_cd        = request->qual[x].rh_cd,
            t.warn_ind                  = request->qual[x].warn_ind,
            t.allow_override_ind        = request->qual[x].override_ind,
            t.active_ind                = 1,
            t.active_status_dt_tm       = cnvtdatetime(curdate,curtime3),
            t.active_status_cd         = reqdata->active_status_cd,
            t.active_status_prsnl_id   = reqinfo->updt_id,
            t.updt_dt_tm                = cnvtdatetime(curdate,curtime3),
            t.updt_id                   = reqinfo->updt_id,
            t.updt_task                 = reqinfo->updt_task,
            t.updt_applctx              = reqinfo->updt_applctx,
            t.updt_cnt                  = 0
         with nocounter

         if (curqual = 0)
           ;log error
            set failed = "T"
            go to next_row 
         endif
      endif
      
      if (found = 1 and request->qual[x].anti_d_ind = 0)
         update into trans_req_r t ;, code_value c set
         set 
            t.active_ind                 = 0,
            t.active_status_cd           = reqdata->active_status_cd,
            t.updt_dt_tm                 = cnvtdatetime(curdate,curtime3),
            t.updt_id                    = reqinfo->updt_id,
            t.updt_task                  = reqinfo->updt_task,
            t.updt_applctx               = reqinfo->updt_applctx,
            t.updt_cnt                   = t.updt_cnt + 1
         where t.relationship_id = request->qual[x]->relationship_id
         with nocounter

         if (curqual = 0)
            set failed = "T"
            go to next_row
         endif
      endif
     
  /**************************
   *   Check for changed rows
   **************************/
      if (found = 1
      and request->qual[x]->rh_cd > 0 and request->qual[x]->rh_cd != cur_rh_cd)
         update into trans_req_r t ;, code_value c set
         set 
            t.active_ind                 = 0,
            t.active_status_cd           = reqdata->active_status_cd,
            t.updt_dt_tm                 = cnvtdatetime(curdate,curtime3),
            t.updt_id                    = reqinfo->updt_id,
            t.updt_task                  = reqinfo->updt_task,
            t.updt_applctx               = reqinfo->updt_applctx,
            t.updt_cnt                   = t.updt_cnt + 1
         where t.relationship_id = request->qual[x]->relationship_id
         with nocounter

         if (curqual = 0)
            set failed = "T"
            go to next_row
         endif

%i cclsource:bbt_get_pathnet_seq.inc

         insert into trans_req_r t
         set
           t.relationship_id            = new_pathnet_seq,
           t.REQUIREMENT_CD             = request->qual[x].code_value,
           t.special_testing_cd         = request->qual[x].rh_cd,
           t.warn_ind                   = request->qual[x].warn_ind,
           t.allow_override_ind         = request->qual[x].override_ind,
           t.active_ind                       = 1,
           t.active_status_dt_tm      = cnvtdatetime(curdate,curtime3),
           t.active_status_cd         = reqdata->active_status_cd,
           t.active_status_prsnl_id   = reqinfo->updt_id,
           t.updt_dt_tm                 = cnvtdatetime(curdate,curtime3),
           t.updt_id                    = reqinfo->updt_id,
           t.updt_task                  = reqinfo->updt_task,
           t.updt_applctx               = reqinfo->updt_applctx,
           t.updt_cnt                   = 0
         with nocounter

         if (curqual = 0)
           ;log error
            set failed = "T"
            go to next_row 
         endif

      endif
      if (found = 1 and request->qual[x]->rh_cd > 0 
      and request->qual[x]->rh_cd = cur_rh_cd
      and request->qual[x]->anti_d_ind = 1)
         update into trans_req_r t ;, code_value c set
         set 
            t.active_ind                 = 1,
            t.warn_ind                   = request->qual[x].warn_ind,
            t.allow_override_ind         = request->qual[x].override_ind,
            t.active_status_cd           = reqdata->active_status_cd,
            t.updt_dt_tm                 = cnvtdatetime(curdate,curtime3),
            t.updt_id                    = reqinfo->updt_id,
            t.updt_task                  = reqinfo->updt_task,
            t.updt_applctx               = reqinfo->updt_applctx,
            t.updt_cnt                   = t.updt_cnt + 1
         where t.relationship_id = request->qual[x].relationship_id
         with nocounter

         if (curqual = 0)
            set failed = "T"
            go to next_row
         endif
      endif
   endif  
   set count1 = count1 + 1
   set stat = alterlist(reply->qual,count1)
   set reply->qual[count1]->code_value = request->qual[x]->code_value
   if (request->qual[x]->cv_updt_ind = 1)
      set reply->qual[count1]->updt_cnt = request->qual[x]->updt_cnt + 1
   else
      set reply->qual[count1]->updt_cnt = request->qual[x]->updt_cnt
   endif
   if (request->qual[x]->TRANS_UPDT_IND = 1)
      set reply->qual[count1]->TRANS_REQ_UPDTCNT 
                        = request->qual[x]->TRANS_REQ_UPDTCNT + 1
   else
      set reply->qual[count1]->TRANS_REQ_UPDTCNT
                        = request->qual[x]->TRANS_REQ_UPDTCNT
   endif
    
   if (found = 1)
        set reply->qual[count1].antid_updt_cnt 
               = request->qual[x].antid_updt_cnt + 1
       set reply->qual[count1].relationship_id = request->qual[x].relationship_id
   else 
        set reply->qual[count1].antid_updt_cnt = request->qual[x].antid_updt_cnt
        set reply->qual[count1].relationship_id = new_pathnet_seq
   endif
          
   set reply->qual[count1]->status = "S"
   commit
endfor
go to exit_script

/****************************/
/*      next_row            */
/****************************/
#next_row

  set count1 = count1 + 1
  set stat = alterlist(reply->qual,count1)
  set reply->qual[count1].code_value = request->qual[x].code_value
  set reply->qual[count1].updt_cnt = request->qual[x].updt_cnt
  set reply->qual[count1].TRANS_REQ_UPDTCNT = 
                        request->qual[x].TRANS_REQ_UPDTCNT
  set reply->qual[count1].antid_updt_cnt = request->qual[x].antid_updt_cnt
  set reply->qual[count1].relationship_id = request->qual[x].relationship_id
  set reply->qual[count1].status = "F"

  set failures = failures + 1
  set stat = alterlist(reply->status_data->subeventstatus,failures)

  if (failed = "F")
    set reply->status_data->subeventstatus[failures]->operationstatus = "F"
  else
    set reply->status_data->subeventstatus[failures]->operationstatus = "C"
  endif
  set reply->status_data->subeventstatus[failures]->targetobjectvalue = 
                                cnvtstring(request->qual[x]->code_value,32,2)  
  rollback
  set x = x + 1
  go to start_loop

#exit_script
if (failures = 0)
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
