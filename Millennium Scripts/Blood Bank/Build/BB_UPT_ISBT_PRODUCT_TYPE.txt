 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefISBTProdType/BB_UPT_ISBT_PRODUCT_TYPE.PRG Turn on black mode

/*~bb~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1998 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
        Request #:              225824
 
        Product:                PathNet
        Product Team:           BloodBank
 
        Program purpose:        Update data in the bb_isbt_product_type table.
 
        Executing from:
        Special Notes:          NONE
 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 06/28/00 Aaron Neihouse       Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
DROP PROGRAM   bb_upt_isbt_product_type:dba GO
CREATE PROGRAM bb_upt_isbt_product_type:dba
 
set failures = 0
/*
RECORD request
(
  1 product_type_list[*]
    2 bb_isbt_product_type_id  = f8
    2 product_cd = f8
    2 isbt_barcode = c15
    2 active_ind = i2
    2 updt_cnt = i4
)
*/
RECORD reply
(
%i cclsource:status_block.inc
)
 
select into "nl:"
  *
from    bb_isbt_product_type bipt,
        (dummyt d with seq = value(size(request->product_type_list, 5)))
 
plan d
join bipt where request->product_type_list[d.seq].bb_isbt_product_type_id = bipt.bb_isbt_product_type_id
        and request->product_type_list[d.seq].updt_cnt = bipt.updt_cnt
with nocounter , forupdate(bipt)
 
 
if (curqual = 0)
	set failures = failures + 1
	go to exit_script
else
    update  into bb_isbt_product_type bipt,
            (dummyt d1 with seq = value(size(request->product_type_list, 5)))
    set
            bipt.product_cd = request->product_type_list[d1.seq].product_cd
            ,bipt.isbt_barcode = request->product_type_list[d1.seq].isbt_barcode
            ,bipt.active_ind         = request->product_type_list[d1.seq].active_ind
            ,bipt.active_status_cd   = if (request->product_type_list[d1.seq].active_ind = 0)
                                         reqdata->inactive_status_cd
                                      else
                                         reqdata->active_status_cd
                                      endif
            ,bipt.active_status_dt_tm = cnvtdatetime(curdate,curtime3)
            ,bipt.active_status_prsnl_id = reqinfo->updt_id
            ,bipt.updt_cnt            = bipt.updt_cnt + 1
            ,bipt.updt_dt_tm          = cnvtdatetime(curdate,curtime3)
            ,bipt.updt_id             = reqinfo->updt_id
            ,bipt.updt_task           = reqinfo->updt_task
            ,bipt.updt_applctx        = reqinfo->updt_applctx
    plan d1
    join bipt where request->product_type_list[d1.seq].bb_isbt_product_type_id = bipt.bb_isbt_product_type_id
            and request->product_type_list[d1.seq].updt_cnt = bipt.updt_cnt
    with nocounter
 
    IF (curqual = 0)
       SET failures = failures + 1
       GO TO exit_script
    ENDIF
endif
 
/******************************************************************************
*                               Exit Script                                   *
*******************************************************************************/
#exit_script
 
IF (failures > 0)
     ROLLBACK
     SET reply->status_data->status = "F"
ELSE
     SET reply->status_data->status = "S"
     COMMIT
ENDIF
 
END
GO
 

;Generated by GNU enscript 1.6.4.
