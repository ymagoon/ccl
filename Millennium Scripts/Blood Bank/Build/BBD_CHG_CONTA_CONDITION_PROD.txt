 ;;Solution_Test/script/PathNet -- BB Transfusion/BBDShippingTool/BBD_CHG_CONTA_CONDITION_PROD.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbd_chg_conta_condition_prod.prg
        Object name:            bbd_chg_conta_condition_prod
        Request #:              225611

        Product:                CPM                           
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Maintain contnr_type_prod_r

        Tables read:            
        Tables updated:         contnr_type_prod_r

        Executing from:         Shipping Tool

        Special Notes:          
******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 03/24/99 Jose Suarez          Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbd_chg_conta_condition_prod:dba go
create program bbd_chg_conta_condition_prod:dba

/************************/
/*    Request record    */
/************************/
/*
record request
( 1 container_condition_id   = f8
  1 product_count = i2
  1 qual[x]
    2 contnr_type_prod_id    = f8
    2 product_cd             = f8
    2 quantity               = i4
    2 updt_cnt               = i4
    2 add_row                = i2  ; 1 to indicate a new record
    2 row_number             = i2
    2 active_ind             = i2
 )
*/

/************************/
/*     Reply record     */
/************************/
record reply
(
  1 qual[*]
    2 contnr_type_prod_id   = f8
    2 product_cd            = f8
    2 quantity              = i4
    2 row_number            = i4 
    2 updt_cnt              = i4 
%I cclsource:BBD_STATUS_DATA.INC
)

/************************/
/* Initialize variables */
/************************/
set count1 = 0
set y = 0
set product_id = 0.0
set reply->status_data->status = "F"
set failed = "F"

for (y = 1 to request->product_count)
 if (request->qual[y].add_row = 1)
  /************************/
  /* Get sequence number  */
  /************************/
%i cclsource:bbt_get_pathnet_seq.inc
set product_id = new_pathnet_seq

  /******************************************************/
  /* Insert container type product relationship product */
  /******************************************************/
  insert into contnr_type_prod_r p set
    p.contnr_type_prod_id = product_id,
    p.container_condition_id = request->container_condition_id,
    p.product_cd = request->qual[y].product_cd,
    p.quantity = request->qual[y].quantity,
    p.active_ind = request->qual[y].active_ind,
    p.active_status_cd = if (request->qual[y].active_ind = 1)
                          reqdata->active_status_cd
                       else                       
                          reqdata->inactive_status_cd
                       endif,    
    p.active_status_dt_tm = if (request->qual[y].active_ind = 1)
                         cnvtdatetime(curdate,curtime3)
                        else
                         NULL
                       endif,
    p.active_status_prsnl_id = if (request->qual[y].active_ind = 1)
                         reqinfo->updt_id
                        else
                         NULL
                       endif,
    p.updt_dt_tm = cnvtdatetime(curdate,curtime3),
    p.updt_id = reqinfo->updt_id,
    p.updt_cnt = 0,
    p.updt_task = reqinfo->updt_task,
    p.updt_applctx = reqinfo->updt_applctx
  with nocounter 

  if (curqual = 0)
    set failed = "T",
    set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script",
    set reply->status_data->subeventstatus[1]->OperationName
               = "insert",
    set reply->status_data->subeventstatus[1]->TargetObjectName
               = "contnr_type_prod_r",
    set reply->status_data->subeventstatus[1]->TargetObjectValue 
               = "product insert",
    set reply->status_data->subeventstatus[1]->SourceObjectQual
               = 1,
    go to exit_script
  else
    set stat = alterlist (reply ->qual, y),
    set reply->qual[y].contnr_type_prod_id = product_id,
    set reply->qual[y].product_cd = request->qual[y].product_cd,
    set reply->qual[y].quantity = request->qual[y].quantity,
    set reply->qual[y].row_number = request->qual[y].row_number,
    set reply->qual[y].updt_cnt = 0
  endif
 else
    /****************************/
    /*  lock contnr_type_prod_r */
    /****************************/
    select into "nl:"
        p.*
    from
        contnr_type_prod_r p
    where
        p.contnr_type_prod_id = request->qual[y].contnr_type_prod_id and
        p.updt_cnt = request->qual[y].updt_cnt
    with counter, forupdate(p)

    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
             = "script",
      set reply->status_data->subeventstatus[1]->OperationName
             = "lock",
      set reply->status_data->subeventstatus[1]->TargetObjectName
             = "contnr_type_prod_r",
      set reply->status_data->subeventstatus[1]->TargetObjectValue 
             = "product lock",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
             = 1,
      go to exit_script
    endif

    /********************************/
    /*  Update contnr_type_prod_r   */
    /********************************/
    update into contnr_type_prod_r p set
      p.quantity = request->qual[y].quantity,
      p.active_status_cd = if (request->qual[y].active_ind = 1)
                            reqdata->active_status_cd
                         else                       
                            reqdata->inactive_status_cd
                         endif,
      p.active_ind = request->qual[y].active_ind,
      p.active_status_dt_tm = if (request->qual[y].active_ind = 1)
                           cnvtdatetime(curdate,curtime3)
                          else
                           NULL
                         endif,
      p.active_status_prsnl_id = if (request->qual[y].active_ind = 1)
                           reqinfo->updt_id
                          else
                           0
                         endif,
      p.updt_dt_tm = cnvtdatetime(curdate,curtime3),
      p.updt_id = reqinfo->updt_id,
      p.updt_cnt = request->qual[y].updt_cnt + 1,
      p.updt_task = reqinfo->updt_task,
      p.updt_applctx = reqinfo->updt_applctx
    where
        p.contnr_type_prod_id = request->qual[y].contnr_type_prod_id and
        p.updt_cnt = request->qual[y].updt_cnt
    with nocounter

    if (curqual = 0)
      set failed = "T",
      set reply->status_data->subeventstatus[1]->SourceObjectName
                 = "script",
      set reply->status_data->subeventstatus[1]->OperationName
                 = "update",
      set reply->status_data->subeventstatus[1]->TargetObjectName
                 = "contnr_type_prod_r",
      set reply->status_data->subeventstatus[1]->TargetObjectValue 
                 = "update product",
      set reply->status_data->subeventstatus[1]->SourceObjectQual
                 = 1,
      go to exit_script
    else
      set stat = alterlist (reply ->qual, y),
      set reply->qual[y].contnr_type_prod_id = request->qual[y].contnr_type_prod_id,
      set reply->qual[y].product_cd = request->qual[y].product_cd,
      set reply->qual[y].quantity = request->qual[y].quantity,
      set reply->qual[y].row_number = request->qual[y].row_number,
      set reply->qual[y].updt_cnt = request->qual[y].updt_cnt + 1
    endif
  endif
endfor

#exit_script

if (failed = "T")
   rollback,
   set reply->status_data->status = "F" 
else
   commit,
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
