 ;;Solution_Test/script/PathNet -- BB Transfusion/SUPPLIEPREFIXTOOL/BBT_UPD_BB_SUPPLIER.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1997 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_upd_bb_supplier.prg
        Object name:            bbt_upd_bb_supplier
        Request #:              225455              

        Product:                PathNet
        Product Team:           BB Transfusion
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Update (add/change) bb_supplier

        Tables read:            bb_supplier

        Tables updated:         bb_supplier

        Executing from:         VB

        Special Notes:          

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/21/97 Victoria Savariyar   Initial Release                     *
;     001 05/08/07 Ronda Zheng          Add or update isbt_barcode value    *
;     002 06/03/08 Jacob Anderson       removal of Add or update            *
;                                       isbt_barcode value                  *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

Drop program bbt_upd_bb_supplier:dba go
Create program bbt_upd_bb_supplier:dba 

/*
record request
(
1 supplierlist[*]
  2 bb_supplier_id              =       f8      ;(0 if new supplier)
  2 organization_id             =       f8
  2 barcode_value               =       c20     ;(new only)
  2 prefix_ind                  =       i2
  2 prefix_value                =       c5      ;(new only)
  2 default_prefix_ind          =       i2
  2 alpha_translation_ind       =       i2
  2 active_ind                  =       i2
  2 updt_cnt                    =       i4      ;(update only)
)
*/

record reply
(
1 qual[*]
  2 organization_id             = f8
  2 bb_supplier_id              = f8
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set count1 = 0 
set new_bb_supplier_id = 0.0
set qual_cnt = 0
set stat = alterlist(reply->qual, 10)

set supplier_cnt = size(request->supplierlist,5)

for (splr = 1 to supplier_cnt)
    if (request->supplierlist[splr]->bb_supplier_id = 0)
        ; ** Add new supplier to bb_supplier

        ;  * Get next pathnet_seq for bb_supplier_id
        set new_bb_supplier_id = NEXT_PATHNET_SEQ(0)

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "get next pathnet_seq",
                 /* message */ build("get next pathnet_seq failed--organization_id =",request->supplierlist[splr]->organization_id)
                )
            go to EXIT_SCRIPT
        endif

        insert into bb_supplier bbs set
            bbs.bb_supplier_id          = new_bb_supplier_id
            , bbs.organization_id       = request->supplierlist[splr]->organization_id
            , bbs.barcode_value         = request->supplierlist[splr]->barcode_value
            , bbs.prefix_ind            = request->supplierlist[splr]->prefix_ind
            , bbs.prefix_value          = request->supplierlist[splr]->prefix_value
            , bbs.default_prefix_ind    = request->supplierlist[splr]->default_prefix_ind
            , bbs.alpha_translation_ind = request->supplierlist[splr]->alpha_translation_ind
            , bbs.updt_cnt              = 0
            , bbs.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
            , bbs.updt_id               = reqinfo->updt_id
            , bbs.updt_task             = reqinfo->updt_task
            , bbs.updt_applctx          = reqinfo->updt_applctx
            , bbs.active_ind            = 1
            , bbs.active_status_cd      = reqdata->active_status_cd
            , bbs.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
            , bbs.active_status_prsnl_id = reqinfo->updt_id

        with nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "insert into bb_supplier",
                 /* message */ build("insert into bb_supplier failed--organization_id ="
                                        ,request->supplierlist[splr]->organization_id)
                )
            go to EXIT_SCRIPT
        endif

        ; ** Return new_bb_supplier_id to VB
        set qual_cnt = qual_cnt + 1
        if (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
            set stat = alterlist(reply->qual, qual_cnt + 9)
        endif
        set reply->qual[qual_cnt]->organization_id      = request->supplierlist[splr]->organization_id
        set reply->qual[qual_cnt]->bb_supplier_id       = new_bb_supplier_id    

    else
        ; ** Update existing supplier
        select into "nl:"
           bbs.bb_supplier_id

        from
            bb_supplier bbs

        where
            bbs.bb_supplier_id          = request->supplierlist[splr]->bb_supplier_id
              and bbs.updt_cnt          = request->supplierlist[splr]->updt_cnt

        with    nocounter, forupdate(bbs)

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "lock bb_supplier forupdate",
                 /* message */ build("lock bb_supplier forupdate failed--organization_id ="
                              ,request->supplierlist[splr]->organization_id)
                )
            go to EXIT_SCRIPT
        endif

        update into bb_supplier bbs set
            bbs.prefix_ind              = request->supplierlist[splr]->prefix_ind
            , bbs.default_prefix_ind    = request->supplierlist[splr]->default_prefix_ind
            , bbs.alpha_translation_ind = request->supplierlist[splr]->alpha_translation_ind
            , bbs.updt_cnt              = bbs.updt_cnt + 1
            , bbs.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
            , bbs.updt_id               = reqinfo->updt_id
            , bbs.updt_task             = reqinfo->updt_task
            , bbs.updt_applctx          = reqinfo->updt_applctx
            , bbs.active_ind            = request->supplierlist[splr]->active_ind
            , bbs.active_status_cd
                = if (request->supplierlist[splr]->active_ind = 1)
                    reqdata->active_status_cd
                  else
                    reqdata->inactive_status_cd
                  endif
            , bbs.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
            , bbs.active_status_prsnl_id = reqinfo->updt_id

        where   bbs.bb_supplier_id  = request->supplierlist[splr]->bb_supplier_id
    
        with    nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "update into bb_supplier",
                 /* message */ build("update into bb_supplier failed--organization_id ="
                                    ,request->supplierlist[splr]->organization_id)
                )
            go to EXIT_SCRIPT
        endif
    endif
endfor  

set stat = alterlist(reply->qual, qual_cnt)

call LOAD_PROCESS_STATUS
    (
     /* status  */ "S",
     /* process */ "SUCCESS",
     /* message */ "All records added/updated successfully"
    )
        
go to EXIT_SCRIPT

; ** Get next Pathnet_Seq
%i cclsource:bbt_get_pathnet_seq_sub.inc

subroutine LOAD_PROCESS_STATUS
    (
     sub_status,
     sub_process,
     sub_message
    )

    set reply->status_data->status = sub_status
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alter(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = sub_process
    set reply->status_data->subeventstatus[count1]->OperationStatus = sub_status
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_upd_bb_supplier"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = sub_message
END         ; end subroutine LOAD_PROCESS_STATUS


#EXIT_SCRIPT

if (reply->status_data->status = "S")
    set reqinfo->commit_ind = 1
else
    set reqinfo->commit_ind = 0
endif

;call echo(build("status_data->status =", reply->status_data->status))
;for (x = 1 to count1)
;    call echo(reply->status_data->subeventstatus[x]->OperationName)
;    call echo(reply->status_data->subeventstatus[x]->OperationStatus)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectName)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectValue)
;endfor
;
;for (x = 1 to qual_cnt)
;    call echo(build(x, "...", 
;        reply->qual[x]->organization_id     , "/",
;        reply->qual[x]->bb_supplier_id      ))
;endfor

end go

;Generated by GNU enscript 1.6.4.
