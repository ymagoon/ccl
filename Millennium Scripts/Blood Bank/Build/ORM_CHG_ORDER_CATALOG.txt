;;Solution_Test/script/Order Management/orm_chg_order_catalog/orm_chg_order_catalog.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

	Source file name:       ORM_CHG_ORDER_CATALOG.PRG
	Object name:            ORM_CHG_ORDER_CATALOG
	Request #:		500043

	Product:                ORM
	Product Team:           ORDER MANAGEMENT
	HNA Version:            500
	CCL Version:            8.2.4
 
	Program purpose:        Updates one order catalog record.
 
	Tables read:            -
	Tables updated:		ORDER_CATALOG, CODE_VALUE, SERVICE_DIRECTORY, MEDICATION
 
	Executing from:         ORDER CATALOG TOOL (APP 500000)
 
	Special Notes:		-

******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer		Comment 			    *
;    *--- -------- --------------------	----------------------------------- *
;     ### 09/19/95 Mitch Morehouse	Initial Release			    *
;     ### 02/16/96 Joe Geris            Bring up to date with order catalog *
;     ### 04/25/96 Joe Geris            Add iv_ingredient_ind               *
;     ### 09/03/96 matt huffman         update corresponding codevalue      *
;     ### 09/05/96 Joe Geris            Add activity_subtype_cd             *
;     ### 09/28/96 Joe Geris            Add more indicators                 *
;     ### 10/21/96 Joe Geris            Misc Data Team changes              *
;     ### 12/19/96 Joe Geris            Add consent forms                   *
;     ### 01/12/96 Joe Geris            Add medication logic                *
;     ### 10/14/97 Shawn Purcell        Add Modifiable_flag                 *
;     ### 12/12/97 Shawn Purcell        Add dcp_clin_cat_cd                 *
;     ### 03/25/98 Shawn Purcell        Prep_info_flag commented            *
;     ### 08/24/98 Shawn PUrcell 7.7    Add stop_type_cd, stop_duration,    *
;					stop_duration_unit_cd               *
;     ### 04/08/99 Shawn Purcell 7.9    add form_level, form_id		    *
;     ### 05/20/99 Shawn Purcell        add disable_order_comment_ind       *
;     ### 04/19/03 Brent Petr			Add ic_auto_verify_flag and         *
;                                       discern_auto_verify_flag i2
;     001 12/22/03 Jonathan Fewins      Add dept_disp_name                  *
;	  002 11/19/04 Mark Gromowsky		Refresh Cache						*
;     003 01/31/05 Mike Roco            Department display name will now    *
;                                       save correctly.                     *
;    *004 03/16/05 Scott Julius         Fix Ingegrity Constraint Issue      *
;     005 07/21/05 Eliot Rees           Radiology Vetting                   *
;	  006 11/02/05 Mike Albair	Cardiology dept disp name           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program orm_chg_order_catalog:dba go
create program orm_chg_order_catalog:dba
 
%i cclsource:gm_u_code_value0619_def.inc ;002
 
/*
record request
(
  1 ic_auto_verify_flag = i2
  1 discern_auto_verify_flag = i2
  1 stop_type_cd = f8
  1 stop_duration = i4
  1 stop_duration_unit_cd = f8
  1 modifiable_flag = i2
  1 dcp_clin_cat_cd  = f8
  1 catalog_cd = f8
  1 consent_form_ind = i2
  1 active_ind = i2
  1 catalog_type_cd = f8
  1 activity_type_cd = f8
  1 activity_subtype_cd = f8
  1 requisition_format_cd = f8
  1 requisition_routing_cd = f8
  1 inst_restriction_ind = i2
  1 schedule_ind = i2
  1 description = vc                 ;max length of 100
  1 iv_ingredient_ind = i2
  1 print_req_ind = i2
  1 oe_format_id = f8
  1 orderable_type_flag = i2
  1 complete_upon_order_ind = i2
  1 quick_chart_ind = i2
  1 comment_template_flag = i2
  1 prep_info_flag = i2
  1 dup_checking_ind = i2
  1 order_review_ind = i2
  1 bill_only_ind = i2
  1 cont_order_method_flag = i2
  1 primary_mnemonic = vc
  1 consent_form_format_cd = f8
  1 consent_form_routing_cd = f8
  1 upd_medication_ind = i2
  1 dc_display_days = i4
  1 dc_interaction_days = i4
  1 mdx_gcr_id = f8
  1 updt_cnt = i4
  1 auto_cancel_ind = i2
  1 form_level = i4
  1 form_id = f8
  1 disable_order_comment_ind = i2
  1 dept_disp_name = vc ;001
  1 vetting_approval_flag ;005
)
*/
record reply
(
%i  cclsource:status_block.inc
)
 
;001
declare GEN_LAB_CD   = f8 with protect, constant(uar_get_code_by("MEANING",6000,"GENERAL LAB"))
declare RADIOLOGY_CD = f8 with protect, constant(uar_get_code_by("MEANING",6000,"RADIOLOGY"))
declare CARDIOVAS_CD = f8 with protect, constant(uar_get_code_by("MEANING",6000,"CARDIOVASCUL")) ;006
declare failed       = c1 with protect, noconstant("F")
declare last_mod     = c3 with private, noconstant(fillstring(3, " "))  ;002
declare errmsg       = vc with protect, noconstant("")
 
set reply->status_data->status = "F"
 
; 002 begin
 
; If the primary mnemonic already exists for another orderable, do not attempt to write over it.
; While here, lock the table for updating.
 
select into "nl:"
   from order_catalog oc
   where oc.primary_mnemonic = request->primary_mnemonic
   and oc.catalog_cd != request->catalog_cd
with forupdate(oc), nocounter
 
if (curqual != 0)
   set failed = "T"
   go to exit_script
endif
 
; 002 end
 
  /***** Add entry to the order_catalog table. *****/
 
update into order_catalog oc set
  	oc.ic_auto_verify_flag = request->ic_auto_verify_flag,
  	oc.discern_auto_verify_flag = request->discern_auto_verify_flag,
   oc.dcp_clin_cat_cd = request->dcp_clin_cat_cd,
   oc.modifiable_flag = request->modifiable_flag,
   oc.catalog_cd = request->catalog_cd,
   oc.consent_form_ind = request->consent_form_ind,
   oc.active_ind = request->active_ind,
   oc.catalog_type_cd = request->catalog_type_cd,
   oc.activity_type_cd = request->activity_type_cd,
   oc.activity_subtype_cd = request->activity_subtype_cd,
   oc.requisition_format_cd = request->requisition_format_cd,
   oc.requisition_routing_cd = request->requisition_routing_cd,
   oc.consent_form_format_cd = request->consent_form_format_cd,
   oc.consent_form_routing_cd = request->consent_form_routing_cd,
   oc.inst_restriction_ind = request->inst_restriction_ind,
   oc.schedule_ind = request->schedule_ind,
   oc.description = request->description,
   oc.print_req_ind = request->print_req_ind,
   oc.oe_format_id = request->oe_format_id,
   oc.orderable_type_flag = request->orderable_type_flag,
   oc.complete_upon_order_ind = request->complete_upon_order_ind,
   oc.quick_chart_ind = request->quick_chart_ind,
   oc.comment_template_flag = request->comment_template_flag,
   oc.dup_checking_ind = request->dup_checking_ind,
   oc.order_review_ind = request->order_review_ind,
   oc.primary_mnemonic = request->primary_mnemonic,
   oc.bill_only_ind = request->bill_only_ind,
   oc.cont_order_method_flag = request->cont_order_method_flag,
   oc.Auto_Cancel_ind = request->Auto_Cancel_ind,
   oc.stop_type_cd = request->stop_type_cd,
   oc.stop_duration = request->stop_duration,
   oc.stop_duration_unit_cd = request->stop_duration_unit_cd,
   oc.form_level = request->form_level,
   oc.form_id = request->form_id,
   oc.disable_order_comment_ind = request->disable_order_comment_ind,
   oc.dc_display_days = request->dc_display_days,
   oc.dc_interaction_days = request->dc_interaction_days,
   oc.updt_dt_tm = cnvtdatetime(curdate,curtime3),
   oc.updt_id = reqinfo->updt_id,
   oc.updt_task = reqinfo->updt_task,
   oc.updt_applctx = reqinfo->updt_applctx,
   oc.updt_cnt = oc.updt_cnt + 1,
   oc.vetting_approval_flag = request->vetting_approval_flag,
   oc.dept_display_name = if (request->catalog_type_cd = GEN_LAB_CD or
                               request->catalog_type_cd = RADIOLOGY_CD or
                               request->catalog_type_cd = CARDIOVAS_CD) ;006
                               request->dept_disp_name
                           else
                               oc.dept_display_name
                           endif ;001
   where oc.catalog_cd = request->catalog_cd
with nocounter
 
if (curqual = 0)
   go to oc_failed
endif

/* update codevalue on codeset 200 */

; 002 begin
 
set gm_u_code_value0619_req->allow_partial_ind = 1
set gm_u_code_value0619_req->force_updt_ind    = 1
set gm_u_code_value0619_req->code_valuew       = 1
 
set gm_u_code_value0619_req->active_indf       = 1
set gm_u_code_value0619_req->descriptionf      = 1
 
set stat = alterlist(gm_u_code_value0619_req->qual, 1)
set gm_u_code_value0619_req->qual[1].active_ind = request->active_ind
set gm_u_code_value0619_req->qual[1].description = substring(1, 60, request->description)
set gm_u_code_value0619_req->qual[1].code_value = request->catalog_cd
 
execute gm_u_code_value0619 with replace(request, gm_u_code_value0619_req),
                                 replace(reply, gm_u_code_value0619_rep)
;002 end
 
if (error(errmsg, 0) != 0)
   go to cv_failed
endif

; If catalog type of General Lab or Radiology, then update department display name
 
if (request->catalog_type_cd = GEN_LAB_CD or request->catalog_type_cd = RADIOLOGY_CD or request->catalog_type_cd = CARDIOVAS_CD 
) ;006
      
    ; Check for orderable on SERVICE_DIRECTORY table
    select into "nl:"
        l.catalog_cd
    from 
        service_directory l
    where 
        l.catalog_cd = request->catalog_cd
    with nocounter, forupdate(l)

    if (curqual > 0)
        
        ; Update short_description field to current department display name
        update into service_directory l set            
            l.short_description = request->dept_disp_name,
            l.updt_dt_tm 		= cnvtdatetime(curdate,curtime3),
            l.updt_id 		    = reqinfo->updt_id,
            l.updt_cnt          = l.updt_cnt + 1,
            l.updt_task 		= reqinfo->updt_task,
            l.updt_applctx	    = reqinfo->updt_applctx
        where 
            l.catalog_cd = request->catalog_cd
        with nocounter
 
        if (curqual = 0)
            go to ddn_failed
        endif 

    ;003 - begin        
    else
    
        if (request->dept_disp_name > " ")
            free record orc_request
            
            record orc_request 
            (
              1 catalog_cd          = f8   
              1 synonym_id          = f8   
              1 active_ind          = i2   
              1 end_effective_dt_tm = dq8   
              1 short_description   = vc  
            ) 
            
            set orc_request->catalog_cd        = request->catalog_cd
            set orc_request->active_ind        = 1
            set orc_request->short_description = request->dept_disp_name
            
            set trace recpersist
            
            ; Execute the child script ORC_ADD_SERVICE_DIRECTORY to add department display name to service_directory table.
            
            execute orc_add_service_directory with replace(request, orc_request), 
                replace(reply, orc_reply)
                
            set trace norecpersist

        endif
    ;003 - end   
    endif
  endif    

  if (request->upd_medication_ind = 2)
    /***** Add entry to the medication table*/
      insert into medication m set
         m.catalog_cd = request->catalog_cd,
         m.valid_iv_additive_ind = request->iv_ingredient_ind,
         m.dc_display_days = request->dc_display_days,
         m.dc_interaction_days = request->dc_interaction_days,
         m.mdx_gcr_nomen_id = request->mdx_gcr_id,
         m.active_ind = request->active_ind,
         m.updt_dt_tm = cnvtdatetime(curdate,curtime),
         m.updt_id = reqinfo->updt_id,
         m.updt_task = reqinfo->updt_task,
         m.updt_applctx = reqinfo->updt_applctx,
         m.updt_cnt = 0
      with nocounter
      if (curqual = 0)
          go to medication_failed
      endif
  endif

  if (request->upd_medication_ind = 1)
    update into medication m set
         m.valid_iv_additive_ind = request->iv_ingredient_ind,
         m.dc_display_days = request->dc_display_days,
         m.dc_interaction_days = request->dc_interaction_days,
         m.active_ind = request->active_ind,
         m.updt_dt_tm = cnvtdatetime(curdate,curtime),
         m.updt_id = reqinfo->updt_id,
         m.updt_task = reqinfo->updt_task,
         m.updt_applctx = reqinfo->updt_applctx,
         m.updt_cnt = m.updt_cnt + 1
   where m.catalog_cd = request->catalog_cd
   with nocounter
   if (curqual = 0)
       go to upd_medication_failed
   endif
  endif

  go to exit_script

#oc_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "update"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "order_catalog"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "ORM_CHG_ORDER_CATALOG"
  set failed = "T"
  go to exit_script

#medication_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "medication"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_chg_order_catalog"
  set cFailed = "T"
  go to exit_script

#upd_medication_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "update"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "medication"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_chg_order_catalog"
  set cFailed = "T"
  go to exit_script

#cv_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "update"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "code_value"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "ORM_CHG_ORDER_CATALOG"
  set failed = "T"
  go to exit_script

#ddn_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "update"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "dept_disp_name"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_chg_order_catalog"
  set failed = "T"
  go to exit_script
  
#exit_script
  if (failed = "T")
    rollback
  else
    set reqinfo->commit_ind = 1
    set reply->status_data->status = "S"
  endif
  
/****************************************************************************
* Start 002 - Refresh the Cache                                             *
*****************************************************************************/

	declare app = i4 with constant(600005),private
	declare GetOrcTask = i4 with constant(500196),private
	declare OrdSearchTask = i4 with constant(500197),private
	declare OrmGetOrcReq = i4 with constant(500080),private
	declare OrmGetOrdSearchReq = i4 with constant(500563),private
	declare hApp = i4 with noconstant(0),private
	declare hTask = i4 with noconstant(0),private
	declare hStep = i4 with noconstant(0),private
	declare hReq = i4 with noconstant(0),private
	declare crmStatus = i4 with noconstant(0),private
	declare sts = i4 with noconstant(0),private
 
 	declare hReqString = vc
 
	;; begin app
	set crmStatus = uar_CrmBeginApp( app , hApp )
 
	if ( crmStatus )
		call echo(build("Error on BeginApp:", app, " Error Code:",crmStatus))
	else
 
		;; begin task
		set crmStatus = uar_CrmBeginTask( hApp , GetOrcTask , hTask )
	 
		if ( crmStatus )
			call uar_CrmEndApp( hApp )
			call echo(build("Error on BeginTask:", GetOrcTask, " Error Code:",crmStatus))
		else
			;; begin Orm Get Orc step
			set hReqString = "orm_get_orc"
			set crmStatus = uar_CrmBeginReq( hTask , hReqString , OrmGetOrcReq , hStep )
		 	
			if ( crmStatus )
				call uar_CrmEndTask( hTask )
				call uar_CrmEndApp( hApp )
				call echo(build("Error on BeginReq:", OrmGetOrcReq, " Error Code:",crmStatus))
			else
		 
				;; fill out request
				set hReq = uar_CrmGetRequest( hStep )
			 
				set sts = uar_CrmSetProperty(hReq, "Cpm.RefreshRequest", "1")
			 
				;; perform step
				set crmStatus = uar_CrmPerform( hStep )
			 
				if ( crmStatus )
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
					call echo(build("Error on CrmPerform:", OrmGetOrcReq, " Error Code:",crmStatus))
				else
					;; clean up
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
				endif
			endif
		endif
	endif

	set hApp = 0
	set hTask = 0
	set hReq = 0
	set hStep = 0
	;; begin app
	set crmStatus = uar_CrmBeginApp( app , hApp )
 
	if ( crmStatus )
		call echo(build("Error on BeginApp:", app, " Error Code:",crmStatus))
	else
		;; begin task
		set crmStatus = uar_CrmBeginTask( hApp , OrdSearchTask , hTask )
	 
		if ( crmStatus )
			call uar_CrmEndApp( hApp )
			call echo(build("Error on BeginTask:", OrdSearchTask, " Error Code:",crmStatus))
		else	
			;; begin Orm Get Ord Search step
			set hReqString = "orm_get_ord_search"
			set crmStatus = uar_CrmBeginReq( hTask , hReqString , OrmGetOrdSearchReq , hStep )
		 	
			if ( crmStatus )
				call uar_CrmEndTask( hTask )
				call uar_CrmEndApp( hApp )
				call echo(build("Error on BeginReq:", OrmGetOrdSearchReq, " Error Code:",crmStatus))
			else
		 
				;; fill out request
				set hReq = uar_CrmGetRequest( hStep )
			 
				set sts = uar_CrmSetProperty(hReq, "Cpm.RefreshRequest", "1")
			 
				;; perform step
				set crmStatus = uar_CrmPerform( hStep )
			 
				if ( crmStatus )
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
					call echo(build("Error on CrmPerform:", OrmGetOrdSearchReq, " Error Code:",crmStatus))
				else
					;; clean up
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
				endif
			endif
		endif
	endif	
/***********************************End 002*********************************************/
set last_mod = "004" ;004
end go




