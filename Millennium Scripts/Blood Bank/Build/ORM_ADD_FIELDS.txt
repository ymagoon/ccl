 ;;Solution_Test/script/Order Management/orm_add_fields/orm_add_fields.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       ORM_ADD_FIELDS.PRG
        Object name:            ORM_ADD_FIELDS
        Request #:              500031

        Product:                DCP
        Product Team:           ORDER MANAGEMENT
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Adds an order entry format to the
                                ORDER_ENTRY_FIELDS table

        Tables read:            ORDER_ENTRY_FIELDS
        Tables updated:         ORDER_ENTRY_FIELDS
        Executing from:         ORDER ENTRY FORMAT TOOL (app 500003)

        Special Notes:          -

******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 09/14/95 Matt Huffman         Initial Release                     *
;     001 10/20/96 Joe Geris            Added allow_multiple_ind            *
;     003 05/31/97 Joe Geris            Added spin_increment_cnt            *
;     004 11/06/97 Troy Miller          Added inserting of prompt_entity_id *
;                                       and prompt_entity_name fields.      *
;     005 01/06/98 Shawn Purcell        Adds entry to code_value table      *
;     006 05/08/98 Shawn Purcell        add common_flag & event_cd          *
;     007 02/05/99 Shawn Purcell        Add FSI_MAP_TO_OBX_IND              *
;     008 07/08/99 Jaime Tiller         fill out display key correctly      *
;     009 05/13/02 Shawn Purcell        add code_value as authenticated 	*
;     010 03/08/05 dh011019             Fix to allow large sequence numbers *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program orm_add_fields:dba go
create program orm_add_fields:dba
/*
record request
(
    1 description = vc              ;max length of 100
    1 codeset = F8
    1 catalog_type_cd = F8
    1 oe_field_meaning = F8
    1 request = F8
    1 min_val = F8
    1 max_val = F8
    1 field_type_flag = I2
    1 accept_size = F8
    1 validation_type_flag = I2
    1 help_context_id = F8
    1 allow_mult_ind = i2
    1 spin_increment_cnt = i4
    1 prompt_entity_name = vc  ;004
    1 prompt_entity_id   = f8  ;004
    1 event_cd           = f8  ;006
    1 common_flag        = i2  ;006
    1 FSI_MAP_TO_OBX_IND = I2
)
*/
record reply
(
  1 qual[1]
    2 oe_field_id = F8

%i cclsource:status_block.inc ;004
)
declare code_set = i4
declare cdf_meaning = c12
declare code_value = f8
set code_set = 8
set cdf_meaning = "AUTH"
execute cpm_get_cd_for_cdf
set reqdata->data_status_cd = code_value

set failed = "F"
set reply->status_data->status = "F"
;010 set fld_k = 0

declare last_mod	= c3	with private,	noconstant(fillstring(3, " "))	;010
declare mod_date	= c30	with private,	noconstant(fillstring(30, " "))	;010
declare fld_k		= f8	with protect,	noconstant(0.0)					;010

select into "nl:"
  y = seq(reference_seq,nextval)
from dual
detail
  fld_k = y ;010 cnvtint(y)
with
  ;010 format,
  counter

if (curqual = 0)
  set reply->status_data->subeventstatus[1]->operationname = "get sequence number"
  set reply->status_data->subeventstatus[1]->operationstatus = "F"
  set reply->status_data->subeventstatus[1]->targetobjectname = "reference_seq"
  set reply->status_data->subeventstatus[1]->targetObjectValue = "unable to select next value"
  set failed = "T"
  go to exit_script
endif

insert into order_entry_fields fld
set
  fld.oe_field_id         = fld_k,
  fld.description         = request->description,
  fld.codeset             = request->codeset,
  fld.catalog_type_cd     = request->catalog_type_cd,
  fld.oe_field_meaning_id = request->oe_field_meaning,
  fld.request             = request->request,
  fld.min_val             = request->min_val,
  fld.max_val             = request->max_val,
  fld.field_type_flag     = request->field_type_flag,
  fld.accept_size         = request->accept_size,
  fld.validation_type_flag  = request->validation_type_flag,
  fld.help_context_id     = request->help_context_id,
  fld.allow_multiple_ind  = request->allow_mult_ind,
  fld.spin_increment_cnt  = request->spin_increment_cnt,
  fld.prompt_entity_name  = request->prompt_entity_name,  ;004
  fld.prompt_entity_id    = request->prompt_entity_id,    ;004
  fld.common_flag         = request->common_flag,         ;006
  fld.event_cd            = request->event_cd,            ;006
  fld.fsi_map_to_obx_ind  = request->fsi_map_to_obx_ind,  ;007
  fld.updt_dt_tm          = cnvtdatetime(curdate,curtime3),
  fld.updt_id             = reqinfo->updt_id,
  fld.updt_task           = reqinfo->updt_task,
  fld.updt_applctx        = reqinfo->updt_applctx,
  fld.updt_cnt            = 0
with nocounter

if (curqual = 0)
  set reply->status_data->subeventstatus[1]->targetobjectname = "order entry fields table"
  set reply->status_data->subeventstatus[1]->operationstatus = "F"
  set reply->status_data->subeventstatus[1]->operationname = "insert"
  set reply->status_data->subeventstatus[1]->targetObjectValue = "unable to insert into table"
  set failed = "T"
  go to exit_script
endif

/***** Add corresponding entry to the codevalue table *****/
;005
set atc = 0

select into "nl:"
  from code_value m
  where m.code_set = 48 and m.cdf_meaning="ACTIVE"
  detail atc = m.code_value
with nocounter

insert into code_value cv set
  cv.code_value = fld_k,
  cv.code_set = 16449,
  cv.cdf_meaning =
  if (request->prompt_entity_name ="DISCRETE_TASK_ASSAY")
     "PROMPT"
   else
     "DETAIL"
  endif,
  cv.display = substring(1,40,request->description),
;mod008  cv.display_key = substring(1,40,cnvtupper(request->description)),
  cv.display_key = substring(1,40,cnvtalphanum(cnvtupper(request->description))),   ;mod008
  cv.description = substring(1,60,request->description),
  cv.collation_seq = 0,
  cv.active_type_cd = atc,
  cv.active_ind = 1,
  cv.active_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.inactive_dt_tm = null,
  cv.begin_effective_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.updt_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.updt_id = reqinfo->updt_id,
  cv.updt_cnt = 0,
  cv.updt_task = reqinfo->updt_task,
  cv.updt_applctx = reqinfo->updt_applctx,
  cv.data_status_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.data_status_cd = reqdata->data_status_cd, ;009
  cv.data_status_prsnl_id = 0
with nocounter
;end 005

#exit_script
  if (failed = "F")
    set reqinfo->commit_ind = 1
    set reply->status_data->status = "S"
    set reply->oe_field_id = fld_k
  else
    set reqinfo->commit_ind = 0
    set reply->status_data->status = "F"
  endif

set last_mod = "010"
set mod_date = "June 28, 2005"

end go

;Generated by GNU enscript 1.6.4.
