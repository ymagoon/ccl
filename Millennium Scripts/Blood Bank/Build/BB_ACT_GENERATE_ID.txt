 ;;Solution_Test/script/PathNet -- BB Transfusion/BBProduct/BB_ACT_GENERATE_ID.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-2003 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
 
        Source file name:   bb_act_generate_id.prg
        Object name:        bb_act_generate_id
        Request #:          225902
 
        Product:            Pathnet
        Product Team:       Blood Bank
        HNA Version:        500
        CCL Version:
 
        Program purpose:    To generate a new id from a sequence defined in 
                            the request.
 
        Tables read:        dual
 
        Tables updated:     none
 
        Executing from:     BBProduct.DLL, modBBCommon.bas
 
        Special Notes:      None
 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 08/17/00 Doug Saus            Initial release                     *
;    *001 09/24/03 Chris Noe            Change select to a case statement   *
;    *                                  and added the reference sequence.   *
;    *                                  Added error_handler routine.        *
;    *002 08/02/05 Jeff Wain            Removed cnvtreal formatting on seqn *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program bb_act_generate_id:dba go
create program bb_act_generate_id:dba
 
/*
record request
(
 1 product_seq_ind = i2
)
*/
 
record reply
(
    1 generated_id = f8
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"

/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
set modify predeclare
declare errmsg		        = c132  with noconstant(fillstring(132," "))
declare error_check         = i2    with noconstant(error(errmsg,1))
declare seq_error           = vc    with noconstant("")
 
;Verify that the calling application passed in a valid sequence indicator.
if ((request->product_seq_ind < 0) or (request->product_seq_ind > 3))
    set seq_error = concat("Invalid sequence indicator.  Unable to generate unique id.")
    call ErrorHandler("F", "Invalid sequence", seq_error)
endif
    
select 
    if (request->product_seq_ind = 0)
        seqn = seq(pathnet_seq,nextval)
        
    elseif (request->product_seq_ind = 1)
        seqn = seq(blood_bank_seq,nextval)
        
    elseif (request->product_seq_ind = 2)
        seqn = seq(long_data_seq,nextval)
        
    elseif (request->product_seq_ind = 3)
        seqn = seq(reference_seq,nextval)
               
    endif
    
    into "nl:"
    
from
    dual
 
detail
    reply->generated_id = seqn

with format, nocounter

;* Check for CCL errors.
set error_check = error(errmsg,0)
if (error_check != 0)
   call ErrorHandler("F", "BB_ACT_GENERATE_ID", errmsg)
   go to EXIT_SCRIPT
endif

go to SET_STATUS

/*****************************************************************************/
/* ErrorHandler subroutine                                                   */
/*****************************************************************************/
declare ErrorHandler(OperationStatus = c1,
                     TargetObjectName = c25,
                     TargetObjectValue = vc) = NULL

subroutine ErrorHandler(OperationStatus,
                        TargetObjectName,
                        TargetObjectValue)
   declare error_cnt = i2 with private, noconstant(0)

   set error_cnt = size(reply->status_data.subeventstatus, 5)
   if (error_cnt > 1
   or (error_cnt = 1 and reply->status_data.subeventstatus[error_cnt].OperationStatus != ""))
      set error_cnt = error_cnt + 1
      set stat = alter(reply->status_data.subeventstatus, error_cnt)
   endif

   set reply->status_data.status = "F"
   set reply->status_data.subeventstatus[error_cnt].OperationName = "bb_act_generate_id"
   set reply->status_data.subeventstatus[error_cnt].OperationStatus = OperationStatus
   set reply->status_data.subeventstatus[error_cnt].TargetObjectName = TargetObjectName
   set reply->status_data.subeventstatus[error_cnt].TargetObjectValue = TargetObjectValue

   go to EXIT_SCRIPT
end

#SET_STATUS
if (curqual = 0)
   set reply->status_data->status = "Z"
else
   set reply->status_data->status = "S"
endif

#EXIT_SCRIPT
 
end 
go

;Generated by GNU enscript 1.6.4.
