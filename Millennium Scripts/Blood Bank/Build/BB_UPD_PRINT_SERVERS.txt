 ;;Solution_Test/script/PathNet -- BB Transfusion/bb_upd_print_servers/bb_upd_print_servers.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2006 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       bb_upd_print_servers.prg
        Object name:            bb_upd_print_servers
        Request #:              225948
 
        Product:                PathNet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        This script adds or updates print server information.
 
        Tables read:            BB_PRINT_SERVER
 
        Tables updated:         BB_PRINT_SERVER
        Executing from:         vb application,
                                script
        Special Notes:          None
 
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 05/22/06 Heatheryn Parker     Initial Release                     *
;~DE~************************************************************************
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program bb_upd_print_servers:dba go
create program bb_upd_print_servers:dba

;****************************************************************************
;* Request Record                                                           *
;****************************************************************************
/*
record request
(
  1 ServerList[*]
    2 add_change_ind                   = i2
    2 active_ind                       = i2
    2 bb_print_server_id               = f8
    2 ip_addr                          = vc
    2 port_addr                        = vc
    2 redun_parent_server_id           = f8
    2 server_description_txt           = vc
    2 server_name                      = vc
)
*/
 
 
;****************************************************************************
;* Reply Record                                                             *
;****************************************************************************
record reply
(
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"

/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
declare SCRIPT_NAME           = c20  with constant("bb_upd_print_servers")
declare stat                  = i2   with protect, noconstant(0)
declare ADD_IND               = i2   with constant(1)
declare CHANGE_IND            = i2   with constant(2)

; Error message declarations.
declare errmsg                = vc   with protect, noconstant("")
declare error_check           = i2   with protect, noconstant(error(errmsg,1))


; Loop through the server list.  Evaluate the add_change_ind to determine if a 
; row should be added to the BBD_PRINT_SERVER table, or simply updated.
for (i_idx = 1 to size(request->ServerList,5))    
    select into "nl:"
        
    from bb_print_server ps
        
    where ps.bb_print_server_id = request->ServerList[i_idx].bb_print_server_id
    
    with nocounter, forupdate(ps)
    
    if (curqual > 0 and request->ServerList[i_idx].add_change_ind = ADD_IND)    
        set request->ServerList[i_idx].add_change_ind = CHANGE_IND
    endif
    
    if (request->ServerList[i_idx].add_change_ind = CHANGE_IND and request->ServerList[i_idx].active_ind = 1)
        update into bb_print_server ps
        	set ps.active_ind             = request->ServerList[i_idx].active_ind,
        	    ps.ip_addr                = request->ServerList[i_idx].ip_addr,
        	    ps.port_addr              = request->ServerList[i_idx].port_addr,
        	    ps.redun_parent_server_id = request->ServerList[i_idx].redun_parent_server_id,
        	    ps.server_description_txt = request->ServerList[i_idx].server_description_txt,
        	    ps.server_name            = request->ServerList[i_idx].server_name,
        	    ps.updt_cnt               = ps.updt_cnt + 1,
        	    ps.updt_applctx           = reqinfo->updt_applctx,
                ps.updt_dt_tm             = cnvtdatetime(curdate, curtime3),
                ps.updt_id                = reqinfo->updt_id,
                ps.updt_task              = reqinfo->updt_task        	    
        	where ps.bb_print_server_id = request->ServerList[i_idx].bb_print_server_id
        	with nocounter
        	
        ; Check for any CCL errors
         set error_check = error(errmsg,0)
         if (error_check != 0)
            call ErrorHandler("F", "Upd bb_print_server", errmsg)
         endif
    elseif (request->ServerList[i_idx].add_change_ind = CHANGE_IND and request->ServerList[i_idx].active_ind = 0)
         delete from bb_print_server ps         
         where ps.bb_print_server_id = request->ServerList[i_idx].bb_print_server_id         
         with nocounter
         
        ; Check for any CCL errors
         set error_check = error(errmsg,0)
         if (error_check != 0)
            call ErrorHandler("F", "Del bb_print_server", errmsg)
         endif                  
    elseif (request->ServerList[i_idx].add_change_ind = ADD_IND)
         insert into bb_print_server ps 
        	set ps.active_ind             = request->ServerList[i_idx].active_ind,
        	    ps.active_status_cd       = reqdata->active_status_cd,
                ps.active_status_dt_tm    = cnvtdatetime(curdate, curtime3),
                ps.active_status_prsnl_id = reqinfo->updt_id,
        	    ps.bb_print_server_id     = request->ServerList[i_idx].bb_print_server_id,
        	    ps.ip_addr                = request->ServerList[i_idx].ip_addr,
        	    ps.port_addr              = request->ServerList[i_idx].port_addr,
        	    ps.redun_parent_server_id = request->ServerList[i_idx].redun_parent_server_id,
        	    ps.server_description_txt = request->ServerList[i_idx].server_description_txt,
        	    ps.server_name            = request->ServerList[i_idx].server_name
        	with nocounter          

        ; Check for any CCL errors
         set error_check = error(errmsg,0)
         if (error_check != 0)
            call ErrorHandler("F", "Insert bb_print_server.", errmsg)
         endif
    endif
endfor

go to SET_STATUS

/*****************************************************************************/
/* ErrorHandler subroutine                                                   */
/*****************************************************************************/
declare ErrorHandler(OperationStatus = c1,
                     TargetObjectName = c25,
                     TargetObjectValue = vc) = NULL

subroutine ErrorHandler(OperationStatus,
                        TargetObjectName,
                        TargetObjectValue)
   declare error_cnt = i2 with private, noconstant(0)

   set error_cnt = size(reply->status_data.subeventstatus, 5)
   if (error_cnt > 1
   or (error_cnt = 1 and reply->status_data.subeventstatus[error_cnt].OperationStatus != ""))
      set error_cnt = error_cnt + 1
      set stat = alter(reply->status_data.subeventstatus, error_cnt)
   endif

   set reply->status_data.status = "F"
   set reply->status_data.subeventstatus[error_cnt].OperationName = script_name
   set reply->status_data.subeventstatus[error_cnt].OperationStatus = OperationStatus
   set reply->status_data.subeventstatus[error_cnt].TargetObjectName = TargetObjectName
   set reply->status_data.subeventstatus[error_cnt].TargetObjectValue = TargetObjectValue

   set reqinfo->commit_ind = 0
   
   go to EXIT_SCRIPT
end


/*****************************************************************************/
/* Status set and exit script                                                */
/*****************************************************************************/
#SET_STATUS
   set reply->status_data->status = "S"
   set reqinfo->commit_ind = 1

#EXIT_SCRIPT

end 

go

;Generated by GNU enscript 1.6.4.
