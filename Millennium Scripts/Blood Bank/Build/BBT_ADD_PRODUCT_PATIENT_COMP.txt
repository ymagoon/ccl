 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Productpatientcompatibilitytool/bbt_add_product_patient_comp.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       BBT_ADD_PRODUCT_PATIENT_COMP
        Object name:            BBT_ADD_PRODUCT_PATIENT_COMP
        Request #:              225072

        Product:                Pathnet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        To create the product aborh to patient aborh
                                compatibility

        Tables read:            none
        Tables updated:         PRODUCT_ABORH, PATIENT_ABORH
        Executing from:         Produc_1

        Special Notes:          ?

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 06/12/96 Mike Goings          Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************


drop program bbt_add_product_patient_comp:dba go
create program bbt_add_product_patient_comp:dba

/************************/
/*    Request record    */
/************************/
/*
record request
( 1 product_cd = f8
  1 product_aborh_cd = f8
  1 no_gt_on_prsn_flag = i4
  1 no_ad_on_prsn_flag = i4
  1 bbd_no_gt_dir_prsn_flag = i4
  1 prod_sequence_nbr = i4
  1 product_status = i4
  1 aborh_indicator = i2 ; 1 - aborh,  2 - rh only
  1 person_aborh_cnt = i4
  1 person_aborh_data[x]
    2 person_aborh_cd = f8
    2 prsn_sequence_nbr = i4
    2 warn_indicator = i2
  1 disp_no_curraborh_prsn_flag = i4
 )
*/


/************************/
/*     Reply record     */
/************************/
if (not validate(reply,0))
  record reply
  ( 
 1 person_aborh_data[1]
   2 person_aborh_cd = f8
%i cclsource:status_block.inc
  )
endif

/************************/
/* Initialize variables */
/************************/
set reply->status_data->status = "F"
set number_of_person_aborh = 0
set stat = alter(reply->person_aborh_data,request->person_aborh_cnt)
set failures = 0
set y = 1
set product_exist_cnt = 1
set person_exist_cnt = 1
set continue_product = "T"
set continue_person = "T"

if (request->product_status = 0)
  go to insert_person
endif

/************************/
/* Locate Existing      */
/************************/
while (continue_product = "T")
  select  into  "nl:" 
    p.*
  from  product_aborh  p

  where  p.product_cd = request->product_cd and
         p.product_aborh_cd = request->product_aborh_cd and
         p.active_ind = 0 and
         p.sequence_nbr = product_exist_cnt
  
  if (curqual != 0)
     set product_exist_cnt = product_exist_cnt + 1
  else
     set continue_product = "N"
  endif

endwhile
/************************/
/*    Insert record     */
/************************/
#insert_product
insert into product_aborh p set

  p.product_cd = request->product_cd,
  p.product_aborh_cd = request->product_aborh_cd,
  p.sequence_nbr = product_exist_cnt,
  p.no_gt_on_prsn_flag = request->no_gt_on_prsn_flag,
  p.no_gt_autodir_prsn_flag = request->no_ad_on_prsn_flag,
  p.disp_no_curraborh_prsn_flag = request->disp_no_curraborh_prsn_flag,
  p.active_ind = 1,
  p.active_status_cd = reqdata->active_status_cd,
  p.active_status_prsnl_id = reqinfo->updt_id,
  p.updt_cnt = 0,
  p.updt_dt_tm = cnvtdatetime(curdate, curtime3),
  p.updt_id = reqinfo->updt_id,
  p.updt_task = reqinfo->updt_task,
  p.updt_applctx = reqinfo->updt_applctx,
  p.aborh_option_flag = request->aborh_indicator

with nocounter 

if (curqual = 0)
    set failures = 1,
    go to exit_script
endif


/************************/
/*  Insert Person Aborh */
/************************/
#insert_person

set number_of_person_aborh  = request->person_aborh_cnt

for (y = 1 to number_of_person_aborh)
  set person_exist_cnt = 1
  set continue_person = "T"
  while (continue_person = "T")
    select  into  "nl:" 
      per.sequence_nbr
    from  product_patient_aborh  per

    where  per.product_cd = request->product_cd and
           per.prod_aborh_cd = request->product_aborh_cd and
           per.prsn_aborh_cd = request->person_aborh_data[y]->person_aborh_cd and
           per.active_ind = 0 and
           per.sequence_nbr = person_exist_cnt

    if (curqual != 0)
      set person_exist_cnt = person_exist_cnt + 1
    else
      set continue_person = "F"
    endif

  endwhile

   insert into product_patient_aborh prs set
        prs.product_cd = request->product_cd,
        prs.prod_aborh_cd = request->product_aborh_cd,
        prs.prsn_aborh_cd = request->person_aborh_data[y]->person_aborh_cd,
        prs.sequence_nbr = person_exist_cnt,
        prs.active_ind = 1,
        prs.active_status_cd = reqdata->active_status_cd,
        prs.active_status_prsnl_id = reqinfo->updt_id,
        prs.warn_ind = 
          request->person_aborh_data[y]->warn_indicator,
        prs.updt_cnt = 0,
        prs.updt_dt_tm = cnvtdatetime(curdate, curtime3),
        prs.updt_id = reqinfo->updt_id,
        prs.updt_task = reqinfo->updt_task,
        prs.updt_applctx = reqinfo->updt_applctx


set reply -> person_aborh_data[y]-> person_aborh_cd = request->person_aborh_data[y]->person_aborh_cd

  if (curqual = 0)
      set failures = 1,
      go to exit_script
  endif

endfor

commit

/************************/
/*    exit_script       */
/************************/
#exit_script
  if (failures = 0)
    set reply->status_data->status = "S"
  else
    rollback,
    set reply->status_data->status = "F"
  endif

end go

;Generated by GNU enscript 1.6.4.
