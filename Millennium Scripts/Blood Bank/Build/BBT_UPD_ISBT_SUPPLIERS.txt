 ;;Solution_Test/script/PathNet -- BB Transfusion/SUPPLIEPREFIXTOOL/Bbt_upd_isbt_suppliers.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2002 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       BBT_UPD_ISBT_SUPPLIERS.prg
        Object name:            BBT_UPD_ISBT_SUPPLIERS
        Request #:              225710

        Product:                Blood Bank
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            Rev 8.0

        Program purpose:        Update or Insert rows into the "bb_isbt_suppliers" table
                                
        Tables read:            bb_isbt_suppliers
                             

        Table updated:          bb_isbt_suppliers

        Special Notes:          None

;~DB~******************************************************************************************
;*                      GENERATED MODIFICATION CONTROL LOG                                    *
;**********************************************************************************************
;*                                                                                            *
;*Mod Date     Engineer             ITN     Feature      Comment                              *
;*--- -------- -------------------- ------- ------------ -------------------------------------*
;*000 06/25/08 Jacob Anderson       131287  164860       Initial Release                      *
;~DE~******************************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ***********************************/

drop program BBT_UPD_ISBT_SUPPLIERS:dba go
create program BBT_UPD_ISBT_SUPPLIERS:dba


;free record reply

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(
1 supplierlist[*]
    2 double          isbt_supplier_id;
    2 double          organization_id;
    2 string(5)       ISBT_supplier_FIN;
    2 double          Inventory_area_cd;
    2 string(15)      license_nbr;
    2 string(15)      registration_nbr;
    2 short           active_ind;
}
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
  1 qual[*]
      2 isbt_supplier_id                   = f8
      2 inventory_area_cd                  = F8
      2 ISBT_supplier_FIN                  = c5
      2 license_nbr                        = c15
      2 organization_id                    = f8
      2 registration_nbr                   = c15
%i cclsource:status_block.inc
)


set reply->status_data->status = "F"



/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/

declare new_bb_isbt_supplier_id        = f8 with noconstant(0.0)
declare errmsg						   = c132 with noconstant(fillstring(132," "))
declare error_check					   = i2 with noconstant(error(errmsg,1))
declare qual_cnt					   = i4 with noconstant(0)
declare stat					       = i2 with noconstant(0)
declare supplier_cnt	               = i4 with noconstant(0)
declare splr	                       = i4 with noconstant(0)
declare FIN_Index	                   = i4 with noconstant(0)


set supplier_cnt = size(request->supplierlist,5)

/*first loop through and perform all updates*/
for (splr = 1 to supplier_cnt)
    
    
    if (request->supplierlist[splr]->isbt_supplier_id != 0)
    
       /* check to see if the FIN,inventory_area, and organization_id exist on another active row in the 
        table, and also existing FIN does not exist on another active row in the table with a different 
        Organization and if so, fail the script without updating */
        select into "nl:"
            *
            
        from bb_isbt_supplier biss 
        
        where  (
        
                (biss.Inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
                      and biss.Inventory_area_cd = 0
                      and biss.organization_id  = request->supplierlist[splr]->organization_id
                      and biss.bb_isbt_supplier_id != request->supplierlist[splr]->isbt_supplier_id
                      and biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin )
                
           or
                         
                  ( biss.Inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
                      and biss.Inventory_area_cd > 0
                      and biss.organization_id  = request->supplierlist[splr]->organization_id
                      and biss.bb_isbt_supplier_id != request->supplierlist[splr]->isbt_supplier_id ) 
                      
           or 
                   ( biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin
                    and biss.organization_id != request->supplierlist[splr]->organization_id )
                     
                ) 
                    and biss.active_ind = 1
        
        
       with nocounter 
        
        /*if a match is found fail the script and exit*/
        if (curqual>0) 
        
          set errmsg = "Unique Supplier Exists - Update Failed."
          call ErrorHandler("INSERT", "F", "BBT_UPD_ISBT_SUPPLIERS", errmsg)
          go to EXIT_SCRIPT
          
        endif
        
       ;update existing row
        update into bb_isbt_supplier biss set
 
            biss.inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
            , biss.license_nbr_txt = request->supplierlist[splr]->license_nbr
            , biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin
            , biss.organization_id = request->supplierlist[splr]->organization_id
            , biss.registration_nbr_txt = request->supplierlist[splr]->registration_nbr
            , biss.active_ind = request->supplierlist[splr]->active_ind
            , biss.updt_dt_tm = cnvtdatetime(curdate,curtime3)
            , biss.updt_cnt = biss.updt_cnt + 1
            
       where biss.bb_isbt_supplier_id = request->supplierlist[splr]->isbt_supplier_id
       
       ;* Check for CCL errors.
       set error_check = error(errmsg,0)
       if (error_check != 0)
          call ErrorHandler("UPDATE", "F", "BBT_UPD_ISBT_SUPPLIERS", errmsg)
          go to EXIT_SCRIPT
       endif
       ;* Check for update failure.
       if (curqual = 0)
          set errmsg = "Update failed."
          call ErrorHandler("UPDATE", "F", "BBT_UPD_ISBT_SUPPLIERS", errmsg)
          go to EXIT_SCRIPT
       endif
       
    endif
    
endfor

set qual_cnt = 0

/*Now perform any inserts*/
for (splr = 1 to supplier_cnt)

    if (request->supplierlist[splr]->isbt_supplier_id = 0)
        ;insert data into new row
        
        /* check to see if the FIN,inventory_area, and organization_id exist on another active row in the 
        table, and also existing FIN does not exist on another active row in the table with a different 
        Organization and if so, fail the script without updating */
        select into "nl:"
            *
            
        from bb_isbt_supplier biss 
        
        where  (
        
                (biss.Inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
                      and biss.Inventory_area_cd = 0
                      and biss.organization_id  = request->supplierlist[splr]->organization_id
                      and biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin )
                
           or
                         
                  ( biss.Inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
                      and biss.inventory_area_cd > 0
                      and biss.organization_id  = request->supplierlist[splr]->organization_id ) 
                      
           or 
                   ( biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin
                    and biss.organization_id != request->supplierlist[splr]->organization_id )
                     
                ) 
                    and biss.active_ind = 1
        
        
       with nocounter 
        
        /*if a match is found fail the script and exit*/
        if (curqual>0) 
        
          set errmsg = "Unique Supplier Exists - Update Failed."
          call ErrorHandler("INSERT", "F", "BBT_UPD_ISBT_SUPPLIERS", errmsg)
          go to EXIT_SCRIPT
          
        endif
     
       /*get a new id */
        select into "nl:"
          y = seq(pathnet_seq,nextval)
       from
          dual
       detail
          new_bb_isbt_supplier_id = y
       with
          format
         ,counter 
         
         
         
       /*if failed to get an id fail the script and exit*/
       if (curqual = 0)
          set errmsg = "Unable to obtain reference sequence id"
          call ErrorHandler("SELECT", "F", "DUAL", errmsg)
          go to EXIT_SCRIPT
       endif
      
       insert into bb_isbt_supplier biss set
       
            biss.active_ind = 1
            , biss.bb_isbt_supplier_id = new_bb_isbt_supplier_id
            , biss.inventory_area_cd = request->supplierlist[splr]->inventory_area_cd
            , biss.isbt_supplier_fin = request->supplierlist[splr]->isbt_supplier_fin
            , biss.license_nbr_txt = request->supplierlist[splr]->license_nbr
            , biss.organization_id = request->supplierlist[splr]->organization_id
            , biss.registration_nbr_txt = request->supplierlist[splr]->registration_nbr
            , biss.updt_cnt = 0
            , biss.updt_dt_tm = cnvtdatetime(curdate,curtime3)
            , biss.updt_id = reqinfo->updt_id
            , biss.updt_task = reqinfo->updt_task
            , biss.updt_applctx = reqinfo->updt_applctx
            , biss.active_status_cd = reqdata->active_status_cd
            , biss.updt_id = reqinfo->updt_id
        
       ;* Check for CCL errors.
       set error_check = error(errmsg,0)
       if (error_check != 0)
          call ErrorHandler("INSERT", "F", "BBT_UPD_ISBT_SUPPLIERS", errmsg)
          go to EXIT_SCRIPT
       endif
       
       
       ; ** Return new_bb_isbt_supplier_id to VB
       
        set qual_cnt = qual_cnt + 1
        if (qual_cnt > size(reply->qual,5))
            set stat = alterlist(reply->qual, qual_cnt + 9)
        endif
        
        set reply->qual[qual_cnt]->organization_id = request->supplierlist[splr]->organization_id
        set reply->qual[qual_cnt]->isbt_supplier_id = new_bb_isbt_supplier_id   
        set reply->qual[qual_cnt].inventory_area_cd = request->supplierlist[splr]->inventory_area_cd  
        set reply->qual[qual_cnt].ISBT_supplier_FIN = request->supplierlist[splr]->isbt_supplier_fin
       
       
       
    endif
    
endfor

set stat = alterlist(reply->qual, qual_cnt)

/*****************************************************************************/
/* Set reply status                                                          */
/*****************************************************************************/

set reply->status_data->status = "S"

go to EXIT_SCRIPT

subroutine ErrorHandler(OperationName,
                        OperationStatus,
                        TargetObjectName,
                        TargetObjectValue)
   declare error_cnt = i2 with private, noconstant(0)
   
   set error_cnt = size(reply->status_data.subeventstatus, 5)
   if (error_cnt > 1
   or (error_cnt = 1 and reply->status_data.subeventstatus[error_cnt].OperationStatus != ""))
      set error_cnt = error_cnt + 1
      set stat = alter(reply->status_data.subeventstatus, error_cnt)
   endif
   
   set reply->status_data.status = "F"
   set reply->status_data.subeventstatus[error_cnt].OperationName = OperationName
   set reply->status_data.subeventstatus[error_cnt].OperationStatus = OperationStatus
   set reply->status_data.subeventstatus[error_cnt].TargetObjectName = TargetObjectName
   set reply->status_data.subeventstatus[error_cnt].TargetObjectValue = TargetObjectValue
end


#EXIT_SCRIPT

if (reply->status_data->status = "S")
    set reqinfo->commit_ind = 1
else
    set reqinfo->commit_ind = 0
endif
/*
for (qual_cnt = 1 to size(reply->qual,5))

    call echo(build(
                    qual_cnt  ,"/",
                    reply->qual[qual_cnt]->organization_id ,"/",
                    reply->qual[qual_cnt]->isbt_supplier_id ,"/",
                    new_bb_isbt_supplier_id
                    
                    ))
                    
endfor
*/
end
go

;Generated by GNU enscript 1.6.4.
