 ;;Solution_Test/script/PathNet -- BB Transfusion/SUPPLIEPREFIXTOOL/BBT_UPD_ALPHA_TRANS.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1997 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_upd_bb_alpha_trans.prg
        Object name:            bbt_upd_bb_alpha_trans
        Request #:              225455              

        Product:                PathNet
        Product Team:           BB Transfusion
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Update (add/change) alpha_trans

        Tables read:            alpha_trans

        Tables updated:         alpha_trans

        Executing from:         VB

        Special Notes:          

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/27/97 Victoria Savariyar   Initial Release
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

Drop program bbt_upd_alpha_trans:dba go
Create program bbt_upd_alpha_trans:dba 

/*
record request
(
1 alphatranslist[*]
  2 spread_sheet_row            =       i4
  2 alpha_translation_id        =       f8      ;(0 if new)
  2 alpha_barcode_value         =       c5
  2 alpha_translation_value     =       c5     
  2 active_ind                  =       i2
  2 updt_cnt                    =       i4      ;(update only)
)
*/

record reply
(
1 qual[*]
  2 spread_sheet_row                 = i4
  2 alpha_translation_id             = f8
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set count1 = 0 
set new_alpha_translation_id = 0.0
set qual_cnt = 0
set stat = alterlist(reply->qual, 10)

set alphatrans_count = size(request->alphatranslist,5)

for (alphatrans = 1 to alphatrans_count)
    if (request->alphatranslist[alphatrans]->alpha_translation_id = 0)
        ; ** Add new alpha_translation to bb_alpha_translation

        ;  * Get next pathnet_seq for alpha_translation_id
        set new_alpha_translation_id = NEXT_PATHNET_SEQ(0)

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "get next pathnet_seq",
                 /* message */ build("get next pathnet_seq failed--alpha_translation_id ="
                                        ,request->alphatranslist[alphatrans]->alpha_translation_id)
                )
            go to EXIT_SCRIPT
        endif

        insert into bb_alpha_translation bba set
            bba.alpha_translation_id          = new_alpha_translation_id
            , bba.alpha_barcode_value         = request->alphatranslist[alphatrans]->alpha_barcode_value
            , bba.alpha_translation_value                = request->alphatranslist[alphatrans]->alpha_translation_value
            , bba.updt_cnt              = 0
            , bba.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
            , bba.updt_id               = reqinfo->updt_id
            , bba.updt_task             = reqinfo->updt_task
            , bba.updt_applctx          = reqinfo->updt_applctx
            , bba.active_ind            = 1
            , bba.active_status_cd      = reqdata->active_status_cd
            , bba.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
            , bba.active_status_prsnl_id = reqinfo->updt_id

        with nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "insert into bb_alpha_translation",
                 /* message */ build("insert into bb_alpha_translation failed--alpha_translation_id ="
                                        ,request->alphatranslist[alphatrans]->alpha_translation_id)
                )
            go to EXIT_SCRIPT
        endif

        ; ** Return new_alpha_translation_id to VB
        set qual_cnt = qual_cnt + 1
        if (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
            set stat = alterlist(reply->qual, qual_cnt + 9)
        endif
        set reply->qual[qual_cnt]->spread_sheet_row           = request->alphatranslist[alphatrans]->spread_sheet_row     
        set reply->qual[qual_cnt]->alpha_translation_id       = new_alpha_translation_id    

    else
        ; ** Update existing alpha_translation
        select into "nl:"
           bba.alpha_translation_id

        from
            bb_alpha_translation bba

        where
            bba.alpha_translation_id          = request->alphatranslist[alphatrans]->alpha_translation_id
              and bba.updt_cnt                = request->alphatranslist[alphatrans]->updt_cnt

        with    nocounter, forupdate(bba)

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "lock bb_alpha_translation forupdate",
                 /* message */ build("lock bb_alpha_translation forupdate failed--alpha_translation_id ="
                                    ,request->alphatranslist[alphatrans]->alpha_translation_id)
                )
            go to EXIT_SCRIPT
        endif

        update into bb_alpha_translation bba set
            bba.active_ind            = request->alphatranslist[alphatrans]->active_ind 
            , bba.updt_cnt              = bba.updt_cnt + 1
            , bba.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
            , bba.updt_id               = reqinfo->updt_id
            , bba.updt_task             = reqinfo->updt_task
            , bba.updt_applctx          = reqinfo->updt_applctx
            , bba.active_status_cd
                = if (request->alphatranslist[alphatrans]->active_ind = 1)
                    reqdata->active_status_cd
                  else
                    reqdata->inactive_status_cd
                  endif
            , bba.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
            , bba.active_status_prsnl_id = reqinfo->updt_id

        where   bba.alpha_translation_id  = request->alphatranslist[alphatrans]->alpha_translation_id
    
        with    nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "update into bb_alpha_translation",
                 /* message */ build("update into bb_alpha_translation failed-alpha_translation_id ="
                                    ,request->alphatranslist[alphatrans]->alpha_translation_id)
                )
            go to EXIT_SCRIPT
        endif
    endif
endfor  

set stat = alterlist(reply->qual, qual_cnt)

call LOAD_PROCESS_STATUS
    (
     /* status  */ "S",
     /* process */ "SUCCESS",
     /* message */ "All records added/updated successfully"
    )
        
go to EXIT_SCRIPT

; ** Get next Pathnet_Seq
%i cclsource:bbt_get_pathnet_seq_sub.inc

subroutine LOAD_PROCESS_STATUS
    (
     sub_status,
     sub_process,
     sub_message
    )

    set reply->status_data->status = sub_status
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alter(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = sub_process
    set reply->status_data->subeventstatus[count1]->OperationStatus = sub_status
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_upd_alpha_trans"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = sub_message
END         ; end subroutine LOAD_PROCESS_STATUS


#EXIT_SCRIPT

if (reply->status_data->status = "S")
    set reqinfo->commit_ind = 1
else
    set reqinfo->commit_ind = 0
endif

;call echo(build("status_data->status =", reply->status_data->status))
;for (x = 1 to count1)
;    call echo(reply->status_data->subeventstatus[x]->OperationName)
;    call echo(reply->status_data->subeventstatus[x]->OperationStatus)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectName)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectValue)
;endfor
;
;for (x = 1 to qual_cnt)
;    call echo(build(x, "...", 
;        reply->qual[x]->spread_sheet_row        , "/",
;        reply->qual[x]->alpha_translation_id    ))
;endfor

end go

;Generated by GNU enscript 1.6.4.
