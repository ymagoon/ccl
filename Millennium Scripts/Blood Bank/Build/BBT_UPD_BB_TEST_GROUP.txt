 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_RESULTGROUPTOOL/BBT_UPD_BB_TEST_GROUP.PRG Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1997 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       bbt_upd_bb_test_group.prg
        Object name:            bbt_upd_bb_test_group
        Request #:              225463              

        Product:                PathNet
        Product Team:           BB Transfusion
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Update (add/change) bb_test_group

        Tables read:            bb_test_group

        Tables updated:         bb_test_group

        Executing from:         VB

        Special Notes:          

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/23/97 David Hall           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

Drop program bbt_upd_bb_test_group:dba go
Create program bbt_upd_bb_test_group:dba 

/*
record request
(
 1  bb_test_group_id            = f8
 1  test_group_changed_ind      = i2
 1  test_group_display          =
 1  test_group_description      =
 1  active_ind                  = i2
 1  updt_cnt                    = i4      ;(update only)
 1  cmpntlist[*]
     2  bb_group_component_id   = f8
     2  catalog_cd              = f8 
     2  sequence                = i4
     2  active_ind              = i2
     2  updt_cnt                = i4      ;(update only)
)
*/

record reply
(
 1  bb_test_group_id            = f8
 1  qual[*]
     2  catalog_cd              = f8
     2  bb_group_component_id   = f8
%i cclsource:status_block.inc
)

set reply->status_data->status = "F"
set count1 = 0 
set new_bb_test_group_id = 0.0
set new_bb_group_component_id = 0.0
set qual_cnt = 0
set cmpnt_cnt = 0
set cmpnt = 0
set stat = alterlist(reply->qual, 10)

if (request->bb_test_group_id = 0)
    ; ** Add new supplier to bb_test_group

    ;  * Get next pathnet_seq for bb_test_group_id
    set new_bb_test_group_id = NEXT_PATHNET_SEQ(0)

    if (curqual = 0)
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "F",
             /* process */ "get next pathnet_seq",
             /* message */ build("get next pathnet_seq failed--bb_test_group_id =",request->bb_test_group_id)
            )
        go to EXIT_SCRIPT
    endif

    insert into bb_test_group btg set
        btg.bb_test_group_id            = new_bb_test_group_id
        , btg.test_group_description    = request->test_group_description
        , btg.test_group_display        = request->test_group_display
        , btg.updt_cnt              = 0
        , btg.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
        , btg.updt_id               = reqinfo->updt_id
        , btg.updt_task             = reqinfo->updt_task
        , btg.updt_applctx          = reqinfo->updt_applctx
        , btg.active_ind            = 1
        , btg.active_status_cd      = reqdata->active_status_cd
        , btg.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
        , btg.active_status_prsnl_id = reqinfo->updt_id

    with nocounter

    if (curqual = 0)
        call LOAD_PROCESS_STATUS
            (
             /* status  */ "F",
             /* process */ "insert into bb_test_group",
             /* message */ build("insert into bb_test_group failed--bb_test_group_id =",request->bb_test_group_id)
            )
        go to EXIT_SCRIPT
    endif

    call PROCESS_BB_GROUP_COMPONENT(new_bb_test_group_id)

    ; ** Return new_bb_test_group_id to VB
    set reply->bb_test_group_id      = new_bb_test_group_id

else   ;not a new group
    if (request->test_group_changed_ind = 1)
        ; ** Update existing supplier
        select into "nl:"
           btg.bb_test_group_id

        from
            bb_test_group btg

        where
            btg.bb_test_group_id    = request->bb_test_group_id
            and btg.updt_cnt        = request->updt_cnt

        with    nocounter, forupdate(btg)

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "lock bb_test_group forupdate",
                 /* message */ build("lock bb_test_group forupdate failed--bb_test_group_id =",request->bb_test_group_id)
                )
            go to EXIT_SCRIPT
        endif

        update into bb_test_group btg set
             btg.test_group_description         = request->test_group_description
            , btg.updt_cnt                      = btg.updt_cnt + 1
            , btg.updt_dt_tm                    = cnvtdatetime(curdate, curtime3)
            , btg.updt_id                       = reqinfo->updt_id
            , btg.updt_task                     = reqinfo->updt_task
            , btg.updt_applctx                  = reqinfo->updt_applctx
            , btg.active_ind                    = request->active_ind
            , btg.active_status_cd
                = if (request->active_ind = 1)
                    reqdata->active_status_cd
                  else
                    reqdata->inactive_status_cd
                  endif
            , btg.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
            , btg.active_status_prsnl_id = reqinfo->updt_id

        where   btg.bb_test_group_id  = request->bb_test_group_id

        with    nocounter

        if (curqual = 0)
            call LOAD_PROCESS_STATUS
                (
                 /* status  */ "F",
                 /* process */ "update into bb_test_group",
                 /* message */ build("update into bb_test_group failed--bb_test_group_id ="
                                    ,request->bb_test_group_id)
                )
            go to EXIT_SCRIPT
        endif
    endif       ; endif request->test_group_chaned_ind


    call PROCESS_BB_GROUP_COMPONENT(request->bb_test_group_id)
endif

call LOAD_PROCESS_STATUS
    (
     /* status  */ "S",
     /* process */ "SUCCESS",
     /* message */ "All records added/updated successfully"
    )
        
go to EXIT_SCRIPT


subroutine PROCESS_BB_GROUP_COMPONENT(sub_bb_test_group_id)

    set stat = alterlist(reply->qual, 10)

    set cmpnt_cnt = size(request->cmpntlist, 5)

    for (cmpnt = 1 to cmpnt_cnt)
        if (request->cmpntlist[cmpnt]->bb_group_component_id = 0)
            ; ** Add new supplier to bb_group_component

            ;  * Get next pathnet_seq for bb_group_component_id
            set new_bb_group_component_id = NEXT_PATHNET_SEQ(0)

            if (curqual = 0)
                call LOAD_PROCESS_STATUS
                    (
                /* status  */ "F",
                /* process */ "get next pathnet_seq",
                /* message */ build("get next pathnet_seq failed--bb_test_group_id =",request->cmpntlist[cmpnt]->bb_test_group_id)
                    )
                go to EXIT_SCRIPT
            endif

            insert into bb_group_component bgc set
                bgc.bb_group_component_id   = new_bb_group_component_id
                , bgc.bb_test_group_id      = sub_bb_test_group_id
                , bgc.catalog_cd            = request->cmpntlist[cmpnt]->catalog_cd
                , bgc.sequence              = request->cmpntlist[cmpnt]->sequence
                , bgc.updt_cnt              = 0
                , bgc.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
                , bgc.updt_id               = reqinfo->updt_id
                , bgc.updt_task             = reqinfo->updt_task
                , bgc.updt_applctx          = reqinfo->updt_applctx
                , bgc.active_ind            = 1
                , bgc.active_status_cd      = reqdata->active_status_cd
                , bgc.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
                , bgc.active_status_prsnl_id = reqinfo->updt_id

            with nocounter

            if (curqual = 0)
                call LOAD_PROCESS_STATUS
                    (
                     /* status  */ "F",
                     /* process */ "insert into bb_group_component",
                     /* message */ build("insert into bb_group_component failed--bb_test_group_id ="
                                            ,request->cmpntlist[cmpnt]->bb_test_group_id)
                    )
                go to EXIT_SCRIPT
            endif

            ; ** Return new_bb_group_component_id to VB
            set qual_cnt = qual_cnt + 1
            if (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
                set stat = alterlist(reply->qual, qual_cnt + 9)
            endif
            set reply->qual[qual_cnt]->catalog_cd               = request->cmpntlist[cmpnt]->catalog_cd
            set reply->qual[qual_cnt]->bb_group_component_id    = new_bb_group_component_id    

        else
            ; ** Update existing supplier
            select into "nl:"
               bgc.bb_group_component_id

            from
                bb_group_component bgc

            where
                bgc.bb_group_component_id   = request->cmpntlist[cmpnt]->bb_group_component_id
                  and bgc.updt_cnt          = request->cmpntlist[cmpnt]->updt_cnt

            with    nocounter, forupdate(bgc)

            if (curqual = 0)
                call LOAD_PROCESS_STATUS
                    (
                     /* status  */ "F",
                     /* process */ "lock bb_group_component forupdate",
                     /* message */ build("lock bb_group_component forupdate failed--bb_test_group_id ="
                                        ,request->cmpntlist[cmpnt]->bb_test_group_id)
                    )
                go to EXIT_SCRIPT
            endif

            update into bb_group_component bgc set
                bgc.sequence                = request->cmpntlist[cmpnt]->sequence
                , bgc.updt_cnt              = bgc.updt_cnt + 1
                , bgc.updt_dt_tm            = cnvtdatetime(curdate, curtime3)
                , bgc.updt_id               = reqinfo->updt_id
                , bgc.updt_task             = reqinfo->updt_task
                , bgc.updt_applctx          = reqinfo->updt_applctx
                , bgc.active_ind            = request->cmpntlist[cmpnt]->active_ind
                , bgc.active_status_cd
                    = if (request->cmpntlist[cmpnt]->active_ind = 1)
                        reqdata->active_status_cd
                      else
                        reqdata->inactive_status_cd
                      endif
                , bgc.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)
                , bgc.active_status_prsnl_id = reqinfo->updt_id

            where   bgc.bb_group_component_id  = request->cmpntlist[cmpnt]->bb_group_component_id
        
            with    nocounter

            if (curqual = 0)
                call LOAD_PROCESS_STATUS
                    (
                     /* status  */ "F",
                     /* process */ "update into bb_group_component",
                     /* message */ build("update into bb_group_component failed--bb_test_group_id ="
                                        ,request->cmpntlist[cmpnt]->bb_test_group_id)
                    )
                go to EXIT_SCRIPT
            endif
        endif
    endfor  
        
    ; ** Resize qual to actual number returned
    set stat = alterlist(reply->qual, qual_cnt)

END         ; END subroutine PROCESS_BB_GROUP_COMPONENT


; ** Get next Pathnet_Seq
%i cclsource:bbt_get_pathnet_seq_sub.inc

subroutine LOAD_PROCESS_STATUS
    (
     sub_status,
     sub_process,
     sub_message
    )

    set reply->status_data->status = sub_status
    set count1 = count1 + 1
    if (count1 > 1)
        set stat = alter(reply->status_data->subeventstatus, count1+1)
    endif
    set reply->status_data->subeventstatus[count1]->OperationName = sub_process
    set reply->status_data->subeventstatus[count1]->OperationStatus = sub_status
    set reply->status_data->subeventstatus[count1]->TargetObjectName = "bbt_upd_bb_test_group"
    set reply->status_data->subeventstatus[count1]->TargetObjectValue = sub_message
END         ; end subroutine LOAD_PROCESS_STATUS


#EXIT_SCRIPT

if (reply->status_data->status = "S")
    set reqinfo->commit_ind = 1
else
    set reqinfo->commit_ind = 0
endif

;call echo(build("status_data->status =", reply->status_data->status))
;for (x = 1 to count1)
;    call echo(reply->status_data->subeventstatus[x]->OperationName)
;    call echo(reply->status_data->subeventstatus[x]->OperationStatus)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectName)
;    call echo(reply->status_data->subeventstatus[x]->TargetObjectValue)
;endfor
;
;for (x = 1 to qual_cnt)
;    call echo(build(x, "...", 
;        reply->qual[x]->bb_test_group_id     , "/",
;        reply->qual[x]->bb_test_group_id      ))
;endfor

end go

;Generated by GNU enscript 1.6.4.
