 ;;Solution_Test/script/Order Management/orm_add_ocentry/orm_add_ocentry.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       ORM_ADD_OCENTRY.PRG
        Object name:            ORM_ADD_OCENTRY
        Request #:              500009

        Product:                DCP
        Product Team:           ORDER MANAGEMENT
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Inserts one orderable into the order catalog,
                                along with one or more synonyms, zero or
                                more security entries, and zero or more
                                cosign/review/validate entries.

        Tables read:            -
        Tables updated:         ORDER_CATALOG
                                ORDER_CATALOG_SYNONYM
                                ORDER_CATALOG_REVIEW
                                DEPT_REVIEW
                                SURGICAL_PROCEDURE

        Executing from:         ORC MAINTENANCE TOOL (APP 500000)

        Special Notes:          -

******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 08/31/95 Mitch Morehouse      Initial Release                     *
;     ### 02/11/96 Joe Geris            Bring program up to date            *
;     ### 04/25/96 Joe Geris            Add iv_ingredient_ind               *
;     ### 05/14/96 Joe Geris            Add surgical procedure information  *
;     ### 06/03/96 Joe Geris            Add surg_specialty_id               *
;     ### 08/30/96 Matt Huffman         Create corresponding codevalue entry*
;     ### 09/05/96 Joe Geris            Add activity_subtype_cd             *
;     ### 09/09/96 Sandra Stockdale     Add orderable_type_flag             *
;     ### 09/16/96 Joe Geris            Change certain _cd's to _id's       *
;     ### 09/25/96 Joe Geris            Add dup checking fields             *
;     ### 10/21/96 Joe Geris            Misc Data Team changes              *
;     ### 12/19/96 Joe Geris            Add consent forms                   *
;     ### 01/12/97 Joe Geris            Add medication                      *
;     ### 05/02/97 Joe Geris            Fill out department display name    *
;     ### 05/04/97 Joe Geris            Fill out cont_order_method_flag     *
;     ### 05/19/97 Joe Geris            Add Hide Flag                       *
;     ### 10/14/97 Shawn Purcell        Add Modifiable_flag to oc table     *
;     ### 10/17/97 Shawn Purcell        Add rx_mask to ocs table            *
;     ### 12/11/97 Shawn Purcell        Add dcp_clin_cat_cd                 *
;     ### 03/20/98 Shawn Purcell        prep_info_flag only set in ref text *
;     ### 04/07/98 Shawn Purcell        Add setup_time & cleanup_time       *
;     ### 06/26/98 Shawn Purcell        Add Cki & ref_text_mask             *
;     ### 08/24/98 Shawn PUrcell 7.7    Add stop_type_cd, stop_duration,    *
;                                       stop_duration_unit_cd               *
;     ### 02/08/99 Shawn Purcell        add cki to code_value               *
;     ### 04/06/99 Shawn Purcell 7.9    add outpatient to dup_checking      *
;     ### 04/08/99 Shawn Purcell 7.9    add form_level, form_id             *
;     ### 05/05/99 Shawn Purcell        update ord_comm_template_long_text  *
;     ### 05/20/99 Shawn Purcell        add disable_order_comment_ind       *
;     ### 06/01/99 Shawn Purcell        add virtual_view to OCS             *
;     029 01/20/01 Brent Petr	        add health_plan_view to OCS         *
;     030 10/30/01 Shawn Purcell        add oe_format_id at syn level       *
;     031 03/03/03 Brent Petr           Add volume and volume_unit_cd       *
;                                       strength strength_unit_cd           *
;     032 04/19/03 Brent Petr           Add ic_auto_verify_flag and         *
;                                       discern_auto_verify_flag i2         *
;     033 10/27/03 Talib Sharif ts9378  Added support for                   *
;                                       Ingredient_rate_conversion_ind field*
;                                       in ORDER_CATALOG_SYNONYM table      *
;     034 11/07/03 TH5562               Add witness_flag                    *
;     035 12/22/03 Jonathan Fewins      Add dept_disp_name                  *
;     036 03/01/04 Talib Sharif ts9378  Added Support for multifacility     *
;     037 04/22/04 Randy Rogers         Fix constraint violation error      *
;     038 11/19/04 Mark Gromowsky       Refresh Cache                       *
;     039 03/09/05 dh011019             Fix to allow large sequence numbers *
;     040 07/21/05 er6124               Radiology Vetting                   *
;     041 10/13/05 Mike Albair          Added vetting validation and uar    *
;                                       checks                              *
;     042 11/02/05 ma013004             Cardiovascular dept disp name       *
;     043 11/15/06 sw015124             High Alert Orderables               *
;     044 05/13/09 sk010962             Complex Meds - add intermittent_ind *
;     045 08/03/09 GA016556             Update the script to be able to add *
;                                       the new display_additives_first_ind *
;                                       for new order catalog item.         *
;     046 04/21/10 SG016492             update the script to be able to add *
;                                       the new rounding_rule_cd for the new*
;                                       order catalog item.                 *
;     047 06/03/10 KK014173             Add validation to rounding_rule_cd  *
;                                       for the request field since this    *
;                                       script is called by another script  *
;                                       for passivity. See comment below.   *
;     048 01/20/12 nh020167             Add ign_hide_flag field             *
;     049 10/17/12 RF012556             Added lock_target_dose_ind          *
;     050 11/29/13 NC028538	        Added fields max_final_dose,        *
;                                       max_final_dose_unit_cd and          *
;                                       max_dose_calc_bsa_value.            *
;     051 01/03/14 KS2604               Added preferred_dose_flag           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program orm_add_ocentry:dba go
create program orm_add_ocentry:dba

/*
record request
( 1 modifiable_flag = i2
  1 dcp_clin_cat_cd = f8
  1 consent_form_ind = i2
  1 active_ind = i2
  1 catalog_type_cd = f8
  1 activity_type_cd = f8
  1 setup_time  		= i4    ;04/07/98
  1 cleanup_time		= i4    ;04/07/98
  1 ref_text_mask = i4
  1 activity_subtype_cd = f8
  1 requisition_format_cd = f8
  1 requisition_routing_cd = f8
  1 inst_restriction_ind = i2
  1 schedule_ind = i2
  1 description = vc                      ;max length of 100
  1 iv_ingredient_ind = i2
  1 print_req_ind = i2
  1 oe_format_id = f8
  1 orderable_type_flag = i2
  1 complete_upon_order_ind = i2
  1 quick_chart_ind = i2
  1 comment_template_flag = i2
  1 prep_info_flag = i2
  1 dup_checking_ind = i2
  1 order_review_ind = i2 2 volume             ;031
  1 bill_only_ind = i2
  1 cont_order_method_flag = i2
  1 consent_form_format_cd = f8
  1 consent_form_routing_cd = f8
  1 dc_display_days = i4
  1 dc_interaction_days = i4
  1 mdx_gcr_id = f8
  1 orc_text = vc
  1 cki = vc
  1 ic_auto_verify_flag = i2
  1 discern_auto_verify_flag i2
  1 stop_type_cd = f8
  1 stop_duration = i4
  1 stop_duration_unit_cd = f8
  1 vetting_approval_flag = i2           ;040
  1 disable_order_comment_ind = i2
  1 mnemonic_cnt = i4
  1 qual_mnemonic[*]
    2 rx_mask = i4
    2 cki     = vc
    2 mnemonic = vc                       ;max length of 100
    2 mnemonic_type_cd = i8
    2 order_sentence_id = f8
    2 active_ind = i2
    2 ing_rate_conversion_ind = i2        ; #033
    2 orderable_type_flag = i2
    2 hide_flag = i2
    2 ref_text_mask = i4
    2 virtual_view = vc
    2 health_plan_view = vc    ;max length of 255      #029
    2 oe_format_id = f8  ;030
    2 concentration_strength             ;031
    2 concentration_strength_unit_cd	 ;031
    2 concentration_volume               ;031
    2 concentration_volume_unit_cd       ;031
    2 witness_flag = i2                  ;034
    2 qual_facility[*]
      3 facility_cd = f8
    2 high_alert_ind = i2         ;043
    2 high_alert_long_text = vc   ;043
    2 high_alert_notify_ind = i2  ;043
    2 intermittent_ind = i2
    2 display_additives_first_ind = i2
    2 rounding_rule_cd = f8       ;046
    2 ign_hide_flag = i4
    2 lock_target_dose_ind = i2   ;049
    2 max_final_dose = f8            ;50
    2 max_final_dose_unit_cd = f8    ;50
    2 max_dose_calc_bsa_value = f8   ;50
    2 preferred_dose_flag = i2	  ;051
  1 review_cnt = i4
  1 qual_review[*]
    2 action_type_cd = f8
    2 nurse_review_flag = i2
    2 doctor_cosign_flag = i2
    2 rx_verify_flag = i2
  1 surgical_proc_ind = i2
  1 def_proc_dur = i4
  1 def_wound_class_cd = f8
  1 def_case_level_cd = f8
  1 spec_req_ind = i2
  1 frozen_section_req_ind = i2
  1 def_anesth_type_cd = f8
  1 surg_specialty_id = f8
  1 dup_cnt = i4
  1 Auto_Cancel_ind = i2
  1 form_id = f8
  1 form_level = i4
  1 qual_dup[*]
    2 dup_check_seq = i4
    2 exact_hit_action_cd = f8
    2 min_behind = i4
    2 min_behind_action_cd = f8
    2 min_ahead = i4
    2 min_ahead_action_cd = f8
    2 active_ind = i2
    2 outpat_exact_hit_action_cd = f8
    2 outpat_min_behind = i4
    2 outpat_min_behind_action_cd = f8
    2 outpat_min_ahead = i4
    2 outpat_min_ahead_action_cd = f8
    2 outpat_flex_ind = i2
  1 dept_disp_name = vc ;035
)
*/

/*** READ: This script is called by another script.
     When adding a new field in the request,
     make sure to use validate() to validate the
     field in the request to see if that field is
     valid before accessing it. The caller does
     not know of the change and this script needs
     to be passive.
 
     Notify the team that calls this script so
     that they can plan to add this new field
     into their script in the future version. ***/            ; 047
     
record reply
( 1 ocKey = f8
  1 status_data
    2 status = c1
    2 subeventstatus[1]
      3 OperationName = c15
      3 OperationStatus = c1
      3 TargetObjectName = c15
      3 TargetObjectValue = vc
)

set nCnt = 0
;039 set fdCatCd = 0
;039 set fdSynCd = 0

set reply->status_data->status = "F"
set cFailed = "F"
set code_set        = 0.0
set code_value      = 0.0
set cdf_meaning     = fillstring(12," ")

declare nbr_facility_cds = i4 with NoConstant(0),Protect
;declare last_mod	= c3	with private, noconstant(fillstring(3, " "))	;039
;declare mod_date	= c30	with private, noconstant(fillstring(30, " "))	;039
declare fdCatCd		= f8	with protect, noconstant(0.0) ;039
declare fdSynCd		= f8	with protect, noconstant(0.0) ;039
declare longTextId	= f8	with protect, noconstant(0.0) ;043
 
/************************************/
/*       Look up code values        */
/************************************/
set code_set = 6009
set cdf_meaning = "ORD COM TEMP"
execute cpm_get_cd_for_cdf
set text_type_cd = code_value

set code_set = 8
set cdf_meaning = "AUTH"
execute cpm_get_cd_for_cdf
set reqdata->data_status_cd = code_value

;035
set gen_lab_cd    = uar_get_code_by("MEANING",6000,"GENERAL LAB")
set radiology_cd  = uar_get_code_by("MEANING",6000,"RADIOLOGY")
set cardiovas_cd  = uar_get_code_by("MEANING",6000,"CARDIOVASCUL") ;042

;041 start
if(gen_lab_cd <= 0) 
	select into "nl:"
		from code_value cv
		where cv.code_set = 6000 and cv.cdf_meaning = "GENERAL LAB" and cv.active_ind = 1
		detail gen_lab_cd = cv.code_value
	with nocounter
endif

if(radiology_cd <= 0) 
	select into "nl:"
		from code_value cv
		where cv.code_set = 6000 and cv.cdf_meaning = "RADIOLOGY" and cv.active_ind = 1
		detail radiology_cd = cv.code_value
	with nocounter
endif;041 end
;042
if(cardiovas_cd <= 0) 
	select into "nl:"
		from code_value cv
		where cv.code_set = 6000 and cv.cdf_meaning = "CARDIOVASCUL" and cv.active_ind = 1
		detail cardiovas_cd = cv.code_value
	with nocounter
endif

declare dept_disp_name = vc with public, noconstant(" ")

;035 Validate that the department display column is in the request
if (validate(request->dept_disp_name, "") > " ")
    set dept_disp_name = request->dept_disp_name
endif   

;041 validate vetting approval flag is in req
declare vetting_approval_flag = i4 with public, noconstant(0)
if (validate(request->vetting_approval_flag,0) > 0)
	set vetting_approval_flag = request->vetting_approval_flag
endif

/***** Get unique sequence numbers to identify new records *****/
select into "nl:"
  y = seq(reference_seq,nextval) ;039 "##################;rp0"
  from dual
  detail
  fdCatCd = y ;039 cnvtint(y)
with nocounter ;039 format, nocounter
if (curqual = 0)
  go to seq_failed
endif

/***** Add entry to the order_catalog table. *****/
insert into order_catalog oc set
  oc.discern_auto_verify_flag = request->discern_auto_verify_flag,
  oc.ic_auto_verify_flag = request->ic_auto_verify_flag,
  oc.modifiable_flag = request->modifiable_flag,
  oc.dcp_clin_cat_cd = request->dcp_clin_cat_cd,
  oc.catalog_cd = fdCatCd,
  oc.consent_form_ind = request->consent_form_ind,
  oc.active_ind = request->active_ind,
  oc.catalog_type_cd = request->catalog_type_cd,
  oc.activity_type_cd = request->activity_type_cd,
  oc.activity_subtype_cd = request->activity_subtype_cd,
  oc.requisition_format_cd = request->requisition_format_cd,
  oc.requisition_routing_cd = request->requisition_routing_cd,
  oc.consent_form_format_cd = request->consent_form_format_cd,
  oc.consent_form_routing_cd = request->consent_form_routing_cd,
  oc.inst_restriction_ind = request->inst_restriction_ind,
  oc.schedule_ind = request->schedule_ind,
  oc.description = request->description,
  oc.print_req_ind = request->print_req_ind,
  oc.order_review_ind = request->order_review_ind,
  oc.oe_format_id = request->oe_format_id,
  oc.orderable_type_flag = request->orderable_type_flag,
  oc.complete_upon_order_ind = request->complete_upon_order_ind,
  oc.cont_order_method_flag = request->cont_order_method_flag,
  oc.quick_chart_ind = request->quick_chart_ind,
  oc.comment_template_flag = request->comment_template_flag,
;  oc.prep_info_flag = request->prep_info_flag,
  oc.dup_checking_ind = request->dup_checking_ind,
  oc.bill_only_ind = request->bill_only_ind,
  oc.order_review_ind = request->order_review_ind,
  oc.cki = request->cki,
  oc.stop_type_cd = request->stop_type_cd,
  oc.stop_duration = request->stop_duration,
  oc.stop_duration_unit_cd = request->stop_duration_unit_cd,
  oc.vetting_approval_flag = vetting_approval_flag,  ;041
  oc.primary_mnemonic = request->qual_mnemonic[1]->mnemonic,
  oc.dept_display_name = if (request->catalog_type_cd = gen_lab_cd or 
                             request->catalog_type_cd = radiology_cd or
                             request->catalog_type_cd = cardiovas_cd) ;042
                             dept_disp_name
                         else
                             request->qual_mnemonic[1]->mnemonic
                         endif, ;035
  oc.ref_text_mask = request->ref_text_mask,
  oc.Auto_Cancel_ind = request->Auto_Cancel_ind,
  oc.form_level = request->form_level,
  oc.form_id = request->form_id,
  oc.disable_order_comment_ind = request->disable_order_comment_ind,
  oc.dc_display_days = request->dc_display_days,
  oc.dc_interaction_days = request->dc_interaction_days,
  oc.updt_dt_tm = cnvtdatetime(curdate,curtime3),
  oc.updt_id = reqinfo->updt_id,
  oc.updt_task = reqinfo->updt_task,
  oc.updt_applctx = reqinfo->updt_applctx,
  oc.updt_cnt = 0
with nocounter
if (curqual = 0)
  go to oc_failed
endif

/***** Add corresponding entry to the codevalue table *****/

set atc = 0

select into "nl:"
  from code_value m
  where m.code_set = 48 and m.cdf_meaning = "ACTIVE" and m.active_ind = 1
  detail atc = m.code_value
with nocounter

insert into code_value cv set
  cv.code_value = fdCatCd,
  cv.code_set = 200,
  cv.display = substring(1,40,request->qual_mnemonic[1]->mnemonic),
  cv.display_key = substring(1,40,cnvtupper(cnvtalphanum(request->qual_mnemonic[1]->mnemonic))),
  cv.description = substring(1,60,request->description),
  cv.active_ind = request->active_ind,
  cv.begin_effective_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.active_type_cd = atc,
  cv.cki = if (request->cki = null or request->cki = " ")  	;mod037 begin
           	  null
           else
              request->cki
           endif,         									; mod037 end

  cv.active_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.updt_dt_tm = cnvtdatetime(curdate,curtime3),
  cv.updt_id = reqinfo->updt_id,
  cv.updt_task = reqinfo->updt_task,
  cv.data_status_cd = reqdata->data_status_cd,
  cv.updt_applctx = reqinfo->updt_applctx,
  cv.updt_cnt = 0

with nocounter
if (curqual = 0)
  go to cv_failed
endif

/* Start - 035 */
; If the catalog type is either General Lab, Radiology or Cardiovascular, then add dept_disp_name to
; the SERVICE_DIRECTORY table if it is populated in the request
if ((request->catalog_type_cd = gen_lab_cd or request->catalog_type_cd = radiology_cd or request->catalog_type_cd = cardiovas_cd) 
		and dept_disp_name > " ") ;042
    
    free record orc_request
    record orc_request 
    (
      1 catalog_cd          = f8   
      1 synonym_id          = f8   
      1 active_ind          = i2   
      1 end_effective_dt_tm = dq8   
      1 short_description   = vc  
    ) 
    
    set orc_request->catalog_cd        = fdCatCd
    set orc_request->active_ind        = 1
    set orc_request->short_description = dept_disp_name
    
    set trace recpersist
    
    ; Execute the child script ORC_ADD_SERVICE_DIRECTORY to add department display name
    execute orc_add_service_directory with replace(request, orc_request), 
        replace(reply, orc_reply)
    
    if (orc_reply->status_data->status = "F")
        go to ddn_failed
    endif        
        
    set trace norecpersist        
    
endif    
/* End - 035 */

/***** Add multiple entries to order_catalog_synonyms table. *****/
for (x = 1 to request->mnemonic_cnt)
   select into "nl:"
      y = seq(reference_seq,nextval) ;039 "##################;rp0"
      from dual
      detail
      fdSynCd = y ;039 cnvtint(y)
   with nocounter ;039 format, nocounter
   if (curqual = 0)
      go to seq_failed
   endif
 
   if (textlen(request->qual_mnemonic[x]->high_alert_long_text) != 0) ;043 start
      select into "nl:"
         y = seq(long_data_seq,nextval)
      from dual
      detail
        longTextId = y
      with nocounter
 
      if (curqual = 0)
         go to seq_failed
      endif
 
      insert into long_text l set
         l.long_text = request->qual_mnemonic[x]->high_alert_long_text,
         l.long_text_id = longTextId,
         l.active_status_cd = atc,
         l.active_ind = 1,
         l.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
         l.updt_dt_tm = cnvtdatetime(curdate,curtime3),
         l.updt_id = reqinfo->updt_id,
         l.updt_task = reqinfo->updt_task,
         l.updt_applctx = reqinfo->updt_applctx,
         l.updt_cnt = 0
      with nocounter
 
      if(curqual = 0)
         go to l_failed
      endif
   else
      set longTextId = 0.0
   endif                                                              ;043 end
 
   insert into order_catalog_synonym ocs set
      ocs.rx_mask = request->qual_mnemonic[x]->rx_mask,
      ocs.dcp_clin_cat_cd = request->dcp_clin_cat_cd,
      ocs.synonym_id = fdSynCd,
      ocs.catalog_cd = fdCatCd,
      ocs.order_sentence_id = request->qual_mnemonic[x]->order_sentence_id ,
      ocs.catalog_type_cd = request->catalog_type_cd,
      ocs.activity_type_cd = request->activity_type_cd,
      ocs.activity_subtype_cd = request->activity_subtype_cd,
      ocs.oe_format_id = request->qual_mnemonic[x]->oe_format_id, ;030
      ocs.mnemonic = request->qual_mnemonic[x]->mnemonic,
      ocs.mnemonic_key_cap = trim(cnvtupper(request->qual_mnemonic[x]->mnemonic)),
      ocs.mnemonic_type_cd = request->qual_mnemonic[x]->mnemonic_type_cd,
      ocs.active_ind = request->qual_mnemonic[x]->active_ind,
      ocs.ingredient_rate_conversion_ind = request->qual_mnemonic[x]->ing_rate_conversion_ind, ;#033
      ocs.witness_flag = request->qual_mnemonic[x]->witness_flag, ;034
      ocs.orderable_type_flag = request->orderable_type_flag,
      ocs.hide_flag = request->qual_mnemonic[x]->hide_flag,
      ocs.cki = request->qual_mnemonic[x]->cki,
      ocs.ref_text_mask = request->qual_mnemonic[x]->ref_text_mask,
      ocs.virtual_view = request->qual_mnemonic[x]->virtual_view,
      ocs.health_plan_view = request->qual_mnemonic[x]->health_plan_view,     ;029
      ocs.concentration_volume = request->qual_mnemonic[x]->concentration_volume,                         ;031
      ocs.concentration_volume_unit_cd = request->qual_mnemonic[x]->concentration_volume_unit_cd,         ;031
      ocs.concentration_strength = request->qual_mnemonic[x]->concentration_strength,                     ;031
      ocs.concentration_strength_unit_cd = request->qual_mnemonic[x]->concentration_strength_unit_cd,     ;031
      ocs.active_status_cd    = reqdata->active_status_cd,
      ocs.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
      ocs.active_status_prsnl_id = reqinfo->updt_id,
      ocs.updt_dt_tm = cnvtdatetime(curdate,curtime3),
      ocs.updt_id = reqinfo->updt_id,
      ocs.updt_task = reqinfo->updt_task,
      ocs.updt_applctx = reqinfo->updt_applctx,
      ocs.updt_cnt = 0,
      ocs.high_alert_ind = request->qual_mnemonic[x]->high_alert_ind,                           ;043
      ocs.high_alert_required_ntfy_ind = request->qual_mnemonic[x]->high_alert_notify_ind,      ;043
      ocs.intermittent_ind = request->qual_mnemonic[x]->intermittent_ind,
      ocs.high_alert_long_text_id = longTextId,                                                 ;043
      ocs.display_additives_first_ind = request->qual_mnemonic[x]->display_additives_first_ind, ;045
      ocs.rounding_rule_cd = validate(request->qual_mnemonic[x]->rounding_rule_cd, 0.0),        ;047
      ocs.ignore_hide_convert_ind = validate(request->qual_mnemonic[x]->ign_hide_flag, 0.0),    ;048
      ocs.lock_target_dose_ind = validate(request->qual_mnemonic[x]->lock_target_dose_ind, 0),  ;049
      ocs.max_final_dose = validate(request->qual_mnemonic[x]->max_final_dose, 0.0),                    ;050
      ocs.max_final_dose_unit_cd = validate(request->qual_mnemonic[x]->max_final_dose_unit_cd, 0.0),    ;050
      ocs.max_dose_calc_bsa_value = validate(request->qual_mnemonic[x]->max_dose_calc_bsa_value, 0.0),   ;050
      ocs.preferred_dose_flag = validate(request->qual_mnemonic[x]->preferred_dose_flag, 0)     ;051
 
   with nocounter
   if (curqual = 0)
      go to ocs_failed
   endif

   set nbr_facility_cds = size(request->qual_mnemonic[x]->qual_facility, 5)
   if (nbr_facility_cds > 0)
	   insert into ocs_facility_r ocsfr,
   			(dummyt d with seq = value(nbr_facility_cds))
   	   set  ocsfr.synonym_id = fdSynCd,
	   		ocsfr.facility_cd = request->qual_mnemonic[x]->qual_facility[d.seq]->facility_cd,
   			ocsfr.updt_cnt = 0,
   			ocsfr.updt_dt_tm = cnvtdatetime(curdate,curtime3),
            ocsfr.updt_id = reqinfo->updt_id,
            ocsfr.updt_task = reqinfo->updt_task,
  			ocsfr.updt_applctx = reqinfo->updt_applctx
	   		
	   plan d

	   join ocsfr where ocsfr.synonym_id = fdSynCd
	   with nocounter

       if (curqual = 0)
	   		go to ocsfr_failed
	   endif
    endif


endfor

/***** Add Surgical Procedure Information ********/
if (request->surgical_proc_ind = 1)
  insert into
        surgical_procedure s
  set
	s.catalog_cd = fdcatcd,
	s.setup_time= request->setup_time  ,      ;04/07/98
	s.cleanup_time= request->cleanup_time,    ;04/07/98
  	s.def_proc_dur = request->def_proc_dur,
  	s.def_wound_class_cd = request->def_wound_class_cd,
  	s.def_case_level_cd = request->def_case_level_cd,
  	s.spec_req_ind = request->spec_req_ind,
  	s.frozen_section_req_ind = request->frozen_section_req_ind,
  	s.def_anesth_type_cd = request->def_anesth_type_cd,
        s.surg_specialty_id = request->surg_specialty_id,
        s.updt_dt_tm = cnvtdatetime(curdate, curtime3),
        s.updt_id = reqinfo->updt_id,
        s.updt_cnt = 0,
        s.updt_task = reqinfo->updt_task,
        s.updt_applctx = reqinfo->updt_applctx
  with nocounter

; Determine subevent status failure or success
  if (curqual != 1)
      go to surg_failed
  endif

endif

/***** Add entry to the order_catalog_text table */
if (request->comment_template_flag = 1)
   ;039 set msg_text_id = 0
   declare msg_text_id = f8 with noconstant(0.0) ;039
   select into "nl:"
      nextseqnum = seq(long_data_seq,nextval) ;039 "#################;rp0"
   from dual
   detail
     msg_text_id = nextseqnum ;039 cnvtint(nextseqnum)
   with nocounter ;039 format

   if (msg_text_id = 0.0)
      go to oct_failed
   endif

   insert into long_text lt set
     lt.long_text_id = msg_text_id,
     lt.parent_entity_name = "ORDER_CATALOG_TEXT",
     lt.parent_entity_id = fdcatcd,
     lt.long_text = request->orc_text,
     lt.active_ind = 1,
     lt.active_status_cd = reqdata->active_status_cd,
     lt.active_status_dt_tm = cnvtdatetime(curdate, curtime3),
     lt.active_status_prsnl_id = reqinfo->updt_id,
     lt.updt_dt_tm = cnvtdatetime(curdate, curtime3),
     lt.updt_id = reqinfo->updt_id,
     lt.updt_task = reqinfo->updt_task,
     lt.updt_cnt = 0,
     lt.updt_applctx = reqinfo->updt_applctx
   with nocounter

   if (curqual = 0)
      go to oct_failed
   endif

   insert into order_catalog_text oct set
         oct.catalog_cd = fdCatCd,
         oct.text_type_cd = text_type_cd,
         oct.text_level_flag = 0,
	 oct.long_text_id = msg_text_id,
         oct.updt_dt_tm = cnvtdatetime(curdate,curtime3),
         oct.updt_id = reqinfo->updt_id,
         oct.updt_task = reqinfo->updt_task,
         oct.updt_applctx = reqinfo->updt_applctx,
         oct.updt_cnt = 0
   with nocounter

   if (curqual = 0)
      go to oct_failed
   endif
   update into order_catalog oc set
 	oc.ord_com_template_long_text_id = msg_text_id
   where oc.catalog_cd = fdcatcd
   with nocounter

endif


/***** Add multiple entries to the order_catalog_review and dept_review tables */
if (request->review_cnt > 0)
   for (x = 1 to request->review_cnt)
      insert into order_catalog_review ocr set
         ocr.catalog_cd = fdCatCd,
         ocr.action_type_cd = request->qual_review[x].action_type_cd,
         ocr.nurse_review_flag = request->qual_review[x].nurse_review_flag,
	 ocr.doctor_cosign_flag = request->qual_review[x].doctor_cosign_flag,
	 ocr.rx_verify_flag = request->qual_review[x].rx_verify_flag,
         ocr.updt_dt_tm = cnvtdatetime(curdate,curtime3),
         ocr.updt_id = reqinfo->updt_id,
         ocr.updt_task = reqinfo->updt_task,
         ocr.updt_applctx = reqinfo->updt_applctx,
         ocr.updt_cnt = 0
      with nocounter
      if (curqual = 0)
         go to ocr_failed
      endif

   endfor
endif

if (request->dup_cnt > 0)
   for (x = 1 to request->dup_cnt)
       insert into dup_checking dc set
           dc.catalog_cd = fdcatcd,
           dc.dup_check_seq = request->qual_dup[x].dup_check_seq,
           dc.exact_hit_action_cd = request->qual_dup[x].exact_hit_action_cd,
           dc.min_ahead = request->qual_dup[x].min_ahead,
           dc.min_ahead_action_cd =
                  request->qual_dup[x].min_ahead_action_cd,
           dc.min_behind = request->qual_dup[x].min_behind,
           dc.min_behind_action_cd =
                  request->qual_dup[x].min_behind_action_cd,
           dc.active_ind = request->qual_dup[x].active_ind,
           dc.outpat_exact_hit_action_cd =
		  request->qual_dup[x].outpat_exact_hit_action_cd,
           dc.outpat_min_ahead = request->qual_dup[x].outpat_min_ahead,
           dc.outpat_min_ahead_action_cd =
                  request->qual_dup[x].outpat_min_ahead_action_cd,
           dc.outpat_min_behind = request->qual_dup[x].outpat_min_behind,
           dc.outpat_min_behind_action_cd =
                  request->qual_dup[x].outpat_min_behind_action_cd,
           dc.outpat_flex_ind = request->qual_dup[x].outpat_flex_ind,
           dc.updt_dt_tm = cnvtdatetime(curdate,curtime3),
           dc.updt_id = reqinfo->updt_id,
           dc.updt_task = reqinfo->updt_task,
           dc.updt_applctx = reqinfo->updt_applctx,
           dc.updt_cnt = 0
       with nocounter
       if (curqual = 0)
          go to dup_failed
       endif
    endfor
endif

/***** Add entry to the medication table*/
/*
if (request->mdx_gcr_id > 0 )
      insert into medication m set
         m.catalog_cd = fdcatcd,
         m.valid_iv_additive_ind = request->iv_ingredient_ind,
         m.dc_display_days = request->dc_display_days,
         m.dc_interaction_days = request->dc_interaction_days,
         m.mdx_gcr_nomen_id = request->mdx_gcr_id,
         m.active_ind = request->active_ind,
         m.updt_dt_tm = cnvtdatetime(curdate,curtime),
         m.updt_id = reqinfo->updt_id,
         m.updt_task = reqinfo->updt_task,
         m.updt_applctx = reqinfo->updt_applctx,
         m.updt_cnt = 0
      with nocounter
      if (curqual = 0)
          go to medication_failed
      endif

endif
*/
go to exit_script
 
#l_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "long_text"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script
 
#seq_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "nextval"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "ref_seq"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "ORM_ADD_OCENTRY"
  set cFailed = "T"
go to exit_script

#oc_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "order_catalog"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "ORM_ADD_OCENTRY"
  set cFailed = "T"
go to exit_script
/*
#medication_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "medication"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script
*/

#cv_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "code_value"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "ORM_ADD_OCENTRY"
  set cFailed = "T"
go to exit_script

#ocs_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "orc_synonyms"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

#ocsfr_failed
  set reply->status_data->subeventstatus[1]->operationname = "insert"
  set reply->status_data->subeventstatus[1]->operationstatus = "F"
  set reply->status_data->subeventstatus[1]->targetobjectname = "ocs_facility_r"
  set reply->status_data->subeventstatus[1]->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

#dup_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "dup_checking"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

#ocr_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "orc_review"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

#surg_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "surgical_procedure"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script


#oct_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "order_catalog_text"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

;035 Error message for child script orc_add_service_directory
#ddn_failed
  set reply->status_data->subeventstatus[1]
              ->operationname = "insert"
  set reply->status_data->subeventstatus[1]
              ->operationstatus = "F"
  set reply->status_data->subeventstatus[1]
       ->targetobjectname = "dept_disp_name"
  set reply->status_data->subeventstatus[1]
     ->targetobjectvalue = "orm_add_ocentry"
  set cFailed = "T"
go to exit_script

#exit_script
if (cFailed = "T")
  rollback
  set reqinfo->commit_ind = 0
  set reply->ocKey = 0
else
  set reqinfo->commit_ind = 1
  set reply->status_data->status = "S"
  set reply->ocKey = fdCatCd
endif

/****************************************************************************
* Start 038 - Refresh the Cache                                             *
*****************************************************************************/

	declare app = i4 with constant(600005),private
	declare GetOrcTask = i4 with constant(500196),private
	declare OrdSearchTask = i4 with constant(500197),private
	declare OrmGetOrcReq = i4 with constant(500080),private
	declare OrmGetOrdSearchReq = i4 with constant(500563),private
	declare hApp = i4 with noconstant(0),private
	declare hTask = i4 with noconstant(0),private
	declare hStep = i4 with noconstant(0),private
	declare hReq = i4 with noconstant(0),private
	declare crmStatus = i4 with noconstant(0),private
	declare sts = i4 with noconstant(0),private
 
 	declare hReqString = vc
 
	;; begin app
	set crmStatus = uar_CrmBeginApp( app , hApp )
 
	if ( crmStatus )
		call echo(build("Error on BeginApp:", app, " Error Code:",crmStatus))
	else
 
		;; begin task
		set crmStatus = uar_CrmBeginTask( hApp , GetOrcTask , hTask )
	 
		if ( crmStatus )
			call uar_CrmEndApp( hApp )
			call echo(build("Error on BeginTask:", GetOrcTask, " Error Code:",crmStatus))
		else
			;; begin Orm Get Orc step
			set hReqString = "orm_get_orc"
			set crmStatus = uar_CrmBeginReq( hTask , hReqString , OrmGetOrcReq , hStep )
		 	
			if ( crmStatus )
				call uar_CrmEndTask( hTask )
				call uar_CrmEndApp( hApp )
				call echo(build("Error on BeginReq:", OrmGetOrcReq, " Error Code:",crmStatus))
			else
		 
				;; fill out request
				set hReq = uar_CrmGetRequest( hStep )
			 
				set sts = uar_CrmSetProperty(hReq, "Cpm.RefreshRequest", "1")
			 
				;; perform step
				set crmStatus = uar_CrmPerform( hStep )
			 
				if ( crmStatus )
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
					call echo(build("Error on CrmPerform:", OrmGetOrcReq, " Error Code:",crmStatus))
				else
					;; clean up
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
				endif
			endif
		endif
	endif

	set hApp = 0
	set hTask = 0
	set hReq = 0
	set hStep = 0
	;; begin app
	set crmStatus = uar_CrmBeginApp( app , hApp )
 
	if ( crmStatus )
		call echo(build("Error on BeginApp:", app, " Error Code:",crmStatus))
	else
		;; begin task
		set crmStatus = uar_CrmBeginTask( hApp , OrdSearchTask , hTask )
	 
		if ( crmStatus )
			call uar_CrmEndApp( hApp )
			call echo(build("Error on BeginTask:", OrdSearchTask, " Error Code:",crmStatus))
		else	
			;; begin Orm Get Ord Search step
			set hReqString = "orm_get_ord_search"
			set crmStatus = uar_CrmBeginReq( hTask , hReqString , OrmGetOrdSearchReq , hStep )
		 	
			if ( crmStatus )
				call uar_CrmEndTask( hTask )
				call uar_CrmEndApp( hApp )
				call echo(build("Error on BeginReq:", OrmGetOrdSearchReq, " Error Code:",crmStatus))
			else
		 
				;; fill out request
				set hReq = uar_CrmGetRequest( hStep )
			 
				set sts = uar_CrmSetProperty(hReq, "Cpm.RefreshRequest", "1")
			 
				;; perform step
				set crmStatus = uar_CrmPerform( hStep )
			 
				if ( crmStatus )
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
					call echo(build("Error on CrmPerform:", OrmGetOrdSearchReq, " Error Code:",crmStatus))
				else
					;; clean up
					call uar_CrmEndReq( hStep )
					call uar_CrmEndTask ( hTask )
					call uar_CrmEndApp( hApp )
				endif
			endif
		endif
	endif	
/*********************************** End 038 *********************************************/
 
set script_version = "051 01/20/14 KS2604"
end go

;Generated by GNU enscript 1.6.4.
