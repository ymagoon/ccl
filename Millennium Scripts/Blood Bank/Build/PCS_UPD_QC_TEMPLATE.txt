 ;;Solution_Test/script/PathNet -- Common Services/pcs_upd_qc_template/pcs_upd_qc_template.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 2003 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       pcs_upd_qc_template.prg
        Object name:            pcs_upd_qc_template
        Request #:              1052544

        Product:                PATHNET
        Product Team:           PATHNET COMMON SERVICES
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:

        Tables read:            code_value

        Tables updated:         code_value,
                                pcs_qc_filter,
                                pcs_qc_filter_default

        Executing from:         PCS QCTemplates
        Special Notes:          n/a

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/30/03 Nirmal Sanganee      Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program pcs_upd_qc_template:dba go
create program pcs_upd_qc_template:dba

;***********************************************************************
;*   Include logging and error routines                                *
;***********************************************************************
%i cclsource:pcs_subevent.inc
  /*
  request
  (
   1 update_flag         	   = i4  ;(1 = templates and filters, 2 = filters only)
   1 template_name      	   = c40
   1 template_cd        	   = f8
   1 activity_type_mean      = c12
   1 active_ind         	   = i2
   1 updt_cnt           	   = i4
   1 filters[*]
      2 filter_id            = f8
      2 filter_cd            = f8
      2 display_sequence 	   = i4
      2 filter_set_nbr       = i4
      2 updt_cnt             = i4
      2 active_ind           = i2
      2 filter_values[*]
        3 parent_entity_id   = f8
        3 parent_entity_name = c32
        3 filter_nbr         = i4
  )
  */

  record reply
  (
    1 template_cd      = f8
    1 template_name    = c40
    1 updt_cnt         = i4
    1 filters[*]
      2 filter_id      = f8
      2 filter_cd      = f8
      2 filter_set_nbr = i4
      2 updt_cnt       = i4
%i cclsource:status_block.inc
  )

%i cclsource:gm_i_code_value0619_def.inc
%i cclsource:gm_u_code_value0619_def.inc
%i cclsource:gm_u_pcs_qc_filte8467_def.inc
%I cclsource:gm_i_pcs_qc_filte8467_def.inc
%I cclsource:gm_i_pcs_qc_filte8468_def.inc
%I cclsource:gm_d_pcs_qc_filte8467_def.inc


  ;***********************************************************************
  ;*   Variable Declarations                                             *
  ;***********************************************************************

  declare nStatus           = i2 with protect, noconstant(0)
  declare dNewTemplateCD    = f8 with protect, noconstant(0.0)
  declare sErrorMsg         = vc with protect, noconstant("")
  declare sErrorName        = vc with protect, noconstant("")
  declare lUpdFilterCnt     = i4 with protect, noconstant(0)
  declare lInsFilterValueCnt= i4 with protect, noconstant(0)
  declare lDelFilterCnt     = i4 with protect, noconstant(0)
  declare lCnt              = i4 with protect, noconstant(0)
  declare dTemplateCd       = f8 with protect, noconstant(0.0)
  declare NUM_FILTERS       = i4 with protect, constant(value(size(request->filters,5)))
  declare ROW_FOUND         = i2 with protect, constant(0) ; A matching row was FOUND
  declare ROW_NOT_FOUND     = i2 with protect, constant(1) ; A matching row was NOT FOUND
    
  ;***********************************************************************
  ;*   Initializations                                                   *
  ;***********************************************************************
  
  set reply->status_data->status = "F"

  /**********************************************/
  /* Only checking this flag for being > 0,     */
  /* only for Inserts and Updates, since        */
  /* Deletes could have this flag as a 0        */
  /**********************************************/

  set dTemplateCd = request->template_cd
  set reply->template_cd = request->template_cd
  set reply->template_name = request->template_name
  set reply->updt_cnt = request->updt_cnt
  
  set nStatus = alterlist(reply->filters, NUM_FILTERS)

  if (request->update_flag = 1 )
    /****************************************/
    /* Call the Perform_Validate Subroutine */
    /****************************************/
    set nStatus = ValidateTemplateName(request->template_name)
    if (nStatus = ROW_FOUND)
      ;A Row was found on the code_value table. So exit
      set sErrorName = "DUPLICATE_TEMPLATE_NAME_FOUND"
      set reply->status_data->status = "D"
      go to exit_script
    endif
    
    if (request->template_cd = 0.0)
      /*************************************/
      /*        PERFORM_INSERT             */
      /*************************************/
      set dTemplateCD = InsertTemplate(0)

      if (dTemplateCD = 0.0)
        /* Master Insert Failed */
        set sErrorName = "CODE_VALUE_INSERT"
        go to script_error
      else
        set request->template_cd = dTemplateCd
        set reply->template_cd = dTemplateCd
        set reply->updt_cnt = 0
      endif
  
    else
  
      set nStatus = UpdateTemplate(0)

      if (nstatus = 0)
        /* Master UPDATE Failed */
        set sErrorName = "CODE_VALUE_UPDATE"
        go to script_error
      else
        set reply->updt_cnt = reply->updt_cnt + 1
      endif

    endif

  endif

  for (lCnt = 1 to size(request->filters, 5))
    
    set reply->filters[lCnt]->filter_cd = request->filters[lCnt]->filter_cd
    set reply->filters[lCnt]->filter_set_nbr = request->filters[lCnt]->filter_set_nbr

    /*******************************/
    /* INSERT Filters              */
    /*******************************/
    if ((request->filters[lCnt]->filter_id = 0.0) and (request->filters[lCnt]->active_ind = 1))

      set reply->filters[lCnt]->filter_id = InsertFilter(lCnt)
  
      if (reply->filters[lCnt]->filter_id = 0.0)
        /* Master INSERT failed */
        set sErrorName = "PCS_QC_FILTER INSERT FAILED"
        go to script_error
      endif
    
      set nStatus = InsertFilterValues(reply->filters[lCnt]->filter_id, lcnt)

      set reply->filters[lCnt]->updt_cnt  = 0
    
    elseif ((request->filters[lCnt]->active_ind = 0) and (request->filters[lCnt]->filter_id > 0.0))

      set nStatus = DeleteFilter(lCnt)

      set reply->filters[lCnt]->filter_id = request->filters[lCnt]->filter_id
      set reply->filters[lCnt]->updt_cnt  = request->filters[lCnt]->updt_cnt
 
    elseif (request->filters[lCnt]->filter_id > 0.0)
      /*************************************/
      /* Update Filters                    */
      /*************************************/
      set nStatus = UpdateFilter(lCnt)
      set nStatus = InsertFilterValues(request->filters[lCnt]->filter_id, lCnt)

      set reply->filters[lCnt]->filter_id = request->filters[lCnt]->filter_id
      set reply->filters[lCnt]->updt_cnt  = request->filters[lCnt]->updt_cnt + 1

    endif
    
  endfor

  if (lUpdFilterCnt > 0)
    /* Call master UPDATE script */
    execute gm_u_pcs_qc_filte8467 with replace("REQUEST", "GM_U_PCS_QC_FILTE8467_REQ"),
                                       replace("REPLY", "GM_U_PCS_QC_FILTE8467_REP")

    if (gm_u_pcs_qc_filte8467_rep->status_data->status != "S")
      /* Master UPDATE failed */
      set sErrorName = "PCS_QC_FILTER UPDATE FAILED"
      go to script_error
    endif
  endif

  if (lInsFilterValueCnt > 0)
    /* Call master UPDATE script */
    execute gm_i_pcs_qc_filte8468 with replace("REQUEST", "GM_I_PCS_QC_FILTE8468_REQ"),
                                       replace("REPLY", "GM_I_PCS_QC_FILTE8468_REP")
  
    if (gm_i_pcs_qc_filte8468_rep->status_data->status != "S")
      /* Master INSERT failed */
      set sErrorName = "PCS_QC_FILTER_VALUE INSERT FAILED"
      go to script_error
    endif
  endif

  if (lDelFilterCnt > 0)
    /* Call master DELETE script */
    execute gm_d_pcs_qc_filte8467 with replace("REQUEST", "GM_D_PCS_QC_FILTE8467_REQ"),
                                       replace("REPLY", "GM_D_PCS_QC_FILTE8467_REP")
  
    if (gm_d_pcs_qc_filte8467_rep->status_data->status != "S")
      /* Master DELETE failed */
      set sErrorName = "PCS_QC_FILTER DELETE FAILED"
      go to script_error
    endif
  endif

  /****************************************/
  /* ValidateTemplateName Subroutine      */
  /* to validate that there exitsts no    */
  /* row on the code_value table with the */
  /* same template name as givein in the  */
  /* request.                             */
  /****************************************/
  declare ValidateTemplateName(sTemplateName = vc (value)) = i2
  subroutine ValidateTemplateName(sTemplateName)
  
    declare nRowStatus = i2 with protect, noconstant(0)
  
    set nRowStatus = ROW_NOT_FOUND
  
    select into "nl:"
    from code_value cv
      where cv.code_set = 1950
        and cv.cdf_meaning in ("LJC", "MLJC", " PLJC", "PMLJC", "RL", "PRL", "STAT", "PSTAT", "XSTAT")
        and cv.display_key = trim(cnvtupper(cnvtalphanum(sTemplateName)))
    detail
      nRowStatus = ROW_FOUND
    with nocounter
    
    if(nRowStatus = ROW_NOT_FOUND)
      select into "nl:"
      from code_value cv
        where cv.code_set = 255232
          and cv.display_key = trim(cnvtupper(cnvtalphanum(sTemplateName)))
          and cv.code_value+0 != request->template_cd
      detail
        nRowStatus = ROW_FOUND
      with nocounter     
    endif
  
    return(nRowStatus)
  end  /****subroutine ValidateTemplateName****/


  ;***********************************************************************
  ;*   CODE_VALUE INSERT Function                                        *
  ;*                                                                     *
  ;*   Description: Calls master INSERT script for adding new rows to    *
  ;*                the code_value table.                                *
  ;*                                                                     *
  ;*   Return:      Template_cd                                          *
  ;***********************************************************************
  
  declare InsertTemplate ( ) = f8
  subroutine InsertTemplate ( null )

    /* Turn off partial filing */
    set gm_i_code_value0619_req->allow_partial_ind = 0
  
    /* Indicate all columns that will be inserted */
    set gm_i_code_value0619_req->CODE_SETi               = 1
    set gm_i_code_value0619_req->CDF_MEANINGi            = 1
    set gm_i_code_value0619_req->DISPLAYi                = 1
    set gm_i_code_value0619_req->ACTIVE_INDi             = 1
    set gm_i_code_value0619_req->ACTIVE_STATUS_PRSNL_IDi = 1
 
    /* Populate master INSERT script's request data */
    set nStat = alterlist(gm_i_code_value0619_req->qual, 1)
 
    set gm_i_code_value0619_req->qual[1]->code_set               = 255232
    set gm_i_code_value0619_req->qual[1]->cdf_meaning            = request->activity_type_mean
    set gm_i_code_value0619_req->qual[1]->display                = request->template_name
    set gm_i_code_value0619_req->qual[1]->active_ind             = request->active_ind
    set gm_i_code_value0619_req->qual[1]->active_status_prsnl_id = reqinfo->updt_id
 
    /* Call master INSERT script */
    execute gm_i_code_value0619 with replace("REQUEST", "GM_I_CODE_VALUE0619_REQ"),
                                     replace("REPLY", "GM_I_CODE_VALUE0619_REP")
 
    if (gm_i_code_value0619_rep->status_data->status = "S")
      /* Fill out return value based on master INSERT script's reply */
      return(gm_i_code_value0619_rep->qual[1]->code_value)
    else
      return(0.0)
    endif

  end /*****InsertTemplateDetails*****/

  ;***********************************************************************
  ;*   CODE_VALUE UPDATE Function                                        *
  ;*                                                                     *
  ;*   Description: Calls master UPDATE script for updating new rows to  *
  ;*                the code_value table.                                *
  ;*                                                                     *
  ;*   Return:      1 = success                                          *
  ;*                0 = failure                                          *
  ;***********************************************************************
  
  declare UpdateTemplate() = i2
  subroutine UpdateTemplate(null)

    declare nStat = i2 with protect, noconstant(0)

    /* Turn off partial filing */
    set gm_u_code_value0619_req->allow_partial_ind = 0
  
    /* Indicate all columns that will be in the WHERE clause */
    set gm_u_code_value0619_req->CODE_VALUEw = 1
  
    /* Indicate all columns that will be updateed */
    set gm_u_code_value0619_req->DISPLAYf                = 1
    set gm_u_code_value0619_req->ACTIVE_INDf             = 1
    set gm_u_code_value0619_req->UPDT_CNTf               = 1
 
    /* Populate master UPDATE script's request data */
    set nStat = alterlist(gm_u_code_value0619_req->qual, 1)
 
    set gm_u_code_value0619_req->qual[1]->code_value = request->template_cd
    set gm_u_code_value0619_req->qual[1]->display    = request->template_name
    set gm_u_code_value0619_req->qual[1]->active_ind = request->active_ind
    set gm_u_code_value0619_req->qual[1]->updt_cnt   = request->updt_cnt
 
    /* Call master UPDATE script */
    execute gm_u_code_value0619 with replace("REQUEST", "GM_U_CODE_VALUE0619_REQ"),
                                     replace("REPLY", "GM_U_CODE_VALUE0619_REP")
    if (gm_u_code_value0619_rep->status_data->status = "S")
      return(1)
    else
      return(0)
    endif

  end /*****UpdateTemplateDetails*****/
  
  ;***********************************************************************
  ;*   PCS_QC_FILTER INSERT Function                                     *
  ;*                                                                     *
  ;*   Description: Calls master INSERT script for adding new rows to    *
  ;*                the PCS_QC_FILTER table.                             *
  ;***********************************************************************

  declare InsertFilter(lCnt = i4  (value)) = f8
  subroutine InsertFilter(lCnt)

    /* Turn off partial filing */
    set gm_i_pcs_qc_filte8467_req->allow_partial_ind = 0

    /* indicate all columns that will be inserted */
    set gm_i_pcs_qc_filte8467_req->filter_cdi       = 1
    set gm_i_pcs_qc_filte8467_req->filter_set_nbri  = 1
    set gm_i_pcs_qc_filte8467_req->template_cdi     = 1
    set gm_i_pcs_qc_filte8467_req->display_seq_nbri = 1
    
     /* Size master INSERT script's request */
    set nStat = alterlist(gm_i_pcs_qc_filte8467_req->qual, 1)

    set gm_i_pcs_qc_filte8467_req->qual[1]->filter_cd       = request->filters[lCnt]->filter_cd
    set gm_i_pcs_qc_filte8467_req->qual[1]->filter_set_nbr  = request->filters[lCnt]->filter_set_nbr
    set gm_i_pcs_qc_filte8467_req->qual[1]->template_cd     = reply->template_cd
    set gm_i_pcs_qc_filte8467_req->qual[1]->display_seq_nbr = request->filters[lCnt]->display_sequence

    /* Call master INSERT script */
    execute gm_i_pcs_qc_filte8467 with replace("REQUEST", "GM_I_PCS_QC_FILTE8467_REQ"),
                                       replace("REPLY", "GM_I_PCS_QC_FILTE8467_REP")

    if (gm_i_pcs_qc_filte8467_rep->status_data->status = "S")
      /* Fill out return value based on master INSERT script's reply */
      return (gm_i_pcs_qc_filte8467_rep->qual[1]->filter_id)
    else
      return (0.0)
    endif
  
  end /*  InsertFilter */

;***********************************************************************
;*   PCS_QC_FILTER_DEFAULT INSERT Function                             *
;*                                                                     *
;*   Description: Calls master INSERT script for adding new rows to    *
;*                the PCS_QC_FILTER_DEFAULT table.                     *
;***********************************************************************
  declare InsertFilterValues(dFilterId = f8  (value), lCnt = i4  (value)) = i2
  subroutine InsertFilterValues(dFilterId, lCnt)

    declare lFilterValuesCnt = i4 with protect, noconstant(0)
    declare lFilterValueIdx  = i4 with protect, noconstant(0)
    
    set lFilterValuesCnt = size(request->filters[lCnt]->filter_values, 5)
    
    if (lFilterValuesCnt = 0)
      return (1)
    endif

    /* Turn off partial filing */
    set gm_i_pcs_qc_filte8468_req->allow_partial_ind = 0
  
    /* Indicate all columns that will be inserted */
    set gm_i_pcs_qc_filte8468_req->filter_idi = 1
    set gm_i_pcs_qc_filte8468_req->parent_entity_namei = 1
    set gm_i_pcs_qc_filte8468_req->parent_entity_idi = 1
    set gm_i_pcs_qc_filte8468_req->filter_nbri = 1
    
    set nStatus = alterlist(gm_i_pcs_qc_filte8468_req->qual, lInsFilterValueCnt + lFilterValuesCnt)

    for (lFilterValueIdx = 1 to lFilterValuesCnt)
      set lInsFilterValueCnt = lInsFilterValueCnt + 1
      /* Populate master INSERT script's request data */
      set gm_i_pcs_qc_filte8468_req->qual[lInsFilterValueCnt]->filter_id = dFilterId

      set gm_i_pcs_qc_filte8468_req->qual[lInsFilterValueCnt]->parent_entity_name
          = request->filters[lCnt]->filter_values[lFilterValueIdx]->parent_entity_name
  
      set gm_i_pcs_qc_filte8468_req->qual[lInsFilterValueCnt]->parent_entity_id
          = request->filters[lCnt]->filter_values[lFilterValueIdx]->parent_entity_id
  
      set gm_i_pcs_qc_filte8468_req->qual[lInsFilterValueCnt]->filter_nbr
          = request->filters[lCnt]->filter_values[lFilterValueIdx]->filter_nbr
    endfor

    return(1)
  end  /*InsertFilterValues*/

  ;***********************************************************************
  ;*   PCS_QC_FILTER UPDATE Function                                     *
  ;*                                                                     *
  ;*   Description: Calls master UPDATE script for updating new rows to  *
  ;*                the PCS_QC_FILTER table.                             *
  ;***********************************************************************
  
  declare UpdateFilter(lCnt   = i4  (value)) = i2
  subroutine UpdateFilter(lCnt)
    
    set lUpdFilterCnt = lUpdFilterCnt + 1
    
    if (lUpdFilterCnt = 1)
      /* Turn off partial filing */
      set gm_u_pcs_qc_filte8467_req->allow_partial_ind = 0

     /* Indicate all columns that will be in the WHERE clause */
      set gm_u_pcs_qc_filte8467_req->filter_idw = 1

      /* Indicate all columns that will be updateed */
      set gm_u_pcs_qc_filte8467_req->filter_cdf       = 1
      set gm_u_pcs_qc_filte8467_req->filter_set_nbrf  = 1
      set gm_u_pcs_qc_filte8467_req->display_seq_nbrf = 1
      set gm_u_pcs_qc_filte8467_req->updt_cntf        = 1
    endif

    /* Size master UPDATE script's request */
    set nStat = alterlist(gm_u_pcs_qc_filte8467_req->qual, lUpdFilterCnt)

    set gm_u_pcs_qc_filte8467_req->qual[lUpdFilterCnt]->filter_id       = request->filters[lCnt]->filter_id
    set gm_u_pcs_qc_filte8467_req->qual[lUpdFilterCnt]->filter_cd       = request->filters[lCnt]->filter_cd
    set gm_u_pcs_qc_filte8467_req->qual[lUpdFilterCnt]->filter_set_nbr  = request->filters[lCnt]->filter_set_nbr
    set gm_u_pcs_qc_filte8467_req->qual[lUpdFilterCnt]->display_seq_nbr = request->filters[lCnt]->display_sequence
    set gm_u_pcs_qc_filte8467_req->qual[lUpdFilterCnt]->updt_cnt        = request->filters[lCnt]->updt_cnt

    return(1)
  end /*  UpdateFilter */

  ;***********************************************************************
  ;*   PCS_QC_FILTER DELETE Function                                     *
  ;*                                                                     *
  ;*   Description: Calls master DELETE script for deleting new rows in  *
  ;*                the PCS_QC_FILTER table.                             *
  ;***********************************************************************
  declare DeleteFilter(lCnt   = i4  (value)) = i2
  subroutine DeleteFilter(lCnt)

    set lDelFilterCnt = lDelFilterCnt + 1

    /* Turn off partial filing */
    set gm_d_pcs_qc_filte8467_req->allow_partial_ind = 0

    /* Indicate all columns that will be in the WHERE clause */
    set gm_d_pcs_qc_filte8467_req->FILTER_IDw = 1

    /* Size master DELETE script's request */
    set nStat = alterlist(gm_d_pcs_qc_filte8467_req->qual, lDelFilterCnt)

    /* Populate master DELETE script's request data */
    set gm_d_pcs_qc_filte8467_req->qual[lDelFilterCnt]->filter_id = request->filters[lCnt]->filter_id

    return(1)
  end /*  DeleteFilter */

  ;***********************************************************************
  ;*   Check for any unexpected errors                                   *
  ;***********************************************************************
  if (error(sErrorMsg, 0) > 0)
    /* Script failure and rollback changes */
    call subevent_add("EXECUTE", "F", curprog, sErrorMsg)
    set reqinfo->commit_ind = 0
  else
    /* Script successful and commit changes */
    set reqinfo->commit_ind = 1
    set reply->status_data->status = "S"
  endif

  go to exit_script

  ;***********************************************************************
  ;*   Script error found so rollback changes                            *
  ;***********************************************************************
#script_error
  set reqinfo->commit_ind = 0
  set reply->status_data->status = "F"
  call subevent_add("EXECUTE", "F", sErrorName, sErrorMsg)

  ;***********************************************************************
  ;*   End of Program                                                    *
  ;***********************************************************************
#exit_script

  if(reply->status_data->status = "D")
    call subevent_add("EXECUTE", "D", sErrorName, sErrorMsg)
  endif

  /* Cleanup request and reply structures for master INSERT script */
%i cclsource:gm_i_code_value0619_cln.inc
%i cclsource:gm_u_code_value0619_cln.inc
%I cclsource:gm_i_pcs_qc_filte8467_cln.inc
%I cclsource:gm_i_pcs_qc_filte8468_cln.inc
%I cclsource:gm_u_pcs_qc_filte8467_cln.inc
%I cclsource:gm_d_pcs_qc_filte8467_cln.inc

end
go



;Generated by GNU enscript 1.6.4.
