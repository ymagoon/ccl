 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Reagentcellstool/bbt_add_reagent_cells.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2004 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       BBT_ADD_REAGENT_CELL
        Object name:            BBT_ADD_REAGENT_CELL
        Request #:              225129

        Product:                Pathnet
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        To create the reagent cell relationship
                                for cell groups and cells

        Tables read:            none
        Tables updated:         code_value, cell_group
        Executing from:         Produc_1

        Special Notes:          ?

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 08/04/96 Mike Goings          Initial Release                     *
;     001 04/22/04 Jason Coy            Modify so script checks for existing*
;                                       row before inserting. If exists then*
;                                       update.                             *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************


drop program bbt_add_reagent_cells:dba go
create program bbt_add_reagent_cells:dba

/************************/
/*    Request record    */
/************************/
/*
record request
( 1 cell_group_cd = f8
  1 cells_cnt = i4
  1 cells_data[x]
    2 cells_cd = f8
 )
*/


/************************/
/*     Reply record     */
/************************/
record reply
  ( 
 1 cell_group_cd  = f8
 1 cell_data[10]
   2 cell_cd = f8
%i cclsource:status_block.inc
  )

/************************/
/* Initialize variables */
/************************/
set reply->status_data.status = "F"
set stat = alter(reply->cell_data,request->cells_cnt)
set failures = 0

/************************/
/*  Insert Cell Group */
/************************/
for (y = 1 to request->cells_cnt)
   ;first check if row exists and if it does lock it for update.
   select into "nl:"
      cg.*
   from cell_group cg
   where
      cg.cell_group_cd = request->cell_group_cd and
      cg.cell_cd = request->cells_data[y].cells_cd
   with nocounter, forupdate(cg)

   if (curqual = 0) ;row does not exist so insert
      set next_code = 0.0
      execute cpm_next_code
   
      insert into cell_group cg set
         cg.cell_id = next_code,
         cg.cell_group_cd = request->cell_group_cd,
         cg.cell_cd = request->cells_data[y].cells_cd,
         cg.active_ind = 1,
         cg.active_status_cd = reqdata->active_status_cd,
         cg.active_status_dt_tm = cnvtdatetime(curdate, curtime3),
         cg.active_status_prsnl_id = reqinfo->updt_id,
         cg.updt_cnt = 0,
         cg.updt_dt_tm = cnvtdatetime(curdate, curtime3),
         cg.updt_id = reqinfo->updt_id,
         cg.updt_task = reqinfo->updt_task,
         cg.updt_applctx = reqinfo->updt_applctx

      set reply->cell_data[y].cell_cd = next_code

   else ;row does exist so update
      update into cell_group cg set
        cg.active_ind = 1,
        cg.active_status_cd = reqdata->active_status_cd,
        cg.active_status_prsnl_id = reqinfo->updt_id,
        cg.updt_cnt = cg.updt_cnt + 1,
        cg.updt_dt_tm = cnvtdatetime(curdate, curtime3),
        cg.updt_id = reqinfo->updt_id,
        cg.updt_task = reqinfo->updt_task,
        cg.updt_applctx = reqinfo->updt_applctx

      where
         cg.cell_group_cd = request->cell_group_cd and
         cg.cell_cd = request->cells_data[y].cells_cd
   endif

   if (curqual = 0)
      set failures = 1,
      go to exit_script
   endif
endfor

commit

/************************/
/*    exit_script       */
/************************/
#exit_script
  if (failures = 0)
    set reply->status_data.status = "S"
  else
    rollback,
    set reply->status_data.status = "F"
  endif

end go

;Generated by GNU enscript 1.6.4.
