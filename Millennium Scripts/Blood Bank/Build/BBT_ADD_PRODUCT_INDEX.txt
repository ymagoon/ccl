 ;;Solution_Test/script/PathNet -- BB Transfusion/Producttool/bbt_add_product_index.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Author:                 Lisa Grayson
        Date Written:           03/29/96
        Last Modified:          03/29/96
 
        Source file name:       BBT_ADD_PRODUCT_INDEX.PRG
        Object name:            bbt_add_product_index
 
        Product:                Blood Bank Transfusion
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Add rows to PRODUCT_INDEX & PRODUCT_BARCODE
        Script number:          225046
 
        Tables read:            none
        Executing from:         PRODUCT DB tool
 
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *MOD#  BY  PIM#   DATE   RELEASE MODIFICATION TECHNIQUE/UTILITY        *
;    *---- --- ----- -------- ------- ------------------------------------- *
;*GMOD*G000 LSJ 00000 04/01/96   000  Created new program                   *
;           BNK       08/18/97        Modified to include multiple barcodes *
;           DMS       07/09/98        Modified to include Drawn date ind    *
;		    TB	      09/26/05	      Modified to include Aliquot prods     *
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
        drop program bbt_add_product_index:dba go
        create program bbt_add_product_index:dba
 
        /*
        record request
        (
          1  qual[10]
             2  active_ind = i1
             2  product_class_cd = f8
             2  product_cat_cd = f8
             2  product_disp = c40
             2  product_desc = vc
             2  barcodelist[*]
                3  product_barcode_id =  f8
                3  product_barcode =  c15
                3  active_ind      =  i2
             2  autologous_ind = i2
             2  directed_ind = i2
             2  max_days_expire = i4
             2  max_hrs_expire = i4
             2  default_volume = i4
             2  default_supplier_id = f8
             2  allow_dispense_ind = i2
             2  auto_quarantine_min = i4
             2  synonym_id = f8
             2  validate_ag_ab_ind = i2
             2  validate_trans_req_ind = i2
             2  intl_units_ind = i2
             2  storage_temp_cd = f8
             2  drawn_dt_tm_ind = i2
             2  aliquot_ind = i2
        )
        */
 
        record reply
        (1  status_data
            2  status                    = c1
            2  subeventstatus[1]
               3  SourceObjectName       = c15
               3  SourceObjectQual       = i4
               3  SourceObjectValue      = c50
               3  OperationName          = c8
               3  OperationStatus        = c1
               3  TargetObjectName       = c15
               3  TargetObjectValue      = c50
               3  Sub_Event_dt_tm        = di8
        )
/*****************************************************************************/
/* Master script include files (insert)                                      */
/*****************************************************************************/
%i cclsource:gm_i_code_value0619_def.inc
 
/***************************************************************************
 * Define the gold master script request and reply structures.             *
 ***************************************************************************/
		execute gm_CODE_VALUE0619_def 'I'
 
/*****************************************************************************/
/* Variable declarations                                                     */
/*****************************************************************************/
		declare next_code     = f8 with protect, noconstant(0.0)
 
        set reply->status_data->status = "F"
        set nbr_to_add = size(request->qual,5)
        set y = 0
        set idx = 0
        set failed = "F"
; ** Get "Authorized" data_status_cd code_value
%i cclsource:bbt_get_auth_data_status_cd.inc
 
 
;insert into codeset first then if successful, add to PRODUCT_INDEX
    for (idx = 1 to nbr_to_add)
           	set next_code = 0.0
 
			set gm_i_code_value0619_req->allow_partial_ind = 0
 
			set stat = gm_i_code_value0619_i4('CODE_SET', 1604, 1, 0)
 
     		if (stat = 1)
         		set stat = gm_i_code_value0619_vc('DISPLAY',
            		request->qual[idx]->product_disp, 1, 0)
      		endif
 
		    if (stat = 1)
		        set stat = gm_i_code_value0619_vc('DESCRIPTION',
        		   request->qual[idx]->product_desc, 1, 0)
    		endif
 
		    if (stat = 1)
        		set stat = gm_i_code_value0619_vc('DEFINITION',
				   request->qual[idx]->product_desc, 1, 0)
      		endif
 
	    	if (stat = 1)
           		set stat = gm_i_code_value0619_f8('ACTIVE_TYPE_CD',
           			reqdata->active_status_cd, 1, 0)
      		endif
 
		    if (stat = 1)
        		set stat = gm_i_code_value0619_i2('ACTIVE_IND',
            		request->qual[idx]->active_ind, 1, 0)
		    endif
 
		    if (stat = 1)
        		set stat = gm_i_code_value0619_dq8('ACTIVE_DT_TM',
            		cnvtdatetime(curdate,curtime3), 1, 0)
      		endif
 
			if (stat = 1)
        		set stat = gm_i_code_value0619_dq8('BEGIN_EFFECTIVE_DT_TM',
            		cnvtdatetime(curdate,curtime3), 1, 0)
		   	endif
 
			if (stat = 1)
           		set stat = gm_i_code_value0619_dq8('END_EFFECTIVE_DT_TM',
           		   	cnvtdatetime("31-DEC-2100:00:00:00.00"), 1, 0)
      		endif
 
		    if (stat = 1)
        		set stat = gm_i_code_value0619_f8('DATA_STATUS_CD',
            		auth_data_status_cd, 1, 0)
      		endif
 
      		if (stat = 1)
         		set stat = gm_i_code_value0619_dq8('DATA_STATUS_DT_TM',
            		cnvtdatetime(curdate,curtime3), 1, 0)
      		endif
 
      		if (stat = 1)
         		set stat = gm_i_code_value0619_f8('DATA_STATUS_PRSNL_ID',
            		reqinfo->updt_id, 1, 0)
      		endif
 
      		if (stat = 1)
         		set stat = gm_i_code_value0619_f8('ACTIVE_STATUS_PRSNL_ID',
            		reqinfo->updt_id, 1, 0)
      		endif
 
      		if (stat = 1)
         		execute gm_i_code_value0619 with replace(request, gm_i_code_value0619_req),
            		replace(reply, gm_i_code_value0619_rep)
      		endif
 
      		if(stat = 1)
      			if (gm_i_code_value0619_rep->status_data->status = "F")
      				set curqual = 0
      			endif
      			set next_code = gm_i_code_value0619_rep->qual[1].code_value
      		endif
 
            if (curqual = 0)
              set y = y + 1
              if (y > 1)
                set stat = alter(reply->status_data->subeventstatus, y+1)
              endif
              set reply->status_data->subeventstatus[y]->OperationName
               = "insert"
              set reply->status_data->subeventstatus[y]->OperationStatus
               = "F"
              set reply->status_data->subeventstatus[y]->TargetObjectName
               = "product"
              set reply->status_data->subeventstatus[y]->TargetObjectValue
               = "codeset"
              set reply->status_data->subeventstatus[y]->SourceObjectQual
               = 1
              set reply->status_data->subeventstatus[y]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime)
              set failed = "T"
            else
             insert into product_index p
             set
              p.product_class_cd = request->qual[idx]->product_class_cd,
              p.product_cat_cd = request->qual[idx]->product_cat_cd,
              p.product_cd = next_code,  /*generated from up above*/
              p.autologous_ind = request->qual[idx]->autologous_ind,
              p.directed_ind = request->qual[idx]->directed_ind,
              p.max_days_expire = request->qual[idx]->max_days_expire,
              p.max_hrs_expire = request->qual[idx]->max_hrs_expire,
              p.default_volume = request->qual[idx]->default_volume,
              p.default_supplier_id = request->qual[idx]->default_supplier_id,
              p.allow_dispense_ind = request->qual[idx]->allow_dispense_ind,
              p.synonym_id = request->qual[idx].synonym_id,
              p.auto_quarantine_min = request->qual[idx]->auto_quarantine_min,
              p.validate_ag_ab_ind = request->qual[idx]->validate_ag_ab_ind,
              p.validate_trans_req_ind = request->qual[idx]->validate_trans_req_ind,
              p.intl_units_ind = request->qual[idx]->intl_units_ind,
              p.storage_temp_cd = request->qual[idx]->storage_temp_cd,
              p.active_ind = request->qual[idx].active_ind,
              p.active_status_cd = reqdata->active_status_cd,
              p.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
              p.active_status_prsnl_id = reqinfo->updt_id,
              p.drawn_dt_tm_ind = request->qual[idx].drawn_dt_tm_ind,
              p.aliquot_ind = request->qual[idx].aliquot_ind,
              p.updt_cnt         = 0,
              p.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
              p.updt_id          = reqinfo->updt_id,
              p.updt_applctx     = reqinfo->updt_applctx,
              p.updt_task        = reqinfo->updt_task
            with counter
            if (curqual = 0)
              set y = y + 1
              if (y > 1)
                set stat = alter(reply->status_data->subeventstatus, y+1)
              endif
 
              set reply->status_data->subeventstatus[y]->SourceObjectName
               = "script"
              set reply->status_data->subeventstatus[y]->SourceObjectValue
               = "bbt_add_product_index"
              set reply->status_data->subeventstatus[y]->OperationName
               = "insert"
              set reply->status_data->subeventstatus[y]->OperationStatus
               = "F"
              set reply->status_data->subeventstatus[y]->TargetObjectName
               = "product_index"
              set reply->status_data->subeventstatus[y]->TargetObjectValue
               = request->qual[idx]->product_desc
              set reply->status_data->subeventstatus[y]->SourceObjectQual
               = 1
              set reply->status_data->subeventstatus[y]->Sub_Event_Dt_Tm
               = cnvtdatetime(curdate,curtime)
              set failed = "T"
              else
               set bar = 0
               set new_product_barcode_id = 0.0
               set bar_cnt = size(request->qual[idx]->barcodelist, 5)
               for (bar = 1 to bar_cnt)
                   set new_product_barcode_id = 0.0
                   set new_product_barcode_id = NEXT_PATHNET_SEQ(0)
 
                if (curqual = 0)
                   set failure_flag = "Y",
                   set reply->status_data->subeventstatus[1]->OperationName
                   = "get new product_barcode_id",
                   set reply->status_data->subeventstatus[1]->OperationStatus
                   = "F",
                   set reply->status_data->subeventstatus[1]->TargetObjectName
                   = "bbt_get_pathnet_seq_sub",
                   set reply->status_data->subeventstatus[1]->TargetObjectValue
                   = request->qual[idx]->barcodelist[bar]->product_barcode
                   set failed = "T"
                endif
                insert into product_barcode b
                set
                 b.product_cd = next_code,
                 b.product_barcode_id = new_product_barcode_id,
                 b.product_barcode = request->qual[idx]->barcodelist[bar].product_barcode,
                 b.product_cat_cd = request->qual[idx]->product_cat_cd,
                 b.product_class_cd = request->qual[idx]->product_class_cd,
                 b.active_ind = 1,
                 b.active_status_cd = reqdata->active_status_cd,
                 b.active_status_dt_tm = cnvtdatetime(curdate,curtime3),
                 b.active_status_prsnl_id = reqinfo->updt_id,
                 b.updt_cnt         = 0,
                 b.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
                 b.updt_id          = reqinfo->updt_id,
                 b.updt_applctx     = reqinfo->updt_applctx,
                 b.updt_task        = reqinfo->updt_task
               with counter
               if (curqual = 0)
                  set y = y + 1
                  if (y > 1)
                     set stat = alter(reply->status_data->subeventstatus, y+1)
                  endif
                  set reply->status_data->subeventstatus[y]->OperationName
                     = "insert"
                  set reply->status_data->subeventstatus[y]->OperationStatus
                     = "F"
                  set reply->status_data->subeventstatus[y]->TargetObjectName
                     = "product_barcode"
                  set reply->status_data->subeventstatus[y]->TargetObjectValue
                     = request->qual[idx]->product_desc
                  set reply->status_data->subeventstatus[y]->Sub_Event_Dt_Tm
                     = cnvtdatetime(curdate,curtime)
                  set failed = "T"
;                     rollback
;                   else
;                     commit
                endif
             endfor
            endif
        endif
    endfor
 
        if (failed = "F")
           set reqinfo->commit_ind = 1
           set reply->status_data->status = "S"
        else
           set reqinfo->commit_ind = 0
           set y = y + 1
           if (y > 1)
             set stat = alter(reply->status_data->subeventstatus, y+1)
           endif
           set reply->status_data->subeventstatus[y]->OperationName
             = "insert"
           set reply->status_data->subeventstatus[y]->OperationStatus
             = "F"
           set reply->status_data->subeventstatus[y]->TargetObjectName
             = "product_barcode"
           set reply->status_data->subeventstatus[y]->TargetObjectValue
             = request->qual[idx]->product_desc
           set reply->status_data->subeventstatus[y]->Sub_Event_Dt_Tm
             = cnvtdatetime(curdate,curtime)
        endif
 
/* Get next pathnet_seq subroutine */
%i cclsource:bbt_get_pathnet_seq_sub.inc
 
/***************************************************************************
 * Free the gold master script request and reply structures.               *
 ***************************************************************************/
%i cclsource:gm_u_code_value0619_cln.inc
 
end go

;Generated by GNU enscript 1.6.4.
