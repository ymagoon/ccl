 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefISBTProdType/BB_ADD_ISBT_PRODUCT_TYPE.PRG Turn on black mode

/*~bb~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1998 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
        Request #:              225823
 
        Product:                PathNet
        Product Team:           BloodBank
 
        Program purpose:        Add product type data supplied by the user to the
                                bb_isbt_product_type table.
 
        Executing from:
        Special Notes:          NONE
 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 06/28/00 Aaron Neihouse       Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
DROP PROGRAM   bb_add_isbt_product_type:dba GO
CREATE PROGRAM bb_add_isbt_product_type:dba
 
/*
RECORD request
(
  1 product_type_list[*]
    2 ref_num = f8
    2 product_cd = f8
    2 isbt_barcode = c15
)
*/
RECORD reply
(
  1 product_type_list[*]
    2 ref_num = f8
    2 new_product_type_id = f8
 
%i cclsource:status_block.inc
)
 
 
 
/***********************************************************************
*  Script                                                              *
***********************************************************************/
#script
 
 
DECLARE failures = i2
declare nCnt = i2
 
SET reply->status_data->status = "F"
SET failures = 0
 
set stat = alterlist(reply->product_type_list, size(request->product_type_list, 5))
 
set nCnt = size(request->product_type_list,5)
set next_pathnet_seq = 0.0
 
for (index = 1 to nCnt)
    select into "nl:"
        seqn = seq(pathnet_seq, nextval)
 
    from
        dual
 
    detail
        reply->product_type_list[index].new_product_type_id = cnvtreal(seqn),
        reply->product_type_list[index].ref_num = request->product_type_list[index].ref_num
 
    with nocounter
endfor
 
INSERT
  into bb_isbt_product_type bipt,
    (dummyt d1 WITH seq = VALUE(SIZE(request->product_type_list, 5)))
  SET
        bipt.bb_isbt_product_type_id = reply->product_type_list[d1.seq].new_product_type_id,
        bipt.product_cd = request->product_type_list[d1.seq].product_cd,
        bipt.isbt_barcode = request->product_type_list[d1.seq].isbt_barcode,
        bipt.active_ind          =       1,
        bipt.active_status_cd    =       reqdata->active_status_cd,
        bipt.active_status_dt_tm =       cnvtdatetime(curdate,curtime3),
        bipt.active_status_prsnl_id =    reqinfo->updt_id,
        bipt.updt_cnt            =       0,
        bipt.updt_dt_tm          =       cnvtdatetime(curdate,curtime3),
        bipt.updt_id             =       reqinfo->updt_id,
        bipt.updt_task           =       reqinfo->updt_task,
        bipt.updt_applctx        =       reqinfo->updt_applctx
 
  PLAN d1
  JOIN bipt
 
  WITH
    NOCOUNTER
 
IF (curqual = 0)
   SET failures = failures + 1
   GO TO exit_script
ENDIF
 
 
/******************************************************************************
*                               Exit Script                                   *
*******************************************************************************/
#exit_script
 
IF (failures > 0)
     ROLLBACK
     SET
     reply->status_data->status = "F"
ELSE
     SET reply->status_data->status = "S"
     COMMIT
ENDIF
 
END
GO
 

;Generated by GNU enscript 1.6.4.
