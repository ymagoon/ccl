 ;;Solution_Test/script/PathNet -- BB Transfusion/Bbt_Aborhcompatibility/bbt_get_prod_pat_comp_by_prod.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_product_patient_comp.prg
        Object name:            bbt_get_product_patient_comp
        Request #:              225132

        Product:                Pathnet                        
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve product patient compatibility info

        Tables read:            product_aborh, product_patient_aborh
        Tables updated:         none
        Executing from:         Code Maintenance

        Special Notes:          this script will retrieve the code_values
                                of the product_patient_aborh and the reply will be
                                used to determine whether or nor the product
                                and aborh has been assigned compatible aborh

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 08/06/96 Teresa Davis         Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
Drop Program   BBT_GET_PROD_PAT_COMP_BY_PROD : dba go
Create Program  BBT_GET_PROD_PAT_COMP_BY_PROD : dba

/*
Record request
(  product_cd = f8
)
*/

Record  Reply
( 1  qual[*]
     2  product_cd        = f8
     2  product_aborh_cd  = f8
     2  abo_only_cd       = f8
     2  rh_only_cd        = f8
     2  no_gt_on_prsn_flag = I4
     2  no_ad_on_prsn_flag = I4 
     2  prod_sequence_nbr = I4 
     2  prod_active_ind = I2
     2  aborh_option_flag = i2
     2  prsn_cnt          = i4
     2  person_aborh_data[*] 
        3  prsn_aborh_cd  =  F8
        3  prsn_abo_only_cd = f8
        3  prsn_rh_only_cd = f8 
        3  prsn_sequence_nbr = I4 
        3  warn_ind  =  I2
        3  active_ind  =  I2 
        3  updt_cnt  =  I4 
     2 disp_no_curraborh_prsn_flag = I4        
%i cclsource:status_block.inc
)
set  reply -> status_data -> status  =  "F" 
set count1 = 0

select  into "nl:" 
  p.*,
  per.*

from  product_aborh  p,
      product_patient_aborh  per

plan p where p.product_cd  = request->product_cd   
      and p.active_ind = 1
join per where per.product_cd = p.product_cd and
      per.prod_aborh_cd = p.product_aborh_cd and
      per.active_ind = 1

HEAD REPORT
  COUNT1 = 0
  count2 = 0
  newcount1 = "N"
  prev_prsn_aborh_cd = 0
head p.product_cd 
     if (newcount1 = "N")
       count1 = count1 + 1 ,
       count2 = 0
       stat = alterlist(reply->qual, count1)
       stat = alterlist(reply->qual[count1].person_aborh_data, count2)
;       if (mod (count1,1) = 1 and count1 != 1)
;         stat = alter (reply -> qual, count1 + 1)
;       endif,
       reply -> qual[count1].product_cd = p.product_cd
       reply -> qual[count1].product_aborh_cd = p.product_aborh_cd
       reply -> qual[count1].no_gt_on_prsn_flag = p.no_gt_on_prsn_flag
       reply -> qual[count1].no_ad_on_prsn_flag = p.no_gt_autodir_prsn_flag
       reply -> qual[count1].prod_sequence_nbr  = p.sequence_nbr
       reply -> qual[count1].prod_active_ind    = p.active_ind
       reply -> qual[count1].aborh_option_flag  = p.aborh_option_flag
       reply -> qual[count1].prsn_cnt           = 0
       reply -> qual[count1].disp_no_curraborh_prsn_flag = p.DISP_NO_CURRABORH_PRSN_FLAG
       newcount1 = "Y"
;       call echo ("NEW")
     endif
head p.product_aborh_cd
     if (newcount1 = "N")
       count1 = count1 + 1 ,
       count2 = 0
       stat = alterlist(reply->qual, count1)
       stat = alterlist(reply->qual[count1].person_aborh_data, count2)
;       if (mod (count1,1) = 1 and count1 != 1)
;         stat = alter (reply -> qual, count1 + 1)
;       endif,
       reply -> qual[count1].product_cd = p.product_cd
       reply -> qual[count1].product_aborh_cd = p.product_aborh_cd
       reply -> qual[count1].no_gt_on_prsn_flag = p.no_gt_on_prsn_flag,
       reply -> qual[count1].no_ad_on_prsn_flag = p.no_gt_autodir_prsn_flag,
       reply -> qual[count1].prod_sequence_nbr  = p.sequence_nbr
       reply -> qual[count1].prod_active_ind    = p.active_ind
       reply -> qual[count1].aborh_option_flag  = p.aborh_option_flag
       reply -> qual[count1].disp_no_curraborh_prsn_flag = p.DISP_NO_CURRABORH_PRSN_FLAG       
       reply -> qual[count1].prsn_cnt           = 0
       newcount1 = "Y"
;       call echo ("NEW")
     endif
DETAIL
       newcount1 = "N"
       count2 = count2 + 1 ,
       stat = alterlist(reply->qual[count1].person_aborh_data, count2)
;       if (mod (count2,1) = 1 and count2 != 1)
;         stat = alter (reply -> qual, count2 + 1)
;       endif,
       reply -> qual[count1].prsn_cnt = reply->qual[count1].prsn_cnt + 1
       reply -> qual[count1].person_aborh_data [count2]-> prsn_aborh_cd 
             = per.prsn_aborh_cd,  
       reply -> qual[count1].person_aborh_data [count2]-> prsn_sequence_nbr = per.sequence_nbr,  
       reply -> qual[count1].person_aborh_data [count2]-> warn_ind = per.warn_ind,  
       reply -> qual[count1].person_aborh_data [count2]-> active_ind = per.active_ind,  
       reply -> qual[count1].person_aborh_data [count2]-> updt_cnt = per.updt_cnt  
/*       call echo (p.product_cd)
       call echo (p.product_aborh_cd)
       CALL ECHO (P.NO_GT_ON_PRSN_FLAG)
       CALL ECHO (P.NO_AD_ON_PRSN_FLAG)
       CALL ECHO (P.SEQUENCE_NBR)
       CALL ECHO (P.ACTIVE_IND)
       CALL ECHO (PER.PRSN_ABORH_CD)
       CALL ECHO (PER.SEQUENCE_NBR)
       CALL ECHO (PER.WARN_IND)
       CALL ECHO (PER.ACTIVE_IND)
       CALL ECHO (PER.UPDT_CNT)     */
foot p.product_cd 
     if (newcount1 = "Y")
        newcount1 = "N"
;        CALL ECHO ("NO CHILD")
     endif
foot p.product_aborh_cd
     if (newcount1 = "Y")
        newcount1 = "N"
 ;       CALL ECHO ("NO CHILD2")
     endif
with nocounter  

if (curqual != 0)  
  set reply->status_data->status = "S"        
else
  set reply->status_data->status = "Z"       
endif

# stop

end go

;Generated by GNU enscript 1.6.4.
