 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefAboOrRh/BB_REF_GET_ABO_OR_RH.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Request #:              22580?

        Product:                PathNet
        Product Team:           Blood Bank
        
        Program purpose:        Retrieve all ABO or RH information

        Executing from:         include\BBRefAboOrRhs.cls
        Special Notes:          NONE 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 10/02/00 Doug Saus            Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

DROP PROGRAM   bb_ref_get_abo_or_rh:dba GO
CREATE PROGRAM bb_ref_get_abo_or_rh:dba

/*
RECORD request
(
  1  code_set           = i4
  1  active_flag        = i2
)
*/

RECORD reply
( 
  1  CodeSet[*]
     2 code_value   = f8
     2 display      = vc
     2 meaning      = c40
     2 description  = vc
     2 barcode      = vc
     
%i cclsource:status_block.inc
)

/***********************************************************************
*   Script                                                             *
***********************************************************************/
DECLARE nCnt = i2

SET nCnt = 0

SET sErrorMsg = FILLSTRING(255," ")
SET sError_Check = ERROR(sErrorMsg,1)

SET STAT = ALTERLIST(reply->CodeSet,10)

SELECT 
   IF (request->active_flag = 2)
      PLAN cv 
        where cv.code_set = request->code_set
      join d
      JOIN cve 
        where cve.code_value = cv.code_value
          and cve.field_name = "Barcode"
          and cve.code_set = cv.code_set 
   ELSE 
      PLAN cv 
        where cv.code_set = request->code_set
          and cv.active_ind = request->active_flag
      join d
      JOIN cve 
        where cve.code_value = cv.code_value
          and cve.field_name = "Barcode"
          and cve.code_set = cv.code_set 
   ENDIF

INTO "nl:" 
   cve_ind = decode(cve.seq,1,0)

FROM 
   code_value cv
   , (dummyt d with seq = 1)
   ,code_value_extension cve 

ORDER by cv.code_value

HEAD cv.code_value
   nCnt = nCnt + 1
   IF (mod(nCnt, 10) = 1 and nCnt != 1) 
      stat = ALTERLIST(reply->CodeSet,nCnt + 10)
   ENDIF  

DETAIL
    reply->CodeSet[nCnt].code_value    = cv.code_value
    reply->CodeSet[nCnt].display     = cv.display
    reply->CodeSet[nCnt].meaning     = cv.cdf_meaning
    reply->CodeSet[nCnt].description = cv.description
    if (cve_ind = 1)
        reply->CodeSet[nCnt].barcode       = cve.field_value
    endif

WITH NOCOUNTER, outerjoin(d)

SET STAT = ALTERLIST(reply->CodeSet,nCnt)               

SET sError_Check = ERROR(sErrorMsg,0)   ;get error message

IF (sError_Check = 0)
   IF (CURQUAL > 0)
      SET reply->status_data->status = "S"
   ELSE
      SET reply->status_data->status = "Z"
   ENDIF
ELSE
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
ENDIF

#EXIT_SCRIPT        
END GO

;Generated by GNU enscript 1.6.4.
