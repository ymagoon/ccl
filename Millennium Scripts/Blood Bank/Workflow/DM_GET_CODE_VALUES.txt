 ;;Solution_Test/script/Database Architecture -- Foundations/CrmCodeValue/DM_GET_CODE_VALUES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       dm_get_code_values.prg
        Object name:            dm_get_code_values
        Request #:              12504

        Product:                CPM                           
        Product Team:           Tablerock
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve code value entries for selected 
				code sets.

        Tables read:            code_value
        Tables updated:         none
        Executing from:         CRMCode2

        Special Notes:          none

******************************************************************************/

 
;~DB~**************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG                *
;    **************************************************************************
;    *                                                                        *
;    *Mod   Date     Engineer             Comment                             *
;    *---   -------- -------------------- ----------------------------------- *
;    *001   07/24/97 Doug Powell          Initial Release                     *
;    *002   01/23/98 Sandeep Laddha       Added order by key logic            *
;    *003   08/14/98 Douglas Powell       Added CKI Retrieval                 *
;    *004   25/02/00 Bin Shen             Change Reply Structure              *
;    *35300 07/23/03 Jesse Soyland        Add definition_dup_ind order by key *
;~DE~**************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
Drop Program   DM_GET_CODE_VALUES : dba go
Create Program  DM_GET_CODE_VALUES : dba

/*
record request
( 
    1 codeset=f8
    1 cv_mode = i2
)
*/

Record  Reply
(
 1  qual[*] 
    2  code_value  =  F8 
    2  code_set    = f8
    2  cdf_meaning  =  vc
    2  cdf_null_ind = i2
    2  display  =  vc 
    2  disp_null_ind = i2
    2  display_key = vc
    2  description  =  vc
    2  descr_null_ind = i2 
    2  definition  =  vc
    2  def_null_ind = i2 
    2  collation_seq  =  I4 
    2  active_ind  =  I2 
    2  data_status_cd = f8
    2  cki = vc
    2  updt_cnt = i4
  1 status_data
    2 status = c1
    2 subeventstatus[1]
      3 OperationName = c25
      3 OperationStatus = c1
      3 TargetObjectName = c25
      3 TargetObjectValue = vc
)
set  reply->status_data->status  =  "F"
set count1 = 0 
set nulldisp = 0
set nulldescr = 0
set nulldef = 0
set nullcdf = 0
;Start 002
set display_dup_ind = 0    
set display_key_dup_ind = 0
set cdf_meaning_dup_ind = 0
set definition_dup_ind = 0		;35300       

select into 'nl:'
       cv.display_dup_ind,
       cv.display_key_dup_ind,
       cv.cdf_meaning_dup_ind,
       cv.definition_dup_ind		;35300
from code_value_set cv
where cv.code_set =request->code_set

detail
display_dup_ind = cv.display_dup_ind
display_key_dup_ind = cv.display_key_dup_ind
cdf_meaning_dup_ind = cv.cdf_meaning_dup_ind
definition_dup_ind = cv.definition_dup_ind
with nocounter
;End 002

set X= fillstring(40, ' ')
if (request->cv_mode = 0)
   select
        if (cdf_meaning_dup_ind = 1)
          X = cv.cdf_meaning
        elseif (display_key_dup_ind = 1)                  ;Start 002
          X = cv.display_key
        elseif (display_dup_ind = 1)
          X = cv.display
	elseif (definition_dup_ind = 1)	;35300
	  x = cv.definition		;35300
        elseif (display_key_dup_ind = 0 and display_dup_ind = 0 and cdf_meaning_dup_ind = 0 
		and definition_dup_ind = 0) 	;35300
          X = cv.display
        endif                                        ;End 002
     into  'nl:'
	cv.code_value,
	cv.code_set,
 	nullcdf = nullind(cv.cdf_meaning),
	cv.cdf_meaning,
	nulldisp = nullind(cv.display),
	cv.display,
	nulldescr = nullind(cv.description),
	cv.description,
	nulldef = nullind(cv.definition),
	cv.display_key,
	cv.definition,
	cv.collation_seq,
	cv.active_ind,
	cv.data_status_cd,
	cv.cki,					;003
	cv.updt_cnt

   from code_value cv

   where request->code_set = cv.code_set
   order by X                 ;002

   head report 
    count1 = 0 
   detail 
     count1 = count1 + 1 , 
     stat = alterlist(reply->qual, count1)
     reply->qual[count1]->code_value = cv.code_value 
     reply->qual[count1]->code_set = cv.code_set
     reply->qual[count1]->cdf_meaning = cv.cdf_meaning
     reply->qual[count1]->display = cv.display
     reply->qual[count1]->description = cv.description
     reply->qual[count1]->definition = cv.definition
     reply->qual[count1]->display_key = cv.display_key
     reply->qual[count1]->collation_seq = cv.collation_seq
     reply->qual[count1]->active_ind = cv.active_ind
     reply->qual[count1]->data_status_cd = cv.data_status_cd
     reply->qual[count1]->cki = cv.cki
     reply->qual[count1]->updt_cnt = cv.updt_cnt
     if (nullcdf = 1)
	reply->qual[count1]->cdf_null_ind = 1
     else
	reply->qual[count1]->cdf_null_ind = 0
     endif
     if (nulldescr = 1)
	reply->qual[count1]->descr_null_ind = 1
     else
	reply->qual[count1]->descr_null_ind = 0
     endif
     if (nulldef = 1)
	reply->qual[count1]->def_null_ind = 1
     else
	reply->qual[count1]->def_null_ind = 0
     endif
     if (nulldisp = 1)
	reply->qual[count1]->disp_null_ind = 1
     else
	reply->qual[count1]->disp_null_ind = 0
     endif  
   with nocounter  
else
   select  
        if (cdf_meaning_dup_ind = 1)
          X = cv.cdf_meaning
        elseif (display_key_dup_ind = 1)            ;Start 002
          X = cv.display_key
        elseif (display_dup_ind = 1)
          X = cv.display
	elseif (definition_dup_ind = 1)	;35300
	  x = cv.definition		;35300
        elseif (display_key_dup_ind = 0 and display_dup_ind = 0 and cdf_meaning_dup_ind = 0 
		and definition_dup_ind = 0)	;35300
          X = cv.display
        endif                                  ;End 002

 into  'nl:'
	cv.code_value,
	cv.code_set,
 	nullcdf = nullind(cv.cdf_meaning),
	cv.cdf_meaning,
	nulldisp = nullind(cv.display),
	cv.display,
	nulldescr = nullind(cv.description),
	cv.description,
	nulldef = nullind(cv.definition),
	cv.definition,
	cv.display_key,
	cv.collation_seq,
	cv.active_ind,
	cv.data_status_cd,
	cv.updt_cnt

   from code_value cv

   where request->code_set = cv.code_set
     and cv.active_ind = 1

   order by X                        ;002

   head report 
    count1 = 0 
   detail 
     count1 = count1 + 1 , 
     stat = alterlist(reply->qual, count1)
     reply->qual[count1]->code_value = cv.code_value 
     reply->qual[count1]->code_set = cv.code_set
     reply->qual[count1]->cdf_meaning = cv.cdf_meaning
     reply->qual[count1]->display = cv.display
     reply->qual[count1]->display_key = cv.display_key
     reply->qual[count1]->description = cv.description
     reply->qual[count1]->definition = cv.definition
     reply->qual[count1]->collation_seq = cv.collation_seq
     reply->qual[count1]->active_ind = cv.active_ind
     reply->qual[count1]->data_status_cd = cv.data_status_cd
     reply->qual[count1]->cki = cv.cki
     reply->qual[count1]->updt_cnt = cv.updt_cnt
     if (nullcdf = 1)
	reply->qual[count1]->cdf_null_ind = 1
     else
	reply->qual[count1]->cdf_null_ind = 0
     endif
     if (nulldescr = 1)
	reply->qual[count1]->descr_null_ind = 1
     else
	reply->qual[count1]->descr_null_ind = 0
     endif
     if (nulldef = 1)
	reply->qual[count1]->def_null_ind = 1
     else
	reply->qual[count1]->def_null_ind = 0
     endif
     if (nulldisp = 1)
	reply->qual[count1]->disp_null_ind = 1
     else
	reply->qual[count1]->disp_null_ind = 0
     endif
  
   with nocounter

endif

if (curqual != 0)  
  set reply->status_data->status = "S"        
  set stat = alterlist(reply->qual,count1)
else  
  set  reply->status_data->status = "Z"       
endif

# stop 
end go

;Generated by GNU enscript 1.6.4.
