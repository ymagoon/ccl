 ;;Solution_Test/script/PathNet -- BB Transfusion/BBT_COMMONDATAMODEL_SCRIPTS/bbt_get_code_ext_by_code.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_get_code_ext_by_code.prg
        Object name:            bbt_get_code_ext_by_code
        Request #:              225

        Product:                Blood Bank Transfusion/Donor              
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve a list of code values and their
                                extensions by code_value

        Tables read:            code_value_extension
                                code_value
        Tables updated:         none
        Executing from:         Dispense
        Special Notes:          none

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 12/12/96 Teresa Davis         Initial Release                     *
;     002 01/08/02 Sasi Gandham         Add Order By for Head Field         *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_get_code_ext_by_code:dba go
create program bbt_get_code_ext_by_code:dba

/***************************/
/*     request record      */
/***************************/
/*
record request
( 1 codelist[*]
    2 code_value = f8
)
*/

/***************************/
/*      reply record       */
/***************************/
record reply
(
  1 qual[*]
    2 code_set = i4
    2 code_value = f8
    2 display = c40
    2 cdf_meaning = c12 
    2 ext_cnt = i4
    2 ext[*]
      3 field_name = vc
      3 field_type = i4
      3 field_value = vc
      3 updt_cnt = i4
      3 display = c40
%I CCLSOURCE:STATUS_BLOCK.INC
)


/***************************/
/*   Initialize Variables  */
/***************************/
set reply->status_data->status = "F"
set val_count = 0
set ext_count = 0
set nbr_in_array = size(request->codelist,5)

/***************************/
/*    Select records       */
/***************************/
select into "nl:"
  cv.code_value,
  cv.code_set,
  cve.field_name,
  x = decode(cve.field_name, 1, 0),
  cve.field_type,
  y = decode(cve.field_value, 1, 0),
  cve.field_value,
  cv.display,
  cv.cdf_meaning,
  cve.updt_cnt,
  cva.display
  
from code_value cv,
     (dummyt d with seq = 1),
     code_value_extension cve,
     (dummyt d1 with seq = 1),
     code_value cva,
     (dummyt d2 with seq = value(nbr_in_array))
plan d2
join cv  where cv.code_value = request->codelist[d2.seq].code_value
                 and cv.active_ind = 1
                 and cv.code_value != NULL
                 and cv.code_value > 0
join (d   where d.seq = 1
join cve where cve.code_value = cv.code_value
                 and trim(cve.field_name) > " "
join (d1
join cva where cva.code_value != NULL           
                 and cva.code_value > 0
                 and cve.field_type != 2
                 and trim(cve.field_value) > " "
                 and cnvtreal(cve.field_value) = cva.code_value))

order by cv.code_value

head cv.code_value
  val_count = val_count + 1
  ext_count = 0
  stat = alterlist(reply->qual, val_count)
  stat = alterlist(reply->qual[val_count].ext, ext_count)
  reply->qual[val_count]->code_set = cv.code_set
  reply->qual[val_count]->code_value = cv.code_value
  reply->qual[val_count]->display = cv.display
  reply->qual[val_count]->cdf_meaning = cv.cdf_meaning
;  call echo("============")
;  call echo(reply->qual[val_count]->display) 

detail
  if (cve.field_name > " ")
    ext_count = ext_count + 1
    stat = alterlist(reply->qual[val_count].ext, ext_count)
    reply->qual[val_count]->ext[ext_count]->field_name = cve.field_name
    reply->qual[val_count]->ext[ext_count]->field_type = cve.field_type
    reply->qual[val_count]->ext[ext_count]->field_value = cve.field_value
    reply->qual[val_count]->ext[ext_count]->updt_cnt = cve.updt_cnt
    reply->qual[val_count]->ext[ext_count]->display = cva.display
;    call echo ("------------")
;    call echo (cve.field_name)
;    call echo (cve.field_value)
;    call echo (cva.display) 
  endif

foot cv.code_value
  reply->qual[val_count]->ext_cnt = ext_count

with nocounter, outerjoin = d, outerjoin = d1

;call echo (val_count)
;call echo (ext_count)

/***************************/
/*        Set status       */
/***************************/
if (val_count = 0)
  set reply->status_data->status = "Z"
else
  set reply->status_data->status = "S"
endif

end
go

;Generated by GNU enscript 1.6.4.
