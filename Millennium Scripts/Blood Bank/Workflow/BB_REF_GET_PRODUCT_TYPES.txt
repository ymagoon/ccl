 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefProductType/BB_REF_GET_PRODUCT_TYPES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Request #:              225803

        Product:                PathNet
        Product Team:           Blood Bank
        
        Program purpose:        Retrieve all product information

        Executing from:         include\BBRefProductTypes.cls
        Special Notes:          NONE 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 04/28/00 Lawrence Dsouza      Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

DROP PROGRAM   bb_ref_get_product_types:dba GO
CREATE PROGRAM bb_ref_get_product_types:dba

/*
RECORD request
(
  1  active_flag        = i2
)
*/

RECORD reply
( 
  1  Product[*]
     2  Product_cd              = f8 
     2  product_disp            = vc 
     2  product_desc            = vc
     2  product_cat_cd          = f8
     2  product_class_cd        = f8
     2  autologous_ind          = i2    
     2  directed_ind            = i2
     2  allow_dispense_ind      = i2
     2  default_volume          = i4
     2  max_days_expire         = i4
     2  max_hrs_expire          = i4 
     2  default_supplier_id     = f8
     2  synonym_id              = f8
     2  auto_quarantine_min     = i4
     2  active_ind              = i2
     2  updt_cnt                = i4
     2  intl_units_ind          = i2
     2  validate_ag_ab_ind      = i2
     2  validate_trans_req_ind  = i2 
     2  storage_temp_cd         = f8
     2  drawn_dt_tm_ind         = i2
     2  aliquot_ind				= i2     
%i cclsource:status_block.inc
)

/***********************************************************************
*   Script                                                             *
***********************************************************************/
DECLARE nCnt = i2

SET nCnt = 0

SET sErrorMsg = FILLSTRING(255," ")
SET sError_Check = ERROR(sErrorMsg,1)

SET STAT = ALTERLIST(reply->product,10)

SELECT 
   IF (request->active_flag = 2)
      where 1 = 1
   ELSE
      where pi.active_ind = request->active_flag
   ENDIF
  
INTO "nl:" 

FROM 
   product_index pi
   
DETAIL
   nCnt = nCnt + 1
   IF (mod(nCnt,10) = 1 and nCnt != 1) 
      stat = ALTERLIST(reply->product,nCnt + 10)   
   ENDIF
   reply->product[nCnt].product_cd              = pi.product_cd
   reply->product[nCnt].product_cat_cd          = pi.product_cat_cd
   reply->product[nCnt].product_class_cd        = pi.product_class_cd
   reply->product[nCnt].autologous_ind          = pi.autologous_ind
   reply->product[nCnt].directed_ind            = pi.directed_ind
   reply->product[nCnt].allow_dispense_ind      = pi.allow_dispense_ind
   reply->product[nCnt].default_volume          = pi.default_volume                 
   reply->product[nCnt].max_days_expire         = pi.max_days_expire   
   reply->product[nCnt].max_hrs_expire          = pi.max_hrs_expire   
   reply->product[nCnt].default_supplier_id     = pi.default_supplier_id   
   reply->product[nCnt].synonym_id              = pi.synonym_id   
   reply->product[nCnt].auto_quarantine_min     = pi.auto_quarantine_min  
   reply->product[nCnt].active_ind              = pi.active_ind     
   reply->product[nCnt].updt_cnt                = pi.updt_cnt 
   reply->product[nCnt].intl_units_ind          = pi.intl_units_ind  
   reply->product[nCnt].validate_ag_ab_ind      = pi.validate_ag_ab_ind
   reply->product[nCnt].validate_trans_req_ind  = pi.validate_trans_req_ind
   reply->product[nCnt].storage_temp_cd         = pi.storage_temp_cd 
   reply->product[nCnt].drawn_dt_tm_ind         = pi.drawn_dt_tm_ind 
   reply->product[nCnt].aliquot_ind				= pi.aliquot_ind
   
WITH NOCOUNTER                              

SET STAT = ALTERLIST(reply->product, nCnt) 
SET sError_Check = ERROR(sErrorMsg,0)   ;get error message

IF (sError_Check = 0)
   IF (nCnt > 0)
      SET reply->status_data->status = "S"
   ELSE
      SET reply->status_data->status = "Z"
   ENDIF
ELSE
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
ENDIF

#EXIT_SCRIPT        
END GO

;Generated by GNU enscript 1.6.4.
