 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefSupplier/BB_REF_GET_SUPPLIER.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
  
/*****************************************************************************
        Request #:              225805

        Product:                PathNet Transfusion                 
        Product Team:           Blood Bank
        
        Program purpose:        Get blood bank suppliers

        Executing from:         include\BBRefSupplier.cls
        Special Notes:          
******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 06/12/00 Lawrence Dsouza          Initial Release                 *
;     001 05/09/07 Ronda Zheng              Retrieve isbt_barcode           *
;     002 06/25/08 Jacob Anderson           Replace ISBT_barcode in reply   *
;                                           with list of ISBT barcodes and  *
;                                           added a select to the new       *
;                                           bb_isbt_supplier table          *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bb_ref_get_supplier:dba go
create program bb_ref_get_supplier:dba

/*
record request
(
 1  active_flag      = i2 

)
*/

record reply  
(
 1 qual[*]
    2  organization_id          = f8
    2  org_name                 = vc
    2  bb_supplier_id           = f8
    2  barcode_value            = c20
    2  prefix_ind               = i2
    2  prefix_value             = c5
    2  default_prefix_ind       = i2
    2  alpha_translation_ind    = i2
    2  active_ind               = i2
    2  isbt_sup_fin_list[*]
        3 bb_isbt_supplier_id   = f8
        3 isbt_fin              = c5
%i cclsource:status_block.inc
)


/***********************************************************************
*   Script                                                             *
***********************************************************************/
DECLARE d278_BBSUPPL_cd = f8
DECLARE sCDF_Meaning = c12
declare lCnt = i4
declare qual_cnt = i4
declare isbt_cnt = i4
declare idx_var = i4
declare idx_var2 = i4
declare loc_var = i4
declare list_size = i4


SET sErrorMsg = FILLSTRING(255," ")
SET sError_Check = ERROR(sErrorMsg,1)

SET d278_BBSUPPL_cd = 0.0

SET sCDF_Meaning = "BBSUPPL"
SET STAT = uar_get_meaning_by_codeset(278, sCDF_Meaning, 1 ,d278_BBSUPPL_cd)
IF (d278_BBSUPPL_cd = 0)
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = "Code lookup for BBSUPPL in codeset 278 failed"
   GO TO EXIT_SCRIPT
ENDIF                                                                      
/*
 * Initialize Globals
 */

SET reply->status_data->status = "F"
SET qual_cnt = 0
set isbt_cnt = 0
set idx_var = 0
set list_size = 0


SET STAT = alterlist(reply->qual, 10)

SELECT 
   IF (request->active_flag = 2) 
      PLAN  otr 
        where otr.org_type_cd           = d278_BBSUPPL_cd 
      JOIN  org 
        where org.organization_id       = otr.organization_id

   ELSE
      PLAN  otr
        where otr.org_type_cd           = d278_BBSUPPL_cd 
          and otr.active_ind        = request->active_flag
      JOIN  org 
        where org.organization_id       = otr.organization_id
          and org.active_ind        = request->active_flag 
   ENDIF

INTO  "nl:"  
   otr.org_type_cd,
   org.org_name
   
FROM 
   org_type_reltn otr,
   organization org

DETAIL
   qual_cnt = qual_cnt + 1
   IF (mod(qual_cnt, 10) = 1 and qual_cnt != 1)
       stat = alterlist(reply->qual, qual_cnt + 9)
   ENDIF
   reply->qual[qual_cnt]->organization_id  = otr.organization_id
   reply->qual[qual_cnt]->org_name         = org.org_name

WITH NOCOUNTER

SET  STAT = alterlist(reply->qual, qual_cnt)

SELECT INTO "nl:"
   *
FROM 
   bb_supplier bbs, 
   (dummyt d with seq  = value(qual_cnt))

PLAN  d
JOIN  bbs 
  where bbs.organization_id      = reply->qual[d.seq]->organization_id
    and bbs.active_ind = 1
DETAIL
   reply->qual[d.seq]->bb_supplier_id           = bbs.bb_supplier_id    
   reply->qual[d.seq]->barcode_value            = bbs.barcode_value 
   reply->qual[d.seq]->prefix_ind               = bbs.prefix_ind
   reply->qual[d.seq]->prefix_value             = bbs.prefix_value
   reply->qual[d.seq]->default_prefix_ind       = bbs.default_prefix_ind
   reply->qual[d.seq]->alpha_translation_ind    = bbs.alpha_translation_ind
   reply->qual[d.seq]->active_ind               = bbs.active_ind


WITH NOCOUNTER


        
                                      
SET sError_Check = ERROR(sErrorMsg,0)   ;get error message

IF (sError_Check = 0)
   IF (CURQUAL > 0)
      SET reply->status_data->status = "S"
   ELSE
      SET reply->status_data->status = "Z"
   ENDIF
ELSE
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
ENDIF


                                                          
SET qual_cnt = 0
set isbt_cnt = 0

set idx_var = 0

SELECT INTO "nl:"
   *
FROM 
   bb_isbt_supplier biss

    where expand(lCnt, 1, size(reply->qual,5), biss.organization_id, reply->qual[lCnt].organization_id)
    and biss.active_ind = 1 
    
    order by biss.organization_id, biss.isbt_supplier_fin
    
head biss.organization_id
   
    idx_var = 0
   
    loc_var = locateval(
                        idx_var2
                        ,1
                        ,size(reply->qual,5)
                        ,biss.organization_id
                        ,reply->qual[idx_var2]->organization_id
                        )
                        
head biss.isbt_supplier_fin

    if (loc_var != 0)

        idx_var = idx_var + 1
    
        stat = alterlist(reply->qual[loc_var]->isbt_sup_fin_list,idx_var)           
    
        reply->qual[loc_var]->isbt_sup_fin_list[idx_var]->bb_isbt_supplier_id = biss.bb_isbt_supplier_id
        reply->qual[loc_var]->isbt_sup_fin_list[idx_var]->isbt_fin = biss.isbt_supplier_fin
    
    endif
    
WITH NOCOUNTER

                                
SET sError_Check = ERROR(sErrorMsg,0)   ;get error message

IF (sError_Check = 0)
   IF (CURQUAL > 0)
      SET reply->status_data->status = "S"
   ELSE
      SET reply->status_data->status = "Z"
   ENDIF
ELSE
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
ENDIF

/*
call echo("     ")
    for (x = 1 to size(reply->qual,5))
        for (y = 1 to size(reply->qual[x]->isbt_sup_fin_list,5))
           
            call echo(build(
            
                
                reply->qual[x]->isbt_sup_fin_list[y]->bb_isbt_supplier_id  , "/",
                reply->qual[x]->isbt_sup_fin_list[y]->isbt_fin  
                
                ))
                
        endfor  

    endfor

*/

#EXIT_SCRIPT        
END GO

;Generated by GNU enscript 1.6.4.
