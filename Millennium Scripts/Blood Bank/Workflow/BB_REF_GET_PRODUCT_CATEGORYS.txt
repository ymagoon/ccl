 ;;Solution_Test/script/PathNet -- BB Transfusion/R_BBRefProductCategory/BB_REF_GET_PRODUCT_CATEGORYS.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Request #:              99999

        Product:                PathNet
        Product Team:           Blood Bank
        
        Program purpose:        Retrieve all product category information

        Executing from:         include\BBRefProductCategorys.cls
        Special Notes:          NONE 
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 09/12/00 Martin Myers         Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

DROP PROGRAM   bb_ref_get_product_categorys:dba GO
CREATE PROGRAM bb_ref_get_product_categorys:dba

/*
RECORD request
(
  1  active_flag        = i2
)
*/

RECORD reply
( 
   1 categorys[*]
     2 category_cd             = f8
     2 category_disp           = vc
     2 category_desc           = vc
     2 class_cd                = f8
     2 rh_required_ind         = i2
     2 confirm_required_ind    = i2
     2 crossmatch_required_ind = i2
     2 default_storage_temp_cd = f8
     2 default_ship_cond_cd    = f8
     2 default_unit_measure_cd = f8
     2 default_vis_insp_cd     = f8
     2 prompt_vol_ind          = i2
     2 prompt_alternate_ind    = i2
     2 prompt_segment_ind      = i2
     2 special_testing_ind     = i2
     2 crossmatch_tag_ind      = i2
     2 component_tag_ind       = i2
     2 pilot_label_ind         = i2
     2 valid_aborh_compat_ind  = i2
     2 active_ind              = i2
     2 updt_cnt                = i2
%i cclsource:status_block.inc
)

/***********************************************************************
*   Script                                                             *
***********************************************************************/
DECLARE nCnt = i2

SET nCnt = 0

SET sErrorMsg = FILLSTRING(255," ")
SET sError_Check = ERROR(sErrorMsg,1)

SET STAT = ALTERLIST(reply->categorys,10)

SELECT 
   IF (request->active_flag = 2)
      WHERE 1 = 1
   ELSE
      WHERE pc.active_ind = request->active_flag
   ENDIF
  
INTO "nl:" 

FROM 
   product_category pc
   
DETAIL
   nCnt = nCnt + 1
   IF (mod(nCnt,10) = 1 and nCnt != 1) 
      stat = ALTERLIST(reply->categorys,nCnt + 10)   
   ENDIF
   reply->categorys[nCnt]->category_cd             = pc.product_cat_cd
   reply->categorys[nCnt]->class_cd                = pc.product_class_cd
   reply->categorys[nCnt]->rh_required_ind         = pc.rh_required_ind
   reply->categorys[nCnt]->confirm_required_ind    = pc.confirm_required_ind
   reply->categorys[nCnt]->crossmatch_required_ind = pc.xmatch_required_ind
   reply->categorys[nCnt]->default_storage_temp_cd = pc.storage_temp_cd
   reply->categorys[nCnt]->default_ship_cond_cd    = pc.default_ship_cond_cd   
   reply->categorys[nCnt]->default_unit_measure_cd = pc.default_unit_measure_cd
   reply->categorys[nCnt]->default_vis_insp_cd     = pc.default_vis_insp_cd
   reply->categorys[nCnt]->prompt_vol_ind          = pc.prompt_vol_ind
   reply->categorys[nCnt]->prompt_alternate_ind    = pc.prompt_alternate_ind
   reply->categorys[nCnt]->prompt_segment_ind      = pc.prompt_segment_ind
   reply->categorys[nCnt]->crossmatch_tag_ind      = pc.crossmatch_tag_ind
   reply->categorys[nCnt]->special_testing_ind     = pc.special_testing_ind
   reply->categorys[nCnt]->component_tag_ind       = pc.component_tag_ind
   reply->categorys[nCnt]->pilot_label_ind         = pc.pilot_label_ind
   reply->categorys[nCnt]->valid_aborh_compat_ind  = pc.valid_aborh_compat_ind
   reply->categorys[nCnt]->active_ind              = pc.active_ind
   reply->categorys[nCnt]->updt_cnt                = pc.updt_cnt
   
WITH NOCOUNTER                              

SET STAT = ALTERLIST(reply->categorys, nCnt) 
SET sError_Check = ERROR(sErrorMsg,0)   ;get error message

IF (sError_Check = 0)
   IF (nCnt > 0)
      SET reply->status_data->status = "S"
   ELSE
      SET reply->status_data->status = "Z"
   ENDIF
ELSE
   SET reply->status_data->status = "F"
   SET reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
ENDIF

#EXIT_SCRIPT        
END GO

;Generated by GNU enscript 1.6.4.
