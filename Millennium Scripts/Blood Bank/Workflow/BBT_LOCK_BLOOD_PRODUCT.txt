 ;;Solution_Test/script/PathNet -- BB Transfusion/Bloodbankproductclass/BBT_LOCK_BLOOD_PRODUCT.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       bbt_lock_blood_product.prg
        Object name:            bbt_lock_blood_product
        Request #:              225021

        Product:                Pathnet                              
        Product Team:           Blood Bank
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Lock a blood product from use by another user
                                
        Tables read:            product
        Tables updated:         product
        Executing from:         Blood Bank Product Server 

        Special Notes:          none
******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 09/20/95 Teresa Davis         Initial Release                     *
;     002 01/29/95 Yvonne Klipfel       Add new CCL standard changes        *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program bbt_lock_blood_product:dba go
create program bbt_lock_blood_product:dba

/*
record request
(
 1  product_id = f8
 1  updt_cnt   = i4
)
*/

record reply
(
 1  product_updt_cnt        = i4
 1  product_updt_dt_tm      = dq8        
 1  product_updt_id         = f8
 1  product_updt_task       = i4
 1  product_updt_applctx    = i4
%i cclsource:status_block.inc
)


/* initialize variables */
set reply->status_data->status = "F"
set cur_updt_cnt = 0
set failed = "F"


/* lock row to update */
select into "nl:"
   p.product_id,
   p.locked_ind,
   p.updt_cnt

from product p

plan p where p.product_id = request->product_id

detail
   cur_updt_cnt = p.updt_cnt
   ; load the reply information for the lock
   set reply->product_updt_cnt = cur_updt_cnt + 1
   set reply->product_updt_dt_tm = cnvtdatetime(curdate, curtime3)         
   set reply->product_updt_id = reqinfo->updt_id
   set reply->product_updt_task = reqinfo->updt_task
   set reply->product_updt_applctx = reqinfo->updt_applctx

with nocounter, forupdate(p)


if (curqual != 1)
   set failed = "T"
   go to exit_script
endif


/* determine if the row has already been changed */
if (request->updt_cnt != cur_updt_cnt)
   set failed = "T"
   set reply->status_data->status = "C"
   go to exit_script
endif

        
/* update product table */
update into product p set
    p.locked_ind = 1,
    p.updt_cnt = p.updt_cnt + 1,
    p.updt_dt_tm = cnvtdatetime(curdate, curtime3),
    p.updt_id = reqinfo->updt_id,
    p.updt_task = reqinfo->updt_task,
    p.updt_applctx = reqinfo->updt_applctx

plan p where p.product_id = request->product_id     
               and (p.locked_ind is null
                   or p.locked_ind = 0)
               and p.updt_cnt = request->updt_cnt

with nocounter


if (curqual != 1)
   set failed = "T"
endif


/* exit the script, returning status and whether to commit or not */
#exit_script
if (failed = "T")
   set reqinfo->commit_ind = 0
   set reply->status_data->status = "F"
else
   set reqinfo->commit_ind = 1
   set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
