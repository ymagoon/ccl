 ;;Solution_Test/script/PathNet -- Anatomic Pathology/aps_chg_assign_format/aps_chg_assign_format.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
	Source file name:       aps_chg_assign_format.prg
	Object name:            aps_chg_assign_format
	Request #:              200244

	Product:                Anatomic Pathology                              
	Product Team:           Anatomic Pathology
	HNA Version:            500
	CCL Version:            4.0
	
	Program purpose:        Save assign format details

	Tables read:            sign_line_dta_r, SIGN_LINE_LAYOUT_FIELD_R 
              
	Tables updated:         sign_line_dta_r, SIGN_LINE_LAYOUT_FIELD_R 

	Executing from:         DB Signature Line Format

	Special Notes:          ?

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- --------------------	----------------------------------- *
;    *### 07/28/97 Adam Clark           Initial Release                     * 
;    *001 11/22/06 CERKYP               Update to save EP relationships.    *
;    *002 08/22/07 Eh012472             Update to save layout field relation*
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
  drop program aps_chg_assign_format:dba go
  create program aps_chg_assign_format:dba
  /***********************************************************************
  *   Request Record                                                     *
  ***********************************************************************/
  /*
  (
   1  activity_subtype_cd = f8
   1  status_flag         = i2
   1  format_id           = f8
   1  add_task_qual[*]
      2  task_assay_cd    = f8
   1  del_task_qual[*]
      2  task_assay_cd    = f8
   1  ep_qual[*]
      2 cki_source        = c12
      2 cki_identifier    = vc
   1 layout_field_qual[*]
      2 ucmr_layout_field_id = f8
  )
  */

  /***********************************************************************
  *   Reply Record                                                       *
  ***********************************************************************/
  record reply
  (                                

%i cclsource:status_block.inc

  )
  /***********************************************************************
  *   Script                                                             *
  ***********************************************************************/
declare ep_cnt = i4 with noconstant(0), protect
declare lf_cnt = i4 with noconstant(0), protect

#SCRIPT                                  
set reply->status_data->status 	= "F"
set cnt                         = 0
set number_to_del               = size(request->del_task_qual,5)
set number_to_add               = size(request->add_task_qual,5)
set ep_cnt                      = size(request->ep_qual, 5)
set lf_cnt                      = size(request->layout_field_qual, 5)

set reqinfo->commit_ind         = 0

if (number_to_del > 0)
  ;********************************************************
  ;*** Delete existing matching SIGN_LINE_DTA_R records ***
  ;********************************************************
  delete from sign_line_dta_r sldr,
              (dummyt d with seq = value(number_to_del)) 
  
  set   sldr.seq = 1

  plan d
  join sldr 
   where sldr.activity_subtype_cd = request->activity_subtype_cd and
	 sldr.status_flag = request->status_flag and
  	 sldr.task_assay_cd = request->del_task_qual[d.seq].task_assay_cd

  with nocounter
      
  if (curqual != number_to_del)
    set stat = alter(reply->status_data->subeventstatus,1)
    set reply->status_data->subeventstatus[1]->operationstatus   = "F"
    set reply->status_data->subeventstatus[1]->operationname = "Delete"
    set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_dta_r"
    set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)        
    go to exit_script
  endif
endif

if (number_to_add >  0)
  ;******************************************************
  ;*** Add new records into the SIGN_LINE_DTA_R table ***
  ;******************************************************
  insert into sign_line_dta_r sldr,
            (dummyt d with seq = value(number_to_add)) set

    sldr.activity_subtype_cd = request->activity_subtype_cd,
    sldr.status_flag	     = request->status_flag,
    sldr.format_id           = request->format_id,
    sldr.task_assay_cd       = request->add_task_qual[d.seq].task_assay_cd,
    sldr.updt_cnt            = 0,
    sldr.updt_dt_tm          = cnvtdatetime(curdate,curtime3),
    sldr.updt_id             = reqinfo->updt_id,
    sldr.updt_task           = reqinfo->updt_task,
    sldr.updt_applctx        = reqinfo->updt_applctx

  plan d
  join sldr 

  with nocounter

  if (curqual != number_to_add)
     set stat = alter(reply->status_data->subeventstatus,1)
     set reply->status_data->subeventstatus[1]->operationstatus = "F"
     set reply->status_data->subeventstatus[1]->operationname =  "Insert"
     set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_dta_r"
     set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
     go to exit_script
  endif
endif


;**********************************************
;*** Delete and recreate the SIGN_LINE_EP_R ***
;**********************************************
delete from
  sign_line_ep_r sler
plan sler
  where sler.format_id = request->format_id
with nocounter

if (ep_cnt > 0)
  insert into
    sign_line_ep_r sler,
    (dummyt d with seq = ep_cnt)
    set
      sler.sign_line_ep_r_id = seq(reference_seq, nextval),
      sler.cki_source = request->ep_qual[d.seq].cki_source,
      sler.cki_identifier = request->ep_qual[d.seq].cki_identifier,
      sler.format_id = request->format_id,
      sler.status_flag = request->status_flag,
      sler.active_ind = 1
  plan d
  join sler
  with nocounter
  
  if (curqual != ep_cnt)
     set stat = alter(reply->status_data->subeventstatus,1)
     set reply->status_data->subeventstatus[1]->operationstatus = "F"
     set reply->status_data->subeventstatus[1]->operationname =  "Insert"
     set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_ep_r"
     set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
     go to exit_script  
  endif
endif



;******************************************************
;*** Delete and recreate the SIGN_LINE_LAYOUT_FIELD_R  ***
;******************************************************
delete from
  SIGN_LINE_LAYOUT_FIELD_R  slfr
plan slfr
  where slfr.format_id = request->format_id
    and slfr.status_flag = request->status_flag
with nocounter

if (lf_cnt > 0)
  insert into
    SIGN_LINE_LAYOUT_FIELD_R  slfr,
    (dummyt d with seq = lf_cnt)
    set
      slfr.SIGN_LINE_LAYOUT_FIELD_R_ID = seq(reference_seq, nextval),
      slfr.format_id = request->format_id,
      slfr.UCMR_LAYOUT_FIELD_ID = request->layout_field_qual[d.seq].ucmr_layout_field_id,
      slfr.status_flag = request->status_flag,
      slfr.active_ind = 1
  plan d
  join slfr
  with nocounter
  
  if (curqual != lf_cnt)
     set stat = alter(reply->status_data->subeventstatus,1)
     set reply->status_data->subeventstatus[1]->operationstatus = "F"
     set reply->status_data->subeventstatus[1]->operationname =  "Insert"
     set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "SIGN_LINE_LAYOUT_FIELD_R "
     set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
     go to exit_script  
  endif
endif


set reqinfo->commit_ind = 1  
set reply->status_data->status = "S"

#exit_script
end 
go

;Generated by GNU enscript 1.6.4.
