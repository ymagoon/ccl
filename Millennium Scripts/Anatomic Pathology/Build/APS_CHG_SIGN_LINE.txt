 ;;Solution_Test/script/PathNet -- Anatomic Pathology/aps_chg_sign_line/aps_chg_sign_line.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
	Source file name:       aps_chg_sign_line.prg
	Object name:            aps_chg_sign_line
	Request #:		200179

	Product:		Anatomic Pathology                              
	Product Team:		Anatomic Pathology
	HNA Version:            500
	CCL Version:            4.0
	
	Program purpose:        Save sign line format details.

	Tables read:            sign_line_format
				sign_line_format_detail                        
               
	Tables updated:		sign_line_format
				sign_line_format_detail                        

	Executing from:         DB Signature Line Format

	Special Notes:		"Rocket, YEAH!!"

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer		Comment 			    *
;    *--- -------- --------------------	----------------------------------- *
;     ### 07/28/97 Adam Clark		Initial Release			    * 
;~DE~************************************************************************

;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
  drop program aps_chg_sign_line:dba go
  create program aps_chg_sign_line:dba
  /***********************************************************************
  *   Request Record                                                     *
  ***********************************************************************/
  /*
  (
   1  format_id    	= f8
   1  description  	= c60
   1  active_ind 	= i2
   1  action_flag 	= c1
   1  updt_cnt          = i4
   1  detail_qual[*]
      2  sequence       = i4
      2  line_nbr  	= i4
      2  column_pos 	= i4
      2  data_elem_cd  	= f8
      2  data_elem_fmt_cd  = f8
      2  literal_display = c100
      2  literal_size	= i4
      2  max_size	= i4
      2  suppress_line_ind = i2
  )
  */

  /***********************************************************************
  *   Reply Record                                                       *
  ***********************************************************************/
  record reply
  (                                
   1 updt_cnt		= i4
   1 format_id     	= f8

%i cclsource:status_block.inc

  )
  /***********************************************************************
  *   Script                                                             *
  ***********************************************************************/

 #SCRIPT                                  
  set reply->status_data->status 	= "F"
  set cnt              			= 0
  set cur_updt_cnt 			= 0
  set number_to_del		 	= 0
  set number_to_add			= size(request->detail_qual,5)

  ;*****************************************
  ; Check for existing dups
  ;*****************************************
  select into "nl:"
    slf.description
  from
    sign_line_format slf
  plan slf
    where cnvtupper(request->description) = cnvtupper(slf.description) and
      request->format_id != slf.format_id
    
  detail
    reply->updt_cnt                 = slf.updt_cnt
    request->updt_cnt		    = reply->updt_cnt
    reply->format_id		    = slf.format_id

  with
    nocounter

  if (curqual > 0)
    set reply->status_data->status = "P"
    go to exit_script
  endif

;***************************************
; Add new sign line format
;***************************************
if (request->format_id = 0.00) 

  ;*************************
  ;*** Get new format_id ***
  ;*************************
  select into "nl:"              
    seq_nbr = seq(reference_seq, nextval) "##################;rp0"
  from dual
  
  detail
    request->format_id = cnvtreal(seq_nbr)
  with format, counter
  if (curqual = 0)
       go to SEQ_FAILED
  endif
  
  ;***************************************
  ;*** Add new sign_line_format record ***
  ;***************************************
  insert into sign_line_format slf set

      slf.format_id           = request->format_id,
      slf.description         = request->description,
      slf.active_ind          = request->active_ind,
      slf.updt_cnt            = 0,
      slf.updt_dt_tm          = cnvtdatetime(curdate,curtime3),
      slf.updt_id             = reqinfo->updt_id,
      slf.updt_task           = reqinfo->updt_task,
      slf.updt_applctx        = reqinfo->updt_applctx

  with nocounter

  if (curqual = 0)
     set stat = alter(reply->status_data->subeventstatus,1)
     set reply->status_data->subeventstatus[1]->operationstatus = "F"
     set reply->status_data->subeventstatus[1]->operationname =  "Insert"
     set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format"
     set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
        
     rollback
     go to exit_script
  endif

;****************************************
;*** Modify existing sign line format ***
;****************************************
else
  if (request->action_flag = "c")
    ;***************************************
    ;*** Lock the SIGN_LINE_FORMAT table ***
    ;***************************************
    select into "nl:"
      slf.description

    from        
      sign_line_format slf

    where slf.format_id = request->format_id
  
    detail
      cur_updt_cnt = slf.updt_cnt
    with nocounter, forupdate(slf)

    if (curqual = 0)
      set stat = alter(reply->status_data->subeventstatus,1)
      set reply->status_data->subeventstatus[1]->operationstatus   = "F"
      set reply->status_data->subeventstatus[1]->operationname = "Lock"
      set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format"
      set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
        
      rollback
      go to exit_script
    endif

    ;********************************************
    ;*** Check if change already took place.  ***
    ;********************************************
    if (request->updt_cnt != cur_updt_cnt)
      set stat = alter(reply->status_data->subeventstatus,1)
      set reply->status_data->subeventstatus[1]->operationstatus   = "F"
      set reply->status_data->subeventstatus[1]->operationname = "VerifyChg"
      set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format"
      set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
        
      rollback
      go to exit_script
    endif

    ;**************************************
    ;*** Update SIGN_LINE_FORMAT record ***
    ;**************************************
    update into sign_line_format slf set
      slf.description       = request->description,
      slf.active_ind        = request->active_ind,
      slf.updt_cnt          = slf.updt_cnt + 1,
      slf.updt_dt_tm        = cnvtdatetime(curdate,curtime3),
      slf.updt_id           = reqinfo->updt_id,
      slf.updt_task         = reqinfo->updt_task,   
      slf.updt_applctx      = reqinfo->updt_applctx
       
    where slf.format_id = request->format_id
  
    with nocounter

    if (curqual = 0)
      set stat = alter(reply->status_data->subeventstatus,1)
      set reply->status_data->subeventstatus[1]->operationstatus   = "F"
      set reply->status_data->subeventstatus[1]->operationname = "Update"
      set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format"
      set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("format_id: ",request->format_id)
        
      rollback
      go to exit_script
    endif

  endif
endif

if (number_to_add > 0)
  ;********************************************************************
  ;*** Determine how many SIGN_LINE_FORMAT_DETAIL records there are ***
  ;********************************************************************
   select into "nl:"
       slfd.format_id

   from sign_line_format_detail slfd

   where slfd.format_id = request->format_id

   head report
       number_to_del = 0
        
   detail 
       number_to_del = number_to_del + 1
   
   with nocounter

  ;*******************************************************
  ;*** Delete existing SIGN_LINE_FORMAT_DETAIL records ***
  ;*******************************************************
   delete from sign_line_format_detail slfd,
              (dummyt d with seq = value(number_to_del)) 
  
   set  slfd.format_id         = request->format_id

   plan d
   join slfd where slfd.format_id = request->format_id
        
   with nocounter
      
   if (curqual != number_to_del)
      set stat = alter(reply->status_data->subeventstatus,1)
      set reply->status_data->subeventstatus[1]->operationstatus   = "F"
      set reply->status_data->subeventstatus[1]->operationname = "Delete"
      set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format_detail"
      set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("number_to_del: ",number_to_del)        
      rollback
      go to exit_script
   endif

  ;**************************************************************
  ;*** Add new records into the SIGN_LINE_FORMAT_DETAIL table ***
  ;**************************************************************
   insert into sign_line_format_detail slfd,
            (dummyt d with seq = value(number_to_add)) set

        slfd.format_id           = request->format_id,
        slfd.sequence            = request->detail_qual[d.seq].sequence,
        slfd.line_nbr            = request->detail_qual[d.seq].line_nbr,
        slfd.column_pos          = request->detail_qual[d.seq].column_pos,
        slfd.data_element_cd     = request->detail_qual[d.seq].data_elem_cd,
        slfd.data_element_format_cd = request->detail_qual[d.seq].data_elem_fmt_cd,
        slfd.literal_display     = request->detail_qual[d.seq].literal_display,
        slfd.literal_size        = request->detail_qual[d.seq].literal_size,
        slfd.max_size            = request->detail_qual[d.seq].max_size,
        slfd.suppress_line_ind   = request->detail_qual[d.seq].suppress_line_ind,
        slfd.updt_cnt            = 0,
        slfd.updt_dt_tm          = cnvtdatetime(curdate,curtime3),
        slfd.updt_id             = reqinfo->updt_id,
        slfd.updt_task           = reqinfo->updt_task,
        slfd.updt_applctx        = reqinfo->updt_applctx

   plan d
   join slfd 

   with nocounter

   if (curqual != number_to_add)
       set stat = alter(reply->status_data->subeventstatus,1)
       set reply->status_data->subeventstatus[1]->operationstatus = "F"
       set reply->status_data->subeventstatus[1]->operationname =  "Insert"
       set reply->status_data->subeventstatus[1]->targetobjectname 
                                  = "sign_line_format_detail"
       set reply->status_data->subeventstatus[1]->targetobjectvalue
                                  = build("number_to_add: ",number_to_add)
        
       rollback
       go to exit_script
   endif
endif

commit  
set reply->format_id = request->format_id
set reply->updt_cnt = request->updt_cnt
set reply->status_data->status = "S"
go to exit_script

#SEQ_FAILED
  set reply->status_data->subeventstatus[1]->OperationName
     = "nextval"
  set reply->status_data->subeventstatus[1]->OperationStatus
     = "F"
  set reply->status_data->subeventstatus[1]->TargetObjectName
     = "seq"
  set reply->status_data->subeventstatus[1]->TargetObjectValue
     = "PATHNET_SEQ"
  go to EXIT_SCRIPT

#exit_script
end 
go

;Generated by GNU enscript 1.6.4.
