 ;;Solution_Test/script/PathNet -- Gen Lab/glb_rdm_upd_qc_event_dt_tm_c/glb_rdm_upd_qc_event_dt_tm_c.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-2005 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
 
 
        Source file name:   glb_rdm_upd_qc_event_dt_tm_c.prg
        Object name:        glb_rdm_upd_qc_event_dt_tm_c
        Request #:          N/A
 
        Product:            Database Architecture
        Product Team:       Data Access Review
        HNA Version:        500
        CCL Version:        8.0
 
        Program purpose:  This is the child script glb_rdm_upd_qc_event_dt_tm_c to update rows
                          to the table concurrently along with two other readmes.  This will grab a range
                          of data and update the qc_result_event table based on this range, by calling
                          the glb_rdm_upd_qc_event_dt_tm_cc script for this range and then will grab a range
                          of data and update the qc_result table based on the same range, by calling
                          the glb_rdm_upd_qc_event_dt_tm_cc2 script for this range  
        Tables read:      dm_info, qc_result 
 
        Tables updated:   dm_info
 
        Executing from:   
 
        Special Notes:    This is a readme

        Legend:             Variables should be prefixed with scope and type,
                            followed by an underscore and deobjective variable name.

                            Variable Scope Abbreviations    Variable Type Abbreviations
                            p - private                     n - i2
                            m - protect                     l - i2
                            g - public                      f - f8
                            u - persistobject               d - dq8
                                                            s - vc
                                                            c - c

                            Examples:
                            pn_status_ind = private, i2
                            gf_number     = public, f8

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     01 06/15/2006 MD013471             Initial Release                    *
;     02 07/17/2007 JH016266			Re: CR#1-1195158251			   		*
;									Removed if-conditional in          		*	
;									#EXIT_PROGRAM	         		   		*
;     03 03/17/2008 VA017112			Code updated based on new template	*
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

  drop program glb_rdm_upd_qc_event_dt_tm_c:dba go
create program glb_rdm_upd_qc_event_dt_tm_c:dba

%i cclsource:dm_readme_data.inc
%i cclsource:dm_run_parallel_c.inc
 
set readme_data->status = 'F'
set readme_data->message = concat('FAILED STARTING README ', cnvtstring( readme_data->readme_id,32,2))

; Declare variables
declare ms_child_info_domain_nm = vc with protect, noconstant("")
declare ms_range_prefix			= vc with protect, noconstant("")
declare ms_child_max_name       = vc with protect, noconstant("")
declare ms_child_max_name2      = vc with protect, noconstant("")
declare ms_child_script			= vc with protect, noconstant("")
declare ms_child_script2			= vc with protect, noconstant("")



;Set the default variables here based on the comments

; This variable will store a name for the readme process.  This name will be associated
; with all the rows on dm_info that store the default ranges
; NOTE:  THIS MUST MATCH THE NAME IN MS_INFO_DOMAIN_NM FROM THE PARENT SCRIPT OR THIS WILL NOT WORK
set ms_child_info_domain_nm = "RDM_UPD_QC_EVENT_DT_TM PROCESS"


; This variable will store the prefix attached to the range names
; NOTE:  THIS MUST MATCH THE NAME IN MS_RANGE_PREFIX FROM THE PARENT SCRIPT OR THIS WILL NOT WORK
set ms_range_prefix = "QC_RESULT_ID RANGE "


; mf_child_max_name will have the maximum row reviewed on the dm_info table
; If the id you are breaking into ranges is person_id, this would be named
; MAX PERSON_ID EVALUATED
; NOTE:  THIS MUST MATCH THE NAME IN MS_MAX_NAME FROM THE PARENT SCRIPT OR THIS WILL NOT WORK
set ms_child_max_name = "MAX QC_RESULT_ID EVALUATED QRE"
set ms_child_max_name2 = "MAX QC_RESULT_ID EVALUATED QR"

; ms_child_script will store the name of the script (like "pm_rdm_address_type_cc")
set ms_child_script = "glb_rdm_upd_qc_event_dt_tm_cc"
set ms_child_script2 = "glb_rdm_upd_qc_event_dt_tm_cc2"

; Claim a range to work on
if(sbr_claim_min_max_row(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name) IN (2, 0))
	go to EXIT_PROGRAM
endif

if(sbr_claim_min_max_row(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name2) IN (2, 0))
	go to EXIT_PROGRAM
endif

; Fetch the minimum and maximum ID to be used
if(sbr_fetch_min_max(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name, mf_max_range_id, mf_min_range_id) IN (2, 0))
	go to EXIT_PROGRAM
endif

if(sbr_fetch_min_max(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name2, mf_max_range_id, mf_min_range_id) IN (2, 0))
	go to EXIT_PROGRAM
endif

; Run the child script to do the work
; If there was either an error, exit to the end of the script
if(sbr_run_child(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name, ms_child_script, 
									mf_max_range_id, mf_min_range_id) IN (2, 0))
	go to EXIT_PROGRAM
endif

if(sbr_run_child(ms_child_info_domain_nm, ms_range_prefix, ms_child_max_name2, ms_child_script2, 
									mf_max_range_id, mf_min_range_id) IN (2, 0))
	go to EXIT_PROGRAM
endif

set readme_data->status = "S"
set readme_data->message = "Readme completed all work successfully"

#EXIT_PROGRAM

;if the readme was not successful rollback
if (readme_data->status = 'F')
  rollback
endif

execute dm_readme_status
call echorecord(readme_data)

end go

;Generated by GNU enscript 1.6.4.
