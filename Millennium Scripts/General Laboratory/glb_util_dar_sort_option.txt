 ;;Solution_Test/script/PathNet -- Gen Lab/glb_util_dar_sort_option/glb_util_dar_sort_option.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2000 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       GLB_UTIL_DAR_SORT_OPTION.prg
        Object name:            GLB_UTIL_DAR_SORT_OPTION
        Request #:              n/a

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Utility to initialize the new sort option
                                parameter for operation jobs which produce
                                Daily Activity Reports.

        Tables read:            code_value

        Tables updated:         code_value

        Executing from:         ReadMe Step

        Special Notes:          The new sub sort parameter will be added to
                                the end of the definition field value on 
                                code set 1950 where the cdf meaning values
                                are either DAR, COR, or EXC.
*****************************************************************************/
/*~DB~************************************************************************
      *                      GENERATED MODIFICATION CONTROL LOG              *
      ************************************************************************
      *                                                                      *
      *Mod Date     Engineer             Comment                             *
      *--- -------- -------------------- ----------------------------------- *
      *000 02/14/00 Hal Patchen          Initial Release                     *
  ~DE~************************************************************************

~END~ ******************  END OF ALL MODCONTROL BLOCKS  *********************/

         drop program GLB_UTIL_DAR_SORT_OPTION:dba go
         create program GLB_UTIL_DAR_SORT_OPTION:dba

      /***********************************************************************
      * Internal Record                                                      *
      ***********************************************************************/
      record internal
      (
         1  qual_cnt                   = i4
         1  qual[*]
            2  code_value              = f8
            2  cdf_mean                = vc
            2  definition              = vc
      )

      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set q_cnt = 0
         set parm_string = fillstring(100, " ")
         set paramarray[13] = fillstring(15, " ")
         
      /***********************************************************************
      * Load code values                                                     *
      ***********************************************************************/
         select into "nl:"
            cv.code_value

         from
            code_value cv
	     
         plan cv
           where cv.code_set = 1950
	       and cv.cdf_meaning in ("DAR", "COR", "EXC")
	       and cv.active_ind = 1
	       
         head report
            q_cnt = 0
            ptr = 0
            start_ptr = 0
            param_idx = 0
            parm_len = 0
            sort_parm_found = 0
            
         detail
            parm_string = trim(cv.definition)
            sort_parm_found = 0
            case(cv.cdf_meaning)
              of "EXC":
                 ;* Locate the individual parameters in parm_string 
                 ;* and put them in the param array.
                 ptr = 1
                 start_ptr = 1
                 param_idx = 1
                 for (param_idx = 1 TO 13)
                    ptr = findstring(",", parm_string, start_ptr)
                    if (ptr < 1)
                       ptr = 100
                    endif
                    parm_len = ptr - start_ptr
                    paramarray[param_idx] = 
                      trim(substring(start_ptr, parm_len, parm_string), 3)
                    start_ptr = ptr + 1
                 endfor
                 ;* Determine if sort option parameter exists.
                 if (trim(paramarray[13], 3) = "0"
                 or trim(paramarray[13], 3) = "1")
                    sort_parm_found = 1
                 endif
              else  ;"DAR", "COR"
                 ;* Locate the individual parameters in parm_string 
                 ;* and put them in the param array.
                 ptr = 1
                 start_ptr = 1
                 param_idx = 1
                 for (param_idx = 1 TO 4)
                    ptr = findstring(",", parm_string, start_ptr)
                    if (ptr < 1)
                       ptr = 100
                    endif
                    parm_len = ptr - start_ptr
                    paramarray[param_idx] = 
                      trim(substring(start_ptr, parm_len, parm_string), 3)
                    start_ptr = ptr + 1
                 endfor
                 ;* Determine if sort option parameter exists.
                 if (trim(paramarray[4], 3) = "0"
                 or  trim(paramarray[4], 3) = "1")
                    sort_parm_found = 1
                 endif
            endcase
            if (sort_parm_found = 0)
               q_cnt = q_cnt + 1
               if (mod(q_cnt, 100) = 1)
                  stat = alterlist(internal->qual, q_cnt + 100)
               endif
               internal->qual_cnt = q_cnt
               internal->qual[q_cnt].code_value = cv.code_value
               internal->qual[q_cnt].cdf_mean = cv.cdf_meaning
               internal->qual[q_cnt].definition = cv.definition
            endif
            
         foot report      
            stat = alterlist(internal->qual, q_cnt)
            
         with 
           nocounter
         
/***DEBUG***
         call echo(build("q_cnt =", internal->qual_cnt))
         for (q_cnt = 1 to internal->qual_cnt)
            call echo(build("code_value =", internal->qual[q_cnt].code_value))
            call echo(build("cdf_mean =", internal->qual[q_cnt].cdf_mean))
            call echo(build("definition =", internal->qual[q_cnt].definition))
            call echo(" ",1)
         endfor
***DEBUG***/
         
      /***********************************************************************
      * Update code values for code set 1950                                 *
      ***********************************************************************/
         ;* Update definition field by appending the appropriate
         ;* default sort flag value based on the report type.
         for (q_cnt = 1 to internal->qual_cnt)
            case(internal->qual[q_cnt].cdf_mean)
              of "DAR":
                 set internal->qual[q_cnt].definition = 
                   concat(trim(internal->qual[q_cnt].definition,3), 
                   ",0")
              of "COR":
                 set internal->qual[q_cnt].definition = 
                   concat(trim(internal->qual[q_cnt].definition,3),
                   ",1")
              of "EXC":
                 set internal->qual[q_cnt].definition = 
                   concat(trim(internal->qual[q_cnt].definition,3),
                   ",1")
            endcase
            
            ;* Update code set 1950 defintion fields.
            update into code_value cv
            set
               cv.definition = internal->qual[q_cnt].definition
            plan cv
              where cv.code_value = internal->qual[q_cnt].code_value
            with
               nocounter
               
            if (curqual = 1)
               commit
            endif
         endfor
         
      #Exit_Script
         end
         go

;Generated by GNU enscript 1.6.4.
