 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_bre_accns/glb_get_bre_accns.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_bre_accns.prg
        Object name:            glb_get_bre_accns
        Request #:              250096

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Retrieve available accessions for Batch
                                Result Entry.

        Tables read:            order_serv_res_container
                                orders
                                code_value
                                accession_order_r

        Tables updated:         None
        Executing from:         Batch Result Entry

        Special Notes:          

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 01/16/98 Jeff Fry             Initial Release                     *
;    *001 09/17/99 Chris Heil           Add distinct clause.                *
;    *002 04/21/00 Gary Runde           Qual on activity_type_cd            *
;    *003 02/14/02 Amy Henry            Change the UAR calls to directly    *
;    *                                  put in the cdf meanings in each     *
;    *                                  call                                * 
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_BRE_ACCNS:dba go
             create program GLB_GET_BRE_ACCNS:dba

;cclseclogin                                                ;002

      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  service_resource_cd          = f8
         1  catalog_cd                   = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/

      record reply
      ( 
         1  qual[*]
            2  accession                 = c20
            2  activity_type_cd          = f8
            2  activity_type_mean        = vc
%i cclsource:status_block.inc
      )

      
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set CV_REQUIRED_RECS              = 2
         declare cv_cnt                    = i4
         set ACTIVITY_TYPE_CODESET         = 106

        /* replacing set statements with declare statements ;003 *
         * set ACTIVITY_TYPE_GLB_CDF         = "GLB"     ;003 
         * set ACTIVITY_TYPE_HLA_CDF         = "HLA"     ;003   
         * set ACTIVITY_TYPE_BB_CDF          = "BBDONORPROD"    ;002 ;003 */
  
         set ORDER_STATUS_CODESET          = 6004
         set ORDER_STATUS_ORDERED_CDF      = "ORDERED"
         set ORDER_STATUS_INPROCESS_CDF    = "INPROCESS"

         set SERV_RES_SUBSECTION_CDF       = "SUBSECTION"


         declare order_status_ordered_cd   = f8
         declare order_status_inprocess_cd = f8

       
        declare activity_type_glb_cd = f8                                  ;002  
        declare activity_type_hla_cd = f8                                  ;002 
        declare activity_type_bb_cd  = f8                                  ;002 

         set a_cnt                         = 0



         set stat = uar_get_meaning_by_codeset(ACTIVITY_TYPE_CODESET, 
                                               "GLB", 1, activity_type_glb_cd)    ;002;003
         set stat = uar_get_meaning_by_codeset(ACTIVITY_TYPE_CODESET, 
                                               "HLA", 1, activity_type_hla_cd)    ;002 ;003
         set stat = uar_get_meaning_by_codeset(ACTIVITY_TYPE_CODESET, 
                                               "BBDONORPROD", 1, activity_type_bb_cd)  ;002 ;003

         set reply->status_data.status = "F"

      /***********************************************************************
      * Load order status status code values                                 *
      ***********************************************************************/
         set cv_cnt = 0

         select into "nl:"
            cv.code_set,
            cv.code_value
         from
            code_value cv
         where (cv.code_set = ORDER_STATUS_CODESET
            and cv.cdf_meaning in (ORDER_STATUS_ORDERED_CDF,
                                   ORDER_STATUS_INPROCESS_CDF))
           and cv.active_ind = 1
           and (cv.begin_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
             and  cv.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3))
         detail
            case (cv.cdf_meaning)
              of ORDER_STATUS_ORDERED_CDF:
                 order_status_ordered_cd = cv.code_value
                 cv_cnt = cv_cnt + 1
              of ORDER_STATUS_INPROCESS_CDF:
                 order_status_inprocess_cd = cv.code_value
                 cv_cnt = cv_cnt + 1
            endcase
         with nocounter

         ;* Verify that all required code value records were read.
         if (cv_cnt != CV_REQUIRED_RECS)
            set reply->status_data.subeventstatus[1].operationname = 
                "GET"
            set reply->status_data.subeventstatus[1].operationstatus = "F"
            set reply->status_data.subeventstatus[1].targetobjectname = 
                "Code_Value Table"
            set reply->status_data.subeventstatus[1].targetobjectvalue = 
                "Failure loading order statuses (Ordered, In-Process)."
            go to Exit_Script
         endif

      /***********************************************************************
      * Retrieve qualified accessions                                        *
      ***********************************************************************/


;001         select into "nl:"
         select distinct into "nl:"      ;001
            osrc.order_id,
            o.order_status_cd,
            aor.accession
         from
            order_serv_res_container osrc,
            orders o,
            accession_order_r aor
         plan osrc
            where osrc.service_resource_cd = request->service_resource_cd
              and osrc.status_flag = 1
              and osrc.current_location_cd = osrc.location_cd
         join o
            where o.order_id = osrc.order_id
              and o.catalog_cd = request->catalog_cd
              and o.order_status_cd in (order_status_ordered_cd,
                                        order_status_inprocess_cd)
              and o.activity_type_cd in (activity_type_glb_cd, activity_type_hla_cd,
                                         activity_type_bb_cd)                                 ;002
         join aor
            where aor.order_id = o.order_id

         order by aor.accession, 0        ;001

         head aor.accession
            a_cnt = a_cnt + 1
            if (mod(a_cnt, 10) = 1)
               stat = alterlist(reply->qual, a_cnt + 10)
            endif
            reply->qual[a_cnt].accession = aor.accession
            reply->qual[a_cnt].activity_type_cd = o.activity_type_cd                          ;002
            reply->qual[a_cnt].activity_type_mean = uar_get_code_meaning(o.activity_type_cd)  ;002
            call echo(aor.accession)
         with nocounter

         call echo(build("Qualified Accessions = ", a_cnt))

         set stat = alterlist(reply->qual, a_cnt)

         if (a_cnt > 0)
            set reply->status_data.status = "S"
         else
            set reply->status_data.status = "Z"
         endif

      #Exit_Script
         end
         go

;Generated by GNU enscript 1.6.4.
