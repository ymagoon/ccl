 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_interp_components/glb_get_interp_components.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_interp_components.prg
        Object name:            glb_get_interp_components
        Request #:              250111

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Load the interpretation components for a
                                given interp procedure at a given service
                                resource.

        Tables read:            interp_task_assay,
                                interp_component

        Tables updated:         None
        Executing from:         

        Special Notes:          Since service resource can be specified or
                                set to null on the interp_task_assay table,
                                Return interp components for a specific
                                service resource unless no record exists.
                                If a specific resource record doesn't exist 
                                for a given task assay, then use the null
                                service resource record if it exists.

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 09/05/96 Hal Patchen          Initial Release                     *
;    *001 03/22/06 Joe Troy             Added order_id for pass back on interps for MDI *
;    *002 03/16/10 Abhroneel Chowdhury  Fix for CR 1-3816305631             *
;~DE~************************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_INTERP_COMPONENTS:dba go
             create program GLB_GET_INTERP_COMPONENTS:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  interp[*]
            2  task_assay_cd             = f8
            2  service_resource_cd       = f8
            2  order_id                  = f8
            2  include_inactive_ind      = i2
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
         1  qual[*]
            2  interp_id                 = f8
            2  task_assay_cd             = f8
            2  service_resource_cd       = f8
            2  interp_type_cd            = f8
            2  interp_type_disp          = vc
            2  interp_type_mean          = c12
            2  interp_option_cd          = f8
            2  interp_option_disp        = vc
            2  interp_option_mean        = c12
            2  generate_interp_flag      = i4
            2  order_cat_cd              = f8
            2  phase_cd                  = f8
            2  phase_disp                = vc
            2  phase_mean                = c12
            2  component[*]
               3  interp_detail_id       = f8
               3  sequence               = i4
               3  included_assay_cd      = f8
               3  cross_drawn_dt_tm_ind  = i2
               3  time_window_minutes    = i4
               3  time_window_units_cd   = f8
               3  time_window_units_disp = vc
               3  result_req_flag        = i4
               3  verified_flag          = i4
            2 order_id                   = f8
%i cclsource:status_block.inc
      )
      
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         declare stat                    = i4
         declare nbr_interps             = i4
         declare q_cnt                   = i4
         declare c_cnt                   = i4

         set reply->status_data.status = "F"

      /***********************************************************************
      * Select interp components.                                            *
      ***********************************************************************/
         set nbr_interps = size(request->interp,5)
         set stat = alterlist(reply->qual, nbr_interps)
         ;* build default reply record
         for (q_cnt = 1 to nbr_interps)
            set reply->qual[q_cnt].task_assay_cd =
              request->interp[q_cnt].task_assay_cd
            set reply->qual[q_cnt].service_resource_cd =
              request->interp[q_cnt].service_resource_cd
            set reply->qual[q_cnt].order_id =
              request->interp[q_cnt].order_id
         endfor
         set q_cnt = 0

         select into "nl:"
            d.seq,
            ita.task_assay_cd,
            ita.service_resource_cd,
            ita.interp_id,
            ic.sequence,
            dServResCd = ita.service_resource_cd

            /* Selection fields:
            d.seq,
            ita.interp_id,
            ita.task_assay_cd,
            ita.interp_type_cd,
            ita.generate_interp_flag,
            ita.interp_option_cd,
            ita.service_resource_cd,
            ita.order_cat_cd,
            ita.phase_cd,
            ic.interp_detail_id,
            ic.sequence,
            ic.included_assay_cd,
            ic.cross_drawn_dt_tm_ind,
            ic.time_window_minutes,
            ic.time_window_units_cd,
            ic.result_req_flag,
            ic.verified_flag
            */

         from
            (dummyt d with seq = value(nbr_interps)),
            interp_task_assay ita,
            interp_component ic

         plan  d
         join  ita   where ita.task_assay_cd = 
                             request->interp[d.seq].task_assay_cd
                       and (ita.service_resource_cd = 
                             request->interp[d.seq].service_resource_cd
                          or ita.service_resource_cd in (NULL, 0))
                       and (ita.active_ind = 1
                          or (request->interp[d.seq].include_inactive_ind = 1 and ita.active_ind = 0))
         join  ic    where ic.interp_id = ita.interp_id
                       and (ic.active_ind = 1
                          or (request->interp[d.seq].include_inactive_ind = 1 and ic.active_ind = 0))

         order by
            d.seq,
            ita.task_assay_cd,
            ita.service_resource_cd,
            ita.interp_id,
            ic.sequence

         head d.seq
            q_cnt = d.seq
            reply->qual[q_cnt].task_assay_cd = 
              request->interp[q_cnt].task_assay_cd

         head ita.interp_id
            reply->qual[q_cnt].interp_id = ita.interp_id
            reply->qual[q_cnt].task_assay_cd = ita.task_assay_cd
            ; assign service resource code only if greater than 0
            ; this is changed for glb_get_interp_for_mdi script.
            if(request->interp[q_cnt].order_id > 0.0 and dServResCd > 0.0)
              reply->qual[q_cnt].service_resource_cd = dServResCd
            elseif(request->interp[q_cnt].order_id = 0.0)
              reply->qual[q_cnt].service_resource_cd = dServResCd
            endif
            reply->qual[q_cnt].interp_type_cd = ita.interp_type_cd
            reply->qual[q_cnt].interp_option_cd = ita.interp_option_cd
            reply->qual[q_cnt].generate_interp_flag = ita.generate_interp_flag
            reply->qual[q_cnt].order_cat_cd = ita.order_cat_cd
            reply->qual[q_cnt].phase_cd = ita.phase_cd
            c_cnt = 0

         detail
            c_cnt = c_cnt + 1
            stat = alterlist(reply->qual[q_cnt].component, c_cnt)
            reply->qual[q_cnt].component[c_cnt].interp_detail_id = 
              ic.interp_detail_id
            reply->qual[q_cnt].component[c_cnt].sequence = 
              ic.sequence
            reply->qual[q_cnt].component[c_cnt].included_assay_cd = 
              ic.included_assay_cd
            reply->qual[q_cnt].component[c_cnt].cross_drawn_dt_tm_ind = 
              ic.cross_drawn_dt_tm_ind
            reply->qual[q_cnt].component[c_cnt].time_window_minutes = 
              ic.time_window_minutes
            reply->qual[q_cnt].component[c_cnt].time_window_units_cd = 
              ic.time_window_units_cd
            reply->qual[q_cnt].component[c_cnt].result_req_flag = 
              ic.result_req_flag
            reply->qual[q_cnt].component[c_cnt].verified_flag = 
              ic.verified_flag

         foot ita.interp_id
            row+0

         foot d.seq
            row+0

         with 
            nocounter

         if (q_cnt > 0)
            set reply->status_data.status = "S"
         endif

         end
         go      

;Generated by GNU enscript 1.6.4.
