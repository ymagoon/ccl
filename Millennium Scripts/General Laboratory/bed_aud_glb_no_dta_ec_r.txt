 ;;Solution_Test/script/Bedrock/bed_aud_glb_no_dta_ec_r/bed_aud_glb_no_dta_ec_r.prg Turn on black mode

drop program bed_aud_glb_no_dta_ec_r:dba go
create program bed_aud_glb_no_dta_ec_r:dba
 
if (not (validate (request,0)))
 record request
  (
    1 program_name = vc
    1 skip_volume_check_ind = i2
    1 output_filename = vc
    1 paramlist[*]
      2 param_type_mean = vc
      2 pdate1 = dq8
      2 pdate2 = dq8
      2 vlist[*]
        3 dbl_value = f8
        3 string_value = vc
  )
endif
 
if (not(validate(reply,0)))
 record reply
  (
    1  collist[*]
      2  header_text = vc
      2  data_type = i2
      2  hide_ind = i2
    1  rowlist[*] 
      2 celllist[*]
        3 date_value = dq8
        3 nbr_value = i4
        3 double_value = f8
        3 string_value = vc
        3 display_flag = i2 ;0-regular,1-bold,2-???
    1  high_volume_flag = i2
    1  output_filename = vc
    1  run_status_flag = i2
    1  statlist[*]
       2 statistic_meaning = vc
       2 status_flag = i2
       2 qualifying_items = i4
       2 total_items = i4
    1  status_data
      2  status  =  C1 
      2  SUBEVENTSTATUS [ 1 ] 
        3  OPERATIONNAME  =  C15 
        3  OPERATIONSTATUS  =  C1 
        3  TARGETOBJECTNAME  =  C15 
        3  TARGETOBJECTVALUE  =  C100 
  )
endif

record temp
( 1 dlist[*]
    2 task_assay_cd = f8
    2 dtaname = vc
    2 dtadesc = vc
)
 
declare glb_disp = vc
set glb_cd = 0.0
select into "nl:"
from code_value c
plan c
  where c.code_set = 106
    and c.cdf_meaning = "GLB"
    and c.active_ind = 1
detail
  glb_cd = c.code_value
  glb_disp = c.display
with nocounter

set dcnt = 0

set high_volume_cnt = 0
if (request->skip_volume_check_ind = 0)
  select into "nl:"
    hv_cnt = count(*)
  from discrete_task_assay dta
  plan dta
    where dta.activity_type_cd = glb_cd
      and dta.active_ind = 1
  detail
    high_volume_cnt = hv_cnt
  with nocounter

  call echo(high_volume_cnt)
 
  if (high_volume_cnt > 25000)
    set reply->high_volume_flag = 2
    go to exit_script
  elseif (high_volume_cnt > 15000)
    set reply->high_volume_flag = 1
    go to exit_script
  endif
endif

select into "nl:"
from discrete_task_assay dta,
     code_value_event_r cver
plan dta
  where dta.active_ind = 1
    and dta.activity_type_cd = glb_cd
join cver
  where cver.parent_cd = outerjoin(dta.task_assay_cd)
order by dta.mnemonic_key_cap
head report
  dcnt = 0
detail
  if (cver.event_cd = 0)
    dcnt = dcnt + 1
    stat = alterlist(temp->dlist,dcnt)
    temp->dlist[dcnt].task_assay_cd = dta.task_assay_cd
    temp->dlist[dcnt].dtaname = dta.mnemonic
    temp->dlist[dcnt].dtadesc = dta.description
  endif
with nocounter

set stat = alterlist(reply->collist,3)

set reply->collist[1].header_text = "task_assay_cd"
set reply->collist[1].data_type = 2 ;double
set reply->collist[1].hide_ind = 1
set reply->collist[2].header_text = "Assay Display"
set reply->collist[2].data_type = 1 ;string
set reply->collist[2].hide_ind = 0
set reply->collist[3].header_text = "Assay Description"
set reply->collist[3].data_type = 1 ;string
set reply->collist[3].hide_ind = 1

if (dcnt = 0)
  go to exit_script
endif

set row_nbr = 0
select into "nl:"
from (dummyt d with seq = dcnt)
head report
  row_nbr = 0
detail
  row_nbr = row_nbr + 1
  stat = alterlist(reply->rowlist,row_nbr)
  stat = alterlist(reply->rowlist[row_nbr].celllist,3)
  reply->rowlist[row_nbr].celllist[1].double_value = 
        temp->dlist[d.seq].task_assay_cd
  reply->rowlist[row_nbr].celllist[2].string_value = 
        temp->dlist[d.seq].dtaname
  reply->rowlist[row_nbr].celllist[3].string_value = 
        temp->dlist[d.seq].dtadesc
with nocounter

#exit_script
if (reply->high_volume_flag in (1,2))
  set reply->output_filename = build("gl_assay_no_event_audit.csv")
endif

if (request->output_filename > " ")
  execute bed_rpt_file
endif

end
go
 

;Generated by GNU enscript 1.6.4.
