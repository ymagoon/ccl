 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_rr_accession/GLB_ADD_RR_ACCESSION.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       GLB_ADD_RR_ACCESSION.PRG        
        Object name:            GLB_ADD_RR_ACCESSION            
        Request #:              250179

        Product:                General Lab
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Update the PDM_PARAMS table with new values
                           

        Tables read:            n/a
 
        Tables updated:         pdm_params
        Executing from:         General Lab internet application

        Special Notes:          n/a
*/
;    ************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 11/23/98 Gary Runde           Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

        drop program glb_ADD_RR_ACCESSION:DBA GO       
        create program glb_ADD_RR_ACCESSION:DBA  
/*
;     record request
;     (
;         1  round_robin_ref_id             = f8
;         1  accessions[*]           
;            2  accession_id		= f8
;     )
 */

        record reply
        (
%i cclsource:status_block.inc
        )


	record dateformat
	(
        	1  current_dt_tm  = dq8
	)


/* Variable initialization */
        declare rr_group_id = f8 with protect, noconstant(0.0)

        set reply->status_data->status = "F"
        set numAccessions = value(size(request->accessions, 5))
        set dateformat->current_Dt_Tm = cnvtdatetime(curdate, curtime3)
        set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
        set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty
        set hSys = 0
        set SysStat = 0
        call uar_SysCreateHandle(hSys,SysStat)
        set sText = fillstring(254, " ")

        set sText = build("NumAccns:  ", numAccessions)
        call uar_SysEvent(hSys, 3, "AddRRAccn numaccns", NULLTERM(sText))


      /***********************************************************************
      * Add new row to the rr_group table with new id                        *
      ***********************************************************************/
        select into "nl:"
               next_seq_nbr = seq(pathnet_seq,nextval)
        from dual
        detail
               rr_group_id = next_seq_nbr
        with nocounter, format      

	insert into
		rr_group rg
	set 
		rg.rr_group_id 		= rr_group_id,
		rg.created_dt_tm 	= cnvtdatetime(dateformat->current_Dt_Tm),
          	rg.updt_dt_tm           = cnvtdatetime(dateformat->current_Dt_tm),
          	rg.updt_cnt             = 0,
          	rg.updt_task            = reqinfo->updt_task,
          	rg.updt_id              = reqinfo->updt_id,
          	rg.updt_applctx         = reqinfo->updt_applctx
        with nocounter
		
   set error_check = ERROR(sErrorMsg,0)   ;get error message
   if (error_check != 0)
     set reply->status_data->status = "F"
     set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
     go to exit_script
   endif


      /***********************************************************************
      * Add new row to the round_robin_accession table                       *
      ***********************************************************************/
    for (cntAccn = 1 to numAccessions) 
	insert
          into 
                rr_accession_r ra
        set
          ra.round_robin_ref_id       = request->round_robin_ref_id,
	  ra.accession_id         = request->accessions[cntAccn].accession_id,
	  ra.rr_group_id	  = rr_group_id,
          ra.updt_dt_tm           = cnvtdatetime(dateformat->current_Dt_tm),
          ra.updt_cnt             = 0,
          ra.updt_task            = reqinfo->updt_task,
          ra.updt_id              = reqinfo->updt_id,
          ra.updt_applctx         = reqinfo->updt_applctx
        with nocounter
   set error_check = ERROR(sErrorMsg,0)   ;get error message
   if (error_check != 0)
     set reply->status_data->status = "F"
     set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
     go to exit_script
   endif

    endfor


set sText = build("curqual:  ", curqual)
call uar_SysEvent(hSys, 3, "AddRRAccn numaccns", NULLTERM(sText))

if (curqual = 0)
        rollback
else
	if(validate(xxDebug, -99) = -99)
        commit
        set reply->status_data->status = "S"    
    endif
endif
        
#exit_script
call uar_SysDestroyHandle(hSys)
end 
go

;Generated by GNU enscript 1.6.4.
