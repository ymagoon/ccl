 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_controls_from_ts/glb_get_controls_from_ts.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_CONTROLS_FROM_TS.PRG
        Object name:            GLB_GET_CONTROLS_FROM_TS
        Request #:              257525

        Product:                General Lab/Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve Controls and Procedures for a given
                                Test Site from the database

        Tables read:            resource_assay_control

        Tables updated:         n/a

        Executing from:         General Lab QC Inquiry

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 08/02/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_CONTROLS_FROM_TS:dba go    
      create program GLB_GET_CONTROLS_FROM_TS:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 service_resource_cd          = f8
         1 actives_only_ind             = i2
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 controls[*]
           2 control_id                 = f8
           2 short_desc                 = c20
           2 assays[*]
             3 task_assay_cd            = f8
	     3 task_assay_disp		= vc
;             3 mnemonic                 = vc
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set reply->status_data->status = "F"
      set c_cnt = 0
      set a_cnt = 0
      set detail_cnt = 0
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

/********************************************************************/ 
/* Select controls for a given test site from the database          */
/********************************************************************/

     SELECT 
       into "nl:"
         rlr.service_resource_cd,
	 l.lot_id,
         c.control_id
      FROM
         resource_lot_r rlr,
	 control_lot l,
         control_material c
      PLAN rlr
         where rlr.service_resource_cd = request->service_resource_cd
      JOIN l
         where l.lot_id = rlr.lot_id
      JOIN c
         where c.control_id = l.control_id
      ORDER BY c.control_id
      HEAD c.control_id
         c_cnt = c_cnt + 1
         if (mod(c_cnt,5) = 1)
            stat =  alterlist(reply->controls,c_cnt + 5)
         endif       
         reply->controls[c_cnt].control_id = c.control_id,
         reply->controls[c_cnt].short_desc = c.short_description
         a_cnt = 0
      DETAIL
         detail_cnt = detail_cnt + 1
      WITH
         nocounter

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (c_cnt = 0)
         go to controls_failed
      endif

      set stat = alterlist(reply->controls,c_cnt)



     SELECT 
      IF (request->actives_only_ind = 0)
        FROM
          resource_assay_control r,
          (dummyt d1 with seq = value(c_cnt))
        PLAN d1
        JOIN r
          where r.service_resource_cd = request->service_resource_cd and
          r.control_id = reply->controls[d1.seq].control_id
      ELSE
        FROM    
          resource_assay_control r,
          assay_resource_lot arl,
          control_lot cl,
          (dummyt d1 with seq = value(c_cnt))
        PLAN d1
        JOIN r 
          where r.service_resource_cd = request->service_resource_cd 
          and r.control_id = reply->controls[d1.seq].control_id
        JOIN cl
          where cl.control_id = r.control_id
        JOIN arl
          where arl.service_resource_cd = r.service_resource_cd
          and arl.task_assay_cd = r.task_assay_cd
          and arl.lot_id = cl.lot_id
          and arl.active_ind = 1 
        ENDIF 
        INTO "nl:"
         d1.seq,
         r.control_id,
	     r.task_assay_cd
      
        ORDER BY d1.seq, r.control_id
        HEAD d1.seq
         c_cnt = c_cnt + 1
         a_cnt = 0
        HEAD r.task_assay_cd
         a_cnt = a_cnt + 1
         if (mod(a_cnt,5) = 1)
            stat =  alterlist(reply->controls[d1.seq]->assays,a_cnt + 5)
         endif         
         reply->controls[d1.seq]->assays[a_cnt].task_assay_cd = r.task_assay_cd
        ; reply->controls[d1.seq]->assays[a_cnt].mnemonic = d.mnemonic
      DETAIL
         detail_cnt = detail_cnt + 1
      FOOT d1.seq
         stat = alterlist(reply->controls[d1.seq]->assays, a_cnt)
      WITH
         nocounter

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (c_cnt = 0)
         go to controls_failed
      else
        set reply->status_data->status = "S"
      endif

      set stat = alterlist(reply->controls,c_cnt)
      go to exit_script

/********************************************************************/ 
/* Executed if resource_assay_control table get is unsuccessful     */
/********************************************************************/
      #controls_failed
        set reply->status_data->subeventstatus[1]->operationname = 
           "get"
        set reply->status_data->subeventstatus[1]->operationstatus = 
           "F"
        set reply->status_data->subeventstatus[1]->targetobjectname = 
           "table"
        set reply->status_data->subeventstatus[1]->targetObjectValue = 
           "resource_assay_control table"
        set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script

END GO 
    

;Generated by GNU enscript 1.6.4.
