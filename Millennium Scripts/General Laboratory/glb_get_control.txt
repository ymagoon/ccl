 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_control/glb_get_control.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_CONTROL.PRG
        Object name:            GLB_GET_CONTROL
        Request #:              257507

        Product:                General Lab/Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve control associated with
                                the given short description

        Tables read:            control_material

        Tables updated:         n/a

        Executing from:         General Lab Build/Maintain Control Material

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 06/28/96 Kevin Brunner        Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_CONTROL:dba go    
      create program GLB_GET_CONTROL:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 short_desc_key = c20
         1 control_id     = f8
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 control_id              = f8
         1 description             = vc
         1 short_description       = c20
         1 manufacturer_cd         = f8
         1 display                 = c40
         1 description             = vc
         1 control_type_cd         = f8
         1 display                 = c40
         1 description             = vc
         1 blind_sample_ind        = i2
         1 xcntrls[*]
           2 xcntrl_id             = f8
           2 xcntrl_short_desc     = vc
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set found_control = "F"
      set reply->status_data->status = "F"
      set x_cnt = 0
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

      if (request->control_id = 0)
        SELECT into "nl:"
           cm.control_id,
           cx.control_id,
           cx_exists = decode(cx.seq, "Y","N"),
           cm2.control_id
        FROM
           control_material cm,
           control_x_check cx,
           control_material cm2,
           (dummyt d1 with seq = 1)
        PLAN cm
            where cm.short_desc_key = cnvtupper(cnvtalphanum(request->short_desc_key))
        JOIN d1 where d1.seq = 1        
        JOIN cx
            where cx.control_id = cm.control_id
        JOIN cm2
            where cm2.control_id = cx.control_x_id
        HEAD REPORT
           found_control = "Y"
           reply->control_id = cm.control_id
           reply->short_description = cm.short_description
           reply->description = cm.description
           reply->manufacturer_cd = cm.manufacturer_cd
           reply->control_type_cd = cm.control_type_cd
           reply->blind_sample_ind = cm.blind_sample_ind
        DETAIL
           if (cx_exists = "Y")
             x_cnt = x_cnt + 1
             if (mod(x_cnt,5) = 1)
                stat =  alterlist(reply->xcntrls,x_cnt + 5)
             endif        
             reply->xcntrls[x_cnt].xcntrl_id = cx.control_x_id
             reply->xcntrls[x_cnt].xcntrl_short_desc = cm2.short_description
           endif
        WITH
           nocounter
      else
        SELECT into "nl:"
           cm.control_id,
           cx.control_id,
           cx_exists = decode(cx.seq, "Y","N"), 
           cm2.control_id
        FROM
           control_material cm,
           control_x_check cx,
           control_material cm2,
           (dummyt d1 with seq = 1)
        PLAN cm
            where cm.control_id = request->control_id
        JOIN d1 where d1.seq = 1        
        JOIN cx
            where cx.control_id = cm.control_id
        JOIN cm2
            where cm2.control_id = cx.control_x_id
        HEAD REPORT
           found_control = "Y"
           reply->control_id = cm.control_id
           reply->short_description = cm.short_description
           reply->description = cm.description
           reply->manufacturer_cd = cm.manufacturer_cd
           reply->control_type_cd = cm.control_type_cd
           reply->blind_sample_ind = cm.blind_sample_ind
        DETAIL
           if (cx_exists = "Y")
             x_cnt = x_cnt + 1
             if (mod(x_cnt,5) = 1)
                stat =  alterlist(reply->xcntrls,x_cnt + 5)
             endif        
             reply->xcntrls[x_cnt].xcntrl_id = cx.control_x_id
             reply->xcntrls[x_cnt].xcntrl_short_desc = cm2.short_description
           endif
        WITH
           nocounter,
           outerjoin = d1
      endif

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
         set reply->status_data->status = "F"
         set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
         go to exit_script
      endif

      if (found_control = "F")
         go to control_failed
      else
         set reply->status_data->status = "S"
      endif

      set stat = alterlist(reply->xcntrls,x_cnt)
      go to exit_script

/********************************************************************/ 
/* Executed if control_material table get is unsuccessful           */
/********************************************************************/
     #control_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "Z"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "control_material table"
      set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script

END
GO     

;Generated by GNU enscript 1.6.4.
