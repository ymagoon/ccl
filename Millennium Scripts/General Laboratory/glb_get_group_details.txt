 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_group_details/glb_get_group_details.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_GROUP_DETAILS.PRG
        Object name:            GLB_GET_GROUP_DETAILS
        Request #:              250084

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieves detail procedures for a given
                                orderable procedure.
                                
        Tables read:            discrete_task_assay
                                profile_task_r

        Tables updated:         n/a

        Executing from:         General Lab build/build differential tool

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 05/17/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_GROUP_DETAILS:dba go    
      create program GLB_GET_GROUP_DETAILS:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                               
         1 catalog_cd                = f8        
         1 activity_type_cd          = f8
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 procedures[5]
           2 nbr_procedures          = i4
           2 task_assay_cd           = f8
           2 mnemonic                = vc
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set failed = "F"
      set reply->status_data->status = "F"
      set procedure_cnt = 0

/*******************************************************************/
/* Get task_assay_cd and mnemonic for requested procedure.         */
/*******************************************************************/
      SELECT 
      into  "nl:"
         p.catalog_cd,
         d.task_assay_cd
      FROM
         discrete_task_assay d,
         profile_task_r p
      PLAN p
         where p.catalog_cd = request->catalog_cd
      JOIN d
         where d.task_assay_cd = p.task_assay_cd
      DETAIL
         procedure_cnt = procedure_cnt + 1
         IF (mod(procedure_cnt, 5) = 1 and procedure_cnt != 1)
             stat = alter(reply->procedures, procedure_cnt + 5)
         ENDIF
         reply->procedures[procedure_cnt]->nbr_procedures = procedure_cnt
         reply->procedures[procedure_cnt]->task_assay_cd = p.task_assay_cd
         reply->procedures[procedure_cnt]->mnemonic = d.mnemonic         
      WITH
         nocounter
      if (curqual = 0)
         go to invalid_procedure
      endif
      ;set stat = alter(reply->procedures, procedure_cnt)
      go to exit_script

/********************************************************************/ 
/* Executed if requested procedure is not found.                    */
/********************************************************************/
     #invalid_procedure
      set reply->status_data->subeventstatus[1]->operationname = 
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "S"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "discrete_task_assay table"
      set failed = "Z"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
      elseif (failed = "Z")
         set reply->status_data->status = "Z"
      else
         set reply->status_data->status = "F"
      endif
END
GO     

;Generated by GNU enscript 1.6.4.
