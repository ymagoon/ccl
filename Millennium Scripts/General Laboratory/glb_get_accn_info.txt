 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_accn_info/glb_Get_accn_info.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       GLB_GET_ACCN_INFO.PRG
        Object name:            GLB_GET_ACCN_INFO
        Request #:              250212

        Product:                General Lab
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Verify that the accession entered in AVStatus DLL is valid
                                and that all orders for the accession have not been cancelled


        Tables read:            accession_order_r
                                orders

        Tables updated:         n/a
        Executing from:         AVStatus.dll (prevent AV for accession)


******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 07/13/00 Gary Runde           Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_ACCN_INFO:dba go
      create program GLB_GET_ACCN_INFO:dba


/*
      record request
      (
         1  accession          = vc
      )
*/
      record reply
      (
	     1  accession_id              = f8
	     1  person_id                 = f8
	     1  encntr_id                 = f8
	     1  all_orders_canceled       = i2
%i cclsource:status_block.inc
      )

/* Initialization */
      set reply->status_data->status  = "F"
      set ORDER_STATUS_CODESET        = 6004
      set ORDER_STATUS_CANCELED_CDF   = "CANCELED"
      declare order_status_canceled_cd   = f8
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty


/*Get the order_status_cd of cancelled */

      call uar_get_meaning_by_codeset(ORDER_STATUS_CODESET,
                                      ORDER_STATUS_CANCELED_CDF,
                                      1, order_status_canceled_cd)

      if (order_status_canceled_cd = 0.0)
           select into "nl:"
             c.code_value
           from code_value c
           where c.code_set = order_status_codeset
             and c.cdf_meaning = ORDER_STATUS_CANCELED_CDF
           detail
              order_status_canceled_cd = c.code_value
           with nocounter
      endif

call echo("orderstatuscanceled:")
call echo(order_status_canceled_cd)

/*Get the data needed */
      select into "nl:"
          aor.accession,
          aor.order_id,
          o.order_id,
          o.person_id,
          o.encntr_id
      from
          accession_order_r aor,
          orders o
      plan aor
         where aor.accession = request->accession
           and aor.primary_flag = 0
      join o
         where aor.order_id = o.order_id
      order by o.order_id
      head report
         reply->all_orders_canceled = 1
      detail
         if (o.order_status_cd != order_status_canceled_cd)
             reply->all_orders_canceled   = 0
             reply->person_id             = o.person_id
             reply->encntr_id             = o.encntr_id
             reply->accession_id          = aor.accession_id
         endif
      with nocounter

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (curqual > 0)
         set reply->status_data->status = "S"
      else
         set reply->status_data->status = "Z"
      endif

#EXIT_SCRIPT
end
go

;Generated by GNU enscript 1.6.4.
