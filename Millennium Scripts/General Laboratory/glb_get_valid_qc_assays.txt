 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_valid_qc_assays/glb_get_valid_qc_assays.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-1995 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United lStates of      *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       glb_get_valid_qc_assays.prg
        Object name:            glb_get_valid_qc_assays
        Request #:              257595

        Product:                PathNet Common
        Product Team:           PathNet Common
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Determines if the specified context should display 
                                an Images Present alert
        Tables read:            blob_reference
                                code_value_extension
                                ord_rqstn_r
                                processing_task
                                orders
 
        Tables updated:         none
 
        Executing from:         pcsNonClinDocImg.ocx
 
        Special Notes:          none.

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 12/28/06 PL7517               Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program glb_get_valid_qc_assays:dba go
create program glb_get_valid_qc_assays:dba

set modify predeclare
 
/***********************************************************************
 *  Structures and Includes                                            *
 ***********************************************************************/
/*
record request (
	1 qual[*]
    2 service_resource_cd = f8
)
*/
  
record reply(
	1 qual[*]
	  2 service_resource_cd = f8
	  2 task_assay_cd       = f8
%i cclsource:Status_block.inc
)

record ControlsToLoad(
	1 qual[*]
	  2 control_id          = f8
	  2 service_resource_cd = f8
)

record RelatedQCAssays(
    1 qual[*]
      2 task_assay_cd       = f8
      2 service_resource_cd = f8
)
  
/**********************************************************************
*   Variables and Constants                                           *
***********************************************************************/
declare lStat             = i4 with protect, noconstant(0)
declare lReqCnt           = i4 with protect, noconstant(0)
declare lReplyCnt         = i4 with protect, noconstant(0)
declare lLoadCnt          = i4 with protect, noconstant(0)
 
/**************************************************/
/*  Main Program                                  */
/**************************************************/

set reply->status_data->status = "F"
set lReqCnt = size(request->qual, 5)

/* Note: An Expand cannot be used due to an Oracle defect that causes a table scan when outerjoins are used and the only 
   possible indexed field is in the Expand 
*/
select into "nl:"
		qsc_ind = evaluate(nullind(qsc.qc_schedule_id),0,1,0),
		qssc_ind = evaluate(nullind(qssc.qc_schedule_id),0,1,0)
	from qc_schedule qs,
	     qc_schedule_step qst,
	     qc_schedule_ctrl qsc,
	     qc_schd_step_ctrl_assay qssc,
	     (dummyt d with seq = lReqCnt)
	plan d
	join qs where qs.service_resource_cd = request->qual[d.seq].service_resource_cd
	          and qs.active_ind = 1
	          and qs.enforce_verified_results_ind = 1
	          and qs.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
            and qs.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
	join qst where qst.qc_schedule_id = outerjoin(qs.qc_schedule_id)
	join qsc where qsc.qc_schedule_id = outerjoin(qst.qc_schedule_id)
	           and qsc.step_nbr = outerjoin(qst.step_nbr)
	           and qsc.error_step_ind = outerjoin(qst.error_step_ind)
	join qssc where qssc.control_id = outerjoin(qsc.control_id)
	           and qssc.error_step_ind = outerjoin(qsc.error_step_ind)
	           and qssc.qc_schedule_id+0 = outerjoin(qsc.qc_schedule_id)
	           and qssc.step_nbr = outerjoin(qsc.step_nbr)
	order by qs.qc_schedule_id, qst.step_nbr, qsc.control_id, qssc.task_assay_cd 
	head report
		lReplyCnt = 0
		lLoadCnt = 0
	head qsc.control_id
		if (qsc_ind = 1 and qssc_ind = 0)
			lLoadCnt = lLoadCnt + 1
      		if (size(ControlsToLoad->qual, 5) < lLoadCnt)
        		lStat = alterlist(ControlsToLoad->qual, lLoadCnt + 9)
      		endif
			ControlsToLoad->qual[lLoadCnt].service_resource_cd = qs.service_resource_cd
			ControlsToLoad->qual[lLoadCnt].control_id = qsc.control_id
		endif
	head qssc.task_assay_cd
		if (qsc_ind = 1 and qssc_ind = 1)
			lReplyCnt = lReplyCnt + 1
			if (size(reply->qual, 5) < lReplyCnt)
 				lStat = alterlist(reply->qual, lReplyCnt + 9)
			endif
      		reply->qual[lReplyCnt].service_resource_cd = qs.service_resource_cd
      		reply->qual[lReplyCnt].task_assay_cd = qssc.task_assay_cd
		endif
	foot report
		if (lReplyCnt > 0)
    		lStat = alterlist(reply->qual, lReplyCnt)
    	endif
	    if (lLoadCnt > 0)
	    	lStat = alterlist(ControlsToLoad->qual, lLoadCnt)
	    endif
	with nocounter
	
	if (lLoadCnt > 0)
		select into "nl:"
			cl.control_id
		from control_lot cl,
		     resource_lot_r rlr,
		     assay_resource_lot arl,
		     (dummyt d with seq = value(lLoadCnt))
		plan d
		join cl where cl.control_id = ControlsToLoad->qual[d.seq].control_id
						  and cl.lot_flag = 1
		join rlr where rlr.lot_id = cl.lot_id
						   and rlr.service_resource_cd = ControlsToLoad->qual[d.seq].service_resource_cd
 				       and cnvtdatetime(curdate,curtime3) between
                   rlr.defined_active_dt_tm and
                   rlr.defined_inactive_dt_tm
	    join arl where arl.service_resource_cd = rlr.service_resource_cd
	               and arl.lot_id = cl.lot_id
	               and arl.active_ind = 1
	    order by arl.service_resource_cd, arl.task_assay_cd
	    head arl.task_assay_cd
    		lReplyCnt = lReplyCnt + 1
	    	if (size(reply->qual, 5) < lReplyCnt)
	    		lStat = alterlist(reply->qual, lReplyCnt + 9)
	    	endif
	    	reply->qual[lReplyCnt].service_resource_cd = arl.service_resource_cd
	    	reply->qual[lReplyCnt].task_assay_cd = arl.task_assay_cd
		foot report
    		lStat = alterlist(reply->qual, lReplyCnt)
	endif
	
	if (lReplyCnt > 0)
	    ;Any related assays should also be considered valid for the same service 
	    ;resource as the primary assay
	    declare lAssayIdx          = i4 with protect, noconstant(0)
	    
        select into "nl:"
        from (dummyt d1 with seq = value(size(reply->qual, 5))), 
          related_assay ra1,
          related_assay ra2
        plan d1
        join ra1 
          where ra1.task_assay_cd = reply->qual[d1.seq].task_assay_cd
        join ra2
          where ra2.related_entity_id = ra1.related_entity_id
          and ra2.task_assay_cd != ra1.task_assay_cd
        order by ra1.task_assay_cd, ra2.task_assay_cd
        detail
          lAssayIdx = lAssayIdx + 1
          if (lAssayIdx > size(RelatedQCAssays->qual, 5))
            lStat = alterlist(RelatedQCAssays->qual, lAssayIdx + 3)
          endif
          RelatedQCAssays->qual[lAssayIdx].task_assay_cd = ra2.task_assay_cd
          RelatedQCAssays->qual[lAssayIdx].service_resource_cd = reply->qual[d1.seq].service_resource_cd
        foot report 
          lStat = alterlist(RelatedQCAssays->qual, lAssayIdx)    
        with nocounter
                
        if (lAssayIdx>0)
          ;Copy the equivalent assay/resource pairs into the reply  
          select into "nl:"
          from (dummyt d1 with seq = value(size(RelatedQCAssays->qual,5)))
          head d1.seq
            lReplyCnt = lReplyCnt +1
            if (size(reply->qual, 5) < lReplyCnt)
	    		lStat = alterlist(reply->qual, lReplyCnt + 9)
	    	endif
	    	reply->qual[lReplyCnt].service_resource_cd = RelatedQCAssays->qual[d1.seq].service_resource_cd
	    	reply->qual[lReplyCnt].task_assay_cd = RelatedQCAssays->qual[d1.seq].task_assay_cd
	      foot report
	        lStat = alterlist(reply->qual,lReplyCnt)
	    endif      
      endif
	
	
if (lReplyCnt > 0)
	set reply->status_data->status = "S"
else
	set reply->status_data->status = "Z"
endif

free record ControlsToLoad
free record RelatedQCAssays
set modify nopredeclare
end
go
	

;Generated by GNU enscript 1.6.4.
