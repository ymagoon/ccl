 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_wklst_case_groups/glb_get_wklst_case_groups.inc Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2004 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
  Source file name:   glb_get_wklst_case_groups.inc
  Object name:        -
  Request #:          -
 
  Product:            Helix
  Product Team:       Helix
  HNA Version:        500
  CCL Version:        8.2
 
  Include purpose:    Populates case_groups structure in reply.
 
  Executing from:     glb_get_elig_all, glb_get_wklst_orders
 
  Special Notes:      -
 
******************************************************************************/
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer                     Comment
;    *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 09/15/06 SH5081               Initial Release                     *
;    *001 12/11/06 SH5081               Fix CR 1-897870371                  *
;    *002 03/16/07 SH5081               Fix Parser/Replace incompatibility. *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
;****************************************************************************
;* Function - LoadCaseGroups                                                *
;*                                                                          *
;* Description: Load the case group id's for each order.                    *
;* Parameters:  None                                                        *          
;* Return:      None                                                        *
;****************************************************************************
declare LoadCaseGroups() = NULL with protect
subroutine LoadCaseGroups(NULL)
  declare lRepNdx = i4 with protect, noconstant(0)
  declare lCGCnt = i4 with protect, noconstant(0)
  ;*** Variables for use with Expand ***
  declare lTempCnt = i4 with protect, noconstant(0)
  declare lLoopCnt = i4 with protect, noconstant(0)
  declare lStart = i4 with protect, noconstant(0)
  declare EXPAND_SIZE = i4 with protect, constant(80)
  declare lEIdx = i4 with protect, noconstant(0)
  declare lLocIdx = i4  with protect, noconstant(0)
  declare lRepQCnt = i4 with protect, noconstant(0)

  set lRepQCnt = size(reply->qual, 5)
  if (lRepQCnt > 0)
    ;* Initialize variables used for breaking up the EXPAND calls to improve performance when > 200 items
    set lStart = 1
    set lLoopCnt = ceil(cnvtreal(lRepQCnt)/EXPAND_SIZE)
    set lTempCnt = lLoopCnt * EXPAND_SIZE 
    ;* Size the record so that it is equally divisible by EXPAND_SIZE
    set giStat = alterlist(reply->qual, lTempCnt)
    ;* Pad the new items in the record with the last item so that the expand can be broken up   
    for (lEIdx=lRepQCnt+1 to lTempCnt)
      set reply->qual[lEIdx].order_id = reply->qual[lRepQCnt].order_id
    endfor  
  
    select into "nl:"
    from (dummyt d with seq = lLoopCnt), 
         ucm_case_step ucs,
         ucm_case_group_prequal cgp
    plan d   where assign(lStart, evaluate(d.seq, 1, 1, lStart+EXPAND_SIZE))
    join ucs where expand(lEIdx, lStart, lStart+(EXPAND_SIZE-1), ucs.order_id, reply->qual[lEIdx].order_id)
               and ucs.ucm_case_id+0 > 0.0
    join cgp where cgp.ucm_case_id = ucs.ucm_case_id
    order by ucs.order_id
    head ucs.order_id
      lRepNdx = locateval(lLocIdx, 1, lRepQCnt, ucs.order_id, reply->qual[lLocIdx].order_id)
      lCGCnt = 0
    detail
      ;* Add real case groups and pending case groups to the list. Pending case groups will
      ;* have a ucm_case_group_id of 0 but will indicate to frontend that there are pending groups.
      if (cgp.evaluated_ind = 0 or cgp.ucm_case_group_id > 0.0)
        lCGCnt = lCGCnt + 1
        if (lCGCnt > size(reply->qual[lRepNdx].case_groups, 5))
          stat = alterlist(reply->qual[lRepNdx].case_groups, lCGCnt + 9)
        endif
        reply->qual[lRepNdx].case_groups[lCGCnt].ucm_case_group_id = cgp.ucm_case_group_id
      endif
    foot ucs.order_id
      stat = alterlist(reply->qual[lRepNdx].case_groups, lCGCnt)
    with nocounter
    set giStat = alterlist(reply->qual, lRepQCnt)
  endif
end ;* LoadCaseGroups

;Generated by GNU enscript 1.6.4.
