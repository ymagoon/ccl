 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_all_qc_rules/glb_get_all_qc_rules.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_ALL_QC_RULES.PRG
        Object name:            GLB_GET_ALL_QC_RULES
        Request #:              257518

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Cache all the rules for the server

        Tables read:            qc_rule_type
                                qc_rule

        Tables updated:         n/a

        Executing from:         General Lab Build/Maintain QC Reference tool

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 07/11/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_ALL_QC_RULES:dba go    
      create program GLB_GET_ALL_QC_RULES:dba
     

/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 server_ind        = i2
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 rule_sets[*]
           2 rule_id                 = f8
           2 short_description       = c20
           2 description             = vc
           2 active_ind              = i2
           2 rules[*]
             3 sequence              = i2
             3 rule_form_flag        = i2
             3 error_flag            = i2
             3 rule_definition       = vc
             3 across_control_ind    = i2
             3 across_run_ind        = i2
             3 trig_ind              = i2
             3 max_req_results       = i4
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set rule_cnt = 0
      set set_cnt = 0
      set detail_cnt = 0
      set found_rule = "F"
      set reply->status_data->status = "F"
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

      if (request->server_ind = 1)

        SELECT into "nl:"
           qct.rule_id,
           qc.sequence
        FROM
           qc_rule_type qct,
           qc_rule qc
        PLAN qct
           where qct.rule_id > 0
        JOIN qc
           where qct.rule_id = qc.rule_id
        ORDER BY qct.rule_id, qc.sequence
        HEAD qct.rule_id
           found_rule = "Y"
           set_cnt = set_cnt + 1          
           if (mod(set_cnt,5) =1)
              stat =  alterlist(reply->rule_sets,set_cnt + 5)
           endif
           reply->rule_sets[set_cnt].rule_id = qct.rule_id
           reply->rule_sets[set_cnt].short_description = qct.short_description
           reply->rule_sets[set_cnt].description = qct.description
           reply->rule_sets[set_cnt].active_ind = qct.active_ind
           rule_cnt = 0
        HEAD qc.sequence
           rule_cnt = rule_cnt + 1          
           if (mod(rule_cnt,5) = 1)
              stat =  alterlist(reply->rule_sets[set_cnt].rules,rule_cnt + 5)
           endif
           reply->rule_sets[set_cnt].rules[rule_cnt]->sequence = qc.sequence
           reply->rule_sets[set_cnt].rules[rule_cnt]->rule_form_flag = qc.rule_form_flag
           reply->rule_sets[set_cnt].rules[rule_cnt]->error_flag = qc.error_flag
           reply->rule_sets[set_cnt].rules[rule_cnt]->rule_definition = qc.rule_definition
           reply->rule_sets[set_cnt].rules[rule_cnt]->across_control_ind = qc.across_control_ind
           reply->rule_sets[set_cnt].rules[rule_cnt]->across_run_ind = qc.across_run_ind
           reply->rule_sets[set_cnt].rules[rule_cnt]->trig_ind = qc.trig_ind
           reply->rule_sets[set_cnt].rules[rule_cnt]->max_req_results = qc.max_req_results
        DETAIL
           detail_cnt = detail_cnt + 1
        FOOT qct.rule_id
           stat = alterlist(reply->rule_sets[set_cnt].rules, rule_cnt)
        WITH
           nocounter

      else

        SELECT into "nl:"
           qct.active_ind
        FROM
           qc_rule_type qct
        ORDER BY
           qct.active_ind desc
        HEAD REPORT
           set_cnt = 0
        DETAIL
           found_rule = "Y"
           set_cnt = set_cnt + 1          
           if (mod(set_cnt,5) =1)
              stat =  alterlist(reply->rule_sets,set_cnt + 5)
           endif
           reply->rule_sets[set_cnt].rule_id = qct.rule_id
           reply->rule_sets[set_cnt]->short_description = qct.short_description
           reply->rule_sets[set_cnt].description = qct.description
           reply->rule_sets[set_cnt]->active_ind = qct.active_ind
        WITH
           nocounter
      
      endif

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (found_rule = "F")
         go to no_rules
      else
        set reply->status_data->status = "S"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = "Successful"
      endif
      set stat = alterlist(reply->rule_sets, set_cnt)
      
      go to exit_script

/********************************************************************/ 
/* Executed if qc rules are not found.                              */
/********************************************************************/
     #no_rules
      set reply->status_data->subeventstatus[1]->operationname = 
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "Z"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "No records found"
      set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script

END GO
     

;Generated by GNU enscript 1.6.4.
