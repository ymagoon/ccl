 ;;Solution_Test/script/ePathLink/PathNet General Lab - PathLink Scripts/glb_get_activity_type.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       GLB_GET_ACTIVITY_TYPE.PRG
        Object name:            GLB_GET_ACTIVITY_TYPE
        Request #:              250138

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        This script returns the activity_type for a
                                given catalog_cd.

        Tables read:            order_catalog

        Tables updated:         None
        Executing from:         

        Special Notes:          None

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 12/03/97  Chad Moats          Initial Release                     *
;    *001 01/07/03  Chad Moats          Return catalog display              *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_ACTIVITY_TYPE:dba go    
             create program GLB_GET_ACTIVITY_TYPE:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  qual[*]
            2  catalog_cd                = f8
            2  orders[*]
			   3  order_id               = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
         1  qual[*]
            2  catalog_cd                = f8
			2  catalog_disp              = vc
            2  activity_type_cd          = f8
            2  activity_type_disp        = vc
            2  activity_type_mean        = vc
            2  orders[*]
               3 order_id                = f8
               3  synonym_cd                = f8
               3  synonym_disp              = vc

%i cclsource:status_block.inc
      )
      
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set catalog_list                 = size(request->qual, 5)
         declare c_cnt                    = i4
         set c_cnt                        = 0
         set reply->status_data.status    = "F"
         set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
         set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

      /***********************************************************************
      * Get Activity Types                                                   *
      ***********************************************************************/

         select into "nl:"
           d1.seq,
           oc.catalog_cd,
           oc.activity_type_cd
         from 
           order_catalog oc,
           (dummyt d1 with seq = value(catalog_list))
         plan d1
         join oc
           where oc.catalog_cd = request->qual[d1.seq].catalog_cd
         head oc.catalog_cd
           c_cnt = c_cnt + 1
           if (mod(c_cnt,5) = 1)
              stat =  alterlist(reply->qual,c_cnt + 5)
           endif        
           reply->qual[c_cnt].catalog_cd = oc.catalog_cd,
           reply->qual[c_cnt].activity_type_cd = oc.activity_type_cd
         detail
           c_cnt = c_cnt + 0
         with nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif

         if (curqual = 0)
           go to no_activity_types
         else
           set reply->status_data->status = "S"
         endif

         set stat = alterlist(reply->qual, c_cnt)

		 
      /***********************************************************************
      * Check for Synonyms                                                   *
      ***********************************************************************/

         select into "nl:"
           d1.seq,
           d2.seq,
           o.synonym_id,
           ocs.catalog_cd
         from 
           (dummyt d1 with seq = value(catalog_list)),
           (dummyt d2 with seq = 1),
           orders o,
           order_catalog_synonym ocs
         plan d1
           where maxrec(d2, size(request->qual[d1.seq].orders, 5))
         join d2 
         join o
           where o.order_id = request->qual[d1.seq].orders[d2.seq].order_id
         join ocs
           where o.synonym_id = ocs.synonym_id
         head d1.seq
           o_cnt = 0
         detail
           o_cnt = o_cnt + 1
           if (mod(o_cnt,5) = 1)
              stat =  alterlist(reply->qual[d1.seq].orders,o_cnt + 5)
           endif        
           reply->qual[d1.seq].orders[d2.seq].order_id = o.order_id
           reply->qual[d1.seq].orders[d2.seq].synonym_cd = ocs.catalog_cd
         foot d1.seq
           stat = alterlist(reply->qual[d1.seq].orders, o_cnt)
         with nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
         endif

          
         go to exit_script

      /***********************************************************************
      * No Activity Types were found                                         *
      ***********************************************************************/

         #no_activity_types
           set reply->status_data->subeventstatus[1]->operationname = 
              "get"
           set reply->status_data->subeventstatus[1]->operationstatus = 
              "Z"
           set reply->status_data->subeventstatus[1]->targetobjectname = 
             "table"
           set reply->status_data->subeventstatus[1]->targetObjectValue = 
             "order_catalog table"
           set reply->status_data->status = "Z"

           go to exit_script


        #exit_script
           end
           go      

;Generated by GNU enscript 1.6.4.
