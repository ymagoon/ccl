 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_failed_rule/glb_add_failed_rule.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_ADD_FAILED_RULE.PRG
        Object name:            GLB_ADD_FAILED_RULE
        Request #:              257545

        Product:                General Lab - Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Insert a failed rule into the database

        Tables read:            n/a

        Tables updated:         QC_RESULT_RULE_R

        Executing from:         General Lab - QC Correction

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 01/17/97 Chad Moats           Initial Release                     *
;    *001 11/06/00 Gary Runde           Delete qc_result_rule_r rows for    *
;                                       result in case rows already exist   *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_ADD_FAILED_RULE:dba go    
      create program GLB_ADD_FAILED_RULE:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 qual[*]
           2 rule_id                 = f8
           2 result_id               = f8
           2 sequence                = i2
           2 status_flag             = i2
      ) 
*/

 record reqinfo
( 1 commit_ind  = i2
  1 updt_id     = f8
  1 position_cd = f8
  1 updt_app    = i4
  1 updt_task   = i4
  1 updt_req    = i4
  1 updt_applctx= i4
)

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      ( 
         1 status_data
           2 status                = c1
           2 subeventstatus[1]
             3 OperationName       = c15
             3 OperationStatus     = c1
             3 TargetObjectName    = c15
             3 TargetObjectValue   = vc
      )


     #Script
      set failed = "F"
      set reply->status_data->status = "F"

      set rules_to_add = size(request->qual, 5)

/*******************************************************************/
/* Insert row into qc_result_rule_r table.                         */
/*******************************************************************/
      ;delete rows from qc_result_rule_r in case the av server wrote     ;001
      ;something before on perform                                       ;001
      delete                                                             ;001
         from qc_result_rule_r qrr1,                                     ;001
              (dummyt d2 with seq = value(rules_to_add))                 ;001
      set qrr1.seq = 1                                                   ;001
      plan (d2                                                           ;001
      join qrr1                                                          ;001
          where qrr1.qc_result_id = request->qual[d2.seq].result_id)     ;001
      with nocounter                                                     ;001

      INSERT
         into qc_result_rule_r qrr,
              (dummyt d1 with seq = value(rules_to_add))
      SET
         qrr.rule_id            = request->qual[d1.seq].rule_id,
         qrr.qc_result_id        = request->qual[d1.seq].result_id,
         qrr.sequence            = request->qual[d1.seq].sequence,
         qrr.status_flag         = request->qual[d1.seq].status_flag,
         qrr.updt_dt_tm          = cnvtdatetime(curdate,curtime3),
         qrr.updt_cnt            = 0,
         qrr.updt_task           = reqinfo->updt_task,
         qrr.updt_id             = reqinfo->updt_id,
         qrr.updt_applctx        = reqinfo->updt_applctx
      PLAN (d1
      JOIN qrr
          where qrr.rule_id = request->qual[d1.seq].rule_id)
      WITH
         outerjoin = d1,
         nocounter

      if (curqual = 0)
         go to qrr_insert_failed
      endif     

      go to exit_script

/********************************************************************/ 
/* Executed if qc_result_rule_r table insert is unsuccessful.       */
/********************************************************************/
     #qrr_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "qc_result_rule_r"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
         commit
      else
         rollback
      endif

END
GO     
      

;Generated by GNU enscript 1.6.4.
