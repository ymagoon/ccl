 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_lot_ts/glb_add_lot_ts.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_ADD_LOT_TS.PRG
        Object name:            GLB_ADD_LOT_TS
        Request #:              257513

        Product:                General Lab - Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        ADD test site info given control lot 
                                into the database

        Tables read:            n/a

        Tables updated:         resource_lot_r
                                resource_accession_r
                                accession

        Executing from:         General Lab Build/Maintain QC Material 

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 07/11/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_ADD_LOT_TS:dba go    
      create program GLB_ADD_LOT_TS:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       

         1 control_id              = f8
         1 service_resource_cd     = f8
         1 accession_id            = f8
         1 instr_xref              = c20
	 1 symbology		   = c2
         1 pl_accession_id         = f8
         1 pl_instr_xref           = c20
	 1 pl_symbology		   = c2
         1 lots[5]
           2 lot_id                  = f8
           2 active_dt_tm            = dq8
           2 inactive_dt_tm          = dq8
      ) 
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      ( 
         1 status_data
           2 status                = c1
           2 subeventstatus[1]
             3 OperationName       = c15
             3 OperationStatus     = c1
             3 TargetObjectName    = c15
             3 TargetObjectValue   = vc
      )

     #Script
      set failed = "F"
      set lot_id = 0.0
      set reply->status_data->status = "F"

      declare stat                    = i4
      declare lots_to_add             = i4

      set lots_to_add = size(request->lots, 5)

/*******************************************************************/
/* Insert row into resource_accession_r table.                     */
/*******************************************************************/

      SELECT into "nl:"
         r.control_id
      FROM
         resource_accession_r r
      WHERE
         r.control_id = request->control_id and
         r.service_resource_cd = request->service_resource_cd 
      WITH
         nocounter

      if (curqual = 0)
        INSERT
           into resource_accession_r ra
        SET
           ra.control_id          = request->control_id,
           ra.service_resource_cd = request->service_resource_cd,
           ra.accession_id        = request->accession_id,
           ra.preactive_ind       = 0,
           ra.instr_xref          = request->instr_xref,
	   ra.symbology		  = request->symbology,
           ra.updt_dt_tm          = cnvtdatetime(curdate,curtime),
           ra.updt_cnt            = 0,
           ra.updt_task           = reqinfo->updt_task,
           ra.updt_id             = reqinfo->updt_id,
           ra.updt_applctx        = reqinfo->updt_applctx
        PLAN ra 
           WHERE ra.control_id = request->control_id and
           ra.service_resource_cd = request->service_resource_cd
        WITH
           nocounter

        INSERT
           into resource_accession_r ra
        SET
           ra.control_id          = request->control_id,
           ra.service_resource_cd = request->service_resource_cd,
           ra.accession_id        = request->pl_accession_id,
	   ra.symbology		  = request->pl_symbology,
           ra.preactive_ind       = 1,
           ra.instr_xref          = request->pl_instr_xref,
           ra.updt_dt_tm          = cnvtdatetime(curdate,curtime),
           ra.updt_cnt            = 0,
           ra.updt_task           = reqinfo->updt_task,
           ra.updt_id             = reqinfo->updt_id,
           ra.updt_applctx        = reqinfo->updt_applctx
        PLAN ra
           WHERE ra.control_id = request->control_id and
           ra.service_resource_cd = request->service_resource_cd
        WITH
           nocounter
      endif     

/*******************************************************************/
/* Insert row into resource_lot_r table.                           */
/*******************************************************************/

      INSERT
         into resource_lot_r rl,
             (dummyt d1 with seq = value(lots_to_add))
      SET
         rl.lot_id              = request->lots[d1.seq].lot_id,
         rl.service_resource_cd = request->service_resource_cd,
         rl.defined_active_dt_tm = cnvtdatetime(request->lots[d1.seq].active_dt_tm),
         rl.defined_inactive_dt_tm = cnvtdatetime(request->lots[d1.seq].inactive_dt_tm),
         rl.updt_dt_tm          = cnvtdatetime(curdate,curtime),
         rl.updt_cnt            = 0,
         rl.updt_task           = reqinfo->updt_task,
         rl.updt_id             = reqinfo->updt_id,
         rl.updt_applctx        = reqinfo->updt_applctx
      PLAN d1 
      JOIN rl WHERE rl.lot_id = request->lots[d1.seq].lot_id and
           rl.service_resource_cd = request->service_resource_cd
      WITH
         nocounter
      
     if (curqual = 0)
        go to ra_insert_failed
     endif     
         
     go to exit_script

/********************************************************************/ 
/* Executed if resource_accession_r table insert is unsuccessful.   */
/********************************************************************/
     #ra_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
        concat( "resource_accession_r table ", "lots_to_add = ", cnvtstring(lots_to_add))
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
         commit
      else
         rollback
      endif

END
GO     
      

;Generated by GNU enscript 1.6.4.
