 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_robotics_dest_codes/GLB_ADD_ROBOTICS_DEST_CODES.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_add_robotics_dest_codes.prg
        Object name:            glb_add_robotics_dest_codes
        Request #:              250206

        Product:                Robotics              
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Add rows to the robotics destination codes table.

        Tables read:            none
        Tables updated:         robotics_dest_codes
        Executing from:         autoverifybuilddll

        Special Notes:          None

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 06/08/00 Gayla Benson         Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop   program glb_add_robotics_dest_codes:dba go
create program glb_add_robotics_dest_codes:dba

/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(
    1 max_nbr_sr                       = i4
    1 max_nbr_av_err                   = i4
    1 robo_sr_lst[]
      2 robotics_service_resource_cd   = f8
      2 sr_lst[]
        3 service_resource_cd          = f8
        3 task_assay_cd                = f8
        3 qual[]
          4 av_error_cd                = f8
          4 slide_ind                  = i2
          4 subseq_slide_ind           = i2
          4 reflex_ind                 = i2
          4 destination_code           = c2
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(
%i cclsource:status_block.inc
)


set reply->status_data->status = "F"
set failures = 0
set number_of_robo_svc_res = size(request->robo_sr_lst, 5)
;call echo (build("number_of_robo_svc_res: ", cnvtint(number_of_robo_svc_res)))
;call echo (build("max_nbr_sr:", request->max_nbr_sr))
;call echo (build("max_nbr_av_err:", request->max_nbr_av_err))
set stat = alterlist(request->robo_sr_lst->sr_lst->qual,request->max_nbr_av_err)

/****************************************************************************
*       Insert rows into the robotics destination codes table               *
*****************************************************************************/
insert into robotics_dest_codes rdc, 
            (dummyt d1 with seq = value(number_of_robo_svc_res)),
            (dummyt d2 with seq = value(request->max_nbr_sr)),
            (dummyt d3 with seq = value(request->max_nbr_av_err))
set
  rdc.robotics_service_resource_cd = request->robo_sr_lst[d1.seq].robotics_service_resource_cd,
  rdc.service_resource_cd = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq].service_resource_cd,
  rdc.task_assay_cd = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq].task_assay_cd,
  rdc.av_error_cd = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual[d3.seq].av_error_cd,
  rdc.slide_ind = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual[d3.seq].slide_ind,
  rdc.subseq_slide_ind = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual[d3.seq].subseq_slide_ind,
  rdc.reflex_ind = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual[d3.seq].reflex_ind,
  rdc.destination_code = request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual[d3.seq].destination_code,
  rdc.updt_applctx   = reqinfo->updt_applctx,
  rdc.updt_cnt       =  0,
  rdc.updt_dt_tm     = cnvtdatetime(curdate, curtime),
  rdc.updt_id        = reqinfo->updt_id,
  rdc.updt_task      = reqinfo->updt_task
plan d1
join d2
     where d2.seq <= size(request->robo_sr_lst[d1.seq]->sr_lst,5)
join d3
     where d3.seq <= size(request->robo_sr_lst[d1.seq]->sr_lst[d2.seq]->qual,5)
join rdc
with nocounter

;call echo(build("curqual: ", curqual))
;call echo(build("robotics_service_resource_cd: ", request->robo_sr_lst[1].robotics_service_resource_cd))
;call echo(build("service_resource_cd: ", request->robo_sr_lst[1]->sr_lst[1].service_resource_cd))
;call echo(build("task_assay_cd: ", request->robo_sr_lst[1]->sr_lst[1].task_assay_cd))
;call echo(build("____av_error_cd: ",     request->robo_sr_lst[1]->sr_lst[1]->qual[1].av_error_cd))
;call echo(build("____slide_ind: ",       request->robo_sr_lst[1]->sr_lst[1]->qual[1].slide_ind))
;call echo(build("____subseq_ind: ",      request->robo_sr_lst[1]->sr_lst[1]->qual[1].subseq_slide_ind))
;call echo(build("____reflex_ind: ",      request->robo_sr_lst[1]->sr_lst[1]->qual[1].reflex_ind))
;call echo(build("____dest_code: ",       request->robo_sr_lst[1]->sr_lst[1]->qual[1].destination_code))

if (curqual = 0)
   go to add_failed
endif

go to exit_script

/***************************************************************************
*       add_failed                                                         *
****************************************************************************/
#add_failed
set reqinfo->commit_ind = 0
set failures = failures + 1
set reply->status_data->subeventstatus[1]->OperationName = "INSERT"
set reply->status_data->subeventstatus[1]->OperationStatus = "Z"
set reply->status_data->subeventstatus[1]->TargetObjectName = "ROBOTICS_DEST_CODES"
set reply->status_data->subeventstatus[1]->TargetObjectValue = "No Records Inserted"
set reply->status_data->status = "Z"

/***************************************************************************
*       exit_script                                                        *
****************************************************************************/
#exit_script
if (failures = 0)
  set reqinfo->commit_ind = 1
  set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
