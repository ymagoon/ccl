 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_stat_period/glb_add_stat_period.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_ADD_STAT_PERIOD.PRG
        Object name:            GLB_ADD_STAT_PERIOD
        Request #:              257535

        Product:                General Lab - Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Insert a statistical period into the database

        Tables read:            n/a

        Tables updated:         qc_stat_period

        Executing from:         General Lab QC Inquiry

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 10/08/96 Chad Moats           Initial Release                     *
;     001 03/24/98 Chad Moats           Allow adding for multiple resources *
;     002 09/15/98 Chad Moats           Add Patient Data logic              *
;    *003 03/26/04 Craig Sumrall        Added list to the reply             *
;     004 07/22/05 Scott Sundahl        Analytical series enhancement       *
;	  005 10/20/05 Matt Schile			Added another control_id to the stat*
;  										list								*
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_ADD_STAT_PERIOD:dba go    
      create program GLB_ADD_STAT_PERIOD:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (  
      	 1 control_id						   = f8                                     
         1 stats[*]
           2 beg_dt_tm             = dq8
           2 end_dt_tm             = dq8
           2 control_id						 = f8
           2 service_resource_cd   = f8                                                      
           2 task_assay_cd         = f8
           2 lot_id                = f8
           2 sum_of_results        = f8
           2 sum_of_squares        = f8
           2 count                 = i4
           2 mean                  = f8
           2 std_dev               = f8
           2 arl_id                = f8
           2 co_var                = f8
           2 f_val                 = f8
           2 z_stat                = f8
           2 normal_cnt            = i4
           2 abnormal_cnt          = i4
           2 review_cnt            = i4
           2 qc_result_type_flag   = i2                                                 
           2 pdm_param_id          = f8                                                        
           2 pdm_range_id          = f8  
           2 stat_key              = i4
           2 series_interval_nbr   = i4
           2 series_sequence_nbr   = i4
      ) 
*/


/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      ( 
         1 stats[*]
           2 stat_key    = i4
           2 stat_id     = f8
         
%i cclsource:Status_block.inc           
         
      )


     #Script
      set failed = "F"
      declare stat_id =              f8 with protect, noconstant(0.0)
      set reply->status_data->status = "F"
      set x = 0
      declare stats_to_add           = i4

      set stats_to_add = size(request->stats, 5)
      
      if(request->control_id != 0.0)
      	for(x = 1 to stats_to_add)
      		set request->stats[x]->control_id = request->control_id
      	endfor
      endif

/*******************************************************************/
/* Get new stat_id.                                                */
/*******************************************************************/
      for (x = 1 to stats_to_add)
        SELECT 
          into "nl:"
            y = seq(reference_seq,nextval)
        FROM 
          dual
        DETAIL
          stat_id = y

          if (x = 1)
            stat = alterlist(reply->stats, stats_to_add)
        
          endif
        
          reply->stats[x].stat_key = request->stats[x].stat_key
          reply->stats[x].stat_id = stat_id
          
        WITH
          format, counter

        if (curqual = 0)
          go to seq_failed
        endif

/********************************************************************/
/* Insert row into qc_stat_period table.                           */
/*******************************************************************/
       	INSERT
          into qc_stat_period qsp
       	SET
          qsp.qc_stat_id         = stat_id,
          qsp.lot_id             = request->stats[x].lot_id,
          qsp.qc_stat_type_cd    = 0,
          qsp.qc_result_type_flag = request->stats[x].qc_result_type_flag,             
          qsp.pdm_param_id       = request->stats[x].pdm_param_id,                      
          qsp.pdm_range_id       = request->stats[x].pdm_range_id,                     
          qsp.control_id       = request->stats[x].control_id,          	
          qsp.service_resource_cd = request->stats[x].service_resource_cd,
          qsp.service_resource_group_ind = 0,
          qsp.task_assay_cd      = request->stats[x].task_assay_cd,
          qsp.beg_dt_tm          = cnvtdatetime(request->stats[x].beg_dt_tm),
          qsp.end_dt_tm          = cnvtdatetime(request->stats[x].end_dt_tm),
          qsp.sum_of_results     = request->stats[x].sum_of_results,
          qsp.sum_of_squares     = request->stats[x].sum_of_squares,
          qsp.result_cnt         = request->stats[x].count,
          qsp.mean               = request->stats[x].mean,
          qsp.arl_id             = request->stats[x].arl_id,
          qsp.std_dev            = request->stats[x].std_dev,
          qsp.co_var             = request->stats[x].co_var,
          qsp.f_val              = request->stats[x].f_val,
          qsp.z_stat             = request->stats[x].z_stat,
          qsp.normal_cnt         = request->stats[x].normal_cnt,
          qsp.abnormal_cnt       = request->stats[x].abnormal_cnt,
          qsp.review_cnt         = request->stats[x].review_cnt,
          qsp.series_interval_nbr = request->stats[x].series_interval_nbr,
          qsp.series_sequence_nbr = request->stats[x].series_sequence_nbr,
          qsp.results_inc_flag   = 0,
          qsp.updt_dt_tm         = cnvtdatetime(curdate,curtime),
          qsp.updt_cnt           = 0,
          qsp.updt_task          = reqinfo->updt_task,
          qsp.updt_id            = reqinfo->updt_id,
          qsp.updt_applctx       = reqinfo->updt_applctx
        WITH
          nocounter
     
        if (curqual = 0)
          go to qsp_insert_failed
        endif     
      endfor

      go to exit_script

/********************************************************************/ 
/* Executed if sequence cannot be obtained.                         */
/********************************************************************/
     #seq_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "seq"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "stat_id"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Executed if control_lot table insert is unsuccessful.            */
/********************************************************************/
     #qsp_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "qc_stat_period table"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
         commit
      elseif (failed = "Z")
         set reply->status_data->status = "Z"
      else
         rollback
      endif

END
GO     

;Generated by GNU enscript 1.6.4.
