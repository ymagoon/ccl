 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_qc_rule_description/glb_get_qc_rule_description.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_QC_RULE_DESCRIPTION.PRG
        Object name:            GLB_GET_QC_RULE_DESCRIPTION
        Request #:              257505

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieves QC Rule descriptions for a given 
                                alphabetical range.
                               
        Tables read:            qc_rule_type
                                
        Tables updated:         n/a

        Executing from:         General Lab Build/Maintain QC Reference tool

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 06/25/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_QC_RULE_DESCRIPTION:dba go    
      create program GLB_GET_QC_RULE_DESCRIPTION:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                               
         1 desc_begin                = vc        
         1 desc_end                  = vc
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 rules[5]
           2 nbr_rules               = i4
           2 short_description       = vc
           2 rule_id                 = f8
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set reply->status_data->status = "F"
      set rule_cnt = 0
      set desc_begin = request->desc_begin
      set desc_end = request->desc_end
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty


/*******************************************************************/
/* Get short description for requested range.                      */
/*******************************************************************/

      IF (request->desc_begin = "")
         SELECT 
         into  "nl:"
            qct.rule_id,
            qct.short_description
         FROM
            qc_rule_type qct
         WHERE qct.active_ind > 0
         DETAIL
            rule_cnt = rule_cnt + 1
            IF (mod(rule_cnt, 5) = 1 and rule_cnt != 1)
                stat = alter(reply->rules, rule_cnt + 5)
            ENDIF
            reply->rules[rule_cnt]->nbr_rules = rule_cnt
            reply->rules[rule_cnt]->short_description = qct.short_description
            reply->rules[rule_cnt]->rule_id = qct.rule_id
         WITH
            nocounter
      ELSE
         SELECT 
         into  "nl:"
            qct.rule_id,
            qct.short_description
         FROM
            qc_rule_type qct
         WHERE qct.short_description between desc_begin and desc_end
            and qct.active_ind > 0
         DETAIL
            rule_cnt = rule_cnt + 1
            IF (mod(rule_cnt, 5) = 1 and rule_cnt != 1)
                stat = alter(reply->rules, rule_cnt + 5)
            ENDIF
            reply->rules[rule_cnt]->nbr_rules = rule_cnt
            reply->rules[rule_cnt]->short_description = qct.short_description
            reply->rules[rule_cnt]->rule_id = qct.rule_id
         WITH
            nocounter
      ENDIF

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      IF (curqual = 0)
         go to invalid_rule
      ELSE
        set reply->status_data->status = "S"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = "Successful"
      ENDIF

      set stat = alter(reply->rules, rule_cnt)

      go to exit_script

/********************************************************************/ 
/* Executed if requested description is not found.                  */
/********************************************************************/
     #invalid_rule
      set reply->status_data->subeventstatus[1]->operationname = 
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "S"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "qc_rule_type table"
      set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
END
GO     

;Generated by GNU enscript 1.6.4.
