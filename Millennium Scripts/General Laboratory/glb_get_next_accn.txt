 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_next_accn/glb_get_next_accn.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1997 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_next_accn.prg
        Object name:            glb_get_next_accn
        Request #:              250123

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Retrieve a given number of queued accessions
                                for result entry from INSTR_ACCN_QUEUE.  If
                                a processing personnel id is passed in, find
                                the available accessions and update
                                the records to in process status.  If no
                                processing personnel id is passed, return
                                the number of records requested and exit.

        Tables read:            instr_accn_queue

        Tables updated:         instr_accn_queue
        Executing from:

        Special Notes:          The keep_record field is used for debugging
                                purposes and will cause a read to be performed
                                on the queue and then the record is placed
                                back on the queue at the end.
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 07/22/97 Jeff Fry             Initial Release                     *
;    *001 08/08/97 Hal Patchen          Add record locking                  *
;    *002 09/17/97 Hal Patchen          Release record lock if over 10 mins *
;    *003 09/18/97 Jeff Fry             Allow client to flex release time   *
;    *                                  of 10 mins by defining a row on the *
;    *                                  instr_accn_queue table with a       *
;    *                                  service_resource_cd = 0 and a time- *
;    *                                  out value in the sequence field.    *
;    *004 04/15/98 Jeff Fry             Return the sub-section sr_cd too.   *
;    *005 09/24/02 Mark Brooks          Added service resource security.    *
;    *006 08/07/03 Craig Sumrall 		Updated select table (person-prsnl) *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_NEXT_ACCN:dba go
             create program GLB_GET_NEXT_ACCN:dba

      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  service_resource_cd          = f8
         ; Passing in a resource_level_flag = 1 will prevent a lookup to
         ;   obtain children (TestSite-level) service_resource_cd's.
         1  resource_level_flag          = i2 ;0 = Unknown or SubSection
                                              ;1 = TestSite
         1  keep_record                  = i2
         1  nbr_to_get                   = i2                             ;001
         1  in_process_prsnl_id          = f8                             ;001
         1  resource_sec_ind             = i2                             ;005
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      (
;001         1  accession                    = vc
         1  qual_cnt                     = i4                             ;001
         1  qual[*]                                                       ;001
            2  accession                 = vc                             ;001
            2  in_process_prsnl_id       = f8                             ;001
            2  in_process_prsnl_name     = vc                             ;001
            2  in_process_dt_tm          = dq8                            ;001
         1  resource_queue_cnt           = i4
         1  resource_available_accn_cnt  = i4                             ;001
         ;TestSite(s) will be returned if request->resource_level_flag = 0.
         1  service_resource_cnt         = i4
         1  service_resources[2]
            2  service_resource_cd       = f8
            2  service_resource_disp     = vc                             ;001
            2  service_resource_mean     = vc                             ;001
%i cclsource:status_block.inc
      )

%i cclsource:pcs_resource_security.inc                                    ;005


      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set reply->status_data.status = "F"


         declare dServiceResourceCd = f8 with protect, noconstant(0.0)     ;005
         declare nResourceSecInd = i2 with protect, noconstant(0)          ;005

         call InitResourceSecurity(request->resource_sec_ind)              ;005

      /***********************************************************************
      * Load service resource relationships for subsection if necessary.     *
      ***********************************************************************/
         set sr_cnt = 0
         set time_out = 10

         if (request->resource_level_flag = 0)
         ;Resolve service_resources and exit
            SELECT into "nl:"
               r.child_service_resource_cd
            FROM
               resource_group r
            WHERE
               request->service_resource_cd = r.parent_service_resource_cd
            AND r.root_service_resource_cd = 0.0

            DETAIL
               dServiceResourceCd = r.child_service_resource_cd             ;005
               if (IsResourceViewable(dServiceResourceCd))                  ;005
                   sr_cnt = sr_cnt + 1
                   if (mod(sr_cnt,2) = 1 and sr_cnt != 1)
                       stat = alter(reply->service_resources,sr_cnt + 2)
                   endif
                   reply->service_resources[sr_cnt]->service_resource_cd =
                       r.child_service_resource_cd
                   reply->service_resource_cnt = sr_cnt
               endif                                                        ;005
            WITH
               nocounter

            if (curqual = 0 or sr_cnt = 0)
               set reply->service_resource_cnt = 1
               set stat = alter(reply->service_resources, 1)
               set reply->service_resources[1]->service_resource_cd =
                  request->service_resource_cd
            else
               set sr_cnt = sr_cnt + 1                                  ;004
               set reply->service_resource_cnt = sr_cnt                 ;004
               set stat = alter(reply->service_resources, sr_cnt)
               set reply->service_resources[sr_cnt]->                   ;004
                  service_resource_cd = request->service_resource_cd    ;004
               set request->service_resource_cd =
                  reply->service_resources[1]->service_resource_cd
            endif
            set reply->status_data.status = "P"
            go to Exit_Script
         endif

      /***********************************************************************
      * Load queued accessions for an instrument.                            *
      ***********************************************************************/
         set q_cnt = -1
         set in_process_ind = 0                                           ;001
         set max_seq = 0

         select into "nl:"
           q.service_resource_cd
          ,q.sequence
          ,q.accession
          ,q.in_process_prsnl_id                                          ;001
          ,q.in_process_dt_tm                                             ;001
         from
           instr_accn_queue q
         where q.service_resource_cd = request->service_resource_cd
         or    q.service_resource_cd = 0.0                                ;003

;001         order q.sequence
         order by                                                         ;001
;002            if (request->in_process_prsnl_id > 0.0)                   ;001
;002               q.in_process_prsnl_id                                  ;001
;002            endif,                                                    ;001
            q.service_resource_cd,                                        ;003
            q.sequence                                                    ;001

         head q.service_resource_cd
           dServiceResourceCd = q.service_resource_cd                     ;005
           if (IsResourceViewable(dServiceResourceCd))                    ;005
             nResourceSecInd = 1                                          ;005
           else                                                           ;005
             nResourceSecInd = 0                                          ;005
           endif                                                          ;005

           if (q.service_resource_cd = 0.0)                               ;003
             if (q.sequence > 0)                                          ;003
               time_out = q.sequence                                      ;003
             endif                                                        ;003
;jdf       endif                                                          ;003
           else                                                           ;jdf
             q_cnt = 0
             avail_accn_cnt = 0                                           ;001
             reply->resource_queue_cnt = 0                                ;001
           endif                                                          ;jdf
;001           reply->accession = q.accession

         detail
           if ( (q.service_resource_cd != 0.0)                            ;003
                and (nResourceSecInd = 1) )                               ;005
             reply->resource_queue_cnt = reply->resource_queue_cnt + 1    ;001
             ;* If records will be marked as in process by a given tech,  ;001
             ;* only return records that aren't in process.               ;001
             ;* Otherwise, return the request number of records to get    ;001
             ;* without regard to their in process status.                ;001
             if (request->in_process_prsnl_id > 0.0)                      ;001
;002              if (q.in_process_prsnl_id = 0.0)                            ;001
                if (q.in_process_prsnl_id = 0.0                           ;002
              or  q.in_process_dt_tm <                                    ;002
             datetimeadd(cnvtdatetime(curdate,curtime), -time_out/1440.0));003
;003               datetimeadd(cnvtdatetime(curdate,curtime), -10/1440.0));002
                   q_cnt = q_cnt + 1
                   if (q_cnt <= request->nbr_to_get)                      ;001
                      stat = alterlist(reply->qual, q_cnt)                ;001
                      reply->qual_cnt = q_cnt                             ;001
                      reply->qual[q_cnt].accession = q.accession          ;001
                      reply->qual[q_cnt].in_process_prsnl_id =            ;001
                        q.in_process_prsnl_id                             ;001
                      reply->qual[q_cnt].in_process_dt_tm =               ;001
                        q.in_process_dt_tm                                ;001
                   endif                                                  ;001
                   avail_accn_cnt = avail_accn_cnt + 1
                endif                                                     ;001
             else                                                         ;001
                q_cnt = q_cnt + 1                                         ;001
;002              if (q_cnt <= request->nbr_to_get)                           ;001
                if (q_cnt <= request->nbr_to_get                          ;002
                or request->nbr_to_get = 0)                               ;002
                   ;* Return requested number or all                      ;002
                   stat = alterlist(reply->qual, q_cnt)                   ;001
                   reply->qual_cnt = q_cnt                                ;001
                   reply->qual[q_cnt].accession = q.accession             ;001
                   reply->qual[q_cnt].in_process_prsnl_id =               ;001
                     q.in_process_prsnl_id                                ;001
                   reply->qual[q_cnt].in_process_dt_tm =                  ;001
                     q.in_process_dt_tm                                   ;001
                   ;* If record is currently in process by a user, set flag.;001
                   if (q.in_process_prsnl_id > 0.0)                       ;001
                      in_process_ind = 1                                  ;001
                   endif                                                  ;001
                endif                                                     ;001
                if (q.in_process_prsnl_id = 0.0)                          ;001
                   avail_accn_cnt = avail_accn_cnt + 1                    ;001
                endif                                                     ;001
             endif                                                        ;001
           endif                                                          ;003

         foot q.service_resource_cd
           if ( (q.service_resource_cd != 0.0)                            ;003
               and (nResourceSecInd = 1) )                                ;005
             max_seq = max(q.sequence)
             q_cnt = q_cnt - 1
             reply->resource_available_accn_cnt = avail_accn_cnt          ;001
           endif                                                          ;003
;001           reply->resource_queue_cnt = q_cnt

;001         with nocounter, forupdate(q)
         with nocounter                                                   ;001

;/**** DEBUG ****
call echo(build("request->service_resource_cd = ",
                 request->service_resource_cd), 1)
call echo(build("q_cnt = ", q_cnt), 1)
call echo(build("reply->resource_queue_cnt = ", reply->resource_queue_cnt), 1)
call echo(build("reply->resource_available_accn_cnt = ",
                 reply->resource_available_accn_cnt), 1)
call echo(build("max_seq = ", max_seq), 1)
;**** DEBUG ****/


         if (q_cnt < 0)
            set reply->status_data.status = "Z"   ;Zero qualified
            go to Exit_Script
         else
            set reply->status_data.status = "S"   ;We got one!
         endif

      /***********************************************************************
      * Load in process personnel name, if necessary.                        *
      ***********************************************************************/
         if (in_process_ind = 1)                                          ;001
            select into "nl:"                                             ;001
               d.seq,                                                     ;001
               p.name_full_formatted                                      ;001
            from                                                          ;001
               (dummyt d with seq = value(reply->qual_cnt)),              ;001
               prsnl p                                                    ;001
            plan d                                                        ;001
               where reply->qual[d.seq].in_process_prsnl_id > 0.0         ;001
            join p                                                        ;001
               where p.person_id = reply->qual[d.seq].in_process_prsnl_id ;001
            detail                                                        ;001
               cnt = d.seq                                                ;001
               reply->qual[cnt].in_process_prsnl_name =                   ;001
                 p.name_full_formatted                                    ;001
            with nocounter                                                ;001
         endif                                                            ;001
/**** DEBUG ****
if (reply->qual_cnt > 0)
   call echo(build("reply->qual_cnt = ", reply->qual_cnt))
   for (x = 1 to reply->qual_cnt)
      call echo(build("reply->qual[", x, "].accession = ",
        reply->qual[x].accession))
      call echo(build("reply->qual[", x, "].in_process_prsnl_id = ",
        reply->qual[x].in_process_prsnl_id))
      call echo(build("reply->qual[", x, "].in_process_prsnl_name = ",
        reply->qual[x].in_process_prsnl_name))
      call echo(build("reply->qual[", x, "].in_process_dt_tm = ",
        format(reply->qual[x].in_process_dt_tm,"dd-mmm-yyyy hh:mm:ss;;dmt")))
   endfor
endif
call echo(" ", 1)
**** DEBUG ****/

      /***********************************************************************
      * Update instr_accn_queue record if in process personnel was passed in *
      ***********************************************************************/
         if (request->keep_record = 1                                     ;001
         and reply->qual_cnt > 0)                                         ;001
            call echo("  --> Saving Queue Record...")                     ;001
            for (cnt = 1 to reply->qual_cnt)                              ;001
               update into instr_accn_queue iaq                           ;001
               set                                                        ;001
                  iaq.sequence = max_seq + 1                              ;001
                 ,iaq.in_process_prsnl_id = 0.0                           ;jdf
               where iaq.service_resource_cd = request->service_resource_cd ;001
                 and iaq.accession = reply->qual[cnt].accession           ;001
               with nocounter                                             ;001
               if (curqual = 0)                                           ;001
                  call echo("  --> Error Saving")                         ;001
               else                                                       ;001
                  call echo("  --> Saved")                                ;001
               endif                                                      ;001
               set max_seq = max_seq + 1                                  ;001
            endfor                                                        ;001
;jdf         endif                                                            ;001
;001         if (request->keep_record = 1)
;001            call echo("  --> Saving Queue Record...")
;001            update into instr_accn_queue  set
;001              sequence = max_seq + 1
;001            where service_resource_cd = request->service_resource_cd
;001              and accession = reply->accession
;001            with nocounter
;001            if (curqual = 0)
;001               call echo("  --> Error Saving")
;001            else
;001               call echo("  --> Saved")
;001            endif
;001         else
;001            delete from instr_accn_queue q
;001            where q.service_resource_cd = request->service_resource_cd
;001              and q.accession = reply->accession
;001            with nocounter
;001         endif
;jdf         if (request->in_process_prsnl_id > 0.0)                          ;001
         elseif (request->in_process_prsnl_id > 0.0)                      ;jdf
            ;* Lock records                                               ;001
            select into "nl:"                                             ;001
               d.seq,                                                     ;001
               q.service_resource_cd,                                     ;001
               q.accession                                                ;001
            from                                                          ;001
               (dummyt d with seq = value(reply->qual_cnt)),              ;001
               instr_accn_queue q                                         ;001
            plan d                                                        ;001
            join q                                                        ;001
               where q.service_resource_cd = request->service_resource_cd ;001
                 and q.accession = reply->qual[d.seq].accession           ;001
            with                                                          ;001
               nocounter,                                                 ;001
               forupdate(q)                                               ;001
            ;* Update records to in process status                        ;001
            update into instr_accn_queue q,                               ;001
                       (dummyt d with seq = value(reply->qual_cnt))       ;001
            set                                                           ;001
              q.in_process_prsnl_id = request->in_process_prsnl_id,       ;001
              q.in_process_dt_tm = cnvtdatetime(curdate, curtime3),       ;001
              reply->qual[d.seq].in_process_prsnl_id =                    ;001
                request->in_process_prsnl_id,                             ;001
              reply->qual[d.seq].in_process_dt_tm =                       ;001
                cnvtdatetime(curdate, curtime3)                           ;001
            plan d                                                        ;001
;002               where reply->qual[d.seq].in_process_prsnl_id = 0.0         ;001
            join q                                                        ;001
               where q.service_resource_cd = request->service_resource_cd ;001
                 and q.accession = reply->qual[d.seq].accession           ;001
            with nocounter                                                ;001
         endif                                                            ;001

      #Exit_Script
         if (reply->status_data.status = "S")
            ; commit
            set reqinfo->commit_ind = 1
         else
            ; rollback
            set reqinfo->commit_ind = 0
         endif


         if ((reply->status_data->status != "F") and
             (GetResourceSecurityStatus(0) != "S"))                           ;005
             call PopulateResSecStatusBlock(0)                                ;005
             set reply->status_data->status = GetResourceSecurityStatus(0)    ;005
         endif

       end
       go

;Generated by GNU enscript 1.6.4.
