 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_person_orders_by_accn/glb_get_person_orders_by_accn.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2000 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_person_orders_by_accn.prg
        Object name:            glb_get_person_orders_by_accn
        Request #:              250153

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Load patient orders for a given accession.

        Tables read:            accession_order_r
                                code_value
                                container
                                encounter
                                mic_order_lab
                                orders
                                order_comment
                                order_container_r
                                order_laboratory
                                organization
                                prsnl
                                v500_specimen

        Tables updated:         None
        Executing from:

        Special Notes:
******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 03/25/98 Hal Patchen          Initial Release                     *
;    *001 06/07/99 Gary Runde           Retrieve the encounter status code  *
;    *                                  and the org_name                    *
;    *002 05/23/00 Hal Patchen          Return encounter organization and   *
;    *                                  confidentiality code for            *
;    *                                  organization level security.        *
;    *003 09/14/00 Hal Patchen          Return encounter type               *
;    *004 03/29/04 Eric Smith           Refactor the code look up  and      *
;    *                                  retrieve the speciman               *
;    *                                  descprition for AP speciman Orders  *
;    *005 09/29/05 Nick Smith           Prevented rows of Helix cases from  *
;    *                                  being returned, added support to    *
;    *                                  return the case name/accession for  *
;    *                                  each order in the reply.            *
;    *006 10/06/06 Tim Sady             Added case_groups list to reply.    *
;    *007 03/31/09 Abhroneel Chowdhury  Added activity_subtype to reply.    *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_PERSON_ORDERS_BY_ACCN:dba go
             create program GLB_GET_PERSON_ORDERS_BY_ACCN:dba
%i cclsource:pcs_code.inc
%i cclsource:pcs_SUBEVENT.inc

      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  accession                    = c20
         1  activity_types[x]
            2  activity_type_cd          = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      (
         1  qual_cnt                     = i4
         1  qual[*]
            2  order_id                  = f8
            2  updt_cnt                  = i4
            2  cs_order_id               = f8
            2  cs_catalog_cd             = f8
            2  cs_order_mne              = vc
            2  catalog_cd                = f8
            2  catalog_type_cd           = f8
            2  order_mnemonic            = vc
            2  activity_type_cd          = f8
            2  activity_type_disp        = vc
            2  activity_type_desc        = vc
            2  activity_type_mean        = vc
            2  activity_subtype_cd       = f8
            2  activity_subtype_disp     = vc
            2  activity_subtype_desc     = vc
            2  activity_subtype_mean     = vc
            2  orig_order_dt_tm          = dq8
            2  order_status_cd           = f8
            2  order_status_disp         = vc
            2  order_status_mean         = vc
            2  dept_status_cd            = f8
            2  dept_status_disp          = vc
            2  dept_status_mean          = vc
            2  encntr_id                 = f8
            2  last_update_provider_id   = f8
            2  last_update_provider_name = vc
            2  encntr_type_cd            = f8                          ;003
            2  encntr_type_disp          = vc                          ;003
            2  encntr_type_mean          = vc                          ;003
            2  encntr_status_cd          = f8                          ;001
            2  encntr_status_disp        = vc                          ;001
            2  encntr_org_id             = f8                          ;002
            2  org_name                  = vc                          ;001
            2  confid_level_cd           = f8                          ;002
            2  confid_level_disp         = vc                          ;002
            2  loc_facility_cd           = f8
            2  loc_facility_disp         = vc
            2  loc_nurse_unit_cd         = f8
            2  loc_nurse_unit_disp       = vc
            2  loc_room_cd               = f8
            2  loc_room_disp             = vc
            2  loc_bed_cd                = f8
            2  loc_bed_disp              = vc
            2  reason_for_visit          = vc
            2  accession                 = vc
            2  specimen_type_cd          = f8
            2  specimen_type_disp        = vc   ;codeset 2052
            2  specimen_type_desc        = vc
            2  specimen_type_mean        = vc
            2  body_site_cd              = f8
            2  body_site_disp            = vc
            2  current_start_dt_tm       = dq8
            2  drawn_dt_tm               = dq8
            2  report_priority_cd        = f8
            2  report_priority_disp      = vc
            2  collection_priority_cd    = f8
            2  collection_priority_disp  = vc
            2  order_comment_ind         = i2
            2  susceptibility_ind        = i2
            2  positive_ind              = i2
            2  micro_status_cd           = f8
            2  micro_status_disp         = vc
            2  oe_format_id              = f8
            2  specimen_src_text         = vc
            2  chart_requested_ind       = i2
            2  case_accession            = c20
            2  case_type_mnemonic        = vc
            2  batch_order_status_cd     = f8
            2  batch_order_status_disp   = vc
            2  case_groups[*]
               3  case_group_description = vc
            2  ord_rqstn_qual[*]
               3 ord_rqstn_id            = f8
               3 rqstn_assignment_ident  = vc
%i cclsource:status_block.inc
      )

      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         declare COMMENT_TYPE_CODESET    = i4  with constant (14), protect
         declare ORDER_COMMENT_CDF       = c12 with constant ("ORD COMMENT"), protect
         declare ORDER_NOTE_CDF          = c12 with constant ("ORD NOTE"), protect
         declare CANCEL_COMMENT_CDF      = c12 with constant ("CANCELREASON"), protect
         declare order_comment_cd        = f8  with noconstant(0.0),protect
         declare order_note_cd           = f8  with noconstant(0.0),protect
         declare cancel_comment_cd       = f8  with noconstant(0.0),protect
         declare nbr_of_activity_types   = i4
         declare q_cnt                   = i4
         declare lIdx                    = i4 with protect, noconstant(0)
%i cclsource:glb_get_person_orders_hlx_info.inc

         set reply->status_data.status = "F"

      /***********************************************************************
      * Select processing code values                                        *
      ***********************************************************************/
         set order_comment_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,ORDER_COMMENT_CDF)
         if (order_comment_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Order Comment code failed")
           set reply->status_data.status = "Z"
         endif
         
         if (reply->status_data.status = "Z")
           go to Exit_Script
         endif
         
         set order_note_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,ORDER_NOTE_CDF)
         if (order_note_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Order Note code failed")
           set reply->status_data.status = "Z"
         endif
         
         if (reply->status_data.status = "Z")
           go to Exit_Script
         endif

		     set cancel_comment_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,CANCEL_COMMENT_CDF)
         if (cancel_comment_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Cancel Comment code failed")
           set reply->status_data.status = "Z"
         endif
         
         if (InitializeHelixInfo(NULL) = 0)
           set reply->status_data.status = "Z"
         endif
         
         if (reply->status_data.status = "Z")
           go to Exit_Script
         endif            
         

      /***********************************************************************
      * Select patient orders based on accession.                            *
      ***********************************************************************/
         set nbr_of_activity_types = size(request->activity_types, 5)

         select into "nl:"
            aor.seq,
            d_ocr.seq,
            ocr_exists = decode(ocr.seq, "Y", "N"),
            ocr.seq,
            c.seq,
            o.order_id,
            o_cs.seq,
            ol.seq,
            e.seq,
            org.seq,                                                   ;001
            pl.seq,
            s.seq,
            d_mol.seq,
            mol_exists = decode(mol.seq, "Y", "N"),
            mol.seq,
            d_oc.seq,
            oc_exists = decode(oc.seq, "Y", "N"),
            oc.seq,
            chart_copies_exist_ind = decode(pra.seq, 1, 0),
            r_exists = evaluate(nullind(r.ord_rqstn_id), 0, "Y", "N")

            /* selection fields:
            aor.accession,
            aor.primary_flag,
            aor.order_id,
            ocr.container_id,
            ocr.order_id,
            ocr.collection_status_flag,
            c.container_id,
            c.drawn_dt_tm,
            d.seq,
            o.person_id,
            o.cs_order_id,
            o.order_id,
            o.catalog_cd,
            o.order_mnemonic,
            o.activity_type_cd,
            o.orig_order_dt_tm,
            o.order_status_cd,
            o.dept_status_cd,
            o.encntr_id,
            o.current_start_dt_tm,
            o_cs.catalog_cd,
            o_cs.order_mnemonic,
            ol.report_priority_cd,
            ol.collection_priority_cd,
            e.encntr_type_cd,                                          ;003
            e.loc_facility_cd,
            e.loc_nurse_unit_cd,
            e.loc_room_cd,
            e.loc_bed_cd,
            e.reason_for_visit,
            e.organization_id,                                         ;002
            e.confid_level_cd,                                         ;002
            pl.person_id,
            pl.name_full_formatted,
            d_s.seq,
            s_exists = decode(s.seq, "Y", "N"),
            s.specimen_id,
            s.specimen_type_cd,
            s.body_site_cd,
            d_mol.seq,
            mol.susceptibility_ind,
            mol.positive_ind,
            mol.status_cd,
            d_oc.seq,
            oc_exists = decode(oc.seq, "Y", "N"),
            oc.action_sequence,
            oc.comment_type_cd,
            oc.long_text_id
            */

         from
            accession_order_r aor,
            dummyt d_ocr,
            order_container_r ocr,
            container c,
            orders o,
            orders o_cs,
            order_laboratory ol,
            encounter e,
            organization org,		                                      ;001
            prsnl pl,
            v500_specimen s,
            dummyt d_mol,
            mic_order_lab mol,
            dummyt d_oc,
            order_comment oc,
            (dummyt d_pra with seq = 1),
            prsnl_reltn_activity pra,
            ord_rqstn r,
            ord_rqstn_ord_r oror,
            order_catalog ocat

         plan    aor where aor.accession = request->accession
                       and aor.primary_flag = 0
         join    o   where o.order_id = aor.order_id
                       and expand(lIdx, 1, nbr_of_activity_types, o.activity_type_cd, 
                              request->activity_types[lIdx].activity_type_cd)
         join   ocat where ocat.catalog_cd = o.catalog_cd
                       and ocat.activity_subtype_cd != activity_subtype_hlx_co_cd
         join   o_cs where o_cs.order_id = o.cs_order_id
         join    ol  where ol.order_id = o.order_id
                       and not exists (select o.order_id from ucm_case uc ;Ignore all Helix case-level orders
                                       where o.order_id = uc.order_id)
         join    e   where e.encntr_id = o.encntr_id
         join   org  where org.organization_id = e.organization_id     ;001
         join    pl  where pl.person_id = o.last_update_provider_id
         join   oror where oror.order_id = outerjoin(o.order_id)
         join   r    where r.ord_rqstn_id = outerjoin(oror.ord_rqstn_id)          
         join  d_ocr where d_ocr.seq = 1
         join    ocr where ocr.order_id = aor.order_id
         join    c   where c.container_id = ocr.container_id
         join    s   where s.specimen_id = c.specimen_id
         join  d_mol where d_mol.seq = 1
         join    mol where mol.order_id = o.order_id
                       and mol.catalog_cd = o.catalog_cd
         join  d_oc  where d_oc.seq = 1
         join    oc  where oc.order_id = o.order_id
                       and oc.comment_type_cd in (order_comment_cd,
                                                  order_note_cd,
                                                  cancel_comment_cd)
         join d_pra
         join pra  where pra.parent_entity_id = o.order_id and pra.parent_entity_name = "ORDERS"

         order by
            o.order_id

         head report
            q_cnt = 0

         head o.order_id
            q_cnt = q_cnt + 1
            stat = alterlist(reply->qual, q_cnt)
            reply->qual_cnt = q_cnt
            reply->qual[q_cnt].accession = aor.accession
            reply->qual[q_cnt].order_id = o.order_id
            reply->qual[q_cnt].updt_cnt = o.updt_cnt
            reply->qual[q_cnt].cs_order_id = o.cs_order_id
            if (o_cs.order_id > 0.0)
               reply->qual[q_cnt].cs_catalog_cd = o_cs.catalog_cd
               reply->qual[q_cnt].cs_order_mne = o_cs.order_mnemonic
            endif
            reply->qual[q_cnt].catalog_cd = o.catalog_cd
            reply->qual[q_cnt].catalog_type_cd = o.catalog_type_cd
            reply->qual[q_cnt].order_mnemonic = o.order_mnemonic
            reply->qual[q_cnt].activity_type_cd = o.activity_type_cd
            reply->qual[q_cnt].activity_subtype_cd = ocat.activity_subtype_cd
            reply->qual[q_cnt].orig_order_dt_tm = o.orig_order_dt_tm
            reply->qual[q_cnt].current_start_dt_tm = o.current_start_dt_tm
            reply->qual[q_cnt].order_status_cd = o.order_status_cd
            reply->qual[q_cnt].dept_status_cd = o.dept_status_cd
            reply->qual[q_cnt].encntr_id = o.encntr_id
            reply->qual[q_cnt].report_priority_cd = ol.report_priority_cd
            reply->qual[q_cnt].collection_priority_cd =
              ol.collection_priority_cd
            reply->qual[q_cnt].loc_facility_cd = e.loc_facility_cd
            reply->qual[q_cnt].encntr_type_cd = e.encntr_type_cd       ;003
            reply->qual[q_cnt].encntr_status_cd = e.encntr_status_cd   ;001
            reply->qual[q_cnt].encntr_org_id = e.organization_id       ;002
            reply->qual[q_cnt].org_name = org.org_name                 ;001
            reply->qual[q_cnt].confid_level_cd = e.confid_level_cd     ;002
            reply->qual[q_cnt].loc_nurse_unit_cd = e.loc_nurse_unit_cd
            reply->qual[q_cnt].loc_room_cd = e.loc_room_cd
            reply->qual[q_cnt].loc_bed_cd = e.loc_bed_cd
            reply->qual[q_cnt].reason_for_visit = e.reason_for_visit
            reply->qual[q_cnt].last_update_provider_id =
              o.last_update_provider_id
            reply->qual[q_cnt].oe_format_id = o.oe_format_id
            reply->qual[q_cnt].specimen_src_text = s.specimen_src_text
            if (pl.person_id > 0.0)
               reply->qual[q_cnt].last_update_provider_name =
                 pl.name_full_formatted
            endif
            if (ocr_exists = "Y")
               reply->qual[q_cnt].drawn_dt_tm = c.drawn_dt_tm
               reply->qual[q_cnt].specimen_type_cd = s.specimen_type_cd
               reply->qual[q_cnt].body_site_cd = s.body_site_cd
            endif
            if (mol_exists = "Y")
               reply->qual[q_cnt].susceptibility_ind =
                 mol.susceptibility_ind
               reply->qual[q_cnt].positive_ind = mol.positive_ind
               reply->qual[q_cnt].micro_status_cd = mol.status_cd
            endif
            reply->qual[q_cnt].order_comment_ind = 0
            reply->qual[q_cnt].chart_requested_ind = chart_copies_exist_ind

            if (r_exists = "Y")
              stat = alterlist(reply->qual[q_cnt].ord_rqstn_qual, 1)
              reply->qual[q_cnt].ord_rqstn_qual[1].ord_rqstn_id = r.ord_rqstn_id
              reply->qual[q_cnt].ord_rqstn_qual[1].rqstn_assignment_ident = r.rqstn_assignment_ident
            endif
            
         detail
            if (oc_exists = "Y")
               reply->qual[q_cnt].order_comment_ind = 1
            endif

         foot o.order_id
            row+0

         with
            nocounter,
            outerjoin = d_oc,
            dontcare = oc,
            outerjoin = d_ocr,
            dontcare = ocr,
            outerjoin = d_mol,
            dontcare = mol,
            maxread(oc, 1),
            outerjoin = d_pra,
            dontcare = pra,
            maxqual(pra, 1)

       /***********************************************************************
       * Obtain Helix info
       ***********************************************************************/
         if (q_cnt > 0)
            call LoadHelixInfo(NULL)
         endif

      /***********************************************************************
      * Resize reply record                                                  *
      ***********************************************************************/
         if (q_cnt > 0)
            set reply->status_data.status = "S"    ;Successful
         else
            set reply->status_data.status = "Z"    ;Zero
         endif

      #Exit_Script
         end
         go

;Generated by GNU enscript 1.6.4.
