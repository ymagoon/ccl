 ;;Solution_Test/script/PathNet -- Gen Lab/glb_equation_audit/glb_equation_audit.inc Turn on black mode

/***************************************************************************************begin 003 mod block****/

record captions																
(
1 rpt_no = vc
1 prg = vc
1 tm = vc
1 as_of = vc
1 prep = vc
1 tsk_assy = vc
1 serv_res = vc
1 eq_parm = vc
1 all = vc
1 all_spec = vc
1 all_gend = vc
1 unk_age = vc
1 to_ = vc
1 active = vc
1 inactive = vc
1 proc = vc
1 var = vc
1 const = vc
1 pg = vc
)

Set captions->rpt_no = uar_i18ngetmessage(i18nHandle,"rpt_no","REPORT NO:  ")
Set captions->prg = uar_i18ngetmessage(i18nHandle,"prg","GLB_EQUATION_AUDIT.PRG")
Set captions->tm = uar_i18ngetmessage(i18nHandle,"tm","TIME: ")
Set captions->as_of = uar_i18ngetmessage(i18nHandle,"as_of","AS OF DATE: ")
Set captions->prep = uar_i18ngetmessage(i18nHandle,"prep","PREPARED: ")
Set captions->tsk_assy = uar_i18ngetmessage(i18nHandle,"tsk_assy", "  TASK ASSAY")
Set captions->serv_res = uar_i18ngetmessage(i18nHandle,"serv_res","SERVICE RESOURCE")
Set captions->eq_parm = uar_i18ngetmessage(i18nHandle,"eq_parm","EQUATION/PARAMETERS")
Set captions->all = uar_i18ngetmessage(i18nHandle,"all","ALL")
Set captions->all_spec = uar_i18ngetmessage(i18nHandle,"all_spec","All Species")
Set captions->all_gend = uar_i18ngetmessage(i18nHandle,"all_gend","All Genders")
Set captions->unk_age = uar_i18ngetmessage(i18nHandle,"unk_age"," Unknown Ages")
Set captions->to_ = uar_i18ngetmessage(i18nHandle,"to_"," to ")
Set captions->active = uar_i18ngetmessage(i18nHandle,"active","Active")
Set captions->inactive = uar_i18ngetmessage(i18nHandle,"inactive","InActive")
Set captions->proc = uar_i18ngetmessage(i18nHandle,"proc","Procedure")
Set captions->var = uar_i18ngetmessage(i18nHandle,"var","Variable")
Set captions->const = uar_i18ngetmessage(i18nHandle,"const","Constant:  ")
Set captions->pg = uar_i18ngetmessage(i18nHandle,"pg","PAGE ")
/*************************************************************************************end 003 mod block*******/

/********************************************************************/ 
/* SELECT TIME UNIT CODES                                           */
/********************************************************************/

   SELECT
     into "nl:"
       c.code_value,
       c.cdf_meaning
     from 
       code_value c
     where c.code_set in (57,340)
     detail
       case (c.cdf_meaning)
         of "DAYS":
           day_cd = c.code_value
           day_disp = c.display
         of "HOURS":
           hour_cd = c.code_value
           hour_disp = c.display 
        of "MINUTES":
           minute_cd = c.code_value
           minute_disp = c.display
         of "MONTHS":
           month_cd = c.code_value
           month_disp = c.display
         of "WEEKS":
           week_cd = c.code_value
           week_disp = c.display
         of "YEARS":
           year_cd = c.code_value
           year_disp = c.display
         of "MALE":
           male_cd = c.code_value
           male_disp = c.display
         of "FEMALE":
           female_cd = c.code_value
           female_disp = c.display 
        of "UNKNOWN":
           unknown_cd = c.code_value
           unknown_disp = c.display
       endcase

/********************************************************************/ 
/* SELECT EQUATIONS                                                */
/********************************************************************/

    SELECT 
       into trim(printer_name) ;"nl:"
         e.task_assay_cd,
         e.service_resource_cd,
         e.equation_id,
;002         cv1.display,
	 task_assay = trim(UAR_GET_CODE_DISPLAY(e.task_assay_cd),3),			;002
	 serv_resc = trim(UAR_GET_CODE_DISPLAY(e.service_resource_cd),3),		;002
;002         cv1.display_key,
;002         cv2.display,
;002         cv3.display,
         ec.name,
         ec.sequence,
         equat = trim(substring(1, 80, e.equation_description)) ;,
       FROM
         equation e,
         equation_component ec
;002         code_value cv1,
;002         code_value cv2,
;002         code_value cv3
       PLAN e
        where ((e.active_ind = 1 and include_inactive = "N")
        or (include_inactive = "Y"))
        and e.task_assay_cd > 0
       JOIN ec
        where e.equation_id = ec.equation_id
;002       JOIN cv1
;002        where cv1.code_value = e.task_assay_cd
;002       JOIN cv2
;002        where cv2.code_value = e.service_resource_cd
;002       JOIN cv3
;002        where cv3.code_value = e.species_cd
       ORDER BY 
         task_assay, serv_resc, e.equation_id, ec.sequence
;002         cv1.display_key, cv2.display, e.equation_id, ec.sequence
      HEAD PAGE
;003     COL 1   "REPORT NO:  "
         COL 1   captions->rpt_no 												;003
;003     COL 13  "GLB_EQUATION_AUDIT.PRG"
         COL 13   captions->prg 												;003
;003     CALL CENTER("EQUATION AUDIT REPORT",1,132)
         CALL CENTER(uar_i18ngetmessage(i18nHandle,"title",("EQUATION AUDIT REPORT")),1,132) 		;003
;003     COL 107 "TIME: "
         COL 107  captions->tm 												;003
;003     COL 117 CURTIME "HH:MM;;M"
         COL 117 CURTIME "@TIMENOSECONDS;;M" 										;003
         ROW+1   
;003     COL 1   "AS OF DATE: "
         COL 1    captions->as_of												;003 
;003     COL 13   CURDATE "MM/DD/YY;;D"
         COL 13   CURDATE "@SHORTDATE;;Q"											;003  
;003     COL 107 "PREPARED: "
         COL 107  captions->prep												;003  
;003     COL 117 CURDATE "MM/DD/YY;;D"
         COL 117 CURDATE "@SHORTDATE;;Q"											;003
         ROW+2
;003     COL 1    "  TASK ASSAY"
         COL 1    captions->tsk_assy											;003
;003     COL 18   "SERVICE RESOURCE"
         COL 18   captions->serv_res											;003 
;003     COL 72   "EQUATION/PARAMETERS"
         COL 72   captions->eq_parm												;003 
         ROW + 1
         COL 1     underscore
         COL 16    "  "
         COL 35    "  "
         row+1         
      HEAD e.task_assay_cd
;002         task_assay = substring(1, 15, cv1.display)
         col 1    task_assay
      HEAD e.equation_id ; e.service_resource_cd
         if (e.service_resource_cd > 0)
;002           serv_resc = substring(1, 15, cv2.display)
           col 18   serv_resc
         else
;003       col 18   "ALL"
           col 18   captions->all 												;003
         endif
         col 37   equat
         row + 1
         col 35 " "
         if (e.species_cd > 0)
           ;col + 1 species_disp "###########;L"
           species_disp = substring(1, 8, trim(UAR_GET_CODE_DISPLAY(e.species_cd),3))		;002
;002           species_disp = substring(1, 8, cv3.display)
;003       col + 1 species_disp "###########;L"
           col + 1 species_disp "###########;L;F;I"  									;003
         else
;003       col + 1 "All Species"
           col + 1 captions->all_spec 											;003
         endif
         col + 1 ","
         if (e.sex_cd > 0)
           ;col + 1 sex_disp "###########;L"
           case (e.sex_cd)
             of (male_cd):
;003           col + 1 male_disp "###########;L"
               col + 1 male_disp "###########;L;F;I"									;003  
             of (female_cd):
;003           col + 1 female_disp "###########;L"
               col + 1 FEMALE_disp "###########;L;F;I"								;003  
             of (unknown_cd):
;003           col + 1 unknown_disp "###########;L"
               col + 1 unknown_disp "###########;L;F;I"								;003 
           endcase
         else
;003       col + 1 "All Genders" 
           col + 1  captions->all_gend											;003 
         endif
         col + 1 ","

         if (e.unknown_age_ind = 1)              ;001
;003       col + 1 " Unknown Ages"               ;001
           col + 1 captions->unk_age 		 									;003
           col + 1 ","                           ;001
         else                                    ;001
           nbr_minutes = e.age_from_minutes 
           case (e.age_from_units_cd)
             of minute_cd:
               lfactor = 1
               unit_disp = minute_disp
             of hour_cd:
               lfactor = 60 ;minutes per hour
               unit_disp = hour_disp
             of day_cd:
               lfactor = 1440 ;minutes per day
               unit_disp = day_disp
             of week_cd:
               lfactor = 10080 ;minutes per week
               unit_disp = week_disp
             of month_cd:
               lfactor = 43200 ;minutes per month
               unit_disp = month_disp
             of year_cd:
               lfactor = 525600 ;minutes per year
               unit_disp = year_disp
           endcase
           tempage = nbr_minutes / lfactor
           remainder = mod(tempage, lfactor)
           if (remainder != 0)
             if (remainder > (lfactor / 2))
               tempage = tempage + 1
             endif
           endif
;003       col + 1 tempage "####;C"
           col + 1 tempage "####;C;I;F"											;003 
           col + 1 " "
           col + 1 unit_disp
;003       col + 1 " to "
           col + 1 captions->to_   												;003
           nbr_minutes = e.age_to_minutes
           case (e.age_to_units_cd)
             of minute_cd:
               lfactor = 1
               unit_disp = minute_disp
             of hour_cd:
               lfactor = 60 ;minutes per hour
               unit_disp = hour_disp
             of day_cd:
               lfactor = 1440 ;minutes per day
               unit_disp = day_disp
             of week_cd:
               lfactor = 10080 ;minutes per week
               unit_disp = week_disp
             of month_cd:
               lfactor = 43200 ;minutes per month
               unit_disp = month_disp
             of year_cd:
               lfactor = 525600 ;minutes per year
               unit_disp = year_disp
           endcase
           tempage = nbr_minutes / lfactor
           remainder = mod(tempage, lfactor)
           if (remainder != 0)
             if (remainder > (lfactor / 2))
               tempage = tempage + 1
             endif
           endif
;003       col + 1 tempage "####;C"
           col + 1 tempage "####;C;I;F"											;003 
           col + 1 " "
           col + 1 unit_disp
           col + 1 ","
         endif                                   ; 001

         if (e.active_ind = 1)
;003       col + 1 "Active"
           col + 1  captions->active 											;003
         else
;003       col + 1 "InActive"
           col + 1 captions->inactive											;003 
         endif
         row + 1 
      HEAD ec.sequence
           name = substring(1, 15, ec.name)
           col 42 name
           case (ec.component_flag)
             of 1:
;003           col 59 "Procedure"
               col 59  captions->proc 											;003
               row+1
             of 2:
;003           col 59 "Variable"
               col 59  captions->var 											;003
               row+1
             of 3:
;003           col 59 "Constant:  "
               col 59  captions->const 											;003
;003           col 68 ec.constant_value "#####.##"
               col 68 ec.constant_value "#####.##;I;F"								;003 
               row+1
           endcase
      DETAIL
           detail_cnt = detail_cnt + 1
      FOOT PAGE
;003    col 63    "PAGE "
        col 63    captions->pg												;003  
;003    col 68    CURPAGE "###;L"
        col 68    CURPAGE "###;L;I;F"											;003  
      WITH
           nocounter
     

;Generated by GNU enscript 1.6.4.
