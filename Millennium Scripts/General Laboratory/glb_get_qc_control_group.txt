 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_qc_control_group/glb_get_qc_control_group.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_qc_control_group.prg
        Object name:            glb_get_qc_control_group
        Request #:              257589

        Product:                PathNet                             
        Product Team:           General Lab      
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Get the control_group information.
                                
        Tables read:            qc_group_crtl_resource,
                                qc_group_assay
        
        Executing from:         QC Benchmark dll 

        Special Notes:          None                                                                                

******************************************************************************/

 
;~DB~****************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG                  *
;    ****************************************************************************
;    *                                                                          *
;    *Mod Date     Engineer             Comment                                 *
;    *--- -------- -------------------- --------------------------------------- *
;     001 06/16/05 Scott Sundahl        Initial release                         *
;~DE~****************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program glb_get_qc_control_group:dba go
create program glb_get_qc_control_group:dba


/****************************************************************************
* Declarations                                                              *
*****************************************************************************/

/*
record request
(
  1 control_group_cd              = f8
)
*/

record reply
(
  1 control_group_cd              = f8
  1 control_group_name            = c100
  1 control_group_updt_cnt        = i4
  1 active_ind                    = i2
  1 controls [*]
    2 control_id                  = f8
    2 short_description           = c20
    2 resources [*]
      3 qc_group_ctrl_resource_id = f8
      3 service_resource_cd       = f8
      3 service_resource_disp     = c40
      3 qc_group_ctrl_updt_cnt    = i4
  1 procedures [*]
    2 qc_group_assay_id           = f8
    2 task_assay_cd               = f8
    2 task_assay_disp             = c40
    2 deviation_type_flag         = i2
    2 max_dispersion_value        = f8
    2 max_mean_value              = f8
    2 max_result_deviation_value  = f8
    2 result_range_min_value      = f8
    2 result_range_max_value      = f8
    2 qc_group_assay_updt_cnt     = i4
%i cclsource:status_block.inc
)

%i cclsource:pcs_resource_security.inc

call InitResourceSecurity(1)

declare dTempServRes          = f8 with protect, noconstant(0.0)
declare lCount                = i4 with protect, noconstant(0)
declare lCount2               = i4 with protect, noconstant(0)

set reply->status_data.status = "F"

/****************************************************************************
* Retrieve control info                                                     *
*****************************************************************************/

select into "nl:"

from code_value cv

where cv.code_value = request->control_group_cd
  and cv.code_set = 1909 

detail
  reply->control_group_name = cv.definition 
  reply->control_group_cd = request->control_group_cd
  reply->control_group_updt_cnt = cv.updt_cnt 
  reply->active_ind = cv.active_ind
with nocounter


select into "nl:"

from qc_group_ctrl_resource qc,
     control_material cm

plan qc where qc.control_group_cd = request->control_group_cd
          and qc.active_ind = 1
          and cnvtdatetime(curdate, curtime3) between qc.beg_effective_dt_tm and qc.end_effective_dt_tm 

join cm where cm.control_id = qc.control_id 

order by qc.control_id, 
         qc.service_resource_cd  

head qc.control_id
  lCount = lCount + 1
  stat = alterlist(reply->controls, lCount)
  lCount2 = 0

head qc.service_resource_cd 
  dTempServRes = qc.service_resource_cd
  if (dTempServRes != 0.0)
    if (IsResourceViewable(dTempServRes) = true)
      lCount2 = lCount2 + 1
      if (lCount2 > size(reply->controls[lCount]->resources, 5))
        stat = alterlist(reply->controls[lCount]->resources, lCount2 + 9)
      endif
      reply->controls[lCount]->resources[lCount2].qc_group_ctrl_resource_id = qc.qc_group_ctrl_resource_id 
      reply->controls[lCount]->resources[lCount2].service_resource_cd = qc.service_resource_cd 
      reply->controls[lCount]->resources[lCount2].qc_group_ctrl_updt_cnt = qc.updt_cnt 
    endif
  endif
  
foot qc.control_id
  if (lCount2 = 0)
    stat = alterlist(reply->controls, lCount - 1, lCount - 1)
    lCount = lCount -1
  else
    reply->controls[lCount].control_id = qc.control_id 
    reply->controls[lCount].short_description = cm.short_description 
    stat = alterlist(reply->controls[lCount]->resources, lCount2)
  endif 

with nocounter

if (GetResourceSecurityStatus(0) = "F")
  set reply->status_data->subeventstatus[1].TargetObjectValue = "error checking service resource security."
  go to exit_script
endif

/****************************************************************************
* Retrieve assay info                                                       *
*****************************************************************************/

set lCount = 0

select into "nl:"

from qc_group_assay qc

where qc.control_group_cd = request->control_group_cd
  and qc.active_ind = 1
  and cnvtdatetime(curdate, curtime3) between qc.beg_effective_dt_tm and qc.end_effective_dt_tm 

detail
  lCount = lCount +1
  if (lCount > size(reply->procedures, 5))
    stat = alterlist(reply->procedures, lCount + 9)
  endif
  reply->procedures[lCount].deviation_type_flag = qc.deviation_type_flag 
  reply->procedures[lCount].max_dispersion_value = qc.max_dispersion_value 
  reply->procedures[lCount].max_mean_value = qc.max_mean_value 
  reply->procedures[lCount].max_result_deviation_value = qc.max_result_deviation_value 
  reply->procedures[lCount].qc_group_assay_id = qc.qc_group_assay_id 
  reply->procedures[lCount].qc_group_assay_updt_cnt = qc.updt_cnt 
  reply->procedures[lCount].result_range_max_value = qc.result_range_max_value 
  reply->procedures[lCount].result_range_min_value = qc.result_range_min_value 
  reply->procedures[lCount].task_assay_cd = qc.task_assay_cd 
  
with nocounter

set stat = alterlist(reply->procedures, lCount)

if (reply->control_group_cd = 0.0)
  set reply->status_data.status = "Z" 
else
  set reply->status_data.status = "S"
endif

#EXIT_SCRIPT

end

go

;Generated by GNU enscript 1.6.4.
