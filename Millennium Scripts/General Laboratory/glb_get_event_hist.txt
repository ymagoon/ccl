 ;;Solution_Test/script/ePathLink/PathNet General Lab - PathLink Scripts/glb_get_event_hist.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1997 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:     GLB_GET_EVENT_HIST.PRG  
        Object name:          GLB_GET_EVENT_HIST  
        Request #:            250139

        Product:                PathNet WebResultViewer                           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Get the event history for a given event.

        Tables read:            CLINICAL_EVENT

        Tables updated:         None
        Executing from:         WebResultViewer

        Special Notes:          None

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *001 12/31/97 Chad Moats        Initial Release - Rev 8 see req600549  *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program glb_get_event_hist:dba go
create program glb_get_event_hist:dba

/****************************************************************************
 *       Request record                                                     *
 ****************************************************************************/

/*
record request 
(
  1 event_id          = f8  
  1 view_level        = i4
  1 publish_flag      = i2
)
*/


/****************************************************************************
 *    Reply record                                                          *
 ****************************************************************************/

record reply
(
  1 event_hist_list[*]
    2 clinical_event_id         = f8
    2 event_id                  = f8
    2 valid_until_dt_tm         = dq8
    2 valid_from_dt_tm          = dq8
    2 event_class_cd            = f8
    2 event_class_disp          = c40
    2 event_class_desc          = c60
    2 event_class_mean          = vc
    2 event_cd                  = f8
    2 event_disp                = c40
    2 event_desc                = c60
    2 event_mean                = vc
    2 event_tag                 = vc
    2 result_val                = vc
    2 result_units_cd           = f8
    2 result_units_disp         = vc
    2 normalcy_cd               = f8
    2 normalcy_disp             = vc
    2 performed_dt_tm           = dq8
    2 performed_prsnl_id        = f8
    2 verified_dt_tm		= dq8
    2 verified_prsnl_id         = f8
    2 event_end_dt_tm           = dq8

    
%i cclsource:status_block.inc
)


/****************************************************************************
 *     Initialize Variables                                                 *
 ****************************************************************************/

set reply->status_data->status = "F"

set count = 0

if ( request->event_id = 0 or request->event_id = NULL )
    go to exit_script
endif

/****************************************************************************
 *     Select all invalid clinical_event rows for the supplied event_id     *
 ****************************************************************************/

SELECT
INTO "nl:"
    ce.event_id,
    ce.valid_from_dt_tm,
    ce.valid_until_dt_tm,
    ce.event_class_cd,
    ce.event_cd,
    ce.event_tag,
    ce.result_val,
    ce.result_units_cd,
    ce.normalcy_cd
FROM
    clinical_event ce
WHERE
    ce.event_id = request->event_id
AND
    ce.view_level >= request->view_level
AND
    ce.publish_flag = request->publish_flag
ORDER BY
    ce.valid_from_dt_tm DESC
DETAIL
    count = count + 1

    if (count > size(reply->event_hist_list, 5))
        stat = alterlist(reply->event_hist_list, count + 5)
    endif
    reply->event_hist_list[count].clinical_event_id = ce.clinical_event_id   
    reply->event_hist_list[count].event_id = ce.event_id
    reply->event_hist_list[count].valid_from_dt_tm = ce.valid_from_dt_tm
    reply->event_hist_list[count].valid_until_dt_tm = ce.valid_until_dt_tm
    reply->event_hist_list[count].event_class_cd = ce.event_class_cd
    reply->event_hist_list[count].event_cd = ce.event_cd
    reply->event_hist_list[count].event_tag = ce.event_tag
    reply->event_hist_list[count].result_val = ce.result_val
    reply->event_hist_list[count].result_units_cd = ce.result_units_cd
    reply->event_hist_list[count].normalcy_cd = ce.normalcy_cd
    reply->event_hist_list[count].verified_prsnl_id = ce.verified_prsnl_id
    reply->event_hist_list[count].verified_dt_tm = ce.verified_dt_tm
    reply->event_hist_list[count].performed_prsnl_id = ce.performed_prsnl_id
    reply->event_hist_list[count].performed_dt_tm = ce.performed_dt_tm
    reply->event_hist_list[count].event_end_dt_tm = ce.event_end_dt_tm
FOOT REPORT
    stat = alterlist(reply->event_hist_list, count)


WITH nocounter


/*****************************************************************************
 *       Set status                                                          *
 *****************************************************************************/

if (count > 0)
    set reply->status_data->status = "S"
else
    set reply->status_data->status = "Z"
endif

#exit_script

end go
                                 

;Generated by GNU enscript 1.6.4.
