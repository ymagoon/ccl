 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_rr_comments/GLB_ADD_RR_COMMENTS.PRG Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_ADD_RR_COMMENTS.PRG         
        Object name:            GLB_ADD_RR_COMMENTS          
        Request #:                        

        Product:                General Lab - Round Robin               
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Add the new comments to the round_robin_comment
        and long_text table           

        Tables read:            none
                                

        Tables updated:         round_robin_comment
                                long_text
                                
        Executing from:         Round Robin Inquiry

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 02/19/99 Gary Runde           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_ADD_RR_COMMENTS:dba go    
      create program GLB_ADD_RR_COMMENTS:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      ( 
  1  accession_id   = f8
  1  round_robin_ref_id = f8
  1  long_Text_id   = f8
  1  service_resource_cd  = f8
  1  long_text    = vc
  1  sequence   = i4
      )

*/


      record reply
      ( 
  1  round_robin_ref_id   = f8
  1  accession_id           = f8
  1  long_text_id     = f8
  1  long_text      = vc
  1  service_resource_cd    = f8
  1  service_resource_disp  = vc
  1  sequence     = i4
%i cclsource:status_block.inc
)


      #Script
  set reply->status_data->status = "F"
  set failed = "F"
  declare long_text_seq = f8
  declare sequence = i4
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty
         set hSys = 0
         set SysStat = 0
         call uar_SysCreateHandle(hSys,SysStat)
         set sText = fillstring(254, " ")
      
        /********************************************************************/
        /* Get the next long_text_id                                        */
        /********************************************************************/

        subroutine get_long_text_id(none)
set sText = build("Get Long Text ID ", "")
call uar_SysEvent(hSys, 3, "addrrComment get id", NULLTERM(sText))
            select into "nl:"
               next_seq_nbr = 
                 seq(long_data_seq,nextval)
            from dual
            detail
               long_text_seq = next_seq_nbr
            with nocounter, format      
  end 

        /********************************************************************/
        /* Inactivate current comment                                       */
        /********************************************************************/
  subroutine inactivate_comment (none1)
set sText = build("Inactivate Comment", "")
call uar_SysEvent(hSys, 3, "addrrComment inac", NULLTERM(sText))
    update into round_robin_comment r
    set 
      r.active_ind = 0,
      r.end_effective_dt_tm = cnvtdatetime(curdate, curtime),
            r.updt_dt_tm           = cnvtdatetime(curdate,curtime),
            r.updt_cnt             = r.updt_cnt + 1,
            r.updt_task            = reqinfo->updt_task,
            r.updt_id              = reqinfo->updt_id,
            r.updt_applctx         = reqinfo->updt_applctx
    where r.round_robin_ref_id = request->round_robin_ref_id
      and r.accession_id = request->accession_id
      and r.service_resource_cd = request->service_resource_cd
                        and r.long_text_id = request->long_text_id
      and r.sequence = request->sequence
    with nocounter

   set error_check = ERROR(sErrorMsg,0)   ;get error message
   if (error_check != 0)
     set reply->status_data->status = "F"
     set failed = "T"
     set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
     go to exit_script
   endif
  end

        /********************************************************************/
        /* Add new comment to the rr_comment table and long_text       */
        /********************************************************************/
  subroutine add_rr_comment (none2)
set sText = build("Add RR Comment ", "")
call uar_SysEvent(hSys, 3, "addrrComment add", NULLTERM(sText))
  
call echo(long_text_seq)
    insert into long_text l
    set
    l.long_text_id         = long_text_seq,
          l.active_ind           = 1,
          l.updt_dt_tm           = cnvtdatetime(curdate,curtime),
          l.updt_cnt             = 0,
              l.updt_task            = reqinfo->updt_task,
          l.updt_applctx         = reqinfo->updt_applctx,
            l.updt_id              = reqinfo->updt_id,
    l.active_status_cd     = reqdata->active_status_cd,
    l.active_status_dt_tm  = cnvtdatetime(curdate, curtime),
    l.active_status_prsnl_id = reqinfo->updt_id,
    l.parent_entity_name   = "ROUND ROBIN",
    l.parent_entity_id     = request->round_robin_ref_id,
    l.long_text        = request->long_text
    with nocounter

   set error_check = ERROR(sErrorMsg,0)   ;get error message
   if (error_check != 0)
     set reply->status_data->status = "F"
     set failed = "T"
     set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
     go to exit_script
   endif

           insert into round_robin_comment rc
    set 
    rc.round_robin_ref_id   = request->round_robin_ref_id,
    rc.accession_id   = request->accession_id,
    rc.service_resource_cd  = request->service_resource_cd,
    rc.sequence     = sequence,
    rc.long_Text_id   = long_text_seq,
          rc.active_ind           = 1,
          rc.beg_effective_dt_tm  = CNVTDATETIME(CURDATE, CURTIME),
          rc.end_effective_dt_tm  = cnvtdatetime("31-DEC-2100"),
          rc.updt_dt_tm           = cnvtdatetime(curdate,curtime),
            rc.updt_cnt             = 0,
          rc.updt_task            = reqinfo->updt_task,
          rc.updt_id              = reqinfo->updt_id,
          rc.updt_applctx         = reqinfo->updt_applctx
            with nocounter
  
   set error_check = ERROR(sErrorMsg,0)   ;get error message
   if (error_check != 0)
     set reply->status_data->status = "F"
     set failed = "T"
     set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
     go to exit_script
   endif

  end   
    
        /********************************************************************/
        /* Script                                                      */
        /********************************************************************/
        set sequence = 0
  if (request->long_Text_id > 0) 
    call inactivate_comment ( 0 )
    set sequence = request->sequence + 1
  endif

  if (failed = "F")
          call get_long_text_id ( 0 )
        endif

  if (failed = "F")
          call add_rr_comment ( 0 )
    set reply->long_text_id = long_text_seq
    set reply->round_robin_ref_id = request->round_robin_ref_id
    set reply->accession_id = request->accession_id
    set reply->long_text = request->long_text
    set reply->service_resource_cd = request->service_resource_cd
    set reply->sequence = sequence
        endif

        /********************************************************************/
        /* Exit Script                                                      */
        /********************************************************************/
#exit_script
        if (failed = "T")
          rollback
        else
          if(validate(xxDebug, -99)=-99)    
            commit
          endif
    set reply->status_data->status = "S"
        endif
call uar_SysDestroyHandle(hSys)

end
go      


;Generated by GNU enscript 1.6.4.
