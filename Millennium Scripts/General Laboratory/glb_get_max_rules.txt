 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_max_rules/glb_get_max_rules.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_MAX_RULES.PRG
        Object name:            GLB_GET_MAX_RULES
        Request #:              257553

        Product:                General Lab/Quality Control           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve QC Rules for a given Rule Id

        Tables read:            qc_result
                                discrete_task_assay
                                nomenclature
                                qc_rule
                                qc_trouble_step

        Tables updated:         n/a

        Executing from:         Auotverification Server

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 08/06/97 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_MAX_RULES:dba go    
      create program GLB_GET_MAX_RULES:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 ids[5]
           2 rule_id             = f8
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (         
         1 rules[*]
           2 rule_id                    = f8
           2 sequence                   = i4
           2 error_flag                 = i2
           2 rule_form_flag             = i2
           2 rule_definition            = vc
           2 across_control_ind         = i2
           2 across_run_ind             = i2
           2 max_req_results            = i4
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set reply->status_data->status = "F"
      set r_cnt = 0
      set x = 0
      set ids_to_get = size(request->ids, 5)
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

/*********************************************************************/
/* Get QC Rules							     */
/*********************************************************************/

      SELECT
       into "nl:"
         qr.rule_id,
         qr.sequence
      FROM
         qc_rule qr,
         (dummyt d1 with seq = value(ids_to_get))
      PLAN d1
      JOIN qr
         where qr.rule_id = request->ids[d1.seq].rule_id
      HEAD qr.sequence
         r_cnt = r_cnt + 1
         if (mod(r_cnt,5) = 1)
            stat =  alterlist(reply->rules,r_cnt + 5)
         endif        
         reply->rules[r_cnt].rule_id = qr.rule_id,
         reply->rules[r_cnt].sequence = qr.sequence,
         reply->rules[r_cnt].error_flag = qr.error_flag,
         reply->rules[r_cnt].rule_form_flag = qr.rule_form_flag,
         reply->rules[r_cnt].rule_definition = qr.rule_definition,
         reply->rules[r_cnt].across_control_ind = qr.across_control_ind
         reply->rules[r_cnt].across_run_ind = qr.across_run_ind
         reply->rules[r_cnt].max_req_results = qr.max_req_results
      DETAIL
          x = 0    
      WITH
         nocounter

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (r_cnt = 0)
         go to rules_failed
      else
        set reply->status_data->status = "S"
      endif

      set stat =  alterlist(reply->rules, r_cnt)

      go to exit_script

/********************************************************************/ 
/* Executed if qc_rules table get is unsuccessful                  */
/********************************************************************/
      #rules_failed
        set reply->status_data->subeventstatus[1]->operationname = 
           "get"
        set reply->status_data->subeventstatus[1]->operationstatus = 
           "F"
        set reply->status_data->subeventstatus[1]->targetobjectname = 
           "table"
        set reply->status_data->subeventstatus[1]->targetObjectValue = 
           "qc_results table"
        set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script

END GO
    

;Generated by GNU enscript 1.6.4.
