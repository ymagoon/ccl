 ;;Solution_Test/script/PathNet -- Gen Lab/glb_accn_qc_audit/glb_accn_qc_audit.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Author:                 Soham Dhakal
        Date Written:           6/98
        Source file name:       glb_accn_qc_audit.prg
        Object name:            glb_accn_qc_audit

        Product:                General Lab
        Product Team:           General Lab
        HNA Version:            500
        CCL Version:            4.0

        Program purpose: Audit quality control for accession
        Tables read: 
        Tables updated:
        Special Notes:

******************************************************************************/


;~DB~**************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG                *
;    **************************************************************************
;    *                                                                        *
;    *Mod Date     Engineer             Comment                               *
;    *--- -------- -------------------- -----------------------------------   *
;    *000 06/15/98 Soham Dhakal	        Initial Release                       *
;    *001 05/03/99 Chad Moats	        Removed multiple joins to code_value  *
;    *002 06/22/99 Derek Hime			Internationalization of script		  *
;	 *003	       Kasie Sly 			Implementation of Internationalization*
;    *004 08/07/03 Craig Sumrall 		Update select table (person-prsnl)    *			
;    *005 09/03/03 Craig Sumrall		Removed seclogin statement            *
;~DE~**************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program glb_accn_qc_audit:dba go
create program glb_accn_qc_audit:dba 

paint

execute cclseclogin

/*************************     i18n     **************************begin ;002 mod block*/
; INCLUDE I18N FUNCTION DECLARATIONS
%i cclsource:i18n_uar.inc
; INITIALIZE VARIABLE THAT WILL KEEP THE HANDLE TO I18N DATA
set i18nHandle = 0
; CALL UAR_I18NLOCALIZATIONINIT
set h = uar_i18nlocalizationinit(i18nHandle,curprog,"",curcclrev)
/*************************     i18n     **************************/
record captions
(
1 accessno 	    = vc
1 stdt			= vc
1 enddt			= vc
1 dtacode		= vc
1 perfdt		= vc
1 perfby		= vc
1 qcgrpid		= vc
1 servres		= vc
1 resstat		= vc
1 ruleid		= vc
1 numresult		= vc
1 mean			= vc
1 stddev		= vc
1 sdi			= vc
1 result		= vc
1 controlid		= vc
1 none		    = vc
1 rescontrol	= vc
1 resprocess	= vc
1 enddate = vc
1 startdate = vc
1 qcaccn = vc
1 title = vc
)
set captions-> accessno 	= uar_i18ngetmessage(i18nHandle,"accessno","Accession No")
set captions-> stdt			= uar_i18ngetmessage(i18nHandle,"stdt","start date")
set captions-> enddt		= uar_i18ngetmessage(i18nHandle,"endt","end date")
set captions-> dtacode		= uar_i18ngetmessage(i18nHandle,"dtacode","DTA code")
set captions-> perfdt		= uar_i18ngetmessage(i18nHandle,"perfdt","PERFORMED DATE")
set captions-> perfby		= uar_i18ngetmessage(i18nHandle,"perfby","Performed By")
set captions-> qcgrpid		= uar_i18ngetmessage(i18nHandle,"qcgrpid","QC Group ID")
set captions-> servres		= uar_i18ngetmessage(i18nHandle,"servres","Service Resource")
set captions-> resstat		= uar_i18ngetmessage(i18nHandle,"resstat","Result Status")
set captions-> ruleid		= uar_i18ngetmessage(i18nHandle,"ruleid","Rule ID")
set captions-> numresult	= uar_i18ngetmessage(i18nHandle,"numresult","Numeric Result")
set captions-> mean			= uar_i18ngetmessage(i18nHandle,"mean","Mean")
set captions-> stddev		= uar_i18ngetmessage(i18nHandle,"stddev","Standard Deviation")
set captions-> sdi			= uar_i18ngetmessage(i18nHandle,"sdi","SDI")
set captions-> result		= uar_i18ngetmessage(i18nHandle,"result","Result")
set captions-> controlid	= uar_i18ngetmessage(i18nHandle,"controlid","Control Id Description")
set captions-> none			= uar_i18ngetmessage(i18nHandle,"none","None")
set captions-> rescontrol	= uar_i18ngetmessage(i18nHandle,"rescontrol","Result Control")
set captions-> resprocess	= uar_i18ngetmessage(i18nHandle,"resprocess","Result Process")
set captions->enddate	= uar_i18ngetmessage(i18nHandle,"enddate","End Date")
set captions->startdate	= uar_i18ngetmessage(i18nHandle,"startdate","Start Date")
set captions->qcaccn	= uar_i18ngetmessage(i18nHandle,"qcaccession","QC Accession? ")
set captions->title	= uar_i18ngetmessage(i18nHandle,"title","GLB Quality Control Accession Audit")
/****************************************************************************end ;002 mod block*******/

call clear (1,1)
call video (i)
call box   (1,1,22,80)
call line  (3,1,80,XHORAZ)
;002 call text (2, 3, "GLB Quality Control Accession Audit")
call text (2, 3, captions->title)		;002
call video (n)
;002 call text (9, 5, "QC Accession? ")
call text (9, 5, captions->qcaccn)				;002
call accept (9, 40, "CCCCCCCCCCCCCCCCCC;C")
set accn_nbr = curaccept
;002 call text(10,5,"Start Date")
call text(10,5, captions->startdate)						;002                        
;002 call accept (10, 40, "NNDCCCDNNNNDNNDNN;C", format(
;002							curdate,"DD-MMM-YYYY hh:mm;;d"))
call accept (10, 40, "NNDCCCDNNDNNDNNDNN;C", concat(format(curdate,"@MEDIUMDATE4YR;;q")," ",		;002
					format(curdate,"@TIMENOSECONDS;;q")))						;002
set startdate = curaccept
;002 call text (11,5, "End Date")
call text (11,5, captions->enddate)						;002
;002 call accept (11, 40, "NNDCCCDNNNNDNNDNN;C", format(
;002			       			curdate,"DD-MMM-YYYY hh:mm;;D"))
call accept (11, 40, "NNDCCCDNNDNNDNNDNN;C", concat(format(curdate,"@MEDIUMDATE4YR;;q")," ",		;002
										   format(curdate,"@TIMENOSECONDS;;q")))	;002
set enddate = curaccept
                                          
set num_cd = 0.0
set alpha_cd = 0.0             

select into 'nl:'
  c.code_value
from code_value c
where c.code_set=289 and
      c.cdf_meaning in ("2","3")
detail
  if (c.cdf_meaning="2")
    alpha_cd=c.code_value
  elseif (c.cdf_meaning="3")
    num_cd=c.code_value        
  endif
with nocounter

                               

select ; into 'nl:'
  a.accession
 ,qrg.accession_id
 ,qrg.group_dt_tm
 ,qr.service_resource_cd
 ,qr.task_assay_cd
 ,qr.result_status_cd
 ,qr.perform_personnel_id
;002 ,pdate= format(qr.perform_dt_tm,"mm/dd/yy hh:mm;;d")
,pdate= format(qr.perform_dt_tm,"@SHORTDATETIME;;q")									;002
 ,qr.result_type_cd
 ,qr.result_value_numeric
 ,qr.result_value_alpha
 ,qr.control_id
 ,qr.result_control_cd
 ,qr.result_process_cd
 ,qr.qc_group_id
 ,cm.short_description
;001 ,c1.display
;001 ,c2.display
;001 ,c3.display
;001 ,c4.display
;001 ,c5.description
;001 ,c6.description
 ,p.name_full_formatted

from      
  accession a
 ,qc_result_grp qrg
 ,qc_result qr
 ,control_material cm
 ,prsnl p
; ,orders o
;001 ,code_value c1
;001 ,code_value c2
;001 ,code_value c3
;001 ,code_value c4
;001 ,code_value c5       
;001 ,code_value c6
plan
  a                        
   where a.accession = accn_nbr

join
  qrg                              
   where qrg.accession_id= a.accession_id
       and (qrg.group_dt_tm  between cnvtdatetime(startdate)
		       and cnvtdatetime(enddate))
join
  qr
   where qr.qc_group_id = qrg.qc_group_id
join
  cm
   where cm.control_id = qr.control_id
;001 join
;001  c1
;001   where c1.code_value = qr.task_assay_cd
;001 join 
;001  c2
;001   where c2.code_value = qr.service_resource_cd
;001 join
;001  c3
;001   where c3.code_value = qr.result_status_cd
;001 join
;001  c4
;001   where c4.code_value =qr.result_type_cd
;001 join
;001  c5
;001   where c5.code_value = qr.result_control_cd
;001 join
;001  c6
;001   where c6.code_value = qr.result_process_cd
join p
   where p.person_id = qr.perform_personnel_id

order 
  a.accession                              
 ,qr.task_assay_cd
 ,qr.perform_dt_tm  desc                      

head report
  under=fillstring(131,"=")
  stdate = cnvtdatetime(startdate)
  eddate = cnvtdatetime(enddate)
;002  sdate = format(stdate,"mm/dd/yy;;d")
  sdate = format(stdate,"@SHORTDATE;;q")											;002
;002  edate = format(eddate,"mm/dd/yy ;;d")
  edate = format(eddate,"@SHORTDATE;;q")											;002
;  pedate =
head page
   row + 0

head a.accession
 
;002   col 0, "Accession No:" a.accession
       col 0, captions->accessno,":",a.accession										;002
;002   row +1, col 0 "start date" sdate
       row +1, col 0, captions->stdt,sdate											;002
;002   row +1, col 0 "end date" edate
       row +1, col 0, captions->enddt," ",edate										;002
       row +1, col 0 under                      
       row +1

head qr.task_assay_cd
    row +1
    task_assay_disp = trim(UAR_GET_CODE_DISPLAY(qr.task_assay_cd),3)			;001
;002    col 0, "DTA code : " task_assay_disp						;001     
        col 0, captions->dtacode," : ",task_assay_disp    								;002
;001    col 0, "DTA code : " c1.display        
   
head qr.perform_dt_tm
    
    row +1,			
;002    col 5, "PERFORMED DATE:" pdate
    col 5, captions->perfdt,":",pdate											;002
;002    col 45,"Performed By:" p.name_full_formatted,
    col 45,captions->perfby,":",p.name_full_formatted,								;002
;002    col 80,"QC Group ID:" qr.qc_group_id,
	col 80,captions->qcgrpid,":",qr.qc_group_id,									;002
    row +1,
    serv_res_disp = trim(UAR_GET_CODE_DISPLAY(qr.service_resource_cd),3)			;001
;002    col 10, "Service Resource:  " serv_res_disp,					;001
	col 10, captions->servres,":  ",serv_res_disp,									;002
;001    col 10, "Service Resource:  " c2.display,
    row +1,
    result_stat_disp = trim(UAR_GET_CODE_DISPLAY(qr.result_status_cd),3)		;001    
;002    col 10, "Result Status: " result_stat_disp						;001
	col 10, captions->resstat,": ",result_stat_disp									;002
;001    col 10, "Result Status: " c3.display
;002    col 80, "Rule ID:" qr.rule_id
	col 80, captions->ruleid,":",qr.rule_id										;002
    row +1
  if (qr.result_type_cd = num_cd)
;002    col 10,"Numeric Result" qr.result_value_numeric
        col 10, captions->numresult,qr.result_value_numeric								;002
     SDI = (qr.result_value_numeric - qr.mean)/qr.statistical_std_dev
;002    col 45, "Mean:" qr.mean
        col 45, captions->mean,":",qr.mean										;002
;002   row +1, col 10, "Standard Deviation:" qr.statistical_std_dev
	 row +1, col 10, captions->stddev,":",qr.statistical_std_dev						;002					
;002    col 45, "SDI=" SDI
       col 45, captions->sdi,"=",SDI											;002
  elseif
     (qr.result_type_cd = alpha_cd)
;002  col 17,"Result:" call print(substring(1, 15, trim(qr.result_value_alpha)))
    col 17,captions->result,":", call print(substring(1, 15, trim(qr.result_value_alpha)))		;002
  else
    col 17, qr.ascii_text
  endif 
    row +1,
;002    col 10, "Control Id Description:" cm.short_description
    col 10, captions->controlid,":",cm.short_description								;002
    row +1
    if (qr.result_control_cd > 0)							;001
      control_type = trim(UAR_GET_CODE_DESCRIPTION(qr.result_control_cd),3)		;001
    else										;001
;002      control_type = "None"								;001
  control_type = captions->none											;002
    endif										;001
;002    col 10,"Result Control:" control_type						;001
	col 10,captions->rescontrol,":", control_type 									;002
;001    col 10,"Result Control:" c5.description
    if (qr.result_process_cd > 0)							;001
      res_process = trim(UAR_GET_CODE_DESCRIPTION(qr.result_process_cd),3)		;001
    else										;001
      res_process = ""									;001
    endif										;001
;002    col 55,"Result Process:" res_process						;001
	col 55,captions->resprocess,":", res_process									;002	
;001    col 55,"Result Process:" c6.description
    row+1
detail
  row +0

foot qr.perform_dt_tm
 row +0
      
       

with nocounter, maxcol = 200
        
end go







;Generated by GNU enscript 1.6.4.
