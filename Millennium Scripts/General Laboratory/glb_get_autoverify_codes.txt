 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_autoverify_codes/glb_get_autoverify_codes.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 2002 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_autoverify_codes.prg
        Object name:            glb_get_autoverify_codes
        Request #:              250220

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Retrieve AutoVerify Codes for PCS Review Queue.

        Tables read:            auto_verify_codes

        Tables updated:         
        
        Executing from:

        Special Notes:

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 06/11/02 Gary Runde           Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_AUTOVERIFY_CODES:dba go
             create program GLB_GET_AUTOVERIFY_CODES:dba

%i CCLSOURCE:GLB_SCRIPT_LOGGING.INC
set LOG_PROGRAM_NAME = "glb_get_autoverify_codes"
  /***********************************
  * Request Record                   *
  /***********************************
  /*
  record request
  (
    1 qual[*]
      2 task_assay_cd     = f8
      2 perform_result_id = f8
  ) 
  */
  

  /***********************************
  * Reply Record                     *
  ***********************************/
  record reply
  (
    1 qual[*]
      2 task_assay_cd     = f8
      2 perform_result_id = f8
      2 av_codes[*]
        3 auto_verify_cd  = f8
%i cclsource:status_block.inc
  )
  
  declare lAVParentIDCnt       = i4 with protect, noconstant(0)
  declare lAVCodeCnt           = i4 with protect, noconstant(0)
  declare lStat                = i4 with protect, noconstant(0)
  declare lNUM_PERFRESULT_QUAL = i4 with protect, constant(value(size(request->qual, 5)))
  
  set reply->status_data->status = "F"

  /****************************************
  * Load Auto_verify_cd's from database   *
  ****************************************/
  select into "nl:"
    av.parent_entity_id
  from
    (dummyt d1 with seq = value(lNUM_PERFRESULT_QUAL)),
    auto_verify_code av
  plan d1
  join av
    where av.parent_entity_id = outerjoin(request->qual[d1.seq]->perform_result_id)
      and av.parent_entity_name = outerjoin("PERFORM_RESULT")
  order by av.parent_entity_id
  head av.parent_entity_id
    lAVParentIDCnt = lAVParentIDCnt + 1
    if (lAVParentIDCnt > size(reply->qual, 5))
      lStat = alterlist(reply->qual, lAVParentIDCnt + 5)
    endif
    reply->qual[lAVParentIDCnt]->task_assay_cd = request->qual[d1.seq]->task_assay_cd
    reply->qual[lAVParentIDCnt]->perform_result_id = av.parent_entity_id
    
    lAVCodeCnt = 0
  detail
    lAVCodeCnt = lAVCodeCnt + 1
    if (lAVCodeCnt > size(reply->qual[lAVParentIDCnt]->av_codes, 5))
      lStat = alterlist(reply->qual[lAVParentIDCnt]->av_codes, lAVCodeCnt + 5)
    endif
    reply->qual[lAVParentIDCnt]->av_codes[lAVCodeCnt]->auto_verify_cd = av.auto_verify_cd
  foot av.parent_entity_id

    if (lAVCodeCnt > 0)
      lStat = alterlist(reply->qual[lAVParentIDCnt]->av_codes, lAVCodeCnt)
    endif
    
  with nocounter
  
  if (error_message(1) > 0)
    go to exit_script
  endif
  
  if (lAVParentIDCnt > 0)
    set reply->status_data->status = "S"
    set lStat = alterlist(reply->qual, lAVParentIDCnt)
  else
    set reply->status_data->status = "Z"
  endif

#EXIT_SCRIPT

end 
go

;Generated by GNU enscript 1.6.4.
