 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_qc_review_comment/glb_add_qc_review_comment.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 2003 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_add_qc_review_comment.prg
        Object name:            glb_add_qc_review_comment
        Request #:              250225

        Product:                PathNet
        Product Team:           PathNet GLB 
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        This script will insert a new qc comment

        Tables read:            qc_comment

        Tables updated:         qc_comment
                                long_text

        Executing from:         PathNet General Lab QC Inquiry

        Special Notes:          none

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 12/12/03 Gary Runde           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program glb_add_qc_review_comment:dba go
create program glb_add_qc_review_comment:dba

/*****************************************************************************
*                             Record Structures                              *
******************************************************************************/
/*
  request
  (
    1 qc_result_id      = f8
    1 comment           = vc
  )
*/

record reply
(
%I cclsource:status_block.inc
)

;include file for updating the long_text table
%i cclsource:pcs_upd_long_text.inc

/*****************************************************************************
*                          Initialize Variables                              *
******************************************************************************/
  declare lCommentSeq           = i4 with protect, noconstant(0)
  declare dReviewCommentTypeCd  = f8 with protect, noconstant(0.0)
  declare dLongTextId           = f8 with protect, noconstant(0.0)
  declare sCOMMENT_PE_NAME      = c32  with protect, constant("QC_COMMENT")

  set reqinfo->commit_ind = 0
  set reply->status_data->status = "F"
  
  call uar_get_meaning_by_codeset(14, "QC RVNT", 1, dReviewCommentTypeCd)
  
  if (dReviewCommentTypeCd = 0)
    go to exit_script
  endif


/*****************************************************************************
*                          Retrieve next action sequence                     *
******************************************************************************/

  select into "nl:"
  from qc_comment qcc
  plan qcc
    where qcc.qc_result_id = request->qc_result_id
      and qcc.comment_type_cd = dReviewCommentTypeCd
  order by qcc.action_sequence
  detail
    lCommentSeq = qcc.action_sequence + 1
  with nocounter
  
/*****************************************************************************
*                          Insert long text record                           *
******************************************************************************/
  set dLongTextId = InsertUpdateComment(request->comment, 
                                        0.0, sCOMMENT_PE_NAME,
                                        request->qc_result_id)
  
  if (dLongTextId = 0.0)
    go to exit_script
  endif
  
  ;insert the new qc_comment row
  insert into qc_comment qcc
  set
     qcc.qc_result_id     = request->qc_result_id,
     qcc.comment_type_cd  = dReviewCommentTypeCd,
     qcc.action_sequence  = lCommentSeq,
     qcc.long_text_id     = dLongTextId,
     qcc.perform_prsnl_id = reqinfo->updt_id,
     qcc.comment_dt_tm    = cnvtdatetime(curdate,curtime3),
     qcc.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
     qcc.updt_cnt         = 0,
     qcc.updt_task        = reqinfo->updt_task,
     qcc.updt_id          = reqinfo->updt_id,
     qcc.updt_applctx     = reqinfo->updt_applctx
  with
    nocounter
    
  ;update the comment_ind on the qc_Result table to be a one
  select into "nl:"
  from qc_result qr
  plan qr
    where qr.qc_result_id     = request->qc_result_id
      and qr.comment_ind      = 0
  with nocounter, forupdate(qr)
  
  if (curqual > 0)
    update into qc_Result qr
    set 
      qr.comment_ind      = 1,
      qr.updt_dt_tm       = cnvtdatetime(curdate,curtime3),
      qr.updt_cnt         = qr.updt_cnt + 1,
      qr.updt_task        = reqinfo->updt_task,
      qr.updt_id          = reqinfo->updt_id,
      qr.updt_applctx     = reqinfo->updt_applctx
    plan qr
      where qr.qc_result_id = request->qc_result_id
    with nocounter
  endif
  

/******************************************************************************
*                               Exit Script                                   *
*******************************************************************************/

  set reply->status_data->status = "S"
  set reqinfo->commit_ind = 1

#EXIT_SCRIPT
%I cclsource:gm_i_long_text1386_cln.inc
  
end go





;Generated by GNU enscript 1.6.4.
