 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_instr_from_proc/glb_get_instr_from_proc.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_INSTR_FROM_PROC.PRG
        Object name:            GLB_GET_INSTR_FROM_PROC
        Request #:              250167

        Product:                General Lab/Quality Control
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieves instruments for a given procedure.

        Tables read:            ASSAY_PROCESSING_R
                                
        Tables updated:         n/a

        Executing from:         PathNet General Lab:  DB Patient Data Monitoring Build

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    * generated from GLB_GET_AV_PARAMS, new for REV 7.2                    *
;     ### 07/26/98 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_INSTR_FROM_PROC:dba go    
      create program GLB_GET_INSTR_FROM_PROC:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                               
         1 task_assay_cd            = f8        
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 rescs[*]
           2 service_resource_cd       = f8
           2 service_resource_disp     = vc
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

     #Script
      set failed = "F"
      set r_cnt = 0
      set reply->status_data->status = "F"
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

/********************************************************************/ 
/* Get Instruments                                                  */
/********************************************************************/

         SELECT 
          into  "nl:"
            apr.service_resource_cd,
            apr.task_assay_cd,
            sr.service_resource_cd,
            c.code_value
         FROM
            assay_processing_r apr,
            service_resource sr,
            code_value c
         PLAN c
            where c.code_set = 106 and c.cdf_meaning = "GLB"
         JOIN sr
            where sr.activity_type_cd = c.code_value
         JOIN apr
            where apr.service_resource_cd = sr.service_resource_cd 
            and apr.task_assay_cd = request->task_assay_cd
            and apr.active_ind = 1
         ORDER BY apr.service_resource_cd
         HEAD apr.service_resource_cd
            r_cnt = r_cnt + 1
            if (mod(r_cnt,5) = 1)
              stat = alterlist(reply->rescs, r_cnt + 5)
            endif
            reply->rescs[r_cnt].service_resource_cd   = apr.service_resource_cd
         DETAIL
            row + 0
         WITH
            nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           set failed = "T"
           go to exit_script
         endif

        set stat = alterlist(reply->rescs, r_cnt)

        if(curqual = 0) 
          go to no_rescs
        endif

        go to exit_script

/********************************************************************/ 
/* Executed if no resources where found                             */
/********************************************************************/
     #no_rescs
      set reply->status_data->subeventstatus[1]->operationname = 
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "Z"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "assay_processing_r table"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
      else
         set reply->status_data->status = "Z"
      endif
END
GO

;Generated by GNU enscript 1.6.4.
