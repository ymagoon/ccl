 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_worklist_comments/glb_get_worklist_comments.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2006 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_worklist_comments.prg
        Object name:            glb_get_worklist_comments
        Request #:              250146

        Product:                Worklist Request
        Product Team:           Pathnet         

        Program purpose:        Retrieve patient, order and encounter comments and notes.

        Tables read:            order_comment, person_info, encntr_info, long_text

        Tables updated:         worklist_event, worklist

        Executing from:         CPM Script Server

********************************************************************************************
           *              GENERATED MODIFICATION CONTROL LOG              *
********************************************************************************************

Mod   Date        Engineer                Modification Performed
---   --------    --------------------    --------------------------------------------------
001   04/28/06    Joe Troy                Initial Code
********************************************************************************************/

drop program glb_get_worklist_comments:dba go
create program glb_get_worklist_comments:dba

/*
record request
(
  1 order_id = f8
)*/

record reply
(
  1 order_comment_ind     = i2
  1 order_comment         = vc
  1 order_note_ind        = i2
  1 order_note            = vc
  1 patient_comment_ind   = i2
  1 patient_comment       = vc
  1 patient_note_ind      = i2
  1 patient_note          = vc
  1 encounter_comment_ind = i2
  1 encounter_comment     = vc
  1 encounter_note_ind = i2
  1 encounter_note        = vc
%i cclsource:status_block.inc
)

declare COMMENT_TYPE_CS = i4 with protect, constant(14)
declare INFO_TYPE_CS    = i4 with protect, constant(355)

declare dOrdCommentCd   = f8 with protect, noconstant(0.0)
declare dOrdNoteCd      = f8 with protect, noconstant(0.0)
declare dInfoCommentCd  = f8 with protect, noconstant(0.0)
declare dInfoNoteCd     = f8 with protect, noconstant(0.0)

declare sRet            = vc with protect, noconstant(" ") ; general working string

set dOrdCommentCd   = uar_get_code_by("MEANING", COMMENT_TYPE_CS, "ORD COMMENT")
set dOrdNoteCd      = uar_get_code_by("MEANING", COMMENT_TYPE_CS, "ORD NOTE")
set dInfoCommentCd  = uar_get_code_by("MEANING", INFO_TYPE_CS, "COMMENT")
set dInfoNoteCd     = uar_get_code_by("MEANING", INFO_TYPE_CS, "NOTE")

; error checking code values not found
if(dOrdCommentCd <= 0.0)
  set sRet = "ORD COMMENT"
elseif(dOrdNoteCd <= 0.0)
  set sRet = "ORD NOTE"
elseif(dInfoCommentCd <= 0.0)
  set sRet = "COMMENT"
elseif(dInfoNoteCd <= 0.0)
  set sRet = "NOTE"
else
  set sRet = " "
endif

; get out if any code values not found.
if(textlen(trim(sRet)) > 0)
  set reply->status_data.status = "F"
  set reply->status_data->subeventstatus[1]->targetobjectname = "no code for meaning"
  set reply->status_data->subeventstatus[1]->targetObjectValue = sRet
  go to exit_script
endif

; begin collecting comments
select into "nl:"
  ord_com_type = oc.comment_type_cd,
  pi_com_type = pi.info_type_cd,
  ei_com_type = ei.info_type_cd
from
  orders o,
  order_comment oc,
  person_info pi,
  encntr_info ei,
  long_text lt1,
  long_text lt2,
  long_text lt3
plan o where
  o.order_id = request->order_id
join oc where
  oc.order_id = outerjoin(o.order_id) and
  oc.long_text_id > outerjoin(0.0)
join pi where
  pi.person_id = outerjoin(o.person_id) and
  pi.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate, curtime3)) and
  pi.long_text_id > outerjoin(0.0)
join ei where
  ei.encntr_id = outerjoin(o.encntr_id) and
  ei.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate, curtime3)) and
  ei.long_text_id > outerjoin(0.0)
join lt1 where
  lt1.long_text_id = outerjoin(oc.long_text_id)
join lt2 where
  lt2.long_text_id = outerjoin(pi.long_text_id)
join lt3 where
  lt3.long_text_id = outerjoin(ei.long_text_id)
detail
  ; grab order comment and note if they exist
  if(ord_com_type = dOrdCommentCd)
    reply->order_comment_ind = 1
    reply->order_comment = lt1.long_text
  elseif(ord_com_type = dOrdNoteCd)
    reply->order_note_ind = 1
    reply->order_note = lt1.long_text
  endif

  ; grab patient comment and note if they exist
  if(pi_com_type = dInfoCommentCd)
    reply->patient_comment_ind = 1
    reply->patient_comment = lt2.long_text
  elseif(pi_com_type = dInfoNoteCd)
    reply->patient_note_ind = 1
    reply->patient_note = lt2.long_text
  endif

  ; grab encounter comment and note if they exist
  if(ei_com_type = dInfoCommentCd)
    reply->encounter_comment_ind = 1
    reply->encounter_comment = lt3.long_text
  elseif(ei_com_type = dInfoNoteCd)
    reply->encounter_note_ind = 1
    reply->encounter_note = lt3.long_text
  endif
with nocounter
; set script status
if(reply->encounter_comment_ind = 1 or reply->encounter_note_ind = 1 or
   reply->order_comment_ind = 1 or reply->order_note_ind = 1 or
   reply->patient_comment_ind = 1 or reply->patient_note_ind = 1)
  set reply->status_data.status = "S"
else
  set reply->status_data.status = "Z"
endif
#exit_script
end go

;Generated by GNU enscript 1.6.4.
