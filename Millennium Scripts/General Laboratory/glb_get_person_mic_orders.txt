 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_person_mic_orders/glb_get_person_mic_orders.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2000 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_person_mic_orders.prg
        Object name:            glb_get_person_mic_orders
        Request #:              250150

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Load patient microbiology orders for a 
                                given collect date range.  Optionally,
                                filter by catalog_cd.

        Tables read:            accession_order_r
                                code_value
                                container
                                encounter
                                mic_order_lab
                                orders
                                order_comment
                                order_container
                                order_laboratory
                                organization
                                prsnl
                                v500_specimen

        Tables updated:         None
        Executing from:         

        Special Notes:          
******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 03/02/98 Hal Patchen          Initial Release                     *
;    *001 02/26/99 Hal Patchen          Correct multiple specimen types on  *
;    *                                  the same order_id                   *
;    *002 06/07/99 Gary Runde           Retrieve the encounter status code  *
;    *                                  and the org_name                    *
;    *003 05/23/00 Hal Patchen          Return encounter organization and   *
;    *                                  confidentiality code for            *
;    *                                  organization level security.        *
;    *004 09/14/00 Hal Patchen          Return encounter type               *
;    *005 10/22/01 Chuck Figas          Modify for future orders            *
;    *006 01/09/06 Ryan Sullivan        Added Org Security - CR#1-532400726 *
;    *007 03/10/06 Matt Schile          Added container_id to the reply     *
;    *008 06/21/06 Ryan Sullivan        CR #1-697303399                     *
;    *009 02/19/08 Bruce Bishop         CR #1-1386979495                    *
;                                       Also added batch logic to EXPAND    *
;	 *010 03/21/14 Amy Gum				Handle Future Orders				*
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_PERSON_MIC_ORDERS:dba go    
             create program GLB_GET_PERSON_MIC_ORDERS:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  person_id                    = f8
         1  collect_dt_tm_begin          = dq8
         1  collect_dt_tm_end            = dq8
         1  catalog_cd                   = f8
         1  encounter_id                 = f8
         1  ord_rqstn_id                 = f8
         1  facility_cd				     = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
         1  qual_cnt                     = i4
         1  qual[*]
            2  order_id                  = f8
            2  updt_cnt                  = i4
            2  cs_order_id               = f8
            2  cs_catalog_cd             = f8
            2  cs_order_mne              = vc
            2  catalog_cd                = f8
            2  catalog_type_cd           = f8
            2  order_mnemonic            = vc
            2  activity_type_cd          = f8
            2  activity_type_disp        = vc
            2  activity_type_desc        = vc
            2  activity_type_mean        = vc
            2  orig_order_dt_tm          = dq8
            2  order_status_cd           = f8
            2  order_status_disp         = vc
            2  order_status_mean         = vc
            2  dept_status_cd            = f8
            2  dept_status_disp          = vc
            2  dept_status_mean          = vc
            2  encntr_id                 = f8
            2  last_update_provider_id   = f8
            2  last_update_provider_name = vc
            2  encntr_type_cd            = f8                          ;004
            2  encntr_type_disp          = vc                          ;004
            2  encntr_type_mean          = vc                          ;004
            2  encntr_status_cd          = f8                          ;002
            2  encntr_status_disp        = vc                          ;002
            2  encntr_org_id             = f8                          ;003
            2  org_name                  = vc                          ;002
            2  confid_level_cd           = f8                          ;003
            2  confid_level_disp         = vc                          ;003
            2  loc_facility_cd           = f8
            2  loc_facility_disp         = vc
            2  loc_nurse_unit_cd         = f8
            2  loc_nurse_unit_disp       = vc
            2  loc_room_cd               = f8
            2  loc_room_disp             = vc
            2  loc_bed_cd                = f8
            2  loc_bed_disp              = vc
            2  reason_for_visit          = vc
            2  accession                 = vc
            2  specimen_type_cd          = f8
            2  specimen_type_disp        = vc   ;codeset 2052
            2  specimen_type_desc        = vc
            2  specimen_type_mean        = vc
            2  body_site_cd              = f8
            2  body_site_disp            = vc
            2  current_start_dt_tm       = dq8
            2  drawn_dt_tm               = dq8
            2  report_priority_cd        = f8
            2  report_priority_disp      = vc
            2  collection_priority_cd    = f8
            2  collection_priority_disp  = vc
            2  susceptibility_ind        = i2
            2  positive_ind              = i2
            2  micro_status_cd           = f8
            2  micro_status_disp         = vc
            2  order_comment_ind         = i2
            2  oe_format_id              = f8
            2  chart_requested_ind       = i2
            2  container_id              = f8
            2  ord_rqstn_qual[*]
               3 ord_rqstn_id            = f8
               3 rqstn_assignment_ident  = vc
%i cclsource:status_block.inc
      )

%i cclsource:sacrtl_org.inc
%i cclsource:pcs_preference_manager.inc
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set CV_REQUIRED_RECS            = 3
         declare cv_cnt                  = i4
         declare order_comment_cd        = f8 with protect, constant(uar_get_code_by("MEANING", 14, "ORD COMMENT"));
         declare order_note_cd           = f8 with protect, constant(uar_get_code_by("MEANING", 14, "ORD NOTE"));
         declare cancel_comment_cd       = f8 with protect, constant(uar_get_code_by("MEANING", 14, "CANCELREASON"));
         declare MICRO_ACTIVITY_CD       = f8 with protect, constant(uar_get_code_by("MEANING", 106, "MICROBIOLOGY"))
         declare order_status_future_cd  = f8 with protect, constant(uar_get_code_by("MEANING", 6004, "FUTURE"))
         declare nOrg_Security_On_Ind    = i2 
         ;BATCH VARIABLES
         declare cur_size                = i4 with protect, noconstant(size(sac_org->organizations, 5))
         if (cur_size < 200)
            declare batch_size           = i4 with constant(cur_size)
         else
            declare batch_size           = i4 with constant(200)
         endif
         declare idx                     = i4 with noconstant(0)
         declare expand_idx              = i4 with noconstant(0)
         declare locate_idx              = i4 with noconstant(0)
         declare new_size                = i4 with protect, noconstant(0)
         declare nstart                  = i4 with noconstant(0)
         declare loop_cnt                = i4 with noconstant(ceil(cnvtreal(cur_size) / batch_size))
         declare show_future_orders_ind  = i2 with protect, noconstant(0)
         
         set reply->status_data.status = "F"
 
         set cv_cnt = 0
         if (order_comment_cd > 0)
            set cv_cnt = cv_cnt + 1
         endif
         if (order_note_cd > 0)
            set cv_cnt = cv_cnt + 1
         endif
         if (cancel_comment_cd > 0)
            set cv_cnt = cv_cnt + 1
         endif

         ;* Verify that all required code value records were read.
         if (cv_cnt != CV_REQUIRED_RECS)
            set reply->status_data.subeventstatus[1].OperationName =
               "SELECT"
            set reply->status_data.subeventstatus[1].OperationStatus =
               "F"
            set reply->status_data.subeventstatus[1].TargetObjectName =
               "CODE_VALUE TABLE"
            set reply->status_data.subeventstatus[1].TargetObjectValue =
               "Unable to load all required code values for script execution"
            go to Exit_Script
         endif


         ;008 determine if org security is turned on or off
         select into "nl:"
         
         from dm_info d

         where d.info_domain = "SECURITY"
           and d.info_name = "SEC_ORG_RELTN"

         detail
            nOrg_Security_On_Ind = d.info_number 
         with nocounter
         
      
         set show_future_orders_ind = PrefDefinedToShowFutureOrders(null)

         set nstart = 1

    /***********************************************************************
      * Select patient orders based on collect date range                    *
      ***********************************************************************/
         select 
          if (request->ord_rqstn_id > 0.0)
             plan r    where r.ord_rqstn_id = request->ord_rqstn_id
            join oror where oror.ord_rqstn_id = r.ord_rqstn_id
            join o    where o.order_id = oror.order_id
                        and o.activity_type_cd+0 = MICRO_ACTIVITY_CD
            join o_cs where o_cs.order_id = o.cs_order_id
            join ol   where ol.order_id = o.order_id
            join e    where e.encntr_id = o.encntr_id
            join org  where org.organization_id = e.organization_id    ;002
                 and (expand(expand_idx, nstart, cur_size, org.organization_id,
                 		sac_org->organizations[expand_idx].organization_id)
                  		or cur_size = 0 
                  		or nOrg_Security_On_Ind = 0 
                  		or(o.order_status_cd = order_status_future_cd AND show_future_orders_ind = 1))                   ;008
            join pl   where pl.person_id = o.last_update_provider_id
            join mol  where mol.order_id = outerjoin(o.order_id)
            join oc   where oc.order_id = outerjoin(ol.order_id)
            join pra  where pra.parent_entity_id = outerjoin(o.order_id) 
                        and pra.parent_entity_name = outerjoin("ORDERS")
            join aor  where aor.order_id = outerjoin(ol.order_id)
                        and aor.primary_flag = outerjoin(0)
            join ocr  where ocr.order_id = outerjoin(aor.order_id)                ;001
            join c    where c.container_id = outerjoin(ocr.container_id)          ;001
            join s    where s.specimen_id = outerjoin(c.specimen_id)
            join ca   where ca.container_id = outerjoin(c.container_id)
         elseif (request->catalog_cd > 0.0)
             plan o    where o.person_id = request->person_id
                        and o.catalog_cd+0 = request->catalog_cd
                        and o.current_start_dt_tm between 
                              cnvtdatetime(request->collect_dt_tm_begin) 
                              and cnvtdatetime(request->collect_dt_tm_end)
                        and o.activity_type_cd+0 = MICRO_ACTIVITY_CD
            join o_cs where o_cs.order_id = o.cs_order_id
            join ol   where ol.order_id = o.order_id
            join e    where e.encntr_id = o.encntr_id
            join org  where org.organization_id = e.organization_id    ;002
                 and (expand(expand_idx, nstart, cur_size, org.organization_id,
                     sac_org->organizations[expand_idx].organization_id)
                  		or cur_size = 0 
                  		or nOrg_Security_On_Ind = 0
                  		or(o.order_status_cd = order_status_future_cd AND show_future_orders_ind = 1))  
            join pl   where pl.person_id = o.last_update_provider_id
            join oror where oror.order_id = outerjoin(o.order_id)
            join r    where r.ord_rqstn_id = outerjoin(oror.ord_rqstn_id)
            join mol  where mol.order_id = outerjoin(o.order_id)
            join oc   where oc.order_id = outerjoin(ol.order_id)
            join pra  where pra.parent_entity_id = outerjoin(o.order_id) 
                        and pra.parent_entity_name = outerjoin("ORDERS")
            join aor  where aor.order_id = outerjoin(ol.order_id)
                        and aor.primary_flag = outerjoin(0)
            join ocr  where ocr.order_id = outerjoin(aor.order_id)                ;001
            join c    where c.container_id = outerjoin(ocr.container_id)          ;001
            join s    where s.specimen_id = outerjoin(c.specimen_id)
            join ca   where ca.container_id = outerjoin(c.container_id)
         elseif(request->encounter_id != 0 )
            plan o    where o.encntr_id = request->encounter_id
                        and o.current_start_dt_tm between
                              cnvtdatetime(request->collect_dt_tm_begin)
                              and cnvtdatetime(request->collect_dt_tm_end)
                        and o.activity_type_cd+0 = MICRO_ACTIVITY_CD
            join o_cs where o_cs.order_id = o.cs_order_id
            join ol   where ol.order_id = o.order_id
            join e    where e.encntr_id = o.encntr_id
            join org  where org.organization_id = e.organization_id    ;002
                 and (expand(expand_idx, nstart, cur_size, org.organization_id,
                     sac_org->organizations[expand_idx].organization_id)
                  		or cur_size = 0 
                  		or nOrg_Security_On_Ind = 0
                  		or(o.order_status_cd = order_status_future_cd AND show_future_orders_ind = 1))                   ;008
            join pl   where pl.person_id = o.last_update_provider_id
            join oror where oror.order_id = outerjoin(o.order_id)
            join r    where r.ord_rqstn_id = outerjoin(oror.ord_rqstn_id)
            join mol  where mol.order_id = outerjoin(o.order_id)
            join oc   where oc.order_id = outerjoin(ol.order_id)
            join pra  where pra.parent_entity_id = outerjoin(o.order_id) 
                        and pra.parent_entity_name = outerjoin("ORDERS")
            join aor  where aor.order_id = outerjoin(ol.order_id)
                        and aor.primary_flag = outerjoin(0)
            join ocr  where ocr.order_id = outerjoin(aor.order_id)                ;001
            join c    where c.container_id = outerjoin(ocr.container_id)          ;001
            join s    where s.specimen_id = outerjoin(c.specimen_id)
            join ca   where ca.container_id = outerjoin(c.container_id)
         else
            plan o    where o.person_id = request->person_id
                        and o.current_start_dt_tm between
                              cnvtdatetime(request->collect_dt_tm_begin)
                              and cnvtdatetime(request->collect_dt_tm_end)
                        and o.activity_type_cd+0 = MICRO_ACTIVITY_CD
            join o_cs where o_cs.order_id = o.cs_order_id
            join ol   where ol.order_id = o.order_id
            join e    where e.encntr_id = o.encntr_id
            join org  where org.organization_id = e.organization_id    ;002
                 and (expand(expand_idx, nstart, cur_size, org.organization_id,
                     sac_org->organizations[expand_idx].organization_id)
                  		or cur_size = 0 
                  		or nOrg_Security_On_Ind = 0
                  		or(o.order_status_cd = order_status_future_cd AND show_future_orders_ind = 1))                   ;008
            join pl   where pl.person_id = o.last_update_provider_id
            join oror where oror.order_id = outerjoin(o.order_id)
            join r    where r.ord_rqstn_id = outerjoin(oror.ord_rqstn_id)
            join mol  where mol.order_id = outerjoin(o.order_id)
            join oc   where oc.order_id = outerjoin(ol.order_id)
            join pra  where pra.parent_entity_id = outerjoin(o.order_id) 
                        and pra.parent_entity_name = outerjoin("ORDERS")
            join aor  where aor.order_id = outerjoin(ol.order_id)
                        and aor.primary_flag = outerjoin(0)
            join ocr  where ocr.order_id = outerjoin(aor.order_id)                ;001
            join c    where c.container_id = outerjoin(ocr.container_id)          ;001
            join s    where s.specimen_id = outerjoin(c.specimen_id)
            join ca   where ca.container_id = outerjoin(c.container_id)
 
         endif
           
         into "nl:"
            o.order_id,
            o_cs.seq,
            ol.seq,
            mol_exists = evaluate(nullind(mol.order_id),0,"Y","N"),                    ;005
            e.seq,
            org.seq,                                                   ;002
            pl.seq,
            oc_exists = evaluate(nullind(oc.order_id),0,"Y","N"),
            aor.seq,
            aor_exists = evaluate(nullind(aor.accession_id),0,"Y","N"),
            c.seq,
            s.seq,
            ocr.seq,
            chart_copies_exist_ind = evaluate(nullind(pra.parent_entity_id),0, 1, 0),
            r_exists = evaluate(nullind(r.ord_rqstn_id), 0, "Y", "N"),
            ca.accession_container_nbr
         from
            orders o,
            orders o_cs,
            order_laboratory ol,
            mic_order_lab mol,
            encounter e,
            organization org,                                          ;002
            prsnl pl,
            order_comment oc,
            accession_order_r aor,
            order_container_r ocr,
            container c,
            v500_specimen s,
            container_accession   ca,
            prsnl_reltn_activity pra,
            ord_rqstn_ord_r oror,
            ord_rqstn r
 
         ORDER BY
            o.order_id
            , ca.ACCESSION_CONTAINER_NBR

        
         head report
            q_cnt = 0

         head o.order_id
            order_comment_found_ind = 0
            q_cnt = q_cnt + 1
            if (mod(q_cnt,10) = 1)
                stat = alterlist(reply->qual, q_cnt + 9)
            endif
            reply->qual_cnt = q_cnt
            reply->qual[q_cnt].order_id = o.order_id
            reply->qual[q_cnt].updt_cnt = o.updt_cnt
            reply->qual[q_cnt].cs_order_id = o.cs_order_id
            if (o_cs.order_id > 0.0)
                reply->qual[q_cnt].cs_catalog_cd = o_cs.catalog_cd
                reply->qual[q_cnt].cs_order_mne = o_cs.order_mnemonic
            endif
            reply->qual[q_cnt].catalog_cd = o.catalog_cd
            reply->qual[q_cnt].catalog_type_cd = o.catalog_type_cd
            reply->qual[q_cnt].order_mnemonic = o.order_mnemonic
            reply->qual[q_cnt].activity_type_cd = o.activity_type_cd
            reply->qual[q_cnt].orig_order_dt_tm = o.orig_order_dt_tm
            reply->qual[q_cnt].current_start_dt_tm = o.current_start_dt_tm
            reply->qual[q_cnt].order_status_cd = o.order_status_cd
            reply->qual[q_cnt].dept_status_cd = o.dept_status_cd
            reply->qual[q_cnt].encntr_type_cd = e.encntr_type_cd       ;004
            reply->qual[q_cnt].encntr_status_cd = e.encntr_status_cd   ;002
            reply->qual[q_cnt].encntr_org_id = e.organization_id       ;003
            reply->qual[q_cnt].org_name = org.org_name                 ;002
            reply->qual[q_cnt].confid_level_cd = e.confid_level_cd     ;003
            reply->qual[q_cnt].encntr_id = o.encntr_id
            reply->qual[q_cnt].report_priority_cd = ol.report_priority_cd
            reply->qual[q_cnt].collection_priority_cd =
                ol.collection_priority_cd
            reply->qual[q_cnt].loc_facility_cd = e.loc_facility_cd
            reply->qual[q_cnt].loc_nurse_unit_cd = e.loc_nurse_unit_cd
            reply->qual[q_cnt].loc_room_cd = e.loc_room_cd
            reply->qual[q_cnt].loc_bed_cd = e.loc_bed_cd
            reply->qual[q_cnt].reason_for_visit = e.reason_for_visit
            reply->qual[q_cnt].last_update_provider_id = 
                o.last_update_provider_id
            reply->qual[q_cnt].oe_format_id = o.oe_format_id
            if (pl.person_id > 0.0)
                reply->qual[q_cnt].last_update_provider_name = 
                pl.name_full_formatted
            endif
            if (mol_exists = "Y")                                      ;005
                reply->qual[q_cnt].susceptibility_ind = mol.susceptibility_ind
                reply->qual[q_cnt].positive_ind = mol.positive_ind
                reply->qual[q_cnt].micro_status_cd = mol.status_cd
            endif
            if (aor_exists = "Y")
                reply->qual[q_cnt].drawn_dt_tm = c.drawn_dt_tm
                reply->qual[q_cnt].specimen_type_cd = s.specimen_type_cd
                reply->qual[q_cnt].body_site_cd = s.body_site_cd
;001            reply->qual[q_cnt].accession = ca.accession
                reply->qual[q_cnt].accession = aor.accession            ;001
            endif
            
            reply->qual[q_cnt].chart_requested_ind = chart_copies_exist_ind
            reply->qual[q_cnt].container_id = ocr.container_id
            
         detail
            if (oc_exists = "Y" and oc.comment_type_cd IN (order_comment_cd, order_note_cd, cancel_comment_cd))
                ;used to be in dummyt join as part of WHERE clause
                order_comment_found_ind = 1
            endif
            if (r_exists = "Y")
                stat = alterlist(reply->qual[q_cnt].ord_rqstn_qual, 1)
                reply->qual[q_cnt].ord_rqstn_qual[1].ord_rqstn_id = r.ord_rqstn_id
                reply->qual[q_cnt].ord_rqstn_qual[1].rqstn_assignment_ident = r.rqstn_assignment_ident
            endif      
             
         foot o.order_id
             if (order_comment_found_ind = 1)
                reply->qual[q_cnt].order_comment_ind = 1
             else
                reply->qual[q_cnt].order_comment_ind = 0
             endif
             
         foot report
             /***********************************************************************
             * Resize reply record                                                  *
             ***********************************************************************/
             stat = alterlist(reply->qual,q_cnt)
 
         with
            nocounter,Expand=1
           
 
         if (size(reply->qual,5) > 0)
            set reply->status_data.status = "S"    ;Successful
         else
            set reply->status_data.status = "Z"    ;Zero
         endif

subroutine PrefDefinedToShowFutureOrders(dummy)
  ;******************************************************************************************
  ;* Constant Declarations                                                                           *
  ;******************************************************************************************
  declare PREF_SECTION_NAME 			= vc with protect, constant("application")
  declare PREF_GROUP					= vc with protect, constant("orderresultviewer")
  declare PREF_SHOWFUTUREORDERS_ENTRY	= vc with protect, constant("hide future orders")

  ;******************************************************************************************
  ;* Variable Declarations                                                                           *
  ;******************************************************************************************
  declare StatPref                  = i2 with protect, noconstant(0)
  declare UserId					= vc with protect, noconstant(build(cnvtstring(reqinfo->updt_id),".00"))
  declare UserPositionCd			= vc with protect, noconstant(build(cnvtstring(reqinfo->position_cd), ".00"))
  declare FacilityCd				= vc with protect, noconstant(build(cnvtstring(request->facility_cd),".00"))
  declare IsFound					= i2 with protect, noconstant(0)
 
  set StatPref = LoadPreferences("system", FacilityCd, UserPositionCd, UserId, PREF_SECTION_NAME, PREF_GROUP)
  if(StatPref != 0)
  	set IsFound = FindPreference(PREF_SHOWFUTUREORDERS_ENTRY)
  	if(IsFound != 0 and CNVTUPPER(GetPreferenceValue(IsFound)) = "YES")
  		return (0)
  	elseif(IsFound != 0 and CNVTUPPER(GetPreferenceValue(IsFound)) = "NO")
  		return (1)
  	endif
  endif

  return (1)
end ;PrefDefinedToShowFutureOrders



      #Exit_Script
         end
         go      

;Generated by GNU enscript 1.6.4.
