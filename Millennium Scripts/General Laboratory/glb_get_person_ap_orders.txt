 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_person_ap_orders/glb_get_person_ap_orders.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2000 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_person_ap_orders.prg
        Object name:            glb_get_person_ap_orders
        Request #:              250149

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Load patient anatomic pathology cases for a
                                given collect date range.  Optionally, filter
                                by catalog_cd.

        Tables read:            case_report
                                case_specimen
                                code_value
                                encounter
                                orders
                                order_comment
                                organization
                                pathology_case
                                prsnl
                                report_task
                                clinical_event

        Tables updated:         None
        Executing from:

        Special Notes:
******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 03/02/98 Hal Patchen          Initial Release                     *
;    *001 06/07/99 Gary Runde           Retrieve the encounter status code  *
;    *                                  and the org_name                    *
;    *002 05/23/00 Hal Patchen          Return encounter organization and   *
;    *                                  confidentiality code for            *
;    *                                  organization level security.        *
;    *003 10/03/00 SD4221               Feature: 13827                      *
;    *                                  Change Current_start_dt_tm to look  *
;    *                                  at case_collect_dt_tm (defect fix   *
;    *                                  for hnam ocd4245)                   *
;    *004 09/14/00 Hal Patchen          Return encounter type               *
;    *005 03/29/04 Eric Smith           Refactor the code look up  and      *
;    *                                  retrieve the case accession         *
;    *                                  by person id                        *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_PERSON_AP_ORDERS:dba go
             create program GLB_GET_PERSON_AP_ORDERS:dba
%i cclsource:pcs_code.inc
%i cclsource:pcs_SUBEVENT.inc

      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  person_id                    = f8
         1  collect_dt_tm_begin          = dq8
         1  collect_dt_tm_end            = dq8
         1  catalog_cd                   = f8
         1  encounter_id                 = f8
         1  ord_rqstn_id                 = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      (
         1  qual_cnt                     = i4
         1  qual[*]
            2  order_id                  = f8
            2  updt_cnt                  = i4
            2  catalog_cd                = f8
            2  catalog_type_cd           = f8
            2  order_mnemonic            = vc
            2  activity_type_cd          = f8
            2  activity_type_disp        = vc
            2  activity_type_desc        = vc
            2  activity_type_mean        = vc
            2  orig_order_dt_tm          = dq8
            2  order_status_cd           = f8
            2  order_status_disp         = vc
            2  order_status_mean         = vc
            2  dept_status_cd            = f8
            2  dept_status_disp          = vc
            2  dept_status_mean          = vc
            2  encntr_id                 = f8
            2  last_update_provider_id   = f8
            2  last_update_provider_name = vc
            2  encntr_type_cd            = f8                          ;004
            2  encntr_type_disp          = vc                          ;004
            2  encntr_type_mean          = vc                          ;004
            2  encntr_status_cd          = f8                          ;001
            2  encntr_status_disp        = vc                          ;001
            2  encntr_org_id             = f8                          ;002
            2  org_name                  = vc                          ;001
            2  confid_level_cd           = f8                          ;002
            2  confid_level_disp         = vc                          ;002
            2  loc_facility_cd           = f8
            2  loc_facility_disp         = vc
            2  loc_nurse_unit_cd         = f8
            2  loc_nurse_unit_disp       = vc
            2  loc_room_cd               = f8
            2  loc_room_disp             = vc
            2  loc_bed_cd                = f8
            2  loc_bed_disp              = vc
            2  reason_for_visit          = vc
            2  accession                 = vc
            2  spec_cnt                  = i4
            2  spec_qual[*]
               3  specimen_cd            = f8   ;codeset 1306
               3  specimen_disp          = vc
               3  specimen_desc          = vc
               3  specimen_mean          = vc
            2  current_start_dt_tm       = dq8
            2  drawn_dt_tm               = dq8
            2  report_priority_cd        = f8
            2  report_priority_disp      = vc
            2  case_report_status_cd     = f8
            2  case_report_status_disp   = vc
            2  cancel_prsnl_id           = f8
            2  cancel_prsnl_name         = vc
            2  cancel_dt_tm              = dq8
            2  order_comment_ind         = i2
            2  report_id                 = f8
            2  oe_format_id        = f8
            2  accession_qual[*]
               3 accession               =c20
            2  ord_rqstn_qual[*]
               3 ord_rqstn_id            = f8
               3 rqstn_assignment_ident  = vc
            2  case_id                   = f8
%i cclsource:status_block.inc
      )

      record temp
      (
        1 qual[*]
          2 case_id             = f8
          2 accession_nbr       = c20
          2 case_collect_dt_tm  = dq8
          2 rpt_qual[*]
            3 report_sequence   = i4
            3 event_id          = f8
            3 status_cd         = f8
            3 cancel_dt_tm      = dq8
            3 cancel_prsnl_id   = f8
            3 cancel_prsnl_name = vc
            3 order_id          = f8
            3 priority_cd       = f8
            3 report_id         = f8
      )

      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         declare COMMENT_TYPE_CODESET    = i4  with constant (14), protect
         declare ORDER_COMMENT_CDF       = c12 with constant ("ORD COMMENT"), protect
         declare ORDER_NOTE_CDF          = c12 with constant ("ORD NOTE"), protect
         declare CANCEL_COMMENT_CDF      = c12 with constant ("CANCELREASON"), protect
         declare order_comment_cd        = f8  with noconstant(0.0),protect
         declare order_note_cd           = f8  with noconstant(0.0),protect
         declare cancel_comment_cd       = f8  with noconstant(0.0),protect
         declare nbr_of_activity_types   = i4  with noconstant(0),protect
         declare q_cnt                   = i4  with noconstant(0),protect
	 declare lIdx                    = i4  with protect, noconstant(0)
	 
         set bCheckCE                    = 0
         set max_rcnt                    = 0
         set reply->status_data.status   = "F"


      /***********************************************************************
      * Select processing code values                                        *
      ***********************************************************************/
         set order_comment_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,ORDER_COMMENT_CDF)
         if (order_comment_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Order Comment code failed")
           set reply->status_data.status = "Z"
         endif

         set order_note_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,ORDER_NOTE_CDF)
         if (order_note_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Order Note code failed")
           set reply->status_data.status = "Z"
         endif

         set cancel_comment_cd = getcodevaluebymeaning(COMMENT_TYPE_CODESET,CANCEL_COMMENT_CDF)
         if (cancel_comment_cd = 0)
           call subevent_add  ("SELECT", "Z", "CODE_VALUE", "The Cancel Comment code failed")
           set reply->status_data.status = "Z"
         endif

         if (reply->status_data.status = "Z")
           go to Exit_Script
         endif



    select
            if (request->ord_rqstn_id != 0)
               from pathology_case pc,
                    case_report cr,
                    prsnl cr_pl,
                    report_task rt,
                    ord_rqstn_ord_r oror,
                    processing_task pt
                plan oror where oror.ord_rqstn_id = request->ord_rqstn_id
                join pt   where pt.order_id = oror.order_id
                join pc   where pc.case_id = pt.case_id
                join cr    where cr.case_id = pc.case_id
                join cr_pl where cr_pl.person_id = cr.cancel_prsnl_id
                join rt    where rt.report_id = outerjoin(cr.report_id)
            elseif(request->encounter_id != 0)
               from pathology_case pc,
                    case_report cr,
                    prsnl cr_pl,
                    report_task rt
                plan pc   where pc.encntr_id = request->encounter_id
                            and pc.case_collect_dt_tm between
                                  cnvtdatetime(request->collect_dt_tm_begin)
                              and cnvtdatetime(request->collect_dt_tm_end)
                join cr    where cr.case_id = pc.case_id
                join cr_pl where cr_pl.person_id = cr.cancel_prsnl_id
                join rt    where rt.report_id = outerjoin(cr.report_id)
            else
               from pathology_case pc,
                    case_report cr,
                    prsnl cr_pl,
                    report_task rt
                plan pc   where pc.person_id = request->person_id
                            and pc.case_collect_dt_tm between
                                  cnvtdatetime(request->collect_dt_tm_begin)
                              and cnvtdatetime(request->collect_dt_tm_end)
                join cr    where cr.case_id = pc.case_id
                join cr_pl where cr_pl.person_id = cr.cancel_prsnl_id
                join rt    where rt.report_id = outerjoin(cr.report_id)
            endif
     into "nl:"
      pc.case_id,
      rt_exists = evaluate(nullind(rt.report_id), 1, 0, 1)

     order by pc.case_id

     head report
       cnt = 0
       rcnt = 0

     head pc.case_id
       cnt = cnt + 1
       stat = alterlist(temp->qual, cnt)
       temp->qual[cnt].case_id = pc.case_id
       temp->qual[cnt].accession_nbr = pc.accession_nbr
       temp->qual[cnt].case_collect_dt_tm =
                           cnvtdatetime(pc.case_collect_dt_tm)
       rcnt = 0

     detail
       if ((rt_exists = 0) or (rt_exists = 1 and rt.order_id != 0.0))
         rcnt = rcnt + 1

         if (rcnt > max_rcnt)
           max_rcnt = rcnt
         endif

         stat = alterlist(temp->qual[cnt].rpt_qual, rcnt)
         temp->qual[cnt].rpt_qual[rcnt].report_sequence = cr.report_sequence
         temp->qual[cnt].rpt_qual[rcnt].event_id = cr.event_id
         temp->qual[cnt].rpt_qual[rcnt].status_cd = cr.status_cd
         temp->qual[cnt].rpt_qual[rcnt].cancel_dt_tm = cnvtdatetime(cr.cancel_dt_tm)
         temp->qual[cnt].rpt_qual[rcnt].cancel_prsnl_id = cr.cancel_prsnl_id
         temp->qual[cnt].rpt_qual[rcnt].report_id = cr.report_id
         if (cr_pl.person_id > 0.0)
           temp->qual[cnt].rpt_qual[rcnt].cancel_prsnl_name =
             cr_pl.name_full_formatted
         endif


         if (rt_exists = 1)
           temp->qual[cnt].rpt_qual[rcnt].order_id = rt.order_id
           temp->qual[cnt].rpt_qual[rcnt].priority_cd = rt.priority_cd
         else
           bCheckCE = 1
         endif
       endif

    with nocounter


    if (bCheckCE = 1)
      select into "nl:"
        ce.order_id,
        d.seq,
        d1.seq

       from (dummyt d with seq = value(size(temp->qual, 5))),
            (dummyt d1 with seq = value(max_rcnt)),
            clinical_event ce

       plan d
       join d1 where d1.seq <= size(temp->qual[d.seq].rpt_qual, 5)
       join ce where temp->qual[d.seq].rpt_qual[d1.seq].order_id = 0.0
                 and temp->qual[d.seq].rpt_qual[d1.seq].event_id = ce.event_id
                 and ce.valid_until_dt_tm > cnvtdatetime(sysdate)

       detail
         temp->qual[d.seq].rpt_qual[d1.seq].order_id = ce.order_id

      with nocounter
    endif


    if (size(temp->qual, 5) > 0)
      /***********************************************************************
      * Select patient orders based on collect date range                    *
      ***********************************************************************/
         select
         if (request->catalog_cd > 0.0)
            plan d
            join d1   where d1.seq <= size(temp->qual[d.seq].rpt_qual, 5)
            join o    where temp->qual[d.seq].rpt_qual[d1.seq].order_id != 0.0
                        and temp->qual[d.seq].rpt_qual[d1.seq].order_id = o.order_id
                        and o.catalog_cd = request->catalog_cd
            join e    where e.encntr_id = o.encntr_id
            join org  where e.organization_id = org.organization_id    ;001
            join oa   where oa.order_id = o.order_id
            join o_pl where o_pl.person_id = oa.order_provider_id
            join cs   where temp->qual[d.seq].case_id = cs.case_id
                        and cs.cancel_cd in (null, 0.0)
            join d_oc where d_oc.seq = 1
            join oc   where oc.order_id = o.order_id
                        and oc.comment_type_cd in ( order_comment_cd,
                                                    order_note_cd,
                                                    cancel_comment_cd )
         else
            plan d
            join d1   where d1.seq <= size(temp->qual[d.seq].rpt_qual, 5)
            join o    where temp->qual[d.seq].rpt_qual[d1.seq].order_id != 0.0
                        and temp->qual[d.seq].rpt_qual[d1.seq].order_id = o.order_id
            join e    where e.encntr_id = o.encntr_id
            join org  where e.organization_id = org.organization_id    ;001
            join oa   where oa.order_id = o.order_id
            join o_pl where o_pl.person_id = oa.order_provider_id
            join cs   where temp->qual[d.seq].case_id = cs.case_id
                        and cs.cancel_cd in (null, 0.0)
            join d_oc where d_oc.seq = 1
            join oc   where oc.order_id = o.order_id
                        and oc.comment_type_cd in ( order_comment_cd,
                                                    order_note_cd,
                                                    cancel_comment_cd )
         endif
         into "nl:"
            d.seq,
            d1.seq,
            o.order_id,
            e.seq,
            org.seq,                                                   ;001
            o_pl.seq,
            cs.case_specimen_id,
            d_oc.seq,
            oc_exists = decode(oc.seq, "Y", "N"),
            oc.seq

            /* selection fields:
            o.person_id,
            o.cs_order_id,
            o.order_id,
            o.catalog_cd,
            o.order_mnemonic,
            o.activity_type_cd,
            o.orig_order_dt_tm,
            o.current_start_dt_tm,
            o.order_status_cd,
            o.encntr_id,
            e.encntr_type_cd,                                          ;004
            e.loc_facility_cd,
            e.loc_nurse_unit_cd,
            e.loc_room_cd,
            e.loc_bed_cd,
            e.reason_for_visit,
            e.organization_id,                                         ;002
            e.confid_level_cd,                                         ;002
            o_pl.person_id,
            o_pl.name_full_formatted,
            cs.case_specimen_id,
            cs.specimen_id,
            d_oc.seq,
            oc_exists = decode(oc.seq, "Y", "N"),
            oc.action_sequence,
            oc.comment_type_cd,
            oc.long_text_id
            */

         from
            (dummyt d with seq = value(size(temp->qual, 5))),
            (dummyt d1 with seq = value(max_rcnt)),
            orders o,
            order_action oa,
            encounter e,
            organization org,                                          ;001
            prsnl o_pl,
            case_specimen cs,
            (dummyt d_oc with seq = 1),
            order_comment oc


         order by
            d.seq,
            d1.seq,
            o.order_id,
            cs.case_specimen_id

         head report
            q_cnt = 0
            s_cnt = 0
            rpt_seq = 0

         head d.seq
            row+0

         head d1.seq
            q_cnt = q_cnt + 1
            stat = alterlist(reply->qual, q_cnt)
            reply->qual_cnt = q_cnt
            reply->qual[q_cnt].order_id = o.order_id
            reply->qual[q_cnt].updt_cnt = o.updt_cnt
            reply->qual[q_cnt].catalog_cd = o.catalog_cd
            reply->qual[q_cnt].catalog_type_cd = o.catalog_type_cd
            if (temp->qual[d.seq].rpt_qual[d1.seq].report_sequence > 0)
              rpt_seq = temp->qual[d.seq].rpt_qual[d1.seq].report_sequence + 1
              reply->qual[q_cnt].order_mnemonic = concat(trim(o.order_mnemonic)," ", cnvtstring(rpt_seq))
            else
              reply->qual[q_cnt].order_mnemonic = o.order_mnemonic
            endif
            reply->qual[q_cnt].activity_type_cd = o.activity_type_cd
            reply->qual[q_cnt].orig_order_dt_tm = o.orig_order_dt_tm
            reply->qual[q_cnt].order_status_cd = o.order_status_cd
            reply->qual[q_cnt].dept_status_cd = o.dept_status_cd
            reply->qual[q_cnt].encntr_id = o.encntr_id
            reply->qual[q_cnt].encntr_type_cd = e.encntr_type_cd       ;004
            reply->qual[q_cnt].encntr_status_cd = e.encntr_status_cd   ;001
            reply->qual[q_cnt].encntr_org_id = e.organization_id       ;002
            reply->qual[q_cnt].org_name = org.org_name                 ;001
            reply->qual[q_cnt].confid_level_cd = e.confid_level_cd     ;002
            reply->qual[q_cnt].loc_facility_cd = e.loc_facility_cd
            reply->qual[q_cnt].loc_nurse_unit_cd = e.loc_nurse_unit_cd
            reply->qual[q_cnt].loc_room_cd = e.loc_room_cd
            reply->qual[q_cnt].loc_bed_cd = e.loc_bed_cd
            reply->qual[q_cnt].reason_for_visit = e.reason_for_visit
            reply->qual[q_cnt].last_update_provider_id =
              o.last_update_provider_id
            reply->qual[q_cnt].oe_format_id=o.oe_format_id
            if (o_pl.person_id > 0.0)
               reply->qual[q_cnt].last_update_provider_name =
                 o_pl.name_full_formatted
            endif
            reply->qual[q_cnt].accession = temp->qual[d.seq].accession_nbr
;003            reply->qual[q_cnt].current_start_dt_tm = o.current_start_dt_tm
            reply->qual[q_cnt].current_start_dt_tm = temp->qual[d.seq].case_collect_dt_tm             ;003
            reply->qual[q_cnt].drawn_dt_tm = temp->qual[d.seq].case_collect_dt_tm
            reply->qual[q_cnt].report_priority_cd = temp->qual[d.seq].rpt_qual[d1.seq].priority_cd
            reply->qual[q_cnt].case_report_status_cd = temp->qual[d.seq].rpt_qual[d1.seq].status_cd
            reply->qual[q_cnt].cancel_prsnl_id = temp->qual[d.seq].rpt_qual[d1.seq].cancel_prsnl_id
            reply->qual[q_cnt].cancel_prsnl_name = temp->qual[d.seq].rpt_qual[d1.seq].cancel_prsnl_name
            reply->qual[q_cnt].cancel_dt_tm = cnvtdatetime(temp->qual[d.seq].rpt_qual[d1.seq].cancel_dt_tm)
            reply->qual[q_cnt].report_id = temp->qual[d.seq].rpt_qual[d1.seq].report_id
            reply->qual[q_cnt].case_id = temp->qual[d.seq].case_id
            
            s_cnt = 0

         head cs.case_specimen_id
            s_cnt = s_cnt + 1
            stat = alterlist(reply->qual[q_cnt].spec_qual, s_cnt)
            reply->qual[q_cnt].spec_qual[s_cnt].specimen_cd = cs.specimen_cd
            reply->qual[q_cnt].spec_cnt = s_cnt

         detail
            if (oc_exists = "Y")
               reply->qual[q_cnt].order_comment_ind = 1
            else
               reply->qual[q_cnt].order_comment_ind = 0
            endif

         with
            nocounter,
            outerjoin = d_oc,
            dontcare = oc,
            maxread(oc, 1)

        
        /***********************************************************************
        * Join to the first accession_order_r table to get the case number.    *
        * Then join to accession_order_r table to get the Julian Accession     *
        * numbers for the case.                                                *
        ***********************************************************************/
         if (q_cnt > 0)
           select into "nl:" a.order_id, b.accession
           from (dummyt d2 with seq = value(q_cnt)),
              accession_order_r a,
              accession_order_r b
           plan d2
           join a
           where a.accession = reply->qual[d2.seq].accession
             and a.primary_flag = 0
           join b
           where b.order_id = a.order_id
               and b.primary_flag = 1
           order by d2.seq, b.accession 
           head d2.seq
             cnt = 0
           detail
             cnt = cnt + 1             
             stat = alterlist(reply->qual[d2.seq].accession_qual,cnt)
             reply->qual[d2.seq].accession_qual[cnt].accession = b.accession
           with nocounter
           
          select into "nl:"
          from 
            processing_task pt,           
            ord_rqstn_ord_r oror,
            ord_rqstn r
          plan pt where expand(lIdx, 1, q_cnt, pt.case_id, reply->qual[lIdx].case_id)
          join oror where oror.order_id = pt.order_id
          join r where r.ord_rqstn_id = oror.ord_rqstn_id

          order by r.ord_rqstn_id
            
          head r.ord_rqstn_id
            idx = 0
            while(assign(idx, locateval(lIdx, idx + 1, q_cnt, pt.case_id, reply->qual[lIdx].case_id)))
              cnt = size(reply->qual[idx].ord_rqstn_qual, 5) + 1
              stat = alterlist(reply->qual[idx].ord_rqstn_qual, cnt)
              reply->qual[idx].ord_rqstn_qual[cnt].ord_rqstn_id = r.ord_rqstn_id
              reply->qual[idx].ord_rqstn_qual[cnt].rqstn_assignment_ident = r.rqstn_assignment_ident
            endwhile
            
          with nocounter
             
        endif


    endif

      /***********************************************************************
      * Resize reply record                                                  *
      ***********************************************************************/
         if (q_cnt > 0)
            set reply->status_data.status = "S"    ;Successful
         else
            set reply->status_data.status = "Z"   ;Zero
         endif

      #Exit_Script
         end
         go

;Generated by GNU enscript 1.6.4.
