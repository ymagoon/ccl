 ;;Solution_Test/script/PathNet -- Gen Lab/glb_rdm_upd_qc_event_dt_tm_p2/glb_rdm_upd_qc_event_dt_tm_p2.prg Turn on black mode

/*~BB~************************************************************************
  *                                                                      *
  *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
  *                              Technology, Inc.                        *
  *       Revision      (c) 1984-2005 Cerner Corporation                 *
  *                                                                      *
  *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
  *  This material contains the valuable properties and trade secrets of *
  *  Cerner Corporation of Kansas City, Missouri, United States of       *
  *  America (Cerner), embodying substantial creative efforts and        *
  *  confidential information, ideas and expressions, no part of which   *
  *  may be reproduced or transmitted in any form or by any means, or    *
  *  retained in any storage or retrieval system without the express     *
  *  written permission of Cerner.                                       *
  *                                                                      *
  *  Cerner is a registered mark of Cerner Corporation.                  *
  *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
 
 
        Source file name:   glb_rdm_upd_qc_event_dt_tm_p2.prg 
        Object name:        glb_rdm_upd_qc_event_dt_tm_p2
        Request #:          N/A
 
        Product:            Database Architecture
        Product Team:       Data Access Review
        HNA Version:        500
        CCL Version:        8.0
 
        Program purpose:    This is the cat 5 readme glb_rdm_upd_qc_event_dt_tm_p2
       
        Tables read:        dm_info, dm_ocd_log, qc_result
 
        Tables updated:     dm_info
 
        Executing from:   
 
        Special Notes:      This is a readme

        Legend:             Variables should be prefixed with scope and type,
                            followed by an underscore and deobjective variable name.

                            Variable Scope Abbreviations    Variable Type Abbreviations
                            p - private                     n - i2
                            m - protect                     l - i2
                            g - public                      f - f8
                            u - persistobject               d - dq8
                                                            s - vc
                                                            c - c

                            Examples:
                            pn_status_ind = private, i2
                            gf_number     = public, f8

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     01 06/25/2006 MD013471             Initial Release                    *
;     02 07/17/2007 JH016266			Re: CR#1-1195158251			   *
;									Error-checking for child script	   *
;									Removed if-conditional in          *	
;									#EXIT_PROGRAM	         		   *
;                                                                           *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

drop program   glb_rdm_upd_qc_event_dt_tm_p2:dba  go
create program glb_rdm_upd_qc_event_dt_tm_p2:dba 
 
%i cclsource:dm_readme_data.inc
%i cclsource:dm_run_parallel_p2.inc

set readme_data->status = 'F'
set readme_data->message = concat('FAILED STARTING README ', cnvtstring( readme_data->readme_id,32,2))

; Declare the variables
declare mf_max_range_id   = f8 with protect, noconstant(0.0)
declare ms_info_domain_nm = vc with protect, noconstant("")
declare ms_range          = vc with protect, noconstant("")
declare ms_max_name_p     = vc with protect, noconstant("")
declare ms_max_name2     = vc with protect, noconstant("")
declare ms_child_script	  = vc with protect, noconstant("")
declare full_range_scan_ind	= i2 with protect, noconstant(0)

; Set this to the name of the readme process.  
; This must match the name used in the parent, child, and child_c
set ms_info_domain_nm = "RDM_UPD_QC_EVENT_DT_TM PROCESS"

; This is the name of the final range that will be used.
set ms_range = "QC_RESULT_ID RANGE 4 CAT5"

; Set ms_max_name_p to what ms_max_name was set to in the parent script
set ms_max_name  = "MAX QC_RESULT_ID EVALUATED QRE"
set ms_max_name2 = "MAX QC_RESULT_ID EVALUATED QR"

; Set the name of the child script to be executed
set ms_child_script = "glb_rdm_upd_qc_event_dt_tm_cc"
set ms_child_script2 = "glb_rdm_upd_qc_event_dt_tm_cc2"

; Set the number of children associated with this parallel readme set
set mn_num_children = 3

; USE THIS CHECK ONLY IF THIS README SET IS REPLACING AN EXISTING README
; OTHERWISE, delete it
;
; Since the creation of the template is going to cause new readme numbers, 
; this query will see if the client has successfully run the readme previously.
; The first parameter needs to be changed to the readme ID this is replacing and
; the second parameter to the last active instance. 
; That way if the client has already run it, they will not run it again.
;
; Inhouse, this check will not work because the dm_ocd_log table is purged or rows are removed from it, 
; but at a client site the previous instances should be kept. 
; Only exit out of the program if an error was encountered OR the readme has run previously
if(sbr_p2_check_for_prev_rdm(2488, 3) IN (2, 1))
	go to EXIT_PROGRAM
endif

; Change the table and column name to whatever primary key column you want to be used.
select into "nl:"
    max_val = max(qr.qc_result_id)
    from qc_result qr
  detail
    mf_max_range_id = cnvtreal(max_val)
  with  nocounter

; Set an indicator of whether or not you want the _p2 script to do a full-range or pick up where the last child left off
; 0 - start from 1+the highest ID evaluated by a child readme
; 1 - do a full-range scan of the table
set full_range_scan_ind = 0

if(sbr_run_parent2(mf_max_range_id, ms_range, ms_max_name_p, ms_info_domain_nm, ms_child_script, 
										mn_num_children, full_range_scan_ind) IN (2, 0))
	go to EXIT_PROGRAM
else
	set readme_data->status = "F"
	set readme_data->message = "Failed to run glb_rdm_upd_qc_event_dt_tm_cc2"
endif

if(sbr_run_parent2(mf_max_range_id, ms_range, ms_max_name_p, ms_info_domain_nm, ms_child_script2, 
										mn_num_children, full_range_scan_ind) IN (2, 0))
	go to EXIT_PROGRAM
else
	set readme_data->status = "S"
	set readme_data->message = "Readme completed successfully"
endif

#EXIT_PROGRAM

;if the readme failed, rollback
if (readme_data->status = 'F')
  rollback
else
  commit
endif

; Free the record structure holding objects to be dropped
; Do this regardless of whether or not SQL objects are dropped
free record parallel_drop

execute dm_readme_status
call echorecord(readme_data)

end
go

;Generated by GNU enscript 1.6.4.
