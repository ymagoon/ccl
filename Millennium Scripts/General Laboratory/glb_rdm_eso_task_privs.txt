 ;;Solution_Test/script/PathNet -- Gen Lab/glb_rdm_eso_task_privs/glb_rdm_eso_task_privs.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 2002 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       glb_rdm_eso_task_privs.prg
        Object name:            glb_rdm_eso_task_privs
        Readme #:
 
        Product:                PathNet
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:
 
        Program purpose:        The purpose of this script is to grant and
                                revoke the appropriate application groups to
                                new task created for granting access to resend
                                results to ESO.
 
 
        Tables read,            TABLE_NAME           METHOD (UNIQUE, RANGE, FULL)
    	and access method:      -------------------- -----------------------------
                                task_access         RANGE
 
        Tables updated:         task_access
 
        Executing from:         Readme
 
        Special Notes:          None
 
    	Run Occurance:	        (select ONE of the following)
                                -----------------------------
                                [X] 1. RUN ONCE
                                [ ] 2. RUN MANY
 
        ReadMe Category:        (select ONE of the following)
                                -----------------------------
                                [ ] 1. Data Load
                                [X] 2. Data Conversion
                                [ ] 3. Data Migration
 
        Execution Time:         (select ONE of the following)
                                ------------------------------------
                                [ ] 1. Uptime before uptime schema.
                                [X] 2. Uptime after uptime schema.
 
        Exec. Justification:    The purpose of this script is to grant and
                                revoke the appropriate application groups to
                                new task created for granting access to resend
                                results to ESO.
 
        Parent Readme:          None
 
        Check Script:           None
 
        Data file for import:   None
 
        Execution Duration:     (select ONE of the following)
                                ----------------------------------
                                [X] 1. Fixed Time
                                [ ] 2. Driver Table:
 
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 11/02/04 Heatheryn Peak       Initial Release                     *
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program glb_rdm_eso_task_privs:dba go
create program glb_rdm_eso_task_privs:dba
 
%i cclsource:pathnet_ocd_subroutines.inc
 
/**********************
** Log Start Message **
**                   **********************************
** LOGSCRIPTSTART creates log row as:                **
**    "Starting (<sREADME_NAME>) - [<date/time>]..." **
******************************************************/
#START_SCRIPT
SET sREADME_NAME = "glb_rdm_eso_task_privs"
CALL LOGSCRIPTSTART(sREADME_NAME)
 
record eso_access(
  1 qual[*]
    2 app_group_cd = f8
    2 revoke_ind = i2
    )
 
/************************************************************************************
* Variable declarations *
************************************************************************************/
 
declare lcount = i4 with protect, noconstant(0)
declare sErrorMessage = vc with protect, noconstant(" ")
declare lErrorCode = i4 with protect, noconstant(0)
 
set readme_data->status = 'F'
set readme_data->message = 'Failed to execute table update'
 
/************************************************************************************
* Select records to be updated *
************************************************************************************/
 
select into "NL:"
  t1_ind  = evaluate(nullind(t1.app_group_cd),0,1,0),
  t2_ind  = evaluate(nullind(t2.app_group_cd),0,1,0)
from task_access T, task_access T1, task_access T2
plan T  where  T.task_number =  250050
join T1  where  T1.app_group_cd = outerjoin(T.app_group_cd) and T1.task_number = outerjoin(250067)
join T2  where  T2.app_group_cd = outerjoin(T.app_group_cd) and T2.task_number = outerjoin(250068)
order by T.app_group_cd
head T.app_group_cd

;check whether 250067 is granted already 
if (t2_ind = 0)
 
  lcount = lcount +1
  if (lcount > size(eso_access->qual,5))
    stat=alterlist(eso_access->qual,lcount+5)
  endif
   
  eso_access->qual[lcount].app_group_cd = T.app_group_cd
 
  ;revoke task 250068 if 250067 is granted
  if (t1_ind = 1)
    eso_access->qual[lcount].revoke_ind = 1
  endif
 
endif
 
with nocounter
 
/************************************************************************************
* Insert new rows into task_access *
************************************************************************************/

if (lcount > 0) 
  set stat=alterlist(eso_access->qual, lcount)
  insert into task_access T, (dummyt D with seq=value(lcount))
  set T.task_number = 250068,
    T.app_group_cd = eso_access->qual[D.seq].app_group_cd,
    T.updt_dt_tm = cnvtdatetime(curdate, curtime3),
    T.updt_id = reqinfo->updt_id,
    T.updt_task = reqinfo->updt_task,
    T.updt_applctx = reqinfo->updt_applctx,
    T.updt_cnt = 0
  plan D where eso_access->qual[D.seq].revoke_ind = 0
  join T
 
  with nocounter
endif 
 
set lErrorCode = error(sErrorMessage, 0)
if (lErrorCode > 0) 
  rollback
  call logmsg ("Error inserting task access table.", E_RDMSTATUS + E_DISPMSG + E_LOGTOFILE)
  call logmsg (sErrorMessage, E_RDMSTATUS + E_DISPMSG + E_LOGTOFILE)
  call logstatus("Execution Failure.", "F")
else
  call logmsg ("Insert on task access successful.", E_RDMSTATUS + E_DISPMSG + E_LOGTOFILE)
  call logstatus("Execution Success.", "S")
endif
 
/********************
** Log End Message **
**                   ******************************************
** LOGSCRIPTEND creates log row as:                          **
**    "Execution (<sREADME_NAME>) Complete - [<date/time>]." **
**************************************************************/
#EXIT_SCRIPT
CALL LOGSCRIPTEND(sREADME_NAME)

free set eso_access
 
end go
 

;Generated by GNU enscript 1.6.4.
