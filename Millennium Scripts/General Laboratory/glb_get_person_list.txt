 ;;Solution_Test/script/ePathLink/PathNet General Lab - PathLink Scripts/glb_get_person_list.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_person_list.prg
        Object name:            glb_get_person_list
        Request #:              250051

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        This script can either load person information
                                for a given person_id or load a range of
                                persons based on a starting last name.

                                If a specific person_id is known, the script
                                can be called by filling out the person_id.

                                Otherwise, load a number (request->maxqual)
                                of person table records based on starting 
                                last name, first name, and person type.  
                                Multiple calls will result in continuing 
                                from the point where the previous call left
                                off.

        Tables read:            code_value
                                person
                                person_alias

        Tables updated:         None
        Executing from:         

        Special Notes:          Uses context record for continuation of 
                                original request.

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 01/03/96 Hal Patchen          Initial Release                     *
;    *001 09/17/99 Chris Heil           Use cnvtalias to format alias.      *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_PERSON_LIST:dba go    
             create program GLB_GET_PERSON_LIST:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  person_id                    = f8
         1  last_name_begin              = vc
         1  first_name_begin             = vc
         1  person_type_cdf_mean         = c12
         1  maxqual                      = i4
         1  prsn_srch_ind                = i2
         1  mrn_begin                    = vc
      )
      */
      /***********************************************************************
      * Context Record                                                       *
      ***********************************************************************/
      /*
      record context
      (
         1  last_name_begin              = vc
         1  first_name_begin             = vc
         1  person_id                    = f8
         1  person_type_cd               = f8
         1  alias_type_mrn_cd            = f8
         1  maxqual                      = i4
         1  updt_cnt                     = i4
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
         1  qual[*]
            2  person_id                 = f8
            2  name_last_key             = vc
            2  name_first_key            = vc
            2  name_full_formatted       = vc
            2  birth_dt_tm               = dq8
            2  sex_cd                    = f8
            2  sex_disp                  = vc
            2  sex_mean                  = c12
            2  alias                     = vc
         1  context_more_data            = c1  ;T=True, F=False
%i cclsource:status_block.inc
      )
      
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set CV_REQUIRED_RECS            = 1
         declare cv_cnt                  = i4
         set ALIAS_TYPE_CODE_SET         = 4
         set ALIAS_TYPE_MRN_CDF          = "MRN"
         set PERSON_TYPE_CODE_SET        = 302
         declare person_type_cdf         = c12
         declare q_cnt                   = i4

         set reply->status_data.status = "F"
         set reply->context_more_data = "F"
         set q_cnt = 0

      /***********************************************************************
      * Build Context record for contination calls to script                 *
      ***********************************************************************/
         if (validate(context->updt_cnt, 0) = 0)
            /* No context record exists */
            record context
            (
               1  last_name_begin          = vc
               1  first_name_begin         = vc
               1  person_id                = f8
               1  person_type_cd           = f8
               1  alias_type_mrn_cd        = f8
               1  maxqual                  = i4
               1  updt_cnt                 = i4
	       1  mrn_begin		   = vc
	       1  prsn_srch_ind		   = i2
            )
            if (request->prsn_srch_ind = 1)
              if (request->last_name_begin > " ")
                 set context->last_name_begin = 
                   trim(cnvtupper(cnvtalphanum(request->last_name_begin)))
              else
                 set context->last_name_begin = ""
              endif
              if (request->first_name_begin > " ")
                 set context->first_name_begin =
                   trim(cnvtupper(cnvtalphanum(request->first_name_begin)))
              else
                 set context->first_name_begin = ""
              endif
              if (request->person_id > 0.0)
                 set context->person_id = request->person_id
                 set context->maxqual = 1
              else
                 set context->person_id = 0.0
                 set context->maxqual = request->maxqual
              endif
	      set context->prsn_srch_ind = 1
            else
              if (request->mrn_begin > " ")
                 set context->mrn_begin = 
                   trim(cnvtupper(cnvtalphanum(request->mrn_begin)))
              else
                 set context->mrn_begin = ""
              endif
	      set context->prsn_srch_ind = 0
              set context->maxqual = request->maxqual
            endif

            set context->updt_cnt = 0
            /* Load person type code and person medical record number code */
            set person_type_cdf = trim(cnvtupper(request->person_type_cdf_mean))

            set context->person_type_cd = 0.0
            set context->alias_type_mrn_cd = 0.0
            set cv_cnt = 0
            select into "nl:"
               cv.code_value,
               cv.cdf_meaning
            from 
               code_value cv
            where (cv.code_set = ALIAS_TYPE_CODE_SET
               and cv.cdf_meaning = ALIAS_TYPE_MRN_CDF)
              or  (cv.code_set = PERSON_TYPE_CODE_SET 
               and cv.cdf_meaning = person_type_cdf)
              and cv.active_ind = 1
              and (cv.begin_effective_dt_tm <= cnvtdatetime(curdate, curtime3)
                and  cv.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3))
            detail
               case (cv.cdf_meaning)
                 of ALIAS_TYPE_MRN_CDF:
                    context->alias_type_mrn_cd = cv.code_value
                    cv_cnt = cv_cnt + 1
                 of person_type_cdf:
                    context->person_type_cd = cv.code_value
               endcase
            with nocounter
            ;* Verify that all required code value records were read.
            if (cv_cnt != CV_REQUIRED_RECS)
               go to Exit_Script
            endif
         endif
         set stat = alterlist(reply->qual, context->maxqual)
call echo("max qual = ",0)
call echo(context->maxqual)

         if (request->prsn_srch_ind = 1)
call echo("search for name", 1)
           /***********************************************************************
            * Select person information based on person_id or person last name     *
            ***********************************************************************/
            select 
            if (request->person_id > 0.0)
               /* Look for a specific person based on person_id */
               plan    p   where p.person_id = context->person_id          
            else
               /* Load person based on last name */
               plan    p   where (p.name_last_key > context->last_name_begin
                              or (p.name_last_key = context->last_name_begin 
                                  and p.name_first_key = context->first_name_begin
                                  and p.person_id > context->person_id)
                              or (p.name_last_key = context->last_name_begin
                                  and p.name_first_key > context->first_name_begin))
                                  and (context->person_type_cd = 0.0
                              or p.person_type_cd = context->person_type_cd)                       
			      and p.active_ind = 1
            endif
            into "nl:"
               p.person_id,
               p.person_type_cd,
               p.name_last_key,
               p.name_first_key,
               p.name_full_formatted,
               p.sex_cd
            from
               person p
            order 
               p.name_last_key,
               p.name_first_key,
               p.person_id
            head report
               q_cnt = 0
            detail         
               q_cnt = q_cnt + 1
               if (q_cnt <= context->maxqual)
                 reply->qual[q_cnt].person_id = p.person_id
                 reply->qual[q_cnt].name_last_key = p.name_last_key
                 reply->qual[q_cnt].name_first_key = p.name_first_key
                 reply->qual[q_cnt].name_full_formatted = p.name_full_formatted
                 reply->qual[q_cnt].birth_dt_tm = p.birth_dt_tm
                 reply->qual[q_cnt].sex_cd = p.sex_cd
              endif
            ;*** If maximum requested reached, save last record
               if (q_cnt = context->maxqual)
                 context->last_name_begin = p.name_last_key
                 context->first_name_begin = p.name_first_key
                 context->person_id = p.person_id
               endif
            ;*** Additional data exists
               if (q_cnt > context->maxqual)
                 context->updt_cnt = context->updt_cnt + 1
                 reply->context_more_data = "T"
                 q_cnt = q_cnt - 1
               endif
            foot report
               stat = alterlist(reply->qual, q_cnt)
            with 
               nocounter,
               maxqual(p, value(context->maxqual + 1))

            /***********************************************************************
            * Select person alias.                                                 *
            * NOTE: This was separated into 2 selects because the maxqual was      *
            *       conflicting with the order by clause.                          *
            ***********************************************************************/
            select into "nl:"
               d.seq,
               pa.alias
            from
                (dummyt d with seq = value(q_cnt)),
                person_alias pa
             plan    d
             join    pa  where pa.person_id = reply->qual[d.seq].person_id
                         and pa.person_alias_type_cd = context->alias_type_mrn_cd
             head report
                cnt = 0
             detail         
                cnt = d.seq,
;001                reply->qual[cnt].alias = pa.alias
                reply->qual[cnt].alias = cnvtalias(pa.alias, pa.alias_pool_cd)    ;001
             with 
                nocounter

           else
call echo ("search for med rec",1)
            /***********************************************************************
            * Select person alias.                                                 *
            * NOTE: This was separated into 2 selects because the maxqual was      *
            *       conflicting with the order by clause.                          *
            ***********************************************************************/
	    set mrnlength = textlen(context->mrn_begin)
            select 
            if (request->person_id > 0.0)
               /* Look for a specific person based on person_id */
               plan    pa   where pa.person_id = context->person_id          
                              and pa.person_alias_type_cd = context->alias_type_mrn_cd
			      and pa.active_ind = 1
	       join    p    where p.person_id = pa.person_id
			      and p.active_ind = 1
            else
               /* Load person based on last name */
               plan    pa   where 
				substring(1, value(mrnlength), pa.alias) = context->mrn_begin
                              and pa.person_alias_type_cd = context->alias_type_mrn_cd
			      and pa.active_ind = 1
	       join    p    where p.person_id = pa.person_id
			      and p.active_ind = 1
            endif
            into "nl:"
               pa.alias,
	       p.person_id
            from
               person_alias pa,
	       person p
            head report
               q_cnt = 0
            detail         
               q_cnt = q_cnt + 1
               if (q_cnt <= context->maxqual)
                 reply->qual[q_cnt].person_id = pa.person_id
;001                 reply->qual[cnt].alias = pa.alias
                 reply->qual[cnt].alias = cnvtalias(pa.alias, pa.alias_pool_cd)    ;001
call echo(q_cnt, 0)
call echo(" = ", 0)
call echo(reply->qual[q_cnt].alias, 0)
call echo("  ", 0)
call echo(reply->qual[q_cnt].person_id, 1)
              endif
            ;*** If maximum requested reached, save last record
               if (q_cnt = context->maxqual)
                 context->person_id = pa.person_id
               endif
            ;*** Additional data exists
               if (q_cnt > context->maxqual)
                 context->updt_cnt = context->updt_cnt + 1
                 reply->context_more_data = "T"
                 q_cnt = q_cnt - 1
               endif

            with 
               nocounter,
               maxqual(p, value(context->maxqual + 1))


            select into "nl:"
               d.seq,
               p.person_id
            from
                (dummyt d with seq = value(q_cnt)),
                person p
             plan    d
             join    p  where p.person_id = reply->qual[d.seq].person_id
             head report
                cnt = 0
             detail         
                cnt = d.seq,
                reply->qual[cnt].name_last_key = p.name_last_key
                reply->qual[cnt].name_first_key = p.name_first_key
                reply->qual[cnt].name_full_formatted = p.name_full_formatted
                reply->qual[cnt].birth_dt_tm = p.birth_dt_tm
                reply->qual[cnt].sex_cd = p.sex_cd
            ;*** If maximum requested reached, save last record
               if (cnt = context->maxqual and reply->context_more_data = "T")
                 context->last_name_begin = p.name_last_key
                 context->first_name_begin = p.name_first_key
               endif
             with 
                nocounter

           endif

      /***********************************************************************
      * Resize reply record                                                  *
      ***********************************************************************/
         if (q_cnt > 0)
            set reply->status_data.status = "S"    ;Successful
         else
            set reply->status_data.status = "Z"    ;Zero
         endif

      /***********************************************************************
      * If no more data exists, free context record.                         *
      ***********************************************************************/
         if (reply->context_more_data = "F")
            free set context
         endif

      #Exit_Script
         end
         go      

;Generated by GNU enscript 1.6.4.
