 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_instr_accn_queue/glb_get_instr_accn_queue.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       GLB_GET_INSTR_ACCN_QUEUE.PRG
        Object name:            GLB_GET_INSTR_ACCN_QUEUE
        Request #:

        Product:                General Lab
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Retrieve service_resource_cd from
				instr_accn_queue and determine
				whether or not to purge table

        Tables read:            instr_accn_queue

        Tables updated:         n/a
        Executing from:         General Lab accession audit application(s)

        Special Notes:          n/a

******************************************************************************/


;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 06/04/98 Gary Runde           Initial Release                     *
;     001 09/11/02 Mark Brooks          Added service resource security     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

	drop program glb_get_instr_accn_queue:dba go
	create program glb_get_instr_accn_queue:dba

%i cclsource:pcs_resource_security.inc                                 ;001

/*
	record request
	(
	   1  service_resource_cd	= F8
	)
*/

	record reply
	(
	   1  ser_res_cd[*]
	      2  service_resource_cd	= F8
	      2  service_resource_disp	= VC
	      2  accns[*]
     	          3  sequence		= F8
	    	  3  accession		= VC
		  3  in_process_prsnl_disp = VC
	          3  in_process_dt_tm	= DQ8
	          3  qc_group_id	 = F8
	          3  perf_dt_tm		= DQ8
%i cclsource:status_block.inc
	)

/* Variable initialization */

    set reply->status_data->status = "F"
	set o_src	= 0
	set a_src	= 0
    declare dServiceResourceCd = f8 with protect, noconstant(0.0)   ;001
    declare nResSecCheckInd = i2 with protect, noconstant(0)        ;001

    if (request->service_resource_cd = 0)                           ;001
        call InitResourceSecurity(1)                                ;001
    else                                                            ;001
        call InitResourceSecurity(0)                                ;001
    endif                                                           ;001

/*retrieve the Time-Out Value first*/
    select into "nl:"
        iaq.sequence
    from
        instr_accn_queue iaq
    where
        iaq.service_resource_cd = 0.0
    head report
    	o_src = 0
    head iaq.service_resource_cd
        dServiceResourceCd = iaq.service_resource_cd                 ;001
        if (IsResourceViewable(dServiceResourceCd))                  ;001
            nResSecCheckInd = 1
            o_src = o_src + 1
            if (mod(o_src,10) = 1)
                stat = alterlist(reply->ser_res_cd, (o_src + 10))
            endif
            reply->ser_res_cd[o_src].service_resource_cd = iaq.service_resource_cd
        endif                                                         ;001
        a_src = 0
    detail
        If (nResSecCheckInd = 1)                                      ;001
	        a_src = a_src + 1
            if (mod(a_src,10) = 1)
                stat = alterlist(reply->ser_res_cd[o_src].accns, (a_src + 10))
            endif
            reply->ser_res_cd[o_src].accns[a_src].sequence = iaq.sequence
            reply->ser_res_cd[o_src].accns[a_src].accession = iaq.accession
        endif                                                         ;001
    foot iaq.service_resource_cd
        stat = alterlist(reply->ser_res_cd[o_src].accns, a_src)
        nResSecCheckInd = 0                                           ;001

    with nocounter

/*retrieve all of the information in the instr_accn_queue pertaining to the
  service_resource_cd obtained from the request*/

    select into "nl:"
	   iaq.service_resource_cd,
	   iaq.sequence,
	   iaq.accession,
	   iaq.in_process_prsnl_id,
	   iaq.in_process_dt_tm,
	   iaq.qc_group_id,
	   iaq.perf_dt_tm,
	   p.name_full_formatted
    from
	   instr_accn_queue iaq,
	   prsnl p
    plan iaq where
        iaq.service_resource_cd = request->service_resource_cd
	    or (request->service_resource_cd = 0.0
	    and iaq.service_resource_cd > 0.0)
    join p where p.person_id = iaq.in_process_prsnl_id
    order
	   iaq.service_resource_cd,
	   iaq.sequence

    head iaq.service_resource_cd
        dServiceResourceCd = iaq.service_resource_cd                ;001
        if (IsResourceViewable(dServiceResourceCd) = True)          ;001
            nResSecCheckInd = 1                                     ;001
            o_src = o_src + 1
            if (mod(o_src,10) = 1)
                stat = alterlist(reply->ser_res_cd, (o_src + 10))
            endif
            reply->ser_res_cd[o_src].service_resource_cd = iaq.service_resource_cd
        endif                                                       ;001

        a_src = 0
    detail
        if (nResSecCheckInd = 1)                                    ;001
            a_src = a_src + 1
            if (mod(a_src,10) = 1)
                stat = alterlist(reply->ser_res_cd[o_src].accns, (a_src + 10))
            endif
            reply->ser_res_cd[o_src].accns[a_src].sequence = iaq.sequence
            reply->ser_res_cd[o_src].accns[a_src].accession = iaq.accession
            reply->ser_res_cd[o_src].accns[a_src].in_process_prsnl_disp
                    = p.name_full_formatted
            reply->ser_res_cd[o_src].accns[a_src].in_process_dt_tm = iaq.in_process_dt_tm
            reply->ser_res_cd[o_src].accns[a_src].qc_group_id = iaq.qc_group_id
            reply->ser_res_cd[o_src].accns[a_src].perf_dt_tm = iaq.perf_dt_tm
        endif                                                       ;001
    foot iaq.service_resource_cd
        if (nResSecCheckInd = 1)                                    ;001
            stat = alterlist(reply->ser_res_cd[o_src].accns, a_src)
        endif                                                       ;001
        nResSecCheckInd = 0                                         ;001

    with nocounter

    set stat = alterlist(reply->ser_res_cd, o_src)

/* If no record matching, exit with return
   status of "F". */

    if (curqual = 0)
        set reply->status_data->status = "Z"
        go to EXIT_PROGRAM
    endif

    set reply->status_data->status = "S"

#EXIT_PROGRAM
    if ((reply->status_data->status != "F") and
          (GetResourceSecurityStatus(0) != "S"))                         ;001
        call PopulateResSecStatusBlock(0)                                ;001
        set reply->status_data->status = GetResourceSecurityStatus(0)    ;001
    endif

    end go

;Generated by GNU enscript 1.6.4.
