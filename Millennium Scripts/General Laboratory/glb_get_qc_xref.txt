 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_qc_xref/glb_get_qc_xref.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_qc_xref.prg
        Object name:            glb_get_qc_xref
        Request #:              257540

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Retrieve all cross reference identifiers
                                for quality control.

        Tables read:            resource_accession_r

        Tables updated:         None
        Executing from:         MDI_result_inserver

        Special Notes:          

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 12/16/96 Kevin Brunner        Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_QC_XREF:dba go    
             create program GLB_GET_QC_XREF:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (

      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
         1  resource_list[5]
            2  service_resource_cd       = f8
            2  qc_list[*]
               3  accession_id           = f8
               3  instr_xref             = c20
               3  preactive_ind          = i2

%i cclsource:status_block.inc
      )
      
      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         set failed = "F"
         set resource_cnt = 0
         set qc_xref_cnt = 0
         set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
         set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

      /***********************************************************************
      * Select all resource accession xref                                   *
      ***********************************************************************/
      select into "nl:"
        rar.accession_id,
        rar.service_resource_cd,
        rar.instr_xref,
        rar.preactive_ind,
        cv.code_value,
        cv.cdf_meaning
      from
        resource_accession_r rar,
        code_value cv
      plan cv
        where cv.code_set = 221 ;cv.code_value = rar.service_resource_cd
          and cv.cdf_meaning = "INSTRUMENT"
      join rar
        where cv.code_value = rar.service_resource_cd
      order
        rar.service_resource_cd

      head rar.service_resource_cd
        resource_cnt = resource_cnt + 1
        qc_xref_cnt = 0
        if (mod(resource_cnt,5) = 0)
          stat = alter(reply->resource_list, resource_cnt + 5)
        endif
        reply->resource_list[resource_cnt].service_resource_cd =
               rar.service_resource_cd
      detail
        qc_xref_cnt = qc_xref_cnt + 1
        if (mod(qc_xref_cnt,5) = 1)
          stat = alterlist(reply->resource_list[resource_cnt].qc_list, qc_xref_cnt + 5)
        endif
        reply->resource_list[resource_cnt].qc_list[qc_xref_cnt].accession_id =
               rar.accession_id
        reply->resource_list[resource_cnt].qc_list[qc_xref_cnt].preactive_ind =
               rar.preactive_ind
        reply->resource_list[resource_cnt].qc_list[qc_xref_cnt].instr_xref =
               rar.instr_xref
      foot rar.service_resource_cd
        stat = alterlist(reply->resource_list[resource_cnt].qc_list, qc_xref_cnt)

      with
        nocounter

      set error_check = ERROR(sErrorMsg,0)   ;get error message
      if (error_check != 0)
        set reply->status_data->status = "F"
        set stat = alter(reply->resource_list, 1)
        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
        go to exit_script
      endif

      if (curqual = 0)
         set reply->status_data->status = "Z"
         set stat = alter(reply->resource_list, 1)
         go to exit_script
      else
         set reply->status_data->status = "S"
         set stat = alter(reply->resource_list, resource_cnt)
      endif

     /******************************************************************** 
     * Script exit.                                                      *
     *********************************************************************/
     #exit_script

end go

;Generated by GNU enscript 1.6.4.
