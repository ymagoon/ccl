 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_wklst_grp/glb_add_wklst_grp.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1999 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_ADD_WKLST_GRP.PRG
        Object name:            GLB_ADD_WKLST_GRP
        Request #:              250057

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Insert a new worklist group

        Tables read:            n/a

        Tables updated:         worklist_ref
                                worklist_group

        Executing from:         General Lab worklist application
                                General Lab database building tool

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 01/30/95 Dennis Boyer         Initial Release                     *
;    *001 05/25/99 Hal Patchen          Add active_ind logic                *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_ADD_WKLST_GRP:dba go    
      create program GLB_ADD_WKLST_GRP:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                                       
         1 worklist_grp_id           = f8      ;Not used
         1 display                   = c20
         1 display_key               = c20
         1 worklists[x]
           2 worklist_ref_id         = f8
      ) 
*/
/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      ( 
         1 worklist_grp_id         = f8
;001         1 status_data
;001           2 status                = c1
;001           2 subeventstatus[1]
;001             3 OperationName       = c15
;001             3 OperationStatus     = c1
;001             3 TargetObjectName    = c15
;001             3 TargetObjectValue   = vc
%i cclsource:status_block.inc                                          ;001
      )

     #Script
      set failed = "F"
      declare wklst_grp_id = f8 with protect, noconstant(0.0)
;001      set update_task = 250057
      set wklst_cnt = size(request->worklists,5)
      set reply->status_data->status = "F"
      SET displaykey = cnvtupper(cnvtalphanum(request->display_key))

/*******************************************************************/
/* Get new worklist group id.                                      */
/*******************************************************************/
      SELECT 
         into "nl:"
            y = seq(reference_seq,nextval)
      FROM 
         dual
      DETAIL
         wklst_grp_id = y
      WITH
         format, counter
      if (curqual = 0)
         go to seq_failed
      endif

/*******************************************************************/
/* Insert row into worklist_ref table.                             */
/*******************************************************************/

      INSERT
         into worklist_ref w
      SET
         w.worklist_ref_id     = wklst_grp_id,
         w.service_resource_cd = 0.0,                                  ;001
         w.display             = request->display,
;         w.display_key         = request->display_key,
         w.display_key         = displaykey,
         w.parent_ind          = 1,
         w.active_ind          = 1,                                    ;001
         w.active_status_cd    = reqdata->active_status_cd,            ;001
         w.active_status_dt_tm = cnvtdatetime(curdate, curtime3),      ;001
         w.active_status_prsnl_id = reqinfo->updt_id,                  ;001
;001         w.updt_dt_tm          = cnvtdatetime(curdate,curtime),
         w.updt_dt_tm          = cnvtdatetime(curdate,curtime3),       ;001
         w.updt_task           = reqinfo->updt_task,
         w.updt_cnt            = 0,
         w.updt_id             = reqinfo->updt_id,
         w.updt_applctx        = reqinfo->updt_applctx
      WITH
         nocounter
     
      if (curqual = 0)
         go to w_insert_failed
      endif     

/*******************************************************************/
/* Insert worklist group rows into worklist_group table.           */
/*******************************************************************/
      INSERT
         into worklist_group wg,
              (dummyt d1 with seq = value(wklst_cnt))
      SET
         wg.seq = 1,
         wg.child_worklist_ref_id = request->worklists[d1.seq]->worklist_ref_id,
         wg.parent_worklist_ref_id = wklst_grp_id,
         wg.active_ind   = 1,                                          ;001
         wg.active_status_cd = reqdata->active_status_cd,              ;001
         wg.active_status_dt_tm = cnvtdatetime(curdate, curtime3),     ;001
         wg.active_status_prsnl_id = reqinfo->updt_id,                 ;001
;001         wg.updt_dt_tm             = cnvtdatetime(curdate,curtime),
         wg.updt_dt_tm             = cnvtdatetime(curdate,curtime3),   ;001
         wg.updt_task              = reqinfo->updt_task,
         wg.updt_cnt               = 0,
         wg.updt_id                = reqinfo->updt_id,
         wg.updt_applctx           = reqinfo->updt_applctx
      PLAN d1
      JOIN wg 
         where wg.child_worklist_ref_id = 
               request->worklists[d1.seq]->worklist_ref_id
      WITH
         nocounter,
         outerjoin = d1,
         dontexist

      if (curqual = 0)
         go to wg_insert_failed
      endif

      go to exit_script

/********************************************************************/ 
/* Executed if worklist sequence cannot be obtained.                */
/********************************************************************/
     #seq_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "seq"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "sequence"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Executed if worklist_ref table insert is unsuccessful.           */
/********************************************************************/
     #w_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_ref table"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Executed if worklist_group table insert is unsuccessful.         */
/********************************************************************/
     #wg_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_group table"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
         set reply->worklist_grp_id = wklst_grp_id
;001         commit
         set reqinfo->commit_ind = 1                                   ;001
      else
;001         rollback
         set reqinfo->commit_ind = 0                                   ;001
      endif
END
GO     

;Generated by GNU enscript 1.6.4.
