 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_dif_format/glb_get_dif_format.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_DIF_FORMAT.PRG
        Object name:            GLB_GET_DIF_FORMAT
        Request #:              250082

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Get differential count format information
                                from the database

        Tables read:            n/a

        Tables updated:         differential_ref
                                differential_ref_assay
                                discrete_task_assay
                                equation

        Executing from:         General Lab build/maintain differential

        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     500 05/08/96 Newton Hughes        Initial Release                     *
;     001 10/13/97 Jeff Fry             Return auto_correct_verf_ind        *
;     002 11/24/97 Jeff Fry             Return non_total_trigger_ind        *
;     003 01/04/02 Sasi Gandham         Added Fields to Order By            *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program glb_get_dif_format:dba go
      create program glb_get_dif_format:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request
      (
        1 dif_ref_id = f8
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      ( 
        1 catalog_cd                    = f8
        1 opt                           = c20
        1 opt_key                       = c20
        1 default_count                 = i4
        1 normalize_ind                 = i2
        1 subtract_key                  = c1
        1 auto_correct_ind              = i2
        1 auto_correct_value            = f8 
        1 auto_correct_mnemonic         = vc
        1 auto_correct_assay_cd         = f8
        1 auto_correct_comment_ind      = i2
        1 auto_correct_comment          = vc
        1 auto_correct_verf_ind         = i2                            ;001
        1 calculation_mnemonic          = vc
        1 calculation_assay_cd          = f8
        1 instr_label                   = c30
        1 count_label                   = c30
        1 morph_label                   = c30
        1 updt_cnt                      = f8
        1 nbr_assays                    = i4
        1 assays[5]
          2 task_assay_cd               = f8
          2 mnemonic                    = vc
          2 display_name                = c10
          2 proc_type_flag              = i2
          2 position_seq                = i4
          2 count_key                   = c1
          2 zero_ind                    = i2
          2 non_total_ind               = i2
          2 non_total_trigger_ind       = i2                            ;002
          2 updt_cnt                    = f8
%i cclsource:status_block.inc
      )

#SCRIPT
      SET reply->status_data->status = "F"
      SET assay_cnt = 0

      SELECT INTO "nl:"
          dr.dif_ref_id,
          dr.auto_correct_assay_cd,
          dta.mnemonic,
          dta_rec = decode(dta.seq,"Y","N"),
          dra_rec = decode(dra.position_seq,"Y","N"),
          dra.task_assay_cd,
          dta2.mnemonic
      from differential_ref dr,
          discrete_task_assay dta,
          (dummyt d1 with seq = 1),
          differential_ref_assay dra,
          (dummyt d2 with seq = 1),
          discrete_task_assay dta2

      plan dr where dr.dif_ref_id = request->dif_ref_id
      join d1 where d1.seq = 1
      join dta where dta.task_assay_cd = dr.auto_correct_assay_cd
      join d2 where d2.seq = 1
      join dra where dra.dif_ref_id = dr.dif_ref_id
      join dta2 where dta2.task_assay_cd = dra.task_assay_cd
     
 Order by dr.dif_ref_id, dra.position_seq

      HEAD dr.dif_ref_id

        reply->catalog_cd = dr.catalog_cd
        reply->opt = dr.opt
        reply->opt_key = dr.opt_key
        reply->default_count = dr.default_count
        reply->normalize_ind = dr.normalize_ind
        reply->subtract_key = dr.subtract_key
        reply->auto_correct_ind = dr.auto_correct_ind
        reply->auto_correct_value = dr.auto_correct_value
        reply->auto_correct_comment_ind = dr.auto_crct_cmt_ind
        reply->auto_correct_comment = dr.auto_crct_cmt
        if (dta_rec = "Y")
            reply->auto_correct_assay_cd = dr.auto_correct_assay_cd
            reply->auto_correct_mnemonic = dta.mnemonic
        endif
        reply->auto_correct_verf_ind = dr.auto_correct_verf_ind         ;001
        reply->instr_label = dr.instr_label
        reply->count_label = dr.count_label
        reply->morph_label = dr.morph_label
        reply->updt_cnt = dr.updt_cnt

      DETAIL

        assay_cnt = assay_cnt + 1
        IF (mod(assay_cnt, 5) = 1 and assay_cnt != 1)
          stat = alter(reply->assays, assay_cnt + 5)
        ENDIF

        reply->nbr_assays = assay_cnt
        reply->assays[assay_cnt]->mnemonic = dta2.mnemonic        
        if (dra_rec = "Y")
	        reply->assays[assay_cnt]->task_assay_cd =dra.task_assay_cd
	        reply->assays[assay_cnt]->display_name = dra.display_name
	        reply->assays[assay_cnt]->proc_type_flag = dra.proc_type_flag
	        reply->assays[assay_cnt]->position_seq = dra.position_seq
	        reply->assays[assay_cnt]->count_key = dra.count_key
	        reply->assays[assay_cnt]->zero_ind = dra.zero_ind
	        reply->assays[assay_cnt]->non_total_ind = dra.non_total_ind
	        reply->assays[assay_cnt]->non_total_trigger_ind =               ;002
	                dra.non_total_trigger_ind                               ;002
	        reply->assays[assay_cnt]->updt_cnt = dra.updt_cnt
      	endif

      WITH outerjoin = d1,
           dontcare = dta,
           outerjoin = d2,
           nocounter

      IF (curqual = 0)
        SET reply->status_data->status = "Z"
      ELSE
        SET reply->status_data->status = "S"
      ENDIF
      

      END GO

;Generated by GNU enscript 1.6.4.
