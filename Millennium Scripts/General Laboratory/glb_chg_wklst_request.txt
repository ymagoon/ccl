 ;;Solution_Test/script/PathNet -- Gen Lab/glb_chg_wklst_request/glb_chg_wklst_request.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-2000 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       GLB_CHG_WKLST_REQUEST.PRG
        Object name:            GLB_CHG_WKLST_REQUEST
        Request #:              250050

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Change a worklist request template

        Tables read:            worklist_group
                                worklist_ref
                                worklist_ref_procedure
                                worklist_ref_priority
                                worklist_ref_qc

        Tables updated:         worklist_group
                                worklist_ref
                                worklist_ref_procedure
                                worklist_ref_priority
                                worklist_ref_qc
                                worklist_ref_pos

        Executing from:         General Lab worklist application
                                General Lab database building tool

        Special Notes:          n/a

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *001 12/20/95 Dennis Boyer         Initial Release                     *
;    *002 04/19/06 SC012605             Add Position insert and new fields. *
;                                       And removed validate logic and      *
;                                       outerjoin logic on inserts.         *
;    *003 02/23/07 Abraham Areguy       Added new fields for GLB: Worklist Sequence Project*
;    *004 04/23/07 Paul Lessin          Populate cust_download_script_cd col*
;    *005 04/17/08 Oliver Barbara       Added client_alias field update     *
;    *006 07/28/08 Rahul Deshmukh       Added interp_text_ind field update  *
;    *007 12/02/08 Oliver Barbara       Added serv_res_sort_ind field update*
;    *008 07/23/10 Ryan Manuel          Added automatic worklist parameters *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_CHG_WKLST_REQUEST:dba go    
      create program GLB_CHG_WKLST_REQUEST:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (   
                                  
         1 worklist_ref_id         = f8
         1 service_resource_cd     = f8
         1 display                 = c20
         1 display_key             = c20
         1 parent_ind              = i2
         1 cumulative_ind          = i2
         1 in_lab_ind              = i2
         1 spacing_ind             = i2
         1 include_flag            = i2
         1 result_space_ind        = i2
         1 previous_result_ind     = i2
         1 look_ahead_hours        = i4
         1 printer                 = c20
         1 blank_lines             = i4
         1 copies                  = i4
         1 report_format_ind       = i2
         1 procedure_inc_flag      = i2
         1 priority_ind            = i2
         1 cross_resource_ind      = i2
         1 person_comments_ind     = i2                                ;001
         1 order_comments_ind      = i2                                ;001
         1 result_comments_ind     = i2                                ;001
         1 visit_reason_ind        = i2                                ;001
         1 order_status_ind        = i2                                ;001
         1 reporting_priority_ind  = i2                                ;001
         1 facility_ind            = i2                                ;001
         1 nurse_unit_ind          = i2                                ;001
         1 landscape_ind           = i2                                ;001
         1 procedures[x]
           2 catalog_cd            = f8
           2 task_assay_cd         = f8
         1 priorities[x]
           2 priority_cd           = f8
         1 qc_accns[x]                                                 ;001
           2 accession_id          = f8                                ;001
           2 pos                   = i4                                ;001
           2 begin_ind             = i2                                ;001
           2 end_ind               = i2                                ;001
           2 interval_ind          = i2                                ;001
           2 interval              = i4                                ;001
         1 auto_assign_ind			= i2
         1 fin_ind					= i2
         1 mrn_ind					= i2
         1 age_ind					= i2
         1 sex_ind					= i2
         1 race_ind					= i2
         1 room_bed_ind				= i2
         1 specimen_type_ind		= i2
         1 text_freetext_ind		= i2
         1 collect_dt_tm_ind		= i2
         1 ordering_physician_ind	= i2
         1 manual_download_ind		= i2
         1 file_def_cd				= f8
         1 output_dest_cd			= f8
         1 template_ind				= i2
         1 max_cols_cnt				= i4
         1 max_rows_cnt				= i4
         1 row_alpha_ind			= i2
         1 col_alpha_ind			= i2
         1 fill_first_flag			= i2
         1 left_right_flag			= i2
         1 back_front_flag			= i2
         1 zig_zag_ind				= i2
         1 positions_per_specimen	= i4
         1 position_qual[*]
           2 accession_id			= f8
           2 dilution_cd			= f8
           2 dilution_disp			= c40
           2 sequence_nbr			= i4
           2 position_display_txt	= vc
           2 numeric_position_txt	= vc
         1 accn_seq_ind             = i2
         1 print_seq_left_ind       = i2  
         1 cust_download_script_cd  = f8
         1 client_alias_ind         = i2
         1 interp_text_ind          = i2
         1 serv_res_sort_ind        = i2
         1 qc_ranges_ind            = i2
         1 filter_qc_assays_ind     = i2
         1 automatic_worklist_ind   = i2
         1 automatic_worklist_type_cd = f8
         1 automatic_max_accn_cnt   = i4
      ) 
*/
/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/
	  free set reply
      record reply
      (
         1 worklist_ref_id         = f8                                ;001
%i cclsource:status_block.inc                                          ;001
      )

/********************************************************************/ ;001
/*  Internal Record                                                 */ ;001
/********************************************************************/ ;001
	  free set internal
      record internal                                                  ;001
      (                                                                ;001
         1 qual[*]                                                     ;001
           2 parent_worklist_ref_id    = f8                            ;001
      )                                                                ;001

/********************************************************************/ ;001
/*  Script                                                          */ ;001
/********************************************************************/ ;001
     #Script
      set failed = "F"
      set wklst_ref_id = 0.0                                           ;001
      set cnt = 0                                                      ;001
      set proc_cnt = size(request->procedures,5)
      set pri_cnt = size(request->priorities,5)
      if (validate(request->qc_accns[1].accession_id, -1) = -1)        ;001
         set accn_cnt = 0                                              ;001
      else                                                             ;001
         set accn_cnt = size(request->qc_accns, 5)                     ;001
      endif                                                            ;001
      set q_cnt = 0                                                    ;001
      set reply->status_data->status = "F"

/*******************************************************************/
/* Select row in worklist_ref table for update.                    */
/*******************************************************************/
      SELECT into "nl:"
         w.*
      FROM
         worklist_ref w
      WHERE
         w.worklist_ref_id = request->worklist_ref_id
      WITH
         nocounter,
         forupdate(w)

      if (curqual = 0)
         go to w_select_failed
      endif

/*******************************************************************/
/* Update row in worklist_ref table.                               */
/*******************************************************************/
      update into                                                      ;001
         worklist_ref wr                                               ;001
      set                                                              ;001
         wr.active_ind            = 0                                  ;001
        ,wr.active_status_cd      = reqdata->inactive_status_cd        ;001
        ,wr.updt_dt_tm            = cnvtdatetime(curdate,curtime3)     ;001
        ,wr.updt_task             = reqinfo->updt_task                 ;001
        ,wr.updt_id               = reqinfo->updt_id                   ;001
        ,wr.updt_cnt              = wr.updt_cnt + 1                    ;001
        ,wr.updt_applctx          = reqinfo->updt_applctx              ;001
      where wr.worklist_ref_id = request->worklist_ref_id              ;001
      with                                                             ;001
         nocounter                                                     ;001

      if (curqual = 0)
         go to w_update_failed
      endif     
/*******************************************************************/  ;001
/* Get new worklist reference code.                                */  ;001
/*******************************************************************/  ;001
      select into "nl:"                                                ;001
         y = seq(reference_seq,nextval) "##################;rp0"       ;001
      from                                                             ;001
         dual                                                          ;001
      detail                                                           ;001
         wklst_ref_id = cnvtreal(y)                                     ;001
         reply->worklist_ref_id = wklst_ref_id                         ;001
      with                                                             ;001
         counter                                                       ;001
        ,format                                                        ;001
                                                                       ;001
      if (curqual = 0)                                                 ;001
         go to seq_failed                                              ;001
      endif                                                            ;001
                                                                       ;001
      set displaykey = cnvtupper(cnvtalphanum(request->display_key))   ;001
                                                                       ;001
/*******************************************************************/  ;001
/* Insert row into worklist_ref table.                             */  ;001
/*******************************************************************/  ;001
      insert into                                                      ;001
         worklist_ref wr                                               ;001
      set                                                              ;001
         wr.worklist_ref_id       = wklst_ref_id                       ;001
        ,wr.service_resource_cd   = request->service_resource_cd
        ,wr.display               = request->display                   ;001
        ,wr.display_key           = displaykey                         ;001
        ,wr.parent_ind            = request->parent_ind                ;001
        ,wr.cumulative_ind        = request->cumulative_ind            ;001
        ,wr.in_lab_ind            = request->in_lab_ind                ;001
        ,wr.spacing_ind           = request->spacing_ind               ;001
        ,wr.include_flag          = request->include_flag              ;001
        ,wr.result_space_ind      = request->result_space_ind          ;001
        ,wr.previous_result_ind   = request->previous_result_ind       ;001
        ,wr.look_ahead_hours      = request->look_ahead_hours          ;001
        ,wr.printer               = request->printer                   ;001
        ,wr.blank_lines           = request->blank_lines               ;001
        ,wr.copies                = request->copies                    ;001
        ,wr.report_format_ind     = request->report_format_ind         ;001
        ,wr.procedure_inc_flag    = request->procedure_inc_flag        ;001
        ,wr.priority_ind          = request->priority_ind              ;001
        ,wr.cross_resource_ind    = request->cross_resource_ind        ;001
        ,wr.person_comments_ind   = request->person_comments_ind
        ,wr.order_comments_ind    = request->order_comments_ind
        ,wr.result_comments_ind   = request->result_comments_ind
        ,wr.visit_reason_ind      = request->visit_reason_ind
        ,wr.order_status_ind      = request->order_status_ind
        ,wr.reporting_priority_ind = request->reporting_priority_ind
        ,wr.facility_ind          = request->facility_ind
        ,wr.nurse_unit_ind        = request->nurse_unit_ind
        ,wr.landscape_ind         = request->landscape_ind
        ,wr.active_ind            = 1                                  ;001
        ,wr.active_status_cd      = reqdata->active_status_cd          ;001
        ,wr.active_status_dt_tm   = cnvtdatetime(curdate, curtime3)    ;001
        ,wr.active_status_prsnl_id = reqinfo->updt_id                  ;001
        ,wr.updt_dt_tm            = cnvtdatetime(curdate,curtime3)     ;001
        ,wr.updt_task             = reqinfo->updt_task                 ;001
        ,wr.updt_cnt              = 0                                  ;001
        ,wr.updt_id               = reqinfo->updt_id                   ;001
        ,wr.updt_applctx          = reqinfo->updt_applctx
        ,wr.auto_assign_ind       = request->auto_assign_ind
        ,wr.fin_ind               = request->fin_ind
        ,wr.mrn_ind               = request->mrn_ind
        ,wr.age_ind               = request->age_ind
        ,wr.sex_ind               = request->sex_ind
        ,wr.race_ind              = request->race_ind
        ,wr.specimen_type_ind     = request->specimen_type_ind
        ,wr.text_freetext_ind     = request->text_freetext_ind
        ,wr.room_bed_ind          = request->room_bed_ind
        ,wr.collect_dt_tm_ind     = request->collect_dt_tm_ind
        ,wr.ordering_physician_ind = request->ordering_physician_ind
        ,wr.manual_download_ind   = request->manual_download_ind
        ,wr.file_def_cd           = request->file_def_cd
        ,wr.output_dest_cd        = request->output_dest_cd
        ,wr.template_ind          = request->template_ind
        ,wr.max_cols_cnt          = request->max_cols_cnt
        ,wr.max_rows_cnt          = request->max_rows_cnt
        ,wr.row_alpha_ind         = request->row_alpha_ind
        ,wr.col_alpha_ind         = request->col_alpha_ind
        ,wr.fill_first_flag       = request->fill_first_flag
        ,wr.left_right_flag       = request->left_right_flag
        ,wr.back_front_flag       = request->back_front_flag
        ,wr.zig_zag_ind           = request->zig_zag_ind
        ,wr.positions_per_specimen_nbr = request->positions_per_specimen
        ,wr.accn_seq_ind          = request->accn_seq_ind
        ,wr.print_seq_left_ind    = request->print_seq_left_ind 
        ,wr.cust_download_script_cd = request->cust_download_script_cd
        ,wr.client_alias_ind      = request->client_alias_ind
        ,wr.interp_text_ind       = request->interp_text_ind
        ,wr.serv_res_sort_ind     = request->serv_res_sort_ind
        ,wr.qc_ranges_ind         = request->qc_ranges_ind
        ,wr.filter_qc_assays_ind  = request->filter_qc_assays_ind
        ,wr.automatic_worklist_ind = request->automatic_worklist_ind
        ,wr.automatic_worklist_type_cd = request->automatic_worklist_type_cd
        ,wr.automatic_max_accn_cnt = request->automatic_max_accn_cnt
      where wr.worklist_ref_id = wklst_ref_id                          ;001
      with                                                             ;001
         nocounter                                                     ;001
                                                                       ;001
      if (curqual = 0)                                                 ;001
         go to w_insert_failed                                         ;001
      endif                                                            ;001

;001/*******************************************************************/
;001/* Delete old rows in worklist_ref_procedure table.                */
;001/*******************************************************************/
;001      DELETE
;001         from worklist_ref_procedure wp
;001      WHERE
;001         wp.worklist_ref_id = request->worklist_ref_id
;001      WITH
;001         nocounter

/*******************************************************************/  ;001
/* Update worklist_ref_procedure table.                            */  ;001
/*******************************************************************/  ;001
      select into "nl:"                                                ;001
         wrp.worklist_ref_id                                           ;001
      from                                                             ;001
         worklist_ref_procedure wrp                                    ;001
      where wrp.worklist_ref_id = request->worklist_ref_id             ;001
      with                                                             ;001
         nocounter                                                     ;001
        ,forupdate(wrp)                                                ;001
                                                                       ;001
      if (curqual > 0)                                                 ;001
         update into                                                   ;001
            worklist_ref_procedure wrp                                 ;001
         set                                                           ;001
            wrp.active_ind        = 0                                  ;001
           ,wrp.active_status_cd  = reqdata->inactive_status_cd        ;001
           ,wrp.updt_dt_tm        = cnvtdatetime(curdate,curtime3)     ;001
           ,wrp.updt_task         = reqinfo->updt_task                 ;001
           ,wrp.updt_id           = reqinfo->updt_id                   ;001
           ,wrp.updt_cnt          = wrp.updt_cnt + 1                   ;001
           ,wrp.updt_applctx      = reqinfo->updt_applctx              ;001
         where wrp.worklist_ref_id = request->worklist_ref_id          ;001
         with nocounter                                                ;001
         if (curqual = 0)                                              ;001
            go to wp_update_failed                                     ;001
         endif                                                         ;001
      endif                                                            ;001

/*******************************************************************/
/* Insert new rows into worklist_ref_procedure table.              */
/*******************************************************************/

      IF (request->procedure_inc_flag != 0)
        INSERT INTO
          worklist_ref_procedure wp
          , (dummyt d1 with seq = value(proc_cnt))
        SET
          wp.seq             = 1,
          wp.worklist_ref_id = wklst_ref_id,                           ;001
          wp.catalog_cd      = request->procedures[d1.seq]->catalog_cd,
          wp.task_assay_cd   = request->procedures[d1.seq]->task_assay_cd,
          wp.active_ind      = 1,                                      ;001
          wp.active_status_cd = reqdata->active_status_cd,             ;001
          wp.active_status_dt_tm = cnvtdatetime(curdate, curtime3),    ;001
          wp.active_status_prsnl_id = reqinfo->updt_id,                ;001
          wp.updt_dt_tm = cnvtdatetime(curdate,curtime3),              ;001
          wp.updt_task       = reqinfo->updt_task,
          wp.updt_id         = reqinfo->updt_id,
          wp.updt_cnt        = 0,
          wp.updt_applctx    = reqinfo->updt_applctx
        PLAN d1
        JOIN wp 
          where wp.worklist_ref_id = wklst_ref_id
        WITH
          nocounter

        if (curqual = 0)
          go to wp_insert_failed
        endif
      ENDIF
;001
;001/*******************************************************************/
;001/* Delete old rows in worklist_ref_priority table.                 */
;001/*******************************************************************/
;001      DELETE
;001         from worklist_ref_priority wpr
;001      WHERE
;001         wpr.worklist_ref_id = request->worklist_ref_id
;001      WITH
;001         nocounter
;001
;001/* It's hard to tell whether the delete failed or if no records were
;001   deleted because the worklist previously included all priorities, so
;001   there were no records there to delete. */
;001
/*******************************************************************/  ;001
/* Update worklist_ref_priority table.                             */  ;001
/*******************************************************************/  ;001
      select into "nl:"                                                ;001
         wrp.worklist_ref_id                                           ;001
      from                                                             ;001
         worklist_ref_priority wrp                                     ;001
      where wrp.worklist_ref_id = request->worklist_ref_id             ;001
      with                                                             ;001
         nocounter                                                     ;001
        ,forupdate(wrp)                                                ;001
                                                                       ;001
      if (curqual > 0)                                                 ;001
         update into                                                   ;001
            worklist_ref_priority wrp                                  ;001
         set                                                           ;001
            wrp.active_ind        = 0                                  ;001
           ,wrp.active_status_cd  = reqdata->inactive_status_cd        ;001
           ,wrp.updt_dt_tm        = cnvtdatetime(curdate,curtime3)     ;001
           ,wrp.updt_task         = reqinfo->updt_task                 ;001
           ,wrp.updt_id           = reqinfo->updt_id                   ;001
           ,wrp.updt_cnt          = wrp.updt_cnt + 1                   ;001
           ,wrp.updt_applctx      = reqinfo->updt_applctx              ;001
         where wrp.worklist_ref_id = request->worklist_ref_id          ;001
         with nocounter                                                ;001
         if (curqual = 0)                                              ;001
            go to wpr_update_failed                                    ;001
         endif                                                         ;001
      endif                                                            ;001

/*******************************************************************/
/* Insert new rows into worklist_ref_priority table.               */
/*******************************************************************/
      IF (request->priority_ind = 1)
        INSERT INTO
          worklist_ref_priority wpr,
          (dummyt d2 with seq = value(pri_cnt))
        SET
          wpr.seq             = 1,
          wpr.worklist_ref_id = wklst_ref_id,                          ;001
          wpr.priority_cd     = request->priorities[d2.seq]->priority_cd,
          wpr.active_ind      = 1,                                     ;001
          wpr.active_status_cd = reqdata->active_status_cd,            ;001
          wpr.active_status_dt_tm = cnvtdatetime(curdate, curtime3),   ;001
          wpr.active_status_prsnl_id = reqinfo->updt_id,               ;001
          wpr.updt_dt_tm = cnvtdatetime(curdate,curtime3),             ;001
          wpr.updt_task       = reqinfo->updt_task,
          wpr.updt_id         = reqinfo->updt_id,
          wpr.updt_cnt        = 0,
          wpr.updt_applctx    = reqinfo->updt_applctx
        PLAN d2
        JOIN wpr
          where wpr.worklist_ref_id = wklst_ref_id
        WITH
          nocounter

        if (curqual = 0)
          go to wpr_insert_failed
        endif
      ENDIF

/*******************************************************************/  ;001
/* Update worklist_ref_qc table.                                   */  ;001
/*******************************************************************/  ;001
      select into "nl:"                                                ;001
         wrq.worklist_ref_id                                           ;001
      from                                                             ;001
         worklist_ref_qc wrq                                           ;001
      where wrq.worklist_ref_id = request->worklist_ref_id             ;001
      with                                                             ;001
         nocounter                                                     ;001
        ,forupdate(wrq)                                                ;001
                                                                       ;001
      if (curqual > 0)                                                 ;001
         update into                                                   ;001
            worklist_ref_qc wrq                                        ;001
         set                                                           ;001
            wrq.active_ind        = 0                                  ;001
           ,wrq.active_status_cd  = reqdata->inactive_status_cd        ;001
           ,wrq.updt_dt_tm        = cnvtdatetime(curdate,curtime3)     ;001
           ,wrq.updt_task         = reqinfo->updt_task                 ;001
           ,wrq.updt_id           = reqinfo->updt_id                   ;001
           ,wrq.updt_cnt          = wrq.updt_cnt + 1                   ;001
           ,wrq.updt_applctx      = reqinfo->updt_applctx              ;001
         where wrq.worklist_ref_id = request->worklist_ref_id          ;001
         with nocounter                                                ;001
         if (curqual = 0)                                              ;001
            go to wrq_update_failed                                    ;001
         endif                                                         ;001
      endif                                                            ;001

/*******************************************************************/  ;001
/* Insert new rows into worklist_ref_qc table.                     */  ;001
/*******************************************************************/  ;001
      if (accn_cnt > 0 and
          request->include_flag != 0)                                  ;001
         insert into                                                   ;001
            (dummyt d with seq = value(accn_cnt))                      ;001
           ,worklist_ref_qc wrq                                        ;001
         set                                                           ;001
            wrq.worklist_ref_id = wklst_ref_id,                        ;001
            wrq.accession_id = request->qc_accns[d.seq].accession_id,  ;001
            wrq.pos = request->qc_accns[d.seq].pos,                    ;001
            wrq.begin_ind = request->qc_accns[d.seq].begin_ind,        ;001
            wrq.end_ind = request->qc_accns[d.seq].end_ind,            ;001
            wrq.interval_ind = request->qc_accns[d.seq].interval_ind,  ;001
            wrq.interval = request->qc_accns[d.seq].interval,          ;001
            wrq.active_ind = 1,                                        ;001
            wrq.active_status_cd = reqdata->active_status_cd,          ;001
            wrq.active_status_dt_tm = cnvtdatetime(curdate, curtime3), ;001
            wrq.active_status_prsnl_id = reqinfo->updt_id,             ;001
            wrq.updt_dt_tm = cnvtdatetime(curdate,curtime3),           ;001
            wrq.updt_task = reqinfo->updt_task,                        ;001
            wrq.updt_id = reqinfo->updt_id,                            ;001
            wrq.updt_applctx = reqinfo->updt_applctx,                  ;001
            wrq.updt_cnt = 0                                           ;001
         plan d                                                        ;001
           where d.seq <= accn_cnt                                     ;001
         join wrq                                                      ;001
           where wrq.worklist_ref_id = wklst_ref_id                    ;001
         with                                                          ;001
            nocounter                                                  ;001
                                                                       ;001
         if (curqual = 0)                                              ;001
            go to wrq_insert_failed                                    ;001
         endif                                                         ;001
      endif                                                            ;001

/*******************************************************************/  ;001
/* Update worklist_group table.                                    */  ;001
/*******************************************************************/  ;001
      select into "nl:"                                                ;001
         wg.parent_worklist_ref_id                                     ;001
      from                                                             ;001
         worklist_group wg                                             ;001
      where wg.child_worklist_ref_id = request->worklist_ref_id        ;001
        and wg.active_ind = 1                                          ;001
      detail                                                           ;001
         q_cnt = q_cnt + 1                                             ;001
         stat = alterlist(internal->qual, q_cnt)                       ;001
         internal->qual[q_cnt].parent_worklist_ref_id =                ;001
           wg.parent_worklist_ref_id                                   ;001
      with                                                             ;001
         nocounter                                                     ;001
        ,forupdate(wg)                                                 ;001
                                                                       ;001
      if (q_cnt > 0)                                                   ;001
         update into                                                   ;001
            (dummyt d with seq = value(q_cnt))                         ;001
           ,worklist_group wg                                          ;001
         set                                                           ;001
            wg.active_ind         = 0                                  ;001
           ,wg.active_status_cd   = reqdata->inactive_status_cd        ;001
           ,wg.updt_dt_tm         = cnvtdatetime(curdate,curtime3)     ;001
           ,wg.updt_task          = reqinfo->updt_task                 ;001
           ,wg.updt_id            = reqinfo->updt_id                   ;001
           ,wg.updt_cnt           = wg.updt_cnt + 1                    ;001
           ,wg.updt_applctx       = reqinfo->updt_applctx              ;001
         plan d                                                        ;001
           where d.seq <= q_cnt                                        ;001
         join wg                                                       ;001
           where wg.child_worklist_ref_id = request->worklist_ref_id   ;001
             and wg.parent_worklist_ref_id =                           ;001
                        internal->qual[d.seq].parent_worklist_ref_id   ;001
         with                                                          ;001
            nocounter                                                  ;001
                                                                       ;001
         insert into                                                   ;001
            (dummyt d with seq = value(q_cnt))                         ;001
           ,worklist_group wg                                          ;001
         set                                                           ;001
            wg.child_worklist_ref_id = wklst_ref_id                    ;001
           ,wg.parent_worklist_ref_id =                                ;001
                   internal->qual[d.seq].parent_worklist_ref_id        ;001
           ,wg.active_ind         = 1                                  ;001
           ,wg.active_status_cd   = reqdata->active_status_cd          ;001
           ,wg.active_status_dt_tm  = cnvtdatetime(curdate, curtime3)  ;001
           ,wg.active_status_prsnl_id = reqinfo->updt_id               ;001
           ,wg.updt_dt_tm         = cnvtdatetime(curdate,curtime3)     ;001
           ,wg.updt_task          = reqinfo->updt_task                 ;001
           ,wg.updt_cnt           = 0                                  ;001
           ,wg.updt_id            = reqinfo->updt_id                   ;001
           ,wg.updt_applctx       = reqinfo->updt_applctx              ;001
         plan d                                                        ;001
           where d.seq <= q_cnt                                        ;001
         join wg                                                       ;001
           where wg.child_worklist_ref_id = wklst_ref_id               ;001
             and wg.parent_worklist_ref_id =                           ;001
                        internal->qual[d.seq].parent_worklist_ref_id   ;001
         with                                                          ;001
            nocounter                                                  ;001
         
      endif                                                            ;001

/*******************************************************************/
/* Update worklist_ref_pos table.                                  */
/*******************************************************************/
      select into "nl:"
         wrp.worklist_ref_id
      from
         worklist_ref_pos wrp
      where wrp.worklist_ref_id = request->worklist_ref_id
      with
         nocounter
        ,forupdate(wrp)

      IF (curqual > 0)
		; if worklist_ref was already on table, just inactivate it and write a new row
         update into
            worklist_ref_pos wrp
         set
         	wrp.active_ind			= 0
    	    ,wrp.updt_dt_tm			= cnvtdatetime(curdate,curtime3)
        	,wrp.updt_task			= reqinfo->updt_task
        	,wrp.updt_id			= reqinfo->updt_id
        	,wrp.updt_cnt			= wrp.updt_cnt + 1
        	,wrp.updt_applctx		= reqinfo->updt_applctx
         where wrp.worklist_ref_id 		= request->worklist_ref_id
         with nocounter

         if (curqual = 0)
            go to wrp_update_failed
         endif
      ENDIF

/*******************************************************************/
/* Insert new rows into worklist_ref_pos table.                    */
/*******************************************************************/
      if (request->template_ind = 1)
         insert into
            (dummyt d with seq = value(size(request->position_qual,5)))
           ,worklist_ref_pos wrp
         set
          wrp.worklist_ref_pos_id   = seq(reference_seq,nextval),
          wrp.worklist_ref_id       = wklst_ref_id,
          wrp.accession_id          = request->position_qual[d.seq].accession_id,
          wrp.dilution_cd           = request->position_qual[d.seq].dilution_cd,
          wrp.position_nbr          = request->position_qual[d.seq].sequence_nbr,
          wrp.position_display_txt  = request->position_qual[d.seq].position_display_txt,
          wrp.numeric_position_txt  = request->position_qual[d.seq].numeric_position_txt,
          wrp.updt_dt_tm            = cnvtdatetime(curdate,curtime3),
          wrp.updt_task             = reqinfo->updt_task,
          wrp.updt_cnt              = 0,
          wrp.updt_id               = reqinfo->updt_id,
          wrp.updt_applctx          = reqinfo->updt_applctx
         plan d
         join wrp
         with
            nocounter

         if (curqual = 0)
            go to wrp_insert_failed
         endif
      endif

      go to exit_script

/********************************************************************/ ;001
/* Executed if worklist sequence cannot be obtained.                */ ;001
/********************************************************************/ ;001
     #seq_failed                                                       ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "seq"                                                         ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "sequence"                                                    ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001
                                                                       ;001
/********************************************************************/ 
/* Executed if worklist_ref table row cannot be found for update.   */
/********************************************************************/
     #w_select_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "select"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_ref table"
      set failed = "T"
      go to exit_script

/********************************************************************/ ;001
/* Executed if worklist_ref table insert is unsuccessful.           */ ;001
/********************************************************************/ ;001
     #w_insert_failed                                                  ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "insert"                                                      ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "worklist_ref table"                                          ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001
                                                                       ;001
/********************************************************************/ 
/* Executed if worklist_ref table update is unsuccessful.           */
/********************************************************************/
     #w_update_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "update"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_ref table"
      set failed = "T"
      go to exit_script

;001/********************************************************************/ 
;001/* Executed if old rows cannot be deleted from                      */
;001/* worklist_ref_procedure table.                                    */
;001/********************************************************************/
;001     #wp_delete_failed
;001      set reply->status_data->subeventstatus[1]->operationname = 
;001         "delete"
;001      set reply->status_data->subeventstatus[1]->operationstatus = 
;001         "F"
;001      set reply->status_data->subeventstatus[1]->targetobjectname = 
;001         "table"
;001      set reply->status_data->subeventstatus[1]->targetObjectValue = 
;001         "worklist_ref_procedure table"
;001      set failed = "T"
;001      go to exit_script

/********************************************************************/ 
/* Executed if worklist_ref_procedure table insert is unsuccessful. */
/********************************************************************/
     #wp_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_ref_procedure table"
      set failed = "T"
      go to exit_script

/********************************************************************/ ;001
/* Executed if worklist_ref_procedure table update is unsuccessful. */ ;001
/********************************************************************/ ;001
     #wp_update_failed                                                 ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "update"                                                      ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "worklist_ref_procedure table"                                ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001

;001/********************************************************************/ 
;001/* Executed if old rows cannot be deleted from                      */
;001/* worklist_ref_priority table.                                     */
;001/********************************************************************/
;001     #wpr_delete_failed
;001      set reply->status_data->subeventstatus[1]->operationname = 
;001         "delete"
;001      set reply->status_data->subeventstatus[1]->operationstatus = 
;001         "F"
;001      set reply->status_data->subeventstatus[1]->targetobjectname = 
;001         "table"
;001      set reply->status_data->subeventstatus[1]->targetObjectValue = 
;001         "worklist_ref_priority table"
;001      set failed = "T"
;001      go to exit_script

/********************************************************************/ 
/* Executed if worklist_ref_priority table insert is unsuccessful.  */
/********************************************************************/
     #wpr_insert_failed
      set reply->status_data->subeventstatus[1]->operationname = 
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus = 
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname = 
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue = 
         "worklist_ref_priority table"
      set failed = "T"
      go to exit_script

/********************************************************************/ ;001
/* Executed if worklist_ref_priority table update is unsuccessful.  */ ;001
/********************************************************************/ ;001
     #wpr_update_failed                                                ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "update"                                                      ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "worklist_ref_priority table"                                 ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001

/********************************************************************/ ;001
/* Executed if worklist_ref_qc table insert is unsuccessful.        */ ;001
/********************************************************************/ ;001
     #wrq_insert_failed                                                ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "insert"                                                      ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "worklist_ref_qc table"                                       ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001

/********************************************************************/ ;001
/* Executed if worklist_ref_qc table update is unsuccessful.        */ ;001
/********************************************************************/ ;001
     #wrq_update_failed                                                ;001
      set reply->status_data->subeventstatus[1]->operationname =       ;001
         "update"                                                      ;001
      set reply->status_data->subeventstatus[1]->operationstatus =     ;001
         "F"                                                           ;001
      set reply->status_data->subeventstatus[1]->targetobjectname =    ;001
         "table"                                                       ;001
      set reply->status_data->subeventstatus[1]->targetObjectValue =   ;001
         "worklist_ref_qc table"                                       ;001
      set failed = "T"                                                 ;001
      go to exit_script                                                ;001

/********************************************************************/
/* Executed if worklist_ref_pos table insert is unsuccessful.       */
/********************************************************************/
     #wrp_insert_failed
      set reply->status_data->subeventstatus[1]->operationname =
         "insert"
      set reply->status_data->subeventstatus[1]->operationstatus =
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname =
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue =
         "worklist_ref_pos table"
      set failed = "T"
      go to exit_script

/********************************************************************/
/* Executed if worklist_ref_pos table update is unsuccessful.       */
/********************************************************************/
     #wrp_update_failed
      set reply->status_data->subeventstatus[1]->operationname =
         "update"
      set reply->status_data->subeventstatus[1]->operationstatus =
         "F"
      set reply->status_data->subeventstatus[1]->targetobjectname =
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue =
         "worklist_ref_pos table"
      set failed = "T"
      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
         set reqinfo->commit_ind = 1                                   ;001
      else
         set reqinfo->commit_ind = 0                                   ;001
      endif

free record internal

END
GO     

;Generated by GNU enscript 1.6.4.
