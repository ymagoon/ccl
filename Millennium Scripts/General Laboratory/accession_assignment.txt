 ;;Solution_Test/script/PathNet -- Common Services/ACCESSION_ASSIGNMENT/ACCESSION_ASSIGNMENT.PRG Turn on black mode

;;
;; File: accession_assignment.prg
;; Description: Accession asssignment routine.
;; Request Nbr: 265057
;;
;;-----------------------------------------------------------------------------
;; Date                  Feature    Description
;; -------- -----------  ---------- -------------------------------------------
;; 07/01/99 CERGYL             6255 File creation.
;; 01/06/01 CERGYL            17518 Move reply fields to include file.
;; 09/19/05 MS011812          71105 Replaced dummyt with expand and locateval functions
;;
 
drop program accession_assignment:dba go
create program accession_assignment:dba
 
%I CCLSOURCE:ACCESSION_COMMON.INC
%I CCLSOURCE:PCS_SUBEVENT.INC

;*
;* Public declarations.
;*

if (not validate (request, 0))

record request
(
%I CCLSOURCE:ACCESSION_ASSIGNMENT_REQ.INC
) with public

endif
 
if (not validate (reply, 0))
 
record reply
(
%I CCLSOURCE:ACCESSION_ASSIGNMENT_REP.INC
) with public

endif

;* Number of accessions that will be added to the accession_fmt->qual.
declare fmt_sze = i2 with noconstant (size (request->qual, 5))

;* Indicates the collection priority was passed.
declare cpri_ind = i2 with noconstant (0)

declare lCnt = i4 with protect, noconstant(0)
declare lIndex = i4 with protect, noconstant(0)

#BEGIN_SCRIPT
 
set reply->status_data->status = "F"
set reqinfo->commit_ind = 0

if (fmt_sze = 0)
  set reply->status_data->status = "Z"
  call subevent_add ("REQUEST", reply->status_data->status, "REQUEST", "No items passed in the request")
  go to EXIT_SCRIPT
endif

;*
;* Copy the items from the request to accession_fmt structure.
;*

set stat = alterlist (accession_fmt->qual, fmt_sze)
set accession_fmt->act_lookup = 0
set accession_fmt->cpri_lookup = request->cpri_info_ind
 
set accession_fmt->time_ind = request->time_ind
set accession_fmt->insert_aor_ind = request->insert_aor_ind
 
for (i = 1 to fmt_sze)

  set accession_fmt->qual[i].order_id = request->qual[i].order_id
  set accession_fmt->qual[i].catalog_cd = request->qual[i].catalog_cd
  set accession_fmt->qual[i].facility_cd = request->qual[i].facility_cd
  set accession_fmt->qual[i].site_prefix_cd = request->qual[i].site_prefix_cd
  set accession_fmt->qual[i].site_prefix_disp = request->qual[i].site_prefix_disp
  set accession_fmt->qual[i].accession_format_cd = request->qual[i].accession_format_cd
  set accession_fmt->qual[i].accession_format_mean = ""
  
  if (request->qual[i].accession_format_cd > 0)
    set accession_fmt->qual[i].accession_class_cd = 0
  else
    set accession_fmt->qual[i].accession_class_cd = -1
  endif
  
  set accession_fmt->qual[i].specimen_type_cd = request->qual[i].specimen_type_cd
  set accession_fmt->qual[i].accession_dt_tm = request->qual[i].accession_dt_tm
  set accession_fmt->qual[i].accession_day = 0
  set accession_fmt->qual[i].accession_year = 0
  set accession_fmt->qual[i].alpha_prefix = ""
  set accession_fmt->qual[i].accession_seq_nbr = 0
  set accession_fmt->qual[i].accession_pool_id = 0
  set accession_fmt->qual[i].assignment_meaning = ""
  set accession_fmt->qual[i].assignment_status = 0
  set accession_fmt->qual[i].accession_id = 0
  set accession_fmt->qual[i].accession = ""
  set accession_fmt->qual[i].accession_formatted = ""
  set accession_fmt->qual[i].activity_type_cd = request->qual[i].activity_type_cd
  set accession_fmt->qual[i].activity_type_mean = ""
  set accession_fmt->qual[i].order_tag = 0
  set accession_fmt->qual[i].accession_info_pos = 0
  set accession_fmt->qual[i].accession_flag = request->qual[i].accession_flag
  set accession_fmt->qual[i].collection_priority_cd = request->qual[i].collection_priority_cd
  set accession_fmt->qual[i].group_with_other_flag = request->qual[i].group_with_other_flag
  set accession_fmt->qual[i].accession_parent = 0

;*
;* Ignore the body_site_cd and service_area_cd in this release.
;*
;*  if (validate (request->qual[i].body_site_cd, 0) > 0)
;*    set accession_fmt->qual[i].body_site_cd = request->qual[i].body_site_cd
;*  else
;*    set accession_fmt->qual[i].body_site_cd = 0
;*  endif

  set accession_fmt->qual[i].body_site_ind = 0
  set accession_fmt->qual[i].specimen_type_ind = 0

;*
;*  if (validate (request->qual[i].service_area_cd, 0) > 0)
;*    set accession_fmt->qual[i].service_area_cd = request->qual[i].service_area_cd
;*  else
;*    set accession_fmt->qual[i].service_area_cd = 0
;*  endif
;*

  set stat = alterlist (accession_fmt->qual[i]->linked_qual, 0)

  if (accession_fmt->qual[i].collection_priority_cd > 0)
    set cpri_ind = 1
  endif
 
  if (accession_fmt->qual[i].activity_type_cd = 0 and accession_fmt->qual[i].catalog_cd > 0)
    set accession_fmt->act_lookup = 1
  endif
  
endfor
 
;* Set cpri_lookup to 1 when collection priorities are passed without the information.
if (cpri_ind > 0 and request->cpri_info_ind = 0)
  set accession_fmt->cpri_lookup = 1
endif

;*
;* Copy the items from the request to accession_grp structure.
;*
 
if (size (request->group_qual, 5) > 0)
 
  set accession_grp->act_lookup = 0
  set accession_grp->cpri_lookup = request->cpri_info_ind
 
  select into "nl:" a.accession_id
  from accession a
  where
    a.accession_id > 0
    and expand(lCnt, 1, size (request->group_qual, 5), a.accession_id, request->group_qual[lCnt].accession_id)

  head report
    grp_cnt = 0
    cpri_ind = 0
    lCnt = 0

  detail
    grp_cnt = grp_cnt + 1
    if (grp_cnt > size (accession_grp->qual, 5))
      stat = alterlist (accession_grp->qual, grp_cnt + 1)
    endif

		lIndex = locateval (lCnt, 1, size (request->group_qual, 5), a.accession_id, request->group_qual[lCnt].accession_id)
    accession_grp->qual[grp_cnt].catalog_cd = request->group_qual[lIndex].catalog_cd
    accession_grp->qual[grp_cnt].specimen_type_cd = request->group_qual[lIndex].specimen_type_cd
    accession_grp->qual[grp_cnt].site_prefix_cd = a.site_prefix_cd
    accession_grp->qual[grp_cnt].accession_format_cd = a.accession_format_cd
    accession_grp->qual[grp_cnt].accession_class_cd = a.accession_class_cd
    accession_grp->qual[grp_cnt].accession_dt_tm = request->group_qual[lIndex].accession_dt_tm
    accession_grp->qual[grp_cnt].accession_pool_id = a.accession_pool_id
    accession_grp->qual[grp_cnt].accession_id = request->group_qual[lIndex].accession_id
    accession_grp->qual[grp_cnt].accession = a.accession 
    accession_grp->qual[grp_cnt].activity_type_cd = request->group_qual[lIndex].activity_type_cd 
    accession_grp->qual[grp_cnt].accession_flag = request->group_qual[lIndex].accession_flag
    accession_grp->qual[grp_cnt].collection_priority_cd = request->group_qual[lIndex].collection_priority_cd
    accession_grp->qual[grp_cnt].group_with_other_flag = request->group_qual[lIndex].group_with_other_flag

;*
;* Ignore the body_site_cd and service_area_cd in this release.
;*
;*  if (validate (accession_grp->qual[grp_cnt].body_site_cd > 0)
;*    accession_grp->qual[grp_cnt].body_site_cd = request->group_qual[d1.seq].body_site_cd
;*  else
;*    accession_grp->qual[grp_cnt].body_site_cd = 0
;*  endif
;*
;*  if (validate (accession_grp->qual[grp_cnt].service_area_cd > 0)
;*    accession_grp->qual[grp_cnt].service_area_cd = request->qual[d1.seq].service_area_cd
;*  else
;*    accession_grp->qual[grp_cnt].service_area_cd = 0
;*  endif
;*

    if (request->group_qual[lIndex].collection_priority_cd > 0)
      cpri_ind = 1
    endif
 
    if (accession_grp->qual[grp_cnt].activity_type_cd = 0 and accession_grp->qual[grp_cnt].catalog_cd > 0)
      accession_grp->act_lookup = 1
    endif 

  foot report
    stat = alterlist (accession_grp->qual, grp_cnt)

    ;*
    ;* Set cpri_lookup to 1 when collection priorities are passed without the information.
    ;*
 
    if (cpri_ind > 0 and request->cpri_info_ind = 0)
      accession_grp->cpri_lookup = 1
    endif

  with nocounter
 
endif
 
#EXECUTE_ACCESSION_ASSIGN
 
execute accession_assign

set reply->assignment_meaning =  trim (accession_meaning)
 
if (accession_status = ACC_SUCCESS)
  set reqinfo->commit_ind = 1
  set reply->status_data->status = "S"
 
  set stat = alterlist (reply->qual, fmt_sze)
  for (i = 1 to fmt_sze)
    set reply->qual[i].reply_tag = request->qual[i].request_tag
    set reply->qual[i].order_id = accession_fmt->qual[i].order_id
    set reply->qual[i].catalog_cd = accession_fmt->qual[i].catalog_cd
    set reply->qual[i].facility_cd = accession_fmt->qual[i].facility_cd
    set reply->qual[i].site_prefix_cd = accession_fmt->qual[i].site_prefix_cd
    set reply->qual[i].site_prefix_disp = accession_fmt->qual[i].site_prefix_disp
    set reply->qual[i].accession_day = accession_fmt->qual[i].accession_day
    set reply->qual[i].accession_year = accession_fmt->qual[i].accession_year
    set reply->qual[i].accession_format_cd = accession_fmt->qual[i].accession_format_cd
    set reply->qual[i].alpha_prefix = accession_fmt->qual[i].alpha_prefix
    set reply->qual[i].accession_seq_nbr = accession_fmt->qual[i].accession_seq_nbr
    set reply->qual[i].accession_pool_id = accession_fmt->qual[i].accession_pool_id
    set reply->qual[i].accession_id = accession_fmt->qual[i].accession_id
    set reply->qual[i].accession = accession_fmt->qual[i].accession
    set reply->qual[i].accession_formatted = accession_fmt->qual[i].accession_formatted
    set reply->qual[i].assignment_status = accession_fmt->qual[i].assignment_status
    set reply->qual[i].assignment_meaning = accession_fmt->qual[i].assignment_meaning
    set reply->qual[i].activity_type_cd = accession_fmt->qual[i].activity_type_cd
    set reply->qual[i].accession_class_cd = accession_fmt->qual[i].accession_class_cd
  endfor
endif
 
#EXIT_SCRIPT
 
end go

;Generated by GNU enscript 1.6.4.
