 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_av_instr_params/glb_get_av_instr_params.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_AV_INSTR_PARAMS.PRG
        Object name:            GLB_GET_AV_INSTR_PARAMS
        Request #:              250125
 
        Product:                General Lab/Quality Control
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Retrieves parameters for autoverification for a given testsite
 
        Tables read:            lab_instrument
                                autoverify
 
        Tables updated:         n/a
 
        Executing from:         PathNet General Lab:  DB Autoverify Build
 
        Special Notes:          n/a
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    * renamed from glb_get_av_params for Rev 7.2                           *
;     ### 03/26/97 Chad Moats           Initial Release                     *
;     001 12/09/99 Terry Weakley        Change to robotics_items table      *
;     002 06/02/00 Terry Weakley        Add dest code build indicator       *
;     003 06/28/00 Chris Heil           Remove av_part_ind field.           *
;     004 09/04/01 Gary Runde           Return av_check_part_qc_flag        *
;     005 03/17/06 Ryan Manuel          Added reply field for schedules     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
      drop   program GLB_GET_AV_INSTR_PARAMS:dba go
      create program GLB_GET_AV_INSTR_PARAMS:dba
 
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request
      (
         1 resources[*]
           2 service_resource_cd            = f8
      )
*/
 
/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/
 
      record reply
      (
         1 resources[*]
           2 service_resource_cd       = f8
           2 service_resource_disp     = vc
           2 av_ind                    = i2
           2 av_flag                   = i2
           2 av_qc_ind                 = i2
           2 av_req_qc_ind             = i2
           2 av_chk_part_qc_ind        = i2        ;004 -- Not used
           2 av_qc_part_ind            = i2
           2 robotics_loc_cd           = f8
           2 robotics_loc_disp         = vc
           2 av_dest_code_build_ind    = i2        ;002
           2 av_check_part_qc_flag     = i2        ;004
           2 schedule_cd               = f8
           2 holiday_schedule_cd       = f8
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )
 
     #Script
      set failed = "F"
      set r_cnt = 0
      set res_cnt = size(request->resources, 5)
      set reply->status_data->status = "F"
      set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
      set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty
 
 
/********************************************************************/
/*  Get autoverification flags from LAB_INSTRUMENT                  */
/********************************************************************/
 
         SELECT
          into  "nl:"
            d1.seq,
            l.service_resource_cd
         FROM
            lab_instrument l,
            (dummyt d1 with seq = value(res_cnt))
         PLAN d1
         JOIN l
            where l.service_resource_cd = request->resources[d1.seq].service_resource_cd
;              and l.active_ind = 1
         ORDER BY d1.seq
         HEAD d1.seq
            r_cnt = r_cnt + 1
            if (mod(r_cnt,5) = 1)
              stat = alterlist(reply->resources,r_cnt + 5)
            endif
            reply->resources[r_cnt].service_resource_cd   = l.service_resource_cd
            reply->resources[r_cnt].av_ind                = l.av_ind
            reply->resources[r_cnt].av_flag               = l.av_flag
            reply->resources[r_cnt].av_qc_ind             = l.av_qc_ind
            reply->resources[r_cnt].av_req_qc_ind         = l.av_req_qc_ind
            reply->resources[r_cnt].av_chk_part_qc_ind    = l.av_chk_part_qc_ind
            reply->resources[r_cnt].av_qc_part_ind        = l.av_qc_part_ind
            reply->resources[r_cnt].av_check_part_qc_flag = l.av_check_part_qc_flag      ;004
            reply->resources[r_cnt].schedule_cd           = l.schedule_cd
            reply->resources[r_cnt].holiday_schedule_cd   = l.holiday_schedule_cd
         DETAIL
            x=0
         WITH
            nocounter
 
         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif
 
     set stat = alterlist(reply->resources, r_cnt)
 
/********************************************************************/
/*  Get autoverification flags from LAB_INSTRUMENT                  */
/********************************************************************/
 
         SELECT
           into "nl:"
            d1.seq
           ,d2.seq
           ,rll.service_resource_cd
           ,rll_exists = decode(rll.seq, "Y", "N")
         FROM
            (dummyt d1 with seq = value(r_cnt))
           ,(dummyt d2 with seq = 1)
;001           ,robotics_login_loc_r rll
           ,robotics_items rll                                                               ;001
         PLAN D1
         JOIN D2
            where d2.seq = 1
         JOIN RLL
            where rll.service_resource_cd = reply->resources[d1.seq].service_resource_cd
         DETAIL
            if (rll_exists = "Y")
;001              reply->resources[d1.seq].robotics_loc_cd = rll.robotics_loc_id
              reply->resources[d1.seq].robotics_loc_cd = rll.robotics_service_resource_cd    ;001
              reply->resources[d1.seq].av_dest_code_build_ind = validate(rll.av_dest_code_build_ind,0)   ;002
            else
              reply->resources[d1.seq].robotics_loc_cd = 0.0
              reply->resources[d1.seq].av_dest_code_build_ind = 0                            ;002
            endif
         WITH
            nocounter
           ,outerjoin = d1
           ,outerjoin = d2
 
         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif
 
      go to exit_script
 
/********************************************************************/
/* Executed if requested description is not found.                  */
/********************************************************************/
     #no_task_assays
      set reply->status_data->subeventstatus[1]->operationname =
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus =
         "S"
      set reply->status_data->subeventstatus[1]->targetobjectname =
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue =
         "assay_processing_r table"
      set failed = "T"
      go to exit_script
 
/********************************************************************/
/* Executed if requested description is not found.                  */
/********************************************************************/
     #no_lab_instrument
      set reply->status_data->subeventstatus[1]->operationname =
         "get"
      set reply->status_data->subeventstatus[1]->operationstatus =
         "S"
      set reply->status_data->subeventstatus[1]->targetobjectname =
         "table"
      set reply->status_data->subeventstatus[1]->targetObjectValue =
         "lab_instrument table"
      set failed = "T"
      go to exit_script
 
/********************************************************************/
/* Script exit.                                                     */
/********************************************************************/
     #exit_script
      if (failed = "F")
         set reply->status_data->status = "S"
      else
         set reply->status_data->status = "Z"
      endif
END
GO

;Generated by GNU enscript 1.6.4.
