 ;;Solution_Test/script/PathNet -- Gen Lab/glb_util_result/glb_util_result.prg Turn on black mode

drop program GLB_UTIL_RESULT:dba go
create program GLB_UTIL_RESULT:dba


/* Migrate person_id from the orders table to the result table */

         call echo("***********************")
         call echo("Migrating person_id to the result table")
         call echo("***********************")
         call echo(" ")

/*
update into result r set
  r.person_id =  
   (select o.person_id from
      orders o
    where o.order_id = r.order_id)
where r.person_id = 0.0


go to EXIT_SCRIPT
*/
record result
(
  1  qual[*]
     2   result_id   = f8
     2   person_id   = f8
)

set r_cnt = 0
set u_cnt = 0

select into "nl:"
   r.result_id,
   o.order_id,
   o.person_id
from result r,
     orders o
plan r
  where r.person_id = 0
join o
  where o.order_id = r.order_id
detail
  r_cnt = r_cnt + 1
  if (mod(r_cnt, 100) = 1)
     stat = alterlist(result->qual, r_cnt + 100)
  endif
  result->qual[r_cnt]->result_id = r.result_id
  result->qual[r_cnt]->person_id = o.person_id
with nocounter

set stat = alterlist(result->qual, r_cnt)

call echo(build("r_cnt =",r_cnt))


for (u_cnt = 1 to r_cnt)
   update into result r set
      r.person_id = result->qual[u_cnt]->person_id
   where r.result_id = result->qual[u_cnt]->result_id
   with nocounter
   if (curqual = 0)
      call echo(build("----> Update Failed on result_id =",
         result->qual[u_cnt]->result_id))
   else
      commit
   endif
endfor

#EXIT_SCRIPT
;commit

end 
go

;Generated by GNU enscript 1.6.4.
