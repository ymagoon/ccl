 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_dta_grp_units/glb_get_dta_grp_units.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       GLB_GET_DTA_GRP_UNITS.PRG
        Object name:            GLB_GET_DTA_GRP_UNITS
        Request #:				250035
 
        Product:                General Lab
        Product Team:           NexusDOC
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        select form reference to  get
        						DTA group unit_cd and call request 1000302
 
        Tables read:            reference_range_factor, code_value
 
 
        Tables updated:         none
 
        Executing from:         EquaitionBuildDLL
 
        Special Notes:          get dta unit_cd from reference_range_factor table.
								Then call request 1000302 to get group unit_cd
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *### 09/28/03 Fone Ji              Initial Release                     *
;~DE~************************************************************************
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
 
drop program glb_get_dta_grp_units:dba go
create program glb_get_dta_grp_units:dba
 
record reply
(
  1 unitList[*]
  	2 unit_cd = f8
  	2 unit_display = vc
%i cclsource:status_block.inc
)
 
#Script
 
declare failed = c1      with protect, noconstant("")
declare sErrorMsg = vc   with protect, noconstant("")
declare error_check= f8  with protect, noconstant(0.0)
set failed = "F"
set reply->status_data->status = "F"
set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
set error_check = ERROR(sErrorMsg,1)
 
declare ApplicationId     = i4  with constant(250006)
declare TaskId            = i4  with constant(250005)
declare RequestId         = i4  with constant(1000302)
 
declare hApp              = i4  with protect, noconstant(0)
declare hTask             = i4  with protect, noconstant(0)
declare hStep             = i4  with protect, noconstant(0)
declare hReq              = i4  with protect, noconstant(0)
declare hRep              = i4  with protect, noconstant(0)
declare hList			  = i4  with protect, noconstant(0)
declare units_cnt         = i4  with protect, noconstant(0)
declare tmp_unitCd        = f8  with protect, noconstant(0.0)
 
execute crmrtl
execute srvrtl
 
	if (request->units_cd=0)
 
		SELECT INTO "nl:"
		FROM reference_range_factor rrf
		PLAN rrf
		WHERE rrf.task_assay_cd= request->task_assay_cd
			and rrf.active_ind = 1
 
		DETAIL
			request->units_cd = rrf.units_cd
 
		WITH nocounter
 
		/***get error message***/
		set error_check = ERROR(sErrorMsg,0)
	    if (error_check != 0)
	        set reply->status_data->status = "F"
	        set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
	        set failed = "T"
	        go to exit_script
	    endif
 
	    if (curqual = 0)
	        go to no_unit_cd
	    endif
 
	endif
 
	call echo (build("units_cd: ", request->units_cd))
 
 
 
	set iRet = uar_CrmBeginApp(ApplicationId, hApp)
	if (iRet != 0)
	   call echo("uar_crmBeginApp failed")
	   go to exit_script
	endif
 
	set iRet = uar_CrmBeginTask(hApp, TaskId, hTask)
	if (iRet != 0)
	 call echo("uar_crmBeginTask failed")
	 go to exit_script
	endif
 
	set iRet = uar_CrmBeginReq(hTask, "", RequestId, hStep)
	if (iRet != 0)
	  call echo("uar_crmBeginRequest failed")
	  go to exit_script
	endif
 
	set hReq = uar_CrmGetRequest (hStep)
 
	if(hReq)
		set srvstat =uar_SrvSetDouble(hReq, "unit_cd", request->units_cd)
	endif
 
	set iRet = uar_CrmPerform(hStep)
 
	set hRep = uar_CrmGetReply(hStep)
 
 
	if(hRep)
 
		set cnt = uar_SrvGetItemCount(hRep, "unit_list")
 
		call echo (build("cnt: ", cnt))
 
		set loop_cnt=0
		set units_cnt=0
 
		for (loop_cnt=0 To cnt-1)
 
			set hList = uar_SrvGetItem(hRep, "unit_list", units_cnt)
 
			set tmp_unitCd = uar_SrvGetDouble(hList, "unit_cd")
	  		set units_cnt=units_cnt+1
	  		if(units_cnt > size(reply->unitList, 5))
	  			set stat = alterlist(reply->unitList,units_cnt )
	  		endif
 
 
			call echo (build("tmp_unitCd: ", tmp_unitCd))
 
			set reply->unitList[units_cnt].unit_cd=tmp_unitCd
			set reply->unitList[units_cnt].unit_display=uar_get_code_display(tmp_unitCd)
 
		endfor
 
	endif
 
 
    go to exit_script
 
/**Executed if requested unit_Cd is not found**/
#no_unit_cd
    set failed = "Z"
    call echo(build("No_unit_cd found for DTA:", request->task_assay_cd))
    go to exit_script
 
 
/*******Script exit*******/
#exit_script
	if(hStep)
 		call uar_CrmEndReq(hStep)
	endif
 
	if(hTask)
 		call uar_CrmEndTask(hTask)
	endif
 
	if(hApp)
 		call uar_CrmEndApp(hApp)
	endif
 
    if (failed = "F")
       set reply->status_data->status = "S"
    elseif (failed = "Z")
       set reply->status_data->status = "Z"
    else
       set reply->status_data->status = "F"
    endif
END
GO
 
 
 
 
 

;Generated by GNU enscript 1.6.4.
