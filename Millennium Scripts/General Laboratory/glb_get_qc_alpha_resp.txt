 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_qc_alpha_resp/glb_get_qc_alpha_resp.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************
        Source file name:       GLB_GET_QC_ALPHA_RESP.PRG
        Object name:            GLB_GET_QC_ALPHA_RESP
        Request #:              257538

        Product:                General Lab           
        Product Team:           GLB
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Retrieve alpha reponses from the database

        Tables read:            qc_alpha_responses

        Tables updated:         n/a

        Executing from:         QC Correction

        Special Notes:          None
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     ### 10/25/96 Chad Moats           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

      drop program GLB_GET_QC_ALPHA_RESP:dba go    
      create program GLB_GET_QC_ALPHA_RESP:dba
     
/********************************************************************/
/*  Request Record                                                  */
/********************************************************************/
/*
      record request                                      
      (                             
          1 control_id          = f8
          1 service_resource_cd = f8          
          1 task_assay_cd       = f8
      )
*/

/********************************************************************/
/*  Reply Record                                                    */
/********************************************************************/

      record reply
      (
         1 alpha_cnt              = i4
         1 alphas[*]
           2 nomenclature_id      = f8
           2 source_string        = vc
           2 result_process_cd    = f8
         1 status_data
           2 status                  = c1
           2 subeventstatus[1]
             3 OperationName         = c15
             3 OperationStatus       = c1
             3 TargetObjectName      = c15
             3 TargetObjectValue     = vc
      )

      #Script
         declare stat                    = i4
         declare r_cnt                   = i4
         set failed = "F"

         set reply->status_data.status = "F"
         set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
         set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty

      /***********************************************************************
      * Get QC alpha responses                                               *
      ***********************************************************************/
   
         select into "nl:"
            qar.task_assay_cd,
            n.nomenclature_id,
            n_exists = decode(n.seq, "Y","N")
         from
            qc_alpha_responses qar,
            nomenclature n
         plan qar
            where (qar.control_id = request->control_id or request->control_id = 0) and
                  (qar.service_resource_cd = request->service_resource_cd or request->service_resource_cd = 0) and 
                  qar.task_assay_cd = request->task_assay_cd
         join n
            where n.nomenclature_id = qar.nomenclature_id
         detail
            if (n_exists = "Y")
              r_cnt = r_cnt + 1
              if (mod(r_cnt,5) = 1)
                 stat =  alterlist(reply->alphas,r_cnt + 5)
              endif  
              reply->alpha_cnt = r_cnt
              reply->alphas[r_cnt].nomenclature_id = n.nomenclature_id
              reply->alphas[r_cnt].source_string = n.source_string
              reply->alphas[r_cnt].result_process_cd = qar.result_process_cd
            endif
         with nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif

         if (curqual = 0)
           go to none_found
         else
           set reply->status_data->status = "S"
         endif

         set stat = alterlist(reply->alphas,r_cnt)       
         go to exit_script

/********************************************************************/ 
/* Executed if qc_alpha_response table get is unsuccessful          */
/********************************************************************/
      #none_found
        set reply->status_data->subeventstatus[1]->operationname = 
           "get"
        set reply->status_data->subeventstatus[1]->operationstatus = 
           "F"
        set reply->status_data->subeventstatus[1]->targetobjectname = 
           "table"
        set reply->status_data->subeventstatus[1]->targetObjectValue = 
           "qc_alpha_responses table"
        set reply->status_data->status = "Z"

      go to exit_script

/********************************************************************/ 
/* Script exit.                                                     */
/********************************************************************/
     #exit_script

END GO
  

;Generated by GNU enscript 1.6.4.
