 ;;Solution_Test/script/PathNet -- Gen Lab/glb_errchk_equation/glb_errchk_equation.prg Turn on black mode

drop program GLB_ERRCHK_EQUATION:dba go
create program GLB_ERRCHK_EQUATION:dba

/* Error checking for the equation */
select into GLB_ERRCHK_EQUATION
  e.equation_id
 ,e.equation_description
 ,e.equation_postfix
 ,e.active_ind
 ,c.code_value
 ,c.display

from
  equation e,
  code_value c

plan e
  where e.equation_id > 0
    and (e.equation_postfix = " "
     or  e.equation_postfix = NULL)
join c
  where e.task_assay_cd = c.code_value

head report
  col 1, "Use Equation Build Tool to save the equations below in order for instrument processing to perform calculations."
  row + 1
  col 1, "The Y indicates the equation is active, N indicates the equation is inactive."
  row + 1
  col 1, "Assay Name"
  row + 1
  col 5, "Equation Id"
  col 22, "Equation Description"
  row + 1

detail
  col 1, c.display
  row + 1
         if (e.active_ind = 1)
           col 3, "Y"
         else
           col 3, "N"
         endif
  col 5, e.equation_id
  col 22, trim(e.equation_description)
  row + 1

with
  nocounter

if (curqual != 0)
  set request->setup_proc[1]->success_ind = 0
  set request->setup_proc[1]->error_msg = "EQUATION without a postfix equation, check GLB_ERRCHK_EQUATION.DAT in CCLUSERDIR."
else
  set request->setup_proc[1]->success_ind = 1
  set request->setup_proc[1]->error_msg = "The EQUATION table is updated successfully."
endif

execute dm_add_upt_setup_proc_log

end
go

;Generated by GNU enscript 1.6.4.
