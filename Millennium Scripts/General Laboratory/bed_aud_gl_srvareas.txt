 ;;Solution_Test/script/Bedrock/bed_aud_gl_srvareas/bed_aud_gl_srvareas.prg Turn on black mode

/************************************************************************
 *                                                                      *
 *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
 *                              Technology, Inc.                        *
 *       Revision      (c) 1984-1995 Cerner Corporation                 *
 *                                                                      *
 *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
 *  This material contains the valuable properties and trade secrets of *
 *  Cerner Corporation of Kansas City, Missouri, United States of       *
 *  America (Cerner), embodying substantial creative efforts and        *
 *  confidential information, ideas and expressions, no part of which   *
 *  may be reproduced or transmitted in any form or by any means, or    *
 *  retained in any storage or retrieval system without the express     *
 *  written permission of Cerner.                                       *
 *                                                                      *
 *  Cerner is a registered mark of Cerner Corporation.                  *
 *                                                                      *
 ************************************************************************
 
          Date Written:
          Source file name:   bed_aud_gl_srvareas.prg
          Object name:        bed_aud_gl_srvareas
          Request #:          XXXXXX
 
          Product:            V500
          HNA Version:        V500
          CCL Version:
 
          Program purpose:    Prints a report that shows
                              lab service areas, and the locations
                              that the are associated with
 
          Tables read:
          Tables updated:
 
          Executing from:     ccl
 
          Special Notes:
 
 ***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod	Date		Engineer	Comment                                *
 *---	--------	--------	---------------------------------------*
  000	06/04/07	Huffman		Initial Release
  001	02/12/09	Kelli Wade	1) Remove "Location Type" column
  								2) Rename "Organization (of Associated Location)" column
  									to "Organization (of Associated Service Area)"
  								3) To populate "Organization (Location)" column, get organization of the
  									parent building of the location that is a child of a service area.
  									If more than one parent building, then populate column with "multiple orgs"
 ******************  END OF ALL MODCONTROL BLOCKS  ********************/
 
drop program bed_aud_gl_srvareas:dba go
create program bed_aud_gl_srvareas:dba
 
/***********************************************************************
* Request Record                                                       *
************************************************************************/
 
if (not (validate (request,0)))
 record request
  (
    1 program_name = vc
    1 skip_volume_check_ind = i2
    1 output_filename = vc
    1 paramlist[*]
      2 param_type_mean = vc
      2 pdate1 = dq8
      2 pdate2 = dq8
      2 vlist[*]
        3 dbl_value = f8
        3 string_value = vc
  )
endif
 
if (not(validate(reply,0)))
 record reply
  (
    1  collist[*]
      2  header_text = vc
      2  data_type = i2
      2  hide_ind = i2
    1  rowlist[*]
      2 celllist[*]
        3 date_value = dq8
        3 nbr_value = i4
        3 double_value = f8
        3 string_value = vc
        3 display_flag = i2 ;0-regular,1-bold,2-???
    1 high_volume_flag = i2
    1 output_filename = vc
    1 run_status_flag = i2
    1 statlist[*]
      2 statistic_meaning = vc
      2 status_flag = i2
      2 qualifying_items = i4
      2 total_items = i4
    1  status_data
      2  status  =  C1
      2  SUBEVENTSTATUS [ 1 ]
        3  OPERATIONNAME  =  C15
        3  OPERATIONSTATUS  =  C1
        3  TARGETOBJECTNAME  =  C15
        3  TARGETOBJECTVALUE  =  C100
  )
endif
 
 
 
record temp
(
  1 loclist[*]
    2 srvarea_disp = vc
    2 srvarea_disp_key = vc
    2 srvarea_cd = f8
    2 srvarea_org_id = f8
    2 srvarea_org_name = vc
    2 loc_disp = vc
    2 loc_desc = vc
    2 loc_cd = f8
;001     2 loc_org_id = f8
    2 loc_org_name = vc
;001    2 loc_type_disp = vc
    2 loc_type_cd = f8
)
 
 
 
 
 /* Set the reply */
;001 set stat = alterlist(reply->collist, 6)
set stat = alterlist(reply->collist, 5)	;001
set reply->collist[1].header_text = "Service Area"
set reply->collist[1].data_type = 1 ;string
set reply->collist[1].hide_ind = 0
;001 set reply->collist[2].header_text = "Organization (of Associated Location)"
set reply->collist[2].header_text = "Organization (of Associated Service Area)"	;001
set reply->collist[2].data_type = 1 ;string
set reply->collist[2].hide_ind = 0
set reply->collist[3].header_text = "Location Display"
set reply->collist[3].data_type = 1 ;string
set reply->collist[3].hide_ind = 0
set reply->collist[4].header_text = "Location Description"
set reply->collist[4].data_type = 1 ;string
set reply->collist[4].hide_ind = 0
set reply->collist[5].header_text = "Organization (Location)"
set reply->collist[5].data_type = 1 ;string
set reply->collist[5].hide_ind = 0
;001 set reply->collist[6].header_text = "Location Type"
;001 set reply->collist[6].data_type = 1 ;string
;001 set reply->collist[6].hide_ind = 0
 
 
 
 
; Set some code values
;set unauth = get_code_value(8,"UNAUTH")
set glb_ac_cd = get_code_value(106,"GLB")
set lab_ct_cd = get_code_value(6000,"GENERAL LAB")
set nu_cd = get_code_value(222,"NURSEUNIT")
set amb_cd = get_code_value(222,"AMBULATORY")
set cslogin_cd = get_code_value(222,"CSLOGIN")
set srvarea_cd = get_code_value(222,"SRVAREA")
set bldg_cd = get_code_value(222,"BUILDING")		;001
set subsect_cd = get_code_value(223,"SUBSECTION")
set bench_cd = get_code_value(223,"BENCH")
set instr_cd = get_code_value(223,"INSTRUMENT")
 
 
 
 
set totcnt = 0
set high_volume_cnt = 0
select into "nl:"
  hv_cnt = count(*)
from location l
plan l
  where l.location_type_cd = srvarea_cd
    and l.discipline_type_cd = lab_ct_cd
    and l.active_ind = 1
detail
  high_volume_cnt = hv_cnt
with nocounter
 
 
 
 
if (request->skip_volume_check_ind = 0)
  if (high_volume_cnt > 5000)
    set reply->high_volume_flag = 2
    go to exit_script
  elseif (high_volume_cnt = 3000)
    set reply->high_volume_flag = 1
    go to exit_script
  endif
endif
 
 
 
 
set lcnt = 0
select into "nl:"
  loc_desc = cnvtupper(cv2.description)
from location l1,
     code_value cv1,
     organization o1,
     location_group lg,
     location l2,
     code_value cv2
;001     code_value cv3,
;001     organization o2
plan l1
  where l1.location_type_cd = srvarea_cd
    and l1.discipline_type_cd = lab_ct_cd
    and l1.active_ind = 1
join cv1
  where cv1.code_value = l1.location_cd
    and cv1.active_ind = 1
join o1
  where o1.organization_id = outerjoin(l1.organization_id)
join lg
  where lg.parent_loc_cd = outerjoin(l1.location_cd)
    and lg.active_ind = outerjoin(1)
join l2
  where l2.location_cd = outerjoin(lg.child_loc_cd)
    and l2.active_ind = outerjoin(1)
join cv2
  where cv2.code_value = outerjoin(l2.location_cd)
    and cv2.active_ind = outerjoin(1)
;001 join cv3
;001  where cv3.code_value = outerjoin(l2.location_type_cd)
;001    and cv3.active_ind = outerjoin(1)
;001 join o2
;001   where o2.organization_id = outerjoin(l2.organization_id)
order by cv1.display_key, loc_desc
head report
  lcnt = 0
detail
  lcnt = lcnt + 1
  stat = alterlist(temp->loclist,lcnt)
  temp->loclist[lcnt].srvarea_cd = l1.location_cd
  temp->loclist[lcnt].srvarea_disp = cv1.display
  temp->loclist[lcnt].srvarea_disp_key = cv1.display_key
  if (o1.organization_id > 0)
    temp->loclist[lcnt].srvarea_org_id = o1.organization_id
    temp->loclist[lcnt].srvarea_org_name = o1.org_name
  endif
  if (l2.location_cd > 0)
    temp->loclist[lcnt].loc_cd = l2.location_cd
    temp->loclist[lcnt].loc_disp = cv2.display
    temp->loclist[lcnt].loc_desc = cv2.description
    temp->loclist[lcnt].loc_type_cd = l2.location_type_cd
;001    temp->loclist[lcnt].loc_type_disp = cv3.display
  endif
;001   if (o2.organization_id > 0)
;001     temp->loclist[lcnt].loc_org_id = o2.organization_id
;001     temp->loclist[lcnt].loc_org_name = o2.org_name
;001   endif
with nocounter
 
 
 
 
 
/*beginning mod 001*/
;;;;;;;;;; get organizations for locations ;;;;;;;;;;
if (lcnt > 0)
	select into "NL:"
	from (dummyt d with seq = lcnt),
		 location_group lg,
		 location l,
		 organization o
	plan d
	join lg
		where lg.child_loc_cd = temp->loclist[d.seq].loc_cd
		  and lg.location_group_type_cd = bldg_cd
		  and lg.active_ind = 1
	join l
		where l.location_cd = lg.parent_loc_cd
		  and l.active_ind = 1
	join o
		where o.organization_id = l.organization_id
		  and o.active_ind = 1
	head d.seq
		total_bldgs = 0
	detail
		total_bldgs = total_bldgs + 1
		if (total_bldgs > 1)
			temp->loclist[d.seq].loc_org_name = "multiple orgs"
		else
			temp->loclist[d.seq].loc_org_name = o.org_name
		endif
	with counter
endif
/*end mod 001*/
 
 
 
 
 
 
if (lcnt > 0)
  set rcnt = 0
  select into "nl:"
  from (dummyt d with seq = lcnt)
  detail
    rcnt = rcnt + 1
    stat = alterlist(reply->rowlist,rcnt)
;001    stat = alterlist(reply->rowlist[rcnt].celllist,6)
    stat = alterlist(reply->rowlist[rcnt].celllist,5)	;001
    reply->rowlist[rcnt].celllist[1].string_value =
                           temp->loclist[d.seq].srvarea_disp
    reply->rowlist[rcnt].celllist[2].string_value =
                           temp->loclist[d.seq].srvarea_org_name
    reply->rowlist[rcnt].celllist[3].string_value =
                           temp->loclist[d.seq].loc_disp
    reply->rowlist[rcnt].celllist[4].string_value =
                           temp->loclist[d.seq].loc_desc
    reply->rowlist[rcnt].celllist[5].string_value =
                           temp->loclist[d.seq].loc_org_name
;001    reply->rowlist[rcnt].celllist[6].string_value =
;001                           temp->loclist[d.seq].loc_type_disp
  with nocounter
endif
 
 
 
 
subroutine get_code_value(Xcodeset, Xcdf)
; get next sequence number
 
; Xcodeset           f8   INPUT    code set
; Xcdf               vc   INPUT    CDF to look up
; (returns)          f8   OUTPUT   code value
 
  set to_return = 0.0
  select into "nl:"
  from code_value c
  plan c
    where c.code_set = Xcodeset
      and c.cdf_meaning = Xcdf
      and c.active_ind = 1
  detail
    to_return = c.code_value
  with nocounter
 
  return(to_return)
end
 
 
 
 
#exit_script
set reply->status_data->status = "S"
if (reply->high_volume_flag in (1,2))
  set reply->output_filename = build("gl_srvareas_audit.csv")
endif
 
if (request->output_filename > " ")
  execute bed_rpt_file
endif
 
end go
 

;Generated by GNU enscript 1.6.4.
