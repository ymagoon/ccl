 ;;Solution_Test/script/PathNet -- Gen Lab/glb_chg_instr_accn_queue/glb_chg_instr_accn_queue.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1997 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************

        Source file name:       glb_chg_instr_accn_queue.prg
        Object name:            glb_chg_instr_accn_queue
        Request #:              250133

        Product:                General Lab                     
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Update instrument accession queue records.
                                
        Tables read:            instr_accn_queue

        Tables updated:         instr_accn_queue
        Executing from:

        Special Notes:          For the request record, the service_resource_cd
                                is required and either the accession or
                                sequence number.
******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 07/25/97 Hal Patchen          Initial Release                     *
;     001 09/17/97 Jeff Fry             Add record skipping logic           *
;     002 06/18/98 Gary Runde           Change/Add time out value           *
;     003 01/07/02 Sasi Gandham         Add fields to Order By for head     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_CHG_INSTR_ACCN_QUEUE:dba go
             create program GLB_CHG_INSTR_ACCN_QUEUE:dba

      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  skip_ind                     = i2                           ;001
         1  TimeOut_ind                  = i2   ;checks if change TOV
	 1  Time_Out_Value		 = f8
         1  qual[]
            2  service_resource_cd       = f8
            2  accession                 = vc
            2  sequence                  = i4
            2  in_process_prsnl_id       = f8
            2  in_process_dt_tm          = dq8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/
      record reply
      ( 
%i cclsource:status_block.inc
      )

      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         declare q_cnt                   = i4
         declare max_seq                 = i4                           ;001

         set reply->status_data.status = "F"
         set reqinfo->commit_ind = 0
         set q_cnt = size(request->qual, 5)


      /***********************************************************************
      * Change/Add Time Out Value                                            *
      ***********************************************************************/
         if (request->TimeOut_ind = 1)
	      update into instr_accn_queue iaq
              set iaq.sequence = request->Time_Out_Value
              where iaq.service_resource_cd = 0.00
              with nocounter
	 elseif (request->TimeOut_ind = 2)
	      insert into instr_accn_queue
	      set sequence = request->Time_Out_Value,
		  accession = "Time-Out Value",
		  service_resource_cd = 0.00
	      with nocounter
	 endif
     	 
      /***********************************************************************
      * Lock rows for update                                                 *
      ***********************************************************************/
         select into "nl:"
            d.seq,
            iaq.seq

         from
            (dummyt d with seq = value(q_cnt)),
            instr_accn_queue iaq

         plan d
         join iaq where ((request->qual[d.seq].sequence != 0
                      and iaq.service_resource_cd = 
                                  request->qual[d.seq].service_resource_cd
                      and iaq.sequence = request->qual[d.seq].sequence)
                     or  (request->qual[d.seq].sequence = 0
                      and iaq.service_resource_cd = 
                                  request->qual[d.seq].service_resource_cd
                      and iaq.accession = request->qual[d.seq].accession))
         with
            nocounter,
            forupdate(iaq)

         if (curqual != q_cnt)
            set reply->status_data.status = "Z"
            go to Exit_Script
         endif

      /***********************************************************************
      * Update rows                                                          *
      ***********************************************************************/
         if (request->skip_ind = 1)                                     ;001
         /********************************************************************
         * If this is a request to skip this record,                         *
         * then unlock it and move it to the bottom of the queue.            *
         ********************************************************************/
            call echo("  --> Saving Queue Record...")                   ;001
            for (cnt = 1 to q_cnt)                                      ;001
               select into "nl:"                                        ;001
                 iaq.service_resource_cd,                               ;001
                 iaq.sequence                                           ;001
               from instr_accn_queue iaq                                ;001
               where iaq.service_resource_cd =                          ;001
                     request->qual[cnt]->service_resource_cd            ;001
	       order by iaq.service_resource_cd
               head iaq.service_resource_cd                             ;001
                 max_seq = 0                                            ;001
               foot iaq.service_resource_cd                             ;001
                 max_seq = max(iaq.sequence)                            ;001
               with nocounter                                           ;001

               update into instr_accn_queue iaq                         ;001
               set                                                      ;001
                  iaq.sequence = max_seq + 1                            ;001
                 ,iaq.in_process_prsnl_id = 0.0                         ;001
                 ,iaq.in_process_dt_tm = cnvtdatetime(null)             ;001
               where iaq.service_resource_cd =                          ;001
                     request->qual[cnt]->service_resource_cd            ;001
                 and iaq.accession = request->qual[cnt].accession       ;001
               with nocounter                                           ;001
               if (curqual = 0)                                         ;001
                  call echo("  --> Error Saving")                       ;001
                  go to Exit_Script                                     ;001
               else                                                     ;001
                  call echo("  --> Saved")                              ;001
               endif                                                    ;001
            endfor                                                      ;001
         else                                                           ;001
            update into instr_accn_queue iaq,
               (dummyt d with seq = value(q_cnt))
            set
               iaq.in_process_prsnl_id = 
                 request->qual[d.seq].in_process_prsnl_id,
               iaq.in_process_dt_tm = 
                 cnvtdatetime(request->qual[d.seq].in_process_dt_tm)
            plan d
            join iaq where ((request->qual[d.seq].sequence != 0
                         and iaq.service_resource_cd = 
                                     request->qual[d.seq].service_resource_cd
                         and iaq.sequence = request->qual[d.seq].sequence)
                        or  (request->qual[d.seq].sequence = 0
                         and iaq.service_resource_cd = 
                                     request->qual[d.seq].service_resource_cd
                         and iaq.accession = request->qual[d.seq].accession))
            with nocounter

            if (curqual != q_cnt)
               go to Exit_Script
            endif
         endif                                                          ;001


         set reqinfo->commit_ind = 1
         set reply->status_data.status = "S"   ;Successful

      #Exit_Script        
         end
         go      

;Generated by GNU enscript 1.6.4.
