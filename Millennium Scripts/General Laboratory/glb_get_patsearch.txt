 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_patsearch/glb_get_patsearch.prg Turn on black mode

      /***********************************************************************
      *                                                                      *
      * SCRIPT: General Lab Get Laboratory Order Information                 *
      *                                                                      *
      ***********************************************************************/
;	  *	001 08/07/03 Craig Sumrall			Updated join with additional qual*			
;	  *																		 *			
;     *																		 *			
;     ************************************************************************	     
             drop program GLB_GET_LABORDER:dba go    
             create program GLB_GET_LABORDER:dba
     
      /***********************************************************************
      *   Request Record                                                     *
      ***********************************************************************/
      /*
      (
         1  accession                    = c18
      )
      */

      /***********************************************************************
      *   Reply Record                                                       *
      ***********************************************************************/
      record reply
      ( 
         1  start_dt_tm                  = dq8
         1  stop_dt_tm                   = dq8
         1  person_id                    = f8
         1  person_alias
            2  alias_id                  = c100
            2  alias_status_cd           = f8
         1  name_last                    = c100
         1  name_first                   = c100
         1  name_middle                  = c100
         1  name_title                   = c100
         1  name_degree                  = c100
         1  name_prefix                  = c100
         1  name_suffix                  = c100
         1  name_initials                = c100
         1  sex_cd                       = f8
         1  birth_dt_tm                  = dq8
         1  race_cd                      = f8
         1  blood_type_cd                = f8
         1  encntr_id                    = f8
         1  encntr_alias
            2  alias_id                  = c100
            2  alias_status_cd           = f8
         1  admit_dt_tm                  = dq8
         1  encntr_type_cd               = f8
         1  admit_type_cd                = f8
         1  admit_prov_id                = f8
         1  admit_src_cd                 = f8
         1  admit_diag_cd_method         = c100
         1  admit_diag_cd                = f8
         1  admit_diag_text              = c100
         1  diet_type_cd                 = f8
         1  isolation_cd                 = f8
         1  outpt_loctn_cd               = f8
         1  attd_prov_id                 = f8
         1  refer_prov_id                = f8
         1  refer_prov_name              = c100
         1  admit_mode_cd                = f8
         1  admit_status_cd              = f8
         1  admit_weight                 = i4
         1  admit_weight_units_cd        = f8
         1  complaint                    = c100
         1  client_cd                    = f8
         1  security_level               = c100
         1  security_option              = c100
         1  severity                     = c100
         1  orders[10]
            2  order_id                  = f8
            2  catalog_cd                = f8
;            2  location_cd               = f8
            2  order_type_cd             = f8
            2  order_status_cd           = f8
            2  order_mnemonic            = c50
            2  assay_cnt                 = i4
            2  assays[10]
               3  assay_cd               = f8
               3  mnemonic               = c100
               3  result_required        = c1
               3  result_type            = c1
            2  result_cnt                = i4
            2  results[10]
               3  assay_cd               = f8
               3  procedure_cd           = f8
               3  result_type_cd         = f8
               3  result_status_cd       = f8
               3  result_value_numeric   = i4
               3  normal_flag            = c1
               3  critical_flag          = c1
               3  review_flag            = c1
               3  delta_flag             = c1
               3  repeat_number          = i4
               3  updt_dt_tm             = dq8
         1  status_data
            2  status                    = c1
            2  subeventstatus[1]
               3  SourceObjectName       = c15
               3  SourceObjectQual       = i4
               3  SourceObjectValue      = c50
               3  OperationName          = c8
               3  OperationStatus        = c1
               3  TargetObjectName       = c15
               3  TargetObjectValue      = c50
               3  TargetStateName        = c15
      )

      /***********************************************************************
      *   Script                                                             *
      ***********************************************************************/
      #Script
         set reply->start_dt_tm = cnvtdatetime(curdate,curtime)
         set reply->status_data->status = "F"
         set max_assays = 0
         set max_results = 0

         set order_cnt = 0
         set assay_cnt = 0
         set result_cnt = 0
         set accn = trim(request->accession)
         
         
         DECLARE currcd     = f8 with protect, noconstant(0.0)
   
	     set currcd = uar_get_code_by("MEANING",213,"CURRENT")

      /***************************************************
      * Select order information based on lab accession. *
      ***************************************************/

         select into "nl:"
            is_result = decode(d1.seq,"Y","N"),
            a.accession,
            a.order_id,
            o.order_id,
            o.person_id,
            o.encntr_id,
            o.order_type_cd,
            o.order_status_cd,
            o.order_mnemonic,
            o.catalog_cd,
            l.catalog_cd,
            l.result_required,
            d.task_assay_id,
            d.mnemonic,
            r.assay_cd,
            r.procedure_cd,
            r.result_status_cd,
            r.result_type_cd,
            r.result_value_numeric,
            r.repeat_number
         from accession_order_r a,
              orders o,
              (dummyt d2 with seq = 1),
              lab_profile l,
              discrete_assay_task d,
              (dummyt d1 with seq = 1),
              result r
         plan    a where a.accession = accn
         join    o where a.order_id = o.order_id
         join   (d2 where 1 = d2.seq
         join    l where o.catalog_cd = l.catalog_cd
         join    d where l.assay_cd = d.task_assay_id)
         orjoin (d1 where 1 = d1.seq
         join    r where o.order_id = r.order_id)
        
         order o.order_id asc,
               r.repeat_number asc

         head report
            reply->status_data->subeventstatus[1]->SourceObjectName
                = "Report"
            reply->status_data->status = "T"
            order_cnt = 0
            reply->person_id = o.person_id
            reply->encntr_id = o.encntr_id

         head page
            reply->status_data->subeventstatus[1]->SourceObjectName
                = "Page"
            order_cnt = order_cnt + 1
            if (mod(order_cnt,10) = 1 and order_cnt != 1)
               stat = alter(reply->orders, order_cnt + 10)
            endif
            reply->orders[order_cnt]->order_id = o.order_id
            reply->orders[order_cnt]->catalog_cd = o.catalog_cd
            reply->orders[order_cnt]->order_type_cd = o.order_type_cd
            reply->orders[order_cnt]->order_status_cd = o.order_status_cd
            reply->orders[order_cnt]->order_mnemonic = o.order_mnemonic
            assay_cnt = 0

         detail         
            reply->status_data->subeventstatus[1]->SourceObjectName
                = "Detail"
            if (is_result = "Y")
               if (r.assay_cd > 0)
                  result_cnt = result_cnt + 1
                  if (mod(result_cnt,10) = 1 and result_cnt != 1)
                     if (result_cnt >= max_results)
                        stat = alter(reply->orders[order_cnt]->results, result_cnt + 10)
                     endif
                  endif
                  if (result_cnt > max_results)
                     max_results = result_cnt
                  endif
                  reply->orders[order_cnt]->results[result_cnt]->assay_cd =
                         r.assay_cd
                  reply->orders[order_cnt]->results[result_cnt]->procedure_cd =
                        r.procedure_cd
                  reply->orders[order_cnt]->results[result_cnt]->result_type_cd =
                        r.result_type_cd
                  reply->orders[order_cnt]->results[result_cnt]->result_status_cd =
                        r.result_status_cd
                  reply->orders[order_cnt]->results[result_cnt]->result_value_numeric =
                        r.result_value_numeric
                  reply->orders[order_cnt]->results[result_cnt]->normal_flag =
                        r.normal_flag
                  reply->orders[order_cnt]->results[result_cnt]->critical_flag =
                        r.critical_flag
                  reply->orders[order_cnt]->results[result_cnt]->review_flag =
                        r.review_flag
                  reply->orders[order_cnt]->results[result_cnt]->delta_flag =
                        r.delta_flag
                  reply->orders[order_cnt]->results[result_cnt]->repeat_number =
                        r.repeat_number
                  reply->orders[order_cnt]->results[result_cnt]->updt_dt_tm =
                        r.updt_dt_tm
                  reply->orders[order_cnt]->result_cnt = result_cnt
               endif
            else
               if (d.task_assay_id > 0)
                  assay_cnt = assay_cnt + 1
                  if (mod(assay_cnt,10) = 1 and assay_cnt != 1)
                     if (assay_cnt >= max_results)
                        stat = alter(reply->orders[order_cnt]->assays, assay_cnt + 10)
                     endif
                  endif
                  if (assay_cnt > max_assays)
                     max_assays = assay_cnt
                  endif
                  reply->orders[order_cnt]->assays[assay_cnt]->assay_cd = 
                         d.task_assay_id
                  reply->orders[order_cnt]->assays[assay_cnt]->mnemonic = 
                         d.mnemonic
                  reply->orders[order_cnt]->assays[assay_cnt]->result_required = 
                         d.required_flag
                  reply->orders[order_cnt]->assays[assay_cnt]->result_type = 
                         d.result_type
                  reply->orders[order_cnt]->assay_cnt = assay_cnt
               endif
            endif
         with nocounter

      /******************************************
      * Send optional inquiry sub status events *
      ******************************************/

         if (curqual = 0)
            set reply->status_data->subeventstatus[1]->SourceObjectName
               = "script"
            set reply->status_data->subeventstatus[1]->SourceObjectValue
               = "glb_get_laborder"
            set reply->status_data->subeventstatus[1]->OperationName
               = "select"
            set reply->status_data->subeventstatus[1]->OperationStatus
               = "F"
            set reply->status_data->subeventstatus[1]->TargetObjectName
               = "table"
            set reply->status_data->subeventstatus[1]->TargetObjectValue 
               = "orders"
         else
            set reply->status_data->status = "T"
         endif

         set stat = alter(reply->orders,order_cnt)
         set stat = alter(reply->orders[1]->assays, max_assays)
         set stat = alter(reply->orders[1]->results, max_results)

         set reply->stop_dt_tm = cnvtdatetime(curdate,curtime)


      set reply->status_data->status = "F"
      set cnt = 0

      /**********************************
      * Get basic patient demographics. *
      **********************************/

         select into "nl:"
            p.sex_cd,
            p.birth_dt_tm,
            p.race_cd,
            p.blood_type_cd,
            pa.alias_id,
            pa.alias_status_cd,
            pn.name_first,
            pn.name_middle,
            pn.name_last,
            pn.name_degree,
            pn.name_title,
            pn.name_prefix,
            pn.name_suffix,
            pn.name_initials,
            e.admit_dt_tm,
            e.encntr_type_cd,
            e.admit_type_cd,
            e.admit_prov_id,
            e.admit_src_cd,
            e.admit_diag_cd_method,
            e.admit_diag_cd,
            e.admit_diag_text,
            e.diet_type_cd,
            e.isolation_cd,
            e.outpt_loctn_cd,
            e.attd_prov_id,
            e.refer_prov_id,
            e.refer_prov_name,
            e.admit_mode_cd,
            e.admit_status_cd,
            e.admit_weight,
            e.admit_weight_units_cd,
            e.complaint,
            e.client_cd,
            e.security_level,
            e.security_option,
            e.severity, 
            ea.alias_id,
            ea.alias_status_cd
         from 
            person p,
            person_name pn,
            person_alias pa,
            (dummyt d with seq=1),
            encounter e,
            (dummyt d1 with seq = 1),
            encntr_alias ea
         plan p 
            where p.person_id=reply->person_id
         join pn
            where reply->person_id = pn.person_id and
            pn.name_type_cd = currcd
         join pa
            where reply->person_id = pa.person_id
         join (d 
            where 1 = d.seq
         join e 
            where reply->encntr_id = e.encntr_id
         join d1
            where 1 = d1.seq
         join ea
            where reply->encntr_id = ea.encntr_id)

         head report
            cnt = 0
         detail
            reply->sex_cd                        = p.sex_cd
            reply->birth_dt_tm                   = p.birth_dt_tm
            reply->race_cd                       = p.race_cd
            reply->blood_type_cd                 = p.blood_type_cd
            reply->name_first                    = pn.name_first   
            reply->name_middle                   = pn.name_middle   
            reply->name_last                     = pn.name_last 
            reply->name_degree                   = pn.name_degree   
            reply->name_title                    = pn.name_title  
            reply->name_prefix                   = pn.name_prefix   
            reply->name_suffix                   = pn.name_suffix  
            reply->name_initials                 = pn.name_initials  
            reply->person_alias->alias_id        = pa.alias_id
            reply->person_alias->alias_status_cd = pa.alias_status_cd
            reply->admit_dt_tm                   = cnvtdatetime(e.admit_dt_tm)
            reply->encntr_type_cd                = e.encntr_type_cd
            reply->admit_type_cd                 = e.admit_type_cd
            reply->admit_prov_id                 = e.admit_prov_id
            reply->admit_src_cd                  = e.admit_src_cd
            reply->admit_diag_cd_method          = e.admit_diag_cd_method
            reply->admit_diag_cd                 = e.admit_diag_cd
            reply->admit_diag_text               = e.admit_diag_text
            reply->diet_type_cd                  = e.diet_type_cd
            reply->isolation_cd                  = e.isolation_cd
            reply->attd_prov_id                  = e.attd_prov_id
            reply->refer_prov_id                 = e.refer_prov_id
            reply->refer_prov_name               = e.refer_prov_name
            reply->admit_mode_cd                 = e.admit_mode_cd
            reply->admit_status_cd               = e.admit_status_cd
            reply->admit_weight                  = e.admit_weight
            reply->admit_weight_units_cd         = e.admit_weight_units_cd
            reply->complaint                     = e.complaint
            reply->client_cd                     = e.client_cd
            reply->security_level                = e.security_level
            reply->security_option               = e.security_option
            reply->severity                      = e.severity
            reply->encntr_alias->alias_id        = ea.alias_id
            reply->encntr_alias->alias_status_cd = ea.alias_status_cd
         with 
            counter, 
            outerjoin = d, 
            outerjoin = d1

      /******************************************
      * Send optional inquiry sub status events *
      ******************************************/

      if (curqual = 0)
         set reply->status_data->subeventstatus[1]->SourceObjectName
             = "script"
         set reply->status_data->subeventstatus[1]->SourceObjectValue
             = "glb_get_patient_demog"
         set reply->status_data->subeventstatus[1]->SourceObjectQual
             = cnvtint(reply->encntr_id)
         set reply->status_data->subeventstatus[1]->OperationName
             = "select"
         set reply->status_data->subeventstatus[1]->OperationStatus
             = "F"
         set reply->status_data->subeventstatus[1]->TargetObjectName
             = "table"
         set reply->status_data->subeventstatus[1]->TargetObjectValue 
             = "person"
      else
         set reply->status_data->status = "T"
      endif

end
go      

;Generated by GNU enscript 1.6.4.
