 ;;Solution_Test/script/PathNet -- Gen Lab/glb_add_resend_log/glb_add_resend_log.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1997 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
/*****************************************************************************

        Source file name:       glb_add_resend_log.prg
        Object name:            glb_add_resend_log
        Request #:              250192

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        Logs a GL order or result resend 
                                to the dm_info table.

        Tables read:            None
       
        Tables updated:         dm_info

        Executing from:         glbAudits.exe

        Special Notes:          Script uses 7.9 where MAXREC statement!

******************************************************************************/
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 10/14/99 Chris Heil           Initial Release                     *
;~DE~************************************************************************
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

DROP   PROGRAM GLB_ADD_RESEND_LOG:DBA GO
CREATE PROGRAM GLB_ADD_RESEND_LOG:DBA 
 
%i CCLSOURCE:GLB_SCRIPT_LOGGING.INC

/***********************************************************************
 *   Request Record                                                    *
 ***********************************************************************/
/*
  record request
  (
      1 resend_type_flag      = i4
      1 orders_cnt            = i4
      1 max_task_assay_cnt    = i4
      1 orders_qual[*]
         2 order_id           = f8
         2 task_assay_cnt     = i4
         2 task_assay_qual[*]
            3 task_assay_cd   = f8
            3 ref_nbr         = vc
  )
*/

/***********************************************************************
 *   Reply Record                                                      *
 ***********************************************************************/
  record reply
  (
%i cclsource:status_block.inc
  )

/***********************************************************************
 * Declare Constants                                                   *
 ***********************************************************************/
  set RESEND_RESULT_POST = 0
  set RESEND_ORDER_COMPLETE = 1

/***********************************************************************
 * Declare Variables                                                   *
 ***********************************************************************/
  set failed = "F"
  set reply->status_data->status = "F"
  set log_program_name = "GLB_UPD_RESEND_LOG"

/***************************************************************************
 *  Write audit row for resubmission.                                      *
 ***************************************************************************/
  if (request->resend_type_flag = RESEND_RESULT_POST)
    ;* Insert audit row for result reposting
    insert into (dummyt d1 with seq = value(request->orders_cnt)),
                (dummyt d2 with seq = value(request->max_task_assay_cnt)),
                dm_info dm set
      dm.info_domain   = "PATHNET GENERAL LAB: RESEND RESULT TO CLINICAL EVENTS",
      dm.info_name     = trim(request->orders_qual[d1.seq]->task_assay_qual[d2.seq]->ref_nbr),
      dm.updt_cnt      = 0,
      dm.updt_dt_tm    = cnvtdatetime(curdate,curtime3),
      dm.updt_id       = reqinfo->updt_id,
      dm.updt_task     = reqinfo->updt_task,
      dm.updt_applctx  = reqinfo->updt_applctx
    plan d1
      where MAXREC(d2, request->orders_qual[d1.seq]->task_assay_cnt) > 0
    join d2
    join dm
    with nocounter

    if (ERROR_MESSAGE(1) = 1)
      go to script_error
    endif
  elseif (request->resend_type_flag = RESEND_ORDER_COMPLETE)
    ;* Insert audit row for order completion
    insert into (dummyt d1 with seq = value(request->orders_cnt)),
                dm_info dm set
      dm.info_domain   = "PATHNET GENERAL LAB: RESEND ORDER COMPLETION",
      dm.info_name     = trim(cnvtstring(request->orders_qual[d1.seq]->order_id,19,0)),
      dm.updt_cnt      = 0,
      dm.updt_dt_tm    = cnvtdatetime(curdate,curtime3),
      dm.updt_id       = reqinfo->updt_id,
      dm.updt_task     = reqinfo->updt_task,
      dm.updt_applctx  = reqinfo->updt_applctx
    plan d1
    join dm
    with nocounter

    if (ERROR_MESSAGE(1) = 1)
      go to script_error
    endif    
  endif

  go to exit_script
/***********************************************************************
 *   Error handling routines.                                          *
 ***********************************************************************/
#script_error
  set failed = "T"
  go to exit_script

/***********************************************************************
 *   exit_script                                                       *
 ***********************************************************************/
#exit_script
  if (failed = "F")
    set reply->status_data->status = "S"
    set reqinfo->commit_ind = 1
  endif

   call uar_SysDestroyHandle(hSys)
end go

;Generated by GNU enscript 1.6.4.
