 ;;Solution_Test/script/Bedrock/bed_aud_gl_word_templates/bed_aud_gl_word_templates.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       bed_aud_gl_word_templates.prg
        Object name:            bed_aud_gl_word_templates
        Request #:
 
        Product Team:
 
        Program purpose:
 
        Tables read:
 
        Tables updated:         none
 
        Executing from:         Bedrock Reports
 
        Special Notes:          none
 
******************************************************************************/
 
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     000 02/06/09 Kelli Wade			Initial Release                     *
;     001 10/20/09 Devi P               Show as "All Facilities" if         *
;										word processing template is         *
;								 		tied to no facilities               *
;~DE~************************************************************************
 
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program bed_aud_gl_word_templates go
create program bed_aud_gl_word_templates
 
if (not (validate (request,0)))
 record request
  (
    1 program_name = vc
    1 skip_volume_check_ind = i2
    1 output_filename = vc
    1 paramlist[*]
      2 param_type_mean = vc
      2 pdate1 = dq8
      2 pdate2 = dq8
      2 vlist[*]
        3 dbl_value = f8
        3 string_value = vc
  )
endif
 
if (not(validate(reply,0)))
 record reply
  (
    1  collist[*]
      2  header_text = vc
      2  data_type = i2
      2  hide_ind = i2
    1  rowlist[*]
      2 celllist[*]
        3 date_value = dq8
        3 nbr_value = i4
        3 double_value = f8
        3 string_value = vc
        3 display_flag = i2 ;0-regular,1-bold,2-???
    1  high_volume_flag = i2
    1  output_filename = vc
    1  run_status_flag = i2
    1  statlist[*]
       2 statistic_meaning = vc
       2 status_flag = i2
       2 qualifying_items = i4
       2 total_items = i4
    1  status_data
      2  status  =  C1
      2  SUBEVENTSTATUS [ 1 ]
        3  OPERATIONNAME  =  C15
        3  OPERATIONSTATUS  =  C1
        3  TARGETOBJECTNAME  =  C15
        3  TARGETOBJECTVALUE  =  C100
  )
endif
 
 
 
 
free record templates
record templates
(
	1 qual[*]
		2 template_id = f8
		2 short_desc = vc
		2 long_desc = vc
		2 template_type = vc
		2 long_text_id = f8
		2 long_text = vc
		2 orgs = vc
		2 font = vc
		2 font_size = i2
		2 person_id = f8				;001
		2 pdisp = vc					;001
)
 
 
 
 
Declare InBuffer = vc
Declare InBufLen = i4
Declare OutBuffer = c1000 with NoConstant("")
Declare OutBufLen = i4 with NoConstant(1000)
Declare RetBufLen = i4 with NoConstant(0)
Declare bFlag = i4 with NoConstant(0)
Declare orgs = vc
 
 
 
 
 
declare activity_code_value = f8
select into "NL:"
	cv.code_value
from code_value cv
where cv.cdf_meaning = "GLB"
  and cv.code_set = 106
  and cv.active_ind = 1
detail
	activity_code_value = cv.code_value
with nocounter
 
 
 
 
declare template_type_cd = f8
declare letter_type_cd = f8
select into "NL:"
	cv.code_value
from code_value cv
where cv.cdf_meaning in ("TEMPLATE","LETTER")
  and cv.code_set = 1303
  and cv.active_ind = 1
detail
	if (cv.cdf_meaning = "TEMPLATE")
		template_type_cd = cv.code_value
	elseif (cv.cdf_meaning = "LETTER")
		letter_type_cd = cv.code_value
	endif
with nocounter
 
 
 
 
 
 
set high_volume_cnt = 0
if (request->skip_volume_check_ind = 0)
  select into "nl:"
    hv_cnt = count(*)
  from wp_template wt
  plan wt
	where wt.template_type_cd in (template_type_cd, letter_type_cd)
	and wt.activity_type_cd = activity_code_value
  detail
    high_volume_cnt = hv_cnt
  with nocounter
 
  call echo(high_volume_cnt)
 
  if (high_volume_cnt > 2500)
    set reply->high_volume_flag = 2
    go to exit_script
  elseif (high_volume_cnt > 1750)
    set reply->high_volume_flag = 1
    go to exit_script
  endif
endif
 
 
 
 
 
 
 
 
 
set stat = alterlist(reply->collist,8)				;001 7)
set reply->collist[1].header_text ="template_id"
set reply->collist[1].data_type = 2
set reply->collist[1].hide_ind = 1
set reply->collist[2].header_text ="Name"
set reply->collist[2].data_type = 1
set reply->collist[2].hide_ind = 0
set reply->collist[3].header_text ="Description"
set reply->collist[3].data_type = 1
set reply->collist[3].hide_ind = 0
set reply->collist[4].header_text ="Letter or Template"
set reply->collist[4].data_type = 1
set reply->collist[4].hide_ind = 0
set reply->collist[5].header_text ="long_text_id"
set reply->collist[5].data_type = 2
set reply->collist[5].hide_ind = 1
set reply->collist[6].header_text ="Template Text"
set reply->collist[6].data_type = 1
set reply->collist[6].hide_ind = 0
set reply->collist[7].header_text ="Associated Facilities"			;001 "Associated Facility"
set reply->collist[7].data_type = 1
set reply->collist[7].hide_ind = 0
set reply->collist[8].header_text ="User"							;001
set reply->collist[8].data_type = 1									;001
set reply->collist[8].hide_ind = 0									;001
 
 
 
 
 
select into "NL:"
	wt.short_desc,
	org.org_name
from wp_template wt,
	long_text lt,
	filter_entity_reltn fer,
	organization org
plan wt
	where wt.template_type_cd in (template_type_cd, letter_type_cd)
	  and wt.activity_type_cd = activity_code_value
	  and wt.active_ind = 1
join lt
	where lt.parent_entity_id = wt.template_id
	  and lt.active_ind = 1
	  and lt.parent_entity_name = "WP_TEMPLATE_TEXT"
join fer
	where fer.parent_entity_id = outerjoin(wt.template_id)
join org
	where org.organization_id = outerjoin(fer.filter_entity1_id)
	  and org.active_ind = outerjoin(1)
order by wt.short_desc
head report
	cnt = 0
head wt.short_desc
	orgs = ""
	cnt = cnt + 1
	stat = alterlist(templates->qual,cnt)
	templates->qual[cnt].long_text = lt.long_text
	templates->qual[cnt].long_desc = wt.description
	templates->qual[cnt].long_text_id = lt.long_text_id
	templates->qual[cnt].short_desc = wt.short_desc
	templates->qual[cnt].template_id = wt.template_id
	if (wt.template_type_cd = template_type_cd)
		templates->qual[cnt].template_type= "Template"
	elseif (wt.template_type_cd = letter_type_cd)
		templates->qual[cnt].template_type= "Letter"
	endif
	templates->qual[cnt].person_id = wt.person_id				;001
detail
	if (orgs = "")
		orgs = org.org_name
	else
		orgs = build2(orgs,", ",org.org_name)
	endif
foot wt.short_desc
	templates->qual[cnt].orgs = orgs
with nocounter
 
;start 001
select into "nl:"
    from (dummyt d with seq = size(templates->qual,5)),
          prsnl p
    plan d where templates->qual[d.seq].person_id > 0
    join p where p.person_id = templates->qual[d.seq].person_id
             and p.active_ind = 1
    order by d.seq
    detail
      templates->qual[d.seq].pdisp = concat(trim(p.name_last_key),",",Trim(p.name_first_key))
    with nocounter
 
;end 001
 
 
set maxlist = size(templates->qual,5)
set cnt = 0
set stat = alterlist(reply->rowlist,maxlist)
while (cnt< maxlist)
 	set cnt = cnt+1
	set stat = alterlist(reply->rowlist[cnt].celllist,8)			;001 7)
 
	set outbuffer = ""
	set RetBufLen = 0
	set bflag = 1
	set outbuflen = 1000
	call uar_rtf(templates->qual[cnt].long_text, size(templates->qual[cnt].long_text), OutBuffer, OutBufLen, RetBufLen, bFlag)
 
	set reply->rowlist[cnt].celllist[1].double_value = templates->qual[cnt].template_id
	set reply->rowlist[cnt].celllist[2].string_value = templates->qual[cnt].short_desc
	set reply->rowlist[cnt].celllist[3].string_value = templates->qual[cnt].long_desc
	set reply->rowlist[cnt].celllist[4].string_value = templates->qual[cnt].template_type
	set reply->rowlist[cnt].celllist[5].double_value = templates->qual[cnt].long_text_id
	set reply->rowlist[cnt].celllist[6].string_value = OutBuffer
	if (templates->qual[cnt].orgs = " ")									;001
	set reply->rowlist[cnt].celllist[7].string_value = "All Facilities"		;001
	else																	;001
	set reply->rowlist[cnt].celllist[7].string_value = templates->qual[cnt].orgs
 	endif																	;001
 	set reply->rowlist[cnt].celllist[8].string_value = templates->qual[cnt].pdisp	;001																;001
endwhile
 
 
 
set reply->status_data->status = "S"
 
#exit_script
 
if (reply->high_volume_flag in (1,2))
  set reply->output_filename = build("genlab_word_templates_audit.csv")
endif
 
if (request->output_filename > " ")
  execute bed_rpt_file
endif
 
end
go
 
 
 
 
 
 
 
 

;Generated by GNU enscript 1.6.4.
