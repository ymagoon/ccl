 ;;Solution_Test/script/PathNet -- Common Services/Accession/ACC_GET_SETUP.PRG Turn on black mode

;;--------------------------------------------------------------------------------------------------------------------;;
;; File: acc_get_setup.prg                                                                                            ;;
;; Description: Returns accession reference information.                                                              ;;
;; Request Nbr: 265074                                                                                                ;;
;;                                                                                                                    ;;
;;--------------------------------------------------------------------------------------------------------------------;;
;; Notes                                                                                                              ;;
;; ----- -------------------------------------------------------------------------------------------------------------;;
;;                                                                                                                    ;;
;;                                                                                                                    ;;
;;--------------------------------------------------------------------------------------------------------------------;;
;; Mod Date                  Feature    Description                                                                   ;;
;; --- -------- -----------  ---------- ------------------------------------------------------------------------------;;
;; 000 12/31/99 CERGYL             6255 File creation.                                                                ;;
;;--------------------------------------------------------------------------------------------------------------------;;

        drop program acc_get_setup:dba go
        create program acc_get_setup:dba
        
%I CCLSOURCE:PCS_SUBEVENT.INC

        if (not validate(reply, 0))
        
        record reply
        (
          1 site_code_length               = i4
          1 year_display_length            = i4
          1 julian_sequence_length         = i4
          1 prefix_sequence_length         = i4
          1 default_site_cd                = f8
          1 default_site_disp              = c40
          1 accept_future_days             = i4
          1 assign_future_days             = i4
          1 site_qual[*]
            2 site_prefix_cd               = f8
            2 site_prefix_disp             = c40
            2 format_qual[*]
              3 accession_format_cd        = f8
              3 accession_format_disp      = c40
              3 accession_format_mean      = c12
              3 accession_assign_pool_id   = f8
              3 activity_type_cd           = f8
              3 activity_type_disp         = c40
              3 activity_type_mean         = c12
          1 pool_qual[*]
            2 pool_id                      = f8
            2 description                  = vc
            2 initial_value                = f8
            2 increment_value              = f8
%I CCLSOURCE:STATUS_BLOCK.INC
        )

        endif
        
        set ACCESSION_SETUP_ID = 72696.00
        
        set reply->status_data->status = "P"
        set reply->site_code_length = 5
        set reply->julian_sequence_length = 6
        set reply->prefix_sequence_length = 7
        set reply->year_display_length = 4
        set reply->default_site_cd = 0
        set reply->accept_future_days = 30
        set reply->assign_future_days = 1825
        
        ;*
        ;* accession_setup
        ;*
        
        select into "nl:" a.accession_setup_id, assign_ind = nullind (a.assign_future_days), 
                          accept_ind = nullind (a.accept_future_days)
        from accession_setup a
        plan a
          where a.accession_setup_id = ACCESSION_SETUP_ID
        detail
          reply->site_code_length = a.site_code_length
          reply->julian_sequence_length = a.julian_sequence_length
          reply->prefix_sequence_length = a.alpha_sequence_length
          reply->year_display_length = a.year_display_length
          reply->default_site_cd = a.default_site_cd
          if (assign_ind = 0)
            reply->assign_future_days = a.assign_future_days
          endif

          if (accept_ind = 0)
            reply->accept_future_days = a.accept_future_days
          endif
        with nocounter
        
        if (curqual = 0)
          call subevent_add ("SELECT", "Z", "ACCESSION_SETUP", "ACCESSION_SETUP select failed")
          go to EXIT_SCRIPT
        endif
        
        ;*
        ;* accession_assign_xref / accession_assign_pool
        ;*
        
        select into "nl:" aax.site_prefix_cd, aax.accession_format_cd, aap.accession_assignment_pool_id
        from accession_assign_xref aax,
             accession_assign_pool aap
        plan aax
          where aax.accession_assignment_pool_id > 0
        join aap
          where aap.accession_assignment_pool_id = aax.accession_assignment_pool_id
        order
          aax.site_prefix_cd, aax.accession_format_cd
        
        head report
          site = 0
            
        head aax.site_prefix_cd
          site = site + 1
          format = 0
          if (site > size(reply->site_qual, 5))
            stat = alterlist(reply->site_qual, site + 10)
          endif
          reply->site_qual[site].site_prefix_cd = aax.site_prefix_cd
        
        detail
          format = format + 1
          if (format > size(reply->site_qual[site]->format_qual, 5))
            stat = alterlist(reply->site_qual[site]->format_qual, format + 10)
          endif
          
          reply->site_qual[site]->format_qual[format].accession_format_cd = aax.accession_format_cd
        
          reply->site_qual[site]->format_qual[format].accession_assign_pool_id = aax.accession_assignment_pool_id
          reply->site_qual[site]->format_qual[format].activity_type_cd = aax.activity_type_cd

          pool = 1
          while (pool > 0)
            if (pool > size (reply->pool_qual, 5))
              pool = 0
            else
              if (reply->pool_qual[pool].pool_id = aap.accession_assignment_pool_id)
                pool = -1
              else
                pool = pool + 1
              endif
            endif
          endwhile
     
          if (pool = 0)
            pool = size (reply->pool_qual, 5)
            pool = pool + 1
            stat = alterlist (reply->pool_qual, pool + 1)
            reply->pool_qual[pool].pool_id = aap.accession_assignment_pool_id
            reply->pool_qual[pool].description = aap.description
            reply->pool_qual[pool].initial_value = aap.initial_value
            reply->pool_qual[pool].increment_value = aap.increment_value
          endif

        foot aax.site_prefix_cd
          stat = alterlist(reply->site_qual[site]->format_qual, format)
             
        foot report
          stat = alterlist(reply->site_qual, site)
        with nocounter
        
        if (curqual = 0)
          call subevent_add ("SELECT", "Z", "ACCESSION_ASIGN_XREF / ACCESSION_ASSIGN_POOL", "Accession POOL lookup failed")
        endif
        
        #EXIT_SCRIPT
        
        if (size (reply->site_qual, 5) > 0)
          set reply->status_data->status = "S"
        endif
        
        end go

;Generated by GNU enscript 1.6.4.
