 ;;Solution_Test/script/ePathLink/PathNet General Lab - PathLink Scripts/glb_get_person_by_nurse_unit.prg Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1996 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       GLB_GET_PERSON_BY_NURSE_UNIT.PRG
        Object name:            GLB_GET_PERSON_BY_NURSE_UNIT
        Request #:              250140

        Product:                General Lab
        Product Team:           PathNet
        HNA Version:            500
        CCL Version:            4.0

        Program purpose:        This script returns a list of patients for a 
                                given nurse_unit.

        Tables read:            encntr_domain

        Tables updated:         None
        Executing from:         

        Special Notes:          None

******************************************************************************/

;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;    *000 01/15/98  Chad Moats          Initial Release                     *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************

             drop program GLB_GET_PERSON_BY_NURSE_UNIT:dba go    
             create program GLB_GET_PERSON_BY_NURSE_UNIT:dba
     
      /***********************************************************************
      * Request Record                                                       *
      ***********************************************************************/
      /*
      record request
      (
         1  qual[*]
            2  loc_nurse_unit_cd              = f8
      )
      */

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/

      record person
      ( 
         1  persons[*]
            2  person_id                 = f8
      )

      /***********************************************************************
      * Reply Record                                                         *
      ***********************************************************************/

      record reply
      ( 
         1  qual[*]
            2  person_id                 = f8
            2  name_last_key             = vc
            2  name_first_key            = vc
            2  name_full_formatted       = vc
            2  birth_dt_tm               = dq8
            2  sex_cd                    = f8
            2  sex_disp                  = vc
            2  sex_mean                  = c12
            2  alias                     = vc
%i cclsource:status_block.inc
      )

      /***********************************************************************
      * Script                                                               *
      ***********************************************************************/
      #Script
         declare p_cnt                    = i4
         declare q_cnt                    = i4
         declare alias_type_mrn_cd        = f8
         set alias_type_mrn_cd            = 0
         declare encntr_domain_type_cd    = f8
         set encntr_domain_type_cd        = 0
         set p_cnt                        = 0
         set q_cnt                        = 0
         set reply->status_data.status    = "F"
         set sErrorMsg = FILLSTRING(255," ")    ;string containing error message
         set error_check = ERROR(sErrorMsg,1)   ;reset error queue to empty


      /***********************************************************************
      * Get alias type code value for medical record number                  *
      ***********************************************************************/

         select into "nl:"
           cv.code_value
         from code_value cv
         where cv.code_set = 4 and
               cv.cdf_meaning = "MRN" and
               cv.active_ind = 1 
         detail
           alias_type_mrn_cd = cv.code_value
         with nocounter

     /***********************************************************************
      * Get encntr domain type cd                                            *
      ***********************************************************************/

         select into "nl:"
           cv.code_value
         from code_value cv
         where cv.code_set = 339 and
               cv.cdf_meaning = "CENSUS" and
               cv.active_ind = 1 
         detail
           encntr_domain_type_cd = cv.code_value
         with nocounter

      /***********************************************************************
      * Get Person List from encntr_domain table                             *
      ***********************************************************************/

         select into "nl:"
           ed.person_id
         from 
           encntr_domain ed
         plan ed
           ;where ed.loc_facility_cd = request->loc_facility_cd and
           where ed.loc_nurse_unit_cd = request->loc_nurse_unit_cd and
                 ed.encntr_domain_type_cd = encntr_domain_type_cd and
                 ed.active_ind = 1
         head ed.person_id
           p_cnt = p_cnt + 1
           if (mod(p_cnt,5) = 1)
              stat =  alterlist(person->persons,p_cnt + 5)
           endif        
           person->persons[p_cnt].person_id = ed.person_id
         detail
           p_cnt = p_cnt + 0
         with nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif

         if (curqual = 0)
           go to no_person_found
         else
           set stat = alterlist(person->persons, p_cnt)
         endif

      /***********************************************************************
      * Select person information based on person_id                         *
      ***********************************************************************/
          select into "nl:"
            p.person_id,
            p.person_type_cd,
            p.name_last_key,
            p.name_first_key,
            p.name_full_formatted,
            p.sex_cd
          from
            person p,
            (dummyt d1 with seq = value(p_cnt))
          plan d1
          join p
            where p.person_id = person->persons[d1.seq].person_id          
          order 
             p.name_full_formatted
;            p.name_last_key,
;            p.name_first_key,
;            p.person_id
          detail         
            q_cnt = q_cnt + 1
            if (mod(q_cnt,5) = 1)
               stat =  alterlist(reply->qual,q_cnt + 5)
            endif        
            reply->qual[q_cnt].person_id = p.person_id
            reply->qual[q_cnt].name_last_key = p.name_last_key
            reply->qual[q_cnt].name_first_key = p.name_first_key
            reply->qual[q_cnt].name_full_formatted = p.name_full_formatted
call echo(reply->qual[q_cnt].name_full_formatted,1)
            reply->qual[q_cnt].birth_dt_tm = p.birth_dt_tm
            reply->qual[q_cnt].sex_cd = p.sex_cd
;          foot report
;            stat = alterlist(reply->qual, q_cnt)
          with 
            nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif

         if (curqual = 0)
           go to no_person_found
         else
           set stat = alterlist(reply->qual, q_cnt)
         endif

      /***********************************************************************
      * Select person alias.                                                 *
      * NOTE: This was separated into 2 selects because the maxqual was      *
      *       conflicting with the order by clause.                          *
      ***********************************************************************/
          select into "nl:"
            d.seq,
            pa.alias
          from
             (dummyt d with seq = value(q_cnt)),
             person_alias pa
          plan d
          join pa where pa.person_id = reply->qual[d.seq].person_id
                    and pa.active_ind = 1 
                    and pa.person_alias_type_cd = alias_type_mrn_cd
          head report
             cnt = 0
          detail         
             cnt = d.seq,
             reply->qual[cnt].alias = cnvtalias(pa.alias, pa.alias_pool_cd)
          with 
             nocounter

         set error_check = ERROR(sErrorMsg,0)   ;get error message
         if (error_check != 0)
           set reply->status_data->status = "F"
           set reply->status_data->subeventstatus[1]->TargetObjectValue = sErrorMsg
           go to exit_script
         endif

         if (curqual = 0)
           go to no_person_found
         endif

         set reply->status_data->status = "S"
         go to exit_script

      /***********************************************************************
      * If no person was found on the encntr_domain table                    *
      ***********************************************************************/

         #no_person_found
           set reply->status_data->subeventstatus[1]->operationname = 
              "get"
           set reply->status_data->subeventstatus[1]->operationstatus = 
              "Z"
           set reply->status_data->subeventstatus[1]->targetobjectname = 
             "table"
           set reply->status_data->subeventstatus[1]->targetObjectValue = 
             "encntr_domain table"
           set reply->status_data->status = "Z"

           go to exit_script


        #exit_script
           end
           go      

;Generated by GNU enscript 1.6.4.
