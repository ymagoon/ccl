 ;;Solution_Test/script/Device Integration -- Robotics/Robotics/glb_get_robotics_av_transaction.prg Turn on black mode


/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *       Revision      (c) 1996-2005 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/

/*****************************************************************************

        Source file name:       glb_get_robotics_av_transaction.prg  
        Object name:            glb_get_robotics_av_trans
        Request #:              250204

        Product:                General Lab              
        Product Team:           Pathnet
        HNA Version:            500
        CCL Version:            4.0
        
        Program purpose:        Used by robotics_glbrtl server to receive the task_assay_cds,av_error_cds,etc passed to robotics when
                                results have been performed on an instrument.

        Tables read:            robotics_av_transaction
        Tables updated:         none
        Executing from:         robotics_glbrtl

        Special Notes:          None

******************************************************************************/

 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 06/12/00 Terry Weakley        Initial Release                     *
;     002 11/28/05 Michelle Miller      Declare av_error = f8               *
;~DE~************************************************************************


;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
drop program glb_get_robotics_av_trans:dba go
create program glb_get_robotics_av_trans:dba
/****************************************************************************
*       Request record                                                      *
*****************************************************************************/
/*
record request
(  1 robotics_av_transaction_id    = f8
)
*/

/****************************************************************************
*       Reply record                                                        *
*****************************************************************************/
record reply
(  1 robotics_av_transaction_id    = f8
   1 service_resource_cd           = f8
   1 nbr_of_assays                 = i4
   1 assay_list[*]                 
     2 task_assay_cd               = f8
     2 initial_ind                 = i2
     2 nbr_of_errors               = i4
     2 error_list[*]
        3 av_error_cd              = f8          
%i cclsource:status_block.inc
)

declare av_error                   = f8    with public,     noconstant(0.0)   ;002
declare task_assay                 = f8

/****************************************************************************
*       Initialize Variables                                                *
*****************************************************************************/
set reply->status_data->status = "F"
set idx = 0
set idy = 0
set task_assay = 0
;set av_error = 0                                                             ;002

select into "nl:"
   ra.*
   from robotics_av_transaction ra
      plan ra where ra.robotics_av_transaction_id = request->robotics_av_transaction_id
   
      order by ra.task_assay_cd, ra.av_error_cd
   detail

      if( task_assay = ra.task_assay_cd)
        if( av_error not = ra.av_error_cd)
          idy = idy + 1
          if( mod(idy,10) = 1)
             stat = alterlist(reply->assay_list[idx].error_list,idy+9)
          endif
          reply->assay_list[idx].nbr_of_errors = idy
          reply->assay_list[idx].error_list[idy].av_error_cd = ra.av_error_cd
        endif
      else
         
        if( idx = 0 )
            reply->robotics_av_transaction_id = ra.robotics_av_transaction_id
            reply->service_resource_cd = ra.service_resource_cd
        else
            stat = alterlist(reply->assay_list[idx].error_list,idy) 
            reply->assay_list[idx].nbr_of_errors = idy
        endif
        idy = 0
        task_assay = ra.task_assay_cd
        idx = idx + 1
        if( mod(idx,10) = 1)
           stat = alterlist(reply->assay_list,idx+9) 
        endif
        reply->assay_list[idx].task_assay_cd = ra.task_assay_cd
        reply->assay_list[idx].initial_ind = ra.initial_ind
        idy = idy + 1
        if( mod(idy,10) = 1)
           stat = alterlist(reply->assay_list[idx].error_list,idy+9)
        endif
        reply->assay_list[idx].error_list[idy].av_error_cd = ra.av_error_cd
      endif
      av_error = ra.av_error_cd
   with nocounter

set stat = alterlist(reply->assay_list,idx)
set reply->nbr_of_assays = idx
set stat = alterlist(reply->assay_list[idx].error_list,idy)
set reply->assay_list[idx].nbr_of_errors = idy

/* For debug print out reply info */

      call echo(build('robotics_av_transaction_id: ', reply->robotics_av_transaction_id))
      call echo(build('service_resource_cd:        ', reply->service_resource_cd))
      call echo(build('nbr_of_assays:              ', reply->nbr_of_assays))
for( idx = 1 to reply->nbr_of_assays)
      call echo(build('___task_assay_cd:           ', reply->assay_list[idx].task_assay_cd))
      call echo(build('___initial_ind:             ', reply->assay_list[idx].initial_ind))
      call echo(build('___nbr_of_errors:           ', reply->assay_list[idx].nbr_of_errors))
   for( idy = 1 to reply->assay_list[idx].nbr_of_errors)
      call echo(build('______av_error_cd:          ', reply->assay_list[idx].error_list[idy].av_error_cd))
   endfor
endfor   

if (curqual = 0)
  set reqinfo->commit_ind = 0
else
  set reqinfo->commit_ind = 1
  set reply->status_data->status = "S"
endif

end go

;Generated by GNU enscript 1.6.4.
