 ;;Solution_Test/script/PathNet -- Gen Lab/glb_get_child_srs/glb_get_child_srs.inc Turn on black mode

/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
;~DB~*************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG               *
;    *************************************************************************
;    *                                                                       *
;    *Mod Date     Engineer             Comment                              *
;    *--- -------- -------------------- -----------------------------------  *
;     000 11/08/04 Kevin Weisgerber     Initial Creation                     *
/****************************************************************************/
 
/**************************************************************
; DVDev DECLARED RECORD STRUCTURE'S
**************************************************************/
 
 RECORD test_site
      (
        1 qual[*]
        	2 service_resource_cd = f8
      )
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
DECLARE lTSCount                              = i4 with protect, noconstant(0)
DECLARE dGetChildSRsIncSubsectionTypeCd       = f8 with protect, noconstant(0.0)
DECLARE dGetChildSRsIncSectionTypeCd          = f8 with protect, noconstant(0.0)
declare sCodeMeaning                          = vc with protect, noconstant(" ")

SET dGetChildSRsIncSubsectionTypeCd = UAR_GET_CODE_BY("MEANING", 223, "SUBSECTION")
 
SET dGetChildSRsIncSectionTypeCd = UAR_GET_CODE_BY("MEANING", 223, "SECTION")

 
DECLARE LoadChildSRs(dServiceResourceCd = f8) = null 

/**************************************************************
; DVDev Start Coding
**************************************************************/

SUBROUTINE LoadChildSRs(dServiceResourceCd)
 
	SET sCodeMeaning = UAR_GET_CODE_MEANING(dServiceResourceCd)
	IF (sCodeMeaning = "SUBSECTION")
 
		SELECT INTO "nl:"
			rg.parent_service_resource_cd,
      rg.child_service_resource_cd
 
		FROM
			resource_group rg
 
		WHERE
			rg.parent_service_resource_cd = dServiceResourceCd
		  AND rg.resource_group_type_cd = dGetChildSRsIncSubsectionTypeCd
			AND rg.root_service_resource_cd+0 = 0.0
 
		ORDER BY
			rg.parent_service_resource_cd,
			rg.child_service_resource_cd
 
		HEAD rg.parent_service_resource_cd
         lTSCount = lTSCount + 1
         IF (lTSCount > SIZE(test_site->qual, 5))
           stat = alterlist(test_site->qual, lTSCount + 9)
         ENDIF
         test_site->qual[lTSCount].service_resource_cd = rg.parent_service_resource_cd
 
    HEAD rg.child_service_resource_cd
         lTSCount = lTSCount + 1
         IF (lTSCount > SIZE(test_site->qual, 5))
           stat = alterlist(test_site->qual, lTSCount + 9)
         ENDIF
         test_site->qual[lTSCount].service_resource_cd = rg.child_service_resource_cd
 
    WITH NOCOUNTER
 
  ELSEIF (sCodeMeaning = "SECTION")
 
    SELECT INTO "nl:"
      rg1.parent_service_resource_cd,
      rg2.parent_service_resource_cd,
      rg2.child_service_resource_cd
 
    FROM
      resource_group rg1,  ;sect,
      resource_group rg2   ;subsect
 
    PLAN rg1 WHERE rg1.resource_group_type_cd =
                       dGetChildSRsIncSectionTypeCd
             AND rg1.parent_service_resource_cd =
                       dServiceResourceCd
             AND rg1.root_service_resource_cd+0 = 0.0
 
    JOIN rg2 WHERE rg2.parent_service_resource_cd =
                       rg1.child_service_resource_cd
             AND rg2.resource_group_type_cd =
                       dGetChildSRsIncSubsectionTypeCd
             AND rg2.root_service_resource_cd+0 = 0.0
 
    ORDER BY
      rg2.parent_service_resource_cd, 
      rg2.child_service_resource_cd
 
    HEAD rg2.parent_service_resource_cd
      lTSCount = lTSCount + 1
      IF (lTSCount > SIZE(test_site->qual, 5))
        stat = alterlist(test_site->qual, lTSCount + 9)
      ENDIF
      test_site->qual[lTSCount].service_resource_cd = rg2.parent_service_resource_cd
 
    HEAD rg2.child_service_resource_cd
      lTSCount = lTSCount + 1
      IF (lTSCount > SIZE(test_site->qual, 5))
        stat = alterlist(test_site->qual, lTSCount + 9)
      ENDIF
      test_site->qual[lTSCount].service_resource_cd = rg2.child_service_resource_cd
 
    WITH NOCOUNTER 
 
  ELSE
    SET lTSCount = lTSCount + 1
    SET stat = alterlist(test_site->qual, lTSCount)
    SET test_site->qual[lTSCount].service_resource_cd = dServiceResourceCd
 
  ENDIF

  IF (lTSCount > 0)
    set stat = alterlist(test_site->qual, lTSCount)
  ENDIF
    
end

;Generated by GNU enscript 1.6.4.
