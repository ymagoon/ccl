(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("MPageFusion"), require("Gaia"));
	else if(typeof define === 'function' && define.amd)
		define(["MPageFusion", "Gaia"], factory);
	else if(typeof exports === 'object')
		exports["gaia-plugin-contentserver"] = factory(require("MPageFusion"), require("Gaia"));
	else
		root["gaia-plugin-contentserver"] = factory(root["MPageFusion"], root["Gaia"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_4__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var FormTextBox = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["composite"].form.FormTextBox;
var Button = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].button.Button;
var emitUsingProp = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["helpers"].props.emitUsingProp;


var ALIAS_CHANGE = "AddFolder::AliasChange";
var PATH_CHANGE = "AddFolder::PathChange";
var ADD_CLICK = "AddFolder::AddClick";

var AddFolder = function (_Fusion$UIComponent) {
    _inherits(AddFolder, _Fusion$UIComponent);

    function AddFolder() {
        _classCallCheck(this, AddFolder);

        return _possibleConstructorReturn(this, _Fusion$UIComponent.apply(this, arguments));
    }

    AddFolder.prototype.initialProps = function initialProps() {
        return {
            alias: "",
            path: "",
            addEventName: "AddFolder::Add"
        };
    };

    AddFolder.prototype.createChildren = function createChildren() {
        return [{
            alias: new FormTextBox({
                display: "Alias",
                valueChangeEventName: ALIAS_CHANGE
            })
        }, {
            path: new FormTextBox({
                display: "Relative or absolute path",
                valueChangeEventName: PATH_CHANGE
            })
        }, {
            add: new Button({
                display: "Add",
                clickEventName: ADD_CLICK
            })
        }];
    };

    AddFolder.prototype.afterCreate = function afterCreate() {
        var _this2 = this;

        this.on(ALIAS_CHANGE, function (source, value) {
            return _this2.setProp("alias", value.value);
        });
        this.on(PATH_CHANGE, function (source, value) {
            return _this2.setProp("path", value.value);
        });
        this.on(ADD_CLICK, function () {
            _this2.emit(_this2.getProp("addEventName"), {
                alias: _this2.getProp("alias"),
                path: _this2.getProp("path")
            });
        });
    };

    AddFolder.prototype.view = function view(el, props, children, mChildren) {
        return this.renderChildren();
    };

    return AddFolder;
}(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__["UIComponent"]);

/* harmony default export */ __webpack_exports__["a"] = (AddFolder);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__FolderList__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__AddFolder__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_Gaia__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_Gaia___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_Gaia__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var forwardProp = MPageFusion.helpers.props.forwardProp;

var BannerItem = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["composite"].banner.BannerItem;

var ADD_EVENT = "ContentServer::Add";
var DELETE_EVENT = "ContentServer::Delete";

var retrieveFolders = function retrieveFolders(control) {
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_Gaia__["runCommand"])("contentserver", "allFolders").then(function (folders) {
        return control.setProp("folders", folders).update();
    });
};

var ContentServerUI = function (_Fusion$UIComponent) {
    _inherits(ContentServerUI, _Fusion$UIComponent);

    function ContentServerUI() {
        _classCallCheck(this, ContentServerUI);

        return _possibleConstructorReturn(this, _Fusion$UIComponent.apply(this, arguments));
    }

    ContentServerUI.prototype.initialProps = function initialProps() {
        return {
            folders: {}
        };
    };

    ContentServerUI.prototype.propChangeHandlers = function propChangeHandlers() {
        return {
            folders: forwardProp(this, "folders", "folderList")
        };
    };

    ContentServerUI.prototype.createChildren = function createChildren() {
        return [{
            banner: new BannerItem({
                title: "Content will be served from",
                description: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_Gaia__["routeUrl"])("contentserver", "content") + "/[alias]",
                enableDismissClick: false
            })
        }, {
            addFolder: new __WEBPACK_IMPORTED_MODULE_2__AddFolder__["a" /* default */]({
                addEventName: ADD_EVENT
            })
        }, {
            folderList: new __WEBPACK_IMPORTED_MODULE_1__FolderList__["a" /* default */]({
                deleteEventName: DELETE_EVENT
            })
        }];
    };

    ContentServerUI.prototype.afterCreate = function afterCreate() {
        var _this2 = this;

        retrieveFolders(this);

        this.on(ADD_EVENT, function (folder) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_Gaia__["runCommand"])("contentserver", "addFolder", folder).then(function () {
                return retrieveFolders(_this2);
            });
        });

        this.on(DELETE_EVENT, function (alias) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_Gaia__["runCommand"])("contentserver", "removeFolder", {
                alias: alias
            }).then(function () {
                return retrieveFolders(_this2);
            });
        });
    };

    ContentServerUI.prototype.view = function view(el) {
        return el("div", { class: "gaia-root-section" }, this.renderChildren());
    };

    return ContentServerUI;
}(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__["UIComponent"]);

;

/* harmony default export */ __webpack_exports__["default"] = ({
    label: "Content Server",
    control: ContentServerUI,
    showHelp: true
});

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AddFolder__ = __webpack_require__(1);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var Button = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].button.Button;

var Table = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].table.Table;

var DELETE_CLICK = "FolderList::DeleteClick";

var FolderList = function (_Fusion$UIComponent) {
    _inherits(FolderList, _Fusion$UIComponent);

    function FolderList() {
        _classCallCheck(this, FolderList);

        return _possibleConstructorReturn(this, _Fusion$UIComponent.apply(this, arguments));
    }

    FolderList.prototype.initialProps = function initialProps() {
        return {
            folders: {},
            deleteEventName: "FolderList::Delete"
        };
    };

    FolderList.prototype.propChangeHandlers = function propChangeHandlers() {
        var _this2 = this;

        return {
            folders: function folders(_folders) {
                return _this2.getChild("table").setProp("rows", Object.keys(_folders).map(function (alias) {
                    return {
                        key: alias,
                        data: [{ display: alias }, { display: _folders[alias] }, { content: [new Button({
                                display: "Delete",
                                clickEventName: DELETE_CLICK,
                                _alias: alias
                            })] }]
                    };
                }));
            }
        };
    };

    FolderList.prototype.afterCreate = function afterCreate() {
        var _this3 = this;

        this.on(DELETE_CLICK, function (button) {
            _this3.emit(_this3.getProp("deleteEventName"), button.getProp("_alias"));
        });
    };

    FolderList.prototype.createChildren = function createChildren() {
        return [{
            table: new Table({
                columns: [{ display: "Alias", key: "alias" }, { display: "Path", key: "path" }, { display: "", key: "actions" }]
            })
        }];
    };

    FolderList.prototype.view = function view(el, props, children, mChildren) {
        return this.renderChildren();
    };

    return FolderList;
}(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__["UIComponent"]);

/* harmony default export */ __webpack_exports__["a"] = (FolderList);

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(2);


/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,