(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("MPageFusion"), require("Gaia"));
	else if(typeof define === 'function' && define.amd)
		define(["MPageFusion", "Gaia"], factory);
	else if(typeof exports === 'object')
		exports["gaia-plugin-linter"] = factory(require("MPageFusion"), require("Gaia"));
	else
		root["gaia-plugin-linter"] = factory(root["MPageFusion"], root["Gaia"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_10__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Gaia__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Gaia___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_Gaia__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_Linter_less__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_Linter_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__styles_Linter_less__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styles_LoadSpinner_less__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styles_LoadSpinner_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__styles_LoadSpinner_less__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ReportBanner__ = __webpack_require__(4);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var BannerItem = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["composite"].banner.BannerItem,
    FormCheckbox = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["composite"].form.FormCheckbox;
var Table = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].table.Table,
    LoadingSpinner = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].indicator.LoadingSpinner,
    Anchor = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].label.Anchor,
    Button = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].button.Button;


var SuccessIcon = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].icon.svg.alert.Success;
var ErrorIcon = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].icon.svg.alert.Error;
var WarningIcon = __WEBPACK_IMPORTED_MODULE_0_MPageFusion__["atomic"].icon.svg.alert.Warning;

// enum for the text in the severity column
var SEVERITY = {
    1: "Warning",
    2: "Error"
};

// enum for the color of the text in the severity column
var TEXT_SEVERITY_COLOR = {
    1: "linter-text-warning",
    2: "linter-text-error"
};

// enum for the color of the banner (based on highest level problem)
var BANNER_SEVERITY_COLOR = {
    0: "linter-perfect-colors",
    1: "linter-warning-colors",
    2: "linter-error-colors"
};

var CELL_ANCHOR_CLICK = "LINTER::CELL::ANCHOR::CLICK";

var PRIVATE_EVENTS = {
    RUN_LINTER: "Linter::runLinter",
    AUTOFIX_SELECTION_CHANGE: "Linter::autoFixSelectionChange"
};

/**
 * This function takes the key from the clicked cell and creates the relevant webpage link.
 * It will launch the ESLint rule webpage based on which rule is clicked.
 * @param {String} key The key from the clicked cell
 */
var clickCellLink = function clickCellLink(key) {
    return window.open("http://eslint.org/docs/rules/" + key, "_blank");
};

/**
 * This function parses through the JSON of a subsection and builds out the
 * values for each column for a row of data.
 * @param {Array} rowsJSON The JSON of a subsection of data
 * @returns {Array} The row data in a format the table can consume
 */
var parseRows = function parseRows(rowsJSON) {
    return rowsJSON.map(function (messages, index) {
        return {
            key: "row " + index,
            data: [{
                display: messages.line + ":" + messages.column
            }, {
                contentClassNames: TEXT_SEVERITY_COLOR[messages.severity],
                display: SEVERITY[messages.severity]
            }, {
                display: "" + messages.message
            }, {
                content: [new Anchor({
                    display: "" + messages.ruleId,
                    key: "" + messages.ruleId,
                    clickEventName: CELL_ANCHOR_CLICK
                })]
            }]
        };
    });
};

/**
 * Given a word and a count, append an s if count is not one.
 * @param {string} word A word in its singular form.
 * @param {int} count A number controlling whether word should be pluralized.
 * @returns {string} The original word with an s on the end if count is not one.
 */
var pluralize = function pluralize(word, count) {
    return count === 1 ? word : word + "s";
};

/**
 * Renders text along the template of x problems (x errors, x warnings)
 * @param {int} totalErrors Total errors
 * @param {int} totalWarnings Total warnings
 * @returns {string} The formatted string, pluralized where necessary
 */
var renderSummary = function renderSummary(totalErrors, totalWarnings) {
    var totalProblems = totalErrors + totalWarnings;
    var prefix = totalProblems + " " + pluralize("problem", totalProblems);

    return totalProblems !== 0 ? prefix + " (" + totalErrors + " " + pluralize("error", totalErrors) + ", " + totalWarnings + " " + pluralize("warning", totalWarnings) + ")" : prefix;
};

/**
 * Get the color based on whether there are errors/warnings
 * @param {int} totalErrors Total errors
 * @param {int} totalWarnings Total warnings
 * @returns {int} The color code (0 = green, 1 = yellow, 2 = red)
 */
var renderColor = function renderColor(totalErrors, totalWarnings) {
    return totalErrors && 2 || totalWarnings && 1 || 0;
};

/**
 * This function parses through the JSON of ESLint results and builds out a subsection
 * for each different file that was linted.
 * @param {Array} jsonResult The JSON of the ESLint results
 * @returns {Array} The subsections and their results for the table data
 */
var parseSubsections = function parseSubsections(jsonResult) {
    return jsonResult.filter(function (files) {
        return files.errorCount + files.warningCount;
    }).map(function (files, index) {
        return {
            display: files.filePath + " -- " + renderSummary(files.errorCount, files.warningCount),
            expand: false,
            key: "section " + index,
            rows: parseRows(files.messages)
        };
    });
};

/**
 * This function runs the linter command determineSrcPath and then returns that path
 * @param control The current control making the call
 * @returns {Promise} The path that was returned from determineSrcPath
 */
var checkConfigPath = function checkConfigPath(control) {
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_Gaia__["runCommand"])("linter", "determineSrcPath").then(function (path) {
        return Promise.resolve(path);
    });
};

/**
 * This function runs the linter command run and then updates the UI.
 * @param linter The current Linter object
 * @param path The path of files to be linted
 * @param autoFix The boolean value indicating the fix mode
 */
var runLinter = function runLinter(linter, _ref) {
    var lintPath = _ref.lintPath,
        _ref$autoFix = _ref.autoFix,
        autoFix = _ref$autoFix === undefined ? false : _ref$autoFix;

    linter.emit(__WEBPACK_IMPORTED_MODULE_1_Gaia__["EVENTS"].TAB_LABEL_CHANGE, {
        id: linter.getProp("id"),
        icon: new LoadingSpinner({
            isLoading: true,
            size: LoadingSpinner.SIZE.XSMALL
        })
    }).setProp("isRunning", true).update();

    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_Gaia__["runCommand"])("linter", "run", {
        srcDir: lintPath,
        webFlag: true,
        fix: autoFix
    }).then(function (resultObj) {
        linter.getChild("spinner").setProp("isLoading", false);
        linter.getChild("outputTable").setProp("subSections", parseSubsections(resultObj.results));
        linter.getChild("reportBanner").setProps({
            generatedDate: new Date().toString(),
            summaryText: renderSummary(resultObj.errorCount, resultObj.warningCount),
            bannerClasses: BANNER_SEVERITY_COLOR[renderColor(resultObj.errorCount, resultObj.warningCount)]
        });

        var issueCount = resultObj.warningCount + resultObj.errorCount;
        var issueIcon = issueCount && resultObj.errorCount > 0 ? new ErrorIcon() : new WarningIcon();
        linter.emit(__WEBPACK_IMPORTED_MODULE_1_Gaia__["EVENTS"].TAB_LABEL_CHANGE, {
            id: linter.getProp("id"),
            label: issueCount ? "MPages Linter (" + issueCount + ")" : "MPages Linter",
            icon: issueCount ? issueIcon : new SuccessIcon()
        });

        linter.setProps({
            isRunning: false,
            showTable: true
        });

        linter.update();
    }).catch(function (error) {
        var errMsg = error.message || error;
        console.log(errMsg);

        linter.getChild("spinner").setProp("isLoading", false);
        linter.getChild("alertBanner").setProp("description", errMsg);

        linter.setProps({
            showError: true,
            isRunning: false
        });

        linter.emit(__WEBPACK_IMPORTED_MODULE_1_Gaia__["EVENTS"].TAB_LABEL_CHANGE, {
            id: linter.getProp("id"),
            icon: null
        });

        linter.update();
    });
};

/**
 * @class Linter
 */

var Linter = function (_UIComponent) {
    _inherits(Linter, _UIComponent);

    function Linter() {
        _classCallCheck(this, Linter);

        return _possibleConstructorReturn(this, _UIComponent.apply(this, arguments));
    }

    Linter.prototype.initialProps = function initialProps() {
        return {
            showError: false,
            showTable: false,
            isRunning: false,
            isFixIssuesSelected: false
        };
    };

    Linter.prototype.createChildren = function createChildren() {
        return [{
            alertBanner: new BannerItem({
                description: "Something went wrong",
                type: BannerItem.TYPE.ERROR,
                enableDismissClick: true
            })
        }, {
            outputTable: new Table({
                columns: [{
                    display: "Line:Column",
                    key: "linecol"
                }, {
                    display: "Severity",
                    key: "severity"
                }, {
                    display: "Message",
                    key: "message",
                    sizeSpan: 4
                }, {
                    display: "Rule Id",
                    key: "rule"
                }],
                subSections: []
            })
        }, {
            spinner: new LoadingSpinner({
                isLoading: true,
                size: LoadingSpinner.SIZE.LARGE
            })
        }, {
            reportBanner: new __WEBPACK_IMPORTED_MODULE_4__ReportBanner__["a" /* default */]()
        }, {
            runLintingButton: new Button({
                type: Button.TYPE.SECONDARY,
                display: "Run Linter",
                clickEventName: PRIVATE_EVENTS.RUN_LINTER
            })
        }, {
            autoFixCheckbox: new FormCheckbox({
                display: "Fix Issues",
                valueChangeEventName: PRIVATE_EVENTS.AUTOFIX_SELECTION_CHANGE
            })
        }];
    };

    Linter.prototype.propChangeHandlers = function propChangeHandlers() {
        var _this2 = this;

        return {
            isRunning: function isRunning(_isRunning) {
                _this2.getChild("runLintingButton").setProp("disabled", _isRunning);
            }
        };
    };

    Linter.prototype.afterCreate = function afterCreate() {
        var _this3 = this;

        this.onUpstream(__WEBPACK_IMPORTED_MODULE_1_Gaia__["EVENTS"].STARTUP, function () {
            _this3.stopPropagation(__WEBPACK_IMPORTED_MODULE_1_Gaia__["EVENTS"].STARTUP);

            checkConfigPath(_this3).then(function (path) {
                runLinter(_this3, {
                    lintPath: path,
                    autoFix: _this3.getProp("isFixIssuesSelected")
                });
            });
        });

        // Click handler for the last cell in the tables to link to relevant eslint rule pages
        this.on(CELL_ANCHOR_CLICK, function (anchor, key) {
            return clickCellLink(key);
        });

        this.on(PRIVATE_EVENTS.RUN_LINTER, function () {
            checkConfigPath(_this3).then(function (path) {
                runLinter(_this3, {
                    lintPath: path,
                    autoFix: _this3.getProp("isFixIssuesSelected")
                });
            });
        });

        this.on(PRIVATE_EVENTS.AUTOFIX_SELECTION_CHANGE, function (context, _ref2) {
            var value = _ref2.value,
                isValid = _ref2.isValid;

            _this3.stopPropagation(PRIVATE_EVENTS.AUTOFIX_SELECTION_CHANGE);
            _this3.setProp("isFixIssuesSelected", value);
        });
    };

    Linter.prototype.view = function view(el, props, children, mappedChildren) {
        return el("div", { class: "linter-report-spacing" }, [props.showTable ? mappedChildren.reportBanner.render() : null, mappedChildren.spinner.render(), props.showError ? mappedChildren.alertBanner.render() : null, el("div", { class: "mpageui-u-flexgrid-row" }, [el("span", { class: "mpageui-u-pad-relative-tight" }, [mappedChildren.autoFixCheckbox.render()]), el("span", { class: "mpageui-u-pad-bottom-relative-base" }, [mappedChildren.runLintingButton.render()])]), props.showTable && mappedChildren.outputTable.getProp("subSections").length > 0 ? mappedChildren.outputTable.render() : null]);
    };

    return Linter;
}(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__["UIComponent"]);

/* harmony default export */ __webpack_exports__["default"] = ({
    label: "MPages Linter",
    control: Linter,
    showHelp: true
});

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_MPageFusion___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var classNames = __webpack_require__(5);


/**
 * @class ReportBanner
 */

var ReportBanner = function (_UIComponent) {
    _inherits(ReportBanner, _UIComponent);

    function ReportBanner() {
        _classCallCheck(this, ReportBanner);

        return _possibleConstructorReturn(this, _UIComponent.apply(this, arguments));
    }

    /**
     * @inheritDoc
     */
    ReportBanner.prototype.initialProps = function initialProps() {
        return {
            title: "ESLint Report",
            defaultBannerClass: "linter-report-banner",
            bannerClasses: "linter-error-colors",
            summaryText: "99 problems",
            generatedDate: "when?",
            subtitleClass: "linter-report-subtitle"
        };
    };

    /**
     * @inheritDoc
     */


    ReportBanner.prototype.view = function view(el, props) {
        var _classNames;

        return el("div", { class: classNames((_classNames = {}, _defineProperty(_classNames, props.defaultBannerClass, true), _defineProperty(_classNames, props.bannerClasses, props.bannerClasses.length > 0), _classNames)) }, [el("h1", {}, props.title), el("p", { class: props.subtitleClass }, props.summaryText + " - Generated on " + props.generatedDate)]);
    };

    return ReportBanner;
}(__WEBPACK_IMPORTED_MODULE_0_MPageFusion__["UIComponent"]);

/* harmony default export */ __webpack_exports__["a"] = (ReportBanner);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, ".linter-text-error {\n  font-weight: 700;\n  color: #b94a48;\n}\n.linter-text-warning {\n  font-weight: 700;\n  color: #f0ad4e;\n}\n.linter-error-colors {\n  background-color: #f2dede;\n  color: #b94a48;\n}\n.linter-warning-colors {\n  background-color: #fcf8e3;\n  color: #f0ad4e;\n}\n.linter-perfect-colors {\n  background-color: #dff0d8;\n  color: #468847;\n}\n.linter-report-banner {\n  min-height: 70px;\n  text-align: left;\n  padding: 25px;\n  margin-bottom: 20px;\n}\n.linter-report-subtitle {\n  font-size: 17px;\n}\n.linter-report-spacing {\n  margin-bottom: 20px;\n}\n", ""]);

// exports


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, ".mpageui-LoadingSpinner-icon--lg {\n  font-size: 0.6rem;\n  width: 0.5rem;\n  height: 0.5rem;\n  border-radius: 1rem;\n  margin: auto;\n  -webkit-animation: mpageui-spinner-lg 1s infinite ease;\n  animation: mpageui-spinner-lg 1s infinite ease;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n@-webkit-keyframes mpageui-spinner-lg {\n  0%,\n  100% {\n    box-shadow: 0em -2em 0em 0em #515456, 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.5), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.7), 1.4em -1.4em 0 0em #515456, 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.5), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.7), 1.9em 0em 0 0em #515456, 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.5), 1.9em 0em 0 0em rgba(81, 84, 86, 0.7), 1.4em 1.4em 0 0em #515456, 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.5), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.7), 0em 1.9em 0 0em #515456, -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.5), 0em 1.9em 0 0em rgba(81, 84, 86, 0.7), -1.4em 1.4em 0 0em #515456, -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.5), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.7), -2em 0em 0 0em #515456, -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.5), -2em 0em 0 0em rgba(81, 84, 86, 0.7), -1.4em -1.4em 0 0em #515456;\n  }\n}\n@keyframes mpageui-spinner-lg {\n  0%,\n  100% {\n    box-shadow: 0em -2em 0em 0em #515456, 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.5), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.7), 1.4em -1.4em 0 0em #515456, 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.5), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.7), 1.9em 0em 0 0em #515456, 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.5), 1.9em 0em 0 0em rgba(81, 84, 86, 0.7), 1.4em 1.4em 0 0em #515456, 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.5), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.7), 0em 1.9em 0 0em #515456, -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.5), 0em 1.9em 0 0em rgba(81, 84, 86, 0.7), -1.4em 1.4em 0 0em #515456, -2em 0em 0 0em rgba(81, 84, 86, 0.2), -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.5), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.7), -2em 0em 0 0em #515456, -1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -2em 0em 0em rgba(81, 84, 86, 0.2), 1.4em -1.4em 0 0em rgba(81, 84, 86, 0.2), 1.9em 0em 0 0em rgba(81, 84, 86, 0.2), 1.4em 1.4em 0 0em rgba(81, 84, 86, 0.2), 0em 1.9em 0 0em rgba(81, 84, 86, 0.2), -1.4em 1.4em 0 0em rgba(81, 84, 86, 0.5), -2em 0em 0 0em rgba(81, 84, 86, 0.7), -1.4em -1.4em 0 0em #515456;\n  }\n}\n.mpageui-LoadingSpinner-icon--md {\n  font-size: 0.6rem;\n  width: 0.35rem;\n  height: 0.35rem;\n  border-radius: 1rem;\n  margin: auto;\n  -webkit-animation: mpageui-spinner-md 1s infinite ease;\n  animation: mpageui-spinner-md 1s infinite ease;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n@-webkit-keyframes mpageui-spinner-md {\n  0%,\n  100% {\n    box-shadow: 0em -1.4em 0em 0em #515456, 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.5), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.7), 0.95em -0.95em 0 0em #515456, 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.5), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.7), 1.3em 0em 0 0em #515456, 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.5), 1.3em 0em 0 0em rgba(81, 84, 86, 0.7), 0.95em 0.95em 0 0em #515456, 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.5), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.7), 0em 1.3em 0 0em #515456, -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.5), 0em 1.3em 0 0em rgba(81, 84, 86, 0.7), -0.95em 0.95em 0 0em #515456, -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.5), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.7), -1.4em 0em 0 0em #515456, -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.5), -1.4em 0em 0 0em rgba(81, 84, 86, 0.7), -0.95em -0.95em 0 0em #515456;\n  }\n}\n@keyframes mpageui-spinner-md {\n  0%,\n  100% {\n    box-shadow: 0em -1.4em 0em 0em #515456, 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.5), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.7), 0.95em -0.95em 0 0em #515456, 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.5), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.7), 1.3em 0em 0 0em #515456, 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.5), 1.3em 0em 0 0em rgba(81, 84, 86, 0.7), 0.95em 0.95em 0 0em #515456, 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.5), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.7), 0em 1.3em 0 0em #515456, -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.5), 0em 1.3em 0 0em rgba(81, 84, 86, 0.7), -0.95em 0.95em 0 0em #515456, -1.4em 0em 0 0em rgba(81, 84, 86, 0.2), -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.5), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.7), -1.4em 0em 0 0em #515456, -0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -1.4em 0em 0em rgba(81, 84, 86, 0.2), 0.95em -0.95em 0 0em rgba(81, 84, 86, 0.2), 1.3em 0em 0 0em rgba(81, 84, 86, 0.2), 0.95em 0.95em 0 0em rgba(81, 84, 86, 0.2), 0em 1.3em 0 0em rgba(81, 84, 86, 0.2), -0.95em 0.95em 0 0em rgba(81, 84, 86, 0.5), -1.4em 0em 0 0em rgba(81, 84, 86, 0.7), -0.95em -0.95em 0 0em #515456;\n  }\n}\n.mpageui-LoadingSpinner-icon--sm {\n  font-size: 0.6rem;\n  width: 0.25rem;\n  height: 0.25rem;\n  border-radius: 1rem;\n  margin: auto;\n  -webkit-animation: mpageui-spinner-sm 1s infinite ease;\n  animation: mpageui-spinner-sm 1s infinite ease;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n@-webkit-keyframes mpageui-spinner-sm {\n  0%,\n  100% {\n    box-shadow: 0em -1em 0em 0em #515456, 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.5), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.7), 0.7em -0.7em 0 0em #515456, 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.5), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.7), 1em 0em 0 0em #515456, 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.5), 1em 0em 0 0em rgba(81, 84, 86, 0.7), 0.7em 0.7em 0 0em #515456, 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.5), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.7), 0em 1em 0 0em #515456, -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.5), 0em 1em 0 0em rgba(81, 84, 86, 0.7), -0.7em 0.7em 0 0em #515456, -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.5), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.7), -1em 0em 0 0em #515456, -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.5), -1em 0em 0 0em rgba(81, 84, 86, 0.7), -0.7em -0.7em 0 0em #515456;\n  }\n}\n@keyframes mpageui-spinner-sm {\n  0%,\n  100% {\n    box-shadow: 0em -1em 0em 0em #515456, 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.5), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.7), 0.7em -0.7em 0 0em #515456, 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.5), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.7), 1em 0em 0 0em #515456, 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.5), 1em 0em 0 0em rgba(81, 84, 86, 0.7), 0.7em 0.7em 0 0em #515456, 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.5), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.7), 0em 1em 0 0em #515456, -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.5), 0em 1em 0 0em rgba(81, 84, 86, 0.7), -0.7em 0.7em 0 0em #515456, -1em 0em 0 0em rgba(81, 84, 86, 0.2), -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.5), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.7), -1em 0em 0 0em #515456, -0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -1em 0em 0em rgba(81, 84, 86, 0.2), 0.7em -0.7em 0 0em rgba(81, 84, 86, 0.2), 1em 0em 0 0em rgba(81, 84, 86, 0.2), 0.7em 0.7em 0 0em rgba(81, 84, 86, 0.2), 0em 1em 0 0em rgba(81, 84, 86, 0.2), -0.7em 0.7em 0 0em rgba(81, 84, 86, 0.5), -1em 0em 0 0em rgba(81, 84, 86, 0.7), -0.7em -0.7em 0 0em #515456;\n  }\n}\n.mpageui-LoadingSpinner-icon--xs {\n  font-size: 0.6rem;\n  width: 0.20rem;\n  height: 0.20rem;\n  border-radius: 1rem;\n  margin: auto;\n  -webkit-animation: mpageui-spinner-xs 1s infinite ease;\n  animation: mpageui-spinner-xs 1s infinite ease;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n@-webkit-keyframes mpageui-spinner-xs {\n  0%,\n  100% {\n    box-shadow: 0em -0.55em 0em 0em #515456, 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.5), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.7), 0.4em -0.4em 0 0em #515456, 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.5), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.7), 0.55em 0em 0 0em #515456, 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.5), 0.55em 0em 0 0em rgba(81, 84, 86, 0.7), 0.4em 0.4em 0 0em #515456, 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.5), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.7), 0em 0.55em 0 0em #515456, -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.5), 0em 0.55em 0 0em rgba(81, 84, 86, 0.7), -0.4em 0.4em 0 0em #515456, -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.5), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.7), -0.55em 0em 0 0em #515456, -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.5), -0.55em 0em 0 0em rgba(81, 84, 86, 0.7), -0.4em -0.4em 0 0em #515456;\n  }\n}\n@keyframes mpageui-spinner-xs {\n  0%,\n  100% {\n    box-shadow: 0em -0.55em 0em 0em #515456, 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.5), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.7), 0.4em -0.4em 0 0em #515456, 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.5);\n  }\n  25% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.5), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.7), 0.55em 0em 0 0em #515456, 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.5), 0.55em 0em 0 0em rgba(81, 84, 86, 0.7), 0.4em 0.4em 0 0em #515456, 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  50% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.5), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.7), 0em 0.55em 0 0em #515456, -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.5), 0em 0.55em 0 0em rgba(81, 84, 86, 0.7), -0.4em 0.4em 0 0em #515456, -0.55em 0em 0 0em rgba(81, 84, 86, 0.2), -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  75% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.5), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.7), -0.55em 0em 0 0em #515456, -0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -0.55em 0em 0em rgba(81, 84, 86, 0.2), 0.4em -0.4em 0 0em rgba(81, 84, 86, 0.2), 0.55em 0em 0 0em rgba(81, 84, 86, 0.2), 0.4em 0.4em 0 0em rgba(81, 84, 86, 0.2), 0em 0.55em 0 0em rgba(81, 84, 86, 0.2), -0.4em 0.4em 0 0em rgba(81, 84, 86, 0.5), -0.55em 0em 0 0em rgba(81, 84, 86, 0.7), -0.4em -0.4em 0 0em #515456;\n  }\n}\n", ""]);

// exports


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(6);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(1)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./Linter.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./Linter.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(7);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(1)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./LoadSpinner.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./LoadSpinner.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(3);


/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,