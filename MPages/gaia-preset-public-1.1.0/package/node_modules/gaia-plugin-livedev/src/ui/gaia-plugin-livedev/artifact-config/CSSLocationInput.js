import { UIComponent, composite } from "MPageFusion";
import { DISPATCH, CSS_LOCATION_CHANGE } from "../actions";
const { form: { FormTextBox }} = composite;

/**
 * Events private to this control.
 * @type {{VALUE_CHANGE: string}}
 */
const PRIVATE_EVENTS = {
    VALUE_CHANGE: "__CSSLocationInput::valueChange__"
};

/**
 * Creates an input for the css location.
 * @class CSSLocationInput
 */
class CSSLocationInput extends UIComponent {
    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            isDisabled: (isDisabled) => this.getChild("input").setProp("isDisabled", isDisabled),
            value: (value) => this.getChild("input").setProp("value", value)
        }
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            {
                input: new FormTextBox({
                    helperHandler: () => "Enter the path to your artifact's compiled CSS",
                    showHelperText: true,
                    display: "CSS Location",
                    valueChangeEventName: PRIVATE_EVENTS.VALUE_CHANGE
                })
            }
        ]
    }

    /**
     * @inheritDoc
     */
    afterCreate() {
        this.on(PRIVATE_EVENTS.VALUE_CHANGE, (src, payload) => {
            this.stopPropagation(PRIVATE_EVENTS.VALUE_CHANGE);
            this.emit(DISPATCH, {
                type: CSS_LOCATION_CHANGE,
                payload: payload
            });
        });
    }

    /**
     * @inheritDoc
     */
    view(el, props, children) {
        return this.renderChildren();
    }
}

export default CSSLocationInput;
