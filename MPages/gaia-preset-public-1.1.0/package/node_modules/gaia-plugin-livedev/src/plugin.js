const commands = require("./commands");

/**
 * Common gaia json description.
 * @type {String} Gaia json description.
 */
const gaiaJsonDescription =
    [
        "The full path of the file to read from. Defaults to the current",
        "directory's gaia.json if not provided. "
    ].join(" ");


module.exports = {
    id: "livedev",
    commands: {
        configureLiveDev: {
            description: "Configures the live dev plugin",
            handler: commands.configureLiveDev,
            args: {
                gaiaJson: {
                    description: gaiaJsonDescription
                },
                cclProgram: {
                    description: "The CCL program for which to configure injections"
                },
                cssLocation: {
                    description: "The location of the artifact CSS"
                },
                i18nLocation: {
                    description: "The location of the artifact i18n"
                },
                mockResponseLocation: {
                    description: "The location of the static mocked up request/responses."
                },
                mockResponseCollection: {
                    description: "The key used to identify a set of mock responses."
                },
                retrieveMockResponseCollection: {
                    description: "Return the collection of mocked up responses."
                },
                programParams: {
                    description: "The program parameters"
                },
                sourceCodeLocation: {
                    description: "The location of the artifact source"
                },
                isWebpackEnabled: {
                    description: "The webpack enabled state"
                },
                isWebpackAutoRefreshEnabled: {
                    description: "the webpack auto-refresh enabled state"
                },
                username: {
                    description: "the username of the millennium login"
                },
                domain: {
                    description: "the domain to access millennium from"
                }
            }
        },
        configureContentServer: {
            description: "Adds the static content, source code, CSS, and i18n to the content server plugin",
            handler: commands.configureContentServer,
            args: {
                gaiaJson: {
                    description: gaiaJsonDescription
                },
                staticContentLocation: {
                    description: "Path to the static content"
                },
                sourceCodeLocation: {
                    description: "Path to the source code"
                },
                cssLocation: {
                    description: "The location of the artifact CSS"
                },
                i18nLocation: {
                    description: "The location of the artifact i18n"
                }
            }
        },
        configureInjector: {
            description: "Configures injector settings for live-dev",
            handler: commands.configureInjector,
            args: {
                gaiaJson: {
                    description: gaiaJsonDescription
                },
                cssLocation: {
                    description: "The location of the artifact CSS"
                },
                i18nLocation: {
                    description: "The location of the artifact i18n"
                },
                cclProgram: {
                    description: "The CCL program for which to configure injections"
                },
                sourceCodeLocation: {
                    description: "The location of the artifact source"
                },
                useWebpackWatcher: {
                    description: "Whether the injector should use webpack"
                }
            }
        },
        retrieveSettings: {
            description: "Retrieves all settings pertaining to the live-dev plugin",
            handler: commands.retrieveSettings,
            args: {
                gaiaJson: {
                    description: gaiaJsonDescription
                }
            }
        },
        retrieveMockResponseCollection: {
            description: "Retrieves available mock collection names",
            handler: commands.retrieveMockResponseCollection,
            args: {
                gaiaJson: {
                    description: gaiaJsonDescription
                }
            }
        }
    },
    ui: "dist/ui.js",
    markdown: {
        ui: "docs/ui.md"
    }
};
