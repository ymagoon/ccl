import {UIComponent, atomic, composite} from "MPageFusion";
import {runCommand} from "Gaia";
import i18n from "../../../../i18n/en_us";

const { form: { FormTextBox } } = composite;

export default class ConfigForm extends UIComponent {
    constructor(...args) {
        super(...args);

        this._updateFormData({
            files: "",
            exportPath: ""
        });
    }

    initialProps() {
        return {
            files: "",
            exportPath: "",
            isDisabled: true
        }
    }

    propChangeHandlers() {
        return {
            files: (files) => {
                this.getChild("files").setProp("value", files);
                this._updateFormData({files});
            },
            exportPath: (exportPath) => {
                this.getChild("exportPath").setProp("value", exportPath);
                this._updateFormData({exportPath});
            },
            isDisabled: (isDisabled) => {
                this.getChild("exportPath").setProp("isDisabled", isDisabled);
                this.getChild("files").setProp("isDisabled", isDisabled);
            }
        }
    }

    static get EVENT() {
        return {
            UPDATE: "ConfigForm::Update",
            UPDT: {
                FILES: "ConfigForm::Update::File_Glob",
                EXPORT_PATH: "ConfigForm::Update::Export_To"
            }
        };
    }

    _updateFormData(newFormData) {
        this._formData = Object.assign({}, this._formData || {}, newFormData,);
        return this._formData;
    }

    createChildren() {
        return [
            {
                files: new FormTextBox({
                    display: i18n.form.config.files.label,
                    valueChangeEventName: ConfigForm.EVENT.UPDT.FILES,
                    helperHandler: () => i18n.form.config.files.helper,
                    showHelperText: true
                })
            },
            {
                exportPath: new FormTextBox({
                    display: i18n.form.config.exportPath.label,
                    valueChangeEventName: ConfigForm.EVENT.UPDT.EXPORT_PATH,
                    helperHandler: () => i18n.form.config.exportPath.helper,
                    showHelperText: true
                })
            }
        ];
    }

    afterCreate() {
        this.on(ConfigForm.EVENT.UPDT.FILES, (ctx, { value: files }) => {
            this.stopPropagation(ConfigForm.EVENT.UPDT.FILES);
            this.emit(ConfigForm.EVENT.UPDATE, this, { value: this._updateFormData({ files }) });
        });

        this.on(ConfigForm.EVENT.UPDT.EXPORT_PATH, (ctx, { value: exportPath }) => {
            this.stopPropagation(ConfigForm.EVENT.UPDT.EXPORT_PATH);
            this.emit(ConfigForm.EVENT.UPDATE, this, { value: this._updateFormData({ exportPath }) });
        });
    }

    view(el, props, children, { files, exportPath }) {
        return [
            el("div", { class: "mpageui-u-flexgrid-col" }, [files.render()]),
            el("div", { class: "mpageui-u-flexgrid-col" }, [exportPath.render()])
        ];
    }
}
