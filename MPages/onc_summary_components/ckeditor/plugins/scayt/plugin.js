(function(){var commandName="scaytcheck",wscCommandName="checkspell",openPage="";
function in_array(needle,haystack){var found=0,key;
for(key in haystack){if(haystack[key]==needle){found=1;
break;
}}return found;
}var onEngineLoad=function(){var editor=this;
var createInstance=function(ev){if(typeof plugin.instances[editor.name]!="undefined"||plugin.instances[editor.name]!=null){return;
}var config=editor.config;
var oParams={};
if(editor.editable().$.nodeName=="BODY"){oParams.srcNodeRef=editor.document.getWindow().$.frameElement;
}else{oParams.srcNodeRef=editor.editable().$;
}oParams.assocApp="CKEDITOR."+CKEDITOR.version+"@"+CKEDITOR.revision;
oParams.customerid=config.scayt_customerid||"1:WvF0D4-UtPqN1-43nkD4-NKvUm2-daQqk3-LmNiI-z7Ysb4-mwry24-T8YrS3-Q2tpq2";
oParams.customDictionaryIds=config.scayt_customDictionaryIds||"";
oParams.userDictionaryName=config.scayt_userDictionaryName||"";
oParams.sLang=config.scayt_sLang||"en_US";
oParams.onLoad=function(){if(!(CKEDITOR.env.ie&&CKEDITOR.env.version<8)){this.addStyle(this.selectorCss(),"padding-bottom: 2px !important;");
}if(editor.editable().hasFocus&&!plugin.isControlRestored(editor)){this.focus();
}};
oParams.onBeforeChange=function(){if(plugin.getScayt(editor)&&!editor.checkDirty()){setTimeout(function(){editor.resetDirty();
},0);
}};
var scayt_custom_params=window.scayt_custom_params;
if(typeof scayt_custom_params=="object"){for(var k in scayt_custom_params){oParams[k]=scayt_custom_params[k];
}}if(plugin.getControlId(editor)){oParams.id=plugin.getControlId(editor);
}var scayt_control=new window.scayt(oParams);
scayt_control.afterMarkupRemove.push(function(node){(new CKEDITOR.dom.element(node,scayt_control.document)).mergeSiblings();
});
var lastInstance=plugin.instances[editor.name];
if(lastInstance){scayt_control.sLang=lastInstance.sLang;
scayt_control.option(lastInstance.option());
scayt_control.paused=lastInstance.paused;
}plugin.instances[editor.name]=scayt_control;
try{scayt_control.setDisabled(plugin.isPaused(editor)===false);
}catch(e){}editor.fire("showScaytState");
};
function bindInlineModeEvents(){editor.once("focus",createInstance);
editor.once("blur",destroyInstance);
}function destroyInstance(ev){var editor=ev.editor,scayt_instance=plugin.getScayt(editor),inline_mode=(editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE);
if(!scayt_instance){return;
}plugin.setPaused(editor,!scayt_instance.disabled);
plugin.setControlId(editor,scayt_instance.id);
scayt_instance.destroy(true);
delete plugin.instances[editor.name];
if(inline_mode){bindInlineModeEvents();
}}(editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE)?bindInlineModeEvents():editor.on("contentDom",createInstance);
editor.on("contentDomUnload",function(){var scripts=CKEDITOR.document.getElementsByTag("script"),scaytIdRegex=/^dojoIoScript(\d+)$/i,scaytSrcRegex=/^https?:\/\/svc\.webspellchecker\.net\/spellcheck\/script\/ssrv\.cgi/i;
for(var i=0;
i<scripts.count();
i++){var script=scripts.getItem(i),id=script.getId(),src=script.getAttribute("src");
if(id&&src&&id.match(scaytIdRegex)&&src.match(scaytSrcRegex)){script.remove();
}}});
editor.on("beforeCommandExec",function(ev){if(ev.data.name=="source"&&editor.mode=="source"){plugin.markControlRestore(editor);
}});
editor.on("afterCommandExec",function(ev){if(!plugin.isScaytEnabled(editor)){return;
}if(editor.mode=="wysiwyg"&&(ev.data.name=="undo"||ev.data.name=="redo")){window.setTimeout(function(){plugin.getScayt(editor).refresh();
},10);
}});
editor.on("destroy",destroyInstance);
editor.on("setData",destroyInstance);
editor.on("insertElement",function(){var scayt_instance=plugin.getScayt(editor);
if(plugin.isScaytEnabled(editor)){if(CKEDITOR.env.ie){editor.getSelection().unlock(true);
}window.setTimeout(function(){scayt_instance.focus();
scayt_instance.refresh();
},10);
}},this,null,50);
editor.on("insertHtml",function(){var scayt_instance=plugin.getScayt(editor);
if(plugin.isScaytEnabled(editor)){if(CKEDITOR.env.ie){editor.getSelection().unlock(true);
}window.setTimeout(function(){scayt_instance.focus();
scayt_instance.refresh();
},10);
}},this,null,50);
editor.on("scaytDialog",function(ev){ev.data.djConfig=window.djConfig;
ev.data.scayt_control=plugin.getScayt(editor);
ev.data.tab=openPage;
ev.data.scayt=window.scayt;
});
var dataProcessor=editor.dataProcessor,htmlFilter=dataProcessor&&dataProcessor.htmlFilter;
if(htmlFilter){htmlFilter.addRules({elements:{span:function(element){if(element.attributes["data-scayt_word"]&&element.attributes["data-scaytid"]){delete element.name;
return element;
}}}});
}var undoImagePrototype=CKEDITOR.plugins.undo.Image.prototype;
undoImagePrototype.equalsContent=CKEDITOR.tools.override(undoImagePrototype.equalsContent,function(org){return function(otherImage){var thisContents=this.contents,otherContents=otherImage.contents;
var scayt_instance=plugin.getScayt(this.editor);
if(scayt_instance&&plugin.isScaytReady(this.editor)){this.contents=scayt_instance.reset(thisContents)||"";
otherImage.contents=scayt_instance.reset(otherContents)||"";
}var retval=org.apply(this,arguments);
this.contents=thisContents;
otherImage.contents=otherContents;
return retval;
};
});
if(editor.document&&(editor.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE||editor.focusManager.hasFocus)){createInstance();
}};
CKEDITOR.plugins.scayt={engineLoaded:false,instances:{},controlInfo:{},setControlInfo:function(editor,o){if(editor&&editor.name&&typeof(this.controlInfo[editor.name])!="object"){this.controlInfo[editor.name]={};
}for(var infoOpt in o){this.controlInfo[editor.name][infoOpt]=o[infoOpt];
}},isControlRestored:function(editor){if(editor&&editor.name&&this.controlInfo[editor.name]){return this.controlInfo[editor.name].restored;
}return false;
},markControlRestore:function(editor){this.setControlInfo(editor,{restored:true});
},setControlId:function(editor,id){this.setControlInfo(editor,{id:id});
},getControlId:function(editor){if(editor&&editor.name&&this.controlInfo[editor.name]&&this.controlInfo[editor.name].id){return this.controlInfo[editor.name].id;
}return null;
},setPaused:function(editor,bool){this.setControlInfo(editor,{paused:bool});
},isPaused:function(editor){if(editor&&editor.name&&this.controlInfo[editor.name]){return this.controlInfo[editor.name].paused;
}return undefined;
},getScayt:function(editor){return this.instances[editor.name];
},isScaytReady:function(editor){return this.engineLoaded===true&&"undefined"!==typeof window.scayt&&this.getScayt(editor);
},isScaytEnabled:function(editor){var scayt_instance=this.getScayt(editor);
return(scayt_instance)?scayt_instance.disabled===false:false;
},getUiTabs:function(editor){var uiTabs=[];
var configUiTabs=editor.config.scayt_uiTabs||"1,1,1";
configUiTabs=configUiTabs.split(",");
configUiTabs[3]="1";
for(var i=0;
i<4;
i++){uiTabs[i]=(typeof window.scayt!="undefined"&&typeof window.scayt.uiTags!="undefined")?(parseInt(configUiTabs[i],10)&&window.scayt.uiTags[i]):parseInt(configUiTabs[i],10);
}if(typeof editor.plugins.wsc=="object"){uiTabs.push(1);
}else{uiTabs.push(0);
}return uiTabs;
},loadEngine:function(editor){if(CKEDITOR.env.gecko&&CKEDITOR.env.version<10900||CKEDITOR.env.opera||CKEDITOR.env.air){return editor.fire("showScaytState");
}if(this.engineLoaded===true){return onEngineLoad.apply(editor);
}else{if(this.engineLoaded==-1){return CKEDITOR.on("scaytReady",function(){onEngineLoad.apply(editor);
});
}}CKEDITOR.on("scaytReady",onEngineLoad,editor);
CKEDITOR.on("scaytReady",function(){this.engineLoaded=true;
},this,null,0);
this.engineLoaded=-1;
var protocol=document.location.protocol;
protocol=protocol.search(/https?:/)!=-1?protocol:"http:";
var baseUrl="svc.webspellchecker.net/scayt26/loader__base.js";
var scaytUrl=editor.config.scayt_srcUrl||(protocol+"//"+baseUrl);
var scaytConfigBaseUrl=plugin.parseUrl(scaytUrl).path+"/";
if(window.scayt==undefined){CKEDITOR._djScaytConfig={baseUrl:scaytConfigBaseUrl,addOnLoad:[function(){CKEDITOR.fireOnce("scaytReady");
}],isDebug:false};
CKEDITOR.document.getHead().append(CKEDITOR.document.createElement("script",{attributes:{type:"text/javascript",async:"true",src:scaytUrl}}));
}else{CKEDITOR.fireOnce("scaytReady");
}return null;
},parseUrl:function(data){var match;
if(data.match&&(match=data.match(/(.*)[\/\\](.*?\.\w+)$/))){return{path:match[1],file:match[2]};
}else{return data;
}}};
var plugin=CKEDITOR.plugins.scayt;
var addButtonCommand=function(editor,buttonName,buttonLabel,commandName,command,menugroup,menuOrder){editor.addCommand(commandName,command);
editor.addMenuItem(commandName,{label:buttonLabel,command:commandName,group:menugroup,order:menuOrder});
};
var commandDefinition={preserveState:true,editorFocus:false,canUndo:false,exec:function(editor){if(plugin.isScaytReady(editor)){var isEnabled=plugin.isScaytEnabled(editor);
this.setState(isEnabled?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_ON);
var scayt_control=plugin.getScayt(editor);
scayt_control.focus();
scayt_control.setDisabled(isEnabled);
}else{if(!editor.config.scayt_autoStartup&&plugin.engineLoaded>=0){editor.focus();
this.setState(CKEDITOR.TRISTATE_DISABLED);
plugin.loadEngine(editor);
}}}};
CKEDITOR.plugins.add("scayt",{requires:"menubutton,dialog",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"scayt",hidpi:true,beforeInit:function(editor){var items_order=editor.config.scayt_contextMenuItemsOrder||"suggest|moresuggest|control",items_order_str="";
items_order=items_order.split("|");
if(items_order&&items_order.length){for(var pos=0;
pos<items_order.length;
pos++){items_order_str+="scayt_"+items_order[pos]+(items_order.length!=parseInt(pos,10)+1?",":"");
}}editor.config.menu_groups=items_order_str+","+editor.config.menu_groups;
},checkEnvironment:function(){return(CKEDITOR.env.opera||CKEDITOR.env.air)?0:1;
},init:function(editor){var self=this;
var dataFilter=editor.dataProcessor&&editor.dataProcessor.dataFilter;
var dataFilterRules={elements:{span:function(element){var attrs=element.attributes;
if(attrs&&attrs["data-scaytid"]){delete element.name;
}}}};
dataFilter&&dataFilter.addRules(dataFilterRules);
var moreSuggestions={},mainSuggestions={};
var command=editor.addCommand(commandName,commandDefinition);
CKEDITOR.dialog.add(commandName,CKEDITOR.getUrl(this.path+"dialogs/options.js"));
var uiTabs=plugin.getUiTabs(editor);
var menuGroup="scaytButton";
editor.addMenuGroup(menuGroup);
editor.addMenuGroup("scayt_suggest",-10);
editor.addMenuGroup("scayt_moresuggest",-9);
editor.addMenuGroup("scayt_control",-8);
var uiMenuItems={};
var lang=editor.lang.scayt;
uiMenuItems.scaytToggle={label:lang.enable,command:commandName,group:menuGroup};
if(uiTabs[0]==1){uiMenuItems.scaytOptions={label:lang.options,group:menuGroup,onClick:function(){openPage="options";
editor.openDialog(commandName);
}};
}if(uiTabs[1]==1){uiMenuItems.scaytLangs={label:lang.langs,group:menuGroup,onClick:function(){openPage="langs";
editor.openDialog(commandName);
}};
}if(uiTabs[2]==1){uiMenuItems.scaytDict={label:lang.dictionariesTab,group:menuGroup,onClick:function(){openPage="dictionaries";
editor.openDialog(commandName);
}};
}uiMenuItems.scaytAbout={label:editor.lang.scayt.about,group:menuGroup,onClick:function(){openPage="about";
editor.openDialog(commandName);
}};
if(uiTabs[4]==1){uiMenuItems.scaytWSC={label:editor.lang.wsc.toolbar,group:menuGroup,command:wscCommandName};
}editor.addMenuItems(uiMenuItems);
editor.ui.add("Scayt",CKEDITOR.UI_MENUBUTTON,{label:lang.title,title:CKEDITOR.env.opera?lang.opera_title:lang.title,modes:{wysiwyg:self.checkEnvironment()},toolbar:"spellchecker,20",onRender:function(){command.on("state",function(){this.setState(command.state);
},this);
},onMenu:function(){var isEnabled=plugin.isScaytEnabled(editor);
editor.getMenuItem("scaytToggle").label=lang[isEnabled?"disable":"enable"];
var uiTabs=plugin.getUiTabs(editor);
return{scaytToggle:CKEDITOR.TRISTATE_OFF,scaytOptions:isEnabled&&uiTabs[0]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytLangs:isEnabled&&uiTabs[1]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytDict:isEnabled&&uiTabs[2]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytAbout:isEnabled&&uiTabs[3]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytWSC:uiTabs[4]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED};
}});
if(editor.contextMenu&&editor.addMenuItems){editor.contextMenu.addListener(function(element,selection){if(!plugin.isScaytEnabled(editor)||selection.getRanges()[0].checkReadOnly()){return null;
}var scayt_control=plugin.getScayt(editor),node=scayt_control.getScaytNode();
if(!node){return null;
}var word=scayt_control.getWord(node);
if(!word){return null;
}var sLang=scayt_control.getLang(),_r={},contextCommands=editor.config.scayt_contextCommands||"all",items_suggestion=window.scayt.getSuggestion(word,sLang);
contextCommands=contextCommands.split("|");
for(var m in moreSuggestions){delete editor._.menuItems[m];
delete editor.commands[m];
}for(m in mainSuggestions){delete editor._.menuItems[m];
delete editor.commands[m];
}if(!items_suggestion||!items_suggestion.length){var no_sugg={exec:function(){}};
addButtonCommand(editor,"no_sugg",lang.noSuggestions,"scayt_no_sugg",no_sugg,"scayt_control",1,true);
mainSuggestions.scayt_no_sugg=CKEDITOR.TRISTATE_OFF;
}else{moreSuggestions={};
mainSuggestions={};
var moreSuggestionsUnable=editor.config.scayt_moreSuggestions||"on";
var moreSuggestionsUnableAdded=false;
var maxSuggestions=editor.config.scayt_maxSuggestions;
(typeof maxSuggestions!="number")&&(maxSuggestions=5);
!maxSuggestions&&(maxSuggestions=items_suggestion.length);
for(var i=0,l=items_suggestion.length;
i<l;
i+=1){var commandName="scayt_suggestion_"+items_suggestion[i].replace(" ","_");
var exec=(function(el,s){return{exec:function(){scayt_control.replace(el,s);
}};
})(node,items_suggestion[i]);
if(i<maxSuggestions){addButtonCommand(editor,"button_"+commandName,items_suggestion[i],commandName,exec,"scayt_suggest",i+1);
_r[commandName]=CKEDITOR.TRISTATE_OFF;
mainSuggestions[commandName]=CKEDITOR.TRISTATE_OFF;
}else{if(moreSuggestionsUnable=="on"){addButtonCommand(editor,"button_"+commandName,items_suggestion[i],commandName,exec,"scayt_moresuggest",i+1);
moreSuggestions[commandName]=CKEDITOR.TRISTATE_OFF;
moreSuggestionsUnableAdded=true;
}}}if(moreSuggestionsUnableAdded){editor.addMenuItem("scayt_moresuggest",{label:lang.moreSuggestions,group:"scayt_moresuggest",order:10,getItems:function(){return moreSuggestions;
}});
mainSuggestions.scayt_moresuggest=CKEDITOR.TRISTATE_OFF;
}}if(in_array("all",contextCommands)||in_array("ignore",contextCommands)){var ignore_command={exec:function(){scayt_control.ignore(node);
}};
addButtonCommand(editor,"ignore",lang.ignore,"scayt_ignore",ignore_command,"scayt_control",2);
mainSuggestions.scayt_ignore=CKEDITOR.TRISTATE_OFF;
}if(in_array("all",contextCommands)||in_array("ignoreall",contextCommands)){var ignore_all_command={exec:function(){scayt_control.ignoreAll(node);
}};
addButtonCommand(editor,"ignore_all",lang.ignoreAll,"scayt_ignore_all",ignore_all_command,"scayt_control",3);
mainSuggestions.scayt_ignore_all=CKEDITOR.TRISTATE_OFF;
}if(in_array("all",contextCommands)||in_array("add",contextCommands)){var addword_command={exec:function(){window.scayt.addWordToUserDictionary(node);
}};
addButtonCommand(editor,"add_word",lang.addWord,"scayt_add_word",addword_command,"scayt_control",4);
mainSuggestions.scayt_add_word=CKEDITOR.TRISTATE_OFF;
}if(scayt_control.fireOnContextMenu){scayt_control.fireOnContextMenu(editor);
}return mainSuggestions;
});
}var showInitialState=function(evt){evt.removeListener();
if(CKEDITOR.env.opera||CKEDITOR.env.air){command.setState(CKEDITOR.TRISTATE_DISABLED);
}else{command.setState(plugin.isScaytEnabled(editor)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF);
}};
editor.on("showScaytState",showInitialState);
editor.on("instanceReady",showInitialState);
if(editor.config.scayt_autoStartup){editor.on("instanceReady",function(){plugin.loadEngine(editor);
});
}},afterInit:function(editor){var elementsPathFilters,scaytFilter=function(element){if(element.hasAttribute("data-scaytid")){return false;
}};
if(editor._.elementsPath&&(elementsPathFilters=editor._.elementsPath.filters)){elementsPathFilters.push(scaytFilter);
}editor.addRemoveFormatFilter&&editor.addRemoveFormatFilter(scaytFilter);
}});
})();
