var BasicStyles={};
BasicStyles.Style=CKEDITOR.tools.createClass({statics:{inRange:function(outerRange,innerRange,acceptPartial){outerRange.moveStart("Character",-1);
outerRange.moveStart("Character",1);
outerRange.moveEnd("Character",-1);
outerRange.moveEnd("Character",1);
var leftInRange=innerRange.compareEndPoints("StartToStart",outerRange)>=0;
var rightInRange=innerRange.compareEndPoints("EndToEnd",outerRange)<=0;
return acceptPartial?leftInRange||rightInRange:leftInRange&&rightInRange;
},isGarbage:function(element){if(element.tagName.toLowerCase()=="span"){return !(element.id||element.className||$(element).attr("style"));
}return false;
},nothing:null},$:function(editor){this.editor=editor;
},proto:{remove:function(ierange){var that=this;
var parent=ierange.parentElement();
var isIe7=CKEDITOR.env.ie&&CKEDITOR.env.version==7;
if(isIe7&&parent.innerText.replace(/s+/gm,"").length<ierange.text.replace(/s+/gm,"").length){parent=parent.parentNode;
}var selector=this.createSelector(this.tagNames);
var $element=$(parent).closest(selector);
while($element.length){var $next=$element.parent().closest(selector);
if($next.length){$element[0].removeNode();
}else{var ancestorRange=ierange.duplicate();
ancestorRange.moveToElementText($element[0]);
var leftRange=ancestorRange.duplicate();
leftRange.setEndPoint("EndToStart",ierange);
var rightRange=ancestorRange.duplicate();
rightRange.setEndPoint("StartToEnd",ierange);
$element[0].removeNode();
if(leftRange.text.length){this.format(leftRange);
}if(rightRange.text.length){this.format(rightRange);
}}$element=$next;
}$(parent).find(selector).each(function(_,element){var range=ierange.duplicate();
range.moveToElementText(element);
if(BasicStyles.Style.inRange(ierange,range)){element.removeNode();
}});
$(parent).find("*").add(parent).each(function(_,element){if(that.elementHasStyle(element)){var range=ierange.duplicate();
range.moveToElementText(element);
if(BasicStyles.Style.inRange(ierange,range,true)){that.removeInlineFormat(element);
if(BasicStyles.Style.isGarbage(element)){element.removeNode();
}}}});
var $element=$(parent);
while($element.length&&$element[0]!==this.editor.editable().$&&$element[0]!==this.editor.document.$.body){if(this.elementHasStyle($element[0])){this.removeInlineFormat($element[0]);
var elementRange=ierange.duplicate();
elementRange.moveToElementText($element[0]);
var leftRange=ierange.duplicate();
leftRange.setEndPoint("EndToStart",elementRange);
var rightRange=ierange.duplicate();
rightRange.setEndPoint("StartToEnd",elementRange);
this.format(leftRange);
this.format(rightRange);
if(BasicStyles.Style.isGarbage($element[0])){$element[0].removeNode();
}}$element=$element.parent();
}},format:function(ierange){throw"Style::format not implemented";
},elementHasStyle:function(element){throw"Style::elementHasStyle not implemented";
},removeInlineFormat:function(element){throw"Style::removeInlineFormat not implemented";
},createSelector:function(tagNames){return tagNames.join(", ");
},nothing:null}});
BasicStyles.BoldStyle=CKEDITOR.tools.createClass({base:BasicStyles.Style,proto:{ieCommand:"Bold",tagNames:["b","strong"],format:function(ierange){ierange.execCommand(this.ieCommand);
},elementHasStyle:function(element){var fontWeight=element.style.fontWeight;
return fontWeight.indexOf("bold")>=0||parseInt(fontWeight,10)>400;
},removeInlineFormat:function(element){element.style.fontWeight="";
},nothing:null}});
BasicStyles.ItalicStyle=CKEDITOR.tools.createClass({base:BasicStyles.Style,proto:{ieCommand:"Italic",tagNames:["i","em"],format:function(ierange){ierange.execCommand(this.ieCommand);
},elementHasStyle:function(element){return element.style.fontStyle.indexOf("italic")>=0;
},removeInlineFormat:function(element){element.style.fontStyle="";
},nothing:null}});
BasicStyles.UnderlineStyle=CKEDITOR.tools.createClass({base:BasicStyles.Style,proto:{ieCommand:"Underline",tagNames:["u"],format:function(ierange){ierange.execCommand(this.ieCommand);
},elementHasStyle:function(element){return element.style.textDecoration.indexOf("underline")>=0;
},removeInlineFormat:function(element){var val=element.style.textDecoration.replace("underline","")||"none";
element.style.textDecoration=val;
},nothing:null}});
BasicStyles.StrikeStyle=CKEDITOR.tools.createClass({base:BasicStyles.Style,proto:{ieCommand:"Strikethrough",tagNames:["strike","s","del"],format:function(ierange){ierange.execCommand(this.ieCommand);
},elementHasStyle:function(element){return element.style.textDecoration.indexOf("line-through")>=0;
},removeInlineFormat:function(element){var val=element.style.textDecoration.replace("line-through","")||"none";
element.style.textDecoration=val;
},nothing:null}});
