CKEDITOR.plugins.add("contextmenu",{requires:"menu",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en,en-au,en-ca,en-gb,eo,es,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,ug,uk,vi,zh,zh-cn",onLoad:function(){CKEDITOR.plugins.contextMenu=CKEDITOR.tools.createClass({base:CKEDITOR.menu,$:function(editor){this.base.call(this,editor,{panel:{className:"cke_menu_panel",attributes:{"aria-label":editor.lang.contextmenu.options}}});
},proto:{addTarget:function(element,nativeContextMenuOnCtrl){if(CKEDITOR.env.opera&&!("oncontextmenu" in document.body)){var contextMenuOverrideButton;
element.on("mousedown",function(evt){evt=evt.data;
if(evt.$.button!=2){if(evt.getKeystroke()==CKEDITOR.CTRL+1){element.fire("contextmenu",evt);
}return;
}if(nativeContextMenuOnCtrl&&(CKEDITOR.env.mac?evt.$.metaKey:evt.$.ctrlKey)){return;
}var target=evt.getTarget();
if(!contextMenuOverrideButton){var ownerDoc=target.getDocument();
contextMenuOverrideButton=ownerDoc.createElement("input");
contextMenuOverrideButton.$.type="button";
ownerDoc.getBody().append(contextMenuOverrideButton);
}contextMenuOverrideButton.setAttribute("style","position:absolute;top:"+(evt.$.clientY-2)+"px;left:"+(evt.$.clientX-2)+"px;width:5px;height:5px;opacity:0.01");
});
element.on("mouseup",function(evt){if(contextMenuOverrideButton){contextMenuOverrideButton.remove();
contextMenuOverrideButton=undefined;
element.fire("contextmenu",evt.data);
}});
}element.on("contextmenu",function(event){var domEvent=event.data;
if(nativeContextMenuOnCtrl&&(CKEDITOR.env.webkit?holdCtrlKey:(CKEDITOR.env.mac?domEvent.$.metaKey:domEvent.$.ctrlKey))){return;
}domEvent.preventDefault();
var doc=domEvent.getTarget().getDocument(),offsetParent=domEvent.getTarget().getDocument().getDocumentElement(),fromFrame=!doc.equals(CKEDITOR.document),scroll=doc.getWindow().getScrollPosition(),offsetX=fromFrame?domEvent.$.clientX:domEvent.$.pageX||scroll.x+domEvent.$.clientX,offsetY=fromFrame?domEvent.$.clientY:domEvent.$.pageY||scroll.y+domEvent.$.clientY;
CKEDITOR.tools.setTimeout(function(){this.open(offsetParent,null,offsetX,offsetY);
},CKEDITOR.env.ie?200:0,this);
},this);
if(CKEDITOR.env.opera){element.on("keypress",function(evt){var domEvent=evt.data;
if(domEvent.$.keyCode===0){domEvent.preventDefault();
}});
}if(CKEDITOR.env.webkit){var holdCtrlKey,onKeyDown=function(event){holdCtrlKey=CKEDITOR.env.mac?event.data.$.metaKey:event.data.$.ctrlKey;
},resetOnKeyUp=function(){holdCtrlKey=0;
};
element.on("keydown",onKeyDown);
element.on("keyup",resetOnKeyUp);
element.on("contextmenu",resetOnKeyUp);
}},open:function(offsetParent,corner,offsetX,offsetY){this.editor.focus();
offsetParent=offsetParent||CKEDITOR.document.getDocumentElement();
this.editor.selectionChange(1);
this.show(offsetParent,corner,offsetX,offsetY);
}}});
},beforeInit:function(editor){var contextMenu=editor.contextMenu=new CKEDITOR.plugins.contextMenu(editor);
editor.on("contentDom",function(){contextMenu.addTarget(editor.editable(),editor.config.browserContextMenuOnCtrl!==false);
});
editor.addCommand("contextMenu",{exec:function(){editor.contextMenu.open(editor.document.getBody());
}});
editor.setKeystroke(CKEDITOR.SHIFT+121,"contextMenu");
editor.setKeystroke(CKEDITOR.CTRL+CKEDITOR.SHIFT+121,"contextMenu");
}});
