function PresAssessInitialExamStyle(){this.initByNamespace("pa");
}PresAssessInitialExamStyle.inherits(ComponentStyle);
function PresAssessInitialExamComponent(criterion){this.m_antepartumNote=null;
this.m_encType=null;
this.m_estGestAge=null;
this.m_fundHeight=null;
this.m_preTermSignsSym=null;
this.m_cerDilat=null;
this.m_cerEfface=null;
this.m_cerStat=null;
this.m_cumulativeWt=null;
this.m_weight=null;
this.m_edema=null;
this.m_protein=null;
this.m_glucose=null;
this.m_nxtAppt=null;
this.m_pain=null;
this.m_presentation=null;
this.m_fetalMove=null;
this.m_fetalHrRt=null;
this.m_fetalLie=null;
this.m_BPGroup=null;
this.setCriterion(criterion);
this.setStyles(new PresAssessInitialExamStyle());
this.setIncludeLineNumber(true);
this.setComponentLoadTimerName("USR:MPG.PREGASSESSINITEXAM.O1 - load component");
this.setComponentRenderTimerName("USR:MPG.PREGASSESSINITEXAM.O1 - render component");
this.setResourceRequired(true);
PresAssessInitialExamComponent.method("InsertData",function(){CERN_PREG_ASSESS_INITIAL_EXAM_O1.GetPregAssessmentData(this);
});
PresAssessInitialExamComponent.method("HandleSuccess",function(recordData){CERN_PREG_ASSESS_INITIAL_EXAM_O1.RenderComponent(this,recordData,1);
});
PresAssessInitialExamComponent.method("RetrieveRequiredResources",function(){var patientGenderInfo=criterion.getPatientInfo().getSex();
var pai18n=i18n.discernabu.preg_assess_initial_exam_o1;
if(patientGenderInfo===null){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pai18n.GENDER_UNDEFINED+"</span></h3><span class='res-none'>"+pai18n.GENDER_UNDEFINED+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,this,"(0)");
return;
}var pregInfoObj=null;
pregInfoObj=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoObj&&pregInfoObj.isResourceAvailable()){this.InsertData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}});
PresAssessInitialExamComponent.method("setAntepartumNote",function(value){this.m_antepartumNote=value;
});
PresAssessInitialExamComponent.method("getAntepartumNote",function(){return this.m_antepartumNote;
});
PresAssessInitialExamComponent.method("setEncType",function(value){this.m_encType=value;
});
PresAssessInitialExamComponent.method("getEncType",function(){return this.m_encType;
});
PresAssessInitialExamComponent.method("setEstGesAge",function(value){this.m_estGestAge=value;
});
PresAssessInitialExamComponent.method("getEstGesAge",function(){return this.m_estGestAge;
});
PresAssessInitialExamComponent.method("setFundalHt",function(value){this.m_fundHeight=value;
});
PresAssessInitialExamComponent.method("getFundalHt",function(){return this.m_fundHeight;
});
PresAssessInitialExamComponent.method("setPreSgnAndSym",function(value){this.m_preTermSignsSym=value;
});
PresAssessInitialExamComponent.method("getPreSgnAndSym",function(){return this.m_preTermSignsSym;
});
PresAssessInitialExamComponent.method("setCerDilat",function(value){this.m_cerDilat=value;
});
PresAssessInitialExamComponent.method("getCerDilat",function(){return this.m_cerDilat;
});
PresAssessInitialExamComponent.method("setCerEffLen",function(value){this.m_cerEfface=value;
});
PresAssessInitialExamComponent.method("getCerEffLen",function(){return this.m_cerEfface;
});
PresAssessInitialExamComponent.method("setCerStat",function(value){this.m_cerStat=value;
});
PresAssessInitialExamComponent.method("getCerStat",function(){return this.m_cerStat;
});
PresAssessInitialExamComponent.method("setCumulativeWt",function(value){this.m_cumulativeWt=value;
});
PresAssessInitialExamComponent.method("getCumulativeWt",function(){return this.m_cumulativeWt;
});
PresAssessInitialExamComponent.method("setWeight",function(value){this.m_weight=value;
});
PresAssessInitialExamComponent.method("getWeight",function(){return this.m_weight;
});
PresAssessInitialExamComponent.method("setEdema",function(value){this.m_edema=value;
});
PresAssessInitialExamComponent.method("getEdema",function(){return this.m_edema;
});
PresAssessInitialExamComponent.method("setProtein",function(value){this.m_protein=value;
});
PresAssessInitialExamComponent.method("getProtein",function(){return this.m_protein;
});
PresAssessInitialExamComponent.method("setGlucose",function(value){this.m_glucose=value;
});
PresAssessInitialExamComponent.method("getGlucose",function(){return this.m_glucose;
});
PresAssessInitialExamComponent.method("setNextAppointment",function(value){this.m_nxtAppt=value;
});
PresAssessInitialExamComponent.method("getNextAppointment",function(){return this.m_nxtAppt;
});
PresAssessInitialExamComponent.method("setPain",function(value){this.m_pain=value;
});
PresAssessInitialExamComponent.method("getPain",function(){return this.m_pain;
});
PresAssessInitialExamComponent.method("setPresentation",function(value){this.m_presentation=value;
});
PresAssessInitialExamComponent.method("getPresentation",function(){return this.m_presentation;
});
PresAssessInitialExamComponent.method("setFetalMovement",function(value){this.m_fetalMove=value;
});
PresAssessInitialExamComponent.method("getFetalMovement",function(){return this.m_fetalMove;
});
PresAssessInitialExamComponent.method("setFetalHrRt",function(value){this.m_fetalHrRt=value;
});
PresAssessInitialExamComponent.method("getFetalHrRt",function(){return this.m_fetalHrRt;
});
PresAssessInitialExamComponent.method("setFetalLie",function(value){this.m_fetalLie=value;
});
PresAssessInitialExamComponent.method("getFetalLie",function(){return this.m_fetalLie;
});
PresAssessInitialExamComponent.method("setCerDilat",function(value){this.m_cerDilat=value;
});
PresAssessInitialExamComponent.method("getCerDilat",function(){return this.m_cerDilat;
});
PresAssessInitialExamComponent.method("setBPResGroup",function(value){this.m_BPGroup=value;
});
PresAssessInitialExamComponent.method("getBPResGroup",function(){return this.m_BPGroup;
});
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.InsertData,this);
}PresAssessInitialExamComponent.inherits(MPageComponent);
var CERN_PREG_ASSESS_INITIAL_EXAM_O1=function(){function dynamicLabelSort(a,b){var sortRes=0;
if(a.LABEL===""){sortRes=1;
}else{if(b.LABEL===""){sortRes=-1;
}else{sortRes=(a.LABEL<b.LABEL)?-1:1;
}}return sortRes;
}function resultDateSort(a,b){var dateA=new Date();
var dateB=new Date();
dateA.setISO8601(a.DATE);
dateB.setISO8601(b.DATE);
sortRes=(dateA<dateB)?1:-1;
return sortRes;
}function createHoverHTML(idText,dataTitle,dataArray){var hoverHTMLArray=[];
var k=0,hLen=0;
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
dataArray.sort(resultDateSort);
hoverHTMLArray.push("<div id='",idText,"' class='preg-res-hvr'><h4 class='preg-data-title'>",dataTitle,"</h4><dl class='preg-all-res'>");
if(dataArray.length>0){for(k=0,hLen=dataArray.length;
k<hLen;
k++){var resDate=new Date();
resDate.setISO8601(dataArray[k].DATE);
hoverHTMLArray.push("<dt>",resDate.format("longDateTime3"),"</dt><dd>",dataArray[k].VALUE," ",dataArray[k].UNITS,"</dd><br>");
}}else{hoverHTMLArray.push("<dt>--</dt><dd>--</dd>");
}hoverHTMLArray.push("</dl></div>");
return hoverHTMLArray.join("");
}function createFetalHoverHTML(idText,dataTitle,dataArray){var hoverHTMLArray=[];
var k=0,hLen=0;
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var missingVal="--";
dataArray.sort(resultDateSort);
hoverHTMLArray.push("<div id='",idText,"' class='preg-res-hvr'><h4 class='preg-data-title'>",dataTitle,"</h4><dl class='preg-all-res'>");
if(dataArray.length>0){for(k=0,hLen=dataArray.length;
k<hLen;
k++){var resDate=new Date();
var tempVal=(dataArray[k].DYNAMIC_LABEL!=="")?dataArray[k].DYNAMIC_LABEL:missingVal;
resDate.setISO8601(dataArray[k].DATE);
hoverHTMLArray.push("<dt>",resDate.format("longDateTime3"),"</dt><dd>",dataArray[k].VALUE," ",dataArray[k].UNITS," (",tempVal,")</dd><br>");
}}else{hoverHTMLArray.push("<dt>--</dt><dd>--</dd>");
}hoverHTMLArray.push("</dl></div>");
return hoverHTMLArray.join("");
}function pregHMO(evt,n){evt=evt||window.event;
var s=n.style,p=getPosition(evt),vp=gvs(),so=gso(),left=p.x+20,top=p.y+20;
n.pregHMO=true;
function hover(){if(n.pregHMO===true){s.display="block";
var tempW=$(n).width();
var tempH=$(n).height();
if(left+tempW>vp[1]+so[1]){left=left-40-tempW;
if(left<0){left=0;
}}if(top+tempH>vp[0]+so[0]){if(top-40-tempH<so[0]){if(left>0){top=10+so[0];
}}else{top=top-40-tempH;
}}document.body.appendChild(n);
s.left=left+"px";
s.top=top+"px";
n.show=true;
}}n.timer=setTimeout(hover,500);
}function pregHoverMouseTerminated(evt,n,cID){var allResultsDiv=_g("pregallResults"+cID);
evt=evt||window.event;
n.pregHMO=false;
clearTimeout(n.timer);
n.style.display="none";
allResultsDiv.insertBefore(n,Util.gc(allResultsDiv));
n.show=false;
}function pregCmntHoverMouseTerminated(evt,n){var cmntData=Util.gp(n);
evt=evt||window.event;
n.pregHMO=false;
clearTimeout(n.timer);
n.style.display="none";
allResultsDiv.insertAfter(n,cmntData);
n.show=false;
}function pregHoverMouseMovement(evt,n){var s=n.style,p=getPosition(evt),vp=gvs(),so=gso(),left=p.x+20,top=p.y+20;
var tempW=$(n).width();
var tempH=$(n).height();
evt=evt||window.event;
if(!n.show){return;
}if(left+tempW>vp[1]+so[1]){left=left-40-tempW;
if(left<0){left=0;
}}if(top+tempH>vp[0]+so[0]){if(top-40-tempH<so[0]){if(left>0){top=10+so[0];
}}else{top=top-40-tempH;
}}s.top=top+"px";
s.left=left+"px";
}function standardVisitDDHover(e,hvrID,comID){if(document.getElementById(hvrID)){$(e).mouseenter(function(evt){$(this).addClass("hover-highlight");
pregHMO(evt,document.getElementById(hvrID));
});
$(e).mouseleave(function(evt){$(this).removeClass("hover-highlight");
pregHoverMouseTerminated(evt,document.getElementById(hvrID),comID);
});
$(e).mousemove(function(evt){pregHoverMouseMovement(evt,document.getElementById(hvrID));
});
}}return{GetPregAssessmentData:function(component){var sendAr=[];
var allBP=[];
var sysArray=[];
var sysParamString="";
var diaArray=[];
var diaParamString="";
var compId=component.getComponentId();
var criterion=component.getCriterion();
var encntrs=null;
var encntrStr="";
var prsnlInfo=criterion.getPersonnelInfo();
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=null;
var pregnancyId=0;
var pai18n=i18n.discernabu.preg_assess_initial_exam_o1;
if(criterion.getPatientInfo().getSex().meaning!=="FEMALE"){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pai18n.NOT_FEMALE+"</span></h3><span class='res-none'>"+pai18n.NOT_FEMALE+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
if(pregnancyId===-1){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pai18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+pai18n.PREG_DATA_ERROR+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(!pregnancyId){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pai18n.NO_ACTIVE_PREG+"</span></h3><span class='res-none'>"+pai18n.NO_ACTIVE_PREG+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{sendAr.push("^MINE^",criterion.person_id+".0");
sendAr.push(MP_Util.CreateParamArray(component.getEncType(),1));
encntrs=criterion.getPersonnelInfo().getViewableEncounters();
encntrStr=(encntrs)?"value("+encntrs+")":"0";
sendAr.push(encntrStr);
sendAr.push(criterion.provider_id+".0",criterion.ppr_cd+".0");
sendAr.push(pregInfoObj.getLookBack(),MP_Util.CreateParamArray(component.getCumulativeWt(),1),MP_Util.CreateParamArray(component.getEstGesAge(),1),MP_Util.CreateParamArray(component.getAntepartumNote(),1),MP_Util.CreateParamArray(component.getFundalHt(),1),MP_Util.CreateParamArray(component.getPreSgnAndSym(),1),MP_Util.CreateParamArray(component.getCerDilat(),1),MP_Util.CreateParamArray(component.getCerEffLen(),1),MP_Util.CreateParamArray(component.getCerStat(),1));
allBP=component.getBPResGroup();
if(allBP){var i=0,len=0;
for(i=0,len=allBP.length;
i<len;
i=i+3){sysArray.push(allBP[i+1]+".0");
diaArray.push(allBP[i]+".0");
}sysParamString="value("+sysArray.join(",")+")";
diaParamString="value("+diaArray.join(",")+")";
}else{sysParamString="0.0";
diaParamString="0.0";
}sendAr.push(sysParamString,diaParamString,MP_Util.CreateParamArray(component.getWeight(),1),MP_Util.CreateParamArray(component.getEdema(),1),MP_Util.CreateParamArray(component.getProtein(),1),MP_Util.CreateParamArray(component.getGlucose(),1),MP_Util.CreateParamArray(component.getPresentation(),1),MP_Util.CreateParamArray(component.getFetalMovement(),1),MP_Util.CreateParamArray(component.getFetalHrRt(),1),MP_Util.CreateParamArray(component.getFetalLie(),1),MP_Util.CreateParamArray(component.getNextAppointment(),1),MP_Util.CreateParamArray(component.getPain(),1));
MP_Core.XMLCclRequestWrapper(component,"MP_RETRIEVE_PREG_ASSESSMENT",sendAr,true);
}}}}},RenderComponent:function(component,recordData,sectionNum){var buildHTML=[];
var navBarHTMLArray=[];
var visitHTMLArray=[];
var hoverHTMLArray=[];
var fundalHeightArray=[];
var preTermSignsArray=[];
var cervicalDilArray=[];
var cervicalEffArray=[];
var cervicalStatArray=[];
var bloodPressureArray=[];
var weightArray=[];
var weightDiffArray=[];
var edemaArray=[];
var uProteinArray=[];
var uGlucoseArray=[];
var painArray=[];
var nextApptArray=[];
var fPresentArray=[];
var fMoveArray=[];
var fHRArray=[];
var fLieArray=[];
var visitCnt=recordData.VISITS.length;
var previousYear=0;
var pregassessi18n=i18n.discernabu.preg_assess_initial_exam_o1;
var monthArray=[pregassessi18n.JANUARY_ABBV,pregassessi18n.FEBRUARY_ABBV,pregassessi18n.MARCH_ABBV,pregassessi18n.APRIL_ABBV,pregassessi18n.MAY_ABBV,pregassessi18n.JUNE_ABBV,pregassessi18n.JULY_ABBV,pregassessi18n.AUGUST_ABBV,pregassessi18n.SEPTEMBER_ABBV,pregassessi18n.OCTOBER_ABBV,pregassessi18n.NOVEMBER_ABBV,pregassessi18n.DECEMBER_ABBV];
var compID=component.getComponentId();
var navBarID="pregNav"+compID;
var navItemListID="prevNavItems"+compID;
var visitCardID="pregCards"+compID;
var missingVal="--";
var fetalMore=(component.getFetalLie())?true:false;
var fetalClass=(fetalMore)?"fetal-data-more":"fetal-data-less";
var maxFetusCnt=0;
var maxFetusIdx=-1;
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var i=0;
var launchPregGraph=function(){var graphType=this.id.replace("Graph"+compID,"");
var formObject;
try{formObject=window.external.DiscernObjectFactory("PREGNANCY");
MP_Util.LogDiscernInfo(component,"PREGNANCY","preg-assess-initial-exam-o1.js","HandleDropDownChange");
}catch(err){alert(pregassessi18n.ERROR_DOF+err.name+" "+err.message);
return;
}if(!formObject){alert(pregassessi18n.ERROR_CREATE);
return;
}try{var criterion=component.getCriterion();
var pregInfoObj=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregnancyId=0;
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
if(graphType==="fundal"){modified=formObject.LaunchFundalHeightGraph(window,criterion.person_id,pregInfoObj.getPregnancyId());
}else{if(graphType==="labor"){modified=formObject.LaunchLaborGraph(window,criterion.person_id,pregInfoObj.getPregnancyId());
}}}}catch(err2){MP_Util.LogError(pregassessi18n.ERROR_EXCEPTION+" - "+err2.name+" - "+err2.message);
}formObject=null;
};
component.addMenuOption("fundalGraph","fundalGraph"+compID,pregassessi18n.FUNDAL_HEIGHT,false,"click",launchPregGraph);
component.addMenuOption("laborGraph","laborGraph"+compID,pregassessi18n.LABOR_GRAPH,false,"click",launchPregGraph);
component.createMenu();
var curDate=new Date();
navBarHTMLArray.push("<div id='",navBarID,"' class=preg-nav-bar><div class='preg-nav-left'></div><ol id='",navItemListID,"'>");
for(i=0;
i<visitCnt;
i++){curDate.setISO8601(recordData.VISITS[i].VISIT_DATE);
var curYear=curDate.getFullYear();
if(previousYear>0&&previousYear!=curYear){navBarHTMLArray.push("<div class='preg-nav-prev-year'>",previousYear,"</div><div class='preg-nav-next-year'>",curYear,"</div>");
}previousYear=curYear;
navBarHTMLArray.push("<li>",monthArray[curDate.getMonth()]," ",curDate.getDate(),"</li>");
}navBarHTMLArray.push("</ol><div class='preg-nav-right'></div></div>");
visitHTMLArray.push("<div id='",visitCardID,"' class='preg-visit-cards'>");
var tempVal="";
var tempVal2="";
var tempCmntHvr="";
var j=0,dLen=0;
for(i=0;
i<visitCnt;
i++){var tempUnit="";
var allFetalDataCollection={};
var dynamicLabelArray=[];
visitHTMLArray.push("<div class='preg-visit-card'><div class='card-hdr'><div class='visit-dt'><span>");
curDate.setISO8601(recordData.VISITS[i].VISIT_DATE);
visitHTMLArray.push(curDate.format("shortDate3"),"</span></div><div class='ega-rslt'>");
if(recordData.VISITS[i].EGA.length>0){recordData.VISITS[i].EGA.sort(resultDateSort);
if(recordData.VISITS[i].EGA[0].VALUE!==""){tempVal=recordData.VISITS[i].EGA[0].VALUE;
}else{var tempWeek=(recordData.VISITS[i].EGA[0].WEEKS==="")?"0":recordData.VISITS[i].EGA[0].WEEKS;
var tempDay=(recordData.VISITS[i].EGA[0].DAYS==="")?"0":recordData.VISITS[i].EGA[0].DAYS;
tempVal=tempWeek+"<span class='ega-lbl'>"+pregassessi18n.WEEK_ABBV+"</span>"+tempDay+"<span class='ega-lbl'>"+pregassessi18n.DAY_ABBV+"</span>";
}}else{tempVal=missingVal;
}visitHTMLArray.push(tempVal,"</div></div>");
tempVal="";
visitHTMLArray.push("<div class='patient-data'><dl class='preg-data-labels'><dt class='pt-data-top-lt'>",pregassessi18n.FUNDAL_HEIGHT,"</dt><dt class='pt-data-top-rt'>",pregassessi18n.PRETERMSIGNS,"</dt></dl>");
if(recordData.VISITS[i].FUNDAL_HEIGHT.length>0){recordData.VISITS[i].FUNDAL_HEIGHT.sort(resultDateSort);
if(recordData.VISITS[i].FUNDAL_HEIGHT[0].VALUE!==""){tempVal=recordData.VISITS[i].FUNDAL_HEIGHT[0].VALUE;
tempUnit=recordData.VISITS[i].FUNDAL_HEIGHT[0].UNITS;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dl><dt>",pregassessi18n.FUNDAL_HEIGHT,"</dt><dd class='pt-data-top-lt'><span>",tempVal,"</span><span class='unit'>",tempUnit,"</span></dd>");
for(j=0,dLen=recordData.VISITS[i].FUNDAL_HEIGHT.length;
j<dLen;
j++){fundalHeightArray.push(recordData.VISITS[i].FUNDAL_HEIGHT[j]);
}tempVal="";
tempUnit="";
if(recordData.VISITS[i].PRETERM_SIGNS.length>0){recordData.VISITS[i].PRETERM_SIGNS.sort(resultDateSort);
if(recordData.VISITS[i].PRETERM_SIGNS[0].VALUE!==""){tempVal=recordData.VISITS[i].PRETERM_SIGNS[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.PRETERMSIGNS,"</dt><dd class='pt-data-top-rt'>",tempVal,"</dd></dl>");
for(j=0,dLen=recordData.VISITS[i].PRETERM_SIGNS.length;
j<dLen;
j++){preTermSignsArray.push(recordData.VISITS[i].PRETERM_SIGNS[j]);
}tempVal="";
visitHTMLArray.push("<dl class='preg-data-labels'><dt class='pt-data-mid'>",pregassessi18n.CERVICALEXAM,"</dt><dt class='pt-data-mid'>",pregassessi18n.BP,"</dt><dt class='pt-data-mid'>",pregassessi18n.WEIGHT,"</dt><dt class='pt-data-mid'>",pregassessi18n.EDEMA,"</dt></dl>");
if(recordData.VISITS[i].CERVICAL_DIL.length>0){recordData.VISITS[i].CERVICAL_DIL.sort(resultDateSort);
if(recordData.VISITS[i].CERVICAL_DIL[0].VALUE!==""){tempVal=recordData.VISITS[i].CERVICAL_DIL[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dl><dt>",pregassessi18n.CERVICALEXAM,"</dt><dd class='pt-data-mid'><span class='cerv-dil'>",tempVal,"</span>/<span class='cerv-eff'>");
for(j=0,dLen=recordData.VISITS[i].CERVICAL_DIL.length;
j<dLen;
j++){cervicalDilArray.push(recordData.VISITS[i].CERVICAL_DIL[j]);
}tempVal="";
if(recordData.VISITS[i].CERVICAL_EFF.length>0){recordData.VISITS[i].CERVICAL_EFF.sort(resultDateSort);
if(recordData.VISITS[i].CERVICAL_EFF[0].VALUE!==""){tempVal=recordData.VISITS[i].CERVICAL_EFF[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push(tempVal,"</span>/<span class='cerv-stat'>");
for(j=0,dLen=recordData.VISITS[i].CERVICAL_EFF.length;
j<dLen;
j++){cervicalEffArray.push(recordData.VISITS[i].CERVICAL_EFF[j]);
}tempVal="";
if(recordData.VISITS[i].CERVICAL_STAT.length>0){recordData.VISITS[i].CERVICAL_STAT.sort(resultDateSort);
if(recordData.VISITS[i].CERVICAL_STAT[0].VALUE!==""){tempVal=recordData.VISITS[i].CERVICAL_STAT[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push(tempVal,"</span></dd>");
for(j=0,dLen=recordData.VISITS[i].CERVICAL_STAT.length;
j<dLen;
j++){cervicalStatArray.push(recordData.VISITS[i].CERVICAL_STAT[j]);
}tempVal="";
if(recordData.VISITS[i].BP.length>0){recordData.VISITS[i].BP.sort(resultDateSort);
if(recordData.VISITS[i].BP[0].SYS_VALUE!==""){tempVal=recordData.VISITS[i].BP[0].SYS_VALUE;
}else{tempVal=missingVal;
}if(recordData.VISITS[i].BP[0].DIA_VALUE!==""){tempVal2=recordData.VISITS[i].BP[0].DIA_VALUE;
}else{tempVal2=missingVal;
}}else{tempVal=missingVal;
tempVal2=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.BP,"</dt><dd class='pt-data-mid'>",tempVal,"/",tempVal2,"</dd>");
tempVal="";
tempVal2="";
for(j=0,dLen=recordData.VISITS[i].BP.length;
j<dLen;
j++){bloodPressureArray.push(recordData.VISITS[i].BP[j]);
}if(recordData.VISITS[i].WEIGHT.length>0){recordData.VISITS[i].WEIGHT.sort(resultDateSort);
if(recordData.VISITS[i].WEIGHT[0].VALUE!==""){tempVal=recordData.VISITS[i].WEIGHT[0].VALUE;
tempUnit=recordData.VISITS[i].WEIGHT[0].UNITS;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.WEIGHT,"</dt><dd class='pt-data-mid'><span class='cur-weight'>",tempVal,"</span><span class='unit'>",tempUnit,"</span>");
tempVal="";
tempUnit="";
for(j=0,dLen=recordData.VISITS[i].WEIGHT.length;
j<dLen;
j++){weightArray.push(recordData.VISITS[i].WEIGHT[j]);
}if(recordData.VISITS[i].WEIGHT_CHG.length>0){recordData.VISITS[i].WEIGHT_CHG.sort(resultDateSort);
if(recordData.VISITS[i].WEIGHT_CHG[0].VALUE!==""){tempVal=recordData.VISITS[i].WEIGHT_CHG[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<span class='diff-weight'>(",tempVal,")</span></dd>");
tempVal="";
for(j=0,dLen=recordData.VISITS[i].WEIGHT_CHG.length;
j<dLen;
j++){weightDiffArray.push(recordData.VISITS[i].WEIGHT_CHG[j]);
}if(recordData.VISITS[i].EDEMA.length>0){recordData.VISITS[i].EDEMA.sort(resultDateSort);
if(recordData.VISITS[i].EDEMA[0].VALUE!==""){tempVal=recordData.VISITS[i].EDEMA[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.EDEMA,"</dt><dd class='pt-data-mid'>",tempVal,"</dd></dl>");
tempVal="";
for(j=0,dLen=recordData.VISITS[i].EDEMA.length;
j<dLen;
j++){edemaArray.push(recordData.VISITS[i].EDEMA[j]);
}visitHTMLArray.push("<span class='left-urine-spcr'></span><span class='urine-lbl'>",pregassessi18n.URINE,"</span><span class='right-urine-spcr'></span>");
visitHTMLArray.push("<dl class='preg-data-labels'><dt class='pt-data-bot'>",pregassessi18n.PROTEIN,"</dt><dt class='pt-data-bot'>",pregassessi18n.GLUCOSE,"</dt><dt class='pt-data-bot'>",pregassessi18n.PAIN,"</dt><dt class='pt-data-bot'>",pregassessi18n.NEXT_APPT,"</dt></dl>");
if(recordData.VISITS[i].URINE_PROTEIN.length>0){recordData.VISITS[i].URINE_PROTEIN.sort(resultDateSort);
if(recordData.VISITS[i].URINE_PROTEIN[0].VALUE!==""){tempVal=recordData.VISITS[i].URINE_PROTEIN[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dl><dt>",pregassessi18n.PROTEIN,"</dt><dd class='pt-data-bot'>",tempVal,"</dd>");
tempVal="";
for(j=0,dLen=recordData.VISITS[i].URINE_PROTEIN.length;
j<dLen;
j++){uProteinArray.push(recordData.VISITS[i].URINE_PROTEIN[j]);
}if(recordData.VISITS[i].URINE_GLUCOSE.length>0){recordData.VISITS[i].URINE_GLUCOSE.sort(resultDateSort);
if(recordData.VISITS[i].URINE_GLUCOSE[0].VALUE!==""){tempVal=recordData.VISITS[i].URINE_GLUCOSE[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.GLUCOSE,"</dt><dd class='pt-data-bot'>",tempVal,"</dd>");
tempVal="";
for(j=0,dLen=recordData.VISITS[i].URINE_GLUCOSE.length;
j<dLen;
j++){uGlucoseArray.push(recordData.VISITS[i].URINE_GLUCOSE[j]);
}if(recordData.VISITS[i].PAIN.length>0){recordData.VISITS[i].PAIN.sort(resultDateSort);
if(recordData.VISITS[i].PAIN[0].VALUE!==""){tempVal=recordData.VISITS[i].PAIN[0].VALUE;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.PAIN,"</dt><dd class='pt-data-bot'>",tempVal,"</dd>");
tempVal="";
for(j=0,dLen=recordData.VISITS[i].PAIN.length;
j<dLen;
j++){painArray.push(recordData.VISITS[i].PAIN[j]);
}if(recordData.VISITS[i].NEXT_APPT.length>0){recordData.VISITS[i].NEXT_APPT.sort(resultDateSort);
if(recordData.VISITS[i].NEXT_APPT[0].VALUE!==""){tempVal=recordData.VISITS[i].NEXT_APPT[0].VALUE;
tempUnit=recordData.VISITS[i].NEXT_APPT[0].UNITS;
}else{tempVal=missingVal;
}}else{tempVal=missingVal;
}visitHTMLArray.push("<dt>",pregassessi18n.NEXT_APPT,"</dt><dd class='pt-data-bot'>",tempVal," ",tempUnit,"</dd></dt></div>");
tempVal="";
tempUnit="";
for(j=0,dLen=recordData.VISITS[i].NEXT_APPT.length;
j<dLen;
j++){nextApptArray.push(recordData.VISITS[i].NEXT_APPT[j]);
}visitHTMLArray.push("<div class='",fetalClass,"'><dl class='preg-data-labels'><dt>",pregassessi18n.FPRESENT,"</dt><dt>",pregassessi18n.FMOVE,"</dt><dt>",pregassessi18n.FHR,"</dt>");
if(fetalMore){visitHTMLArray.push("<dt>",pregassessi18n.FLIE,"</dt>");
}visitHTMLArray.push("</dl>");
if(recordData.VISITS[i].PRESENTATION.length>0){recordData.VISITS[i].PRESENTATION.sort(resultDateSort);
}var tempObj=null;
var tempDynID=null;
var newObj={};
for(j=0,dLen=recordData.VISITS[i].PRESENTATION.length;
j<dLen;
j++){tempObj=recordData.VISITS[i].PRESENTATION[j];
tempDynID=String(tempObj.DYNAMIC_LABEL_ID);
if(allFetalDataCollection[tempDynID]){if(allFetalDataCollection[tempDynID].PRESENT_VALUE===""){allFetalDataCollection[tempDynID].PRESENT_VALUE=tempObj.VALUE;
}}else{newObj={};
newObj.DYNAMIC_LABEL_ID=tempObj.DYNAMIC_LABEL_ID;
newObj.LABEL=tempObj.DYNAMIC_LABEL;
newObj.PRESENT_VALUE=tempObj.VALUE;
newObj.MOVE_VALUE="";
newObj.FHR_VALUE="";
newObj.LIE_VALUE="";
allFetalDataCollection[tempDynID]=newObj;
dynamicLabelArray.push(newObj);
}fPresentArray.push(tempObj);
}if(recordData.VISITS[i].FETAL_MOVEMENT.length>0){recordData.VISITS[i].FETAL_MOVEMENT.sort(resultDateSort);
}for(j=0,dLen=recordData.VISITS[i].FETAL_MOVEMENT.length;
j<dLen;
j++){tempObj=recordData.VISITS[i].FETAL_MOVEMENT[j];
tempDynID=String(tempObj.DYNAMIC_LABEL_ID);
if(allFetalDataCollection[tempDynID]){if(allFetalDataCollection[tempDynID].MOVE_VALUE===""){allFetalDataCollection[tempDynID].MOVE_VALUE=tempObj.VALUE;
}}else{newObj={};
newObj.DYNAMIC_LABEL_ID=tempObj.DYNAMIC_LABEL_ID;
newObj.LABEL=tempObj.DYNAMIC_LABEL;
newObj.PRESENT_VALUE="";
newObj.MOVE_VALUE=tempObj.VALUE;
newObj.FHR_VALUE="";
newObj.LIE_VALUE="";
allFetalDataCollection[tempObj.DYNAMIC_LABEL_ID]=newObj;
dynamicLabelArray.push(newObj);
}fMoveArray.push(tempObj);
}if(recordData.VISITS[i].FHR.length>0){recordData.VISITS[i].FHR.sort(resultDateSort);
}for(j=0,dLen=recordData.VISITS[i].FHR.length;
j<dLen;
j++){tempObj=recordData.VISITS[i].FHR[j];
tempDynID=String(tempObj.DYNAMIC_LABEL_ID);
if(allFetalDataCollection[tempDynID]){if(allFetalDataCollection[tempDynID].FHR_VALUE===""){allFetalDataCollection[tempDynID].FHR_VALUE=tempObj.VALUE;
}}else{newObj={};
newObj.DYNAMIC_LABEL_ID=tempObj.DYNAMIC_LABEL_ID;
newObj.LABEL=tempObj.DYNAMIC_LABEL;
newObj.PRESENT_VALUE="";
newObj.MOVE_VALUE="";
newObj.FHR_VALUE=tempObj.VALUE;
newObj.LIE_VALUE="";
allFetalDataCollection[tempObj.DYNAMIC_LABEL_ID]=newObj;
dynamicLabelArray.push(newObj);
}fHRArray.push(tempObj);
}if(fetalMore){if(recordData.VISITS[i].FETAL_LIE.length>0){recordData.VISITS[i].FETAL_LIE.sort(resultDateSort);
}for(j=0,dLen=recordData.VISITS[i].FETAL_LIE.length;
j<dLen;
j++){tempObj=recordData.VISITS[i].FETAL_LIE[j];
tempDynID=String(tempObj.DYNAMIC_LABEL_ID);
if(allFetalDataCollection[tempDynID]){if(allFetalDataCollection[tempDynID].LIE_VALUE===""){allFetalDataCollection[tempDynID].LIE_VALUE=tempObj.VALUE;
}}else{newObj={};
newObj.DYNAMIC_LABEL_ID=tempObj.DYNAMIC_LABEL_ID;
newObj.LABEL=tempObj.DYNAMIC_LABEL;
newObj.PRESENT_VALUE="";
newObj.MOVE_VALUE="";
newObj.FHR_VALUE="";
newObj.LIE_VALUE=tempObj.VALUE;
allFetalDataCollection[tempObj.DYNAMIC_LABEL_ID]=newObj;
dynamicLabelArray.push(newObj);
}fLieArray.push(tempObj);
}}if(dynamicLabelArray.length>0){if(dynamicLabelArray.length>maxFetusCnt){maxFetusCnt=dynamicLabelArray.length;
maxFetusIdx=i;
}for(j=0,dLen=dynamicLabelArray.length;
j<dLen;
j++){var tempID=String(dynamicLabelArray[j].DYNAMIC_LABEL_ID);
dynamicLabelArray[j]=allFetalDataCollection[tempID];
}dynamicLabelArray.sort(dynamicLabelSort);
for(j=0,dLen=dynamicLabelArray.length;
j<dLen;
j++){tempVal=(dynamicLabelArray[j].LABEL!=="")?dynamicLabelArray[j].LABEL:missingVal;
visitHTMLArray.push("<dl>");
var displayValue=dynamicLabelArray[j].PRESENT_VALUE!==""?dynamicLabelArray[j].PRESENT_VALUE:missingVal;
visitHTMLArray.push("<dt>",pregassessi18n.FPRESENT,"</dt><dd><span class='fetal-result'>",displayValue,"</span><span class='fetal-label'>(",tempVal,")</span></dd>");
displayValue=dynamicLabelArray[j].MOVE_VALUE!==""?dynamicLabelArray[j].MOVE_VALUE:missingVal;
visitHTMLArray.push("<dt>",pregassessi18n.FMOVE,"</dt><dd><span class='fetal-result'>",displayValue,"</span><span class='fetal-label'>(",tempVal,")</span></dd>");
displayValue=dynamicLabelArray[j].FHR_VALUE!==""?dynamicLabelArray[j].FHR_VALUE:missingVal;
visitHTMLArray.push("<dt>",pregassessi18n.FHR,"</dt><dd><span class='fetal-result'>",displayValue,"</span><span class='fetal-label'>(",tempVal,")</span></dd>");
if(fetalMore){displayValue=dynamicLabelArray[j].LIE_VALUE!==""?dynamicLabelArray[j].LIE_VALUE:missingVal;
visitHTMLArray.push("<dt>",pregassessi18n.FLIE,"</dt><dd><span class='fetal-result'>",displayValue,"</span><span class='fetal-label'>(",tempVal,")</span></dd>");
}visitHTMLArray.push("</dl>");
tempVal="";
}}else{visitHTMLArray.push("<dl><dt>",pregassessi18n.FPRESENT,"</dt><dd>",missingVal,"</dd><dt>",pregassessi18n.FMOVE,"</dt><dd>",missingVal,"</dd><dt>",pregassessi18n.FHR,"</dt><dd>",missingVal,"</dd>");
if(fetalMore){visitHTMLArray.push("<dt>",pregassessi18n.FLIE,"</dt><dd>",missingVal,"</dd>");
}visitHTMLArray.push("</dl>");
}visitHTMLArray.push("</div>");
if(recordData.VISITS[i].COMMENT.length>0){recordData.VISITS[i].COMMENT.sort(resultDateSort);
if(recordData.VISITS[i].COMMENT[0].VALUE.length>255){tempVal=recordData.VISITS[i].COMMENT[0].VALUE.substr(0,252)+"...";
tempCmntHvr="<div class='cmnt-hover preg-res-hvr'><p>"+pregassessi18n.COMMENTS+"<br />"+recordData.VISITS[i].COMMENT[0].VALUE+"</p></div>";
}else{tempVal=recordData.VISITS[i].COMMENT[0].VALUE;
}}else{tempVal="";
}visitHTMLArray.push("<div class='cmnt-data'><span>",pregassessi18n.COMMENTS,"</span><p>",tempVal,"</p></div>",tempCmntHvr,"</div>");
}visitHTMLArray.push("</div>");
buildHTML.push(navBarHTMLArray.join(""),visitHTMLArray.join(""));
buildHTML.push("<div id='pregallResults",compID,"' class='preg-assess-all-results'>");
if(component.getFundalHt()){buildHTML.push(createHoverHTML("fundalHeightHover"+compID,pregassessi18n.FUNDAL_HEIGHT,fundalHeightArray));
}if(component.getPreSgnAndSym()){buildHTML.push(createHoverHTML("pretermSignsHover"+compID,pregassessi18n.PRETERMSIGNS,preTermSignsArray));
}if(component.getCerEffLen()){buildHTML.push(createHoverHTML("cervicalEffacementHover"+compID,pregassessi18n.CERVICAL_EFF,cervicalEffArray));
}if(component.getCerDilat()){buildHTML.push(createHoverHTML("cervicalDilationHover"+compID,pregassessi18n.CERVICAL_DIL,cervicalDilArray));
}if(component.getCerStat()){buildHTML.push(createHoverHTML("cervicalStationHover"+compID,pregassessi18n.CERVICAL_STAT,cervicalStatArray));
}if(component.getBPResGroup()){buildHTML.push("<div id='pregBPHover",compID,"' class='preg-res-hvr'><h4 class='preg-data-title'>",pregassessi18n.BP,"</h4><dl class='preg-all-res'>");
if(bloodPressureArray.length>0){j=0;
hLen=0;
bloodPressureArray.sort(resultDateSort);
for(k=0,hLen=bloodPressureArray.length;
k<hLen;
k++){var resDate=new Date();
tempVal=(bloodPressureArray[k].SYS_VALUE!=="")?bloodPressureArray[k].SYS_VALUE:missingVal;
tempVal2=(bloodPressureArray[k].DIA_VALUE!=="")?bloodPressureArray[k].DIA_VALUE:missingVal;
resDate.setISO8601(bloodPressureArray[k].DATE);
buildHTML.push("<dt>",resDate.format("longDateTime3"),"</dt><dd>",tempVal,"/",tempVal2," ",bloodPressureArray[k].UNITS,"</dd><br>");
}}else{buildHTML.push("<dt>--</dt><dd>--</dd>");
}buildHTML.push("</dl></div>");
}if(component.getWeight()){buildHTML.push(createHoverHTML("pregWeightHover"+compID,pregassessi18n.WEIGHT,weightArray));
}if(component.getCumulativeWt()){buildHTML.push(createHoverHTML("pregWeightChgHover"+compID,pregassessi18n.WEIGHT_CHG,weightDiffArray));
}if(component.getEdema()){buildHTML.push(createHoverHTML("edemaHover"+compID,pregassessi18n.EDEMA,edemaArray));
}if(component.getProtein()){buildHTML.push(createHoverHTML("urineProteinHover"+compID,pregassessi18n.URINE_PROTEIN,uProteinArray));
}if(component.getGlucose()){buildHTML.push(createHoverHTML("urineGlucoseHover"+compID,pregassessi18n.URINE_GLUCOSE,uGlucoseArray));
}if(component.getPain()){buildHTML.push(createHoverHTML("pregPainHover"+compID,pregassessi18n.PAIN,painArray));
}if(component.getNextAppointment()){buildHTML.push(createHoverHTML("pregNxtApptHover"+compID,pregassessi18n.NEXT_APPT,nextApptArray));
}if(component.getPresentation()){buildHTML.push(createFetalHoverHTML("fetalPresentHover"+compID,pregassessi18n.FPRESENT,fPresentArray));
}if(component.getFetalMovement()){buildHTML.push(createFetalHoverHTML("fetalMoveHover"+compID,pregassessi18n.FMOVE,fMoveArray));
}if(component.getFetalHrRt()){buildHTML.push(createFetalHoverHTML("fetalHeartRateHover"+compID,pregassessi18n.FHR,fHRArray));
}if(fetalMore){buildHTML.push(createFetalHoverHTML("fetalLieHover"+compID,pregassessi18n.FLIE,fLieArray));
}buildHTML.push("</div>");
MP_Util.Doc.FinalizeComponent(buildHTML.join(""),component,"");
var navLinks=$("#"+navBarID).find("li");
var visitCards=$("div.preg-visit-card");
var visitCardPane=$("#"+visitCardID);
var pregComp=_g("pa"+compID);
var visitCardDivs=Util.Style.g("preg-visit-card",pregComp,"DIV");
if(maxFetusIdx>-1){pregComp=_g("pa"+compID);
var maxFetusDiv=Util.Style.g(fetalClass,visitCardDivs[maxFetusIdx],"DIV")[0];
var fetalHeight=$(maxFetusDiv).height();
j=0;
dLen=0;
for(j=0,dLen=visitCardDivs.length;
j<dLen;
j++){var tempDiv=Util.Style.g(fetalClass,visitCardDivs[j],"DIV")[0];
$(tempDiv).height(fetalHeight);
}}for(i=0,len=visitCardDivs.length;
i<len;
i++){var patientData=$(visitCardDivs[i]).find("div.patient-data").find("dd");
if(patientData){var cervDilSpan=Util.Style.g("cerv-dil",patientData[2],"SPAN")[0];
var cervEffSpan=Util.Style.g("cerv-eff",patientData[2],"SPAN")[0];
var cervStatSpan=Util.Style.g("cerv-stat",patientData[2],"SPAN")[0];
var weightSpan=Util.Style.g("cur-weight",patientData[4],"SPAN")[0];
var weightDiffSpan=Util.Style.g("diff-weight",patientData[4],"SPAN")[0];
standardVisitDDHover(patientData[0],"fundalHeightHover"+compID,compID);
standardVisitDDHover(patientData[1],"pretermSignsHover"+compID,compID);
standardVisitDDHover(cervDilSpan,"cervicalDilationHover"+compID,compID);
standardVisitDDHover(cervEffSpan,"cervicalEffacementHover"+compID,compID);
standardVisitDDHover(cervStatSpan,"cervicalStationHover"+compID,compID);
standardVisitDDHover(patientData[3],"pregBPHover"+compID,compID);
standardVisitDDHover(weightSpan,"pregWeightHover"+compID,compID);
standardVisitDDHover(weightDiffSpan,"pregWeightChgHover"+compID,compID);
standardVisitDDHover(patientData[5],"edemaHover"+compID,compID);
standardVisitDDHover(patientData[6],"urineProteinHover"+compID,compID);
standardVisitDDHover(patientData[7],"urineGlucoseHover"+compID,compID);
standardVisitDDHover(patientData[8],"pregPainHover"+compID,compID);
standardVisitDDHover(patientData[9],"pregNxtApptHover"+compID,compID);
}var fetalData=$(visitCardDivs[i]).find("div."+fetalClass).find("dl");
if(fetalData){j=0;
fLen=0;
for(j=1,fLen=fetalData.length;
j<fLen;
j++){var fetalDD=$(fetalData[j]).find("dd");
standardVisitDDHover(fetalDD[0],"fetalPresentHover"+compID,compID);
standardVisitDDHover(fetalDD[1],"fetalMoveHover"+compID,compID);
standardVisitDDHover(fetalDD[2],"fetalHeartRateHover"+compID,compID);
if(fetalMore){standardVisitDDHover(fetalDD[3],"fetalLieHover"+compID,compID);
}}}var cmntP=$(visitCardDivs[i]).find("p");
var cmntSpan=$(visitCardDivs[i]).find("span");
var charCnt=255;
if($(cmntP).height()+$(cmntSpan).height()>$(cmntP).parent().height()){charCnt=charCnt-100;
var hover=Util.Style.g("cmnt-hover",visitCardDivs[i],"DIV")[0];
if(hover){Util.de(hover);
}tempVal=recordData.VISITS[i].COMMENT[0].VALUE.substr(0,charCnt-3)+"...";
tempCmntHvr="<div class='cmnt-hover preg-res-hvr'><p>"+pregassessi18n.COMMENTS+"<br />"+recordData.VISITS[i].COMMENT[0].VALUE+"</p></div>";
$(cmntP).text(tempVal);
var tempCmnt=$(cmntP).parent().html()+""+tempCmntHvr;
$(cmntP).parent().html(tempCmnt);
}var commentHover=Util.Style.g("cmnt-hover",visitCardDivs[i],"DIV")[0];
var commentHvr=null;
if(commentHover){commentHvr=function(hvrDiv){var commentP=$(visitCardDivs[i]).find("p");
$(commentP).mouseenter(function(evt){$(this).addClass("hover-highlight");
pregHMO(evt,hvrDiv);
});
$(commentP).mouseleave(function(evt){$(this).removeClass("hover-highlight");
pregHoverMouseTerminated(evt,hvrDiv,compID);
});
$(commentP).mousemove(function(evt){pregHoverMouseMovement(evt,hvrDiv);
});
};
commentHvr(commentHover);
}}$("#"+navBarID).serialScroll({target:"#"+navItemListID,items:"li",prev:"div.preg-nav-left",next:"div.preg-nav-right",axis:"xy",duration:300,force:true,cycle:false,step:8,onBefore:function(e,elem,$pane,$items,pos){e.preventDefault();
if(this.blur){this.blur();
}},onAfter:function(elem){}});
var navClick=null;
for(i=0,len=navLinks.length;
i<len;
i++){navClick=function(toCard){$(navLinks[i]).click(function(){$("div.selected").removeClass("selected");
$("li.selected").removeClass("selected");
$(toCard).addClass("selected");
$(this).addClass("selected");
$target=$(toCard);
visitCardPane.stop().scrollTo($target,500);
});
};
navClick(visitCards[i]);
}var defaultCard=visitCards[0];
$(defaultCard).addClass("selected");
$(navLinks[0]).addClass("selected");
visitCardPane.stop().scrollTo($(defaultCard),500);
}};
}();
