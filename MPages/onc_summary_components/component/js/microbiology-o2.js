function MicrobiologyComponentWFStyle(){this.initByNamespace("wf-mic");
}MicrobiologyComponentWFStyle.prototype=new ComponentStyle();
MicrobiologyComponentWFStyle.prototype.constructor=ComponentStyle;
function MicrobiologyComponentWF(criterion){this.setLookBackDropDown(true);
this.setCriterion(criterion);
this.setStyles(new MicrobiologyComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.MICRO.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.MICRO.O2 - render component");
this.setIncludeLineNumber(true);
this.setPregnancyLookbackInd(true);
this.resultCount=0;
this.m_lastXReportsCap=50;
this.m_showingLastXReports=false;
this.m_resultRangeSelectionDisplayString=i18n.discernabu.render_strategy.LAST_N_REPORTS;
this.setLookbackUnits(this.m_lastXReportsCap);
this.setLookbackUnitTypeFlag(ResultRangeSelectionUtility.CustomType);
}MicrobiologyComponentWF.prototype=new MPageComponent();
MicrobiologyComponentWF.prototype.constructor=MPageComponent;
MicrobiologyComponentWF.prototype.resizeComponent=function(){MPageComponent.prototype.resizeComponent.call(this,null);
};
MicrobiologyComponentWF.prototype.retrieveComponentData=function(){var component=this;
var criterion=component.getCriterion();
var loadTimer=new RTMSTimer(component.getComponentLoadTimerName(),criterion.category_mean);
var renderTimer=new RTMSTimer(component.getComponentRenderTimerName(),criterion.category_mean);
var groups=component.getGroups();
var events=(groups&&groups.length>0)?groups[0].getEventSets():null;
var sEvents=MP_Util.CreateParamArray(events,1);
var paramArray=[];
var scriptRequest=new ComponentScriptRequest();
var encntrOption=(component.getScope()===1)?"0.0":(criterion.encntr_id+".0");
var lookBackUnits=(component.getLookbackUnits()!==null)?component.getLookbackUnits():"0";
var lookBackType=(component.getLookbackUnitTypeFlag()!==null)?component.getLookbackUnitTypeFlag():"0";
if(lookBackType===ResultRangeSelectionUtility.CustomType){lookBackUnits=component.getBrLookbackUnits();
lookBackType=component.getBrLookbackUnitTypeFlag();
this.m_showingLastXReports=true;
}else{this.m_showingLastXReports=false;
}paramArray.push("^MINE^",criterion.person_id+".0",encntrOption,criterion.provider_id+".0",lookBackUnits,sEvents,criterion.position_cd+".0",criterion.ppr_cd+".0",lookBackType);
if(this.m_showingLastXReports){paramArray.push(this.m_lastXReportsCap);
}scriptRequest.setComponent(component);
scriptRequest.setLoadTimer(loadTimer);
scriptRequest.setRenderTimer(renderTimer);
scriptRequest.setProgramName("MP_GET_MICRO_RESULTS_JSON");
scriptRequest.setParameterArray(paramArray);
scriptRequest.performRequest();
};
MicrobiologyComponentWF.prototype.processMicroResultsForRender=function(results){var component=this;
var compNS=component.getStyles().getNameSpace();
var microResultIndex=results.MICRO_CULTURE.length;
var codeArray=MP_Util.LoadCodeListJSON(results.CODES);
while(microResultIndex--){var microResult=null;
var microOrderName="";
var microResultModifyInd=false;
var susceptibilityClass="";
var growthStatus="";
var growthPositiveIndClass="";
var organisms="";
var specimenSite="";
var specimenSource="";
var specimenSourceSite="";
var collectionDtTm=new Date();
var lastUpdateDtTm=new Date();
var resultStatus="";
microResult=results.MICRO_CULTURE[microResultIndex];
microOrderName=microResult.EVENT_SET_CD?MP_Util.GetValueFromArray(microResult.EVENT_SET_CD,codeArray).display:"--";
var resultEventStatusMeaning=MP_Util.GetValueFromArray(microResult.EVENT_STATUS_CD,codeArray).meaning;
if(resultEventStatusMeaning==="MODIFIED"||resultEventStatusMeaning==="ALTERED"){microResultModifyInd=true;
}resultStatus=microResult.EVENT_STATUS_CD?MP_Util.GetValueFromArray(microResult.EVENT_STATUS_CD,codeArray).display:"--";
if(microResult.MICRO_CLASS_IND===1){susceptibilityClass=(microResult.SUSCEPTIBILITY_IND===1)?compNS+"-suscep-pos":"";
if(microResult.SPECIMEN_COLLECTION.MICROBIOLOGY_INTERPRETATION_CD){var microInterpObj=MP_Util.GetValueFromArray(microResult.SPECIMEN_COLLECTION.MICROBIOLOGY_INTERPRETATION_CD,codeArray);
growthStatus=microInterpObj.display;
growthPositiveIndClass=(microInterpObj.meaning==="POSITIVE")?"res-severe":"";
}var organismArr=[];
var isolateWorkUpsArr=microResult.ISOLATE_WORKUPS;
var isolateWorkUpsLength=isolateWorkUpsArr.length;
for(var orgIdx=0;
orgIdx<isolateWorkUpsLength;
orgIdx++){if(isolateWorkUpsArr[orgIdx].ORGANISM_CD){organismArr.push(MP_Util.GetValueFromArray(isolateWorkUpsArr[orgIdx].ORGANISM_CD,codeArray).display);
}}organisms=organismArr.join(", ");
specimenSite=microResult.SPECIMEN_COLLECTION.BODY_SITE_CD?MP_Util.GetValueFromArray(microResult.SPECIMEN_COLLECTION.BODY_SITE_CD,codeArray).display:"";
specimenSource=microResult.SPECIMEN_COLLECTION.SOURCE_CD?MP_Util.GetValueFromArray(microResult.SPECIMEN_COLLECTION.SOURCE_CD,codeArray).display:"";
if(specimenSource&&specimenSite){specimenSourceSite=specimenSource+" / "+specimenSite;
}else{specimenSourceSite=specimenSource+specimenSite;
}if(microResult.ORDERS[0]&&microResult.ORDERS[0].DEPT_STATUS_CD){resultStatus=MP_Util.GetValueFromArray(microResult.ORDERS[0].DEPT_STATUS_CD,codeArray).display;
}}if(microResult.SPECIMEN_COLLECTION.COLLECTED_DATE){collectionDtTm.setISO8601(microResult.SPECIMEN_COLLECTION.COLLECTED_DATE);
}else{collectionDtTm.setISO8601(microResult.EFFECTIVE_DATE);
}if(microResult.UPDT_DATE){lastUpdateDtTm.setISO8601(microResult.UPDT_DATE);
}else{lastUpdateDtTm.setISO8601(microResult.EFFECTIVE_DATE);
}var collectedDtTmDisp=MP_Util.DisplayDateByOption(component,collectionDtTm);
var lastUpdateDtTmDisp=MP_Util.DisplayDateByOption(component,lastUpdateDtTm);
growthStatus=growthStatus?growthStatus:"--";
organisms=organisms?organisms:"--";
specimenSourceSite=specimenSourceSite?specimenSourceSite:"--";
collectedDtTmDisp=collectedDtTmDisp?collectedDtTmDisp:"--";
lastUpdateDtTmDisp=lastUpdateDtTmDisp?lastUpdateDtTmDisp:"--";
var viewerType=microResult.VIEWER_TYPE;
var microResultViewerAnchor="";
if(viewerType!==""&&viewerType!=="STANDARD"){microResultViewerAnchor="<a onclick='ResultViewer.launchAdHocViewer("+microResult.EVENT_ID+'.0, "'+microOrderName+"\"); return false;' href='#'>"+microOrderName+"</a>";
}microOrderName=microResultViewerAnchor||microOrderName;
microResult.ORDER_NAME=microResultModifyInd?"<span>"+microOrderName+"</span><span class='res-modified'>&nbsp;</span>":"<span>"+microOrderName+"</span>";
microResult.SUSCEPTIBILITY="<div"+(susceptibilityClass?" class='"+susceptibilityClass+"'":"")+">&nbsp;</div>";
microResult.GROWTH="<span"+(growthPositiveIndClass?" class='"+growthPositiveIndClass+"'":"")+">"+growthStatus+"</span>";
microResult.ORGANISMS="<span>"+organisms+"</span>";
microResult.SOURCE_SITE="<span>"+specimenSourceSite+"</span>";
microResult.COLLECTED_DT_DISP="<span>"+collectedDtTmDisp+"</span>";
microResult.LAST_UPDATED_DT_DISP="<span>"+lastUpdateDtTmDisp+"</span>";
microResult.STATUS="<span>"+resultStatus+"</span>";
microResult.COLLECTED_DT=microResult.SPECIMEN_COLLECTION.COLLECTED_DATE?microResult.SPECIMEN_COLLECTION.COLLECTED_DATE:microResult.EFFECTIVE_DATE;
microResult.LAST_UPDATED_DT=microResult.UPDT_DATE?microResult.UPDT_DATE:microResult.EFFECTIVE_DATE;
}};
MicrobiologyComponentWF.prototype.createColumnObject=function(columnId,customCSSClass,columnDisplay,isSortable,primarySortField,renderTemplate){var columnObj=new TableColumn();
columnObj.setColumnId(columnId);
columnObj.setCustomClass(customCSSClass);
columnObj.setColumnDisplay(columnDisplay);
if(isSortable){columnObj.setIsSortable(isSortable);
columnObj.setPrimarySortField(primarySortField);
}columnObj.setRenderTemplate("${"+renderTemplate+"}");
return columnObj;
};
MicrobiologyComponentWF.prototype.renderComponent=function(reply){var compNS=this.getStyles().getNameSpace();
var compID=this.getComponentId();
var microI18n=i18n.discernabu.microbiology_o2;
var microResults=null;
this.processMicroResultsForRender(reply);
microResults=reply.MICRO_CULTURE;
this.resultCount=microResults.length;
var elapsedTimeSuffix=(this.getDateFormat()===3)?"<br />"+microI18n.AGO:"";
var collectedColumnDisplay=microI18n.COLLECTED+elapsedTimeSuffix;
var lastUpdatedColumnDisplay=microI18n.LAST_UPDATED+elapsedTimeSuffix;
var microTable=new ComponentTable();
microTable.setNamespace(compNS+compID);
microTable.addColumn(this.createColumnObject("Order",compNS+"-order-name",microI18n.ORDER,true,"ORDER_NAME","ORDER_NAME"));
microTable.addColumn(this.createColumnObject("Susceptibility",compNS+"-susceptibility",microI18n.SUSCEPTIBILITY,true,"SUSCEPTIBILITY","SUSCEPTIBILITY"));
microTable.addColumn(this.createColumnObject("Growth",compNS+"-growth",microI18n.GROWTH,true,"GROWTH","GROWTH"));
microTable.addColumn(this.createColumnObject("Organisms",compNS+"-organisms",microI18n.ORGANISMS,true,"ORGANISMS","ORGANISMS"));
microTable.addColumn(this.createColumnObject("SourceSite",compNS+"-source-site",microI18n.SOURCE_SITE,true,"SOURCE_SITE","SOURCE_SITE"));
microTable.addColumn(this.createColumnObject("CollectionDateTime",compNS+"-collect-update-dt",collectedColumnDisplay,true,"COLLECTED_DT","COLLECTED_DT_DISP"));
microTable.addColumn(this.createColumnObject("UpdatedDateTime",compNS+"-collect-update-dt",lastUpdatedColumnDisplay,true,"LAST_UPDATED_DT","LAST_UPDATED_DT_DISP"));
microTable.addColumn(this.createColumnObject("Status",compNS+"-status",microI18n.STATUS,true,"STATUS","STATUS"));
microTable.bindData(microResults);
microTable.sortByColumnInDirection("CollectionDateTime",TableColumn.SORT.DESCENDING);
this.setComponentTable(microTable);
var disclaimerMessage="";
if(this.m_showingLastXReports&&this.resultCount){disclaimerMessage="<div class="+compNS+"-disclaimer>"+this.createDisclaimerMessage()+"</div>";
}this.finalizeComponent(microTable.render()+disclaimerMessage,MP_Util.CreateTitleText(this,this.resultCount));
CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:this.resultCount});
};
MicrobiologyComponentWF.prototype.postProcessing=function(){MPageComponent.prototype.postProcessing.call(this);
if(this.resultCount===0){CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:0});
}};
MicrobiologyComponentWF.prototype.preProcessing=function(){var customMenuItem=new ResultRangeSelection();
customMenuItem.setType(ResultRangeSelectionUtility.CustomType);
customMenuItem.setDirection(ResultRangeSelectionUtility.direction.BACKWARD);
customMenuItem.setUnits(this.m_lastXReportsCap);
customMenuItem.setScope(this.getScope());
customMenuItem.setDisplay(this.m_resultRangeSelectionDisplayString);
ResultRangeSelectionUtility.addCustomResultRangeSelectionItem(this,customMenuItem);
};
MicrobiologyComponentWF.prototype.createDisclaimerMessage=function(){var lookbackDisplay="";
switch(this.getBrLookbackUnitTypeFlag()){case 1:lookbackDisplay=i18n.discernabu.LAST_N_HOURS_LOWER.replace("{0}",this.getBrLookbackUnits());
break;
case 2:lookbackDisplay=i18n.discernabu.LAST_N_DAYS_LOWER.replace("{0}",this.getBrLookbackUnits());
break;
case 3:lookbackDisplay=i18n.discernabu.LAST_N_WEEKS_LOWER.replace("{0}",this.getBrLookbackUnits());
break;
case 4:lookbackDisplay=i18n.discernabu.LAST_N_MONTHS_LOWER.replace("{0}",this.getBrLookbackUnits());
break;
case 5:lookbackDisplay=i18n.discernabu.LAST_N_YEARS_LOWER.replace("{0}",this.getBrLookbackUnits());
break;
default:lookbackDisplay=(this.getScope()===2)?i18n.discernabu.SELECTED_VISIT_LOWER:i18n.discernabu.All_VISITS_LOWER;
}return"* "+i18n.discernabu.microbiology_o2.DISCLAIMER.replace("{0}",this.m_lastXReportsCap).replace("{1}",lookbackDisplay);
};
