function FraminghamRisksComponentStyles(){this.initByNamespace("fram-risks");
}FraminghamRisksComponentStyles.inherits(ComponentStyle);
function FraminghamRisksComponentO1(criterion){this.setStyles(new FraminghamRisksComponentStyles());
this.setCriterion(criterion);
this.setComponentLoadTimerName("USR:MPG.FraminghamRisksComponent.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.FraminghamRisksComponent.O1 - render component");
this.meaning="ADVSR_FRAM_RISK_DETAILS";
this.title="Risk Results/Details";
this.setScope(1);
this.bpClasses=[0];
this.bpStatuses=[0];
this.bpOrders=[0];
this.diabDiag=[0];
this.diabProb=[0];
this.diastolicEvents=[0];
this.HDLEvents=[0];
this.raceCds=[0];
this.smokerDiag=[0];
this.smokerNomens={};
this.smokerProb=[0];
this.systolicEvents=[0];
this.totCholEvents=[0];
this.scoreResultCE=[];
this.framRiskCE=[];
this.CHOLText="";
this.HDLText="";
this.BPText="";
this.framI18n=i18n.innovation.framinghamCardiacRisk;
this.mgDLText=this.framI18n.OPT_MGDL;
this.mmollText=this.framI18n.OPT_MMOLL;
this.CHOLI18n=this.framI18n.OOR_CHOLESTEROL.replace("{x}",this.mgDLText).replace("{y}",this.mmollText);
this.HDLI18n=this.framI18n.OOR_HDL.replace("{x}",this.mgDLText).replace("{y}",this.mmollText);
this.BPI18n=this.framI18n.OOR_BP;
this.OORText={};
this.OORText.Current={CHOLText:"",HDLText:"",BPText:""};
this.OORText.Future={CHOLText:"",HDLText:"",BPText:""};
this.pointsObj={};
this.pointsObj.Current={};
this.pointsObj.Future={};
this.compRisk=0;
this.cardioRiskDisplay="";
this.framinghamDisplay="";
this.isStatinEnabled=false;
this.statinLinkName="Statin Decision Aid";
this.isDemographicsLoaded=false;
this.isResultsLoaded=false;
FraminghamRisksComponentO1.method("InsertData",function(){FRAM_RISKS_O1.CheckStatin(this);
});
FraminghamRisksComponentO1.method("setCardioRiskDisplay",function(value){this.cardioRiskDisplay=value;
});
FraminghamRisksComponentO1.method("getCardioRiskDisplay",function(){return this.cardioRiskDisplay;
});
FraminghamRisksComponentO1.method("setFraminghamDisplay",function(value){this.framinghamDisplay=value;
});
FraminghamRisksComponentO1.method("getFraminghamDisplay",function(){return this.framinghamDisplay;
});
FraminghamRisksComponentO1.method("setBloodPressureClasses",function(values){this.bpClasses=values;
});
FraminghamRisksComponentO1.method("getBloodPressureClasses",function(){return this.bpClasses;
});
FraminghamRisksComponentO1.method("setBloodPressureStatuses",function(values){this.bpStatuses=values;
});
FraminghamRisksComponentO1.method("getBloodPressureStatuses",function(){return this.bpStatuses;
});
FraminghamRisksComponentO1.method("setBloodPressureOrders",function(values){this.bpOrders=values;
});
FraminghamRisksComponentO1.method("getBloodPressureOrders",function(){return this.bpOrders;
});
FraminghamRisksComponentO1.method("setDiabeticDiag",function(values){this.diabDiag=values;
});
FraminghamRisksComponentO1.method("getDiabeticDiag",function(){return this.diabDiag;
});
FraminghamRisksComponentO1.method("setDiabeticProb",function(values){this.diabProb=values;
});
FraminghamRisksComponentO1.method("getDiabeticProb",function(){return this.diabProb;
});
FraminghamRisksComponentO1.method("setDiastolicEvents",function(values){this.diastolicEvents=values;
});
FraminghamRisksComponentO1.method("getDiastolicEvents",function(){return this.diastolicEvents;
});
FraminghamRisksComponentO1.method("setHDLEvents",function(values){this.HDLEvents=values;
});
FraminghamRisksComponentO1.method("getHDLEvents",function(){return this.HDLEvents;
});
FraminghamRisksComponentO1.method("setRaceCds",function(values){this.raceCds=values;
});
FraminghamRisksComponentO1.method("getRaceCds",function(){return this.raceCds;
});
FraminghamRisksComponentO1.method("setSmokerDiag",function(values){this.smokerDiag=values;
});
FraminghamRisksComponentO1.method("getSmokerDiag",function(){return this.smokerDiag;
});
FraminghamRisksComponentO1.method("setSmokerNomens",function(values){this.smokerNomens=values;
});
FraminghamRisksComponentO1.method("getSmokerNomens",function(){return this.smokerNomens;
});
FraminghamRisksComponentO1.method("setSmokerProb",function(values){this.smokerProb=values;
});
FraminghamRisksComponentO1.method("getSmokerProb",function(){return this.smokerProb;
});
FraminghamRisksComponentO1.method("setSystolicEvents",function(values){this.systolicEvents=values;
});
FraminghamRisksComponentO1.method("getSystolicEvents",function(){return this.systolicEvents;
});
FraminghamRisksComponentO1.method("setCholEvents",function(values){this.totCholEvents=values;
});
FraminghamRisksComponentO1.method("getCholEvents",function(){return this.totCholEvents;
});
FraminghamRisksComponentO1.method("setOutOfRangeText",function(state,section,value){if(state===""){state="Current";
}if(value){this.OORText[state][section+"Text"]=this[section+"I18n"]+"&nbsp;";
}else{this.OORText[state][section+"Text"]="";
}});
FraminghamRisksComponentO1.method("getOutOfRangeText",function(state){if(state===""){state="Current";
}var outOfRangeText=this.OORText[state].CHOLText+this.OORText[state].HDLText+this.OORText[state].BPText;
return outOfRangeText;
});
FraminghamRisksComponentO1.method("setPoints",function(state,type,value){if(state===""){state="Current";
}this.pointsObj[state][type]=value;
});
FraminghamRisksComponentO1.method("getPoints",function(state){if(state===""){state="Current";
}return this.pointsObj[state];
});
FraminghamRisksComponentO1.method("setCompRisk",function(value){this.compRisk=value;
});
FraminghamRisksComponentO1.method("getCompRisk",function(){return this.compRisk;
});
FraminghamRisksComponentO1.method("setScoreResultCE",function(value){this.scoreResultCE=value;
});
FraminghamRisksComponentO1.method("getScoreResultCE",function(){return this.scoreResultCE;
});
FraminghamRisksComponentO1.method("setFramRiskCE",function(value){this.framRiskCE=value;
});
FraminghamRisksComponentO1.method("getFramRiskCE",function(){return this.framRiskCE;
});
FraminghamRisksComponentO1.method("setIsStatinEnabled",function(values){this.isStatinEnabled=values;
});
FraminghamRisksComponentO1.method("getIsStatinEnabled",function(){return this.isStatinEnabled;
});
FraminghamRisksComponentO1.method("setStatinLinkName",function(values){this.statinLinkName=values;
});
FraminghamRisksComponentO1.method("getStatinLinkName",function(){return this.statinLinkName;
});
FraminghamRisksComponentO1.method("setIsDemographicsLoaded",function(value){this.isDemographicsLoaded=value;
});
FraminghamRisksComponentO1.method("getIsDemographicsLoaded",function(){return this.isDemographicsLoaded;
});
FraminghamRisksComponentO1.method("setIsResultsLoaded",function(value){this.isResultsLoaded=value;
});
FraminghamRisksComponentO1.method("getIsResultsLoaded",function(){return this.isResultsLoaded;
});
}FraminghamRisksComponentO1.inherits(MPageComponent);
FraminghamRisksComponentO1.prototype=new MPageComponent();
FraminghamRisksComponentO1.prototype.constructor=MPageComponent;
FraminghamRisksComponentO1.prototype.loadFilterMappings=function(){this.addFilterMappingObject("BP_MED_CLASS",{setFunction:this.setBloodPressureClasses,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("BP_MED_STATUS",{setFunction:this.setBloodPressureStatuses,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("BP_MED_SYN",{setFunction:this.setBloodPressureOrders,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("DIABETIC_DIAGNOSIS_CODE",{setFunction:this.setDiabeticDiag,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("DIABETIC_PROBLEM_CODE",{setFunction:this.setDiabeticProb,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("DIASTOLIC_BP_EVENT",{setFunction:this.setDiastolicEvents,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("HDLLEVEL_EVENT",{setFunction:this.setHDLEvents,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("RACE",{setFunction:this.setRaceCds,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("SMOKER_DIAGNOSIS_CODE",{setFunction:this.setSmokerDiag,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("SMOKER_EVENT_NOMEN",{setFunction:this.setSmokerNomens,type:"Nomen",field:"NOMEN"});
this.addFilterMappingObject("SMOKER_PROBLEM_CODE",{setFunction:this.setSmokerProb,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("SYSTOLIC_BP_EVENT",{setFunction:this.setSystolicEvents,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("TOTAL_CHOLESTEROL_EVENT",{setFunction:this.setCholEvents,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("CLINICAL_EVENT_MAP",{setFunction:this.setFramRiskCE,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("CLINICAL_EVENT_MAP_FRAM",{setFunction:this.setScoreResultCE,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("TITLE",{setFunction:this.setCardioRiskDisplay,type:"String",field:"FREETEXT_DESC"});
this.addFilterMappingObject("BANNER",{setFunction:this.setFraminghamDisplay,type:"String",field:"FREETEXT_DESC"});
};
var FRAM_RISKS_O1=function(){var i18nFram=i18n.innovation.framinghamCardiacRisk;
return{CheckStatin:function(component){var onlyCheckIfUrlEnabled=1;
var cclParam=["'MINE'",0,0,0,0,onlyCheckIfUrlEnabled];
var request=new MP_Core.ScriptRequest(component,component.getComponentLoadTimerName());
request.setProgramName("inn_mp_statin");
request.setParameters(cclParam);
request.setName("Check Statin Url");
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(component,request,FRAM_RISKS_O1.RenderComponent);
},RenderComponent:function(reply,isComponent){var component=null;
var isStatinEnabled=false;
var linkName="";
var componentId=0;
if(isComponent!==true){var response=reply.getResponse();
isStatinEnabled=response.ISENABLED;
linkName="Statin Decision Aid";
if(isStatinEnabled==1&&response.LINKNAME.length>0){linkName=response.LINKNAME;
}component=reply.getComponent();
component.setIsStatinEnabled(isStatinEnabled);
component.setStatinLinkName(linkName);
componentId=component.getComponentId();
}else{component=reply;
isStatinEnabled=component.getIsStatinEnabled();
linkName=component.getStatinLinkName();
componentId=component.getComponentId();
$("#btnReset"+componentId).prop("disabled",true);
}var componentHtml=[];
var i=0;
var calcViewInd=1;
var tabsHTML="";
var cardioRiskTitle=component.getCardioRiskDisplay();
var framinghamTitle=component.getFraminghamDisplay();
var oldCalculatorTab=["<div id='originalRisks"+componentId+"' class='fram-risks-tabs"+(calcViewInd==0?" selected":"")+"'>","<span class='fram-risks-tabs-inner'>"+framinghamTitle+"</span>","</div>"];
var newCalculatorTab=["<div id='newRisks"+componentId+"' class='fram-risks-tabs"+(calcViewInd==1?" selected":"")+"'>","<span class='fram-risks-tabs-inner'>"+cardioRiskTitle+"</span>","</div>"];
tabsHTML=newCalculatorTab.join("")+oldCalculatorTab.join("");
componentHtml.push("<div id='framinghamTabs"+componentId+"' class='sub-sec sub-sec-content fram-risks-tab-content'>",tabsHTML,"</div>","<div id='framinghamContent"+componentId+"' class='sub-sec sub-sec-content fram-risks-content-body'>",FRAM_RISKS_O1.BuildTableHTML(component,calcViewInd),"</div>","<div id='originalReferences"+componentId+"' "+(calcViewInd==1?"class='hidden'":"")+">");
if(isStatinEnabled==1){componentHtml.push("</br><div><a class='fram-risks-link-class' id='MayoClinicStatin' href='#'>"+linkName+"</a></div>");
}componentHtml.push("</br><a class='fram-risks-link-class' href='http://circ.ahajournals.org/content/97/18/1837.full.pdf' target='_blank'>","Wilson PW et al. Prediction of Coronary Heart Disease Using Risk Factor Categories. Circulation 1998 97 (18):1837-1847","</a>","</div>","<div id='newReferences"+componentId+"' "+(calcViewInd==0?"class='hidden'":"")+">");
if(isStatinEnabled==1){componentHtml.push("</br><div><a class='fram-risks-link-class' id='MayoClinicStatinOld' href='#'>"+linkName+"</a></div>");
}componentHtml.push("</br><a class='fram-risks-link-class' href='http://circ.ahajournals.org/content/early/2013/11/11/01.cir.0000437741.48606.98' target='_blank'>","Goff DC Jr, Lloyd-Jones DM, Bennett G, Coady S, D'Agostino RB Sr, Gibbons R, Greenland P, Lackland DT, Levy D, O'Donnell CJ, ","Robinson J, Schwartz JS, Smith SC Jr, Sorlie P, Shero ST, Stone NJ, Wilson PW. 2013 ACC/AHA guideline on the assessment of ","cardiovascular risk: a report of the American College of Cardiology/American Heart Association Task Force on Practice Guidelines. ","Circulation. 2013;00:000-000","</a>","</div>");
MP_Util.Doc.FinalizeComponent(componentHtml.join(""),component,"");
MP_Util.Doc.InitHovers("tc-info",document.getElementById("tblFramingham"),null);
FRAM_RISKS_O1.GetDataD(component);
FRAM_RISKS_O1.GetDataR(component);
if(isStatinEnabled==1){_g("MayoClinicStatin").onclick=function(){FRAM_RISKS_O1.LaunchStatin(component);
};
_g("MayoClinicStatinOld").onclick=function(){FRAM_RISKS_O1.LaunchStatin(component);
};
}},LaunchStatin:function(component){var cclParam=["^MINE^,$PAT_PERSONID$,$VIS_ENCNTRID$,$USR_PERSONID$,$PAT_PPRCode$"].join(",");
var linkCall="javascript:CCLLINK('inn_mp_statin', '"+cclParam+"', 1)";
var wParams="left=0,top=0,width=1024,height=768,fullscreen=yes,scrollbars=yes";
javascript:CCLNEWSESSIONWINDOW(linkCall,"_self",wParams,1,1);
return false;
},BuildTableHTML:function(component,calcViewInd){var componentId=component.getComponentId();
var componentHtml=[];
var newCalculatorClass="fram-risks-new-calc";
var oldCalculatorClass="fram-risks-old-calc";
var groupARows=" fram-risks-group-A-rows ";
var groupBRows=" fram-risks-group-B-rows ";
if(calcViewInd==0){newCalculatorClass+=" hidden";
groupARows+="even";
groupBRows+="odd";
}else{oldCalculatorClass+=" hidden";
groupARows+="odd";
groupBRows+="even";
}componentHtml.push("<div class='fram-risks-div' id='compFramRiskDetails",componentId,"'>");
componentHtml.push("<div class='fram-risks-not-elig hidden' id='invalidAge",componentId,"'>"+i18nFram.AGE_DISQ+"</div>");
componentHtml.push("<div class='fram-risks-not-elig hidden' id='invalidAgeFramingham",componentId,"'>"+i18nFram.AGE_DISQ_FRAM+"</div>");
componentHtml.push("<table id='tblFramingham",componentId,"' class='fram-risks-table' colspan='5'>");
componentHtml.push("<thead><tr class='odd'>");
componentHtml.push("<th class='fram-risks-col1' colspan='1'>",i18nFram.HDR_CRITERIA,"</th>");
componentHtml.push("<th class='fram-risks-col2' colspan='1'></th>");
componentHtml.push("<th class='fram-risks-col3' colspan='1'>",i18nFram.HDR_CLIN_INFO,"</th>");
componentHtml.push("<th class='fram-risks-col4' colspan='1'>",i18nFram.HDR_EVIDENCE,"</th>");
componentHtml.push("<th class='fram-risks-col5' colspan='1'>",i18nFram.HDR_ACC_RANGE,"</th>");
componentHtml.push("<th class='fram-risks-col6' colspan='1'>",i18nFram.HDR_FUT_STATE,"</th>");
componentHtml.push("</tr></thead>");
componentHtml.push("<tbody>");
componentHtml.push("<tr class='even'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_GENDER,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selGender",componentId,"'><option value='FEMALE'>",i18nFram.OPT_FEMALE,"</option><option value='MALE'>",i18nFram.OPT_MALE,"</option></select></td>");
componentHtml.push("<td colspan='1'><span id='spResultGender",componentId,"'></span></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='odd'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_AGE,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><input type='text' id='txtAge",componentId,"' class='fram-risks-text' age_val=0 maxlength='2'><span class='fram-risks-note'>",i18nFram.NOTE_AGE,"</span></td>");
componentHtml.push("<td colspan='1'><span id='spResultAge",componentId,"'>",i18nFram.NOTE_NO_DOB,"</span></td>");
componentHtml.push("<td colspan='1'><span id='spAcceptableAge",componentId,"'>20-79</span></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='even "+newCalculatorClass+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_RACE,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selRace",componentId,"'><option value='WHITE'>",i18nFram.OPT_WHITE,"</option><option value='AFRICANAMERICAN'>",i18nFram.OPT_AFRICAN_AMERICAN,"</option></select></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='"+groupARows+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_TOT_CHOL,"</td>");
componentHtml.push("<td colspan='1'><span id='spNormalcyTotalChol",componentId,"' class='fram-risks-normalcy-span'><span class='res-ind'></span></span></td>");
componentHtml.push("<td colspan='1'><input type='text' id='txtTotalChol",componentId,"' class='fram-risks-text' maxlength='6'><span class='fram-risks-note'><select class='fram-risks-sel' id='selTotalCholUnits",componentId,"'><option value='MG/DL'>",i18nFram.OPT_MGDL,"</option><option value='MMOLL'>",i18nFram.OPT_MMOLL,"</option></select></span></td>");
componentHtml.push("<td colspan='1' class='fram-risks-td-hvr'>"+FRAM_RISKS_O1.GetBeginHover("Total Cholesterol Information")+"<span id='spResultTotalChol",componentId,"'>",i18nFram.NOTE_NO_RSLT,"</span>"+FRAM_RISKS_O1.GetEndHover("totCholHvr",componentId,"Total Cholesterol")+"</td>");
componentHtml.push("<td colspan='1'><span id='spAcceptableChol",componentId,"'>(130 - 320 mg/dL) or (7.22 - 17.78 mmol/L)</span></td>");
componentHtml.push("<td colspan='1'><input type='text' value='170' id='txtFutureTotalChol",componentId,"' class='fram-risks-text' maxlength='6'><span class='fram-risks-note'><select class='fram-risks-sel' id='selFutureTotalCholUnits",componentId,"'><option value='MG/DL'>",i18nFram.OPT_MGDL,"</option><option value='MMOLL'>",i18nFram.OPT_MMOLL,"</option></select></span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='"+groupBRows+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_HDL_LVL,"</td>");
componentHtml.push("<td colspan='1'><span id='spNormalcyHDL",componentId,"' class='fram-risks-normalcy-span'><span class='res-ind'></span></span></td>");
componentHtml.push("<td colspan='1'><input type='text' id='txtHDL",componentId,"' class='fram-risks-text' maxlength='4'><span class='fram-risks-note'><select class='fram-risks-sel' id='selHDLUnits",componentId,"'><option value='MG/DL'>",i18nFram.OPT_MGDL,"</option><option value='MMOLL'>",i18nFram.OPT_MMOLL,"</option></select></span></td>");
componentHtml.push("<td colspan='1' class='fram-risks-td-hvr'>"+FRAM_RISKS_O1.GetBeginHover("HDL Level")+"<span id='spResultHDL",componentId,"'>",i18nFram.NOTE_NO_RSLT,"</span>"+FRAM_RISKS_O1.GetEndHover("totHDLHvr",componentId,"HDL Level")+"</td>");
componentHtml.push("<td colspan='1'><span id='spAcceptableHDL",componentId,"'>(20 - 100 mg/dL) or (1.11 - 5.55 mmol/L)</span></td>");
componentHtml.push("<td colspan='1'><input value='50' type='text' id='txtFutureHDL",componentId,"' class='fram-risks-text' maxlength='4'><span class='fram-risks-note'><select class='fram-risks-sel' id='selFutureHDLUnits",componentId,"'><option value='MG/DL'>",i18nFram.OPT_MGDL,"</option><option value='MMOLL'>",i18nFram.OPT_MMOLL,"</option></select></span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='"+groupARows+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_SBP,"</td>");
componentHtml.push("<td colspan='1' ><span id='spNormalcySBP",componentId,"' class='fram-risks-normalcy-span'><span class='res-ind'></span></span></td>");
componentHtml.push("<td colspan='1' ><input type='text' id='txtSBP",componentId,"' class='fram-risks-text' maxlength='4'><span id='spSBPUnits",componentId,"' class='fram-risks-note'>"+i18nFram.NOTE_MMHG+"</span></td>");
componentHtml.push("<td colspan='1' class='fram-risks-td-hvr'>"+FRAM_RISKS_O1.GetBeginHover("Systolic Blood Pressure Information")+"<span id='spResultSBP",componentId,"'>",i18nFram.NOTE_NO_RSLT,"</span>"+FRAM_RISKS_O1.GetEndHover("systolicHvr",componentId,"Systolic")+"</td>");
componentHtml.push("<td colspan='1'><span>90-200</span></td>");
componentHtml.push("<td colspan='1'><input type='text' value='110' id='txtFutureSBP",componentId,"' class='fram-risks-text' maxlength='4'><span id='spSBPUnits",componentId,"' class='fram-risks-note'>"+i18nFram.NOTE_MMHG+"</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='odd "+oldCalculatorClass+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_DBP,"</td>");
componentHtml.push("<td colspan='1' ><span id='spNormalcyDBP",componentId,"' class='fram-risks-normalcy-span'><span class='res-ind'></span></span></td>");
componentHtml.push("<td colspan='1' ><input type='text' id='txtDBP",componentId,"' class='fram-risks-text' maxlength='4'><span id='spSBPUnits",componentId,"' class='fram-risks-note'>"+i18nFram.NOTE_MMHG+"</span></td>");
componentHtml.push("<td colspan='1' class='fram-risks-td-hvr'>"+FRAM_RISKS_O1.GetBeginHover("Diastolic Blood Pressure Information")+"<div id='spResultDBP",componentId,"'>",i18nFram.NOTE_NO_RSLT,"</div>"+FRAM_RISKS_O1.GetEndHover("diastolicHvr",componentId,"Diastolic")+"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><input type='text' value='70' id='txtFutureDBP",componentId,"' class='fram-risks-text' maxlength='4'><span id='spSBPUnits",componentId,"' class='fram-risks-note'>"+i18nFram.NOTE_MMHG+"</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='even "+newCalculatorClass+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_TREATMENT_HBP,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1' ><select class='fram-risks-sel' id='selTreatmentHBP",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("<td colspan='1' class='fram-risks-td-hvr'>"+FRAM_RISKS_O1.GetBeginHover("Treatment of High Blood Pressure")+"<span id='spResultTreatment",componentId,"'>",i18nFram.NOTE_NO_RSLT,"</span>"+FRAM_RISKS_O1.GetEndHover("treatmentHvr",componentId,"Treatment for High Blood Pressure")+"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selFutureTreatmentHBP",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='"+groupARows+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_DIABETIC,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selDiabetic",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("<td colspan='1'><span id='spResultDiabetic",componentId,"'>",i18nFram.NOTE_NO_DOC,"</span></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selFutureDiabetic",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='fram-risks-smoker-row "+groupBRows+"'>");
componentHtml.push("<td colspan='1'>",i18nFram.LBL_SMOKER,"</td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selSmoker",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("<td colspan='1'><span id='spResultSmoker",componentId,"'>",i18nFram.NOTE_NO_DOC,"</span></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'><select class='fram-risks-sel' id='selFutureSmoker",componentId,"'><option value=0 selected>",i18nFram.OPT_NO,"</option><option value=1>",i18nFram.OPT_YES,"</option></select></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='odd "+newCalculatorClass+"'>");
componentHtml.push("<td colspan='2'>",i18nFram.LBL_10_YR_ASCVD,"</td>");
componentHtml.push("<td colspan='1'><span id='spTenYearRisk",componentId,"'>0</span></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'><span id='spFutureTenYearRisk",componentId,"'>0</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='even "+newCalculatorClass+"'>");
componentHtml.push("<td colspan='2'>",i18nFram.LBL_LIFETIME_RISK,"</td>");
componentHtml.push("<td colspan='1'><span id='spLifetimeRisk",componentId,"'>0</span></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'><span id='spFutureLifetimeRisk",componentId,"'>0</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='even "+oldCalculatorClass+"'>");
componentHtml.push("<td colspan='2'>",i18nFram.LBL_TOT_SCORE,"</td>");
componentHtml.push("<td colspan='1'><span id='spTotalScore",componentId,"'>0</span></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'><span id='spFutureTotalScore",componentId,"'>0</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='odd "+oldCalculatorClass+"'>");
componentHtml.push("<td colspan='2'>",i18nFram.LBL_10_YR_RISK,"</td>");
componentHtml.push("<td colspan='1'><span id='spTenYearCHDRisk",componentId,"'>0</span></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'><span id='spFutureTenYearCHDRisk",componentId,"'>0</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='even "+oldCalculatorClass+"'>");
componentHtml.push("<td colspan='2'>",i18nFram.LBL_COMP_RISK,"</td>");
componentHtml.push("<td colspan='1'><span id='spCompRisk",componentId,"'>0</span></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'><span id='spFutureCompRisk",componentId,"'>0</span></td>");
componentHtml.push("</tr>");
componentHtml.push("<tr class='odd'>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='2'></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td colspan='1'></td>");
componentHtml.push("<td class='fram-risks-ctr' colspan='1'>");
componentHtml.push("<input type='button' id='btnReset",componentId,"'  class='fram-risks-pr' value='",i18nFram.BTN_RESET,"'>");
componentHtml.push("<input type='button' id='btnSubmit",componentId,"' class='fram-risks-pr' value='",i18nFram.BTN_DOCUMENT_NEW,"'><span id='submitInProgress",componentId,"' class='fram-risks-doc fram-risks-p32px hidden'><img class='fram-risks-saving-img' src='"+CERN_static_content+"/images/6439_24.gif' alt='Saving...'></span>");
componentHtml.push("</td>");
componentHtml.push("</tr>");
componentHtml.push("</tbody></table></div>");
return componentHtml.join("");
},GetBeginHover:function(str){return"<h3 class='info-hd'>"+str+"</h3> <dl class='tc-info result-info'>";
},GetEndHover:function(id,componentId,lbl){return"</span></dl><h4 class='det-hd'>"+lbl+" Details</h4><div class='hvr result-details' id='"+id+componentId+"'><dl class='tc-det'>"+i18nFram.NOTE_NO_RSLT+"</dl></div>";
},BuildHover:function(robj){var dateTime=new Date();
dateTime.setISO8601(robj.EVT_DT_TM);
var evtDtTm=dateTime.format("longDateTime3");
var hvr="<dl class='tc-det'><dt class='tc-det-hdr'><span>"+i18nFram.MOST_RECENT+"</span></dt><dd class='result'><span></span></dd><dt class='tc-det-type'><span>"+robj.EVT_DISP+":</span></dt><dd class='result'><span class='"+robj.EVT_NORM_CSS+"'>"+robj.EVT_RSLT+" "+robj.EVT_UNIT+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.DATE_TIME+":</span></dt><dd class='result'><span>"+evtDtTm+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.NORM_LOW+"</span></dt><dd class='result'><span>"+robj.EVT_NORM_LOW.toFixed(robj.EVT_NORM_LOW_P)+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.NORM_HIGH+"</span></dt><dd class='result'><span>"+robj.EVT_NORM_HIGH.toFixed(robj.EVT_NORM_HIGH_P)+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.CRIT_LOW+"</span></dt><dd class='result'><span>"+robj.EVT_CRIT_LOW.toFixed(robj.EVT_CRIT_LOW_P)+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.CRIT_HIGH+"</span></dt><dd class='result'><span>"+robj.EVT_CRIT_HIGH.toFixed(robj.EVT_CRIT_HIGH_P)+"</span></dd><dt class='tc-det-type'><span>"+i18nFram.STATUS+":</span></dt><dd class='result'><span>"+robj.EVT_STATUS+"</span></dd>";
"</dl>";
return(hvr);
},SetNormalcy:function(tEl,spEl){var curValue=parseFloat(tEl.val());
spEl.removeClass();
tEl.removeClass();
tEl.addClass("fram-risks-text");
var normalLow=parseFloat(tEl.attr("nLow"));
var criticalLow=parseFloat(tEl.attr("cLow"));
var normalHigh=parseFloat(tEl.attr("nHigh"));
var criticalHigh=parseFloat(tEl.attr("cHigh"));
spEl.addClass("fram-risks-frt");
if((curValue<criticalLow&&criticalLow>0)||(curValue>criticalHigh&&criticalHigh>0)){spEl.addClass("res-severe");
tEl.addClass("res-severe");
}else{if(curValue<normalLow){spEl.addClass("res-low");
tEl.addClass("res-low");
}else{if(curValue>normalHigh){spEl.addClass("res-high");
tEl.addClass("res-high");
}else{spEl.removeClass();
}}}},AddEvents:function(component){var componentId=component.getComponentId();
var futureString="";
MP_Util.Doc.InitHovers("tc-info",_g("tblFramingham"+componentId),null);
var framTable=_g("tblFramingham"+componentId);
_g("originalRisks"+componentId).onclick=function(){if(_g("btnSubmit"+componentId)){_g("btnSubmit"+componentId).value=i18nFram.BTN_DOCUMENT;
}$("#invalidAge"+componentId).addClass("hidden");
if($("#tblFramingham"+componentId).hasClass("hide-on-framingham-calc")){$("#tblFramingham"+componentId).addClass("hidden");
$("#invalidAgeFramingham"+componentId).removeClass("hidden");
}else{$("#tblFramingham"+componentId).removeClass("hidden");
$(".fram-risks-div").removeClass("fram-risks-disp-n");
}Util.Style.acss(_g("originalRisks"+componentId),"selected");
Util.Style.rcss(_g("newRisks"+componentId),"selected");
Util.Style.rcss(_g("originalReferences"+componentId),"hidden");
Util.Style.acss(_g("newReferences"+componentId),"hidden");
var groupARows=Util.Style.g("fram-risks-group-A-rows",framTable,"tr");
var groupBRows=Util.Style.g("fram-risks-group-B-rows",framTable,"tr");
var newCalculatorRows=Util.Style.g("fram-risks-new-calc",framTable,"tr");
var oldCalculatorRows=Util.Style.g("fram-risks-old-calc",framTable,"tr");
for(i=newCalculatorRows.length;
i--;
){Util.Style.acss(newCalculatorRows[i],"hidden");
}for(i=oldCalculatorRows.length;
i--;
){Util.Style.rcss(oldCalculatorRows[i],"hidden");
}for(i=groupARows.length;
i--;
){Util.Style.rcss(groupARows[i],"odd");
Util.Style.acss(groupARows[i],"even");
}for(i=groupBRows.length;
i--;
){Util.Style.acss(groupBRows[i],"odd");
Util.Style.rcss(groupBRows[i],"even");
}};
_g("newRisks"+componentId).onclick=function(){if(_g("btnSubmit"+componentId)){_g("btnSubmit"+componentId).value=i18nFram.BTN_DOCUMENT_NEW;
}$("#invalidAgeFramingham"+componentId).addClass("hidden");
if($("#tblFramingham"+componentId).hasClass("hide-on-new-calc")){$("#tblFramingham"+componentId).addClass("hidden");
$("#invalidAge"+componentId).removeClass("hidden");
}else{$("#tblFramingham"+componentId).removeClass("hidden");
$(".fram-risks-div").removeClass("fram-risks-disp-n");
}Util.Style.rcss(_g("originalRisks"+componentId),"selected");
Util.Style.acss(_g("newRisks"+componentId),"selected");
Util.Style.acss(_g("originalReferences"+componentId),"hidden");
Util.Style.rcss(_g("newReferences"+componentId),"hidden");
var newCalculatorRows=Util.Style.g("fram-risks-new-calc",framTable,"tr");
var oldCalculatorRows=Util.Style.g("fram-risks-old-calc",framTable,"tr");
var groupARows=Util.Style.g("fram-risks-group-A-rows",framTable,"tr");
var groupBRows=Util.Style.g("fram-risks-group-B-rows",framTable,"tr");
for(i=newCalculatorRows.length;
i--;
){Util.Style.rcss(newCalculatorRows[i],"hidden");
}for(i=oldCalculatorRows.length;
i--;
){Util.Style.acss(oldCalculatorRows[i],"hidden");
}for(i=groupARows.length;
i--;
){Util.Style.acss(groupARows[i],"odd");
Util.Style.rcss(groupARows[i],"even");
}for(i=groupBRows.length;
i--;
){Util.Style.rcss(groupBRows[i],"odd");
Util.Style.acss(groupBRows[i],"even");
}};
function recalculateValues(){var futureStr="";
FRAM_RISKS_O1.CalculateRisk(component,futureStr);
FRAM_RISKS_O1.CalculateScore(component,futureStr);
futureStr="Future";
FRAM_RISKS_O1.CalculateRisk(component,futureStr);
FRAM_RISKS_O1.CalculateScore(component,futureStr);
}$("#tblFramingham"+componentId).on("mouseover",".even",function(){$(this).addClass("fram-risks-even-hover");
});
$("#tblFramingham"+componentId).on("mouseover",".odd",function(){$(this).addClass("fram-risks-odd-hover");
});
$("#tblFramingham"+componentId).on("mouseout",".even",function(){$(this).removeClass("fram-risks-even-hover");
});
$("#tblFramingham"+componentId).on("mouseout",".odd",function(){$(this).removeClass("fram-risks-odd-hover");
});
$("#tblFramingham"+componentId).on("mouseover",".fram-risks-td-hvr",function(){$(this).addClass("fram-risks-td-hvr-active");
});
$("#tblFramingham"+componentId).on("mouseout",".fram-risks-td-hvr",function(){$(this).removeClass("fram-risks-td-hvr-active");
});
$("#selGender"+componentId).on("change",function(){recalculateValues();
});
$("#selRace"+componentId).on("change",function(){recalculateValues();
});
$("#txtAge"+componentId).on("blur keyup change",function(e,skipCalcInd){$("#spResultDOB"+componentId).html(i18nFram.MANUAL);
recalculateValues();
});
$("#btnReset"+componentId).on("click",function(){FRAM_RISKS_O1.Reset(component,componentId);
});
$("#btnSubmit"+componentId).on("click",function(){FRAM_RISKS_O1.SubmitScore(component,componentId);
});
for(var i=2;
i--;
){FRAM_RISKS_O1.AddDifferentStateEvents(component,componentId,futureString);
futureString="Future";
}},AddDifferentStateEvents:function(component,componentId,futureString){$("#txt"+futureString+"TotalChol"+componentId).on("blur keyup change",function(){$("#sp"+futureString+"ResultTotalChol"+componentId).html(i18nFram.MANUAL);
if(futureString==""){FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"TotalChol"+componentId),$("#sp"+futureString+"NormalcyTotalChol"+componentId));
}var totChol=$(this).val();
var cholUnits=_g("sel"+futureString+"TotalCholUnits"+componentId).value;
if(cholUnits!="MG/DL"){totChol=totChol*18;
}if(totChol<130||totChol>320){component.setOutOfRangeText(futureString,"CHOL",true);
}else{component.setOutOfRangeText(futureString,"CHOL",false);
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#sel"+futureString+"TotalCholUnits"+componentId).on("change",function(){if(futureString==""){$("#sp"+futureString+"ResultTotalChol"+componentId).html(i18nFram.MANUAL);
FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"TotalChol"+componentId),$("#sp"+futureString+"NormalcyTotalChol"+componentId));
}var totChol=_g("txtTotalChol"+componentId).value;
if($(this).val()=="MMOLL"){totChol=totChol*18;
}if(totChol<130||totChol>320){component.setOutOfRangeText(futureString,"CHOL",true);
}else{component.setOutOfRangeText(futureString,"CHOL",false);
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#txt"+futureString+"HDL"+componentId).on("blur keyup change",function(){$("#sp"+futureString+"ResultHDL"+componentId).html(i18nFram.MANUAL);
if(futureString==""){FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"HDL"+componentId),$("#sp"+futureString+"NormalcyHDL"+componentId));
}var totHDL=$(this).val();
var hdlUnits=_g("sel"+futureString+"HDLUnits"+componentId).value;
if(hdlUnits!="MG/DL"){totHDL=totHDL*18;
}if(totHDL<20||totHDL>100){component.setOutOfRangeText(futureString,"HDL",true);
}else{component.setOutOfRangeText(futureString,"HDL",false);
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#sel"+futureString+"HDLUnits"+componentId).on("change",function(){if(futureString==""){$("#sp"+futureString+"ResultHDL"+componentId).html(i18nFram.MANUAL);
FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"HDL"+componentId),$("#sp"+futureString+"NormalcyHDL"+componentId));
}var totHDL=_g("txt"+futureString+"HDL"+componentId).value;
if($(this).val()=="MMOLL"){totHDL=totHDL*18;
}if(totHDL<20||totHDL>100){component.setOutOfRangeText(futureString,"HDL",true);
}else{component.setOutOfRangeText(futureString,"HDL",false);
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#sel"+futureString+"TreatmentHBP"+componentId).on("change",function(){$("#spResultTreatment"+componentId).html(i18nFram.MANUAL);
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#txt"+futureString+"SBP"+componentId).on("keyup blur change",function(){$("#sp"+futureString+"ResultSBP"+componentId).html(i18nFram.MANUAL);
if(futureString==""){FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"SBP"+componentId),$("#sp"+futureString+"NormalcySBP"+componentId));
}if($(this).val()<90||$(this).val()>200){component.setOutOfRangeText(futureString,"BP",true);
}else{component.setOutOfRangeText(futureString,"BP",false);
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#txt"+futureString+"DBP"+componentId).on("keyup blur change",function(){$("#sp"+futureString+"ResultDBP"+componentId).html(i18nFram.MANUAL);
if(futureString==""){FRAM_RISKS_O1.SetNormalcy($("#txt"+futureString+"DBP"+componentId),$("#sp"+futureString+"NormalcyDBP"+componentId));
}FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#sel"+futureString+"Diabetic"+componentId).on("change",function(){$("#sp"+futureString+"ResultDiabetic"+componentId).html(i18nFram.MANUAL);
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
$("#sel"+futureString+"Smoker"+componentId).on("change",function(){$("#sp"+futureString+"ResultSmoker"+componentId).html(i18nFram.MANUAL);
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
});
},GetDataD:function(component){try{var criterion=component.getCriterion();
var diabDiagCds="value("+component.getDiabeticDiag()+")";
var diabProbCds="value("+component.getDiabeticProb()+")";
var smokerDiagCds="value("+component.getSmokerDiag()+")";
var smokerProbCds="value("+component.getSmokerProb()+")";
var raceCds="value("+component.getRaceCds()+")";
var bpOrdCds="value("+component.getBloodPressureOrders()+")";
var bpClassCds="value("+component.getBloodPressureClasses()+")";
var bpStatusCds="value("+component.getBloodPressureStatuses()+")";
var smokerEventNomens='^{"SMOKER_NOMENS":{"QUAL":'+JSON.stringify(component.getSmokerNomens())+',"CNT":'+component.getSmokerNomens().length+"}}^";
var cclParam=["'MINE'",criterion.person_id+".0",criterion.encntr_id+".0",diabDiagCds,diabProbCds,smokerDiagCds,smokerProbCds,raceCds,bpOrdCds,bpClassCds,bpStatusCds,smokerEventNomens];
var request=new MP_Core.ScriptRequest(component,component.getComponentLoadTimerName());
request.setProgramName("inn_mp_get_frisk_demog");
request.setParameters(cclParam);
request.setName("Render Demographics");
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(component,request,FRAM_RISKS_O1.RenderDemographics);
}catch(err){alert(err);
MP_Util.LogJSError(err,this,"FRAM_RISKS_O1.js","GetDataD");
}},GetDataR:function(component){var criterion=component.criterion;
var diastolicEvents=component.getDiastolicEvents();
var hdlEvents=component.getHDLEvents();
var systolicEvents=component.getSystolicEvents();
var totChol=component.getCholEvents();
var catIds=[];
var catIdString="";
catIds.push(diastolicEvents,hdlEvents,systolicEvents,totChol);
if(catIds.length>0){catIdString="value("+catIds+")";
}else{catIdString="0.0";
}var cclParam=["'MINE'",criterion.person_id.toFixed(1),criterion.encntr_id.toFixed(1),criterion.provider_id.toFixed(1),criterion.ppr_cd.toFixed(1),"1,''",catIdString,"0.00, 0, 2, 1,'','', 0, 0, 0"];
var request=new MP_Core.ScriptRequest(null,null);
request.setProgramName("inn_mp_get_fram_risk_rslts");
request.setParameters(cclParam);
request.setAsync(true);
request.setName("Render Results");
MP_Core.XMLCCLRequestCallBack(component,request,FRAM_RISKS_O1.RenderResults);
},RenderDemographics:function(reply){var oDemogs=reply.getResponse();
var component=reply.getComponent();
var componentId=component.getComponentId();
component.age=oDemogs.AGE_VAL;
if(component.age<30||component.age>=75){$("#tblFramingham"+componentId).addClass("hide-on-framingham-calc");
}if(component.age<20||component.age>=80){$("#tblFramingham"+componentId).addClass("hide-on-new-calc");
$("#tblFramingham"+componentId).addClass("hidden");
$("#invalidAge"+componentId).removeClass("hidden");
return;
}else{$(".fram-risks-div").removeClass("fram-risks-disp-n");
}var d,s,t="";
gender=oDemogs.GENDER_MEAN;
$("#selGender"+componentId).val(gender);
if(oDemogs.AGE_VAL){var tAge=$("#txtAge"+componentId);
tAge.val(oDemogs.AGE_VAL);
tAge.attr("age_val",oDemogs.AGE_VAL);
tAge.trigger("change",[true]);
$("#spResultAge"+componentId).text("");
}if(oDemogs.RACE_CD_MATCH==1){$("#selRace"+componentId).val("AFRICANAMERICAN");
}if(oDemogs.TREAT_CNT>0){$("#selTreatmentHBP"+componentId).val(1);
var treatArr=oDemogs.TREAT_ARR;
var treatObj={};
var treatHvrText=["<dl class='tc-det'>"];
for(var i=0,il=oDemogs.TREAT_CNT;
i<il;
i++){treatObj=treatArr[i];
d=treatObj.TREAT_DISP;
s=treatObj.TREAT_STATUS;
var timeStr="";
if(treatObj.TREAT_DTTM_S){dateTime.setISO8601(treatObj.TREAT_DTTM_DQ);
t=dateTime.format("longDateTime3");
timeStr=" on "+t;
}treatHvrText.push("<dt class='tc-det-hdr'>",d,"</dt><dd class='result'>[",s,timeStr,"]</dd>");
if(i==0){$("#spResultTreatment"+componentId).text(d+" ("+s+")"+timeStr+"");
}}treatHvrText.push("</dl>");
$("#treatmentHvr"+componentId).html(treatHvrText.join(""));
}$("#selDiabetic"+componentId).val(oDemogs.DIAB_IND);
if(oDemogs.DIAB_IND==1){d=oDemogs.DIAB_DISP;
s=oDemogs.DIAB_STATUS;
var timeStr="";
if(oDemogs.DIAB_DTTM_S.length>0){var dateTime=new Date();
dateTime.setISO8601(oDemogs.DIAB_DTTM_DQ);
var t=dateTime.format("shortDate2");
timeStr=" on "+t;
}$("#spResultDiabetic"+componentId).text(d+"  ["+s+timeStr+"]");
}$("#selSmoker"+componentId).val(oDemogs.SMKR_IND);
if(oDemogs.SMKR_IND==1){d=oDemogs.SMKR_DISP;
s=oDemogs.SMKR_STATUS;
var timeStr="";
if(oDemogs.SMKR_DTTM_S){var dateTime=new Date();
dateTime.setISO8601(oDemogs.SMKR_DTTM_DQ);
var t=dateTime.format("shortDate2");
timeStr=" on "+t;
}$("#spResultSmoker"+componentId).text(d+"  ["+s+timeStr+"]");
}var futureString="";
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
futureString="Future";
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
component.setIsDemographicsLoaded(true);
if(component.getIsResultsLoaded()===true){FRAM_RISKS_O1.AddEvents(component);
}},RenderResults:function(reply){var ptVal=0;
var evtData=reply.getResponse();
var component=reply.getComponent();
var componentId=component.getComponentId();
var diastolicEvents=component.getDiastolicEvents();
var hdlEvents=component.getHDLEvents();
var systolicEvents=component.getSystolicEvents();
var totChol=component.getCholEvents();
var isCholSet=false;
var isHDLSet=false;
var isSysBPSet=false;
var isDiaBPSet=false;
if(evtData.EVT_CNT>0){function EventDateSort(a,b){var aDate=new Date();
aDate.setISO8601(a.EVT_DT_TM);
var bDate=new Date();
bDate.setISO8601(b.EVT_DT_TM);
var aDateInt=aDate.getTime();
var bDateInt=bDate.getTime();
if(aDateInt>bDateInt){return -1;
}else{if(aDateInt<bDateInt){return 1;
}}return 0;
}evtData.EVTS.sort(EventDateSort);
for(var i=0,l=evtData.EVT_CNT;
i<l;
i++){var oResult=evtData.EVTS[i];
var dateTime=new Date();
dateTime.setISO8601(oResult.EVT_DT_TM);
var evtDtTm=dateTime.format("longDateTime3");
if(isCholSet===false){$.each(totChol,function(index,value){if(oResult.EVT_SET_CD==value){isCholSet=true;
$("#txtTotalChol"+componentId).val(oResult.EVT_RSLT);
if($("#txtTotalChol"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#txtTotalChol"+componentId).addClass(oResult.EVT_NORM_CSS);
}$("#selTotalCholUnits"+componentId).val(oResult.EVT_UNIT_MEAN);
$("#spResultTotalChol"+componentId).text(oResult.EVT_STATUS+" on "+evtDtTm);
if($("#spNormalcyTotalChol"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#spNormalcyTotalChol"+componentId).addClass(oResult.EVT_NORM_CSS);
}if($("#spNormalcyTotalChol"+componentId).hasClass("fram-risks-frt")==false){$("#spNormalcyTotalChol"+componentId).addClass("fram-risks-frt");
}$("#txtTotalChol"+componentId).attr("nLow",oResult.EVT_NORM_LOW.toFixed(oResult.EVT_NORM_LOW_P));
$("#txtTotalChol"+componentId).attr("nHigh",oResult.EVT_NORM_HIGH.toFixed(oResult.EVT_NORM_HIGH_P));
$("#txtTotalChol"+componentId).attr("cLow",oResult.EVT_CRIT_LOW.toFixed(oResult.EVT_CRIT_LOW_P));
$("#txtTotalChol"+componentId).attr("cHigh",oResult.EVT_CRIT_HIGH.toFixed(oResult.EVT_CRIT_HIGH_P));
$("#totCholHvr"+componentId).html(FRAM_RISKS_O1.BuildHover(oResult));
}});
}if(isHDLSet===false){$.each(hdlEvents,function(index,value){if(oResult.EVT_SET_CD==value){isHDLSet=true;
$("#txtHDL"+componentId).val(oResult.EVT_RSLT);
if($("#txtHDL"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#txtHDL"+componentId).addClass(oResult.EVT_NORM_CSS);
}$("#selHDLUnits"+componentId).val(oResult.EVT_UNIT_MEAN);
$("#spResultHDL"+componentId).text(oResult.EVT_STATUS+" on "+evtDtTm);
if($("#spNormalcyHDL"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#spNormalcyHDL"+componentId).addClass(oResult.EVT_NORM_CSS);
}if($("#spNormalcyHDL"+componentId).hasClass("fram-risks-frt")==false){$("#spNormalcyHDL"+componentId).addClass("fram-risks-frt");
}$("#txtHDL"+componentId).attr("nLow",oResult.EVT_NORM_LOW.toFixed(oResult.EVT_NORM_LOW_P));
$("#txtHDL"+componentId).attr("nHigh",oResult.EVT_NORM_HIGH.toFixed(oResult.EVT_NORM_HIGH_P));
$("#txtHDL"+componentId).attr("cLow",oResult.EVT_CRIT_LOW.toFixed(oResult.EVT_CRIT_LOW_P));
$("#txtHDL"+componentId).attr("cHigh",oResult.EVT_CRIT_HIGH.toFixed(oResult.EVT_CRIT_HIGH_P));
$("#totHDLHvr"+componentId).html(FRAM_RISKS_O1.BuildHover(oResult));
}});
}if(isSysBPSet===false){$.each(systolicEvents,function(index,value){if(oResult.EVT_SET_CD==value){isSysBPSet=true;
$("#txtSBP"+componentId).val(oResult.EVT_RSLT);
if($("#txtSBP"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#txtSBP"+componentId).addClass(oResult.EVT_NORM_CSS);
}if(oResult.EVT_UNIT!=""){$("#spSBPUnits"+componentId).html(oResult.EVT_UNIT);
}$("#spResultSBP"+componentId).text(oResult.EVT_STATUS+" on "+evtDtTm);
if($("#spNormalcySBP"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#spNormalcySBP"+componentId).addClass(oResult.EVT_NORM_CSS);
}if($("#spNormalcySBP"+componentId).hasClass("fram-risks-frt")==false){$("#spNormalcySBP"+componentId).addClass("fram-risks-frt");
}$("#txtSBP"+componentId).attr("nLow",oResult.EVT_NORM_LOW.toFixed(oResult.EVT_NORM_LOW_P));
$("#txtSBP"+componentId).attr("nHigh",oResult.EVT_NORM_HIGH.toFixed(oResult.EVT_NORM_HIGH_P));
$("#txtSBP"+componentId).attr("cLow",oResult.EVT_CRIT_LOW.toFixed(oResult.EVT_CRIT_LOW_P));
$("#txtSBP"+componentId).attr("cHigh",oResult.EVT_CRIT_HIGH.toFixed(oResult.EVT_CRIT_HIGH_P));
$("#systolicHvr"+componentId).html(FRAM_RISKS_O1.BuildHover(oResult));
}});
}if(isDiaBPSet===false){$.each(diastolicEvents,function(index,value){if(oResult.EVT_SET_CD==value){isDiaBPSet=true;
$("#txtDBP"+componentId).val(oResult.EVT_RSLT);
if($("#txtDBP"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#txtDBP"+componentId).addClass(oResult.EVT_NORM_CSS);
}if(oResult.EVT_UNIT!=""){$("#spDBPUnits"+componentId).html(oResult.EVT_UNIT);
}$("#spResultDBP"+componentId).text(oResult.EVT_STATUS+" on "+evtDtTm);
if($("#spNormalcyDBP"+componentId).hasClass(oResult.EVT_NORM_CSS)==false){$("#spNormalcyDBP"+componentId).addClass(oResult.EVT_NORM_CSS);
}if($("#spNormalcyDBP"+componentId).hasClass("fram-risks-frt")==false){$("#spNormalcyDBP"+componentId).addClass("fram-risks-frt");
}$("#txtDBP"+componentId).attr("nLow",oResult.EVT_NORM_LOW.toFixed(oResult.EVT_NORM_LOW_P));
$("#txtDBP"+componentId).attr("nHigh",oResult.EVT_NORM_HIGH.toFixed(oResult.EVT_NORM_HIGH_P));
$("#txtDBP"+componentId).attr("cLow",oResult.EVT_CRIT_LOW.toFixed(oResult.EVT_CRIT_LOW_P));
$("#txtDBP"+componentId).attr("cHigh",oResult.EVT_CRIT_HIGH.toFixed(oResult.EVT_CRIT_HIGH_P));
$("#diastolicHvr"+componentId).html(FRAM_RISKS_O1.BuildHover(oResult));
}});
}}}var futureString="";
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
futureString="Future";
FRAM_RISKS_O1.CalculateRisk(component,futureString);
FRAM_RISKS_O1.CalculateScore(component,futureString);
component.setIsResultsLoaded(true);
if(component.getIsDemographicsLoaded()===true){FRAM_RISKS_O1.AddEvents(component);
}},CalculateRisk:function(component,futureString){var componentId=component.getComponentId();
var tenYearRiskEl=_g("sp"+futureString+"TenYearRisk"+componentId);
var lifetimeRiskEl=_g("sp"+futureString+"LifetimeRisk"+componentId);
var outOfRangeText=component.getOutOfRangeText(futureString);
var ptAge=parseInt(_g("txtAge"+componentId).value,10);
var tenYearInd=false;
var lifetimeInd=false;
if(ptAge>39&&ptAge<80){tenYearInd=true;
tenYearRiskEl.innerHTML="";
}else{tenYearRiskEl.innerHTML=i18nFram.AGE_10_YEAR_DISQ+"&nbsp;";
}if(ptAge>19&&ptAge<60){lifetimeInd=true;
lifetimeRiskEl.innerHTML="";
}else{lifetimeRiskEl.innerHTML=i18nFram.AGE_LIFETIME_DISQ+"&nbsp;";
}if(outOfRangeText==""&&(tenYearInd==true||lifetimeInd==true)){var gender=_g("selGender"+componentId).value;
var race=_g("selRace"+componentId).value;
var totChol=_g("txt"+futureString+"TotalChol"+componentId).value;
var cholUnits=_g("sel"+futureString+"TotalCholUnits"+componentId).value;
if(cholUnits!="MG/DL"){totChol=totChol*18;
}var totHDL=_g("txt"+futureString+"HDL"+componentId).value;
var hdlUnits=_g("sel"+futureString+"HDLUnits"+componentId).value;
if(hdlUnits!="MG/DL"){totHDL=totHDL*18;
}var ptBP=Number(_g("txt"+futureString+"SBP"+componentId).value);
var ptTreatment=_g("sel"+futureString+"TreatmentHBP"+componentId).value;
var ptDiab=_g("sel"+futureString+"Diabetic"+componentId).value;
var ptSmoker=_g("sel"+futureString+"Smoker"+componentId).value;
if(ptBP&&totHDL&&totChol){function ln(val){return Math.log(val);
}var lnAge=ln(ptAge);
var lnChol=ln(totChol);
var lnHDL=ln(totHDL);
var lnSystolic=ln(ptBP);
var riskObj=FRAM_RISKS_O1.PerformRiskCalculations(gender,race,lnAge,lnChol,lnHDL,lnSystolic,ptBP,totChol,ptTreatment,ptDiab,ptSmoker);
if(tenYearInd==true){tenYearRiskEl.innerHTML=riskObj.tenYearRisk;
}if(lifetimeInd==true){lifetimeRiskEl.innerHTML=riskObj.lifeTimeRisk;
}}else{if(tenYearInd==true){tenYearRiskEl.innerHTML="--";
}if(lifetimeInd==true){lifetimeRiskEl.innerHTML="--";
}}}else{if(outOfRangeText){tenYearRiskEl.innerHTML+=outOfRangeText;
lifetimeRiskEl.innerHTML+=outOfRangeText;
}}},PerformRiskCalculations:function(gender,race,lnAge,lnChol,lnHDL,lnSystolic,ptBP,totChol,ptTreatment,ptDiab,ptSmoker){var tenYearRisk=0;
var lifeTimeRisk=0;
var numMajorRiskFactors=0;
var numElevRiskFactors=0;
var numRiskFactors=0;
if(gender=="FEMALE"){if(race=="WHITE"){tenYearRisk=-29.799*lnAge+4.884*lnAge*lnAge+13.54*lnChol-3.114*lnAge*lnChol-13.578*lnHDL+3.149*lnAge*lnHDL;
if(ptTreatment==1){tenYearRisk+=2.019*lnSystolic;
numMajorRiskFactors++;
}else{tenYearRisk+=1.957*lnSystolic;
if(ptBP>139){if(ptBP>=160){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(ptBP>=120){numRiskFactors++;
}}}if(ptSmoker==1){tenYearRisk+=7.574-1.665*lnAge;
numMajorRiskFactors++;
}if(ptDiab==1){tenYearRisk+=0.661;
numMajorRiskFactors++;
}tenYearRisk=((1-Math.pow(0.96652,Math.pow(Math.E,(tenYearRisk+29.1817))))*100).toFixed(1);
}else{tenYearRisk=17.1141*lnAge+0.9396*lnChol-18.9196*lnHDL+4.4748*lnAge*lnHDL;
if(ptTreatment==1){tenYearRisk+=29.2907*lnSystolic-6.4321*lnAge*lnSystolic;
numMajorRiskFactors++;
}else{tenYearRisk+=27.8197*lnSystolic-6.0873*lnAge*lnSystolic;
if(ptBP>139){if(ptBP>=160){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(ptBP>=120){numRiskFactors++;
}}}if(ptSmoker==1){tenYearRisk+=0.6908;
numMajorRiskFactors++;
}if(ptDiab==1){tenYearRisk+=0.8738;
numMajorRiskFactors++;
}tenYearRisk=((1-Math.pow(0.95334,Math.pow(Math.E,(tenYearRisk-86.6081))))*100).toFixed(1);
}if(totChol>199){if(totChol>=240){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(totChol>=180){numRiskFactors++;
}}if(numMajorRiskFactors>0){if(numMajorRiskFactors>1){lifeTimeRisk=50;
}else{lifeTimeRisk=39;
}}else{if(numElevRiskFactors>0){lifeTimeRisk=39;
}else{if(numRiskFactors>0){lifeTimeRisk=27;
}else{lifeTimeRisk=8;
}}}}else{if(race=="WHITE"){tenYearRisk=12.344*lnAge+11.853*lnChol-2.664*lnAge*lnChol-7.99*lnHDL+1.769*lnAge*lnHDL;
if(ptTreatment==1){tenYearRisk+=1.797*lnSystolic;
numMajorRiskFactors++;
}else{tenYearRisk+=1.764*lnSystolic;
if(ptBP>139){if(ptBP>=160){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(ptBP>=120){numRiskFactors++;
}}}if(ptSmoker==1){tenYearRisk+=7.837-1.795*lnAge;
numMajorRiskFactors++;
}if(ptDiab==1){tenYearRisk+=0.658;
numMajorRiskFactors++;
}tenYearRisk=((1-Math.pow(0.91436,Math.pow(Math.E,(tenYearRisk-61.1816))))*100).toFixed(1);
}else{tenYearRisk=2.469*lnAge+0.302*lnChol-0.307*lnHDL;
if(ptTreatment==1){tenYearRisk+=1.916*lnSystolic;
numMajorRiskFactors++;
}else{tenYearRisk+=1.809*lnSystolic;
if(ptBP>139){if(ptBP>=160){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(ptBP>=120){numRiskFactors++;
}}}if(ptSmoker==1){tenYearRisk+=0.549;
numMajorRiskFactors++;
}if(ptDiab==1){tenYearRisk+=0.645;
numMajorRiskFactors++;
}tenYearRisk=((1-Math.pow(0.89536,Math.pow(Math.E,(tenYearRisk-19.5425))))*100).toFixed(1);
}if(totChol>199){if(totChol>=240){numMajorRiskFactors++;
}else{numElevRiskFactors++;
}}else{if(totChol>=180){numRiskFactors++;
}}if(numMajorRiskFactors>0){if(numMajorRiskFactors>1){lifeTimeRisk=69;
}else{lifeTimeRisk=50;
}}else{if(numElevRiskFactors>0){lifeTimeRisk=46;
}else{if(numRiskFactors>0){lifeTimeRisk=36;
}else{lifeTimeRisk=5;
}}}}return{tenYearRisk:tenYearRisk,lifeTimeRisk:lifeTimeRisk};
},CalculateScore:function(component,futureString){if(!futureString){futureString="";
}var componentId=component.getComponentId();
var age=_g("txtAge"+componentId).value;
var comparativeRiskEl=$("#sp"+futureString+"CompRisk"+componentId);
var tenYearRiskEl=$("#sp"+futureString+"TenYearCHDRisk"+componentId);
var totalScoreEl=$("#sp"+futureString+"TotalScore"+componentId);
if(age<30||age>74){var ageOutOfRange=i18nFram.AGE_DISQ;
comparativeRiskEl.html(ageOutOfRange);
tenYearRiskEl.html(ageOutOfRange);
totalScoreEl.html(ageOutOfRange);
}else{var curPoints=0;
var gender=_g("selGender"+componentId).value;
var male="MALE";
var genderIsMale=false;
if(gender==male){genderIsMale=true;
}FRAM_RISKS_O1.SetPtsAgeRisk(component,componentId,futureString,genderIsMale);
var pointsObj=component.getPoints(futureString);
var cRisk=component.getCompRisk();
for(var i in pointsObj){curPoints+=pointsObj[i];
}var riskValue="";
riskValue=FRAM_RISKS_O1.ConvertPointsToScore(curPoints,genderIsMale);
comparativeRiskEl.html(cRisk);
tenYearRiskEl.html(riskValue);
totalScoreEl.html(curPoints);
}},SetPtsAgeRisk:function(component,componentId,futureString,genderIsMale){var age=_g("txtAge"+componentId).value;
var pv=0;
var crisk="";
if(age>=30&&age<=34){pv=(genderIsMale)?-1:-9;
crisk=(genderIsMale)?"3%":"<1%";
}if(age>=35&&age<=39){pv=(genderIsMale)?0:-4;
crisk=(genderIsMale)?"5%":"<1%";
}if(age>=40&&age<=44){pv=(genderIsMale)?1:0;
crisk=(genderIsMale)?"7%":"2%";
}if(age>=45&&age<=49){pv=(genderIsMale)?2:3;
crisk=(genderIsMale)?"11%":"5%";
}if(age>=50&&age<=54){pv=(genderIsMale)?3:6;
crisk=(genderIsMale)?"14%":"8%";
}if(age>=55&&age<=59){pv=(genderIsMale)?4:7;
crisk=(genderIsMale)?"16%":"12%";
}if(age>=60&&age<=64){pv=(genderIsMale)?5:8;
crisk=(genderIsMale)?"21%":"12%";
}if(age>=65&&age<=69){pv=(genderIsMale)?6:8;
crisk=(genderIsMale)?"25%":"13%";
}if(age>=70&&age<=74){pv=(genderIsMale)?7:8;
crisk=(genderIsMale)?"30%":"14%";
}component.setPoints(futureString,"age",pv);
component.setCompRisk(crisk);
FRAM_RISKS_O1.SetPtsDiab(component,componentId,futureString,genderIsMale);
},SetPtsDiab:function(component,componentId,futureString,genderIsMale){var pv=0;
var diab=_g("sel"+futureString+"Diabetic"+componentId).value;
if(genderIsMale){pv=(diab==1)?2:0;
}else{pv=(diab==1)?4:0;
}component.setPoints(futureString,"diabetes",pv);
FRAM_RISKS_O1.SetPtsSmkr(component,componentId,futureString,genderIsMale);
},SetPtsSmkr:function(component,componentId,futureString,genderIsMale){var smoker=_g("sel"+futureString+"Smoker"+componentId).value;
var pv=0;
pv=(smoker==1)?2:0;
component.setPoints(futureString,"smoker",pv);
FRAM_RISKS_O1.SetPtsChol(component,componentId,futureString,genderIsMale);
},SetPtsChol:function(component,componentId,futureString,genderIsMale){var chol=_g("txt"+futureString+"TotalChol"+componentId).value;
var cholUnits=_g("sel"+futureString+"TotalCholUnits"+componentId).value;
chol=parseFloat(chol);
var pv=0;
if(genderIsMale){if(cholUnits=="MG/DL"){if(chol<160){pv=-3;
}else{if(chol<200){pv=0;
}else{if(chol<240){pv=1;
}else{if(chol<280){pv=2;
}else{if(chol>=280){pv=3;
}}}}}}else{if(chol<4.14){pv=-3;
}else{if(chol<5.18){pv=0;
}else{if(chol<6.22){pv=1;
}else{if(chol<7.25){pv=2;
}else{if(chol>=7.25){pv=3;
}}}}}}}else{if(cholUnits=="MG/DL"){if(chol<160){pv=-2;
}else{if(chol<200){pv=0;
}else{if(chol<240){pv=1;
}else{if(chol<280){pv=1;
}else{if(chol>=280){pv=3;
}}}}}}else{if(chol<4.14){pv=-2;
}else{if(chol<5.18){pv=0;
}else{if(chol<6.22){pv=1;
}else{if(chol<7.25){pv=1;
}else{if(chol>=7.25){pv=3;
}}}}}}}component.setPoints(futureString,"totChol",pv);
FRAM_RISKS_O1.SetPtsHDL(component,componentId,futureString,genderIsMale);
},SetPtsHDL:function(component,componentId,futureString,genderIsMale){var pv=0;
var hdl=_g("txt"+futureString+"HDL"+componentId).value;
var hdlUnits=_g("sel"+futureString+"HDLUnits"+componentId).value;
if(genderIsMale){if(hdlUnits=="MG/DL"){if(hdl<35){pv=2;
}else{if(hdl<45){pv=1;
}else{if(hdl<50){pv=0;
}else{if(hdl<60){pv=0;
}else{if(hdl>=60){pv=-2;
}}}}}}else{if(hdl<0.9){pv=2;
}else{if(hdl<1.17){pv=1;
}else{if(hdl<1.3){pv=0;
}else{if(hdl<1.56){pv=0;
}else{if(hdl>=1.56){pv=-2;
}}}}}}}else{if(hdlUnits=="MG/DL"){if(hdl<35){pv=5;
}else{if(hdl<45){pv=2;
}else{if(hdl<50){pv=1;
}else{if(hdl<60){pv=0;
}else{if(hdl>=60){pv=-3;
}}}}}}else{if(hdl<0.9){pv=5;
}else{if(hdl<1.17){pv=2;
}else{if(hdl<1.3){pv=1;
}else{if(hdl<1.56){pv=0;
}else{if(hdl>=1.56){pv=-3;
}}}}}}}component.setPoints(futureString,"hdl",pv);
FRAM_RISKS_O1.SetPtsBP(component,componentId,futureString,genderIsMale);
},SetPtsBP:function(component,componentId,futureString,genderIsMale){var systolic=_g("txt"+futureString+"SBP"+componentId).value;
var diastolic=_g("txt"+futureString+"DBP"+componentId).value;
var sPtVal=FRAM_RISKS_O1.SetPtsSBP(componentId,systolic,futureString,genderIsMale);
var dPtVal=FRAM_RISKS_O1.SetPtsDBP(componentId,diastolic,futureString,genderIsMale);
var pv=0;
if(sPtVal>dPtVal){pv=sPtVal;
}else{pv=dPtVal;
}component.setPoints(futureString,"bp",pv);
},SetPtsSBP:function(componentId,systolic,futureString,genderIsMale){var pv=0;
if(genderIsMale){if(systolic<120){pv=0;
}else{if(systolic<130){pv=0;
}else{if(systolic<140){pv=1;
}else{if(systolic<180){pv=2;
}else{if(systolic>=180){pv=3;
}}}}}}else{if(systolic<120){pv=-3;
}else{if(systolic<130){pv=0;
}else{if(systolic<140){pv=0;
}else{if(systolic<180){pv=2;
}else{if(systolic>=180){pv=3;
}}}}}}return(pv);
},SetPtsDBP:function(componentId,diastolic,futureString,genderIsMale){var pv=0;
if(genderIsMale){if(diastolic<80){pv=0;
}else{if(diastolic<85){pv=0;
}else{if(diastolic<90){pv=1;
}else{if(diastolic<100){pv=2;
}else{if(diastolic>=100){pv=3;
}}}}}}else{if(diastolic<80){pv=-3;
}else{if(diastolic<85){pv=0;
}else{if(diastolic<90){pv=0;
}else{if(diastolic<100){pv=2;
}else{if(diastolic>=100){pv=3;
}}}}}}return(pv);
},ConvertPointsToScore:function(pts,genderIsMale){var score="";
if(pts<=-2){score=(genderIsMale)?"1%":"2%";
}else{if(pts==-1){score="2%";
}else{if(pts==0){score=(genderIsMale)?"3%":"2%";
}else{if(pts==1){score=(genderIsMale)?"3%":"2%";
}else{if(pts==2){score=(genderIsMale)?"4%":"3%";
}else{if(pts==3){score=(genderIsMale)?"6%":"3%";
}else{if(pts==4){score=(genderIsMale)?"7%":"4%";
}else{if(pts==5){score=(genderIsMale)?"8%":"4%";
}else{if(pts==6){score=(genderIsMale)?"10%":"5%";
}else{if(pts==7){score=(genderIsMale)?"13%":"6%";
}else{if(pts==8){score=(genderIsMale)?"16%":"7%";
}else{if(pts==9){score=(genderIsMale)?"20%":"8%";
}else{if(pts==10){score=(genderIsMale)?"25%":"10%";
}else{if(pts==11){score=(genderIsMale)?"31%":"11%";
}else{if(pts==12){score=(genderIsMale)?"37%":"13%";
}else{if(pts==13){score=(genderIsMale)?"45%":"15%";
}else{if(pts==14){score=(genderIsMale)?">=53%":"18%";
}else{if(pts==15){score=(genderIsMale)?">=53%":"20%";
}else{if(pts==16){score=(genderIsMale)?">=53%":"24%";
}else{if(pts>=17){score=(genderIsMale)?">=53%":">=27%";
}}}}}}}}}}}}}}}}}}}}return score;
},Reset:function(component,componentId){MP_Util.Doc.HideHovers();
Util.de(_g("compFramRiskDetails"+componentId));
component.setIsDemographicsLoaded(false);
component.setIsResultsLoaded(false);
var isComponent=true;
FRAM_RISKS_O1.RenderComponent(component,isComponent);
},SubmitScore:function(component,componentId){var xhr=(CERN_BrowserDevInd)?new XMLHttpRequest():new XMLCclRequest();
var dateTime=new Date();
var criterion=component.getCriterion();
var df=MP_Util.GetDateFormatter();
var eventDateTime=dateTime.format("dd-mmm-yyyy HH:MM:ss").toUpperCase();
var oldRisks=_g("originalRisks"+componentId);
var originalCalcInd=0;
var inputNum=0;
var ceCodes=[];
var personId=criterion.person_id;
var encntrId=criterion.encntr_id;
var prsnlId=criterion.provider_id;
var pprCd=criterion.ppr_cd;
if(Util.Style.ccss(oldRisks,"selected")){originalCalcInd=1;
inputNum=$("#spTotalScore"+componentId).html();
ceCodes=component.getScoreResultCE();
}else{inputNum=$("#spTenYearRisk"+componentId).html();
ceCodes=component.getFramRiskCE();
}var MPREQ={LIST:[]};
if(ceCodes.length>0){var noteList=[];
noteList[0]={NOTE:FRAM_RISKS_O1.BuildClinicalEventComment(componentId,originalCalcInd),NOTE_TYPE:""};
for(var i=0,il=ceCodes.length;
i<il;
i++){MPREQ.LIST[MPREQ.LIST.length]={INPUTPERSONID:personId.toFixed(1),INPUTPROVIDERID:prsnlId.toFixed(1),INPUTENCOUNTERID:encntrId.toFixed(1),INPUTEVENTSETCD:ceCodes[i].toFixed(1),INPUTEVENTCD:"0.0",ENDDTTM:eventDateTime,INPUTNUM:inputNum,INPUTEVENTNOTE:noteList,INPUTPPR:pprCd.toFixed(1)};
}}$("#btnSubmit"+componentId).addClass("hidden");
$("#submitInProgress"+componentId).removeClass("hidden");
var mpreqJSON=JSON.stringify(MPREQ);
xhr.onreadystatechange=function(){if(xhr.readyState==4&&xhr.status==200){MP_Util.LogScriptCallInfo(component,this,"desired-state.js","Search");
var msg=xhr.responseText;
var jsonMsg="";
if(msg){jsonMsg=JSON.parse(msg);
}if(jsonMsg){FRAM_RISKS_O1.receiveReply(jsonMsg,component);
}}};
var parameters='^MINE^, ^{"MPREQ":'+mpreqJSON+"}^";
if(CERN_BrowserDevInd){var url="inn_mp_add_ce_num_result_wrap?parameters="+parameters;
xhr.open("GET",url);
xhr.send(null);
}else{xhr.open("GET","inn_mp_add_ce_num_result_wrap");
xhr.send(parameters);
}},BuildClinicalEventComment:function(componentId,originalCalcInd){var ce_cmt,g,u,t;
var gender=_g("selGender"+componentId).value;
var male="MALE";
var genderIsMale=false;
if(gender==male){genderIsMale=true;
}g=(genderIsMale)?i18nFram.OPT_MALE:i18nFram.OPT_FEMALE;
var cmtGender=i18nFram.LBL_GENDER+": "+g;
var cmtAge=i18nFram.LBL_AGE+": "+$("#txtAge"+componentId).attr("age_val")+" "+i18nFram.NOTE_AGE;
var cmtChol=i18nFram.LBL_TOT_CHOL+": "+$("#txtTotalChol"+componentId).val()+" "+$("#selTotalCholUnits"+componentId+"  option:selected").text();
var cmtHDL=i18nFram.LBL_HDL_LVL+": "+$("#txtHDL"+componentId).val()+" "+$("#selHDLUnits"+componentId+"  option:selected").text();
var cmtSBP=i18nFram.LBL_SBP+": "+$("#txtSBP"+componentId).val()+" "+i18nFram.NOTE_MMHG;
var cmtDiab=i18nFram.LBL_DIABETIC+": "+$("#selDiabetic"+componentId+"  option:selected").text();
var cmtSmkr=i18nFram.LBL_SMOKER+": "+$("#selSmoker"+componentId+"  option:selected").text();
if(originalCalcInd==1){var cmtDBP=i18nFram.LBL_DBP+": "+$("#txtDBP"+componentId).val()+" "+i18nFram.NOTE_MMHG;
var cmtScore=i18nFram.LBL_TOT_SCORE+": "+$("#spTotalScore"+componentId).html();
var cmt10yrRisk=i18nFram.LBL_10_YR_RISK+": "+$("#spTenYearCHDRisk"+componentId).html();
var cmtCompRisk=i18nFram.LBL_LIFETIME_RISK+": "+$("#spCompRisk"+componentId).html();
ce_cmt=cmtGender+"; "+cmtAge+"; "+cmtChol+"; "+cmtHDL+"; "+cmtSBP+"; "+cmtDBP+"; "+cmtDiab+"; "+cmtSmkr+"; "+cmt10yrRisk+"; "+cmtCompRisk;
}else{var cmtRace=i18nFram.LBL_RACE+": "+$("#selRace"+componentId+"  option:selected").text();
var cmtTreatment=i18nFram.LBL_TREATMENT_HBP+": "+$("#selTreatmentHBP"+componentId+" option:selected").text();
var cmt10yrRisk=i18nFram.LBL_10_YR_RISK+": "+$("#spTenYearRisk"+componentId).html();
var cmtLifetimeRisk=i18nFram.LBL_LIFETIME_RISK+": "+$("#spLifetimeRisk"+componentId).html();
ce_cmt=cmtGender+"; "+cmtAge+"; "+cmtRace+"; "+cmtChol+"; "+cmtHDL+"; "+cmtSBP+"; "+cmtTreatment+"; "+cmtDiab+"; "+cmtSmkr+"; "+cmt10yrRisk+"; "+cmtLifetimeRisk;
}return(ce_cmt);
},receiveReply:function(reply,component){var response=reply.POSTREPLY;
var componentId=component.getComponentId();
var status=response.STATUS_DATA;
if(status.STATUS!="S"){alert(i18nFram.DOC_FAIL+"\nStatus: "+status.STATUS+"\n"+status.SUBEVENTSTATUS[1].TARGETOBJECTVALUE);
}else{$("#submitInProgress"+componentId).addClass("hidden");
$("#btnSubmit"+componentId).removeClass("hidden");
}}};
}();
MP_Util.setObjectDefinitionMapping("FRAMING",FraminghamRisksComponentO1);
