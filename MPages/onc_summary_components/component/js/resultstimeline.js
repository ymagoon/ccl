function ResultTimelineStyle(){this.initByNamespace("rt");
}ResultTimelineStyle.inherits(ComponentStyle);
function ResultTimelineComponent(criterion){this.setCriterion(criterion);
this.setStyles(new ResultTimelineStyle());
this.setIncludeLineNumber(true);
this.setComponentLoadTimerName("USR:MPG.RESULTTIMELINE.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.RESULTTIMELINE.O1 - render component");
this.setResourceRequired(true);
ResultTimelineComponent.method("InsertData",function(){CERN_RESULT_TIMELINE_O1.GetResultTimeline(this);
});
ResultTimelineComponent.method("HandleSuccess",function(recordData){CERN_RESULT_TIMELINE_O1.RenderComponent(this,recordData);
});
ResultTimelineComponent.method("RetrieveRequiredResources",function(){var patientGenderInfo=criterion.getPatientInfo().getSex();
var rti18n=i18n.discernabu.result_timeline_o1;
if(patientGenderInfo===null){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+rti18n.GENDER_UNDEFINED+"</span></h3><span class='res-none'>"+rti18n.GENDER_UNDEFINED+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,this,"(0)");
return;
}var pregInfoObj=null;
pregInfoObj=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoObj&&pregInfoObj.isResourceAvailable()){this.InsertData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}});
ResultTimelineComponent.method("setResultLabs",function(value){this.m_resultLabs=value;
});
ResultTimelineComponent.method("getResultLabs",function(value){return this.m_resultLabs;
});
ResultTimelineComponent.method("setResultUltrasounds",function(value){this.m_resultUS=value;
});
ResultTimelineComponent.method("getResultUltrasounds",function(value){return this.m_resultUS;
});
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.InsertData,this);
}ResultTimelineComponent.inherits(MPageComponent);
var CERN_RESULT_TIMELINE_O1=function(){return{GetResultTimeline:function(component){var sendAr=[];
var criterion=component.getCriterion();
var encntrs=null;
var encntrStr="";
var messageHTML="";
var pregInfoObj=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregnancyId=0;
var rti18n=i18n.discernabu.result_timeline_o1;
if(criterion.getPatientInfo().getSex().meaning!=="FEMALE"){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+rti18n.NOT_FEMALE+"</span></h3><span class='res-none'>"+rti18n.NOT_FEMALE+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
if(pregnancyId===-1){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+rti18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+rti18n.PREG_DATA_ERROR+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(!pregnancyId){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+rti18n.NO_ACTIVE_PREG+"</span></h3><span class='res-none'>"+rti18n.NO_ACTIVE_PREG+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{encntrs=criterion.getPersonnelInfo().getViewableEncounters();
encntrStr=(encntrs)?"value("+encntrs+")":"0";
sendAr.push("^MINE^",criterion.person_id+".0",encntrStr,criterion.provider_id+".0",criterion.position_cd+".0",criterion.ppr_cd+".0",pregInfoObj.getLookBack());
var events=[component.getResultLabs(),component.getResultUltrasounds()];
for(var i=0;
i<events.length;
i++){sendAr.push(MP_Util.CreateParamArray(events[i],1));
}MP_Core.XMLCclRequestWrapper(component,"MP_GET_RESULTS_TIMELINE",sendAr,true);
}}}}},RenderComponent:function(component,recordData){var rtI18n=i18n.discernabu.result_timeline_o1;
var resultTable=[];
var visitData=[];
var labData=[];
var usData=[];
var pregInfoObj=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
}else{messageHTML="<h3 class='info-hd'><span class='res-normal'>"+rtI18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+rtI18n.PREG_DATA_ERROR+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}if(pregInfoObj.getPregnancyId()>0&&pregInfoObj.getEddId()>0){var tableWidth=300;
var df=MP_Util.GetDateFormatter();
var nf=MP_Util.GetNumericFormatter();
var actDelDateFormatted=null;
if(pregInfoObj.getDeliveryDate()!==0){actDelDateFormatted=df.formatISO8601(pregInfoObj.getDeliveryDate(),mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}var currentDt=new Date();
currentDt.setDate(currentDt.getDate());
var currentDateDisplay=df.format(currentDt,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var lookback=pregInfoObj.getLookBack();
var pregOnsetDt=pregInfoObj.getOnsetDate();
var onsetDate=(pregOnsetDt)?df.format(pregOnsetDt,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR):"";
resultTable.push("<table class='rt-banner'><tr class='header'><td class='dispdt'>",rtI18n.ONSET_DATE,onsetDate,"</td><td>&nbsp;</td>");
var eddDt=df.formatISO8601(pregInfoObj.getEstDeliveryDate(),mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var eddDisplay=(!actDelDateFormatted)?rtI18n.EDD+eddDt:rtI18n.ACTUAL_DELIVERY_DATE+"<span class='rt-deldate'>"+actDelDateFormatted+"</span>";
resultTable.push("<td>"+eddDisplay+"</td></tr></table>");
resultTable.push("<table class='rt-results-table'><tr><td class='labels'><table class='rt-table'><tr><td class='noname'>&nbsp;</td></tr><tr><td class='noname'>&nbsp;</td></tr>");
resultTable.push("<tr><td class='name1'>"+rtI18n.GESTATIONAL_AGE+"</td></tr>");
resultTable.push("<tr><td class='name'>"+rtI18n.WEEK_IN_PARENTHESES+"</td></tr>");
var rowHeaders=[rtI18n.VISITS,rtI18n.LABS,rtI18n.ULTRASOUNDS];
for(var i=0;
i<rowHeaders.length;
i++){resultTable.push("<tr><td class='name'>",rowHeaders[i],"</td></tr>");
}resultTable.push("<tr><td>&nbsp;</td></tr><tr><td>&nbsp;</td></tr></table></td>");
resultTable.push("<td class='data'><div class='rt-hscroll'><table class='rt-table'>");
var getBorderStyling=function(date){if(date==actDelDateFormatted){return"pregdtborder";
}else{if(date==currentDateDisplay){return"currentdtborder";
}}return"noborder";
};
var incrementalDate=new Date();
incrementalDate.setDate(incrementalDate.getDate()-pregInfoObj.getRtLookBack());
var dtArray=[];
var gestAgeRowHTML=["<tr>"];
var gestWeeksRowHTML=["<tr>"];
for(i=0;
i<=tableWidth;
i++){var displayDate=df.format(incrementalDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
dtArray[i]=displayDate;
var gestWeekDisplay="&nbsp;";
if(i%7===0){gestWeeksRowHTML.push("<td class='disp'><span class='result-dttm'>",displayDate,"</span></td>");
gestWeekDisplay=Math.floor(i/7);
}gestAgeRowHTML.push("<td class='"+getBorderStyling(displayDate)+"'><span class='rt-numval'>",gestWeekDisplay,"</span></td>");
incrementalDate.setDate(incrementalDate.getDate()+1);
}gestAgeRowHTML.push("</tr>");
gestWeeksRowHTML.push("</tr>");
var generateBannerRow=function(bannerDt,style){var bannerHTML=["<tr>"];
var dateIncrement=new Date();
dateIncrement.setDate(dateIncrement.getDate()-pregInfoObj.getRtLookBack());
for(var i=0;
i<=tableWidth;
i++){var displayDate=df.format(dateIncrement,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
if(displayDate===bannerDt){bannerHTML.push("<td class='",style,"'><span class='rt-numval'>"+bannerDt+"</span></td>");
}else{bannerHTML.push("<td class='noborder'><span class='rt-numval'>&nbsp;</span></td>");
}dateIncrement.setDate(dateIncrement.getDate()+1);
}bannerHTML.push("</tr>");
return bannerHTML.join("");
};
var deliveryRowHTML=generateBannerRow(actDelDateFormatted,"deliverydt");
var currentDateRowHTML=generateBannerRow(currentDateDisplay,"currentdt");
resultTable.push("<tr><td><table class='rt-table1'>",deliveryRowHTML,"</table></td></tr>","<tr><td><table class='rt-table1'>",currentDateRowHTML,"</table></td></tr>","<tr><td><table class='rt-table1'>",gestAgeRowHTML.join(""),"</table></td></tr>","<tr><td><table class='rt-table1'>",gestWeeksRowHTML.join(""),"</table></td></tr>");
var rowCnt=recordData.RESULT_LIST.length;
for(i=0;
i<rowCnt;
i++){var result=recordData.RESULT_LIST[i];
if(!result||!result.ROW_NAME||!result.EVENT_DT_TM){continue;
}var eventDate=new Date();
eventDate.setISO8601(result.EVENT_DT_TM);
if(result.ROW_NAME==="Visits"){visitData.push({DATE:eventDate,DIAGNOSIS:result.RESULT_VAL,PROVIDER:result.PROVIDER_NAME});
}else{if(result.ROW_NAME==="Labs"){labData.push({DATE:eventDate,NAME:result.EVENT_NAME,RESULT:result.RESULT_VAL,UNIT:result.RESULT_UNITS,LOW:result.NORMAL_LOW,HIGH:result.NORMAL_HIGH,NORMALCY:result.NORMALCY_FLG});
}else{if(result.ROW_NAME==="Ultrasounds"){usData.push({DATE:eventDate,NAME:result.EVENT_NAME,ID:result.EVENT_ID});
}}}}var sortFunc=function(a,b){return b.DATE.getTime()-a.DATE.getTime();
};
visitData.sort(sortFunc);
labData.sort(sortFunc);
usData.sort(sortFunc);
var generateNoResultCell=function(rowHTML,datePos){var cssClass=getBorderStyling(dtArray[datePos]);
rowHTML.push("<td class='",cssClass,"'><span class='rt-dttm'>&nbsp;</span></td>");
};
var generateNoResultRow=function(){var rowHTML=["<tr>"];
for(var k=0;
k<=tableWidth;
k++){generateNoResultCell(rowHTML,k);
}rowHTML.push("</tr>");
return rowHTML.join("");
};
var generateVisitHTML=function(){var visitRowHTML=["<tr>"];
for(var i=0;
i<=tableWidth;
i++){var foundMatch=false;
for(var j=0;
j<visitData.length;
j++){var visitDt=new Date(visitData[j].DATE);
visitDateDisplay=df.format(visitDt,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
if(dtArray[i]==visitDateDisplay){visitRowHTML.push("<td class='visit ",getBorderStyling(visitDateDisplay),"'><a></a><div class='hvr'><table class='rt-table2'>");
visitRowHTML.push("<tr><td class='title'>",rtI18n.VISIT_DATE,"</td><td class='title'>",rtI18n.DIAGNOSIS,"</td><td class='title'>",rtI18n.RESPONSIBLE_PROVIDER,"</td></tr>");
var eventDateDisplay=null;
if(visitData[j+1]&&areResultsOnSameDay(visitData[j].DATE,visitData[j+1].DATE)){for(var k=j;
k<visitData.length;
k++){eventDateDisplay=df.format(visitData[k].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
visitRowHTML.push("<tr><td class='res'>",eventDateDisplay,"</td><td class='res'>",visitData[k].DIAGNOSIS,"</td><td class='res'>",visitData[k].PROVIDER,"</td></tr>");
if(!visitData[k+1]||!areResultsOnSameDay(visitData[k].DATE,visitData[k+1].DATE)){break;
}}}else{eventDateDisplay=df.format(visitData[j].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
visitRowHTML.push("<tr><td class='res'>",eventDateDisplay,"</td><td class='res'>",visitData[j].DIAGNOSIS,"</td><td class='res'>",visitData[j].PROVIDER,"</td></tr>");
}visitRowHTML.push("</table></div>");
foundMatch=true;
break;
}}if(!foundMatch){generateNoResultCell(visitRowHTML,i);
}}visitRowHTML.push("</tr>");
return visitRowHTML.join("");
};
var generateLabHTML=function(){var labRowHTML=["<tr class='even'>"];
for(var i=0;
i<=tableWidth;
i++){var foundMatch=false;
for(var j=0;
j<labData.length;
j++){var labDt=new Date(labData[j].DATE);
labDt.setDate(labDt.getDate());
labDateDisplay=df.format(labDt,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
if(dtArray[i]==labDateDisplay){var normalcyFlag=0;
var hoverHTML=[];
hoverHTML.push("<tr><td class='title'>",rtI18n.DISPLAY_NAME,"</td><td class='title'>",rtI18n.RESULT,"</td><td class='title'>",rtI18n.DATE_TIME,"</td></tr>");
var eventDateDisplay=null;
var type=null;
if(labData[j+1]&&areResultsOnSameDay(labData[j].DATE,labData[j+1].DATE)){for(var k=j;
k<labData.length;
k++){eventDateDisplay=df.format(labData[k].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
normalcyFlag=normalcyFlag|getNormalcyFlag(labData[k].NORMALCY);
type=(labData[k].NORMALCY===1)?"rt-crit":"";
var tdClass=(labData[k+1]&&labData[k].DATE===labData[k+1].DATE)?"res":"";
hoverHTML.push("<tr><td class='res'>",labData[k].NAME,"</td><td class='res'>");
hoverHTML.push("<span class='",type,"'>",formatNumber(labData[k].RESULT),"&nbsp;",labData[k].UNIT,"</span>");
hoverHTML.push("</td><td class='",tdClass,"'>",eventDateDisplay,"</td></tr>");
if(!labData[k+1]||!areResultsOnSameDay(labData[k].DATE,labData[k+1].DATE)){break;
}}}else{eventDateDisplay=df.format(labData[j].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
type=(labData[j].NORMALCY===1)?"rt-crit":"";
normalcyFlag=getNormalcyFlag(labData[j].NORMALCY);
hoverHTML.push("<tr><td class='res'>",labData[j].NAME,"</td><td class='res'>");
hoverHTML.push("<span class='",type,"'>",formatNumber(labData[j].RESULT),"&nbsp;",labData[j].UNIT,"</span>");
hoverHTML.push("</td><td class='res'>",eventDateDisplay,"</td></tr>");
}var imageType=getNormalcyIconClass(normalcyFlag);
labRowHTML.push("<td class='",imageType," ",getBorderStyling(labDateDisplay),"'><a href='#' class='rt-link anchorclass'>","&nbsp;&nbsp;&nbsp;</a><div class='hvr'><table class='rt-table2'>",hoverHTML.join(""));
labRowHTML.push("</table></div>");
foundMatch=true;
break;
}}if(!foundMatch){generateNoResultCell(labRowHTML,i);
}}labRowHTML.push("</tr>");
return labRowHTML.join("");
};
var generateUltrasoundHTML=function(){var ultrasoundRowHTML=["<tr>"];
var eventDateDisplay=null;
for(var i=0;
i<=tableWidth;
i++){var foundMatch=false;
for(var j=0;
j<usData.length;
j++){var ultrasoundDt=new Date(usData[j].DATE);
ultrasoundDt.setDate(ultrasoundDt.getDate());
ultraDateDisplay=df.format(ultrasoundDt,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
if(dtArray[i]==ultraDateDisplay){ultrasoundRowHTML.push("<td class='ultrasound ",getBorderStyling(ultraDateDisplay),"'><a href='#' class='rt-link anchorclass'>","&nbsp;&nbsp;&nbsp;</a><div class='hvr'><table class='rt-table2'>");
ultrasoundRowHTML.push("<tr><td class='title1'>",rtI18n.SUBJECT,"</td><td class='title1'>",rtI18n.DATE_TIME,"</td></tr>");
if(usData[j+1]&&areResultsOnSameDay(usData[j].DATE,usData[j+1].DATE)){for(var k=j;
k<usData.length;
k++){eventDateDisplay=df.format(usData[k].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
ultrasoundRowHTML.push("<tr><td class='title1'>",usData[k].NAME,"</td><td class='title1'><a href='javascript:CCLLINK(mp_clin_smry_clinicaldocs, \"^MINE^,",usData[k].ID,".0,6\",1)'>",eventDateDisplay,"</a></td></tr>");
if(!usData[k+1]||!areResultsOnSameDay(usData[k].DATE,usData[k+1].DATE)){break;
}}}else{eventDateDisplay=df.format(usData[j].DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
ultrasoundRowHTML.push("<tr><td class='title1'>",usData[j].NAME,"</td><td class='title1'><a href='javascript:CCLLINK(mp_preg_clin_smry_clinicaldocs, \"^MINE^,",usData[j].ID,".0,1\",1)'>",eventDateDisplay,"</a></td></tr>");
}ultrasoundRowHTML.push("</table></div>");
foundMatch=true;
break;
}}if(!foundMatch){generateNoResultCell(ultrasoundRowHTML,i);
}}ultrasoundRowHTML.push("</tr>");
return ultrasoundRowHTML.join("");
};
var formatNumber=function(num){var resultDisplay;
try{resultDisplay=nf.format(num);
}catch(err){resultDisplay=num;
}return resultDisplay;
};
var criticalFlag=4096;
var highFlag=256;
var lowFlag=16;
var normalFlag=1;
var getNormalcyFlag=function(normalcy){var flags=0;
switch(normalcy){case 1:return flags|criticalFlag;
case 2:return flags|highFlag;
case 4:return flags|lowFlag;
default:return flags|normalFlag;
}};
var getNormalcyIconClass=function(normalcyFlag){if(normalcyFlag&criticalFlag){return"critical";
}if(normalcyFlag&highFlag){return"high";
}if(normalcyFlag&lowFlag){return"low";
}return"lab";
};
var areResultsOnSameDay=function(d1,d2){if(d1&&d2&&d1.getFullYear()===d2.getFullYear()&&d1.getDate()===d2.getDate()&&d1.getDay()===d2.getDay()){return true;
}return false;
};
var visitRow=(visitData.length===0)?generateNoResultRow():generateVisitHTML();
var labRow=(labData.length===0)?generateNoResultRow():generateLabHTML();
var ultrasoundRow=(usData.length===0)?generateNoResultRow():generateUltrasoundHTML();
resultTable.push("<tr><td><table class='rt-table1'>",visitRow,"</table></td></tr>","<tr><td><table class='rt-table1'>",labRow,"</table></td></tr>","<tr><td><table class='rt-table1'>",ultrasoundRow,"</table></td></tr>");
resultTable.push("<tr><td><table class='rt-table1'><tr><td class='tri1'>",rtI18n.TRIMESTER1,"</td><td class='tri2'>",rtI18n.TRIMESTER2,"</td><td class='tri3'>",rtI18n.TRIMESTER3,"</td></tr></table></td></tr>");
resultTable.push("<tr><td><table class='rt-table1'><tr><td><span>&nbsp;</span></td></tr></table></td></tr></table></div></td></tr></table>");
}else{resultTable.push("<span class='res-none'>",rtI18n.NO_EDD,"</span>");
}var countText=MP_Util.CreateTitleText(component,visitData.length+labData.length+usData.length);
MP_Util.Doc.FinalizeComponent(resultTable.join(""),component,countText);
var divs=Util.Style.g("hvr",_g(component.getStyles().getId()),"div");
for(var k=0;
k<divs.length;
k++){hs(Util.gp(divs[k]),divs[k]);
}var width=Math.round(document.body.offsetWidth*0.063);
jQuery(".tri1").css("width",(Math.round(width*13)+"px"));
jQuery(".tri2").css("width",(Math.round(width*14)+"px"));
jQuery(".tri3").css("width",(Math.round(width*16)+"px"));
}};
}();
