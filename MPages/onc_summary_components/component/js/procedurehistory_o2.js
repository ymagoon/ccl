function Procedure2ComponentStyle(){this.initByNamespace("proc2");
}Procedure2ComponentStyle.inherits(ComponentStyle);
function Procedure2Component(criterion){this.setCriterion(criterion);
this.setStyles(new Procedure2ComponentStyle());
this.setIncludeLineNumber(true);
this.setScope(1);
this.setComponentLoadTimerName("USR:MPG.PROCEDURE.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.PROCEDURE.O2 - render component");
this.m_viewableEncntrs="";
this.setResourceRequired(true);
Procedure2Component.method("RetrieveRequiredResources",function(){var veObj=MP_Core.GetViewableEncntrs(this.getCriterion().person_id);
if(veObj.isResourceAvailable()&&veObj.getResourceData()){this.setViewableEncntrs(veObj.getResourceData());
CERN_PROCEDURE_O2.GetProcedureTable(this);
}else{CERN_EventListener.addListener(this,"viewableEncntrInfoAvailable",this.HandleViewableEncounters,this);
}});
Procedure2Component.method("HandleViewableEncounters",function(event,srObj){if(srObj.isResourceAvailable()&&srObj.getResourceData()){this.setViewableEncntrs(srObj.getResourceData());
CERN_PROCEDURE_O2.GetProcedureTable(this);
}else{var errMsg="No viewable encounters available for this patient";
this.finalizeComponent(MP_Util.HandleErrorResponse(this.getStyles().getNameSpace(),errMsg),(this.isLineNumberIncluded()?"(0)":""));
}});
Procedure2Component.method("setViewableEncntrs",function(value){this.m_viewableEncntrs=value;
});
Procedure2Component.method("getViewableEncntrs",function(){return(this.m_viewableEncntrs);
});
Procedure2Component.method("InsertData",function(){CERN_PROCEDURE_O2.GetProcedureTable(this);
});
Procedure2Component.method("HandleSuccess",function(recordData){CERN_PROCEDURE_O2.RenderComponent(this,recordData);
});
}Procedure2Component.inherits(MPageComponent);
var proc2I18n=i18n.discernabu.procedurehistory_o2;
var CERN_PROCEDURE_O2=function(){return{GetProcedureTable:function(component){var sendAr=[];
var criterion=component.getCriterion();
var encntrs=component.getViewableEncntrs();
var encntrVal=(encntrs)?"value("+encntrs+")":"0.0";
sendAr.push("^MINE^",criterion.person_id+".0",encntrVal,criterion.provider_id+".0",criterion.ppr_cd+".0",1);
MP_Core.XMLCclRequestWrapper(component,"mp_get_consolidated_procedures",sendAr,true);
},RenderComponent:function(component,recordData){var timerRenderComponent=MP_Util.CreateTimer(component.getComponentRenderTimerName());
component.proc2Arr=[];
component.ProcActiveList=[];
component.proc2SecondaryArr=[];
component.SecondProcHtmlList=[];
component.GroupTypeClick=1;
component.PROC_HIST_CNT=recordData.PROC_HIST_CNT;
component.SURG_PROC_CNT=recordData.SURG_PROC_CNT;
try{var jsHTML=[];
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var procCnt=recordData.PROC_CNT;
for(var j=0;
j<procCnt;
j++){var oProc=recordData.PROC[j];
if(oProc.SURG_PROC_IND===0||(oProc.SURG_PROC_IND===1&&oProc.PRIMARY_PROC_IND===1)){component.proc2Arr.push(recordData.PROC[j]);
}else{if(oProc.SURG_PROC_IND===1&&oProc.PRIMARY_PROC_IND===0){component.proc2SecondaryArr.push(recordData.PROC[j]);
}}}var compID=component.getComponentId();
var compObj=MP_Util.GetCompObjByStyleId(compID);
jsHTML.push("<div class='content-hdr'><div class='proc2-header'><table class = 'proc2-table' id = 'ProcHdrRow",compID,"'><tr class='proc2-info-hdr hdr'><td class='proc2-info-hdr hdr'><span onclick='CERN_PROCEDURE_O2.sortProcedures(0,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.NAME,"</span><span class = 'sort-ind'> &nbsp;</span></span></td><td class='proc2-info-hdr hdr proc2-implant-hd'><span onclick='CERN_PROCEDURE_O2.sortProcedures(1,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.IMPLANT,"</span><span class = 'sort-ind'> &nbsp;</span></span></td><td class='proc2-info-hdr hdr proc2-dt-hd descend'><span onclick='CERN_PROCEDURE_O2.sortProcedures(2,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.DATE,"</span><span class = 'sort-ind'> &nbsp;</span></span></td></tr></table></div></div><div id='procContent",compID,"'>");
jsHTML.push("<div class='",MP_Util.GetContentClass(component,recordData.PROC_CNT),"'>");
sortProcedure(component.proc2Arr);
sortSecondaryProcedures(compID,df);
displayProcedures(compID,component.proc2Arr,jsHTML,df);
jsHTML.push("</div></div>");
var countText=MP_Util.CreateTitleText(component,recordData.PROC_CNT);
MP_Util.Doc.FinalizeComponent(jsHTML.join(""),component,countText);
if(component.isScrollingEnabled()&&(procCnt>=component.getScrollNumber())){var xNode=Util.Style.g("proc2-header",compObj,"DIV");
if(xNode[0]){Util.Style.acss(xNode[0],"hdr-scroll");
}}var yesElements=Util.Style.g("proc2-implant-yes");
var yl=yesElements.length;
for(var y=0;
y<yl;
y++){Util.addEvent(yesElements[y],"click",function(){var caseId=this.getAttribute("data-caseId");
var activeLen=component.proc2Arr.length;
var confirmMsg="";
var caseNumber="";
for(var a=0;
a<activeLen;
a++){var procItem=component.proc2Arr[a];
if(procItem.SURG_CASE_ID==caseId){caseNumber=procItem.SURG_CASE_NBR_FORMATTED;
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){confirmMsg+=procItem.IMPLANT[k].DESC+"<br />";
}break;
}}CERN_PROCEDURE_O2.ConfirmWindow(confirmMsg,proc2I18n.IMPLANT+" - "+proc2I18n.CASE_NUM+": "+caseNumber);
});
}component.addMenuOption("mnuProc2GroupByHistType","mnuProc2GroupByHistType"+compID,proc2I18n.GROUP_BY_HIST_TYPE,false);
component.createMenu();
_g("mnuProc2GroupByHistType"+compID).innerHTML+="<span class='proc2-opts-menu-grp-type'>&nbsp;</span>";
Util.addEvent(_g("mnuProc2GroupByHistType"+compID),"click",function(){component.GroupTypeClick=(component.GroupTypeClick===0)?1:0;
CERN_PROCEDURE_O2.DisplayByHisType(compID);
var checkSpan=Util.gc(this);
if(component.GroupTypeClick==1){Util.Style.acss(checkSpan,"proc2-opts-menu-grp-type");
}else{Util.Style.rcss(checkSpan,"proc2-opts-menu-grp-type");
}});
}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}return;
},RefreshComponent:function(compID){var jsHTML=[];
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var component=MP_Util.GetCompObjById(compID);
var compObj=MP_Util.GetCompObjByStyleId(compID);
var procCnt=component.ProcActiveList.length+component.SecondProcHtmlList.length;
jsHTML.push("<div class='content-hdr'><div class='proc2-header'><table class = 'proc2-table' id = 'ProcHdrRow",compID,"'><tr class='proc2-info-hdr hdr'><td class='proc2-info-hdr hdr'><span onclick='CERN_PROCEDURE_O2.sortProcedures(0,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.NAME,"</span><span class = 'sort-ind'> &nbsp;</span></span></td><td class='proc2-info-hdr hdr proc2-implant-hd'><span onclick='CERN_PROCEDURE_O2.sortProcedures(1,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.IMPLANT,"</span><span class = 'sort-ind'> &nbsp;</span></span></td><td class='proc2-info-hdr hdr proc2-dt-hd'><span onclick='CERN_PROCEDURE_O2.sortProcedures(2,",compID,"); return false;'><span class = 'proc2_col_name'>",proc2I18n.DATE,"</span><span class = 'sort-ind'> &nbsp;</span></span></td></tr></table></div></div><div id='procContent",compID,"'>");
jsHTML.push("<div class='",MP_Util.GetContentClass(component,procCnt),"'>");
var activeLen=component.ProcActiveList.length;
var secondProcsLen=component.SecondProcHtmlList.length;
if(component.GroupTypeClick===0){for(var a=0;
a<activeLen;
a++){jsHTML.push(component.ProcActiveList[a].HTML);
for(var b=0;
b<secondProcsLen;
b++){var oSecondProcItm=component.SecondProcHtmlList[b];
if(component.ProcActiveList[a].SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){jsHTML.push(oSecondProcItm.HTML);
}}}}else{var sHistoryHTML=[];
var sSurginetHTML=[];
for(var a=0;
a<activeLen;
a++){if(component.ProcActiveList[a].SURG_PROC_IND===0){sHistoryHTML.push(component.ProcActiveList[a].HTML);
}else{sSurginetHTML.push(component.ProcActiveList[a].HTML);
for(var b=0;
b<secondProcsLen;
b++){var oSecondProcItm=component.SecondProcHtmlList[b];
if(component.ProcActiveList[a].SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){sSurginetHTML.push(oSecondProcItm.HTML);
}}}}jsHTML.push("<div class ='sub-sec-hd'>",proc2I18n.OR_RECORD," (",component.SURG_PROC_CNT,") </div>");
jsHTML.push(sSurginetHTML.join(""));
jsHTML.push("<div class ='sub-sec-hd'>",proc2I18n.PROCEDURES," (",component.PROC_HIST_CNT,") </div>");
jsHTML.push(sHistoryHTML.join(""));
}jsHTML.push("</div></div>");
var countText=MP_Util.CreateTitleText(component,procCnt);
MP_Util.Doc.FinalizeComponent(jsHTML.join(""),component,countText);
if(component.isScrollingEnabled()&&(procCnt>=component.getScrollNumber())){var xNode=Util.Style.g("proc2-header",compObj,"DIV");
if(xNode[0]){Util.Style.acss(xNode[0],"hdr-scroll");
}}var yesElements=Util.Style.g("proc2-implant-yes");
var yl=yesElements.length;
for(var y=0;
y<yl;
y++){Util.addEvent(yesElements[y],"click",function(){var caseId=this.getAttribute("data-caseId");
var activeLen=component.proc2Arr.length;
var confirmMsg="";
var caseNumber="";
for(var a=0;
a<activeLen;
a++){var procItem=component.proc2Arr[a];
if(procItem.SURG_CASE_ID==caseId){caseNumber=procItem.SURG_CASE_NBR_FORMATTED;
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){confirmMsg+=procItem.IMPLANT[k].DESC+"<br />";
}break;
}}CERN_PROCEDURE_O2.ConfirmWindow(confirmMsg,proc2I18n.IMPLANT+" - "+proc2I18n.CASE_NUM+": "+caseNumber);
});
}return;
},checkSortingOrder:function(compID,colNum){var sortOrd=0;
var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc2-info-hdr",spnPar,"TD");
var tlen=tdAr.length;
for(var t=0;
t<tlen;
t++){var td=tdAr[t];
if(t==colNum){if(Util.Style.ccss(td,"descend")){sortOrd=1;
}else{sortOrd=0;
}}}return sortOrd;
},sortProcedures:function(colNum,compID){var sortOrd=0;
var component=MP_Util.GetCompObjById(compID);
sortOrd=CERN_PROCEDURE_O2.checkSortingOrder(compID,colNum);
switch(colNum){case 0:function sortByName(a,b){var sortRes=0;
if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){sortRes=1;
}else{sortRes=-1;
}if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}component.ProcActiveList.sort(sortByName);
break;
case 1:function sortByImplant(a,b){var sortRes=0;
if(a.IMPLANT_IND<b.IMPLANT_IND){sortRes=1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}else{if(a.IMPLANT_IND>b.IMPLANT_IND){sortRes=-1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}component.ProcActiveList.sort(sortByImplant);
break;
case 2:function sortByDate(a,b){var sortRes=0;
if(a.ONSET_UTC<b.ONSET_UTC){sortRes=1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}else{if(a.ONSET_UTC>b.ONSET_UTC){sortRes=-1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}component.ProcActiveList.sort(sortByDate);
break;
}CERN_PROCEDURE_O2.RefreshComponent(compID);
var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc2-info-hdr",spnPar,"TD");
var tlen=tdAr.length;
for(var t=0;
t<tlen;
t++){var td=tdAr[t];
if(t==colNum){if(sortOrd===0){Util.Style.acss(td,"descend");
if(!Util.Style.ccss(td,"ascend")){Util.Style.rcss(td,"ascend");
}}else{Util.Style.acss(td,"ascend");
if(!Util.Style.ccss(td,"descend")){Util.Style.rcss(td,"descend");
}}}else{if(Util.Style.ccss(td,"descend")){Util.Style.rcss(td,"descend");
}if(Util.Style.ccss(td,"ascend")){Util.Style.rcss(td,"ascend");
}}}},CheckCurrentSortIndicator:function(compID){var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc2-info-hdr",spnPar,"TD");
var tLen=tdAr.length;
var nSortInd=0;
for(var t=0;
t<tLen;
t++){var td=tdAr[t];
if(Util.Style.ccss(td,"ascend")){if(t===0){nSortInd=11;
}else{if(t==1){nSortInd=21;
}else{if(t==2){nSortInd=31;
}}}break;
}if(Util.Style.ccss(td,"descend")){if(t===0){nSortInd=12;
}else{if(t==1){nSortInd=22;
}else{if(t==2){nSortInd=32;
}}}break;
}}return nSortInd;
},DisplayCurrentSortIndicator:function(compID,nSortInd){var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc2-info-hdr",spnPar,"TD");
switch(nSortInd){case 11:var td=tdAr[0];
Util.Style.acss(td,"ascend");
break;
case 12:var td=tdAr[0];
Util.Style.acss(td,"descend");
break;
case 21:var td=tdAr[1];
Util.Style.acss(td,"ascend");
break;
case 22:var td=tdAr[1];
Util.Style.acss(td,"descend");
break;
case 31:var td=tdAr[2];
Util.Style.acss(td,"ascend");
break;
case 32:var td=tdAr[2];
Util.Style.acss(td,"descend");
break;
}},DisplayByHisType:function(compID){var nSortInd=CERN_PROCEDURE_O2.CheckCurrentSortIndicator(compID);
CERN_PROCEDURE_O2.RefreshComponent(compID);
CERN_PROCEDURE_O2.DisplayCurrentSortIndicator(compID,nSortInd);
},ConfirmWindow:function(msg,title,btnTrueText,btnFalseText,falseBtnFocus,cb){var btnTrue="<button id='proc2acTrueButton' data-val='1'>"+((btnTrueText)?btnTrueText:i18n.discernabu.CONFIRM_OK)+"</button>";
var btnFalse="";
if(btnFalseText){btnFalse="<button id='proc2acFalseButton' data-val='0'>"+btnFalseText+"</button>";
}if(!title){title="&nbsp;";
}var closeBox=function(){var btnVal=parseInt(this.getAttribute("data-val"),10);
$(".proc2-modal-div").remove();
$(".proc2-modal-dialog").remove();
$("html").css("overflow","auto");
if(btnVal&&typeof cb==="function"){cb();
}};
var modalDiv=Util.cep("div",{className:"proc2-modal-div"});
var dialog=Util.cep("div",{className:"proc2-modal-dialog"});
dialog.innerHTML="<div class='proc2-modal-dialog-hd'>"+title+"</div><div class='proc2-modal-dialog-content'>"+msg+"</div><div class='proc2-modal-dialog-ft'><div class='proc2-modal-dialog-btns'>"+btnTrue+btnFalse+"</div></div>";
var docBody=document.body;
Util.ac(modalDiv,docBody);
Util.ac(dialog,docBody);
Util.addEvent(_g("proc2acTrueButton"),"click",closeBox);
if(btnFalseText){Util.addEvent(_g("proc2acFalseButton"),"click",closeBox);
}if(falseBtnFocus&&btnFalseText){_g("proc2acFalseButton").focus();
}else{_g("proc2acTrueButton").focus();
}$("html").css("overflow","hidden");
var hdHeight=$(".proc2-modal-dialog-hd:first").height();
var ftHeight=$(".proc2-modal-dialog-ft:first").height();
var vpHeight=$(window).height()-hdHeight-ftHeight;
vpHeight=vpHeight*(0.8);
$(".proc2-modal-dialog-content").css("max-height",vpHeight+"px");
$(modalDiv).height($(document).height());
}};
function formatDateTimeUTC(dttm,format){var dateTime=new Date();
dateTime.setISO8601(dttm);
return dateTime.format(format);
}function sortProcedure(procArr){procArr.sort(sortByDtTm);
}function sortByDtTm(a,b){if(a.ONSET_UTC>b.ONSET_UTC){return -1;
}else{if(a.ONSET_UTC<b.ONSET_UTC){return 1;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}function displayProcedures(compID,procArr,jsHTML,df){var al=procArr.length;
var proc2Comp=MP_Util.GetCompObjById(compID);
var secondProcsLen=proc2Comp.SecondProcHtmlList.length;
if(proc2Comp.GroupTypeClick===0){for(var i=0;
i<al;
i++){var oProcItem=procArr[i];
var sProcHTML=generateProcHTML(compID,oProcItem,df);
jsHTML.push(sProcHTML);
for(var a=0;
a<secondProcsLen;
a++){var oSecondProcItm=proc2Comp.SecondProcHtmlList[a];
if(oProcItem.SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){jsHTML.push(oSecondProcItm.HTML);
}}}}else{var sHistoryHTML=[];
var sSurginetHTML=[];
for(var i=0;
i<al;
i++){var oProcItem=procArr[i];
if(oProcItem.SURG_PROC_IND===0){sHistoryHTML.push(generateProcHTML(compID,oProcItem,df));
}else{sSurginetHTML.push(generateProcHTML(compID,oProcItem,df));
for(var a=0;
a<secondProcsLen;
a++){var oSecondProcItm=proc2Comp.SecondProcHtmlList[a];
if(oProcItem.SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){sSurginetHTML.push(oSecondProcItm.HTML);
}}}}jsHTML.push("<div class ='sub-sec-hd'>",proc2I18n.OR_RECORD," (",proc2Comp.SURG_PROC_CNT,") </div>");
jsHTML.push(sSurginetHTML.join(""));
jsHTML.push("<div class ='sub-sec-hd'>",proc2I18n.PROCEDURES," (",proc2Comp.PROC_HIST_CNT,") </div>");
jsHTML.push(sHistoryHTML.join(""));
}}function hoverString(procItem,onsetDateHvr,commentString){var sHov="";
sHov="<div class='proc2-det hvr'><dl>";
if(procItem.SURG_PROC_IND===0){sHov=sHov+"<dt class='proc2-det-name'><span>"+proc2I18n.PROCEDURE+":</span></dt><dd class='proc2-det-name'>"+procItem.NAME+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.DISPLAY_AS+":</span></dt><dd class='proc2-det-name'>"+procItem.DISPLAY_AS+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.PROCEDURE_DATE+":</span></dt><dd class='proc2-det-name'>"+onsetDateHvr+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.STATUS+":</span></dt><dd class='proc2-det-name'>"+procItem.STATUS+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.PROVIDER+":</span></dt><dd class='proc2-det-name'>"+procItem.PROVIDER+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.LOCATION+":</span></dt><dd class='proc2-det-name'>"+procItem.LOCATION+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.COMMENTS+":</span></dt><dd class='proc2-det-name'>"+commentString+"</dd>";
}else{sHov=sHov+"<dt class='proc2-det-name'><span>"+proc2I18n.PROCEDURE+":</span></dt><dd class='proc2-det-name'>"+procItem.DISPLAY_AS+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.PROCEDURE_DATE+":</span></dt><dd class='proc2-det-name'>"+onsetDateHvr+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.SURGEON+":</span></dt><dd class='proc2-det-name'>"+procItem.PROVIDER+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.ANESTH_TYPE+":</span></dt><dd class='proc2-det-name'>"+procItem.ANETHESIA_TYPE+"</dd>";
sHov=sHov+"<dt class='proc2-det-name'><span>"+proc2I18n.IMPLANTS+":</span></dt><dd class='proc2-det-name'>";
var implantString="";
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){if(k===0){implantString=procItem.IMPLANT[k].DESC;
}else{implantString=implantString+";&nbsp;"+procItem.IMPLANT[k].DESC;
}if(k==9){implantString=implantString+"...";
break;
}}sHov=sHov+implantString+"</dd>";
sHov=sHov+"<dt class='proc2-det-name'><span>"+proc2I18n.COMMENTS+":</span></dt><dd class='proc2-det-name'>"+commentString+"</dd><dt class='proc2-det-name'><span>"+proc2I18n.CASE_NUM+":</span></dt><dd class='proc2-det-name'>"+procItem.SURG_CASE_NBR_FORMATTED+"</dd>";
}sHov=sHov+"</dl></div>";
return sHov;
}function singleRowProcHTML(procItem,onsetDate,onsetDateHvr,commentString){var sHTML="";
var sIndend="";
if(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===0){sIndend="&nbsp;&nbsp;&nbsp;&nbsp;";
}sHTML="<h3 class='info-hd'><SPAN>"+procItem.DISPLAY_AS+"</SPAN></h3><dl class='proc2-info'><dt class='proc2-name'><span>"+proc2I18n.PROCEDURE+"</span></dt><dd class='proc2-name'><span>"+sIndend+procItem.DISPLAY_AS+"</span></dd><dt class='proc2-implant'><span>"+proc2I18n.IMPLANT+"</span></dt>";
if(procItem.IMPLANT.length>0){sHTML=sHTML+"<dd class='proc2-implant'><span  class='proc2-implant-yes' data-caseId='"+procItem.SURG_CASE_ID+"'>"+proc2I18n.YES+"</span></dd>";
}else{sHTML=sHTML+"<dd class='proc2-implant'><span>&nbsp;</span></dd>";
}sHTML=sHTML+"<dt class='proc2-date'><span>"+proc2I18n.SIG_LINE+"</span></dt><dd class='proc2-date'><span class='date-time'>"+onsetDate+"</span></dd></dl><h4 class='det-hd'><span>"+proc2I18n.PROCEDURE_DETAILS+"</span></h4>";
sHTML=sHTML+hoverString(procItem,onsetDateHvr,commentString);
return sHTML;
}function sortSecondaryProcedures(compID,df){var sHTML="";
var component=MP_Util.GetCompObjById(compID);
component.proc2SecondaryArr.sort(sortByProcName);
var sl=component.proc2SecondaryArr.length;
for(var a=0;
a<sl;
a++){var oProcItem=component.proc2SecondaryArr[a];
sHTML=generateProcHTML(compID,oProcItem,df);
}}function sortByProcName(a,b){if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}function generateProcHTML(compID,procItem,df){var commentString="";
var onsetDate="";
var onsetDateHvr="";
var dateTime=null;
var component=MP_Util.GetCompObjById(compID);
if(procItem.ONSET){dateTime=new Date();
var onsetDt=procItem.ONSET_UTC;
dateTime.setISO8601(onsetDt);
if(procItem.DATE_FLAG===0||procItem.DATE_FLAG===1){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
onsetDateHvr=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}else{if(procItem.DATE_FLAG===2){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_MONTH_4YEAR_NO_DATE);
onsetDateHvr=onsetDate;
}else{if(procItem.DATE_FLAG===3){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_4YEAR);
onsetDateHvr=onsetDate;
}}}}var nCommentLen=procItem.COMMENTS.length;
for(var k=0;
k<nCommentLen;
k++){var begin_dttm="";
if(procItem.COMMENTS[k].BEG_EFFECTIVE_DT_TM){dateTime=new Date();
var beginDt=procItem.COMMENTS[k].BEG_EFFECTIVE_DT_TM;
dateTime.setISO8601(beginDt);
begin_dttm=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}if(procItem.SURG_PROC_IND===0){commentString+=begin_dttm+" - "+procItem.COMMENTS[k].NAME_FULL_FORMATTED+"<br/>"+procItem.COMMENTS[k].LONG_TEXT+"<br/>";
}else{commentString+=procItem.COMMENTS[k].LONG_TEXT+"<br/>";
}}var sProcHTML=singleRowProcHTML(procItem,onsetDate,onsetDateHvr,commentString);
var thisProc={DISPLAY_AS:procItem.DISPLAY_AS,IMPLANT_IND:procItem.IMPLANT_IND,SURG_PROC_IND:procItem.SURG_PROC_IND,ONSET_UTC:procItem.ONSET_UTC,PRIMARY_PROC_IND:procItem.PRIMARY_PROC_IND,SURG_CASE_NBR_FORMATTED:procItem.SURG_CASE_NBR_FORMATTED,SURG_CASE_ID:procItem.SURG_CASE_ID,HTML:sProcHTML};
if(procItem.SURG_PROC_IND===0||(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===1)){component.ProcActiveList.push(thisProc);
}else{if(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===0){component.SecondProcHtmlList.push(thisProc);
}}return sProcHTML;
}}();
