function FamilyHistoryComponentStyleO2(){this.initByNamespace("fmh-o2");
}FamilyHistoryComponentStyleO2.inherits(ComponentStyle);
function FamilyHistoryComponentO2(criterion){this.setCriterion(criterion);
this.setStyles(new FamilyHistoryComponentStyleO2());
this.setComponentLoadTimerName("USR:MPG.FAMILY_HISTORY.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.FAMILY_HISTORY.O2 - render component");
this.setIncludeLineNumber(true);
this.setScope(1);
this.recordData=null;
FamilyHistoryComponentO2.method("InsertData",function(){CERN_FAM_HISTORY_O2.GetFamilyTable(this);
});
FamilyHistoryComponentO2.method("setRecordData",function(value){this.recordData=value;
});
FamilyHistoryComponentO2.method("getRecordData",function(){return this.recordData;
});
FamilyHistoryComponentO2.method("resizeComponent",function(value){MPageComponent.prototype.resizeComponent.call(this,null);
var contentBody=$("#"+this.getStyles().getContentId()).find(".content-body");
if(contentBody.length){var maxHeight=parseInt($(contentBody).css("max-height").replace("px",""),10);
var contentHeight=0;
contentBody.find(".sub-sec").each(function(index){contentHeight+=$(this).outerHeight(true);
});
if(contentHeight===0){contentBody.find(".fmh-o2-row").each(function(index){contentHeight+=$(this).outerHeight(true);
});
}if(!isNaN(maxHeight)&&contentHeight>maxHeight){$("#fmHistHdrRow"+this.getComponentId()).addClass("shifted");
}else{$("#fmHistHdrRow"+this.getComponentId()).removeClass("shifted");
}}});
}FamilyHistoryComponentO2.inherits(MPageComponent);
FamilyHistoryComponentO2.prototype.preProcessing=function(){var compMenu=this.getMenu();
var compId=this.getComponentId();
var self=this;
var fhxi18n=i18n.discernabu.family_history_o2;
if(this.isDisplayable()){var groupCondition=new MenuSelection("groupCondition"+compId);
groupCondition.setLabel(fhxi18n.GRP_BY_CONDITION);
groupCondition.setIsSelected(true);
groupCondition.setClickFunction(function(){groupFamily.setIsSelected(false);
groupCondition.setIsSelected(true);
CERN_FAM_HISTORY_O2.RenderComponentByCondition(self);
self.resizeComponent();
});
compMenu.addMenuItem(groupCondition);
var groupFamily=new MenuSelection("groupFamily"+compId);
groupFamily.setLabel(fhxi18n.GRP_BY_FAM_MEMBER);
groupFamily.setIsSelected(false);
groupFamily.setClickFunction(function(){groupFamily.setIsSelected(true);
groupCondition.setIsSelected(false);
CERN_FAM_HISTORY_O2.RenderComponentByFamily(self);
self.resizeComponent();
});
compMenu.addMenuItem(groupFamily);
}};
var CERN_FAM_HISTORY_O2=function(){var fhxi18n=i18n.discernabu.family_history_o2;
function getAgePhrase(age,unit,yearEnabled){var agePhrase="";
switch(unit){case"YEARS":case"":if(yearEnabled){agePhrase=i18n.discernabu.X_YEARS.replace("{0}",age);
}else{agePhrase=age;
}break;
case"MONTHS":agePhrase=i18n.discernabu.X_MONTHS.replace("{0}",age);
break;
case"DAYS":agePhrase=i18n.discernabu.X_DAYS.replace("{0}",age);
break;
case"WEEKS":agePhrase=i18n.discernabu.X_WEEKS.replace("{0}",age);
break;
default:agePhrase=age;
}return agePhrase;
}function createRowsByFamily(jsFamHTML,recordData,compId){var codeArray=MP_Util.LoadCodeListJSON(recordData.CODES);
var family="";
var condLen="";
var condition="";
var member="";
var detailInfo="";
var ageUnit="";
var commentHTML=[];
var len=recordData.FAMILY_CNT;
var zebraStriping="";
var comment="";
var onsetInfo="";
var hoverOnsetAge="";
var hoverLifeCycle="";
var hoverSeverity="";
var hoverCourse="";
var hoverName="";
var hoverDeceased="";
var hoverLastReviewed="";
jsFamHTML.push("<div class='content-hdr fmh-o2-grp-by-member'><dl class='hdr' id='fmHistHdrRow",compId,"'><dt class='fmh-o2-member-hd'>",fhxi18n.MEMBERS,"</dt><dt class='fmh-o2-condition-hd'>",fhxi18n.CONDITION,"</dt></dl></div><div class='content-body fmh-o2-grp-by-member'>");
for(var i=0;
i<len;
i++){commentHTML=[];
family=recordData.FAMILIES[i];
condLen=family.COND_CNT;
detailInfo="";
member="";
condition="";
if(family.MEMBER>0){var codeObj=MP_Util.GetValueFromArray(family.MEMBER,codeArray);
member+=codeObj.display;
codeObj=MP_Util.GetValueFromArray(family.DECEASED_CD,codeArray);
if(codeObj.meaning=="YES"){member+=" - ";
detailInfo=fhxi18n.DECEASED+" ("+family.DECEASED_DESP+", "+fhxi18n.AT_AGE+" "+getAgePhrase(family.DECEASED_AGE,family.DECEASED_AGEUNIT)+")";
}}zebraStriping=(i%2)?"even":"odd";
jsFamHTML.push("<dl class='fmh-o2-row ",zebraStriping,"'><dt>",fhxi18n.MEMBERS,"</dt><dd class='fmh-o2-member'>",member,"<span class='detail-line'>",detailInfo,"</span></dd><dd class='fmh-o2-condition'>");
for(var j=0;
j<condLen;
j++){condition=family.CONDITION[j];
onsetInfo=condition.ONSET_AGE?" ("+fhxi18n.AT_AGE+" "+getAgePhrase(condition.ONSET_AGE,condition.ONSET_AGEUNIT)+")":"";
jsFamHTML.push("<h3 class='info-hd'>",fhxi18n.CONDITION,"</h3><dl class='fmh-o2-info'><dt>",fhxi18n.CONDITION,"</dt><dd>",condition.CONDITION,"<span class='detail-line'>",onsetInfo,"</span></dd>","</dl>");
hoverOnsetAge=condition.ONSET_AGE?getAgePhrase(condition.ONSET_AGE,condition.ONSET_AGEUNIT,1):"--";
hoverLifeCycle=condition.LIFECYCLE?condition.LIFECYCLE:"--";
hoverSeverity=condition.SEVERITY?condition.SEVERITY:"--";
hoverCourse=condition.COURSE?condition.COURSE:"--";
hoverName="--";
if(family.NAMEFIRST||family.NAMELAST){hoverName=family.NAMEFIRST+" "+family.NAMELAST;
}hoverDeceased="--";
if(family.DECEASED_AGE){hoverDeceased=getAgePhrase(family.DECEASED_AGE,family.DECEASED_AGEUNIT,1)+(family.DECEASED_DESP?"<br />"+family.DECEASED_DESP:"");
}hoverLastReviewed="--";
if(condition.LASTREVIEWED!==""){hoverLastReviewed=new Date();
hoverLastReviewed.setISO8601(condition.LASTREVIEWED);
hoverLastReviewed=hoverLastReviewed.format("shortDate3");
}comment="--";
if(condition.COMMENT){comment=condition.COMMENT.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\r\n/g,"<br />");
commentHTML.push("<dt>",fhxi18n.COMMENT,"</dt><dd><p>",condition.CONDITION,": ",comment,"</p></dd>");
}jsFamHTML.push("<h4 class='det-hd'>",i18n.DETAILS,"</h4><div class='hvr'><dl class='fmh-o2-det'><dt><span>",fhxi18n.NAME,":</span></dt><dd><span>",hoverName,"</span></dd><dt><span>",fhxi18n.DECEASED,":</span></dt><dd><span>",hoverDeceased,"</span></dd><dt><span>",fhxi18n.ONSET,":</span></dt><dd><span>",hoverOnsetAge,"</span></dd><dt><span>",fhxi18n.LIFECYCLE,":</span></dt><dd><span>",hoverLifeCycle,"</span></dd><dt><span>",fhxi18n.SEVERITY,":</span></dt><dd><span>",hoverSeverity,"</span></dd><dt><span>",fhxi18n.COURSE,":</span></dt><dd><span>",hoverCourse,"</span></dd><dt><span>",fhxi18n.LASTREVIEWED,":</span></dt><dd><span>",hoverLastReviewed,"</span></dd><dt><span>",fhxi18n.COMMENT,":</span></dt><dd><span>",comment,"</span></dd></dl></div>");
}if(commentHTML.length){jsFamHTML.push("<dl class='comment'>",commentHTML.join(""),"</dl>");
}jsFamHTML.push("</dd></dl>");
}jsFamHTML.push("</div>");
}return{GetFamilyTable:function(component){var request=null;
var sendAr=[];
var criterion=component.getCriterion();
sendAr.push("^MINE^",criterion.person_id+".0");
sendAr.push(criterion.provider_id+".0",criterion.ppr_cd+".0","1.00");
request=new MP_Core.ScriptRequest(component,component.getComponentLoadTimerName());
request.setProgramName("MP_GET_FAMILY_HISTORY");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(component,request,function(reply){var timerRenderComponent=MP_Util.CreateTimer(component.getComponentRenderTimerName());
try{if(reply.getStatus()==="S"){var recordData=reply.getResponse();
component.setRecordData(recordData);
var compMenu=component.getMenu();
var compId=component.getComponentId();
var groupConditionMenuId="groupCondition"+compId;
var groupFamilyMenuId="groupFamily"+compId;
var menuArray=compMenu.getMenuItemArray();
var menuItem=null;
var isGroupByCondition=false;
for(var i=menuArray.length;
i--;
){menuItem=menuArray[i];
if(menuItem.getId()===groupConditionMenuId&&menuItem.isSelected()){isGroupByCondition=true;
break;
}}if(isGroupByCondition){CERN_FAM_HISTORY_O2.RenderComponentByCondition(component);
}else{CERN_FAM_HISTORY_O2.RenderComponentByFamily(component);
}}else{if(reply.getStatus()==="F"){var errMsg=[];
errMsg.push(reply.getError());
MP_Util.Doc.FinalizeComponent(MP_Util.HandleErrorResponse(component.getStyles().getNameSpace(),errMsg.join("<br />")),component,"");
}else{if(reply.getStatus()==="Z"){var countText=(component.isLineNumberIncluded()?"(0)":"");
var text="<span class='res-none'>"+i18n.discernabu.family_history_o2.NO_FAMILY_HISTORY_FOUND+"</span>";
MP_Util.Doc.FinalizeComponent(text,component,countText);
CERN_EventListener.fireEvent(component,component,EventListener.EVENT_COUNT_UPDATE,{count:0});
}}}}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}});
},RenderComponentByFamily:function(component){try{var recordData=component.getRecordData();
var codeArray=MP_Util.LoadCodeListJSON(recordData.CODES);
var jsFamHTML=[];
var famHTML="";
var fhxSummary="";
var sLen=0;
var fhxSummaryInd="";
var allHistNeg="";
if(recordData.PATIENT_ADOPTED_IND==1){fhxSummary=fhxi18n.ADOPTED;
sLen+=1;
}if(recordData.HIST_NEG_IND==1){allHistNeg=fhxi18n.FAMILY_HISTORY_NEGATIVE;
}if(recordData.NEGATIVE_IND==1){fhxSummaryInd=fhxi18n.FAMILY_HISTORY_NEGATIVE;
sLen+=1;
}else{if(recordData.UNKNOWN_IND==1){fhxSummaryInd=fhxi18n.FAMILY_HISTORY_UNKNOWN;
sLen+=1;
}else{if(recordData.UNABLE_TO_OBTAIN_IND==1){fhxSummaryInd=fhxi18n.UNABLE_TO_OBTAIN;
sLen+=1;
}}}if(fhxSummaryInd!==""&&recordData.CONDITION_CNT===0){if(fhxSummary===""){fhxSummary=fhxSummaryInd;
}else{fhxSummary+="; "+fhxSummaryInd;
}}if(allHistNeg!==""&&recordData.CONDITION_CNT===0){if(fhxSummary===""){fhxSummary=allHistNeg;
}else{fhxSummary+="; "+allHistNeg;
}sLen=0;
}var len=recordData.FAMILY_CNT;
if(fhxSummary){var summaryLabel="<span class='res-none'>"+fhxSummary+"</span>";
jsFamHTML.push(summaryLabel);
}if(len>0){for(var i=0;
i<len;
i++){family=recordData.FAMILIES[i];
if(family.MEMBER>0){var codeObj=MP_Util.GetValueFromArray(family.MEMBER,codeArray);
family.MEMBER_DISP=codeObj.display;
}}recordData.FAMILIES.sort(function(a,b){if(a.MEMBER_DISP.toUpperCase()<b.MEMBER_DISP.toUpperCase()){return -1;
}return 1;
});
createRowsByFamily(jsFamHTML,recordData,component.getComponentId());
}jsFamHTML.push("</div>");
famHTML=jsFamHTML.join("");
len=recordData.CONDITION_CNT+sLen;
countText=MP_Util.CreateTitleText(component,len);
MP_Util.Doc.FinalizeComponent(famHTML,component,countText);
CERN_EventListener.fireEvent(component,component,EventListener.EVENT_COUNT_UPDATE,{count:len});
}catch(err){throw (err);
}finally{}},RenderComponentByCondition:function(component){try{var recordData=component.getRecordData();
var codeArray=MP_Util.LoadCodeListJSON(recordData.CODES);
var jsFamHTML=[];
var famHTML="";
var fhxSummary="";
var sLen=0;
var fhxSummaryInd="";
var allHistNeg="";
if(recordData.PATIENT_ADOPTED_IND==1){fhxSummary=fhxi18n.ADOPTED;
sLen+=1;
}if(recordData.HIST_NEG_IND==1){allHistNeg=fhxi18n.FAMILY_HISTORY_NEGATIVE;
}if(recordData.NEGATIVE_IND==1){fhxSummaryInd=fhxi18n.FAMILY_HISTORY_NEGATIVE;
sLen+=1;
}else{if(recordData.UNKNOWN_IND==1){fhxSummaryInd=fhxi18n.FAMILY_HISTORY_UNKNOWN;
sLen+=1;
}else{if(recordData.UNABLE_TO_OBTAIN_IND==1){fhxSummaryInd=fhxi18n.UNABLE_TO_OBTAIN;
sLen+=1;
}}}if(fhxSummaryInd!==""&&recordData.CONDITION_CNT===0){if(fhxSummary===""){fhxSummary=fhxSummaryInd;
}else{fhxSummary+="; "+fhxSummaryInd;
}}if(allHistNeg!==""&&recordData.CONDITION_CNT===0){if(fhxSummary===""){fhxSummary=allHistNeg;
}else{fhxSummary+="; "+allHistNeg;
}sLen=0;
}var len=recordData.CONDITION_CNT;
if(fhxSummary){var summaryLabel="<span class='res-none'>"+fhxSummary+"</span>";
jsFamHTML.push(summaryLabel);
}if(len>0){jsFamHTML.push("<div class='content-hdr fmh-o2-grp-by-cond'><dl class='hdr grouped' id='fmHistHdrRow",component.getComponentId(),"'><dt class='fmh-o2-condition-hd'>",fhxi18n.CONDITION,"</dt><dt class='fmh-o2-member-hd'>",fhxi18n.MEMBERS,"</dt></dl></div>");
jsFamHTML.push("<div class='content-body fmh-o2-grp-by-cond'>");
var condition="";
var familyLen="";
var member="";
var condLen=0;
var group="";
var groupNames=recordData.groupNames||[];
var i=0,j=0;
if(!recordData.groups){recordData.groups={};
var gLen;
var unknowGroupName="&nbsp;";
for(i=0;
i<len;
i++){condition=recordData.CONDITIONS[i];
gLen=condition.CATEGORY_CNT;
if(gLen){for(j=0;
j<gLen;
j++){group=condition.CATEGORIES[j].CATEGORY;
if(!recordData.groups.hasOwnProperty(group)){recordData.groups[group]={conditions:[],name:group};
groupNames.push(group);
}recordData.groups[group].conditions.push(condition);
}}else{if(!recordData.groups.hasOwnProperty(unknowGroupName)){recordData.groups[unknowGroupName]={conditions:[],name:unknowGroupName};
groupNames.push(unknowGroupName);
}recordData.groups[unknowGroupName].conditions.push(condition);
}}groupNames.sort(function(a,b){if(a.toUpperCase()<b.toUpperCase()){return -1;
}return 1;
});
recordData.groupNames=groupNames;
}var detailInfo="";
var codeObj="";
var zebraStriping="";
var commentHTML=[];
var comment="";
var hoverOnsetAge="";
var hoverLifeCycle="";
var hoverSeverity="";
var hoverCourse="";
var hoverName="";
var hoverDeceased="";
var hoverLastReviewed="";
for(var z=0;
z<groupNames.length;
z++){group=groupNames[z];
if(recordData.groups.hasOwnProperty(group)){jsFamHTML.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.discernabu.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",group,"</span></h3><div class='sub-sec-content'>");
condLen=recordData.groups[group].conditions.length;
for(i=0;
i<condLen;
i++){condition=recordData.groups[group].conditions[i];
zebraStriping=(i%2)?"even":"odd";
jsFamHTML.push("<dl class='fmh-o2-row ",zebraStriping," grouped'><dt>",fhxi18n.CONDITION,"</dt><dd class='fmh-o2-condition'><span>",condition.CONDITION,"</span></dd><dd class='fmh-o2-member'>");
familyLen=condition.FAMILY_CNT;
commentHTML=[];
for(j=0;
j<familyLen;
j++){family=condition.FAMILY[j];
if(family.MEMBER>0){detailInfo=family.ONSET_AGE?" ("+fhxi18n.AT_AGE+" "+getAgePhrase(family.ONSET_AGE,family.ONSET_AGEUNIT)+")":"";
codeObj=MP_Util.GetValueFromArray(family.MEMBER,codeArray);
member=codeObj.display;
codeObj=MP_Util.GetValueFromArray(family.DECEASED_CD,codeArray);
if(codeObj.meaning=="YES"){detailInfo+=" - "+fhxi18n.DECEASED;
}jsFamHTML.push("<h3 class='info-hd'>",fhxi18n.MEMBERS,"</h3><dl class='fmh-o2-info'><dt>",fhxi18n.MEMBERS,"</dt><dd>",member,"<span class='detail-line'>",detailInfo,"</span></dd>","</dl>");
hoverOnsetAge=family.ONSET_AGE?getAgePhrase(family.ONSET_AGE,family.ONSET_AGEUNIT,1):"--";
hoverLifeCycle=family.LIFECYCLE?family.LIFECYCLE:"--";
hoverSeverity=family.SEVERITY?family.SEVERITY:"--";
hoverCourse=family.COURSE?family.COURSE:"--";
hoverName="--";
if(family.NAMEFIRST||family.NAMELAST){hoverName=family.NAMEFIRST+" "+family.NAMELAST;
}hoverDeceased="--";
if(family.DECEASED_AGE){hoverDeceased=getAgePhrase(family.DECEASED_AGE,family.DECEASED_AGEUNIT,1)+(family.DECEASED_DESP?"<br />"+family.DECEASED_DESP:"");
}hoverLastReviewed="--";
if(family.LASTREVIEWED!==""){hoverLastReviewed=new Date();
hoverLastReviewed.setISO8601(family.LASTREVIEWED);
hoverLastReviewed=hoverLastReviewed.format("shortDate3");
}comment="--";
if(family.COMMENT){comment=family.COMMENT.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\r\n/g,"<br />");
commentHTML.push("<dt>",fhxi18n.COMMENT,"</dt><dd><p>",member,": ",comment,"</p></dd>");
}jsFamHTML.push("<h4 class='det-hd'>",i18n.DETAILS,"</h4>","<div class='hvr'>","<dl class='fmh-o2-det'>","<dt><span>",fhxi18n.NAME,":</span></dt><dd><span>",hoverName,"</span></dd>","<dt><span>",fhxi18n.DECEASED,":</span></dt><dd><span>",hoverDeceased,"</span></dd>","<dt><span>",fhxi18n.ONSET,":</span></dt><dd><span>",hoverOnsetAge,"</span></dd>","<dt><span>",fhxi18n.LIFECYCLE,":</span></dt><dd><span>",hoverLifeCycle,"</span></dd>","<dt><span>",fhxi18n.SEVERITY,":</span></dt><dd><span>",hoverSeverity,"</span></dd>","<dt><span>",fhxi18n.COURSE,":</span></dt><dd><span>",hoverCourse,"</span></dd>","<dt><span>",fhxi18n.LASTREVIEWED,":</span></dt><dd><span>",hoverLastReviewed,"</span></dd>","<dt><span>",fhxi18n.COMMENT,":</span></dt><dd><span>",comment,"</span></dd>","</dl></div>");
}}if(commentHTML.length){jsFamHTML.push("<dl class='comment'>",commentHTML.join(""),"</dl>");
}jsFamHTML.push("</dd></dl>");
}jsFamHTML.push("</div></div>");
}}jsFamHTML.push("</div>");
}famHTML=jsFamHTML.join("");
len=recordData.CONDITION_CNT+sLen;
countText=MP_Util.CreateTitleText(component,len);
MP_Util.Doc.FinalizeComponent(famHTML,component,countText);
CERN_EventListener.fireEvent(component,component,EventListener.EVENT_COUNT_UPDATE,{count:len});
}catch(err){throw (err);
}finally{}}};
}();
