function VentMonitoringComponentStyle(){this.initByNamespace("vent");
}VentMonitoringComponentStyle.inherits(ComponentStyle);
function VentMonitoringComponent(criterion){this.setCriterion(criterion);
this.setStyles(new VentMonitoringComponentStyle());
this.setComponentLoadTimerName("USR:MPG.VENT_MONITORING.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.VENT_MONITORING.O1 - render component");
this.setIncludeLineNumber(false);
VentMonitoringComponent.method("InsertData",function(){CERN_VENT_MONITORING_O1.GetVentMonitoringData(this);
});
VentMonitoringComponent.method("HandleSuccess",function(recordData){CERN_VENT_MONITORING_O1.RenderVentMonitoring(this,recordData);
});
}VentMonitoringComponent.inherits(MPageComponent);
var CERN_VENT_MONITORING_O1=function(){return{RenderVentMonitoring:function(component,recordData){var countText="",sHTML="",jsHTML=[],nameSpace=component.getStyles().getNameSpace();
var df=MP_Util.GetDateFormatter();
var sVentModel=(recordData.VENT_MODEL)?recordData.VENT_MODEL:"--";
jsHTML.push("<div class='vent-hd'><span>",i18n.VENT_MODEL,":</span><span class='",nameSpace,"-sh-name'>",sVentModel,"</span></div>");
if(recordData.VENT_ID){jsHTML.push("<div class='vent-hd'><span>",i18n.VENT_ID,":</span><span class='",nameSpace,"-sh-name'>",recordData.VENT_ID,"</span></div>");
}var settings_cnt=recordData.SETTINGS_QUAL;
if(settings_cnt>0){jsHTML.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",i18n.SETTINGS,"</span></h3><div class='sub-sec-content'><div class='",MP_Util.GetContentClass(component,settings_cnt),"'><h3 class='info-hd'><span>",i18n.SETTINGS_DETAILS,"</span></h3>");
for(var i=0;
i<settings_cnt;
i++){var dataElem=recordData.SETTINGS[i];
var dataDtTm="";
var hvrDtTm="";
var sValue=dataElem.VALUE;
var sValueHVR=dataElem.VALUE;
if(dataElem.CLASSIFICATION&&dataElem.CLASSIFICATION==="DATE_VALUE"){sValue=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
sValueHVR=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(dataElem.NAME){var resultDtTm=new Date();
resultDtTm.setISO8601(dataElem.EVENT_END_DT_TM);
dataDtTm=resultDtTm.format("longDateTime2");
hvrDtTm=resultDtTm.format("longDateTime3");
}else{dataElem.NAME=i18n.VENT_MODE;
}jsHTML.push("<dl class='",nameSpace,"-info'><dt><span>",dataElem.NAME,":</span></dt><dd><span>");
if(dataElem.STATUS_MEANING=="MODIFIED"||dataElem.STATUS_MEANING=="ALTERED"){jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span><span class='res-modified'>&nbsp;</span></dd>");
}else{jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span></dd>");
}jsHTML.push("<dd><span class='date-time'>",dataDtTm,"</span></dd></dl>");
if(dataElem.VALUE!=="--"){jsHTML.push("<h4 class='det-hd'><span>",i18n.RESULT_DETAILS,"</span></h4><div class='hvr'><dl class='",nameSpace,"-det'><dt><span>",dataElem.NAME,":</span></dt><dd class='",nameSpace,"-det-name'><span>",sValueHVR," ",dataElem.VALUE_UNITS,"</span></dd><dt><span>",i18n.RESULT_DT_TM,":</span></dt><dd><span>",hvrDtTm,"</span></dd><dt><span>",i18n.DOCUMENTED_BY,":</span></dt><dd class='",nameSpace,"-det-ord-by'><span>",dataElem.DOCUMENTED_BY,"</span></dd><dt><span>",i18n.STATUS,":</span></dt><dd class='",nameSpace,"-det-status'><span>",dataElem.STATUS_DISPLAY,"</span></dd></dl></div>");
}}jsHTML.push("</div></div></div><hr />");
}var meas_assess_cnt=recordData.MEAS_ASSESS_QUAL;
if(meas_assess_cnt>0){jsHTML.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",i18n.MEASUREMENTS_ASSESSMENTS,"</span></h3><div class='sub-sec-content'><div class='",MP_Util.GetContentClass(component,meas_assess_cnt),"'><h3 class='info-hd'><span>",i18n.MEASUREMENTS_ASSESSMENTS_DETAILS,"</span></h3>");
for(var i=0;
i<meas_assess_cnt;
i++){var dataElem=recordData.MEAS_ASSESS[i];
var dataDtTm="";
var hvrDtTm="";
var sValue=dataElem.VALUE;
var sValueHVR=dataElem.VALUE;
if(dataElem.CLASSIFICATION&&dataElem.CLASSIFICATION==="DATE_VALUE"){sValue=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
sValueHVR=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(dataElem.NAME){var resultDtTm=new Date();
resultDtTm.setISO8601(dataElem.EVENT_END_DT_TM);
dataDtTm=resultDtTm.format("longDateTime2");
hvrDtTm=resultDtTm.format("longDateTime3");
}else{dataElem.NAME=i18n.RESP_RATE_TOTAL;
}jsHTML.push("<dl class='",nameSpace,"-info'><dt><span>",dataElem.NAME,":</span></dt><dd><span>");
if(dataElem.STATUS_MEANING=="MODIFIED"||dataElem.STATUS_MEANING=="ALTERED"){jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span><span class='res-modified'>&nbsp;</span></dd>");
}else{jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span></dd>");
}jsHTML.push("<dd><span class='date-time'>",dataDtTm,"</span></dd></dl>");
if(dataElem.VALUE!=="--"){jsHTML.push("<h4 class='det-hd'><span>",i18n.RESULT_DETAILS,"</span></h4><div class='hvr'><dl class='",nameSpace,"-det'><dt><span>",dataElem.NAME,":</span></dt><dd class='",nameSpace,"-det-name'><span>",sValueHVR," ",dataElem.VALUE_UNITS,"</span></dd><dt><span>",i18n.RESULT_DT_TM,":</span></dt><dd><span>",hvrDtTm,"</span></dd><dt><span>",i18n.DOCUMENTED_BY,":</span></dt><dd class='",nameSpace,"-det-ord-by'><span>",dataElem.DOCUMENTED_BY,"</span></dd><dt><span>",i18n.STATUS,":</span></dt><dd class='",nameSpace,"-det-status'><span>",dataElem.STATUS_DISPLAY,"</span></dd></dl></div>");
}}jsHTML.push("</div></div></div><hr />");
}var alarm_settings_cnt=recordData.ALARM_SETTINGS_QUAL;
if(alarm_settings_cnt>0){jsHTML.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",i18n.ALARM_SETTINGS,"</span></h3><div class='sub-sec-content'><div class='",MP_Util.GetContentClass(component,alarm_settings_cnt),"'><h3 class='info-hd'><span>",i18n.ALARM_SETTINGS_DETAILS,"</span></h3>");
for(var i=0;
i<alarm_settings_cnt;
i++){var dataElem=recordData.ALARM_SETTINGS[i];
var dataDtTm="";
var hvrDtTm="";
var sValue=dataElem.VALUE;
var sValueHVR=dataElem.VALUE;
if(dataElem.CLASSIFICATION&&dataElem.CLASSIFICATION==="DATE_VALUE"){sValue=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
sValueHVR=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(dataElem.NAME){var resultDtTm=new Date();
resultDtTm.setISO8601(dataElem.EVENT_END_DT_TM);
dataDtTm=resultDtTm.format("longDateTime2");
hvrDtTm=resultDtTm.format("longDateTime3");
}else{dataElem.NAME=i18n.VENT_ALARMS_ON;
}jsHTML.push("<dl class='",nameSpace,"-info'><dt><span>",dataElem.NAME,":</span></dt><dd><span>");
if(dataElem.STATUS_MEANING=="MODIFIED"||dataElem.STATUS_MEANING=="ALTERED"){jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span><span class='res-modified'>&nbsp;</span></dd>");
}else{jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span></dd>");
}jsHTML.push("<dd><span class='date-time'>",dataDtTm,"</span></dd></dl>");
if(dataElem.VALUE!=="--"){jsHTML.push("<h4 class='det-hd'><span>",i18n.RESULT_DETAILS,"</span></h4><div class='hvr'><dl class='",nameSpace,"-det'><dt><span>",dataElem.NAME,":</span></dt><dd class='",nameSpace,"-det-name'><span>",sValueHVR," ",dataElem.VALUE_UNITS,"</span></dd><dt><span>",i18n.RESULT_DT_TM,":</span></dt><dd><span>",hvrDtTm,"</span></dd><dt><span>",i18n.DOCUMENTED_BY,":</span></dt><dd class='",nameSpace,"-det-ord-by'><span>",dataElem.DOCUMENTED_BY,"</span></dd><dt><span>",i18n.STATUS,":</span></dt><dd class='",nameSpace,"-det-status'><span>",dataElem.STATUS_DISPLAY,"</span></dd></dl></div>");
}}jsHTML.push("</div></div></div><hr />");
}var wean_params_cnt=recordData.WEANING_PARAMS_QUAL;
if(wean_params_cnt>0){jsHTML.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",i18n.WEANING_PARAMETERS,"</span></h3><div class='sub-sec-content'><div class='",MP_Util.GetContentClass(component,wean_params_cnt),"'><h3 class='info-hd'><span>",i18n.WEANING_PARAMETERS_DETAILS,"</span></h3>");
for(var i=0;
i<wean_params_cnt;
i++){var dataElem=recordData.WEANING_PARAMS[i];
var sValue=dataElem.VALUE;
var sValueHVR=dataElem.VALUE;
if(dataElem.CLASSIFICATION&&dataElem.CLASSIFICATION==="DATE_VALUE"){sValue=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
sValueHVR=df.formatISO8601(dataElem.VALUE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}var resultDtTm=new Date();
resultDtTm.setISO8601(dataElem.EVENT_END_DT_TM);
var dataDtTm=resultDtTm.format("longDateTime2");
var hvrDtTm=resultDtTm.format("longDateTime3");
jsHTML.push("<dl class='",nameSpace,"-info'><dt><span>",dataElem.NAME,":</span></dt><dd><span>");
if(dataElem.STATUS_MEANING=="MODIFIED"||dataElem.STATUS_MEANING=="ALTERED"){jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span><span class='res-modified'>&nbsp;</span></dd>");
}else{jsHTML.push(eventViewerLink(component.getCriterion().person_id,dataElem.ENCOUNTER_ID,dataElem.EVENT_ID,sValue),"</span></dd>");
}jsHTML.push("<dd><span class='date-time'>",dataDtTm,"</span></dd></dl>");
if(dataElem.VALUE!=="--"){jsHTML.push("<h4 class='det-hd'><span>",i18n.RESULT_DETAILS,"</span></h4><div class='hvr'><dl class='",nameSpace,"-det'><dt><span>",dataElem.NAME,":</span></dt><dd class='",nameSpace,"-det-name'><span>",sValueHVR," ",dataElem.VALUE_UNITS,"</span></dd><dt><span>",i18n.RESULT_DT_TM,":</span></dt><dd><span>",hvrDtTm,"</span></dd><dt><span>",i18n.DOCUMENTED_BY,":</span></dt><dd class='",nameSpace,"-det-ord-by'><span>",dataElem.DOCUMENTED_BY,"</span></dd><dt><span>",i18n.STATUS,":</span></dt><dd class='",nameSpace,"-det-status'><span>",dataElem.STATUS_DISPLAY,"</span></dd></dl></div>");
}}jsHTML.push("</div></div></div><hr />");
}countText="";
sHTML+=jsHTML.join("");
MP_Util.Doc.FinalizeComponent(sHTML,component,countText);
return;
},GetVentMonitoringData:function(component){var criterion=component.getCriterion();
var lookBackUnits=component.getLookbackUnits();
var lookBackUnitTypeFlag=component.getLookbackUnitTypeFlag();
var groups=component.getGroups();
var group=null;
var sGroupArray=[];
var sModelCds="0.0";
var sIdCds="0.0";
var sModeCds="0.0";
var sSettingsCds="0.0";
var sRespRateTotalCds="0.0";
var sMeasAssessCds="0.0";
var sAlarmsOnCds="0.0";
var sAlarmSettingsCds="0.0";
var sWeanParamCds="0.0";
var nGrpLen=(groups)?groups.length:0;
if(groups&&nGrpLen>0){for(var x=nGrpLen;
x--;
){group=groups[x];
var sEventSetsArray=MP_Util.CreateParamArray(group.getEventSets(),1);
switch(group.getGroupName()){case"VENT_MODEL":sModelCds=sEventSetsArray;
break;
case"VENT_ID":sIdCds=sEventSetsArray;
break;
case"VENT_MODE":sModeCds=sEventSetsArray;
break;
case"MP_VENT_SET":sSettingsCds=sEventSetsArray;
break;
case"RESP_RATE_TOTAL":sRespRateTotalCds=sEventSetsArray;
break;
case"MP_VENT_MEAS":sMeasAssessCds=sEventSetsArray;
break;
case"VENT_ALARM_ON_FUNCTIONAL":sAlarmsOnCds=sEventSetsArray;
break;
case"MP_VENT_ALARM":sAlarmSettingsCds=sEventSetsArray;
break;
case"MP_VENT_WEAN":sWeanParamCds=sEventSetsArray;
break;
}}}var sendArr=["^MINE^",criterion.person_id+".0",((component.getScope()==2)?criterion.encntr_id+".0":"0.0"),lookBackUnits,lookBackUnitTypeFlag,sModelCds,sIdCds,sModeCds,sSettingsCds,sRespRateTotalCds,sMeasAssessCds,sAlarmsOnCds,sAlarmSettingsCds,sWeanParamCds,criterion.ppr_cd+".0",criterion.provider_id+".0"];
MP_Core.XMLCclRequestWrapper(component,"MP_RETRIEVE_VENT_MONITORING",sendArr,true);
return;
}};
function eventViewerLink(personid,encntrid,eventid,result){var ar=[];
var params=[personid,encntrid,eventid,'"EVENT"'];
ar.push("<a onclick='MP_Util.LaunchClinNoteViewer(",params.join(","),"); return false;' href='#'>",result,"</a>");
return ar.join("");
}}();
