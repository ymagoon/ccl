(function($){$.jqplot.HLWhiskerRenderer=function(){$.jqplot.LineRenderer.call(this);
this.tickLength;
this.lowColor=null;
this.lowWidth=null;
this.hiColor=null;
this.hiWidth=null;
this.wickColor=null;
this.wickWidth=null;
this.enableNormalcyRange=null;
this.lineWidth;
};
$.jqplot.HLWhiskerRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.HLWhiskerRenderer.prototype.constructor=$.jqplot.HLWhiskerRenderer;
$.jqplot.HLWhiskerRenderer.prototype.init=function(options,plot){options=options||{};
this.lineWidth=options.lineWidth||1.5;
this.lowColor=options.lowColor||"black";
this.lowWidth=options.lowWidth||1.5;
this.hiColor=options.hiColor||"black";
this.hiWidth=options.hiWidth||1.5;
this.wickColor=options.wickColor||"black";
this.wickWidth=options.wickWidth||1.5;
this.tickLength=options.tickLength||4;
this.enableNormalcyRange=options.enableNormalcyRange||false;
$.jqplot.LineRenderer.prototype.init.call(this,options);
this._type="hlwhisker";
var db=this._yaxis._dataBounds;
var d=this._plotData;
plot.postDrawHooks.addOnce($.jqplot.HLWhiskerRenderer.dataPointHover);
};
$.jqplot.HLWhiskerRenderer.prototype.draw=function(ctx,gd,options){var d=this.data;
var xmin=this._xaxis.min;
var xmax=this._xaxis.max;
var xminidx=0;
var xmaxidx=d.length;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var i,ops,b,h,w,a,points;
var o;
var r=this.renderer;
var opts=(options!=undefined)?options:{};
this.wickColor=(opts.wickColor!=undefined)?opts.wickColor:this.wickColor;
ctx.save();
if(this.show&&d.length){var x,hi,low;
for(var i=0;
i<d.length;
i++){if(d[i][0]<xmin){xminidx=i;
}else{if(d[i][0]<xmax){xmaxidx=i+1;
}}}var dwidth=this.gridData[xmaxidx-1][0]-this.gridData[xminidx][0];
var nvisiblePoints=xmaxidx-xminidx;
try{var dinterval=Math.abs(this._xaxis.series_u2p(parseInt(this._xaxis._intervalStats[0].sortedIntervals[0].interval))-this._xaxis.series_u2p(0));
}catch(e){var dinterval=dwidth/nvisiblePoints;
}if(typeof(this.tickLength)!="number"){this.tickLength=Math.min(10,dinterval/3.5);
}for(var i=xminidx;
i<xmaxidx;
i++){x=xp(d[i][0]);
low=yp(d[i][1]);
hi=yp(d[i][2]);
o={};
if(this.wickColor){opts.strokeStyle=this.wickColor;
}if(this.wickWidth){opts.lineWidth=this.wickWidth;
}r.shapeRenderer.draw(ctx,[[x,hi],[x,low]],opts);
if(this.hiColor){opts.strokeStyle=this.hiColor;
}if(this.enableNormalcyRange){opts.strokeStyle=d[i][4]||this.hiColor;
}if(this.hiWidth){opts.lineWidth=this.hiWidth;
}if(this.enableNormalcyRange){if(d[i][2]<this._yaxis._max){r.shapeRenderer.draw(ctx,[[x,hi],[x+this.tickLength,hi-this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,hi],[x-this.tickLength,hi-this.tickLength]],opts);
}else{r.shapeRenderer.draw(ctx,[[x+this.tickLength,this.tickLength],[x-this.tickLength,this.tickLength],[x,this.tickLength-this.tickLength]],$.extend(true,{fill:true,fillStyle:opts.strokeStyle},opts));
}}else{r.shapeRenderer.draw(ctx,[[x,hi],[x+this.tickLength,hi-this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,hi],[x-this.tickLength,hi-this.tickLength]],opts);
}if(this.lowColor){opts.strokeStyle=this.lowColor;
}if(this.enableNormalcyRange){opts.strokeStyle=d[i][3]||this.lowColor;
}if(this.lowWidth){opts.lineWidth=this.lowWidth;
}r.shapeRenderer.draw(ctx,[[x,low],[x+this.tickLength,low+this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,low],[x-this.tickLength,low+this.tickLength]],opts);
delete opts.strokeStyle;
delete opts.lineWidth;
}}ctx.restore();
};
$.jqplot.HLWhiskerRenderer.prototype.drawShadow=function(ctx,gd,options){};
$.jqplot.HLWhiskerRenderer.checkOptions=function(target,data,options){if(!options.highlighter){options.highlighter={showMarker:false,tooltipAxes:"y",yvalues:4,formatString:'<table class="jqplot-highlighter"><tr><td>date:</td><td>%s</td></tr><tr><td>open:</td><td>%s</td></tr><tr><td>hi:</td><td>%s</td></tr><tr><td>low:</td><td>%s</td></tr><tr><td>close:</td><td>%s</td></tr></table>'};
}};
$.jqplot.HLWhiskerRenderer.dataPointHover=function(target,data,options){var plot=this.data[0];
var markersLow=[];
var markersHigh=[];
var res;
for(var k=0;
k<plot.length;
k++){markersLow.push([plot[k][0],plot[k][1]]);
markersHigh.push([plot[k][0],plot[k][2]]);
}var res=this.series[0].renderer.makeGridData.call(this.series[0],markersLow.concat(markersHigh));
this.series[0].gridData=res;
};
})(jQuery);
(function($){$.jqplot.BarRenderer=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.BarRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.BarRenderer.prototype.constructor=$.jqplot.BarRenderer;
$.jqplot.BarRenderer.prototype.init=function(options,plot){this.barPadding=8;
this.barMargin=10;
this.barDirection="vertical";
this.barWidth=null;
this.shadowOffset=2;
this.shadowDepth=5;
this.shadowAlpha=0.08;
this.waterfall=false;
this.groups=1;
this.varyBarColor=false;
this.highlightMouseOver=true;
this.highlightMouseDown=false;
this.highlightColors=[];
this.transposedData=true;
this.renderer.animation={show:false,direction:"down",speed:3000,_supported:true};
this._type="bar";
if(options.highlightMouseDown&&options.highlightMouseOver==null){options.highlightMouseOver=false;
}$.extend(true,this,options);
$.extend(true,this.renderer,options);
this.fill=true;
if(this.barDirection==="horizontal"&&this.rendererOptions.animation&&this.rendererOptions.animation.direction==null){this.renderer.animation.direction="left";
}if(this.waterfall){this.fillToZero=false;
this.disableStack=true;
}if(this.barDirection=="vertical"){this._primaryAxis="_xaxis";
this._stackAxis="y";
this.fillAxis="y";
}else{this._primaryAxis="_yaxis";
this._stackAxis="x";
this.fillAxis="x";
}this._highlightedPoint=null;
this._plotSeriesInfo=null;
this._dataColors=[];
this._barPoints=[];
var opts={lineJoin:"miter",lineCap:"round",fill:true,isarc:false,strokeStyle:this.color,fillStyle:this.color,closePath:this.fill};
this.renderer.shapeRenderer.init(opts);
var sopts={lineJoin:"miter",lineCap:"round",fill:true,isarc:false,angle:this.shadowAngle,offset:this.shadowOffset,alpha:this.shadowAlpha,depth:this.shadowDepth,closePath:this.fill};
this.renderer.shadowRenderer.init(sopts);
plot.postInitHooks.addOnce(postInit);
plot.postDrawHooks.addOnce(postPlotDraw);
plot.eventListenerHooks.addOnce("jqplotMouseMove",handleMove);
plot.eventListenerHooks.addOnce("jqplotMouseDown",handleMouseDown);
plot.eventListenerHooks.addOnce("jqplotMouseUp",handleMouseUp);
plot.eventListenerHooks.addOnce("jqplotClick",handleClick);
plot.eventListenerHooks.addOnce("jqplotRightClick",handleRightClick);
};
function barPreInit(target,data,seriesDefaults,options){if(this.rendererOptions.barDirection=="horizontal"){this._stackAxis="x";
this._primaryAxis="_yaxis";
}if(this.rendererOptions.waterfall==true){this._data=$.extend(true,[],this.data);
var sum=0;
var pos=(!this.rendererOptions.barDirection||this.rendererOptions.barDirection==="vertical"||this.transposedData===false)?1:0;
for(var i=0;
i<this.data.length;
i++){sum+=this.data[i][pos];
if(i>0){this.data[i][pos]+=this.data[i-1][pos];
}}this.data[this.data.length]=(pos==1)?[this.data.length+1,sum]:[sum,this.data.length+1];
this._data[this._data.length]=(pos==1)?[this._data.length+1,sum]:[sum,this._data.length+1];
}if(this.rendererOptions.groups>1){this.breakOnNull=true;
var l=this.data.length;
var skip=parseInt(l/this.rendererOptions.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip){this.data.splice(i+count,0,[null,null]);
count++;
}for(i=0;
i<this.data.length;
i++){if(this._primaryAxis=="_xaxis"){this.data[i][0]=i+1;
}else{this.data[i][1]=i+1;
}}}}$.jqplot.preSeriesInitHooks.push(barPreInit);
$.jqplot.BarRenderer.prototype.calcSeriesNumbers=function(){var nvals=0;
var nseries=0;
var paxis=this[this._primaryAxis];
var s,series,pos;
for(var i=0;
i<paxis._series.length;
i++){series=paxis._series[i];
if(series===this){pos=i;
}if(series.renderer.constructor==$.jqplot.BarRenderer){nvals+=series.data.length;
nseries+=1;
}}return[nvals,nseries,pos];
};
$.jqplot.BarRenderer.prototype.setBarWidth=function(){var i;
var nvals=0;
var nseries=0;
var paxis=this[this._primaryAxis];
var s,series,pos;
var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
nvals=temp[0];
nseries=temp[1];
var nticks=paxis.numberTicks;
var nbins=(nticks-1)/2;
if(paxis.name=="xaxis"||paxis.name=="x2axis"){if(this._stack){this.barWidth=(paxis._offsets.max-paxis._offsets.min)/nvals*nseries-this.barMargin;
}else{this.barWidth=((paxis._offsets.max-paxis._offsets.min)/nbins-this.barPadding*(nseries-1)-this.barMargin*2)/nseries;
}}else{if(this._stack){this.barWidth=(paxis._offsets.min-paxis._offsets.max)/nvals*nseries-this.barMargin;
}else{this.barWidth=((paxis._offsets.min-paxis._offsets.max)/nbins-this.barPadding*(nseries-1)-this.barMargin*2)/nseries;
}}return[nvals,nseries];
};
function computeHighlightColors(colors){var ret=[];
for(var i=0;
i<colors.length;
i++){var rgba=$.jqplot.getColorComponents(colors[i]);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>570)?newrgb[j]*0.8:newrgb[j]+0.3*(255-newrgb[j]);
newrgb[j]=parseInt(newrgb[j],10);
}ret.push("rgb("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+")");
}return ret;
}$.jqplot.BarRenderer.prototype.draw=function(ctx,gridData,options){var i;
var opts=$.extend({},options);
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var xaxis=this.xaxis;
var yaxis=this.yaxis;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var pointx,pointy;
this._dataColors=[];
this._barPoints=[];
if(this.barWidth==null){this.renderer.setBarWidth.call(this);
}var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
var nvals=temp[0];
var nseries=temp[1];
var pos=temp[2];
var points=[];
if(this._stack){this._barNudge=0;
}else{this._barNudge=(-Math.abs(nseries/2-0.5)+pos)*(this.barWidth+this.barPadding);
}if(showLine){var negativeColors=new $.jqplot.ColorGenerator(this.negativeSeriesColors);
var positiveColors=new $.jqplot.ColorGenerator(this.seriesColors);
var negativeColor=negativeColors.get(this.index);
if(!this.useNegativeColors){negativeColor=opts.fillStyle;
}var positiveColor=opts.fillStyle;
var base;
var xstart;
var ystart;
if(this.barDirection=="vertical"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][1]==null){continue;
}points=[];
base=gridData[i][0]+this._barNudge;
ystart;
if(this._stack&&this._prevGridData.length){ystart=this._prevGridData[i][1];
}else{if(this.fillToZero){ystart=this._yaxis.series_u2p(0);
}else{if(this.waterfall&&i>0&&i<this.gridData.length-1){ystart=this.gridData[i-1][1];
}else{if(this.waterfall&&i==0&&i<this.gridData.length-1){if(this._yaxis.min<=0&&this._yaxis.max>=0){ystart=this._yaxis.series_u2p(0);
}else{if(this._yaxis.min>0){ystart=ctx.canvas.height;
}else{ystart=0;
}}}else{if(this.waterfall&&i==this.gridData.length-1){if(this._yaxis.min<=0&&this._yaxis.max>=0){ystart=this._yaxis.series_u2p(0);
}else{if(this._yaxis.min>0){ystart=ctx.canvas.height;
}else{ystart=0;
}}}else{ystart=ctx.canvas.height;
}}}}}if((this.fillToZero&&this._plotData[i][1]<0)||(this.waterfall&&this._data[i][1]<0)){if(this.varyBarColor&&!this._stack){if(this.useNegativeColors){opts.fillStyle=negativeColors.next();
}else{opts.fillStyle=positiveColors.next();
}}else{opts.fillStyle=negativeColor;
}}else{if(this.varyBarColor&&!this._stack){opts.fillStyle=positiveColors.next();
}else{opts.fillStyle=positiveColor;
}}if(!this.fillToZero||this._plotData[i][1]>=0){points.push([base-this.barWidth/2,ystart]);
points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,ystart]);
}else{points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base-this.barWidth/2,ystart]);
points.push([base+this.barWidth/2,ystart]);
points.push([base+this.barWidth/2,gridData[i][1]]);
}this._barPoints.push(points);
if(shadow&&!this._stack){var sopts=$.extend(true,{},opts);
delete sopts.fillStyle;
this.renderer.shadowRenderer.draw(ctx,points,sopts);
}var clr=opts.fillStyle||this.color;
this._dataColors.push(clr);
this.renderer.shapeRenderer.draw(ctx,points,opts);
}}else{if(this.barDirection=="horizontal"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][0]==null){continue;
}points=[];
base=gridData[i][1]-this._barNudge;
xstart;
if(this._stack&&this._prevGridData.length){xstart=this._prevGridData[i][0];
}else{if(this.fillToZero){xstart=this._xaxis.series_u2p(0);
}else{if(this.waterfall&&i>0&&i<this.gridData.length-1){xstart=this.gridData[i-1][1];
}else{if(this.waterfall&&i==0&&i<this.gridData.length-1){if(this._xaxis.min<=0&&this._xaxis.max>=0){xstart=this._xaxis.series_u2p(0);
}else{if(this._xaxis.min>0){xstart=0;
}else{xstart=ctx.canvas.width;
}}}else{if(this.waterfall&&i==this.gridData.length-1){if(this._xaxis.min<=0&&this._xaxis.max>=0){xstart=this._xaxis.series_u2p(0);
}else{if(this._xaxis.min>0){xstart=0;
}else{xstart=ctx.canvas.width;
}}}else{xstart=0;
}}}}}if((this.fillToZero&&this._plotData[i][1]<0)||(this.waterfall&&this._data[i][1]<0)){if(this.varyBarColor&&!this._stack){if(this.useNegativeColors){opts.fillStyle=negativeColors.next();
}else{opts.fillStyle=positiveColors.next();
}}}else{if(this.varyBarColor&&!this._stack){opts.fillStyle=positiveColors.next();
}else{opts.fillStyle=positiveColor;
}}if(!this.fillToZero||this._plotData[i][0]>=0){points.push([xstart,base+this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([gridData[i][0],base+this.barWidth/2]);
}else{points.push([gridData[i][0],base+this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
points.push([xstart,base+this.barWidth/2]);
}this._barPoints.push(points);
if(shadow&&!this._stack){var sopts=$.extend(true,{},opts);
delete sopts.fillStyle;
this.renderer.shadowRenderer.draw(ctx,points,sopts);
}var clr=opts.fillStyle||this.color;
this._dataColors.push(clr);
this.renderer.shapeRenderer.draw(ctx,points,opts);
}}}}if(this.highlightColors.length==0){this.highlightColors=$.jqplot.computeHighlightColors(this._dataColors);
}else{if(typeof(this.highlightColors)=="string"){var temp=this.highlightColors;
this.highlightColors=[];
for(var i=0;
i<this._dataColors.length;
i++){this.highlightColors.push(temp);
}}}};
$.jqplot.BarRenderer.prototype.drawShadow=function(ctx,gridData,options){var i;
var opts=(options!=undefined)?options:{};
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var xaxis=this.xaxis;
var yaxis=this.yaxis;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var pointx,points,pointy,nvals,nseries,pos;
if(this._stack&&this.shadow){if(this.barWidth==null){this.renderer.setBarWidth.call(this);
}var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
nvals=temp[0];
nseries=temp[1];
pos=temp[2];
if(this._stack){this._barNudge=0;
}else{this._barNudge=(-Math.abs(nseries/2-0.5)+pos)*(this.barWidth+this.barPadding);
}if(showLine){if(this.barDirection=="vertical"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][1]==null){continue;
}points=[];
var base=gridData[i][0]+this._barNudge;
var ystart;
if(this._stack&&this._prevGridData.length){ystart=this._prevGridData[i][1];
}else{if(this.fillToZero){ystart=this._yaxis.series_u2p(0);
}else{ystart=ctx.canvas.height;
}}points.push([base-this.barWidth/2,ystart]);
points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,ystart]);
this.renderer.shadowRenderer.draw(ctx,points,opts);
}}else{if(this.barDirection=="horizontal"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][0]==null){continue;
}points=[];
var base=gridData[i][1]-this._barNudge;
var xstart;
if(this._stack&&this._prevGridData.length){xstart=this._prevGridData[i][0];
}else{xstart=0;
}points.push([xstart,base+this.barWidth/2]);
points.push([gridData[i][0],base+this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
this.renderer.shadowRenderer.draw(ctx,points,opts);
}}}}}};
function postInit(target,data,options){for(var i=0;
i<this.series.length;
i++){if(this.series[i].renderer.constructor==$.jqplot.BarRenderer){if(this.series[i].highlightMouseOver){this.series[i].highlightMouseDown=false;
}}}}function postPlotDraw(){if(this.plugins.barRenderer&&this.plugins.barRenderer.highlightCanvas){this.plugins.barRenderer.highlightCanvas.resetCanvas();
this.plugins.barRenderer.highlightCanvas=null;
}this.plugins.barRenderer={highlightedSeriesIndex:null};
this.plugins.barRenderer.highlightCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(this.plugins.barRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-barRenderer-highlight-canvas",this._plotDimensions,this));
this.plugins.barRenderer.highlightCanvas.setContext();
this.eventCanvas._elem.bind("mouseleave",{plot:this},function(ev){unhighlight(ev.data.plot);
});
}function highlight(plot,sidx,pidx,points){var s=plot.series[sidx];
var canvas=plot.plugins.barRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
s._highlightedPoint=pidx;
plot.plugins.barRenderer.highlightedSeriesIndex=sidx;
var opts={fillStyle:s.highlightColors[pidx]};
s.renderer.shapeRenderer.draw(canvas._ctx,points,opts);
canvas=null;
}function unhighlight(plot){var canvas=plot.plugins.barRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
for(var i=0;
i<plot.series.length;
i++){plot.series[i]._highlightedPoint=null;
}plot.plugins.barRenderer.highlightedSeriesIndex=null;
plot.target.trigger("jqplotDataUnhighlight");
canvas=null;
}function handleMove(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt1=jQuery.Event("jqplotDataMouseOver");
evt1.pageX=ev.pageX;
evt1.pageY=ev.pageY;
plot.target.trigger(evt1,ins);
if(plot.series[ins[0]].highlightMouseOver&&!(ins[0]==plot.plugins.barRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
if(plot.series[ins[0]].highlightMouseDown&&!(ins[0]==plot.plugins.barRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseUp(ev,gridpos,datapos,neighbor,plot){var idx=plot.plugins.barRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}}function handleClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt=jQuery.Event("jqplotDataClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function handleRightClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var idx=plot.plugins.barRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}var evt=jQuery.Event("jqplotDataRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}})(jQuery);
(function($){$.jqplot.CanvasAxisTickRenderer=function(options){this.mark="outside";
this.showMark=true;
this.showGridline=true;
this.isMinorTick=false;
this.angle=0;
this.markSize=4;
this.show=true;
this.showLabel=true;
this.labelPosition="auto";
this.label="";
this.value=null;
this._styles={};
this.formatter=$.jqplot.DefaultTickFormatter;
this.formatString="";
this.prefix="";
this.fontFamily='"Trebuchet MS", Arial, Helvetica, sans-serif';
this.fontSize="10pt";
this.fontWeight="normal";
this.fontStretch=1;
this.textColor="#666666";
this.enableFontSupport=true;
this.pt2px=null;
this._elem;
this._ctx;
this._plotWidth;
this._plotHeight;
this._plotDimensions={height:null,width:null};
$.extend(true,this,options);
var ropts={fontSize:this.fontSize,fontWeight:this.fontWeight,fontStretch:this.fontStretch,fillStyle:this.textColor,angle:this.getAngleRad(),fontFamily:this.fontFamily};
if(this.pt2px){ropts.pt2px=this.pt2px;
}if(this.enableFontSupport){if($.jqplot.support_canvas_text()){this._textRenderer=new $.jqplot.CanvasFontRenderer(ropts);
}else{this._textRenderer=new $.jqplot.CanvasTextRenderer(ropts);
}}else{this._textRenderer=new $.jqplot.CanvasTextRenderer(ropts);
}};
$.jqplot.CanvasAxisTickRenderer.prototype.init=function(options){$.extend(true,this,options);
this._textRenderer.init({fontSize:this.fontSize,fontWeight:this.fontWeight,fontStretch:this.fontStretch,fillStyle:this.textColor,angle:this.getAngleRad(),fontFamily:this.fontFamily});
};
$.jqplot.CanvasAxisTickRenderer.prototype.getWidth=function(ctx){if(this._elem){return this._elem.outerWidth(true);
}else{var tr=this._textRenderer;
var l=tr.getWidth(ctx);
var h=tr.getHeight(ctx);
var w=Math.abs(Math.sin(tr.angle)*h)+Math.abs(Math.cos(tr.angle)*l);
return w;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getHeight=function(ctx){if(this._elem){return this._elem.outerHeight(true);
}else{var tr=this._textRenderer;
var l=tr.getWidth(ctx);
var h=tr.getHeight(ctx);
var w=Math.abs(Math.cos(tr.angle)*h)+Math.abs(Math.sin(tr.angle)*l);
return w;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getTop=function(ctx){if(this._elem){return this._elem.position().top;
}else{return null;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getAngleRad=function(){var a=this.angle*Math.PI/180;
return a;
};
$.jqplot.CanvasAxisTickRenderer.prototype.setTick=function(value,axisName,isMinor){this.value=value;
if(isMinor){this.isMinorTick=true;
}return this;
};
$.jqplot.CanvasAxisTickRenderer.prototype.draw=function(ctx,plot){if(!this.label){this.label=this.prefix+this.formatter(this.formatString,this.value);
}if(this._elem){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){window.G_vmlCanvasManager.uninitElement(this._elem.get(0));
}this._elem.emptyForce();
this._elem=null;
}var elem=plot.canvasManager.getCanvas();
this._textRenderer.setText(this.label,ctx);
var w=this.getWidth(ctx);
var h=this.getHeight(ctx);
elem.width=w;
elem.height=h;
elem.style.width=w;
elem.style.height=h;
elem.style.textAlign="left";
elem.style.position="absolute";
elem=plot.canvasManager.initCanvas(elem);
this._elem=$(elem);
this._elem.css(this._styles);
this._elem.addClass("jqplot-"+this.axis+"-tick");
elem=null;
return this._elem;
};
$.jqplot.CanvasAxisTickRenderer.prototype.pack=function(){this._textRenderer.draw(this._elem.get(0).getContext("2d"),this.label);
};
})(jQuery);
(function($){var objCounter=0;
$.jqplot.CanvasOverlay=function(opts){var options=opts||{};
this.options={show:$.jqplot.config.enablePlugins,deferDraw:false};
this.objects=[];
this.objectNames=[];
this.canvas=null;
this.markerRenderer=new $.jqplot.MarkerRenderer({style:"line"});
this.markerRenderer.init();
this.highlightObjectIndex=null;
if(options.objects){var objs=options.objects,obj;
for(var i=0;
i<objs.length;
i++){obj=objs[i];
for(var n in obj){switch(n){case"line":this.addLine(obj[n]);
break;
case"horizontalLine":this.addHorizontalLine(obj[n]);
break;
case"dashedHorizontalLine":this.addDashedHorizontalLine(obj[n]);
break;
case"verticalLine":this.addVerticalLine(obj[n]);
break;
case"dashedVerticalLine":this.addDashedVerticalLine(obj[n]);
break;
case"rectangle":this.addRectangle(obj[n]);
break;
default:break;
}}}}$.extend(true,this.options,options);
};
$.jqplot.CanvasOverlay.postPlotInit=function(target,data,opts){var options=opts||{};
this.plugins.canvasOverlay=new $.jqplot.CanvasOverlay(options.canvasOverlay);
};
function LineBase(){this.uid=null;
this.type=null;
this.gridStart=null;
this.gridStop=null;
this.tooltipWidthFactor=0;
this.options={name:null,show:true,lineWidth:2,lineCap:"round",color:"#666666",shadow:true,shadowAngle:45,shadowOffset:1,shadowDepth:3,shadowAlpha:"0.07",xaxis:"xaxis",yaxis:"yaxis",showTooltip:false,showTooltipPrecision:0.6,tooltipLocation:"nw",fadeTooltip:true,tooltipFadeSpeed:"fast",tooltipOffset:4,tooltipFormatString:"%d, %d"};
}function Rectangle(options){LineBase.call(this);
this.type="rectangle";
var opts={xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}Rectangle.prototype=new LineBase();
Rectangle.prototype.constructor=Rectangle;
function Line(options){LineBase.call(this);
this.type="line";
var opts={start:[],stop:[]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}Line.prototype=new LineBase();
Line.prototype.constructor=Line;
function HorizontalLine(options){LineBase.call(this);
this.type="horizontalLine";
var opts={y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}HorizontalLine.prototype=new LineBase();
HorizontalLine.prototype.constructor=HorizontalLine;
function DashedHorizontalLine(options){LineBase.call(this);
this.type="dashedHorizontalLine";
var opts={y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null,dashPattern:[8,8]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}DashedHorizontalLine.prototype=new LineBase();
DashedHorizontalLine.prototype.constructor=DashedHorizontalLine;
function VerticalLine(options){LineBase.call(this);
this.type="verticalLine";
var opts={x:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}VerticalLine.prototype=new LineBase();
VerticalLine.prototype.constructor=VerticalLine;
function DashedVerticalLine(options){LineBase.call(this);
this.type="dashedVerticalLine";
this.start=null;
this.stop=null;
var opts={x:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null,dashPattern:[8,8]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}DashedVerticalLine.prototype=new LineBase();
DashedVerticalLine.prototype.constructor=DashedVerticalLine;
$.jqplot.CanvasOverlay.prototype.addLine=function(opts){var line=new Line(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addHorizontalLine=function(opts){var line=new HorizontalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addDashedHorizontalLine=function(opts){var line=new DashedHorizontalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addVerticalLine=function(opts){var line=new VerticalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addDashedVerticalLine=function(opts){var line=new DashedVerticalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addRectangle=function(opts){var line=new Rectangle(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.removeObject=function(idx){if($.type(idx)=="number"){this.objects.splice(idx,1);
this.objectNames.splice(idx,1);
}else{var id=$.inArray(idx,this.objectNames);
if(id!=-1){this.objects.splice(id,1);
this.objectNames.splice(id,1);
}}};
$.jqplot.CanvasOverlay.prototype.getObject=function(idx){if($.type(idx)=="number"){return this.objects[idx];
}else{var id=$.inArray(idx,this.objectNames);
if(id!=-1){return this.objects[id];
}}};
$.jqplot.CanvasOverlay.prototype.get=$.jqplot.CanvasOverlay.prototype.getObject;
$.jqplot.CanvasOverlay.prototype.clear=function(plot){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight());
};
$.jqplot.CanvasOverlay.prototype.draw=function(plot){var obj,objs=this.objects,mr=this.markerRenderer,start,stop;
if(this.options.show){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight());
for(var k=0;
k<objs.length;
k++){obj=objs[k];
var opts=$.extend(true,{},obj.options);
if(obj.options.show){mr.shadow=obj.options.shadow;
obj.tooltipWidthFactor=obj.options.lineWidth/obj.options.showTooltipPrecision;
switch(obj.type){case"line":mr.style="line";
opts.closePath=false;
start=[plot.axes[obj.options.xaxis].series_u2p(obj.options.start[0]),plot.axes[obj.options.yaxis].series_u2p(obj.options.start[1])];
stop=[plot.axes[obj.options.xaxis].series_u2p(obj.options.stop[0]),plot.axes[obj.options.yaxis].series_u2p(obj.options.stop[1])];
obj.gridStart=start;
obj.gridStop=stop;
mr.draw(start,stop,this.canvas._ctx,opts);
break;
case"horizontalLine":if(obj.options.y!=null){mr.style="line";
opts.closePath=false;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}if(xstop!=null&&xstart!=null){obj.gridStart=[xstart,y];
obj.gridStop=[xstop,y];
mr.draw([xstart,y],[xstop,y],this.canvas._ctx,opts);
}}break;
case"dashedHorizontalLine":var dashPat=obj.options.dashPattern;
var dashPatLen=0;
for(var i=0;
i<dashPat.length;
i++){dashPatLen+=dashPat[i];
}if(obj.options.y!=null){mr.style="line";
opts.closePath=false;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}if(xstop!=null&&xstart!=null){obj.gridStart=[xstart,y];
obj.gridStop=[xstop,y];
var numDash=Math.ceil((xstop-xstart)/dashPatLen);
var b=xstart,e;
for(var i=0;
i<numDash;
i++){for(var j=0;
j<dashPat.length;
j+=2){e=b+dashPat[j];
mr.draw([b,y],[e,y],this.canvas._ctx,opts);
b+=dashPat[j];
if(j<dashPat.length-1){b+=dashPat[j+1];
}}}}}break;
case"verticalLine":if(obj.options.x!=null){mr.style="line";
opts.closePath=false;
var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(ystop!=null&&ystart!=null){obj.gridStart=[x,ystart];
obj.gridStop=[x,ystop];
mr.draw([x,ystart],[x,ystop],this.canvas._ctx,opts);
}}break;
case"dashedVerticalLine":var dashPat=obj.options.dashPattern;
var dashPatLen=0;
for(var i=0;
i<dashPat.length;
i++){dashPatLen+=dashPat[i];
}if(obj.options.x!=null){mr.style="line";
opts.closePath=false;
var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(ystop!=null&&ystart!=null){obj.gridStart=[x,ystart];
obj.gridStop=[x,ystop];
var numDash=Math.ceil((ystart-ystop)/dashPatLen);
var firstDashAdjust=((numDash*dashPatLen)-(ystart-ystop))/2;
var b=ystart,e,bs,es;
for(var i=0;
i<numDash;
i++){for(var j=0;
j<dashPat.length;
j+=2){e=b-dashPat[j];
if(e<ystop){e=ystop;
}if(b<ystop){b=ystop;
}mr.draw([x,b],[x,e],this.canvas._ctx,opts);
b-=dashPat[j];
if(j<dashPat.length-1){b-=dashPat[j+1];
}}}}}break;
case"rectangle":mr.style="line";
opts.closePath=true;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(xstop!=null&&xstart!=null&&ystop!=null&&ystart!=null){obj.gridStart=[xstart,ystart];
obj.gridStop=[xstop,ystop];
this.canvas._ctx.fillStyle=obj.options.color;
this.canvas._ctx.fillRect(xstart,ystart,xstop-xstart,ystop-ystart);
}break;
default:break;
}}}}};
$.jqplot.CanvasOverlay.postPlotDraw=function(){var co=this.plugins.canvasOverlay;
if(co&&co.highlightCanvas){co.highlightCanvas.resetCanvas();
co.highlightCanvas=null;
}co.canvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(co.canvas.createElement(this._gridPadding,"jqplot-overlayCanvas-canvas",this._plotDimensions,this));
co.canvas.setContext();
if(!co.deferDraw){co.draw(this);
}var elem=document.createElement("div");
co._tooltipElem=$(elem);
elem=null;
co._tooltipElem.addClass("jqplot-canvasOverlay-tooltip");
co._tooltipElem.css({position:"absolute",display:"none"});
this.eventCanvas._elem.before(co._tooltipElem);
this.eventCanvas._elem.bind("mouseleave",{elem:co._tooltipElem},function(ev){ev.data.elem.hide();
});
var co=null;
};
function showTooltip(plot,obj,gridpos,datapos){var co=plot.plugins.canvasOverlay;
var elem=co._tooltipElem;
var opts=obj.options,x,y;
elem.html($.jqplot.sprintf(opts.tooltipFormatString,datapos[0],datapos[1]));
switch(opts.tooltipLocation){case"nw":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"n":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)/2;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"ne":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"e":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"s":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)/2;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"sw":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"w":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
}elem.css("left",x);
elem.css("top",y);
if(opts.fadeTooltip){elem.stop(true,true).fadeIn(opts.tooltipFadeSpeed);
}else{elem.show();
}elem=null;
}function isNearLine(point,lstart,lstop,width){var rx=point[0];
var ry=point[1];
var px=Math.round(lstop[0]);
var py=Math.round(lstop[1]);
var qx=Math.round(lstart[0]);
var qy=Math.round(lstart[1]);
var l=Math.sqrt(Math.pow(px-qx,2)+Math.pow(py-qy,2));
var eps=width*l;
var res=Math.abs((qx-px)*(ry-py)-(qy-py)*(rx-px));
var ret=(res<eps)?true:false;
return ret;
}function isNearRectangle(point,lstart,lstop,width){var rx=point[0];
var ry=point[1];
var px=Math.round(lstop[0]);
var py=Math.round(lstop[1]);
var qx=Math.round(lstart[0]);
var qy=Math.round(lstart[1]);
var temp;
if(px>qx){temp=px;
px=qx;
qx=temp;
}if(py>qy){temp=py;
py=qy;
qy=temp;
}var ret=(rx>=px&&rx<=qx&&ry>=py&&ry<=qy);
return ret;
}function handleMove(ev,gridpos,datapos,neighbor,plot){var co=plot.plugins.canvasOverlay;
var objs=co.objects;
var l=objs.length;
var obj,haveHighlight=false;
var elem;
for(var i=0;
i<l;
i++){obj=objs[i];
if(obj.options.showTooltip){var n;
if(obj.type==="rectangle"){n=isNearRectangle([gridpos.x,gridpos.y],obj.gridStart,obj.gridStop,obj.tooltipWidthFactor);
}else{n=isNearLine([gridpos.x,gridpos.y],obj.gridStart,obj.gridStop,obj.tooltipWidthFactor);
}datapos=[plot.axes[obj.options.xaxis].series_p2u(gridpos.x),plot.axes[obj.options.yaxis].series_p2u(gridpos.y)];
if(n&&co.highlightObjectIndex==null){switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}co.highlightObjectIndex=i;
haveHighlight=true;
break;
}else{if(n&&co.highlightObjectIndex!==i){elem=co._tooltipElem;
if(obj.fadeTooltip){elem.fadeOut(obj.tooltipFadeSpeed);
}else{elem.hide();
}switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}co.highlightObjectIndex=i;
haveHighlight=true;
break;
}else{if(n){switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}haveHighlight=true;
break;
}}}}}if(!haveHighlight&&co.highlightObjectIndex!==null){elem=co._tooltipElem;
obj=co.getObject(co.highlightObjectIndex);
if(obj.fadeTooltip){elem.fadeOut(obj.tooltipFadeSpeed);
}else{elem.hide();
}co.highlightObjectIndex=null;
}}$.jqplot.postInitHooks.push($.jqplot.CanvasOverlay.postPlotInit);
$.jqplot.postDrawHooks.push($.jqplot.CanvasOverlay.postPlotDraw);
$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMove]);
})(jQuery);
(function($){$.jqplot.CanvasTextRenderer=function(options){this.fontStyle="normal";
this.fontVariant="normal";
this.fontWeight="normal";
this.fontSize="10px";
this.fontFamily="sans-serif";
this.fontStretch=1;
this.fillStyle="#666666";
this.angle=0;
this.textAlign="start";
this.textBaseline="alphabetic";
this.text;
this.width;
this.height;
this.pt2px=1.28;
$.extend(true,this,options);
this.normalizedFontSize=this.normalizeFontSize(this.fontSize);
this.setHeight();
};
$.jqplot.CanvasTextRenderer.prototype.init=function(options){$.extend(true,this,options);
this.normalizedFontSize=this.normalizeFontSize(this.fontSize);
this.setHeight();
};
$.jqplot.CanvasTextRenderer.prototype.normalizeFontSize=function(sz){sz=String(sz);
var n=parseFloat(sz);
if(sz.indexOf("px")>-1){return n/this.pt2px;
}else{if(sz.indexOf("pt")>-1){return n;
}else{if(sz.indexOf("em")>-1){return n*12;
}else{if(sz.indexOf("%")>-1){return n*12/100;
}else{return n/this.pt2px;
}}}}};
$.jqplot.CanvasTextRenderer.prototype.fontWeight2Float=function(w){if(Number(w)){return w/400;
}else{switch(w){case"normal":return 1;
break;
case"bold":return 1.75;
break;
case"bolder":return 2.25;
break;
case"lighter":return 0.75;
break;
default:return 1;
break;
}}};
$.jqplot.CanvasTextRenderer.prototype.getText=function(){return this.text;
};
$.jqplot.CanvasTextRenderer.prototype.setText=function(t,ctx){this.text=t;
this.setWidth(ctx);
return this;
};
$.jqplot.CanvasTextRenderer.prototype.getWidth=function(ctx){return this.width;
};
$.jqplot.CanvasTextRenderer.prototype.setWidth=function(ctx,w){if(!w){this.width=this.measure(ctx,this.text);
}else{this.width=w;
}return this;
};
$.jqplot.CanvasTextRenderer.prototype.getHeight=function(ctx){return this.height;
};
$.jqplot.CanvasTextRenderer.prototype.setHeight=function(w){if(!w){this.height=this.normalizedFontSize*this.pt2px;
}else{this.height=w;
}return this;
};
$.jqplot.CanvasTextRenderer.prototype.letter=function(ch){return this.letters[ch];
};
$.jqplot.CanvasTextRenderer.prototype.ascent=function(){return this.normalizedFontSize;
};
$.jqplot.CanvasTextRenderer.prototype.descent=function(){return 7*this.normalizedFontSize/25;
};
$.jqplot.CanvasTextRenderer.prototype.measure=function(ctx,str){var total=0;
var len=str.length;
for(var i=0;
i<len;
i++){var c=this.letter(str.charAt(i));
if(c){total+=c.width*this.normalizedFontSize/25*this.fontStretch;
}}return total;
};
$.jqplot.CanvasTextRenderer.prototype.draw=function(ctx,str){var x=0;
var y=this.height*0.72;
var total=0;
var len=str.length;
var mag=this.normalizedFontSize/25;
ctx.save();
var tx,ty;
if((-Math.PI/2<=this.angle&&this.angle<=0)||(Math.PI*3/2<=this.angle&&this.angle<=Math.PI*2)){tx=0;
ty=-Math.sin(this.angle)*this.width;
}else{if((0<this.angle&&this.angle<=Math.PI/2)||(-Math.PI*2<=this.angle&&this.angle<=-Math.PI*3/2)){tx=Math.sin(this.angle)*this.height;
ty=0;
}else{if((-Math.PI<this.angle&&this.angle<-Math.PI/2)||(Math.PI<=this.angle&&this.angle<=Math.PI*3/2)){tx=-Math.cos(this.angle)*this.width;
ty=-Math.sin(this.angle)*this.width-Math.cos(this.angle)*this.height;
}else{if((-Math.PI*3/2<this.angle&&this.angle<Math.PI)||(Math.PI/2<this.angle&&this.angle<Math.PI)){tx=Math.sin(this.angle)*this.height-Math.cos(this.angle)*this.width;
ty=-Math.cos(this.angle)*this.height;
}}}}ctx.strokeStyle=this.fillStyle;
ctx.fillStyle=this.fillStyle;
ctx.translate(tx,ty);
ctx.rotate(this.angle);
ctx.lineCap="round";
var fact=(this.normalizedFontSize>30)?2:2+(30-this.normalizedFontSize)/20;
ctx.lineWidth=fact*mag*this.fontWeight2Float(this.fontWeight);
for(var i=0;
i<len;
i++){var c=this.letter(str.charAt(i));
if(!c){continue;
}ctx.beginPath();
var penUp=1;
var needStroke=0;
for(var j=0;
j<c.points.length;
j++){var a=c.points[j];
if(a[0]==-1&&a[1]==-1){penUp=1;
continue;
}if(penUp){ctx.moveTo(x+a[0]*mag*this.fontStretch,y-a[1]*mag);
penUp=false;
}else{ctx.lineTo(x+a[0]*mag*this.fontStretch,y-a[1]*mag);
}}ctx.stroke();
x+=c.width*mag*this.fontStretch;
}ctx.restore();
return total;
};
$.jqplot.CanvasTextRenderer.prototype.letters={" ":{width:16,points:[]},"!":{width:10,points:[[5,21],[5,7],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]]},'"':{width:16,points:[[4,21],[4,14],[-1,-1],[12,21],[12,14]]},"#":{width:21,points:[[11,25],[4,-7],[-1,-1],[17,25],[10,-7],[-1,-1],[4,12],[18,12],[-1,-1],[3,6],[17,6]]},"$":{width:20,points:[[8,25],[8,-4],[-1,-1],[12,25],[12,-4],[-1,-1],[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]]},"%":{width:24,points:[[21,21],[3,0],[-1,-1],[8,21],[10,19],[10,17],[9,15],[7,14],[5,14],[3,16],[3,18],[4,20],[6,21],[8,21],[10,20],[13,19],[16,19],[19,20],[21,21],[-1,-1],[17,7],[15,6],[14,4],[14,2],[16,0],[18,0],[20,1],[21,3],[21,5],[19,7],[17,7]]},"&":{width:26,points:[[23,12],[23,13],[22,14],[21,14],[20,13],[19,11],[17,6],[15,3],[13,1],[11,0],[7,0],[5,1],[4,2],[3,4],[3,6],[4,8],[5,9],[12,13],[13,14],[14,16],[14,18],[13,20],[11,21],[9,20],[8,18],[8,16],[9,13],[11,10],[16,3],[18,1],[20,0],[22,0],[23,1],[23,2]]},"'":{width:10,points:[[5,19],[4,20],[5,21],[6,20],[6,18],[5,16],[4,15]]},"(":{width:14,points:[[11,25],[9,23],[7,20],[5,16],[4,11],[4,7],[5,2],[7,-2],[9,-5],[11,-7]]},")":{width:14,points:[[3,25],[5,23],[7,20],[9,16],[10,11],[10,7],[9,2],[7,-2],[5,-5],[3,-7]]},"*":{width:16,points:[[8,21],[8,9],[-1,-1],[3,18],[13,12],[-1,-1],[13,18],[3,12]]},"+":{width:26,points:[[13,18],[13,0],[-1,-1],[4,9],[22,9]]},",":{width:10,points:[[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]]},"-":{width:18,points:[[6,9],[12,9]]},".":{width:10,points:[[5,2],[4,1],[5,0],[6,1],[5,2]]},"/":{width:22,points:[[20,25],[2,-7]]},"0":{width:20,points:[[9,21],[6,20],[4,17],[3,12],[3,9],[4,4],[6,1],[9,0],[11,0],[14,1],[16,4],[17,9],[17,12],[16,17],[14,20],[11,21],[9,21]]},"1":{width:20,points:[[6,17],[8,18],[11,21],[11,0]]},"2":{width:20,points:[[4,16],[4,17],[5,19],[6,20],[8,21],[12,21],[14,20],[15,19],[16,17],[16,15],[15,13],[13,10],[3,0],[17,0]]},"3":{width:20,points:[[5,21],[16,21],[10,13],[13,13],[15,12],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]]},"4":{width:20,points:[[13,21],[3,7],[18,7],[-1,-1],[13,21],[13,0]]},"5":{width:20,points:[[15,21],[5,21],[4,12],[5,13],[8,14],[11,14],[14,13],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]]},"6":{width:20,points:[[16,18],[15,20],[12,21],[10,21],[7,20],[5,17],[4,12],[4,7],[5,3],[7,1],[10,0],[11,0],[14,1],[16,3],[17,6],[17,7],[16,10],[14,12],[11,13],[10,13],[7,12],[5,10],[4,7]]},"7":{width:20,points:[[17,21],[7,0],[-1,-1],[3,21],[17,21]]},"8":{width:20,points:[[8,21],[5,20],[4,18],[4,16],[5,14],[7,13],[11,12],[14,11],[16,9],[17,7],[17,4],[16,2],[15,1],[12,0],[8,0],[5,1],[4,2],[3,4],[3,7],[4,9],[6,11],[9,12],[13,13],[15,14],[16,16],[16,18],[15,20],[12,21],[8,21]]},"9":{width:20,points:[[16,14],[15,11],[13,9],[10,8],[9,8],[6,9],[4,11],[3,14],[3,15],[4,18],[6,20],[9,21],[10,21],[13,20],[15,18],[16,14],[16,9],[15,4],[13,1],[10,0],[8,0],[5,1],[4,3]]},":":{width:10,points:[[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]]},";":{width:10,points:[[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]]},"<":{width:24,points:[[20,18],[4,9],[20,0]]},"=":{width:26,points:[[4,12],[22,12],[-1,-1],[4,6],[22,6]]},">":{width:24,points:[[4,18],[20,9],[4,0]]},"?":{width:18,points:[[3,16],[3,17],[4,19],[5,20],[7,21],[11,21],[13,20],[14,19],[15,17],[15,15],[14,13],[13,12],[9,10],[9,7],[-1,-1],[9,2],[8,1],[9,0],[10,1],[9,2]]},"@":{width:27,points:[[18,13],[17,15],[15,16],[12,16],[10,15],[9,14],[8,11],[8,8],[9,6],[11,5],[14,5],[16,6],[17,8],[-1,-1],[12,16],[10,14],[9,11],[9,8],[10,6],[11,5],[-1,-1],[18,16],[17,8],[17,6],[19,5],[21,5],[23,7],[24,10],[24,12],[23,15],[22,17],[20,19],[18,20],[15,21],[12,21],[9,20],[7,19],[5,17],[4,15],[3,12],[3,9],[4,6],[5,4],[7,2],[9,1],[12,0],[15,0],[18,1],[20,2],[21,3],[-1,-1],[19,16],[18,8],[18,6],[19,5]]},A:{width:18,points:[[9,21],[1,0],[-1,-1],[9,21],[17,0],[-1,-1],[4,7],[14,7]]},B:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[-1,-1],[4,11],[13,11],[16,10],[17,9],[18,7],[18,4],[17,2],[16,1],[13,0],[4,0]]},C:{width:21,points:[[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5]]},D:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[11,21],[14,20],[16,18],[17,16],[18,13],[18,8],[17,5],[16,3],[14,1],[11,0],[4,0]]},E:{width:19,points:[[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11],[-1,-1],[4,0],[17,0]]},F:{width:18,points:[[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11]]},G:{width:21,points:[[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[18,8],[-1,-1],[13,8],[18,8]]},H:{width:22,points:[[4,21],[4,0],[-1,-1],[18,21],[18,0],[-1,-1],[4,11],[18,11]]},I:{width:8,points:[[4,21],[4,0]]},J:{width:16,points:[[12,21],[12,5],[11,2],[10,1],[8,0],[6,0],[4,1],[3,2],[2,5],[2,7]]},K:{width:21,points:[[4,21],[4,0],[-1,-1],[18,21],[4,7],[-1,-1],[9,12],[18,0]]},L:{width:17,points:[[4,21],[4,0],[-1,-1],[4,0],[16,0]]},M:{width:24,points:[[4,21],[4,0],[-1,-1],[4,21],[12,0],[-1,-1],[20,21],[12,0],[-1,-1],[20,21],[20,0]]},N:{width:22,points:[[4,21],[4,0],[-1,-1],[4,21],[18,0],[-1,-1],[18,21],[18,0]]},O:{width:22,points:[[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21]]},P:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,14],[17,12],[16,11],[13,10],[4,10]]},Q:{width:22,points:[[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21],[-1,-1],[12,4],[18,-2]]},R:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[4,11],[-1,-1],[11,11],[18,0]]},S:{width:20,points:[[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]]},T:{width:16,points:[[8,21],[8,0],[-1,-1],[1,21],[15,21]]},U:{width:22,points:[[4,21],[4,6],[5,3],[7,1],[10,0],[12,0],[15,1],[17,3],[18,6],[18,21]]},V:{width:18,points:[[1,21],[9,0],[-1,-1],[17,21],[9,0]]},W:{width:24,points:[[2,21],[7,0],[-1,-1],[12,21],[7,0],[-1,-1],[12,21],[17,0],[-1,-1],[22,21],[17,0]]},X:{width:20,points:[[3,21],[17,0],[-1,-1],[17,21],[3,0]]},Y:{width:18,points:[[1,21],[9,11],[9,0],[-1,-1],[17,21],[9,11]]},Z:{width:20,points:[[17,21],[3,0],[-1,-1],[3,21],[17,21],[-1,-1],[3,0],[17,0]]},"[":{width:14,points:[[4,25],[4,-7],[-1,-1],[5,25],[5,-7],[-1,-1],[4,25],[11,25],[-1,-1],[4,-7],[11,-7]]},"\\":{width:14,points:[[0,21],[14,-3]]},"]":{width:14,points:[[9,25],[9,-7],[-1,-1],[10,25],[10,-7],[-1,-1],[3,25],[10,25],[-1,-1],[3,-7],[10,-7]]},"^":{width:16,points:[[6,15],[8,18],[10,15],[-1,-1],[3,12],[8,17],[13,12],[-1,-1],[8,17],[8,0]]},_:{width:16,points:[[0,-2],[16,-2]]},"`":{width:10,points:[[6,21],[5,20],[4,18],[4,16],[5,15],[6,16],[5,17]]},a:{width:19,points:[[15,14],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},b:{width:19,points:[[4,21],[4,0],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]]},c:{width:18,points:[[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},d:{width:19,points:[[15,21],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},e:{width:18,points:[[3,8],[15,8],[15,10],[14,12],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},f:{width:12,points:[[10,21],[8,21],[6,20],[5,17],[5,0],[-1,-1],[2,14],[9,14]]},g:{width:19,points:[[15,14],[15,-2],[14,-5],[13,-6],[11,-7],[8,-7],[6,-6],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},h:{width:19,points:[[4,21],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]]},i:{width:8,points:[[3,21],[4,20],[5,21],[4,22],[3,21],[-1,-1],[4,14],[4,0]]},j:{width:10,points:[[5,21],[6,20],[7,21],[6,22],[5,21],[-1,-1],[6,14],[6,-3],[5,-6],[3,-7],[1,-7]]},k:{width:17,points:[[4,21],[4,0],[-1,-1],[14,14],[4,4],[-1,-1],[8,8],[15,0]]},l:{width:8,points:[[4,21],[4,0]]},m:{width:30,points:[[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0],[-1,-1],[15,10],[18,13],[20,14],[23,14],[25,13],[26,10],[26,0]]},n:{width:19,points:[[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]]},o:{width:19,points:[[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3],[16,6],[16,8],[15,11],[13,13],[11,14],[8,14]]},p:{width:19,points:[[4,14],[4,-7],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]]},q:{width:19,points:[[15,14],[15,-7],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},r:{width:13,points:[[4,14],[4,0],[-1,-1],[4,8],[5,11],[7,13],[9,14],[12,14]]},s:{width:17,points:[[14,11],[13,13],[10,14],[7,14],[4,13],[3,11],[4,9],[6,8],[11,7],[13,6],[14,4],[14,3],[13,1],[10,0],[7,0],[4,1],[3,3]]},t:{width:12,points:[[5,21],[5,4],[6,1],[8,0],[10,0],[-1,-1],[2,14],[9,14]]},u:{width:19,points:[[4,14],[4,4],[5,1],[7,0],[10,0],[12,1],[15,4],[-1,-1],[15,14],[15,0]]},v:{width:16,points:[[2,14],[8,0],[-1,-1],[14,14],[8,0]]},w:{width:22,points:[[3,14],[7,0],[-1,-1],[11,14],[7,0],[-1,-1],[11,14],[15,0],[-1,-1],[19,14],[15,0]]},x:{width:17,points:[[3,14],[14,0],[-1,-1],[14,14],[3,0]]},y:{width:16,points:[[2,14],[8,0],[-1,-1],[14,14],[8,0],[6,-4],[4,-6],[2,-7],[1,-7]]},z:{width:17,points:[[14,14],[3,0],[-1,-1],[3,14],[14,14],[-1,-1],[3,0],[14,0]]},"{":{width:14,points:[[9,25],[7,24],[6,23],[5,21],[5,19],[6,17],[7,16],[8,14],[8,12],[6,10],[-1,-1],[7,24],[6,22],[6,20],[7,18],[8,17],[9,15],[9,13],[8,11],[4,9],[8,7],[9,5],[9,3],[8,1],[7,0],[6,-2],[6,-4],[7,-6],[-1,-1],[6,8],[8,6],[8,4],[7,2],[6,1],[5,-1],[5,-3],[6,-5],[7,-6],[9,-7]]},"|":{width:8,points:[[4,25],[4,-7]]},"}":{width:14,points:[[5,25],[7,24],[8,23],[9,21],[9,19],[8,17],[7,16],[6,14],[6,12],[8,10],[-1,-1],[7,24],[8,22],[8,20],[7,18],[6,17],[5,15],[5,13],[6,11],[10,9],[6,7],[5,5],[5,3],[6,1],[7,0],[8,-2],[8,-4],[7,-6],[-1,-1],[8,8],[6,6],[6,4],[7,2],[8,1],[9,-1],[9,-3],[8,-5],[7,-6],[5,-7]]},"~":{width:24,points:[[3,6],[3,8],[4,11],[6,12],[8,12],[10,11],[14,8],[16,7],[18,7],[20,8],[21,10],[-1,-1],[3,8],[4,10],[6,11],[8,11],[10,10],[14,7],[16,6],[18,6],[20,7],[21,10],[21,12]]}};
$.jqplot.CanvasFontRenderer=function(options){options=options||{};
if(!options.pt2px){options.pt2px=1.5;
}$.jqplot.CanvasTextRenderer.call(this,options);
};
$.jqplot.CanvasFontRenderer.prototype=new $.jqplot.CanvasTextRenderer({});
$.jqplot.CanvasFontRenderer.prototype.constructor=$.jqplot.CanvasFontRenderer;
$.jqplot.CanvasFontRenderer.prototype.measure=function(ctx,str){var fstyle=this.fontSize+" "+this.fontFamily;
ctx.save();
ctx.font=fstyle;
var w=ctx.measureText(str).width;
ctx.restore();
return w;
};
$.jqplot.CanvasFontRenderer.prototype.draw=function(ctx,str){var x=0;
var y=this.height*0.72;
ctx.save();
var tx,ty;
if((-Math.PI/2<=this.angle&&this.angle<=0)||(Math.PI*3/2<=this.angle&&this.angle<=Math.PI*2)){tx=0;
ty=-Math.sin(this.angle)*this.width;
}else{if((0<this.angle&&this.angle<=Math.PI/2)||(-Math.PI*2<=this.angle&&this.angle<=-Math.PI*3/2)){tx=Math.sin(this.angle)*this.height;
ty=0;
}else{if((-Math.PI<this.angle&&this.angle<-Math.PI/2)||(Math.PI<=this.angle&&this.angle<=Math.PI*3/2)){tx=-Math.cos(this.angle)*this.width;
ty=-Math.sin(this.angle)*this.width-Math.cos(this.angle)*this.height;
}else{if((-Math.PI*3/2<this.angle&&this.angle<Math.PI)||(Math.PI/2<this.angle&&this.angle<Math.PI)){tx=Math.sin(this.angle)*this.height-Math.cos(this.angle)*this.width;
ty=-Math.cos(this.angle)*this.height;
}}}}ctx.strokeStyle=this.fillStyle;
ctx.fillStyle=this.fillStyle;
var fstyle=this.fontSize+" "+this.fontFamily;
ctx.font=fstyle;
ctx.translate(tx,ty);
ctx.rotate(this.angle);
ctx.fillText(str,x,y);
ctx.restore();
};
})(jQuery);
(function($){$.jqplot.CategoryAxisRenderer=function(options){$.jqplot.LinearAxisRenderer.call(this);
this.sortMergedLabels=false;
};
$.jqplot.CategoryAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.CategoryAxisRenderer.prototype.constructor=$.jqplot.CategoryAxisRenderer;
$.jqplot.CategoryAxisRenderer.prototype.init=function(options){this.groups=1;
this.groupLabels=[];
this._groupLabels=[];
this._grouped=false;
this._barsPerGroup=null;
this.reverse=false;
$.extend(true,this,{tickOptions:{formatString:"%d"}},options);
var db=this._dataBounds;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
if(s.groups){this.groups=s.groups;
}var d=s.data;
for(var j=0;
j<d.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){if(d[j][0]<db.min||db.min==null){db.min=d[j][0];
}if(d[j][0]>db.max||db.max==null){db.max=d[j][0];
}}else{if(d[j][1]<db.min||db.min==null){db.min=d[j][1];
}if(d[j][1]>db.max||db.max==null){db.max=d[j][1];
}}}}if(this.groupLabels.length){this.groups=this.groupLabels.length;
}};
$.jqplot.CategoryAxisRenderer.prototype.createTicks=function(){var ticks=this._ticks;
var userTicks=this.ticks;
var name=this.name;
var db=this._dataBounds;
var dim,interval;
var min,max;
var pos1,pos2;
var tt,i;
if(userTicks.length){if(this.groups>1&&!this._grouped){var l=userTicks.length;
var skip=parseInt(l/this.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip){userTicks.splice(i+count,0," ");
count++;
}this._grouped=true;
}this.min=0.5;
this.max=userTicks.length+0.5;
var range=this.max-this.min;
this.numberTicks=2*userTicks.length+1;
for(i=0;
i<userTicks.length;
i++){tt=this.min+2*i*range/(this.numberTicks-1);
var t=new this.tickRenderer(this.tickOptions);
t.showLabel=false;
t.setTick(tt,this.name);
this._ticks.push(t);
var t=new this.tickRenderer(this.tickOptions);
t.label=userTicks[i];
t.showMark=false;
t.showGridline=false;
t.setTick(tt+0.5,this.name);
this._ticks.push(t);
}var t=new this.tickRenderer(this.tickOptions);
t.showLabel=false;
t.setTick(tt+1,this.name);
this._ticks.push(t);
}else{if(name=="xaxis"||name=="x2axis"){dim=this._plotDimensions.width;
}else{dim=this._plotDimensions.height;
}if(this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null;
}if(this.min!=null&&this.max!=null&&this.tickInterval!=null){if(parseInt((this.max-this.min)/this.tickInterval,10)!=(this.max-this.min)/this.tickInterval){this.tickInterval=null;
}}var labels=[];
var numcats=0;
var min=0.5;
var max,val;
var isMerged=false;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
for(var j=0;
j<s.data.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){val=s.data[j][0];
}else{val=s.data[j][1];
}if($.inArray(val,labels)==-1){isMerged=true;
numcats+=1;
labels.push(val);
}}}if(isMerged&&this.sortMergedLabels){labels.sort(function(a,b){return a-b;
});
}this.ticks=labels;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
for(var j=0;
j<s.data.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){val=s.data[j][0];
}else{val=s.data[j][1];
}var idx=$.inArray(val,labels)+1;
if(this.name=="xaxis"||this.name=="x2axis"){s.data[j][0]=idx;
}else{s.data[j][1]=idx;
}}}if(this.groups>1&&!this._grouped){var l=labels.length;
var skip=parseInt(l/this.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip+1){labels[i]=" ";
}this._grouped=true;
}max=numcats+0.5;
if(this.numberTicks==null){this.numberTicks=2*numcats+1;
}var range=max-min;
this.min=min;
this.max=max;
var track=0;
var maxVisibleTicks=parseInt(3+dim/10,10);
var skip=parseInt(numcats/maxVisibleTicks,10);
if(this.tickInterval==null){this.tickInterval=range/(this.numberTicks-1);
}for(var i=0;
i<this.numberTicks;
i++){tt=this.min+i*this.tickInterval;
var t=new this.tickRenderer(this.tickOptions);
if(i/2==parseInt(i/2,10)){t.showLabel=false;
t.showMark=true;
}else{if(skip>0&&track<skip){t.showLabel=false;
track+=1;
}else{t.showLabel=true;
track=0;
}t.label=t.formatter(t.formatString,labels[(i-1)/2]);
t.showMark=false;
t.showGridline=false;
}t.setTick(tt,this.name);
this._ticks.push(t);
}}};
$.jqplot.CategoryAxisRenderer.prototype.draw=function(ctx,plot){if(this.show){this.renderer.createTicks.call(this);
var dim=0;
var temp;
if(this._elem){this._elem.emptyForce();
}this._elem=this._elem||$('<div class="jqplot-axis jqplot-'+this.name+'" style="position:absolute;"></div>');
if(this.name=="xaxis"||this.name=="x2axis"){this._elem.width(this._plotDimensions.width);
}else{this._elem.height(this._plotDimensions.height);
}this.labelOptions.axis=this.name;
this._label=new this.labelRenderer(this.labelOptions);
if(this._label.show){var elem=this._label.draw(ctx,plot);
elem.appendTo(this._elem);
}var t=this._ticks;
for(var i=0;
i<t.length;
i++){var tick=t[i];
if(tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){var elem=tick.draw(ctx,plot);
elem.appendTo(this._elem);
}}this._groupLabels=[];
for(var i=0;
i<this.groupLabels.length;
i++){var elem=$('<div style="position:absolute;" class="jqplot-'+this.name+'-groupLabel"></div>');
elem.html(this.groupLabels[i]);
this._groupLabels.push(elem);
elem.appendTo(this._elem);
}}return this._elem;
};
$.jqplot.CategoryAxisRenderer.prototype.set=function(){var dim=0;
var temp;
var w=0;
var h=0;
var lshow=(this._label==null)?false:this._label.show;
if(this.show){var t=this._ticks;
for(var i=0;
i<t.length;
i++){var tick=t[i];
if(tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){if(this.name=="xaxis"||this.name=="x2axis"){temp=tick._elem.outerHeight(true);
}else{temp=tick._elem.outerWidth(true);
}if(temp>dim){dim=temp;
}}}var dim2=0;
for(var i=0;
i<this._groupLabels.length;
i++){var l=this._groupLabels[i];
if(this.name=="xaxis"||this.name=="x2axis"){temp=l.outerHeight(true);
}else{temp=l.outerWidth(true);
}if(temp>dim2){dim2=temp;
}}if(lshow){w=this._label._elem.outerWidth(true);
h=this._label._elem.outerHeight(true);
}if(this.name=="xaxis"){dim+=dim2+h;
this._elem.css({height:dim+"px",left:"0px",bottom:"0px"});
}else{if(this.name=="x2axis"){dim+=dim2+h;
this._elem.css({height:dim+"px",left:"0px",top:"0px"});
}else{if(this.name=="yaxis"){dim+=dim2+w;
this._elem.css({width:dim+"px",left:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}else{dim+=dim2+w;
this._elem.css({width:dim+"px",right:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}}}}};
$.jqplot.CategoryAxisRenderer.prototype.pack=function(pos,offsets){var ticks=this._ticks;
var max=this.max;
var min=this.min;
var offmax=offsets.max;
var offmin=offsets.min;
var lshow=(this._label==null)?false:this._label.show;
var i;
for(var p in pos){this._elem.css(p,pos[p]);
}this._offsets=offsets;
var pixellength=offmax-offmin;
var unitlength=max-min;
if(!this.reverse){this.u2p=function(u){return(u-min)*pixellength/unitlength+offmin;
};
this.p2u=function(p){return(p-offmin)*unitlength/pixellength+min;
};
if(this.name=="xaxis"||this.name=="x2axis"){this.series_u2p=function(u){return(u-min)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}else{this.series_u2p=function(u){return(u-max)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}}else{this.u2p=function(u){return offmin+(max-u)*pixellength/unitlength;
};
this.p2u=function(p){return min+(p-offmin)*unitlength/pixellength;
};
if(this.name=="xaxis"||this.name=="x2axis"){this.series_u2p=function(u){return(max-u)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}else{this.series_u2p=function(u){return(min-u)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}}if(this.show){if(this.name=="xaxis"||this.name=="x2axis"){for(i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="xaxis")?1:-1;
switch(t.labelPosition){case"auto":if(temp*t.angle<0){shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
}else{shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
}break;
case"end":shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
case"start":shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
break;
case"middle":shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
default:shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
}}else{shim=-t.getWidth()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("left",val);
t.pack();
}}var labeledge=["bottom",0];
if(lshow){var w=this._label._elem.outerWidth(true);
this._label._elem.css("left",offmin+pixellength/2-w/2+"px");
if(this.name=="xaxis"){this._label._elem.css("bottom","0px");
labeledge=["bottom",this._label._elem.outerHeight(true)];
}else{this._label._elem.css("top","0px");
labeledge=["top",this._label._elem.outerHeight(true)];
}this._label.pack();
}var step=parseInt(this._ticks.length/this.groups,10);
for(i=0;
i<this._groupLabels.length;
i++){var mid=0;
var count=0;
for(var j=i*step;
j<=(i+1)*step;
j++){if(this._ticks[j]._elem&&this._ticks[j].label!=" "){var t=this._ticks[j]._elem;
var p=t.position();
mid+=p.left+t.outerWidth(true)/2;
count++;
}}mid=mid/count;
this._groupLabels[i].css({left:(mid-this._groupLabels[i].outerWidth(true)/2)});
this._groupLabels[i].css(labeledge[0],labeledge[1]);
}}else{for(i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="yaxis")?1:-1;
switch(t.labelPosition){case"auto":case"end":if(temp*t.angle<0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"start":if(t.angle>0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"middle":shim=-t.getHeight()/2;
break;
default:shim=-t.getHeight()/2;
break;
}}else{shim=-t.getHeight()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("top",val);
t.pack();
}}var labeledge=["left",0];
if(lshow){var h=this._label._elem.outerHeight(true);
this._label._elem.css("top",offmax-pixellength/2-h/2+"px");
if(this.name=="yaxis"){this._label._elem.css("left","0px");
labeledge=["left",this._label._elem.outerWidth(true)];
}else{this._label._elem.css("right","0px");
labeledge=["right",this._label._elem.outerWidth(true)];
}this._label.pack();
}var step=parseInt(this._ticks.length/this.groups,10);
for(i=0;
i<this._groupLabels.length;
i++){var mid=0;
var count=0;
for(var j=i*step;
j<=(i+1)*step;
j++){if(this._ticks[j]._elem&&this._ticks[j].label!=" "){var t=this._ticks[j]._elem;
var p=t.position();
mid+=p.top+t.outerHeight()/2;
count++;
}}mid=mid/count;
this._groupLabels[i].css({top:mid-this._groupLabels[i].outerHeight()/2});
this._groupLabels[i].css(labeledge[0],labeledge[1]);
}}}};
})(jQuery);
(function($){$.jqplot.Cursor=function(options){this.style="crosshair";
this.previousCursor="auto";
this.snapZoomTo=null;
this.show=$.jqplot.config.enablePlugins;
this.performOnZoom=function(plot){};
this.performAfterZoom=function(plot){};
this.showTooltip=true;
this.followMouse=false;
this.tooltipLocation="se";
this.tooltipOffset=6;
this.showTooltipGridPosition=false;
this.showTooltipUnitPosition=true;
this.showTooltipDataPosition=false;
this.tooltipFormatString="%.4P, %.4P";
this.useAxesFormatters=true;
this.tooltipAxisGroups=[];
this.zoom=false;
this.zoomProxy=false;
this.zoomOnController=true;
this.zoomTarget=false;
this.looseZoom=true;
this.clickReset=false;
this.dblClickReset=true;
this.showVerticalLine=false;
this.showHorizontalLine=false;
this.constrainZoomTo="none";
this.shapeRenderer=new $.jqplot.ShapeRenderer();
this._zoom={start:[],end:[],started:false,zooming:false,isZoomed:false,axes:{start:{},end:{}},gridpos:{},datapos:{}};
this._tooltipElem;
this.zoomCanvas;
this.cursorCanvas;
this.intersectionThreshold=2;
this.showCursorLegend=false;
this.cursorLegendFormatString=$.jqplot.Cursor.cursorLegendFormatString;
this._oldHandlers={onselectstart:null,ondrag:null,onmousedown:null};
this.constrainOutsideZoom=true;
this.showTooltipOutsideZoom=false;
this.onGrid=false;
$.extend(true,this,options);
};
$.jqplot.Cursor.cursorLegendFormatString="%s x:%s, y:%s";
$.jqplot.Cursor.init=function(target,data,opts){var options=opts||{};
this.plugins.cursor=new $.jqplot.Cursor(options.cursor);
var c=this.plugins.cursor;
if(c.show){$.jqplot.eventListenerHooks.push(["jqplotMouseEnter",handleMouseEnter]);
$.jqplot.eventListenerHooks.push(["jqplotMouseLeave",handleMouseLeave]);
$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMouseMove]);
if(c.showCursorLegend){opts.legend=opts.legend||{};
opts.legend.renderer=$.jqplot.CursorLegendRenderer;
opts.legend.formatString=this.plugins.cursor.cursorLegendFormatString;
opts.legend.show=true;
}if(c.zoom){$.jqplot.eventListenerHooks.push(["jqplotMouseDown",handleMouseDown]);
if(c.clickReset){$.jqplot.eventListenerHooks.push(["jqplotClick",handleClick]);
}if(c.dblClickReset){$.jqplot.eventListenerHooks.push(["jqplotDblClick",handleDblClick]);
}}this.resetZoom=function(){var axes=this.axes;
if(!c.zoomProxy){var axesLen=axes.length;
for(var ax=0,y=axesLen;
ax<y;
ax++){axes[ax].reset();
axes[ax]._ticks=[];
if(c._zoom.axes[ax]!==undefined){axes[ax]._autoFormatString=c._zoom.axes[ax].tickFormatString;
}}this.redraw();
}else{var ctx=this.plugins.cursor.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}this.plugins.cursor._zoom.isZoomed=false;
this.target.trigger("jqplotResetZoom",[this,this.plugins.cursor]);
};
if(c.showTooltipDataPosition){c.showTooltipUnitPosition=false;
c.showTooltipGridPosition=false;
if(options.cursor.tooltipFormatString==undefined){c.tooltipFormatString=$.jqplot.Cursor.cursorLegendFormatString;
}}}};
$.jqplot.Cursor.postDraw=function(){var c=this.plugins.cursor;
if(c.zoomCanvas){c.zoomCanvas.resetCanvas();
c.zoomCanvas=null;
}if(c.cursorCanvas){c.cursorCanvas.resetCanvas();
c.cursorCanvas=null;
}if(c._tooltipElem){c._tooltipElem.emptyForce();
c._tooltipElem=null;
}c.zoomCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(c.zoomCanvas.createElement(this._gridPadding,"jqplot-zoom-canvas",this._plotDimensions,this));
c.zoomCanvas.setContext();
var elem=document.createElement("div");
c._tooltipElem=$(elem);
elem=null;
c._tooltipElem.addClass("jqplot-cursor-tooltip");
c._tooltipElem.css({position:"absolute",display:"none"});
if(c.zoomCanvas){c.zoomCanvas._elem.before(c._tooltipElem);
}else{this.eventCanvas._elem.before(c._tooltipElem);
}if(c.showVerticalLine||c.showHorizontalLine){c.cursorCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(c.cursorCanvas.createElement(this._gridPadding,"jqplot-cursor-canvas",this._plotDimensions,this));
c.cursorCanvas.setContext();
}if(c.showTooltipUnitPosition){if(c.tooltipAxisGroups.length===0){var series=this.series;
var s;
var temp=[];
for(var i=0;
i<series.length;
i++){s=series[i];
var ax=s.xaxis+","+s.yaxis;
if($.inArray(ax,temp)==-1){temp.push(ax);
}}for(var i=0;
i<temp.length;
i++){c.tooltipAxisGroups.push(temp[i].split(","));
}}}};
$.jqplot.Cursor.zoomProxy=function(targetPlot,controllerPlot,zoomOnController){var tc=targetPlot.plugins.cursor;
var cc=controllerPlot.plugins.cursor;
tc.zoomTarget=true;
tc.zoom=true;
tc.style="auto";
tc.dblClickReset=false;
cc.zoom=true;
cc.zoomProxy=true;
controllerPlot.target.bind("jqplotZoom",plotZoom);
controllerPlot.target.bind("jqplotResetZoom",plotReset);
function plotZoom(ev,gridpos,datapos,plot,cursor){tc.doZoom(gridpos,datapos,targetPlot,cursor);
}function plotReset(ev,plot,cursor){var cax=cursor._zoom.axes;
var axes=targetPlot.axes;
var axesLen=axes.length;
for(var ax in axes){axes[ax]._ticks=[];
axes[ax].min=cax[ax].min;
axes[ax].max=cax[ax].max;
axes[ax].autoscale=cax[ax].autoscale;
axes[ax].numberTicks=cax[ax].numberTicks;
axes[ax].tickInterval=cax[ax].tickInterval;
axes[ax].specialFormat=cax[ax].specialFormat;
axes[ax].specialFormatFlag=cax[ax].specialFormatFlag;
axes[ax].useDST=cax[ax].useDST;
axes[ax].daTickInterval=cax[ax].daTickInterval;
var newMin=Number.POSITIVE_INFINITY,newMax=Number.NEGATIVE_INFINITY;
var targetPlotLen=targetPlot.series.length;
for(var i=0;
i<targetPlotLen;
i++){var sObj=targetPlot.series[i];
var dStr=ax.match(/^[xy]/);
if(sObj.show&&sObj[dStr+"axis"]==ax){var minStr=(dStr=="x")?"minX":"minY";
var maxStr=(dStr=="x")?"maxX":"maxY";
if(sObj[minStr]&&sObj[minStr]<newMin){newMin=sObj[minStr];
}if(sObj[maxStr]&&sObj[maxStr]>newMax){newMax=sObj[maxStr];
}}}if(newMin!=Number.POSITIVE_INFINITY){axes[ax].min=(newMin>0&&(newMin*0.9)<0)?0:newMin*0.9;
axes[ax].numberTicks=null;
axes[ax].tickInterval=null;
axes[ax].daTickInterval=null;
}if(newMax!=Number.NEGATIVE_INFINITY){axes[ax].max=newMax*1.1;
axes[ax].numberTicks=null;
axes[ax].tickInterval=null;
axes[ax].daTickInterval=null;
}}targetPlot.redraw();
cursor._zoom.isZoomed=false;
}};
$.jqplot.Cursor.prototype.resetZoom=function(plot,cursor){var axes=plot.axes;
var cax=cursor._zoom.axes;
if((!plot.plugins.cursor.zoomProxy||plot.plugins.cursor.zoomOnController)&&cursor._zoom.isZoomed){for(var ax in axes){axes[ax]._ticks=[];
axes[ax].min=cax[ax].min;
axes[ax].max=cax[ax].max;
axes[ax].autoscale=cax[ax].autoscale;
axes[ax].numberTicks=cax[ax].numberTicks;
axes[ax].tickInterval=cax[ax].tickInterval;
axes[ax].daTickInterval=cax[ax].daTickInterval;
axes[ax].specialFormat=cax[ax].specialFormat;
axes[ax].specialFormatFlag=cax[ax].specialFormatFlag;
axes[ax].useDST=cax[ax].useDST;
}plot.redraw();
cursor._zoom.isZoomed=false;
}else{var ctx=cursor.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}plot.target.trigger("jqplotResetZoom",[plot,cursor]);
};
$.jqplot.Cursor.resetZoom=function(plot){plot.resetZoom();
};
$.jqplot.Cursor.prototype.doZoom=function(gridpos,datapos,plot,cursor){this.performOnZoom(plot);
var c=cursor;
var axes=plot.axes;
var zaxes=c._zoom.axes;
var start=zaxes.start;
var end=zaxes.end;
var min,max,dp,span,newmin,newmax,curax,_numberTicks,ret;
var ctx=plot.plugins.cursor.zoomCanvas._ctx;
var Date=new $.jsDate();
if((c.constrainZoomTo=="none"&&Math.abs(gridpos.x-c._zoom.start[0])>6&&Math.abs(gridpos.y-c._zoom.start[1])>6)||(c.constrainZoomTo=="x"&&Math.abs(gridpos.x-c._zoom.start[0])>6)||(c.constrainZoomTo=="y"&&Math.abs(gridpos.y-c._zoom.start[1])>6)){if(!plot.plugins.cursor.zoomProxy||plot.plugins.cursor.zoomOnController){for(var ax in datapos){if(c._zoom.axes[ax]==undefined){c._zoom.axes[ax]={};
c._zoom.axes[ax].numberTicks=axes[ax].numberTicks;
c._zoom.axes[ax].tickInterval=axes[ax].tickInterval;
c._zoom.axes[ax].autoscale=axes[ax].autoscale;
c._zoom.axes[ax].daTickInterval=axes[ax].daTickInterval;
c._zoom.axes[ax].specialFormat=axes[ax].specialFormat;
c._zoom.axes[ax].specialFormatFlag=axes[ax].specialFormatFlag;
c._zoom.axes[ax].useDST=axes[ax].useDST;
c._zoom.axes[ax].min=axes[ax].min;
var curmin=new $.jsDate(axes[ax].min);
c._zoom.axes[ax].max=axes[ax].max;
var curmax=new $.jsDate(axes[ax].max);
c._zoom.axes[ax].tickFormatString=(axes[ax].tickOptions!=null)?axes[ax].tickOptions.formatString:"";
}if((c.constrainZoomTo=="none")||(c.constrainZoomTo=="x"&&ax.charAt(0)=="x")||(c.constrainZoomTo=="y"&&ax.charAt(0)=="y")){dp=datapos[ax];
if(dp!=null){if(dp>start[ax]){if(c.snapZoomTo!=null){var minDate=$.jsDate.createDate(start[ax]);
newmin=round(minDate,c.snapZoomTo,"down");
var maxDate=$.jsDate.createDate(dp);
newmax=round(maxDate,c.snapZoomTo,"up");
}else{newmin=start[ax];
newmax=dp;
}}else{span=start[ax]-dp;
if(c.snapZoomTo!=null){var minDate=$.jsDate.createDate(start[ax]);
newmin=round(minDate,c.snapZoomTo,"down");
var maxDate=$.jsDate.createDate(dp);
newmax=round(maxDate,c.snapZoomTo,"up");
}else{newmin=start[ax];
newmax=dp;
}}curax=axes[ax];
_numberTicks=null;
if(curax.alignTicks){if(curax.name==="x2axis"&&plot.axes.xaxis.show){_numberTicks=plot.axes.xaxis.numberTicks;
}else{if(curax.name.charAt(0)==="y"&&curax.name!=="yaxis"&&curax.name!=="yMidAxis"&&plot.axes.yaxis.show){_numberTicks=plot.axes.yaxis.numberTicks;
}}}if(this.looseZoom&&(axes[ax].renderer.constructor===$.jqplot.LinearAxisRenderer||axes[ax].renderer.constructor===$.jqplot.LogAxisRenderer)){ret=$.jqplot.LinearTickGenerator(newmin,newmax,curax._scalefact,_numberTicks);
if(axes[ax].tickInset&&ret[0]<axes[ax].min+axes[ax].tickInset*axes[ax].tickInterval){ret[0]+=ret[4];
ret[2]-=1;
}if(axes[ax].tickInset&&ret[1]>axes[ax].max-axes[ax].tickInset*axes[ax].tickInterval){ret[1]-=ret[4];
ret[2]-=1;
}if(axes[ax].renderer.constructor===$.jqplot.LogAxisRenderer&&ret[0]<axes[ax].min){ret[0]+=ret[4];
ret[2]-=1;
}axes[ax].min=ret[0];
axes[ax].max=ret[1];
axes[ax]._autoFormatString=ret[3];
axes[ax].numberTicks=ret[2];
axes[ax].tickInterval=ret[4];
axes[ax].daTickInterval=[ret[4]/1000,"seconds"];
}else{axes[ax].min=newmin;
var rmin=new $.jsDate(newmin).getTime();
axes[ax].max=newmax;
var rmax=new $.jsDate(newmax).getTime();
var nc=new $.jsDate(rmax).diff(rmin,c.snapZoomTo,true);
var tickIntervalStr=(Math.ceil(nc/axes[ax].numberTicks))+" minutes";
axes[ax].tickInterval=tickIntervalStr;
axes[ax].numberTicks=null;
axes[ax].daTickInterval=tickIntervalStr;
}axes[ax]._ticks=[];
}if(axes[ax].autoscaleOnZoom!=null){axes[ax].autoscale=this.autoscaleOnZoom;
}}}ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
plot.redraw();
c._zoom.isZoomed=true;
ctx=null;
}this.performAfterZoom(plot);
plot.target.trigger("jqplotZoom",[gridpos,datapos,plot,cursor]);
}};
$.jqplot.preInitHooks.push($.jqplot.Cursor.init);
$.jqplot.postDrawHooks.push($.jqplot.Cursor.postDraw);
function round(dateObj,unit,option){if(unit!=null){switch(unit.toLowerCase()){case"seconds":dateObj.setSeconds((option=="down")?0:60);
dateObj.setMilliseconds(0);
break;
case"minutes":dateObj.setMinutes((option=="down")?0:60);
dateObj.setSeconds(0);
dateObj.setMilliseconds(0);
break;
case"hours":dateObj.setHours((option=="down")?0:24);
dateObj.setMinutes(0);
dateObj.setSeconds(0);
dateObj.setMilliseconds(0);
break;
default:break;
}}return dateObj;
}function updateTooltip(gridpos,datapos,plot){var c=plot.plugins.cursor;
var s="";
var addbr=false;
if(c.showTooltipGridPosition){s=gridpos.x+", "+gridpos.y;
addbr=true;
}if(c.showTooltipUnitPosition){var g;
for(var i=0;
i<c.tooltipAxisGroups.length;
i++){g=c.tooltipAxisGroups[i];
if(addbr){s+="<br />";
}if(c.useAxesFormatters){var xf=plot.axes[g[0]]._ticks[0].formatter;
var yf=plot.axes[g[1]]._ticks[0].formatter;
var xfstr=plot.axes[g[0]]._ticks[0].formatString;
var yfstr=plot.axes[g[1]]._ticks[0].formatString;
s+=xf(xfstr,datapos[g[0]])+", "+yf(yfstr,datapos[g[1]]);
}else{s+=$.jqplot.sprintf(c.tooltipFormatString,datapos[g[0]],datapos[g[1]]);
}addbr=true;
}}if(c.showTooltipDataPosition){var series=plot.series;
var ret=getIntersectingPoints(plot,gridpos.x,gridpos.y);
var addbr=false;
for(var i=0;
i<series.length;
i++){if(series[i].show){var idx=series[i].index;
var label=series[i].label.toString();
var cellid=$.inArray(idx,ret.indices);
var sx=undefined;
var sy=undefined;
if(cellid!=-1){var data=ret.data[cellid].data;
if(c.useAxesFormatters){var xf=series[i]._xaxis._ticks[0].formatter;
var yf=series[i]._yaxis._ticks[0].formatter;
var xfstr=series[i]._xaxis._ticks[0].formatString;
var yfstr=series[i]._yaxis._ticks[0].formatString;
sx=xf(xfstr,data[0]);
sy=yf(yfstr,data[1]);
}else{sx=data[0];
sy=data[1];
}if(addbr){s+="<br />";
}s+=$.jqplot.sprintf(c.tooltipFormatString,label,sx,sy);
addbr=true;
}}}}c._tooltipElem.html(s);
}function moveLine(gridpos,plot){var c=plot.plugins.cursor;
var ctx=c.cursorCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
if(c.showVerticalLine){c.shapeRenderer.draw(ctx,[[gridpos.x,0],[gridpos.x,ctx.canvas.height]]);
}if(c.showHorizontalLine){c.shapeRenderer.draw(ctx,[[0,gridpos.y],[ctx.canvas.width,gridpos.y]]);
}var ret=getIntersectingPoints(plot,gridpos.x,gridpos.y);
if(c.showCursorLegend){var cells=$(plot.targetId+" td.jqplot-cursor-legend-label");
for(var i=0;
i<cells.length;
i++){var idx=$(cells[i]).data("seriesIndex");
var series=plot.series[idx];
var label=series.label.toString();
var cellid=$.inArray(idx,ret.indices);
var sx=undefined;
var sy=undefined;
if(cellid!=-1){var data=ret.data[cellid].data;
if(c.useAxesFormatters){var xf=series._xaxis._ticks[0].formatter;
var yf=series._yaxis._ticks[0].formatter;
var xfstr=series._xaxis._ticks[0].formatString;
var yfstr=series._yaxis._ticks[0].formatString;
sx=xf(xfstr,data[0]);
sy=yf(yfstr,data[1]);
}else{sx=data[0];
sy=data[1];
}}if(plot.legend.escapeHtml){$(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString,label,sx,sy));
}else{$(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString,label,sx,sy));
}}}ctx=null;
}function getIntersectingPoints(plot,x,y){var ret={indices:[],data:[]};
var s,i,d0,d,j,r,p;
var threshold;
var c=plot.plugins.cursor;
for(var i=0;
i<plot.series.length;
i++){s=plot.series[i];
r=s.renderer;
if(s.show){threshold=c.intersectionThreshold;
if(s.showMarker){threshold+=s.markerRenderer.size/2;
}for(var j=0;
j<s.gridData.length;
j++){p=s.gridData[j];
if(c.showVerticalLine){if(Math.abs(x-p[0])<=threshold){ret.indices.push(i);
ret.data.push({seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]});
}}}}}return ret;
}function moveTooltip(gridpos,plot){var c=plot.plugins.cursor;
var elem=c._tooltipElem;
switch(c.tooltipLocation){case"nw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"n":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"ne":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"e":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"s":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"sw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"w":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
}elem.css("left",x);
elem.css("top",y);
elem=null;
}function positionTooltip(plot){var grid=plot._gridPadding;
var c=plot.plugins.cursor;
var elem=c._tooltipElem;
switch(c.tooltipLocation){case"nw":var a=grid.left+c.tooltipOffset;
var b=grid.top+c.tooltipOffset;
elem.css("left",a);
elem.css("top",b);
break;
case"n":var a=(grid.left+(plot._plotDimensions.width-grid.right))/2-elem.outerWidth(true)/2;
var b=grid.top+c.tooltipOffset;
elem.css("left",a);
elem.css("top",b);
break;
case"ne":var a=grid.right+c.tooltipOffset;
var b=grid.top+c.tooltipOffset;
elem.css({right:a,top:b});
break;
case"e":var a=grid.right+c.tooltipOffset;
var b=(grid.top+(plot._plotDimensions.height-grid.bottom))/2-elem.outerHeight(true)/2;
elem.css({right:a,top:b});
break;
case"se":var a=grid.right+c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({right:a,bottom:b});
break;
case"s":var a=(grid.left+(plot._plotDimensions.width-grid.right))/2-elem.outerWidth(true)/2;
var b=grid.bottom+c.tooltipOffset;
elem.css({left:a,bottom:b});
break;
case"sw":var a=grid.left+c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({left:a,bottom:b});
break;
case"w":var a=grid.left+c.tooltipOffset;
var b=(grid.top+(plot._plotDimensions.height-grid.bottom))/2-elem.outerHeight(true)/2;
elem.css({left:a,top:b});
break;
default:var a=grid.right-c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({right:a,bottom:b});
break;
}elem=null;
}function handleClick(ev,gridpos,datapos,neighbor,plot){ev.preventDefault();
ev.stopImmediatePropagation();
var c=plot.plugins.cursor;
if(c.clickReset){c.resetZoom(plot,c);
}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}return false;
}function handleDblClick(ev,gridpos,datapos,neighbor,plot){ev.preventDefault();
ev.stopImmediatePropagation();
var c=plot.plugins.cursor;
if(c.dblClickReset){c.resetZoom(plot,c);
}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}return false;
}function handleMouseLeave(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
c.onGrid=false;
if(c.show){$(ev.target).css("cursor",c.previousCursor);
if(c.showTooltip&&!(c._zoom.zooming&&c.showTooltipOutsideZoom&&!c.constrainOutsideZoom)){c._tooltipElem.hide();
}if(c.zoom){c._zoom.gridpos=gridpos;
c._zoom.datapos=datapos;
}if(c.showVerticalLine||c.showHorizontalLine){var ctx=c.cursorCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}if(c.showCursorLegend){var cells=$(plot.targetId+" td.jqplot-cursor-legend-label");
for(var i=0;
i<cells.length;
i++){var idx=$(cells[i]).data("seriesIndex");
var series=plot.series[idx];
var label=series.label.toString();
if(plot.legend.escapeHtml){$(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString,label,undefined,undefined));
}else{$(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString,label,undefined,undefined));
}}}}}function handleMouseEnter(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
c.onGrid=true;
if(c.show){c.previousCursor=ev.target.style.cursor;
ev.target.style.cursor=c.style;
if(c.showTooltip){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}else{positionTooltip(plot);
}c._tooltipElem.show();
}if(c.showVerticalLine||c.showHorizontalLine){moveLine(gridpos,plot);
}}}function handleMouseMove(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
if(c.show){if(c.showTooltip){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}}if(c.showVerticalLine||c.showHorizontalLine){moveLine(gridpos,plot);
}}}function getEventPosition(ev){var plot=ev.data.plot;
var go=plot.eventCanvas._elem.offset();
var gridPos={x:ev.pageX-go.left,y:ev.pageY-go.top};
var dataPos={xaxis:null,yaxis:null,x2axis:null,y2axis:null,y3axis:null,y4axis:null,y5axis:null,y6axis:null,y7axis:null,y8axis:null,y9axis:null,yMidAxis:null};
var an=["xaxis","yaxis","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis"];
var ax=plot.axes;
var n,axis;
for(n=11;
n>0;
n--){axis=an[n-1];
if(ax[axis].show){dataPos[axis]=ax[axis].series_p2u(gridPos[axis.charAt(0)]);
}}return{offsets:go,gridPos:gridPos,dataPos:dataPos};
}function handleZoomMove(ev){var plot=ev.data.plot;
var c=plot.plugins.cursor;
if(c.show&&c.zoom&&c._zoom.started&&!c.zoomTarget){var ctx=c.zoomCanvas._ctx;
var positions=getEventPosition(ev);
var gridpos=positions.gridPos;
var datapos=positions.dataPos;
c._zoom.gridpos=gridpos;
c._zoom.datapos=datapos;
c._zoom.zooming=true;
var xpos=gridpos.x;
var ypos=gridpos.y;
var height=ctx.canvas.height;
var width=ctx.canvas.width;
if(c.showTooltip&&!c.onGrid&&c.showTooltipOutsideZoom){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}}if(c.constrainZoomTo=="x"){c._zoom.end=[xpos,height];
}else{if(c.constrainZoomTo=="y"){c._zoom.end=[width,ypos];
}else{c._zoom.end=[xpos,ypos];
}}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}drawZoomBox.call(c);
ctx=null;
}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
$(document).one("mouseup.jqplot_cursor",{plot:plot},handleMouseUp);
var axes=plot.axes;
if(document.onselectstart!=undefined){c._oldHandlers.onselectstart=document.onselectstart;
document.onselectstart=function(){return false;
};
}if(document.ondrag!=undefined){c._oldHandlers.ondrag=document.ondrag;
document.ondrag=function(){return false;
};
}if(document.onmousedown!=undefined){c._oldHandlers.onmousedown=document.onmousedown;
document.onmousedown=function(){return false;
};
}if(c.zoom){if(!c.zoomProxy){var ctx=c.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}if(c.constrainZoomTo=="x"){c._zoom.start=[gridpos.x,0];
}else{if(c.constrainZoomTo=="y"){c._zoom.start=[0,gridpos.y];
}else{c._zoom.start=[gridpos.x,gridpos.y];
}}c._zoom.started=true;
for(var ax in datapos){c._zoom.axes.start[ax]=datapos[ax];
}$(document).bind("mousemove.jqplotCursor",{plot:plot},handleZoomMove);
}}function handleMouseUp(ev){var plot=ev.data.plot;
var c=plot.plugins.cursor;
if(c.zoom&&c._zoom.zooming&&!c.zoomTarget){var xpos=c._zoom.gridpos.x;
var ypos=c._zoom.gridpos.y;
var datapos=c._zoom.datapos;
var height=c.zoomCanvas._ctx.canvas.height;
var width=c.zoomCanvas._ctx.canvas.width;
var axes=plot.axes;
if(c.constrainOutsideZoom&&!c.onGrid){if(xpos<0){xpos=0;
}else{if(xpos>width){xpos=width;
}}if(ypos<0){ypos=0;
}else{if(ypos>height){ypos=height;
}}for(var axis in datapos){if(datapos[axis]){if(axis.charAt(0)=="x"){datapos[axis]=axes[axis].series_p2u(xpos);
}else{datapos[axis]=axes[axis].series_p2u(ypos);
}}}}if(c.constrainZoomTo=="x"){ypos=height;
}else{if(c.constrainZoomTo=="y"){xpos=width;
}}c._zoom.end=[xpos,ypos];
c._zoom.gridpos={x:xpos,y:ypos};
c.doZoom(c._zoom.gridpos,datapos,plot,c);
}c._zoom.started=false;
c._zoom.zooming=false;
$(document).unbind("mousemove.jqplotCursor",handleZoomMove);
if(document.onselectstart!=undefined&&c._oldHandlers.onselectstart!=null){document.onselectstart=c._oldHandlers.onselectstart;
c._oldHandlers.onselectstart=null;
}if(document.ondrag!=undefined&&c._oldHandlers.ondrag!=null){document.ondrag=c._oldHandlers.ondrag;
c._oldHandlers.ondrag=null;
}if(document.onmousedown!=undefined&&c._oldHandlers.onmousedown!=null){document.onmousedown=c._oldHandlers.onmousedown;
c._oldHandlers.onmousedown=null;
}}$.jqplot.CursorLegendRenderer=function(options){$.jqplot.TableLegendRenderer.call(this,options);
this.formatString="%s";
};
$.jqplot.CursorLegendRenderer.prototype=new $.jqplot.TableLegendRenderer();
$.jqplot.CursorLegendRenderer.prototype.constructor=$.jqplot.CursorLegendRenderer;
$.jqplot.CursorLegendRenderer.prototype.draw=function(){if(this._elem){this._elem.emptyForce();
this._elem=null;
}if(this.show){var series=this._series,s;
var elem=document.createElement("div");
this._elem=$(elem);
elem=null;
this._elem.addClass("jqplot-legend jqplot-cursor-legend");
this._elem.css("position","absolute");
var pad=false;
for(var i=0;
i<series.length;
i++){s=series[i];
if(s.show&&s.showLabel){var lt=$.jqplot.sprintf(this.formatString,s.label.toString());
if(lt){var color=s.color;
if(s._stack&&!s.fill){color="";
}addrow.call(this,lt,color,pad,i);
pad=true;
}for(var j=0;
j<$.jqplot.addLegendRowHooks.length;
j++){var item=$.jqplot.addLegendRowHooks[j].call(this,s);
if(item){addrow.call(this,item.label,item.color,pad);
pad=true;
}}}}series=s=null;
delete series;
delete s;
}function addrow(label,color,pad,idx){var rs=(pad)?this.rowSpacing:"0";
var tr=$('<tr class="jqplot-legend jqplot-cursor-legend"></tr>').appendTo(this._elem);
tr.data("seriesIndex",idx);
$('<td class="jqplot-legend jqplot-cursor-legend-swatch" style="padding-top:'+rs+';"><div style="border:1px solid #cccccc;padding:0.2em;"><div class="jqplot-cursor-legend-swatch" style="background-color:'+color+';"></div></div></td>').appendTo(tr);
var td=$('<td class="jqplot-legend jqplot-cursor-legend-label" style="vertical-align:middle;padding-top:'+rs+';"></td>');
td.appendTo(tr);
td.data("seriesIndex",idx);
if(this.escapeHtml){td.text(label);
}else{td.html(label);
}tr=null;
td=null;
}return this._elem;
};
})(jQuery);
function drawZoomBox(){var start=this._zoom.start;
var end=this._zoom.end;
var ctx=this.zoomCanvas._ctx;
var l,t,h,w;
if(end[0]>start[0]){l=start[0];
w=end[0]-start[0];
}else{l=end[0];
w=start[0]-end[0];
}if(end[1]>start[1]){t=start[1];
h=end[1]-start[1];
}else{t=end[1];
h=start[1]-end[1];
}ctx.fillStyle="rgba(0,0,0,0.2)";
ctx.strokeStyle="#999999";
ctx.lineWidth=1;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx.fillRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx.clearRect(l,t,w,h);
ctx.strokeRect(l,t,w,h);
ctx=null;
}(function($){$.jqplot.DateAxisRenderer=function(){$.jqplot.LinearAxisRenderer.call(this);
this.date=new $.jsDate();
};
var second=1000;
var minute=60*second;
var hour=60*minute;
var day=24*hour;
var week=7*day;
var month=30.4368499*day;
var year=365.242199*day;
var daysInMonths=[31,28,31,30,31,30,31,30,31,30,31,30];
var niceFormatStrings=["%M:%S.%#N","%M:%S.%#N","%M:%S.%#N","%M:%S","%M:%S","%M:%S","%M:%S","%H:%M:%S","%H:%M:%S","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%a %H:%M","%a %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%v","%v","%v","%v","%v","%v","%v"];
var niceIntervals=[0.1*second,0.2*second,0.5*second,second,2*second,5*second,10*second,15*second,30*second,minute,2*minute,5*minute,10*minute,15*minute,30*minute,hour,2*hour,4*hour,6*hour,8*hour,12*hour,day,2*day,3*day,4*day,5*day,week,2*week];
var niceMonthlyIntervals=[];
function bestDateInterval(min,max,titarget){var badness=Number.MAX_VALUE;
var temp,bestTi,bestfmt;
for(var i=0,l=niceIntervals.length;
i<l;
i++){temp=Math.abs(titarget-niceIntervals[i]);
if(temp<badness){badness=temp;
bestTi=niceIntervals[i];
bestfmt=niceFormatStrings[i];
}}return[bestTi,bestfmt];
}$.jqplot.DateAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.DateAxisRenderer.prototype.constructor=$.jqplot.DateAxisRenderer;
$.jqplot.DateTickFormatter=function(format,val){if(!format){format="%Y/%m/%d";
}return $.jsDate.strftime(val,format);
};
$.jqplot.DateTickFormatterSpecialPhys=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var df=MP_Util.GetDateFormatter();
var iDate2=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
var iDate4=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var curDtTm=new Date;
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){var nFormat="<span>"+iDate2+"</span><br/><span>&nbsp;</span>%H:%M";
}else{var nFormat="<span>%H:%M</span>";
}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterSpecial=function(format,val){var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span><span class='jqplot-elem-hideOnHover nowTime'>%H:%M</span>";
return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterXSpecial=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span>";
}else{if(siDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M<br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-hideOnHover'>%#m/%#d/%y</span>";
}else{nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterX2Special=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var df=MP_Util.GetDateFormatter();
var iDate2=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
var iDate4=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>"+iDate4+"&nbsp;%H:%M</span>";
}else{if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="<span class='jqplot-elem-showOnHover'>"+iDate4+"</span><span class='jqplot-elem-hideOnHover'>"+iDate2+"</span><br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-showOnHover'>&nbsp;</span>%H:%M";
}else{nFormat="<span class='jqplot-elem-showOnHover'>"+iDate4+"</span>&nbsp;<br class='jqplot-elem-hideOnHover'/>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterYSpecial=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span>";
}else{if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="%#m/%#d/<span class='jqplot-elem-showOnHover'>%Y</span><span class='jqplot-elem-hideOnHover'>%y</span><br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-showOnHover'>&nbsp;</span>%H:%M";
}else{nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateAxisRenderer.prototype.init=function(options){this.tickOptions.formatter=$.jqplot.DateTickFormatter;
this.tickInset=0;
this.drawBaseline=true;
this.baselineWidth=null;
this.baselineColor=null;
this.daTickInterval=null;
this._daTickInterval=null;
$.extend(true,this,options);
if(this.specialFormat&&this.specialFormatFlag!=null&&this.specialFormatFlag==3){this.tickOptions.formatter=$.jqplot.DateTickFormatterSpecialPhys;
}else{if(this.specialFormat&&this.specialFormatFlag!=null&&this.specialFormatFlag==1){this.tickOptions.formatter=$.jqplot.DateTickFormatterSpecial;
}else{if(this.specialFormat&&this.name.match("xaxis")!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterXSpecial;
}else{if(this.specialFormat&&this.name.match(/^x/)!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterX2Special;
}else{if(this.specialFormat&&this.name.match(/^y/)!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterYSpecial;
}else{this.tickOptions.formatter=$.jqplot.DateTickFormatter;
}}}}}var db=this._dataBounds,stats,sum,s,d,pd,sd,intv;
for(var i=0;
i<this._series.length;
i++){stats={intervals:[],frequencies:{},sortedIntervals:[],min:null,max:null,mean:null};
sum=0;
s=this._series[i];
d=s.data;
pd=s._plotData;
sd=s._stackData;
intv=0;
for(var j=0;
j<d.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){d[j][0]=new $.jsDate(d[j][0]).getTime();
pd[j][0]=new $.jsDate(d[j][0]).getTime();
sd[j][0]=new $.jsDate(d[j][0]).getTime();
if((d[j][0]!=null&&d[j][0]<db.min)||db.min==null){db.min=d[j][0];
}if((d[j][0]!=null&&d[j][0]>db.max)||db.max==null){db.max=d[j][0];
}if(j>0){intv=Math.abs(d[j][0]-d[j-1][0]);
stats.intervals.push(intv);
if(stats.frequencies.hasOwnProperty(intv)){stats.frequencies[intv]+=1;
}else{stats.frequencies[intv]=1;
}}sum+=intv;
}else{d[j][1]=new $.jsDate(d[j][1]).getTime();
pd[j][1]=new $.jsDate(d[j][1]).getTime();
sd[j][1]=new $.jsDate(d[j][1]).getTime();
if((d[j][1]!=null&&d[j][1]<db.min)||db.min==null){db.min=d[j][1];
}if((d[j][1]!=null&&d[j][1]>db.max)||db.max==null){db.max=d[j][1];
}if(j>0){intv=Math.abs(d[j][1]-d[j-1][1]);
stats.intervals.push(intv);
if(stats.frequencies.hasOwnProperty(intv)){stats.frequencies[intv]+=1;
}else{stats.frequencies[intv]=1;
}}}sum+=intv;
}if(s.renderer.bands){if(s.renderer.bands.hiData.length){var bd=s.renderer.bands.hiData;
for(var j=0,l=bd.length;
j<l;
j++){if(this.name==="xaxis"||this.name==="x2axis"){bd[j][0]=new $.jsDate(bd[j][0]).getTime();
if((bd[j][0]!=null&&bd[j][0]>db.max)||db.max==null){db.max=bd[j][0];
}}else{bd[j][1]=new $.jsDate(bd[j][1]).getTime();
if((bd[j][1]!=null&&bd[j][1]>db.max)||db.max==null){db.max=bd[j][1];
}}}}if(s.renderer.bands.lowData.length){var bd=s.renderer.bands.lowData;
for(var j=0,l=bd.length;
j<l;
j++){if(this.name==="xaxis"||this.name==="x2axis"){bd[j][0]=new $.jsDate(bd[j][0]).getTime();
if((bd[j][0]!=null&&bd[j][0]<db.min)||db.min==null){db.min=bd[j][0];
}}else{bd[j][1]=new $.jsDate(bd[j][1]).getTime();
if((bd[j][1]!=null&&bd[j][1]<db.min)||db.min==null){db.min=bd[j][1];
}}}}}var tempf=0,tempn=0;
for(var n in stats.frequencies){stats.sortedIntervals.push({interval:n,frequency:stats.frequencies[n]});
}stats.sortedIntervals.sort(function(a,b){return b.frequency-a.frequency;
});
stats.min=$.jqplot.arrayMin(stats.intervals);
stats.max=$.jqplot.arrayMax(stats.intervals);
stats.mean=sum/d.length;
this._intervalStats.push(stats);
stats=sum=s=d=pd=sd=null;
}db=null;
};
$.jqplot.DateAxisRenderer.prototype.reset=function(){this.min=this._options.min;
this.max=this._options.max;
this.tickInterval=this._options.tickInterval;
this.numberTicks=this._options.numberTicks;
this._autoFormatString="";
if(this._overrideFormatString&&this.tickOptions&&this.tickOptions.formatString){this.tickOptions.formatString="";
}this.daTickInterval=this._daTickInterval;
this.useDST=this._useDST;
this.specialFormat=this._specialFormat;
this.specialFormatFlag=this._specialFormatFlag;
};
$.jqplot.DateAxisRenderer.prototype.createTicks=function(){var ticks=this._ticks;
var userTicks=this.ticks;
var name=this.name;
var db=this._dataBounds;
var midnightExists=false;
var dim,interval;
var min,max;
var pos1,pos2;
var tt,i;
if(this.specialFormat){if(this.specialFormatFlag==null||(this.specialFormatFlag!=1&&this.specialFormatFlag!=3)){var minDtTm=$.jsDate.createDate(this.min);
var maxDtTm=$.jsDate.createDate(this.max);
DAR_HELPERS.createdNow=true;
var tickVals=DAR_HELPERS.DynamicRangeTickCalc(minDtTm.getTime(),maxDtTm.getTime());
this.numberTicks=tickVals.length;
userTicks=tickVals;
midnightExists=false;
for(var i=0;
i<userTicks.length;
i++){var tDate=$.jsDate.createDate(userTicks[i]);
if(tDate.getMilliseconds()==0&&tDate.getSeconds()==0&&tDate.getMinutes()==0&&tDate.getHours()==0){midnightExists=true;
}}this.min=tickVals[0];
this.max=tickVals[tickVals.length-1];
this.daTickInterval=[(this.max-this.min)/(this.numberTicks-1)/1000,"seconds"];
}else{if(this.specialFormatFlag==3){var threshold=30;
var insetMult=1;
var tickInterval=this.tickInterval;
min=((this.min!=null)?new $.jsDate(this.min).getTime():db.min);
max=((this.max!=null)?new $.jsDate(this.max).getTime():db.max);
var range=max-min;
if(this.tickOptions==null||!this.tickOptions.formatString){this._overrideFormatString=true;
}}else{if(this.specialFormatFlag==1){userTicks=[new Date().getTime()];
}}}if(this.specialFormatFlag==2){var tempTicks=[],cDiffOpt=null,cDiff=null;
for(var i=0;
i<userTicks.length;
i++){var t1Time=(userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i];
if(i==0){tempTicks.push(t1Time);
}else{var t2Time=(userTicks[i-1].constructor==Array)?userTicks[i-1][0]:userTicks[i-1];
cDiff=t1Time-t2Time;
var t1Date=$.jsDate.createDate(t1Time),t2Date=$.jsDate.createDate(t2Time);
eval(["t1Date.set",DAR_HELPERS.tickDiff[1],"(t1Date.get",DAR_HELPERS.tickDiff[1],"()-DAR_HELPERS.tickDiff[0]);"].join(""));
if(t1Date.getTime()==t2Date.getTime()){tempTicks.push(Math.round(t2Time+(cDiff/2)));
tempTicks.push(t1Time);
}else{if(DAR_HELPERS.tickDiff[0]==1&&DAR_HELPERS.tickDiff[1]=="Date"){t2Date.setHours(t2Date.getHours()+12);
}else{if(DAR_HELPERS.tickDiff[0]==1&&DAR_HELPERS.tickDiff[1]=="Month"){t2Date.setDate(t2Date.getDate()+15);
}else{eval(["t2Date.set",DAR_HELPERS.tickDiff[1],"(t2Date.get",DAR_HELPERS.tickDiff[1],"()+Math.round(DAR_HELPERS.tickDiff[0]/2));"].join(""));
}}var t2TempTime=t2Date.getTime();
if(t2TempTime>=t1Time){tempTicks.push(t1Time);
}else{tempTicks.push(t2TempTime);
tempTicks.push(t1Time);
}}}}userTicks=tempTicks;
this.numberTicks=userTicks.length;
}}if(userTicks.length){if(this.specialFormatFlag==3){for(i=0;
i<userTicks.length;
i++){var ut=userTicks[i];
var t=new this.tickRenderer(this.tickOptions);
if(ut.constructor==Array){t.value=new $.jsDate(ut[0]).getTime();
t.label=ut[1];
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}else{t.value=new $.jsDate(ut).getTime();
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}}}else{for(i=0;
i<userTicks.length;
i++){var t=new this.tickRenderer(this.tickOptions);
t.value=$.jsDate.createDate((userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i]).getTime();
if(t.value>this.max){continue;
}t.label=(userTicks[i].constructor==Array)?userTicks[i][1]:null;
if(this.specialFormat){if(this.specialFormatFlag!=null&&this.specialFormatFlag==2){if(i==0||i==(userTicks.length-1)){t.showLabel=false;
t.showGridline=false;
t.showMark=false;
}else{if((i%2)==0){t.showGridline=false;
t.showLabel=true;
t.showMark=false;
}else{t.showGridline=true;
t.showLabel=false;
t.showMark=true;
}}}else{if(userTicks.length>=2&&i==(userTicks.length-1)&&userTicks[userTicks.length-1]==this.max){var t1Date=$.jsDate.createDate((userTicks[i-1].constructor==Array)?userTicks[i-1][0]:userTicks[i-1]);
var t2Date=$.jsDate.createDate((userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i]);
eval(["t2Date.set",DAR_HELPERS.tickDiff[1],"(t2Date.get",DAR_HELPERS.tickDiff[1],"()-DAR_HELPERS.tickDiff[0]);"].join(""));
if(t1Date.getTime()!=t2Date.getTime()){t.showLabel=false;
t.showGridline=false;
t.showMark=false;
}}}}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}}this.numberTicks=this._ticks.length;
this.min=this._ticks[0].value;
this.max=this._ticks[this.numberTicks-1].value;
this.daTickInterval=[(this.max-this.min)/(this.numberTicks-1)/1000,"seconds"];
}else{if(this.min==null&&this.max==null){var opts=$.extend(true,{},this.tickOptions,{name:this.name,value:null});
var nttarget,titarget;
if(!this.tickInterval&&!this.numberTicks){var tdim=Math.max(dim,threshold+1);
var spacingFactor=100;
if(this.tickRenderer===$.jqplot.CanvasAxisTickRenderer&&this.tickOptions.angle){spacingFactor=115-40*Math.abs(Math.sin(this.tickOptions.angle/180*Math.PI));
}nttarget=Math.ceil((tdim-threshold)/spacingFactor+1);
titarget=(max-min)/(nttarget-1);
}else{if(this.tickInterval){titarget=this.tickInterval;
}else{if(this.numberTicks){nttarget=this.numberTicks;
titarget=(max-min)/(nttarget-1);
}}}if(titarget<=19*day){var ret=bestDateInterval(min,max,titarget);
var tempti=ret[0];
this._autoFormatString=ret[1];
min=Math.floor(min/tempti)*tempti;
min=new $.jsDate(min);
min=min.getTime()+min.getUtcOffset();
nttarget=Math.ceil((max-min)/tempti)+1;
this.min=min;
this.max=min+(nttarget-1)*tempti;
if(this.max<max){this.max+=tempti;
nttarget+=1;
}this.tickInterval=tempti;
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){opts.value=this.min+i*tempti;
t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=this.tickInterval;
}else{if(titarget<=9*month){this._autoFormatString="%v";
var intv=Math.round(titarget/month);
if(intv<1){intv=1;
}else{if(intv>6){intv=6;
}}var mstart=new $.jsDate(min).setDate(1).setHours(0,0,0,0);
var tempmend=new $.jsDate(max);
var mend=new $.jsDate(max).setDate(1).setHours(0,0,0,0);
if(tempmend.getTime()!==mend.getTime()){mend=mend.add(1,"month");
}var nmonths=mend.diff(mstart,"month");
nttarget=Math.ceil(nmonths/intv)+1;
this.min=mstart.getTime();
this.max=mstart.clone().add((nttarget-1)*intv,"month").getTime();
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){if(i===0){opts.value=mstart.getTime();
}else{opts.value=mstart.add(intv,"month").getTime();
}t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=intv*month;
}else{this._autoFormatString="%v";
var intv=Math.round(titarget/year);
if(intv<1){intv=1;
}var mstart=new $.jsDate(min).setMonth(0,1).setHours(0,0,0,0);
var mend=new $.jsDate(max).add(1,"year").setMonth(0,1).setHours(0,0,0,0);
var nyears=mend.diff(mstart,"year");
nttarget=Math.ceil(nyears/intv)+1;
this.min=mstart.getTime();
this.max=mstart.clone().add((nttarget-1)*intv,"year").getTime();
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){if(i===0){opts.value=mstart.getTime();
}else{opts.value=mstart.add(intv,"year").getTime();
}t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=intv*year;
}}}else{if(name.match(/^x/)){dim=this._plotDimensions.width;
}else{dim=this._plotDimensions.height;
}if(this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null;
}if(this.tickInterval!=null){if(Number(this.tickInterval)){this.daTickInterval=[Number(this.tickInterval),"seconds"];
}else{if(typeof this.tickInterval=="string"){var parts=this.tickInterval.split(" ");
if(parts.length==1){this.daTickInterval=[1,parts[0]];
}else{if(parts.length==2){this.daTickInterval=[parts[0],parts[1]];
}}}}}min=((this.min!=null)?$.jsDate.createDate(this.min).getTime():db.min);
max=((this.max!=null)?$.jsDate.createDate(this.max).getTime():db.max);
if(min==max){var adj=24*60*60*500;
min-=adj;
max+=adj;
}var range=max-min;
var rmin,rmax;
rmin=(this.min!=null)?$.jsDate.createDate(this.min).getTime():min-range/2*(this.padMin-1);
rmax=(this.max!=null)?$.jsDate.createDate(this.max).getTime():max+range/2*(this.padMax-1);
this.min=rmin;
this.max=rmax;
range=this.max-this.min;
if(this.numberTicks==null){if(this.daTickInterval!=null){var max=$.jsDate.createDate(this.max);
var nc=new $.jsDate(max).diff(this.min,this.daTickInterval[1],true);
this.numberTicks=Math.ceil(nc/this.daTickInterval[0])+1;
var min=$.jsDate.createDate(this.min);
this.max=new $.jsDate(min).add((this.numberTicks-1)*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}else{if(dim>200){this.numberTicks=parseInt(3+(dim-200)/100,10);
}else{this.numberTicks=2;
}}}insetMult=range/(this.numberTicks-1)/1000;
if(this.daTickInterval==null){this.daTickInterval=[insetMult,"seconds"];
}if(this.specialFormatFlag==3){for(var i=0;
i<this.numberTicks;
i++){var min=new $.jsDate(this.min);
tt=min.add(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
var t=new this.tickRenderer(this.tickOptions);
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(tt,this.name);
this._ticks.push(t);
}}else{for(var i=0;
i<this.numberTicks;
i++){var min=$.jsDate.createDate(this.min);
if(this.useDST){tt=new $.jsDate(min).add(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}else{tt=new $.jsDate(min).addNoDST(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}var t=new this.tickRenderer(this.tickOptions);
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(tt,this.name);
this._ticks.push(t);
}}}}if(this._daTickInterval==null){this._daTickInterval=this.daTickInterval;
}};
})(jQuery);
var DAR_HELPERS=function(){return{createdNow:false,tickDiff:null,minuteCntPerTickSpecial:0,DynamicRangeTickCalc:function(iMin,iMax){var unitSize={second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,month:30*24*60*60*1000,year:365.2425*24*60*60*1000};
var minDtTm=$.jsDate.createDate(iMin);
var maxDtTm=$.jsDate.createDate(iMax);
var dtTmDiff=iMax-iMin;
var tickVals=[],curDtTm=new Date(),noNowTick=false;
var minuteCnt=DAR_HELPERS.minuteCntPerTickSpecial;
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
if(minuteCnt>0){DAR_HELPERS.tickDiff=[minuteCnt,"Minutes"];
if((maxDtTm.getMinutes()%minuteCnt)!=0||((maxDtTm.getMinutes()%minuteCnt)==0&&(maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setMinutes(maxDtTm.getMinutes()+(minuteCnt-(maxDtTm.getMinutes()%minuteCnt)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
tickVals.push(maxDtTm.getTime());
DAR_HELPERS.createdNow=false;
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMinutes(maxDtTm.getMinutes()-minuteCnt);
tickVals.push(maxDtTm.getTime());
}tickVals.reverse();
return tickVals;
}else{if(dtTmDiff<=(2*unitSize.second)){DAR_HELPERS.tickDiff=[250,"Milliseconds"];
if((maxDtTm.getMilliseconds()%250)!=0){maxDtTm.setMilliseconds(maxDtTm.getMilliseconds()+(250-(maxDtTm.getMilliseconds()%250)));
}tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMilliseconds(maxDtTm.getMilliseconds()-250);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.minute)+(15*unitSize.second))){DAR_HELPERS.tickDiff=[15,"Seconds"];
if((maxDtTm.getSeconds()%15)!=0||((maxDtTm.getSeconds()%15)==0&&maxDtTm.getMilliseconds()>0)){maxDtTm.setSeconds(maxDtTm.getSeconds()+(15-(maxDtTm.getSeconds()%15)));
}maxDtTm.setMilliseconds(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setSeconds(maxDtTm.getSeconds()-15);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.hour)+(15*unitSize.minute))){DAR_HELPERS.tickDiff=[15,"Minutes"];
if((maxDtTm.getMinutes()%15)!=0||((maxDtTm.getMinutes()%15)==0&&(maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setMinutes(maxDtTm.getMinutes()+(15-(maxDtTm.getMinutes()%15)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMinutes(maxDtTm.getMinutes()-15);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=(unitSize.day+(2*unitSize.hour))){DAR_HELPERS.tickDiff=[2,"Hours"];
if((maxDtTm.getHours()%2)!=0||((maxDtTm.getHours()%2)==0&&(maxDtTm.getMinutes()>0||maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setHours(maxDtTm.getHours()+(2-(maxDtTm.getHours()%2)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setHours(maxDtTm.getHours()-2);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.day)+(4*unitSize.hour))){DAR_HELPERS.tickDiff=[4,"Hours"];
if((maxDtTm.getHours()%4)!=0||((maxDtTm.getHours()%4)==0&&(maxDtTm.getMinutes()>0||maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setHours(maxDtTm.getHours()+(4-(maxDtTm.getHours()%4)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setHours(maxDtTm.getHours()-4);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=(15*unitSize.day)){DAR_HELPERS.tickDiff=[1,"Date"];
if(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0){maxDtTm.setDate(maxDtTm.getDate()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setDate(maxDtTm.getDate()-1);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.month)+(7*unitSize.day))){DAR_HELPERS.tickDiff=[7,"Date"];
if(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0){maxDtTm.setDate(maxDtTm.getDate()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setDate(maxDtTm.getDate()-7);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff>((2*unitSize.month)+(7*unitSize.day))&&dtTmDiff<=((12*unitSize.month))){DAR_HELPERS.tickDiff=[1,"Month"];
if(maxDtTm.getDate()>1||(maxDtTm.getDate()==1&&(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0))){maxDtTm.setMonth(maxDtTm.getMonth()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
maxDtTm.setDate(1);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMonth(maxDtTm.getMonth()-1);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff>((12*unitSize.month))){DAR_HELPERS.tickDiff=[12,"Month"];
if(maxDtTm.getDate()>12||(maxDtTm.getDate()==12&&(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0))){maxDtTm.setMonth(maxDtTm.getMonth()+12);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
maxDtTm.setDate(12);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMonth(maxDtTm.getMonth()-12);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}}}}}}}}}}tickVals.reverse();
if(tickVals[tickVals.length-1]>new Date().getTime()){tickVals[tickVals.length-1]=new Date().getTime();
}return tickVals;
}};
}();
(function($){$.jqplot.DonutRenderer=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.DonutRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.DonutRenderer.prototype.constructor=$.jqplot.DonutRenderer;
$.jqplot.DonutRenderer.prototype.init=function(options,plot){this.diameter=null;
this.innerDiameter=null;
this.thickness=null;
this.padding=20;
this.sliceMargin=0;
this.ringMargin=null;
this.fill=true;
this.shadowOffset=2;
this.shadowAlpha=0.07;
this.shadowDepth=5;
this.highlightMouseOver=true;
this.highlightMouseDown=false;
this.highlightColors=[];
this.dataLabels="percent";
this.showDataLabels=false;
this.dataLabelFormatString=null;
this.dataLabelThreshold=3;
this.dataLabelPositionFactor=0.4;
this.dataLabelNudge=0;
this.startAngle=0;
this.tickRenderer=$.jqplot.DonutTickRenderer;
this._drawData=true;
this._type="donut";
if(options.highlightMouseDown&&options.highlightMouseOver==null){options.highlightMouseOver=false;
}$.extend(true,this,options);
if(this.diameter!=null){this.diameter=this.diameter-this.sliceMargin;
}this._diameter=null;
this._innerDiameter=null;
this._radius=null;
this._innerRadius=null;
this._thickness=null;
this._previousSeries=[];
this._numberSeries=1;
this._sliceAngles=[];
this._highlightedPoint=null;
if(this.highlightColors.length==0){for(var i=0;
i<this.seriesColors.length;
i++){var rgba=$.jqplot.getColorComponents(this.seriesColors[i]);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>570)?newrgb[j]*0.8:newrgb[j]+0.3*(255-newrgb[j]);
newrgb[j]=parseInt(newrgb[j],10);
}this.highlightColors.push("rgb("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+")");
}}plot.postParseOptionsHooks.addOnce(postParseOptions);
plot.postInitHooks.addOnce(postInit);
plot.eventListenerHooks.addOnce("jqplotMouseMove",handleMove);
plot.eventListenerHooks.addOnce("jqplotMouseDown",handleMouseDown);
plot.eventListenerHooks.addOnce("jqplotMouseUp",handleMouseUp);
plot.eventListenerHooks.addOnce("jqplotClick",handleClick);
plot.eventListenerHooks.addOnce("jqplotRightClick",handleRightClick);
plot.postDrawHooks.addOnce(postPlotDraw);
};
$.jqplot.DonutRenderer.prototype.setGridData=function(plot){var stack=[];
var td=[];
var sa=this.startAngle/180*Math.PI;
var tot=0;
this._drawData=false;
for(var i=0;
i<this.data.length;
i++){if(this.data[i][1]!=0){this._drawData=true;
}stack.push(this.data[i][1]);
td.push([this.data[i][0]]);
if(i>0){stack[i]+=stack[i-1];
}tot+=this.data[i][1];
}var fact=Math.PI*2/stack[stack.length-1];
for(var i=0;
i<stack.length;
i++){td[i][1]=stack[i]*fact;
td[i][2]=this.data[i][1]/tot;
}this.gridData=td;
};
$.jqplot.DonutRenderer.prototype.makeGridData=function(data,plot){var stack=[];
var td=[];
var tot=0;
var sa=this.startAngle/180*Math.PI;
this._drawData=false;
for(var i=0;
i<data.length;
i++){if(this.data[i][1]!=0){this._drawData=true;
}stack.push(data[i][1]);
td.push([data[i][0]]);
if(i>0){stack[i]+=stack[i-1];
}tot+=data[i][1];
}var fact=Math.PI*2/stack[stack.length-1];
for(var i=0;
i<stack.length;
i++){td[i][1]=stack[i]*fact;
td[i][2]=data[i][1]/tot;
}return td;
};
$.jqplot.DonutRenderer.prototype.drawSlice=function(ctx,ang1,ang2,color,isShadow){var r=this._diameter/2;
var ri=r-this._thickness;
var fill=this.fill;
ctx.save();
ctx.translate(this._center[0],this._center[1]);
if(isShadow){for(var i=0;
i<this.shadowDepth;
i++){ctx.save();
ctx.translate(this.shadowOffset*Math.cos(this.shadowAngle/180*Math.PI),this.shadowOffset*Math.sin(this.shadowAngle/180*Math.PI));
doDraw();
}}else{doDraw();
}function doDraw(){if(ang2>6.282+this.startAngle){ang2=6.282+this.startAngle;
if(ang1>ang2){ang1=6.281+this.startAngle;
}}if(ang1>=ang2){return;
}ctx.beginPath();
ctx.fillStyle=color;
ctx.strokeStyle=color;
ctx.arc(0,0,r,ang1,ang2,false);
ctx.lineTo(ri*Math.cos(ang2),ri*Math.sin(ang2));
ctx.arc(0,0,ri,ang2,ang1,true);
ctx.closePath();
if(fill){ctx.fill();
}else{ctx.stroke();
}}if(isShadow){for(var i=0;
i<this.shadowDepth;
i++){ctx.restore();
}}ctx.restore();
};
$.jqplot.DonutRenderer.prototype.draw=function(ctx,gd,options,plot){var i;
var opts=(options!=undefined)?options:{};
var offx=0;
var offy=0;
var trans=1;
if(options.legendInfo&&options.legendInfo.placement=="insideGrid"){var li=options.legendInfo;
switch(li.location){case"nw":offx=li.width+li.xoffset;
break;
case"w":offx=li.width+li.xoffset;
break;
case"sw":offx=li.width+li.xoffset;
break;
case"ne":offx=li.width+li.xoffset;
trans=-1;
break;
case"e":offx=li.width+li.xoffset;
trans=-1;
break;
case"se":offx=li.width+li.xoffset;
trans=-1;
break;
case"n":offy=li.height+li.yoffset;
break;
case"s":offy=li.height+li.yoffset;
trans=-1;
break;
default:break;
}}var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var cw=ctx.canvas.width;
var ch=ctx.canvas.height;
var w=cw-offx-2*this.padding;
var h=ch-offy-2*this.padding;
var mindim=Math.min(w,h);
var d=mindim;
var ringmargin=(this.ringMargin==null)?this.sliceMargin*2:this.ringMargin;
for(var i=0;
i<this._previousSeries.length;
i++){d-=2*this._previousSeries[i]._thickness+2*ringmargin;
}this._diameter=this.diameter||d;
if(this.innerDiameter!=null){var od=(this._numberSeries>1&&this.index>0)?this._previousSeries[0]._diameter:this._diameter;
this._thickness=this.thickness||(od-this.innerDiameter-2*ringmargin*this._numberSeries)/this._numberSeries/2;
}else{this._thickness=this.thickness||mindim/2/(this._numberSeries+1)*0.85;
}var r=this._radius=this._diameter/2;
this._innerRadius=this._radius-this._thickness;
var sa=this.startAngle/180*Math.PI;
this._center=[(cw-trans*offx)/2+trans*offx,(ch-trans*offy)/2+trans*offy];
if(this.shadow){var shadowColor="rgba(0,0,0,"+this.shadowAlpha+")";
for(var i=0;
i<gd.length;
i++){var ang1=(i==0)?sa:gd[i-1][1]+sa;
ang1+=this.sliceMargin/180*Math.PI;
this.renderer.drawSlice.call(this,ctx,ang1,gd[i][1]+sa,shadowColor,true);
}}for(var i=0;
i<gd.length;
i++){var ang1=(i==0)?sa:gd[i-1][1]+sa;
ang1+=this.sliceMargin/180*Math.PI;
var ang2=gd[i][1]+sa;
this._sliceAngles.push([ang1,ang2]);
this.renderer.drawSlice.call(this,ctx,ang1,ang2,this.seriesColors[i],false);
if(this.showDataLabels&&gd[i][2]*100>=this.dataLabelThreshold){var fstr,avgang=(ang1+ang2)/2,label;
if(this.dataLabels=="label"){fstr=this.dataLabelFormatString||"%s";
label=$.jqplot.sprintf(fstr,gd[i][0]);
}else{if(this.dataLabels=="value"){fstr=this.dataLabelFormatString||"%d";
label=$.jqplot.sprintf(fstr,this.data[i][1]);
}else{if(this.dataLabels=="percent"){fstr=this.dataLabelFormatString||"%d%%";
label=$.jqplot.sprintf(fstr,gd[i][2]*100);
}else{if(this.dataLabels.constructor==Array){fstr=this.dataLabelFormatString||"%s";
label=$.jqplot.sprintf(fstr,this.dataLabels[i]);
}}}}var fact=this._innerRadius+this._thickness*this.dataLabelPositionFactor+this.sliceMargin+this.dataLabelNudge;
var x=this._center[0]+Math.cos(avgang)*fact+this.canvas._offsets.left;
var y=this._center[1]+Math.sin(avgang)*fact+this.canvas._offsets.top;
var labelelem=$('<span class="jqplot-donut-series jqplot-data-label" style="position:absolute;">'+label+"</span>").insertBefore(plot.eventCanvas._elem);
x-=labelelem.width()/2;
y-=labelelem.height()/2;
x=Math.round(x);
y=Math.round(y);
labelelem.css({left:x,top:y});
}}};
$.jqplot.DonutAxisRenderer=function(){$.jqplot.LinearAxisRenderer.call(this);
};
$.jqplot.DonutAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.DonutAxisRenderer.prototype.constructor=$.jqplot.DonutAxisRenderer;
$.jqplot.DonutAxisRenderer.prototype.init=function(options){this.tickRenderer=$.jqplot.DonutTickRenderer;
$.extend(true,this,options);
this._dataBounds={min:0,max:100};
this.min=0;
this.max=100;
this.showTicks=false;
this.ticks=[];
this.showMark=false;
this.show=false;
};
$.jqplot.DonutLegendRenderer=function(){$.jqplot.TableLegendRenderer.call(this);
};
$.jqplot.DonutLegendRenderer.prototype=new $.jqplot.TableLegendRenderer();
$.jqplot.DonutLegendRenderer.prototype.constructor=$.jqplot.DonutLegendRenderer;
$.jqplot.DonutLegendRenderer.prototype.init=function(options){this.numberRows=null;
this.numberColumns=null;
$.extend(true,this,options);
};
$.jqplot.DonutLegendRenderer.prototype.draw=function(){var legend=this;
if(this.show){var series=this._series;
var ss="position:absolute;";
ss+=(this.background)?"background:"+this.background+";":"";
ss+=(this.border)?"border:"+this.border+";":"";
ss+=(this.fontSize)?"font-size:"+this.fontSize+";":"";
ss+=(this.fontFamily)?"font-family:"+this.fontFamily+";":"";
ss+=(this.textColor)?"color:"+this.textColor+";":"";
ss+=(this.marginTop!=null)?"margin-top:"+this.marginTop+";":"";
ss+=(this.marginBottom!=null)?"margin-bottom:"+this.marginBottom+";":"";
ss+=(this.marginLeft!=null)?"margin-left:"+this.marginLeft+";":"";
ss+=(this.marginRight!=null)?"margin-right:"+this.marginRight+";":"";
this._elem=$('<table class="jqplot-table-legend" style="'+ss+'"></table>');
var pad=false,reverse=false,nr,nc;
var s=series[0];
var colorGenerator=new $.jqplot.ColorGenerator(s.seriesColors);
if(s.show){var pd=s.data;
if(this.numberRows){nr=this.numberRows;
if(!this.numberColumns){nc=Math.ceil(pd.length/nr);
}else{nc=this.numberColumns;
}}else{if(this.numberColumns){nc=this.numberColumns;
nr=Math.ceil(pd.length/this.numberColumns);
}else{nr=pd.length;
nc=1;
}}var i,j,tr,td1,td2,lt,rs,color;
var idx=0;
for(i=0;
i<nr;
i++){if(reverse){tr=$('<tr class="jqplot-table-legend"></tr>').prependTo(this._elem);
}else{tr=$('<tr class="jqplot-table-legend"></tr>').appendTo(this._elem);
}for(j=0;
j<nc;
j++){if(idx<pd.length){lt=this.labels[idx]||pd[idx][0].toString();
color=colorGenerator.next();
if(!reverse){if(i>0){pad=true;
}else{pad=false;
}}else{if(i==nr-1){pad=false;
}else{pad=true;
}}rs=(pad)?this.rowSpacing:"0";
td1=$('<td class="jqplot-table-legend" style="text-align:center;padding-top:'+rs+';"><div><div class="jqplot-table-legend-swatch" style="border-color:'+color+';"></div></div></td>');
td2=$('<td class="jqplot-table-legend" style="padding-top:'+rs+';"></td>');
if(this.escapeHtml){td2.text(lt);
}else{td2.html(lt);
}if(reverse){td2.prependTo(tr);
td1.prependTo(tr);
}else{td1.appendTo(tr);
td2.appendTo(tr);
}pad=true;
}idx++;
}}}}return this._elem;
};
function preInit(target,data,options){options=options||{};
options.axesDefaults=options.axesDefaults||{};
options.legend=options.legend||{};
options.seriesDefaults=options.seriesDefaults||{};
var setopts=false;
if(options.seriesDefaults.renderer==$.jqplot.DonutRenderer){setopts=true;
}else{if(options.series){for(var i=0;
i<options.series.length;
i++){if(options.series[i].renderer==$.jqplot.DonutRenderer){setopts=true;
}}}}if(setopts){options.axesDefaults.renderer=$.jqplot.DonutAxisRenderer;
options.legend.renderer=$.jqplot.DonutLegendRenderer;
options.legend.preDraw=true;
options.seriesDefaults.pointLabels={show:false};
}}function postInit(target,data,options){for(var i=1;
i<this.series.length;
i++){if(!this.series[i]._previousSeries.length){for(var j=0;
j<i;
j++){if(this.series[i].renderer.constructor==$.jqplot.DonutRenderer&&this.series[j].renderer.constructor==$.jqplot.DonutRenderer){this.series[i]._previousSeries.push(this.series[j]);
}}}}for(i=0;
i<this.series.length;
i++){if(this.series[i].renderer.constructor==$.jqplot.DonutRenderer){this.series[i]._numberSeries=this.series.length;
if(this.series[i].highlightMouseOver){this.series[i].highlightMouseDown=false;
}}}}var postParseOptionsRun=false;
function postParseOptions(options){for(var i=0;
i<this.series.length;
i++){this.series[i].seriesColors=this.seriesColors;
this.series[i].colorGenerator=$.jqplot.colorGenerator;
}}function highlight(plot,sidx,pidx){var s=plot.series[sidx];
var canvas=plot.plugins.donutRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
s._highlightedPoint=pidx;
plot.plugins.donutRenderer.highlightedSeriesIndex=sidx;
s.renderer.drawSlice.call(s,canvas._ctx,s._sliceAngles[pidx][0],s._sliceAngles[pidx][1],s.highlightColors[pidx],false);
}function unhighlight(plot){var canvas=plot.plugins.donutRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
for(var i=0;
i<plot.series.length;
i++){plot.series[i]._highlightedPoint=null;
}plot.plugins.donutRenderer.highlightedSeriesIndex=null;
plot.target.trigger("jqplotDataUnhighlight");
}function handleMove(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt1=jQuery.Event("jqplotDataMouseOver");
evt1.pageX=ev.pageX;
evt1.pageY=ev.pageY;
plot.target.trigger(evt1,ins);
if(plot.series[ins[0]].highlightMouseOver&&!(ins[0]==plot.plugins.donutRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,ins[0],ins[1]);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
if(plot.series[ins[0]].highlightMouseDown&&!(ins[0]==plot.plugins.donutRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,ins[0],ins[1]);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseUp(ev,gridpos,datapos,neighbor,plot){var idx=plot.plugins.donutRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}}function handleClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt=jQuery.Event("jqplotDataClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function handleRightClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var idx=plot.plugins.donutRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}var evt=jQuery.Event("jqplotDataRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function postPlotDraw(){if(this.plugins.donutRenderer&&this.plugins.donutRenderer.highlightCanvas){this.plugins.donutRenderer.highlightCanvas.resetCanvas();
this.plugins.donutRenderer.highlightCanvas=null;
}this.plugins.donutRenderer={highlightedSeriesIndex:null};
this.plugins.donutRenderer.highlightCanvas=new $.jqplot.GenericCanvas();
var labels=$(this.targetId+" .jqplot-data-label");
if(labels.length){$(labels[0]).before(this.plugins.donutRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-donutRenderer-highlight-canvas",this._plotDimensions,this));
}else{this.eventCanvas._elem.before(this.plugins.donutRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-donutRenderer-highlight-canvas",this._plotDimensions,this));
}var hctx=this.plugins.donutRenderer.highlightCanvas.setContext();
this.eventCanvas._elem.bind("mouseleave",{plot:this},function(ev){unhighlight(ev.data.plot);
});
}$.jqplot.preInitHooks.push(preInit);
$.jqplot.DonutTickRenderer=function(){$.jqplot.AxisTickRenderer.call(this);
};
$.jqplot.DonutTickRenderer.prototype=new $.jqplot.AxisTickRenderer();
$.jqplot.DonutTickRenderer.prototype.constructor=$.jqplot.DonutTickRenderer;
})(jQuery);
(function($){$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMove]);
$.jqplot.Highlighter=function(options){this.show=$.jqplot.config.enablePlugins;
this.markerRenderer=new $.jqplot.MarkerRenderer({shadow:false});
this.showMarker=true;
this.lineWidthAdjust=2.5;
this.sizeAdjust=5;
this.showTooltip=true;
this.tooltipLocation="nw";
this.fadeTooltip=true;
this.tooltipFadeSpeed="fast";
this.tooltipOffset=2;
this.tooltipAxes="both";
this.tooltipSeparator=", ";
this.tooltipContentEditor=null;
this.useAxesFormatters=true;
this.tooltipFormatString="%.5P";
this.formatString=null;
this.yvalues=1;
this.bringSeriesToFront=false;
this._tooltipElem;
this.isHighlighting=false;
this.currentNeighbor=null;
$.extend(true,this,options);
};
var locations=["nw","n","ne","e","se","s","sw","w"];
var locationIndicies={nw:0,n:1,ne:2,e:3,se:4,s:5,sw:6,w:7};
var oppositeLocations=["se","s","sw","w","nw","n","ne","e"];
$.jqplot.Highlighter.init=function(target,data,opts){var options=opts||{};
this.plugins.highlighter=new $.jqplot.Highlighter(options.highlighter);
};
$.jqplot.Highlighter.parseOptions=function(defaults,options){this.showHighlight=true;
};
$.jqplot.Highlighter.postPlotDraw=function(){if(this.plugins.highlighter&&this.plugins.highlighter.highlightCanvas){this.plugins.highlighter.highlightCanvas.resetCanvas();
this.plugins.highlighter.highlightCanvas=null;
}if(this.plugins.highlighter&&this.plugins.highlighter._tooltipElem){this.plugins.highlighter._tooltipElem.emptyForce();
this.plugins.highlighter._tooltipElem=null;
}this.plugins.highlighter.highlightCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(this.plugins.highlighter.highlightCanvas.createElement(this._gridPadding,"jqplot-highlight-canvas",this._plotDimensions,this));
this.plugins.highlighter.highlightCanvas.setContext();
var elem=document.createElement("div");
this.plugins.highlighter._tooltipElem=$(elem);
elem=null;
this.plugins.highlighter._tooltipElem.addClass("jqplot-highlighter-tooltip");
this.plugins.highlighter._tooltipElem.css({position:"absolute",display:"none"});
this.eventCanvas._elem.before(this.plugins.highlighter._tooltipElem);
};
$.jqplot.preInitHooks.push($.jqplot.Highlighter.init);
$.jqplot.preParseSeriesOptionsHooks.push($.jqplot.Highlighter.parseOptions);
$.jqplot.postDrawHooks.push($.jqplot.Highlighter.postPlotDraw);
function draw(plot,neighbor){var hl=plot.plugins.highlighter;
var s=plot.series[neighbor.seriesIndex];
var smr=s.markerRenderer;
var mr=hl.markerRenderer;
mr.style=smr.style;
mr.lineWidth=smr.lineWidth+hl.lineWidthAdjust;
mr.size=smr.size+hl.sizeAdjust;
var rgba=$.jqplot.getColorComponents(smr.color);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var alpha=(rgba[3]>=0.6)?rgba[3]*0.6:rgba[3]*(2-rgba[3]);
mr.color="rgba("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+","+alpha+")";
mr.init();
mr.draw(s.gridData[neighbor.pointIndex][0],s.gridData[neighbor.pointIndex][1],hl.highlightCanvas._ctx);
}function showTooltip(plot,series,neighbor){var hl=plot.plugins.highlighter;
var elem=hl._tooltipElem;
var serieshl=series.highlighter||{};
this.useYTickMarks=false;
this.useXTickMarks=false;
var opts=$.extend(true,{},hl,serieshl);
var data;
if(neighbor.data==undefined){var pointIndex=neighbor.pointIndex;
if(pointIndex>=series._plotData.length){pointIndex=pointIndex-series._plotData.length;
}data=series._plotData[pointIndex];
neighbor.data=series._plotData[pointIndex];
}else{data=neighbor.data;
}if(opts.useAxesFormatters){var xf=series._xaxis._ticks[0].formatter;
var yf=series._yaxis._ticks[0].formatter;
var xfstr=series._xaxis._ticks[0].formatString;
var yfstr=series._yaxis._ticks[0].formatString;
var str;
var xstr=xf(xfstr,neighbor.data[0]);
var ystrs=[];
if(hl.useXTickMarks&&series._xaxis._ticks[data[0]]){xstr=xf(xfstr,series._xaxis._ticks[data[0]].label);
}for(var i=1;
i<opts.yvalues+1;
i++){if(hl.useYTickMarks&&series._yaxis._ticks[data[1]]){ystrs.push(yf(yfstr,series._yaxis._ticks[data[1]].label));
}else{ystrs.push(yf(yfstr,data[i]));
}}if(typeof opts.formatString==="string"){switch(opts.tooltipAxes){case"both":case"xy":ystrs.unshift(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
case"yx":ystrs.push(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
case"x":str=$.jqplot.sprintf.apply($.jqplot.sprintf,[opts.formatString,xstr]);
break;
case"y":ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
default:ystrs.unshift(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
}}else{switch(opts.tooltipAxes){case"both":case"xy":str=xstr;
for(var i=0;
i<ystrs.length;
i++){str+=opts.tooltipSeparator+ystrs[i];
}break;
case"yx":str="";
for(var i=0;
i<ystrs.length;
i++){str+=ystrs[i]+opts.tooltipSeparator;
}str+=xstr;
break;
case"x":str=xstr;
break;
case"y":str=ystrs.join(opts.tooltipSeparator);
break;
default:str=xstr;
for(var i=0;
i<ystrs.length;
i++){str+=opts.tooltipSeparator+ystrs[i];
}break;
}}}else{var str;
if(typeof opts.formatString==="string"){str=$.jqplot.sprintf.apply($.jqplot.sprintf,[opts.formatString].concat(neighbor.data));
}else{if(opts.tooltipAxes=="both"||opts.tooltipAxes=="xy"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0])+opts.tooltipSeparator+$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1]);
}else{if(opts.tooltipAxes=="yx"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1])+opts.tooltipSeparator+$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0]);
}else{if(opts.tooltipAxes=="x"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0]);
}else{if(opts.tooltipAxes=="y"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1]);
}}}}}}if($.isFunction(opts.tooltipContentEditor)){str=opts.tooltipContentEditor(str,neighbor.seriesIndex,neighbor.pointIndex,plot);
}str=str.replace(/%l/,series.label);
if(neighbor.data[2]!=undefined&&neighbor.data[2]){str=str.replace(/%1/,neighbor.data[2]);
}else{str=str.replace(/%1/,"");
}if(neighbor.data[3]!=undefined&&neighbor.data[3]){str=str.replace(/%2/,neighbor.data[3]);
}else{str=str.replace(/%2/,"");
}if(neighbor.data[4]!=undefined&&neighbor.data[4]){str=str.replace(/%3/,neighbor.data[4]);
}else{str=str.replace(/%3/,"");
}if(neighbor.data[5]!=undefined&&neighbor.data[5]){str=str.replace(/%4/,neighbor.data[5]);
}else{str=str.replace(/%4/,"");
}if(neighbor.data[8]!=undefined&&neighbor.data[8]){str=str.replace(/%5/,neighbor.data[8]);
}else{str=str.replace(/%5/,"");
}if(neighbor.data[7]!=undefined&&neighbor.data[7]){str=str.replace(/%6/,neighbor.data[7]);
}else{str=str.replace(/%6/,"");
}elem.html(str);
var gridpos={x:neighbor.gridData[0],y:neighbor.gridData[1]};
var ms=0;
var fact=0.707;
if(series.markerRenderer.show==true){ms=(series.markerRenderer.size+opts.sizeAdjust)/2;
}var loc=locations;
if(series.fillToZero&&series.fill&&neighbor.data[1]<0){loc=oppositeLocations;
}switch(loc[locationIndicies[opts.tooltipLocation]]){case"nw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
case"n":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-ms;
break;
case"ne":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
case"e":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+ms;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+fact*ms;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+fact*ms;
break;
case"s":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+ms;
break;
case"sw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+fact*ms;
break;
case"w":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-ms;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
}elem.css("left",x);
elem.css("top",y);
if(opts.fadeTooltip){elem.stop(true,true).fadeIn(opts.tooltipFadeSpeed);
}else{elem.show();
}elem=null;
}function handleMove(ev,gridpos,datapos,neighbor,plot){var hl=plot.plugins.highlighter;
var c=plot.plugins.cursor;
if(hl.show){if(neighbor==null&&hl.isHighlighting&&HIGHLIGHTER_HELPERS.isHighlighting){var ctx=hl.highlightCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
if(hl.fadeTooltip){hl._tooltipElem.fadeOut(hl.tooltipFadeSpeed);
}else{hl._tooltipElem.hide();
}if(hl.bringSeriesToFront){plot.restorePreviousSeriesOrder();
}hl.isHighlighting=false;
HIGHLIGHTER_HELPERS.isHighlighting=false;
hl.currentNeighbor=null;
ctx=null;
}else{if(neighbor!=null&&plot.series[neighbor.seriesIndex].showHighlight&&!hl.isHighlighting&&!HIGHLIGHTER_HELPERS.isHighlighting){hl.isHighlighting=true;
HIGHLIGHTER_HELPERS.isHighlighting=true;
hl.currentNeighbor=neighbor;
if(hl.showMarker){draw(plot,neighbor);
}if(hl.showTooltip&&(!c||!c._zoom.started)){showTooltip(plot,plot.series[neighbor.seriesIndex],neighbor);
}if(hl.bringSeriesToFront){plot.moveSeriesToFront(neighbor.seriesIndex);
}}else{if(neighbor!=null&&hl.isHighlighting&&HIGHLIGHTER_HELPERS.isHighlighting&&hl.currentNeighbor!=neighbor){if(plot.series[neighbor.seriesIndex].showHighlight){var ctx=hl.highlightCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
hl.isHighlighting=true;
HIGHLIGHTER_HELPERS.isHighlighting=true;
hl.currentNeighbor=neighbor;
if(hl.showMarker){draw(plot,neighbor);
}if(hl.showTooltip&&(!c||!c._zoom.started)){showTooltip(plot,plot.series[neighbor.seriesIndex],neighbor);
}if(hl.bringSeriesToFront){plot.moveSeriesToFront(neighbor.seriesIndex);
}}}}}}}})(jQuery);
var HIGHLIGHTER_HELPERS=function(){return{isHighlighting:false};
}();
(function($){$.jqplot.LineRendererWithIndex=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.LineRendererWithIndex.prototype=new $.jqplot.LineRenderer();
$.jqplot.LineRendererWithIndex.constructor=$.jqplot.LineRendererWithIndex;
$.jqplot.LineRendererWithIndex.prototype.init=function(options){$.jqplot.LineRenderer.prototype.init.call(this,options);
};
$.jqplot.LineRendererWithIndex.prototype.draw=function(ctx,gd,options,plot){var i;
var opts=$.extend(true,{},options);
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var fillAndStroke=(opts.fillAndStroke!=undefined)?opts.fillAndStroke:this.fillAndStroke;
var xmin,ymin,xmax,ymax;
ctx.save();
if(gd.length){if(showLine){if(fill){if(this.fillToZero){var negativeColor=this.negativeColor;
if(!this.useNegativeColors){negativeColor=opts.fillStyle;
}var isnegative=false;
var posfs=opts.fillStyle;
if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var tempgd=[];
var pd=(this.renderer.smooth)?this.renderer._smoothedPlotData:this._plotData;
this._areaPoints=[];
var pyzero=this._yaxis.series_u2p(this.fillToValue);
var pxzero=this._xaxis.series_u2p(this.fillToValue);
opts.closePath=true;
if(this.fillAxis=="y"){tempgd.push([gd[0][0],pyzero]);
this._areaPoints.push([gd[0][0],pyzero]);
for(var i=0;
i<gd.length-1;
i++){tempgd.push(gd[i]);
this._areaPoints.push(gd[i]);
if(pd[i][1]*pd[i+1][1]<0){if(pd[i][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}var xintercept=gd[i][0]+(gd[i+1][0]-gd[i][0])*(pyzero-gd[i][1])/(gd[i+1][1]-gd[i][1]);
tempgd.push([xintercept,pyzero]);
this._areaPoints.push([xintercept,pyzero]);
if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
tempgd=[[xintercept,pyzero]];
}}if(pd[gd.length-1][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}tempgd.push(gd[gd.length-1]);
this._areaPoints.push(gd[gd.length-1]);
tempgd.push([gd[gd.length-1][0],pyzero]);
this._areaPoints.push([gd[gd.length-1][0],pyzero]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this._areaPoints=gd;
this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}else{if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var gridymin=ctx.canvas.height;
gd.unshift([gd[0][0],gridymin]);
var len=gd.length;
gd.push([gd[len-1][0],gridymin]);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}}this._areaPoints=gd;
if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}if(fillAndStroke){var fasopts=$.extend(true,{},opts,{fill:false,closePath:false});
this.renderer.shapeRenderer.draw(ctx,fasgd,fasopts);
if(this.markerRenderer.show){if(this.renderer.smooth){fasgd=this.gridData;
}for(i=0;
i<fasgd.length;
i++){this.markerRenderer.draw(i,fasgd[i][0],fasgd[i][1],ctx,opts.markerOptions);
}}}}else{if(this.renderer.bands.show){var bdat;
var bopts=$.extend(true,{},opts);
if(this.renderer.bands.showLines){bdat=(this.renderer.smooth)?this.renderer._hiBandSmoothedData:this.renderer._hiBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,opts);
bdat=(this.renderer.smooth)?this.renderer._lowBandSmoothedData:this.renderer._lowBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}if(this.renderer.bands.fill){if(this.renderer.smooth){bdat=this.renderer._hiBandSmoothedData.concat(this.renderer._lowBandSmoothedData.reverse());
}else{bdat=this.renderer._hiBandGridData.concat(this.renderer._lowBandGridData.reverse());
}this._areaPoints=bdat;
bopts.closePath=true;
bopts.fill=true;
bopts.fillStyle=this.renderer.bands.fillColor;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}var xmin=xmax=ymin=ymax=null;
for(i=0;
i<this._areaPoints.length;
i++){var p=this._areaPoints[i];
if(xmin>p[0]||xmin==null){xmin=p[0];
}if(ymax<p[1]||ymax==null){ymax=p[1];
}if(xmax<p[0]||xmax==null){xmax=p[0];
}if(ymin>p[1]||ymin==null){ymin=p[1];
}}if(this.type==="line"&&this.renderer.bands.show){ymax=this._yaxis.series_u2p(this.renderer.bands._min);
ymin=this._yaxis.series_u2p(this.renderer.bands._max);
}this._boundingBox=[[xmin,ymax],[xmax,ymin]];
if(this.markerRenderer.show&&!fill){if(this.renderer.smooth){gd=this.gridData;
}for(i=0;
i<gd.length;
i++){if(gd[i][0]!=null&&gd[i][1]!=null){this.markerRenderer.draw(i,gd[i][0],gd[i][1],ctx,opts.markerOptions);
}}}}ctx.restore();
};
})(jQuery);
(function($){$.jqplot.MarkerRenderer=function(options){this.show=true;
this.style="filledCircle";
this.lineWidth=2;
this.size=9;
this.color="#666666";
this.shadow=true;
this.shadowAngle=45;
this.shadowOffset=1;
this.shadowDepth=3;
this.shadowAlpha="0.07";
this.shadowRenderer=new $.jqplot.ShadowRenderer();
this.shapeRenderer=new $.jqplot.ShapeRenderer();
this.whiskerColor="#000000";
this.whiskerData=[];
this._whiskerData=[];
$.extend(true,this,options);
};
$.jqplot.MarkerRenderer.prototype.init=function(options){$.extend(true,this,options);
var sdopt={angle:this.shadowAngle,offset:this.shadowOffset,alpha:this.shadowAlpha,lineWidth:this.lineWidth,depth:this.shadowDepth,closePath:true};
if(this.style.indexOf("filled")!=-1){sdopt.fill=true;
}if(this.style.indexOf("ircle")!=-1){sdopt.isarc=true;
sdopt.closePath=false;
}this.shadowRenderer.init(sdopt);
var shopt={fill:false,isarc:false,strokeStyle:this.color,fillStyle:this.color,lineWidth:this.lineWidth,closePath:true};
if(this.style.indexOf("filled")!=-1){shopt.fill=true;
}if(this.style.indexOf("ircle")!=-1){shopt.isarc=true;
shopt.closePath=false;
}this.shapeRenderer.init(shopt);
};
$.jqplot.MarkerRenderer.prototype.drawLine=function(x1,y1,x2,y2,ctx){ctx.save();
ctx.beginPath();
ctx.moveTo(x1,y1);
ctx.lineTo(x2,y2);
ctx.strokeStyle=this.color;
ctx.stroke();
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawLineOpt=function(p1,p2,ctx,fill,options){var points=[p1,p2];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
};
$.jqplot.MarkerRenderer.prototype.drawUpVee=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/1/stretch;
var dy=this.size/1*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points=[[x+dx,y+dy],[x,y],[x-dx,y+dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points,{closePath:false});
}this.shapeRenderer.draw(ctx,points,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDownVee=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/1/stretch;
var dy=this.size/1*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points=[[x+dx,y-dy],[x,y],[x-dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points,{closePath:false});
}this.shapeRenderer.draw(ctx,points,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDiamond=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y],[x,y+dy],[x+dx,y],[x,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawStar=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=0-(this.size/2*stretch);
var dyE=0-(this.size/1.5*stretch);
var points=[[x,y+dyE],[x+(dx/3),y+(dy/2)],[x+dx,y+(dy/2)],[x+(dx/2),y],[x+dx,y-dy],[x,y-(dy/2)],[x-dx,y-dy],[x-(dx/2),y],[x-dx,y+(dy/2)],[x-(dx/3),y+(dy/2)]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawRectangleDiag=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=null;
switch(direction){case"l":points=[[x,y+dy],[x+dx,y+(dy/2)],[x,y-dx],[x-dx,y-(dy/2)]];
break;
default:points=[[x,y+dy],[x+dx,y-(dy/2)],[x,y-dx],[x-dx,y+(dy/2)]];
break;
}if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawTriangle=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=null;
switch(direction){case"r":points=[[x+dx,y],[x-dx,y-dy],[x-dx,y+dx]];
break;
case"l":points=[[x-dx,y],[x+dx,y-dy],[x+dx,y+dx]];
break;
case"d":points=[[x,y+dy],[x-dx,y-dy],[x+dx,y-dx]];
break;
default:points=[[x,y-dy],[x-dx,y+dy],[x+dx,y+dx]];
break;
}if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawRectangle=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
switch(direction){case"v":dx=this.size/4*stretch;
break;
default:dy=this.size/4*stretch;
break;
}var points=[[x-dx,y-dy],[x-dx,y+dy],[x+dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawHeart=function(x,y,ctx,fill,options){var stretch=1.5;
var dx=this.size/2*stretch;
var dy=0-(this.size/2*stretch);
var points=[[x,y+(dy/2)],[x+(dx/3),y+dy],[x+dx,y+dy],[x+dx,y],[x,y-dy],[x-dx,y],[x-dx,y+dy],[x-(dx/3),y+dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawPlus=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points1=[[x,y-dy],[x,y+dy]];
var points2=[[x+dx,y],[x-dx,y]];
var opts=$.extend(true,{},this.options,{closePath:false});
if(this.shadow){this.shadowRenderer.draw(ctx,points1,{closePath:false});
this.shadowRenderer.draw(ctx,points2,{closePath:false});
}this.shapeRenderer.draw(ctx,points1,opts);
this.shapeRenderer.draw(ctx,points2,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawX=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points1=[[x-dx,y-dy],[x+dx,y+dy]];
var points2=[[x-dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points1,{closePath:false});
this.shadowRenderer.draw(ctx,points2,{closePath:false});
}this.shapeRenderer.draw(ctx,points1,opts);
this.shapeRenderer.draw(ctx,points2,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDash=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y],[x+dx,y]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawSquare=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y-dy],[x-dx,y+dy],[x+dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawCircle=function(x,y,ctx,fill,options){var radius=this.size/2;
var end=2*Math.PI;
var points=[x,y,radius,0,end,true];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawWhiskerLine=function(x,y,ctx,fill,options){var y1=y,y2=y,wLen=(this._whiskerData)?this._whiskerData.length:0;
for(var cnt=0;
cnt<wLen;
cnt++){if(this._whiskerData[cnt][0]==x){y1=this._whiskerData[cnt][1];
y2=this._whiskerData[cnt][2];
break;
}}var points=[];
if(y1!==y||y2!==y){ctx.save();
ctx.beginPath();
ctx.moveTo(x,y1);
ctx.lineTo(x,y2);
ctx.strokeStyle=this.whiskerColor;
ctx.stroke();
ctx.restore();
}};
$.jqplot.MarkerRenderer.prototype.draw=function(x,y,ctx,options){options=options||{};
this.drawWhiskerLine(x,y,ctx,false,options);
switch(this.style){case"upVee":this.drawUpVee(x,y,ctx,false,options);
break;
case"downVee":this.drawDownVee(x,y,ctx,false,options);
break;
case"diamond":this.drawDiamond(x,y,ctx,false,options);
break;
case"filledDiamond":this.drawDiamond(x,y,ctx,true,options);
break;
case"star":this.drawStar(x,y,ctx,false,options);
break;
case"filledStar":this.drawStar(x,y,ctx,true,options);
break;
case"rectDiagRight":this.drawRectangleDiag(x,y,ctx,false,options,"r");
break;
case"filledRectDiagRight":this.drawRectangleDiag(x,y,ctx,true,options,"r");
break;
case"rectDiagLeft":this.drawRectangleDiag(x,y,ctx,false,options,"l");
break;
case"filledRectDiagLeft":this.drawRectangleDiag(x,y,ctx,true,options,"l");
break;
case"triangleRight":this.drawTriangle(x,y,ctx,false,options,"r");
break;
case"filledTriangleRight":this.drawTriangle(x,y,ctx,true,options,"r");
break;
case"triangleLeft":this.drawTriangle(x,y,ctx,false,options,"l");
break;
case"filledTriangleLeft":this.drawTriangle(x,y,ctx,true,options,"l");
break;
case"triangleUp":this.drawTriangle(x,y,ctx,false,options,"u");
break;
case"filledTriangleUp":options={fill:true,isarc:false,strokeStyle:this.color,fillStyle:this.color,lineWidth:this.lineWidth,closePath:true};
this.drawTriangle(x,y,ctx,true,options,"u");
break;
case"triangleDown":this.drawTriangle(x,y,ctx,false,options,"d");
break;
case"filledTriangleDown":this.drawTriangle(x,y,ctx,true,options,"d");
break;
case"rectHorizontal":this.drawRectangle(x,y,ctx,false,options,"h");
break;
case"filledRectHorizontal":this.drawRectangle(x,y,ctx,true,options,"h");
break;
case"rectVertical":this.drawRectangle(x,y,ctx,false,options,"v");
break;
case"filledRectVertical":this.drawRectangle(x,y,ctx,true,options,"v");
break;
case"heart":this.drawHeart(x,y,ctx,false,options);
break;
case"filledHeart":this.drawHeart(x,y,ctx,true,options);
break;
case"circle":this.drawCircle(x,y,ctx,false,options);
break;
case"filledCircle":this.drawCircle(x,y,ctx,true,options);
break;
case"square":this.drawSquare(x,y,ctx,false,options);
break;
case"filledSquare":this.drawSquare(x,y,ctx,true,options);
break;
case"x":this.drawX(x,y,ctx,true,options);
break;
case"plus":this.drawPlus(x,y,ctx,true,options);
break;
case"dash":this.drawDash(x,y,ctx,true,options);
break;
case"line":this.drawLineOpt(x,y,ctx,false,options);
break;
default:this.drawDiamond(x,y,ctx,false,options);
break;
}};
})(jQuery);
(function($){$.jqplot.PointLabels=function(options){this.show=$.jqplot.config.enablePlugins;
this.location="n";
this.labelsFromSeries=false;
this.seriesLabelIndex=null;
this.labels=[];
this._labels=[];
this.stackedValue=false;
this.ypadding=6;
this.xpadding=6;
this.escapeHTML=true;
this.edgeTolerance=-5;
this.formatter=$.jqplot.DefaultTickFormatter;
this.formatString="";
this.hideZeros=false;
this._elems=[];
$.extend(true,this,options);
};
var locations=["nw","n","ne","e","se","s","sw","w"];
var locationIndicies={nw:0,n:1,ne:2,e:3,se:4,s:5,sw:6,w:7};
var oppositeLocations=["se","s","sw","w","nw","n","ne","e"];
$.jqplot.PointLabels.init=function(target,data,seriesDefaults,opts,plot){var options=$.extend(true,{},seriesDefaults,opts);
options.pointLabels=options.pointLabels||{};
if(this.renderer.constructor===$.jqplot.BarRenderer&&this.barDirection==="horizontal"&&!options.pointLabels.location){options.pointLabels.location="e";
}this.plugins.pointLabels=new $.jqplot.PointLabels(options.pointLabels);
this.plugins.pointLabels.setLabels.call(this);
};
$.jqplot.PointLabels.prototype.setLabels=function(){var p=this.plugins.pointLabels;
var labelIdx;
if(p.seriesLabelIndex!=null){labelIdx=p.seriesLabelIndex;
}else{if(this.renderer.constructor===$.jqplot.BarRenderer&&this.barDirection==="horizontal"){labelIdx=0;
}else{labelIdx=(this._plotData.length===0)?0:this._plotData[0].length-1;
}}p._labels=[];
if(p.labels.length===0||p.labelsFromSeries){if(p.stackedValue){if(this._plotData.length&&this._plotData[0].length){for(var i=0;
i<this._plotData.length;
i++){p._labels.push(this._plotData[i][labelIdx]);
}}}else{var d=this._plotData;
if(this.renderer.constructor===$.jqplot.BarRenderer&&this.waterfall){d=this._data;
}if(d.length&&d[0].length){for(var i=0;
i<d.length;
i++){p._labels.push(d[i][labelIdx]);
}}d=null;
}}else{if(p.labels.length){p._labels=p.labels;
}}};
$.jqplot.PointLabels.prototype.xOffset=function(elem,location,padding){location=location||this.location;
padding=padding||this.xpadding;
var offset;
switch(location){case"nw":offset=-elem.outerWidth(true)-this.xpadding;
break;
case"n":offset=-elem.outerWidth(true)/2;
break;
case"ne":offset=this.xpadding;
break;
case"e":offset=this.xpadding;
break;
case"se":offset=this.xpadding;
break;
case"s":offset=-elem.outerWidth(true)/2;
break;
case"sw":offset=-elem.outerWidth(true)-this.xpadding;
break;
case"w":offset=-elem.outerWidth(true)-this.xpadding;
break;
default:offset=-elem.outerWidth(true)-this.xpadding;
break;
}return offset;
};
$.jqplot.PointLabels.prototype.yOffset=function(elem,location,padding){location=location||this.location;
padding=padding||this.xpadding;
var offset;
switch(location){case"nw":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"n":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"ne":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"e":offset=-elem.outerHeight(true)/2;
break;
case"se":offset=this.ypadding;
break;
case"s":offset=this.ypadding;
break;
case"sw":offset=this.ypadding;
break;
case"w":offset=-elem.outerHeight(true)/2;
break;
default:offset=-elem.outerHeight(true)-this.ypadding;
break;
}return offset;
};
$.jqplot.PointLabels.draw=function(sctx,options,plot){var p=this.plugins.pointLabels;
p.setLabels.call(this);
for(var i=0;
i<p._elems.length;
i++){p._elems[i].emptyForce();
}p._elems.splice(0,p._elems.length);
if(p.show){for(var i=0;
i<p.labels.length;
i++){var pd=this._plotData;
var xax=this._xaxis;
var yax=this._yaxis;
var label=p.labels[i];
if(p.hideZeros&&parseInt(p.labels[i],10)==0){label="";
}var elem=$('<div class="jqplot-point-label" style="position:absolute"></div>');
elem.insertAfter(sctx.canvas);
if(p.escapeHTML){elem.text(label);
}else{elem.html(label);
}var location=p.location;
if(this.waterfall&&parseInt(label,10)<0){location=oppositeLocations[locationIndicies[location]];
}var ell=xax.u2p(pd[i][0])+p.xOffset(elem,location);
var elt=yax.u2p(pd[i][1])+p.yOffset(elem,location);
elem.css("left",ell);
elem.css("top",elt);
var elr=ell+$(elem).width();
var elb=elt+$(elem).height();
var et=p.edgeTolerance;
var scl=$(sctx.canvas).position().left;
var sct=$(sctx.canvas).position().top;
var scr=sctx.canvas.width+scl;
var scb=sctx.canvas.height+sct;
if(ell-et<scl||elt-et<sct||elr+et>scr||elb+et>scb){$(elem).remove();
}}}};
$.jqplot.postSeriesInitHooks.push($.jqplot.PointLabels.init);
$.jqplot.postDrawSeriesHooks.push($.jqplot.PointLabels.draw);
})(jQuery);
(function($){$.jqplot.ImageMarkerRenderer=function(){$.jqplot.MarkerRenderer.call(this);
this.imageElement=null;
this.xOffset=null;
this.yOffset=null;
};
$.jqplot.ImageMarkerRenderer.prototype=new $.jqplot.MarkerRenderer();
$.jqplot.ImageMarkerRenderer.constructor=$.jqplot.ImageMarkerRenderer;
$.jqplot.ImageMarkerRenderer.prototype.init=function(options){options=options||{};
this.imageElement=options.imageElement;
this.xOffset=options.xOffset||0;
this.yOffset=options.yOffset||0;
$.jqplot.MarkerRenderer.prototype.init.call(this,options);
};
$.jqplot.ImageMarkerRenderer.prototype.draw=function(x,y,ctx,options){ctx.drawImage(this.imageElement,x+this.xOffset,y+this.yOffset);
ctx.restore();
return;
};
})(jQuery);
(function($){$.jqplot.IndividualImageMarkerRenderer=function(){$.jqplot.MarkerRenderer.call(this);
this.imageArray=null;
this.xOffset=null;
this.yOffset=null;
};
$.jqplot.IndividualImageMarkerRenderer.prototype=new $.jqplot.MarkerRenderer();
$.jqplot.IndividualImageMarkerRenderer.constructor=$.jqplot.IndividualImageMarkerRenderer;
$.jqplot.IndividualImageMarkerRenderer.prototype.init=function(options){options=options||{};
this.imageArray=options.imageArray||[];
this.xOffset=options.xOffset||0;
this.yOffset=options.yOffset||0;
$.jqplot.MarkerRenderer.prototype.init.call(this,options);
};
$.jqplot.IndividualImageMarkerRenderer.prototype.draw=function(i,x,y,ctx,options){if(this.imageArray[i]){ctx.drawImage(this.imageArray[i],x+this.xOffset,y+this.yOffset);
ctx.restore();
}return;
};
})(jQuery);
