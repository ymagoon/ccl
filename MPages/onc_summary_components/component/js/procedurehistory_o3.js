function Procedure3componentStyle(){this.initByNamespace("proc3");
}Procedure3componentStyle.inherits(ComponentStyle);
function ProcedureComponentO3(criterion){this.setCriterion(criterion);
this.setStyles(new Procedure3componentStyle());
this.setIncludeLineNumber(true);
this.setScope(1);
this.m_resultCount=0;
this.setComponentLoadTimerName("USR:MPG.PROCEDURE.O3 - load component");
this.setComponentRenderTimerName("ENG:MPG.PROCEDURE.O3 - render component");
this.p_surgical=false;
this.m_viewableEncntrs="";
this.setResourceRequired(true);
var self=this;
CERN_EventListener.addListener(this,"procedureHistoryUpdated",function(){CERN_PROCEDURE_O3.GetProcedureTable(self);
},this);
ProcedureComponentO3.method("RetrieveRequiredResources",function(){var veObj=MP_Core.GetViewableEncntrs(this.getCriterion().person_id);
if(veObj.isResourceAvailable()&&veObj.getResourceData()){this.setViewableEncntrs(veObj.getResourceData());
CERN_PROCEDURE_O3.GetProcedureTable(this);
}else{CERN_EventListener.addListener(this,"viewableEncntrInfoAvailable",this.HandleViewableEncounters,this);
}});
ProcedureComponentO3.method("HandleViewableEncounters",function(event,srObj){if(srObj.isResourceAvailable()&&srObj.getResourceData()){this.setViewableEncntrs(srObj.getResourceData());
CERN_PROCEDURE_O3.GetProcedureTable(this);
}else{var errMsg="No viewable encounters available for this patient";
this.finalizeComponent(MP_Util.HandleErrorResponse(this.getStyles().getNameSpace(),errMsg),(this.isLineNumberIncluded()?"(0)":""));
}});
ProcedureComponentO3.method("setViewableEncntrs",function(value){this.m_viewableEncntrs=value;
});
ProcedureComponentO3.method("setResultCount",function(value){this.m_resultCount=value;
});
ProcedureComponentO3.method("getViewableEncntrs",function(){return(this.m_viewableEncntrs);
});
ProcedureComponentO3.method("InsertData",function(){CERN_PROCEDURE_O3.GetProcedureTable(this);
});
ProcedureComponentO3.method("HandleSuccess",function(recordData){CERN_PROCEDURE_O3.RenderComponent(this,recordData);
});
ProcedureComponentO3.method("setSurgiNet",function(value){this.p_surgical=value;
});
ProcedureComponentO3.method("isSurgiNet",function(){return this.p_surgical;
});
ProcedureComponentO3.method("resizeComponent",function(){MPageComponent.prototype.resizeComponent.call(this,null);
var contentBody=$("#"+this.getStyles().getContentId()).find(".content-body");
if(contentBody.length){var maxHeight=parseInt($(contentBody).css("max-height").replace("px",""),10);
if(!isNaN(maxHeight)){if($(contentBody).outerHeight()>=maxHeight){$("#ProcHdrRow"+this.getComponentId()).addClass("shifted");
}else{$("#ProcHdrRow"+this.getComponentId()).removeClass("shifted");
}}}});
}ProcedureComponentO3.inherits(MPageComponent);
ProcedureComponentO3.prototype.postProcessing=function(){MPageComponent.prototype.postProcessing.call(this);
CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:this.m_resultCount});
};
var proc3I18n=i18n.discernabu.procedurehistory_o3;
var CERN_PROCEDURE_O3=function(){function formatDateTimeUTC(dttm,format){var dateTime=new Date();
dateTime.setISO8601(dttm);
return dateTime.format(format);
}function sortProcedure(procArr){procArr.sort(sortByDtTm);
}function sortByDtTm(a,b){if(a.ONSET_UTC>b.ONSET_UTC){return -1;
}else{if(a.ONSET_UTC<b.ONSET_UTC){return 1;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}function displayProcedures(compID,procArr,jsHTML,df){var al=procArr.length;
var proc3Comp=MP_Util.GetCompObjById(compID);
var secondProcsLen=proc3Comp.SecondProcHtmlList.length;
var oProcItem;
var i;
var procLine=1;
var surgLine=1;
if(proc3Comp.GroupTypeClick===0){for(i=0;
i<al;
i++){oProcItem=procArr[i];
var sProcHTML=generateProcHTML(compID,oProcItem,df,i);
jsHTML.push(sProcHTML);
for(a=0;
a<secondProcsLen;
a++){oSecondProcItm=proc3Comp.SecondProcHtmlList[a];
if(oProcItem.SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){jsHTML.push(oSecondProcItm.HTML);
}}}}else{var sHistoryHTML=[];
var sSurginetHTML=[];
for(i=0;
i<al;
i++){oProcItem=procArr[i];
if(oProcItem.SURG_PROC_IND===0){procLine++;
sHistoryHTML.push(generateProcHTML(compID,oProcItem,df,procLine));
}else{surgLine++;
sSurginetHTML.push(generateProcHTML(compID,oProcItem,df,surgLine));
for(a=0;
a<secondProcsLen;
a++){oSecondProcItm=proc3Comp.SecondProcHtmlList[a];
if(oProcItem.SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){sSurginetHTML.push(oSecondProcItm.HTML);
}}}}if(proc3Comp.isSurgiNet()){jsHTML.push("<div><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.discernabu.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",proc3I18n.SURGICAL_RECORD," (",proc3Comp.SURG_PROC_CNT,")</span></h3>");
jsHTML.push("<div class='sub-sec-content'>",sSurginetHTML.join(""),"</div></div>");
}jsHTML.push("<div><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.discernabu.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",proc3I18n.PROCEDURES," (",proc3Comp.PROC_HIST_CNT,")</span></h3>");
jsHTML.push("<div class='sub-sec-content'>",sHistoryHTML.join(""),"</div></div>");
}}function hoverString(procItem,onsetDateHvr,commentString){var sHov="";
sHov="<div class='proc3-det hvr'><dl>";
var hov_Comment=commentString?commentString:"--";
if(procItem.SURG_PROC_IND===0){var hov_status=procItem.STATUS?procItem.STATUS:"--";
var hov_location=procItem.LOCATION?procItem.LOCATION:"--";
sHov=sHov+"<dt class='proc3-det-name'><span>"+proc3I18n.STATUS+":</span></dt><dd class='proc3-det-name'>"+hov_status+"</dd><dt class='proc3-det-name'><span>"+proc3I18n.LOCATION+":</span></dt><dd class='proc3-det-name'>"+hov_location+"</dd>";
sHov=sHov+"<dt class='proc3-det-name'><span>"+proc3I18n.COMMENTS+":</span></dt><dd class='proc3-det-name'>"+hov_Comment+"</dd>";
}else{var hovAnesthesiaType=procItem.ANETHESIA_TYPE?procItem.ANETHESIA_TYPE:"--";
var hovCaseNum=procItem.SURG_CASE_NBR_FORMATTED?procItem.SURG_CASE_NBR_FORMATTED:"--";
sHov=sHov+"<dt class='proc3-det-name'><span>"+proc3I18n.ANESTH_TYPE+":</span></dt><dd class='proc3-det-name'>"+hovAnesthesiaType+"</dd><dt class='proc3-det-name'><span>"+proc3I18n.CASE_NUM+":</span></dt><dd class='proc3-det-name'>"+hovCaseNum+"</dd>";
sHov=sHov+"<dt class='proc3-det-name'><span>"+proc3I18n.IMPLANTS+":</span></dt><dd class='proc3-det-name'>";
var implantString="--";
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){if(k===0){implantString=procItem.IMPLANT[k].DESC;
}else{implantString=implantString+";&nbsp;"+procItem.IMPLANT[k].DESC;
}}sHov=sHov+implantString+"</dd>";
sHov=sHov+"<dt class='proc3-det-name'><span>"+proc3I18n.COMMENTS+":</span></dt><dd class='proc3-det-name'>"+hov_Comment+"</dd>";
}sHov=sHov+"</dl></div>";
return sHov;
}function singleRowProcHTML(procItem,onsetDate,onsetDateHvr,commentString,i){var sHTML="";
var sIndend="";
var displayName=procItem.DISPLAY_AS?procItem.DISPLAY_AS:"--";
var providerName=procItem.PROVIDER?procItem.PROVIDER:"--";
var displayDate=onsetDate?onsetDate:"--";
if(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===0){sIndend="&nbsp;&nbsp;&nbsp;&nbsp;";
}var zebraStriping=(i%2)?"even":"odd";
sHTML="<h3 class='info-hd'><SPAN>"+procItem.DISPLAY_AS+"</SPAN></h3><dl class='proc3-info "+zebraStriping+"'><dt class='proc3-name-indend'><span>"+proc3I18n.PROCEDURE+"</span></dt><dd class='proc3-name-indend'>"+sIndend+displayName+"</dd><dt class='proc3-provider'><span>"+proc3I18n.PROVIDER+"</span></dt><dd class='proc3-provider'>"+providerName+"</dd><dt class='proc3-implant'><span>"+proc3I18n.IMPLANT+"</span></dt>";
if(procItem.IMPLANT.length>0){sHTML=sHTML+"<dd class='proc3-implant-img'><div class = 'proc3-implant-yes' data-caseId='"+procItem.SURG_CASE_ID+"'>&nbsp</div></dd>";
}else{sHTML=sHTML+"<dd class='proc3-implant'><span>&nbsp;</span></dd>";
}sHTML=sHTML+"<dt class='proc3-date'><span>"+proc3I18n.SIG_LINE+"</span></dt><dd class='proc3-date'>"+displayDate+"</dd></span></dl><h4 class='det-hd'><span>"+proc3I18n.PROCEDURE_DETAILS+"</span></h4>";
sHTML=sHTML+hoverString(procItem,onsetDateHvr,commentString);
return sHTML;
}function sortSecondaryProcedures(compID,df){var sHTML="";
var component=MP_Util.GetCompObjById(compID);
component.proc3SecondaryArr.sort(sortByProcName);
var sl=component.proc3SecondaryArr.length;
for(a=0;
a<sl;
a++){oProcItem=component.proc3SecondaryArr[a];
sHTML=generateProcHTML(compID,oProcItem,df,a);
}}function sortByProcName(a,b){if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}function generateProcHTML(compID,procItem,df,i){var commentString="";
var onsetDate="";
var onsetDateHvr="";
var dateTime=null;
var component=MP_Util.GetCompObjById(compID);
if(procItem.ONSET){dateTime=new Date();
var onsetDt=procItem.ONSET_UTC;
dateTime.setISO8601(onsetDt);
if(procItem.DATE_FLAG===0||procItem.DATE_FLAG===1){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
onsetDateHvr=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}else{if(procItem.DATE_FLAG===2){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_MONTH_4YEAR_NO_DATE);
onsetDateHvr=onsetDate;
}else{if(procItem.DATE_FLAG===3){onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_4YEAR);
onsetDateHvr=onsetDate;
}}}}var nCommentLen=procItem.COMMENTS.length;
for(var k=0;
k<nCommentLen;
k++){var begin_dttm="";
if(procItem.COMMENTS[k].BEG_EFFECTIVE_DT_TM){dateTime=new Date();
var beginDt=procItem.COMMENTS[k].BEG_EFFECTIVE_DT_TM;
dateTime.setISO8601(beginDt);
begin_dttm=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}if(procItem.SURG_PROC_IND===0){commentString+=begin_dttm+" - "+procItem.COMMENTS[k].NAME_FULL_FORMATTED+"<br/>"+procItem.COMMENTS[k].LONG_TEXT+"<br/>";
}else{commentString+=procItem.COMMENTS[k].LONG_TEXT+"<br/>";
}}var sProcHTML=singleRowProcHTML(procItem,onsetDate,onsetDateHvr,commentString,i);
var thisProc={DISPLAY_AS:procItem.DISPLAY_AS,IMPLANT_IND:procItem.IMPLANT_IND,SURG_PROC_IND:procItem.SURG_PROC_IND,ONSET_UTC:procItem.ONSET_UTC,PRIMARY_PROC_IND:procItem.PRIMARY_PROC_IND,SURG_CASE_NBR_FORMATTED:procItem.SURG_CASE_NBR_FORMATTED,SURG_CASE_ID:procItem.SURG_CASE_ID,HTML:sProcHTML};
if(procItem.SURG_PROC_IND===0||(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===1)){component.ProcActiveList.push(thisProc);
}else{if(procItem.SURG_PROC_IND===1&&procItem.PRIMARY_PROC_IND===0){component.SecondProcHtmlList.push(thisProc);
}}return sProcHTML;
}return{GetProcedureTable:function(component){var sendAr=[];
var criterion=component.getCriterion();
var encntrs=component.getViewableEncntrs();
var encntrVal=(encntrs)?"value("+encntrs+")":"0.0";
sendAr.push("^MINE^",criterion.person_id+".0",encntrVal,criterion.provider_id+".0",criterion.ppr_cd+".0",1);
MP_Core.XMLCclRequestWrapper(component,"mp_get_consolidated_procedures",sendAr,true);
},RenderComponent:function(component,recordData){component.proc3Arr=[];
component.ProcActiveList=[];
component.proc3SecondaryArr=[];
component.SecondProcHtmlList=[];
component.GroupTypeClick=1;
component.PROC_HIST_CNT=recordData.PROC_HIST_CNT;
component.SURG_PROC_CNT=recordData.SURG_PROC_CNT;
try{var jsHTML=[];
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var procCnt=recordData.PROC_CNT;
for(var j=0;
j<procCnt;
j++){var oProc=recordData.PROC[j];
if(oProc.SURG_PROC_IND===0||(oProc.SURG_PROC_IND===1&&oProc.PRIMARY_PROC_IND===1)){component.proc3Arr.push(recordData.PROC[j]);
}else{if(oProc.SURG_PROC_IND===1&&oProc.PRIMARY_PROC_IND===0){component.proc3SecondaryArr.push(recordData.PROC[j]);
}}}var compID=component.getComponentId();
var compObj=MP_Util.GetCompObjByStyleId(compID);
jsHTML.push("<div class='content-hdr proc3-header'><div class = 'proc3-table' id = 'ProcHdrRow",compID,"'><dl class='proc3-info hdr'><dd class='proc3-info-hdr proc3-nm-hd'>",proc3I18n.PROCEDURE,"</dd><dd class='proc3-info-hdr proc3-provider-hd'>",proc3I18n.SURGEON,"</dd><dd class='proc3-info-hdr proc3-implant-hd'>",proc3I18n.IMPLANT,"</dd><dd class='proc3-info-hdr proc3-dt-hd descend'>",proc3I18n.DATE,"</dd></dl></div></div><div id='procContent",compID,"'>");
jsHTML.push("<div class='",MP_Util.GetContentClass(component,recordData.PROC_CNT),"'>");
sortProcedure(component.proc3Arr);
sortSecondaryProcedures(compID,df);
displayProcedures(compID,component.proc3Arr,jsHTML,df);
jsHTML.push("</div></div>");
var countText;
if(component.isSurgiNet()){countText=MP_Util.CreateTitleText(component,recordData.PROC_CNT);
}else{countText=MP_Util.CreateTitleText(component,recordData.PROC_HIST_CNT);
}MP_Util.Doc.FinalizeComponent(jsHTML.join(""),component,countText);
if(component.isScrollingEnabled()&&(procCnt>=component.getScrollNumber())){var xNode=Util.Style.g("proc3-header",compObj,"DIV");
if(xNode[0]){Util.Style.acss(xNode[0],"hdr-scroll");
}}var yesElements=Util.Style.g("proc3-implant-yes");
var yl=yesElements.length;
for(var y=0;
y<yl;
y++){Util.addEvent(yesElements[y],"click",function(){var caseId=this.getAttribute("data-caseId");
var activeLen=component.proc3Arr.length;
var confirmMsg="";
var caseNumber="";
for(var a=0;
a<activeLen;
a++){var procItem=component.proc3Arr[a];
if(procItem.SURG_CASE_ID==caseId){caseNumber=procItem.SURG_CASE_NBR_FORMATTED;
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){confirmMsg+=procItem.IMPLANT[k].DESC+"<br />";
}break;
}}});
}var navCount;
if(component.isSurgiNet()){navCount=recordData.PROC_CNT;
}else{navCount=recordData.PROC_HIST_CNT;
}component.setResultCount(navCount);
}catch(err){MP_Util.LogJSError(err,null,"procedurehistory_o3.js","RenderComponent");
throw (err);
}},RefreshComponent:function(compID){var jsHTML=[];
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var component=MP_Util.GetCompObjById(compID);
var compObj=MP_Util.GetCompObjByStyleId(compID);
var procCnt=component.ProcActiveList.length+component.SecondProcHtmlList.length;
jsHTML.push("<div class='content-hdr proc3-header'><div class = 'proc3-table' id = 'ProcHdrRow",compID,"'><dl class='proc3-info'><dd class='proc3-info-hdr proc3-nm-hd'>",proc3I18n.PROCEDURE,"</dd><dd class='proc3-info-hdr proc3-provider-hd'>",proc3I18n.SURGEON,"</dd><dd class='proc3-info-hdr proc3-implant-hd'>",proc3I18n.IMPLANT,"</dd><dd class='proc3-info-hdr proc3-dt-hd descend'>",proc3I18n.DATE,"</dd></dl></div></div><div id='procContent",compID,"'>");
jsHTML.push("<div class='",MP_Util.GetContentClass(component,procCnt),"'>");
var activeLen=component.ProcActiveList.length;
var secondProcsLen=component.SecondProcHtmlList.length;
var oSecondProcItm;
var a;
var b;
if(component.GroupTypeClick===0){for(a=0;
a<activeLen;
a++){jsHTML.push(component.ProcActiveList[a].HTML);
for(b=0;
b<secondProcsLen;
b++){oSecondProcItm=component.SecondProcHtmlList[b];
if(component.ProcActiveList[a].SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){jsHTML.push(oSecondProcItm.HTML);
}}}}else{var sHistoryHTML=[];
var sSurginetHTML=[];
for(a=0;
a<activeLen;
a++){if(component.ProcActiveList[a].SURG_PROC_IND===0){sHistoryHTML.push(component.ProcActiveList[a].HTML);
}else{sSurginetHTML.push(component.ProcActiveList[a].HTML);
for(b=0;
b<secondProcsLen;
b++){oSecondProcItm=component.SecondProcHtmlList[b];
if(component.ProcActiveList[a].SURG_CASE_ID===oSecondProcItm.SURG_CASE_ID){sSurginetHTML.push(oSecondProcItm.HTML);
}}}}if(component.isSurgiNet()){jsHTML.push("<div><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.discernabu.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",proc3I18n.SURGICAL_RECORD," (",component.SURG_PROC_CNT,")</span></h3>");
jsHTML.push("<div class='sub-sec-content'>",sSurginetHTML.join(""),"</div></div>");
}jsHTML.push("<div><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.discernabu.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",proc3I18n.PROCEDURES," (",component.PROC_HIST_CNT,")</span></h3>");
jsHTML.push("<div class='sub-sec-content'>",sHistoryHTML.join(""),"</div></div>");
}var countText;
if(component.isSurgiNet()){countText=MP_Util.CreateTitleText(component,recordData.PROC_CNT);
}else{countText=MP_Util.CreateTitleText(component,recordData.PROC_HIST_CNT);
}MP_Util.Doc.FinalizeComponent(jsHTML.join(""),component,countText);
component.resizeComponent();
if(component.isScrollingEnabled()&&(procCnt>=component.getScrollNumber())){var xNode=Util.Style.g("proc3-header",compObj,"DIV");
if(xNode[0]){Util.Style.acss(xNode[0],"hdr-scroll");
}}var yesElements=Util.Style.g("proc3-implant-yes");
var yl=yesElements.length;
for(var y=0;
y<yl;
y++){Util.addEvent(yesElements[y],"click",function(){var caseId=this.getAttribute("data-caseId");
var activeLen=component.proc3Arr.length;
var confirmMsg="";
var caseNumber="";
for(a=0;
a<activeLen;
a++){var procItem=component.proc3Arr[a];
if(procItem.SURG_CASE_ID==caseId){caseNumber=procItem.SURG_CASE_NBR_FORMATTED;
var implantLen=procItem.IMPLANT.length;
for(var k=0;
k<implantLen;
k++){confirmMsg+=procItem.IMPLANT[k].DESC+"<br />";
}break;
}}});
}return;
},checkSortingOrder:function(compID,colNum){var sortOrd=0;
var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc3-info-hdr",spnPar,"TD");
var tlen=tdAr.length;
for(var t=0;
t<tlen;
t++){var td=tdAr[t];
if(t==colNum){if(Util.Style.ccss(td,"descend")){sortOrd=1;
}else{sortOrd=0;
}}}return sortOrd;
},sortProcedures:function(colNum,compID){var sortOrd=0;
var component=MP_Util.GetCompObjById(compID);
sortOrd=CERN_PROCEDURE_O3.checkSortingOrder(compID,colNum);
switch(colNum){case 0:function sortByName(a,b){var sortRes=0;
if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){sortRes=1;
}else{sortRes=-1;
}if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}component.ProcActiveList.sort(sortByName);
break;
case 1:function sortByImplant(a,b){var sortRes=0;
if(a.IMPLANT_IND<b.IMPLANT_IND){sortRes=1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}else{if(a.IMPLANT_IND>b.IMPLANT_IND){sortRes=-1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}component.ProcActiveList.sort(sortByImplant);
break;
case 2:function sortByDate(a,b){var sortRes=0;
if(a.ONSET_UTC<b.ONSET_UTC){sortRes=1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}else{if(a.ONSET_UTC>b.ONSET_UTC){sortRes=-1;
if(sortOrd==1){sortRes=sortRes*-1;
}return sortRes;
}}if(a.DISPLAY_AS.toUpperCase()>b.DISPLAY_AS.toUpperCase()){return 1;
}if(a.DISPLAY_AS.toUpperCase()<b.DISPLAY_AS.toUpperCase()){return -1;
}return 0;
}component.ProcActiveList.sort(sortByDate);
break;
}CERN_PROCEDURE_O3.RefreshComponent(compID);
var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc3-info-hdr",spnPar,"TD");
var tlen=tdAr.length;
for(var t=0;
t<tlen;
t++){var td=tdAr[t];
if(t==colNum){if(sortOrd===0){Util.Style.acss(td,"descend");
if(!Util.Style.ccss(td,"ascend")){Util.Style.rcss(td,"ascend");
}}else{Util.Style.acss(td,"ascend");
if(!Util.Style.ccss(td,"descend")){Util.Style.rcss(td,"descend");
}}}else{if(Util.Style.ccss(td,"descend")){Util.Style.rcss(td,"descend");
}if(Util.Style.ccss(td,"ascend")){Util.Style.rcss(td,"ascend");
}}}},CheckCurrentSortIndicator:function(compID){var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc3-info-hdr",spnPar,"TD");
var tLen=tdAr.length;
var nSortInd=0;
for(var t=0;
t<tLen;
t++){var td=tdAr[t];
if(Util.Style.ccss(td,"ascend")){if(t===0){nSortInd=11;
}else{if(t==1){nSortInd=21;
}else{if(t==2){nSortInd=31;
}}}break;
}if(Util.Style.ccss(td,"descend")){if(t===0){nSortInd=12;
}else{if(t==1){nSortInd=22;
}else{if(t==2){nSortInd=32;
}}}break;
}}return nSortInd;
},DisplayCurrentSortIndicator:function(compID,nSortInd){var spnPar=_g("ProcHdrRow"+compID);
var tdAr=Util.Style.g("proc3-info-hdr",spnPar,"TD");
var td;
switch(nSortInd){case 11:td=tdAr[0];
Util.Style.acss(td,"ascend");
break;
case 12:td=tdAr[0];
Util.Style.acss(td,"descend");
break;
case 21:td=tdAr[1];
Util.Style.acss(td,"ascend");
break;
case 22:td=tdAr[1];
Util.Style.acss(td,"descend");
break;
case 31:td=tdAr[2];
Util.Style.acss(td,"ascend");
break;
case 32:td=tdAr[2];
Util.Style.acss(td,"descend");
break;
}},DisplayByHisType:function(compID){var nSortInd=CERN_PROCEDURE_O3.CheckCurrentSortIndicator(compID);
CERN_PROCEDURE_O3.RefreshComponent(compID);
CERN_PROCEDURE_O3.DisplayCurrentSortIndicator(compID,nSortInd);
},ConfirmWindow:function(msg,title,btnTrueText,btnFalseText,falseBtnFocus,cb){var btnTrue="<button id='proc3acTrueButton' data-val='1'>"+((btnTrueText)?btnTrueText:i18n.discernabu.CONFIRM_OK)+"</button>";
var btnFalse="";
if(btnFalseText){btnFalse="<button id='proc3acFalseButton' data-val='0'>"+btnFalseText+"</button>";
}if(!title){title="&nbsp;";
}var closeBox=function(){var btnVal=parseInt(this.getAttribute("data-val"),10);
$(".proc3-modal-div").remove();
$(".proc3-modal-dialog").remove();
$("html").css("overflow","auto");
if(btnVal&&typeof cb==="function"){cb();
}};
var modalDiv=Util.cep("div",{className:"proc3-modal-div"});
var dialog=Util.cep("div",{className:"proc3-modal-dialog"});
dialog.innerHTML="<div class='proc3-modal-dialog-hd'>"+title+"</div><div class='proc3-modal-dialog-content'>"+msg+"</div><div class='proc3-modal-dialog-ft'><div class='proc3-modal-dialog-btns'>"+btnTrue+btnFalse+"</div></div>";
var docBody=document.body;
Util.ac(modalDiv,docBody);
Util.ac(dialog,docBody);
Util.addEvent(_g("proc3acTrueButton"),"click",closeBox);
if(btnFalseText){Util.addEvent(_g("proc3acFalseButton"),"click",closeBox);
}if(falseBtnFocus&&btnFalseText){_g("proc3acFalseButton").focus();
}else{_g("proc3acTrueButton").focus();
}$("html").css("overflow","hidden");
var hdHeight=$(".proc3-modal-dialog-hd:first").height();
var ftHeight=$(".proc3-modal-dialog-ft:first").height();
var vpHeight=$(window).height()-hdHeight-ftHeight;
vpHeight=vpHeight*(0.8);
$(".proc3-modal-dialog-content").css("max-height",vpHeight+"px");
$(modalDiv).height($(document).height());
}};
}();
