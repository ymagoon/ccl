"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = require("../../../UIComponent.page");

var _UIComponent2 = _interopRequireDefault(_UIComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-DataSection-cell";
var DATASECTION_LABEL = ".mpageui-DataSection-label";
var DATASECTION_TEXT = ".mpageui-DataSection-text";
var DATASECTION_CONTENT = ".mpageui-DataSection-content";

var LABEL_POSITION = {
    BELOW: "below"
};

var DEFAULT_SPAN_SIZE = 12;

/**
 * @class DataSectionCellPage
 * @alias module:MPageFusion/testing.atomic.data.DataSectionCellPage
 * @private
 */

var DataSectionCellPage = function (_UIComponentPage) {
    _inherits(DataSectionCellPage, _UIComponentPage);

    function DataSectionCellPage() {
        _classCallCheck(this, DataSectionCellPage);

        return _possibleConstructorReturn(this, (DataSectionCellPage.__proto__ || Object.getPrototypeOf(DataSectionCellPage)).apply(this, arguments));
    }

    _createClass(DataSectionCellPage, [{
        key: "elementSelector",
        get: function get() {
            return ROOT_SELECTOR;
        }

        /**
         * the label of the data section
         * @memberOf module:MPageFusion/testing.atomic.dat.DataSectionCellPage
         * @returns {Promise<string>} label text
         */

    }, {
        key: "label",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css(DATASECTION_LABEL)).then(function (labelElement) {
                    return labelElement.getText();
                });
            });
        }

        /**
         * the text of the data section
         * @memberOf module:MPageFusion/testing.atomic.dat.DataSectionCellPage
         * @returns {Promise<string>} data section text
         */

    }, {
        key: "text",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css(DATASECTION_TEXT)).then(function (textElement) {
                    return textElement.getText();
                });
            });
        }

        /**
         * content selector list used inside data section cell
         * @memberOf module:MPageFusion/testing.atomic.dat.DataSectionCellPage
         * @returns {string} selector list of data section content
         */

    }, {
        key: "content",
        get: function get() {
            return this.selectorList.concat(DATASECTION_CONTENT);
        }

        /**
         * returns the label position
         * @memberOf module:MPageFusion/testing.atomic.dat.DataSectionCellPage
         * @returns {Promise<string>} the position if exists
         */

    }, {
        key: "labelPosition",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css(DATASECTION_LABEL)).then(function (labelElement) {
                    return labelElement.getAttribute("class");
                }).then(function (classNames) {
                    return Object.values(LABEL_POSITION).find(function (labelPosition) {
                        return classNames.includes("mpageui-DataSection-label--" + labelPosition);
                    }) || "";
                });
            });
        }

        /**
         * returns the span value if applied inside data section cell. defaults to 12 as fallback
         * @memberOf module:MPageFusion/testing.atomic.dat.DataSectionCellPage
         * @returns {Number} numeric value for applied for data section cell.
         */

    }, {
        key: "span",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.getAttribute("class");
            }).then(function (classNames) {
                var matchedClass = classNames.match(new RegExp("mpageui-u-flexgrid-col-(\\d+)", "g"));
                return matchedClass.length ? matchedClass[0].slice(-2).replace("-", "") : DEFAULT_SPAN_SIZE;
            });
        }
    }]);

    return DataSectionCellPage;
}(_UIComponent2.default);

exports.default = DataSectionCellPage;