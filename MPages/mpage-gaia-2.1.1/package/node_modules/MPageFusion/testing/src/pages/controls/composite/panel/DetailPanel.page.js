"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = require("../../../UIComponent.page");

var _UIComponent2 = _interopRequireDefault(_UIComponent);

var _ContentHeader = require("../../atomic/header/content-header/ContentHeader.page");

var _ContentHeader2 = _interopRequireDefault(_ContentHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-DetailPanelLayout";
var DETAIL_PANEL_NAMESPACE = ".mpageui-DetailPanelLayout-panel .mpageui-DetailPanel";
var BANNER_SECTION = ".mpageui-DetailPanel-bannersSection";
var TITLE_SECTION = ".mpageui-DetailPanel-titleSection";
var BODY_SECTION = ".mpageui-DetailPanel-bodySection";

var DETAIL_PANEL_SIZES = {
    READING_PANE: "sizeReading",
    FULL_SCREEN: "sizeFullScreen"
};
var CLOSE_BUTTON = ".mpageui-ContentHeader-action-right";

/**
 * The DetailPanelPage class
 * @class module:MPageFusion/testing.composite.panel.DetailPanelPage
 *
 * @example
 * const panel = new composite.panel.DetailPanelPage(driver);
 * panel.isOpen returns state of detail panel
 * panel.size returns the either reading or fullscreen size of panel
 * panel.close() closes the detail panel
 * panel.headerContent retuns instance of ContentHeaderPage instance
 * panel.bodySelectorList returns the selector list for body content
 */

var DetailPanelPage = function (_UIComponentPage) {
    _inherits(DetailPanelPage, _UIComponentPage);

    function DetailPanelPage(driver) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { panelIndex: null };

        _classCallCheck(this, DetailPanelPage);

        // Custom value could be set if there are multiple detail panels within the root.
        var _this = _possibleConstructorReturn(this, (DetailPanelPage.__proto__ || Object.getPrototypeOf(DetailPanelPage)).call(this, driver, options));

        _this.detailPanelNamespace = options.panelIndex ? ".mpageui-DetailPanelLayout-panel:nth-child(" + options.panelIndex + ") .mpageui-DetailPanel" : DETAIL_PANEL_NAMESPACE;
        return _this;
    }

    _createClass(DetailPanelPage, [{
        key: "close",


        /**
         * closes the detail panel
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Promise} closes the detail panel
         */
        value: function close() {
            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css(CLOSE_BUTTON)).then(function (closeButton) {
                    return closeButton.click();
                });
            });
        }

        /**
         * returns content header page instance
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {ContentHeaderPage} content header page instance
         */

    }, {
        key: "elementSelector",
        get: function get() {
            return ROOT_SELECTOR;
        }

        /**
         * returns true if detail panel is open false otherwise
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Promise<Boolean>} true if open, false otherwise
         */

    }, {
        key: "isOpen",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.getAttribute("class").then(function (classNames) {
                    return classNames.includes("is-open") || false;
                });
            });
        }

        /**
         * size of the detail panel, reading or fullscreen mode if applied else null
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Promise<String>} reading or fullscreen mode if applied else null
         */

    }, {
        key: "size",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.getAttribute("class");
            }).then(function (classNames) {
                return Object.values(DETAIL_PANEL_SIZES).find(function (size) {
                    return classNames.includes("mpageui-DetailPanelLayout--" + size);
                }) || null;
            });
        }
    }, {
        key: "headerContent",
        get: function get() {
            return new _ContentHeader2.default(this.driver, {
                selectorList: this.selectorList.concat(this.detailPanelNamespace)
            });
        }

        /**
         * returns banner selector list
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Array<String>} banner selector list
         */

    }, {
        key: "bannerContentSelectorList",
        get: function get() {
            return this.selectorList.concat(this.detailPanelNamespace, BANNER_SECTION);
        }

        /**
         * returns title selector list
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Array<String>} title selector list
         */

    }, {
        key: "titleContentSelectorList",
        get: function get() {
            return this.selectorList.concat(this.detailPanelNamespace, TITLE_SECTION);
        }

        /**
         * returns body selector list
         * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
         * @returns {Array<String>} body selector list
         */

    }, {
        key: "bodyContentSelectorList",
        get: function get() {
            return this.selectorList.concat(this.detailPanelNamespace, BODY_SECTION);
        }
    }]);

    return DetailPanelPage;
}(_UIComponent2.default);

exports.default = DetailPanelPage;