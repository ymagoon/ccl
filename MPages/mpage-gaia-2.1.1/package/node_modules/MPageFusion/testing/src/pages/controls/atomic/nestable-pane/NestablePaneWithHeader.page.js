"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _UIComponent = require("../../../UIComponent.page");

var _UIComponent2 = _interopRequireDefault(_UIComponent);

var _ContentHeader = require("../header/content-header/ContentHeader.page");

var _ContentHeader2 = _interopRequireDefault(_ContentHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-NestablePane";
var VISIBLE = "mpageui-NestablePane-visible";

/**
 * The NestablePaneWithHeader class
 * @class module:MPageFusion/testing.atomic.panel.nestablePane.NestablePaneWithHeader
 *
 * @example
 * const nestablePane = new NestablePaneWithHeader(driver,"");
 * nestablePane.click()
 */

var NestablePaneWithHeader = function (_UIComponentPage) {
    _inherits(NestablePaneWithHeader, _UIComponentPage);

    function NestablePaneWithHeader(driver, args) {
        _classCallCheck(this, NestablePaneWithHeader);

        var _this = _possibleConstructorReturn(this, (NestablePaneWithHeader.__proto__ || Object.getPrototypeOf(NestablePaneWithHeader)).call(this, driver, args));

        _this._contentHeader = new _ContentHeader2.default(driver, {
            selectorList: _this.selectorList,
            useExactSelector: true
        });
        return _this;
    }

    _createClass(NestablePaneWithHeader, [{
        key: "dismiss",


        /**
         * Closes the nestable pane
         * @memberOf module:MPageFusion/testing.atomic.panel.nestablePane.NestablePaneWithHeader
         * @returns {Promise<string>} click action
         */
        value: function dismiss() {
            return this._contentHeader.leftAction.click();
        }
    }, {
        key: "elementSelector",
        get: function get() {
            return ROOT_SELECTOR;
        }

        /**
         * gets the nestablePane content selector list
         * @memberOf module:MPageFusion/testing.atomic.panel.nestablePane.NestablePaneWithHeader
         * @returns {Array} selector list
         */

    }, {
        key: "contentSelectorList",
        get: function get() {
            return this.selectorList;
        }

        /**
         * whether or not the nestablePane is visible
         * @memberOf module:MPageFusion/testing.atomic.panel.nestablePane.NestablePaneWithHeader
         * @returns {Promise<boolean>} isVisible
         */

    }, {
        key: "isVisible",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.getAttribute("class");
            }).then(function (classNames) {
                return classNames.includes(VISIBLE);
            });
        }

        /**
         * gets the nestable pane header display
         * @memberOf module:MPageFusion/testing.atomic.panel.nestablePane.NestablePaneWithHeader
         * @returns {Promise<string>} header display
         */

    }, {
        key: "headerDisplay",
        get: function get() {
            return this._contentHeader.display;
        }
    }]);

    return NestablePaneWithHeader;
}(_UIComponent2.default);

exports.default = NestablePaneWithHeader;