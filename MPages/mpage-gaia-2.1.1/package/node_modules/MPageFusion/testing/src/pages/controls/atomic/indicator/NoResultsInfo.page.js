"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = require("../../../UIComponent.page");

var _UIComponent2 = _interopRequireDefault(_UIComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-NoResultsInfo";
var ACTION_SELECTOR = ".mpageui-NoResultsInfo-action";
var TITLE_SELECTOR = ".mpageui-NoResultsInfo-title--";
var ICON_SELECTOR = ".mpageui-NoResultsInfo-icon--";
var DESCRIPTION_SELECTOR = ".mpageui-NoResultsInfo-description--";

var SIZE = {
    SMALL: "small",
    MEDIUM: "medium",
    LARGE: "large"
};

/**
 * The NoResultsInfoPage class
 * @class module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
 *
 * @example
 * const args = Object.assign({}, { config: { size: SIZE.LARGE } });
 * const noResultsInfo = new NoResultsInfoPage(driver, args);
 * noResultInfo.get("display").then((display) =>  assert(display === "No Results"));
 */

var NoResultsInfoPage = function (_UIComponentPage) {
    _inherits(NoResultsInfoPage, _UIComponentPage);

    function NoResultsInfoPage(driver, args) {
        _classCallCheck(this, NoResultsInfoPage);

        var _this = _possibleConstructorReturn(this, (NoResultsInfoPage.__proto__ || Object.getPrototypeOf(NoResultsInfoPage)).call(this, driver, args.config && args.config.size ? args : Object.assign({}, args, {
            config: Object.assign({}, args.config, {
                size: SIZE.SMALL
            })
        })));

        _this.config = Object.assign({}, args.config);
        return _this;
    }

    _createClass(NoResultsInfoPage, [{
        key: "elementSelector",
        get: function get() {
            return ROOT_SELECTOR;
        }

        /**
        * the check whether icon is displayed or not
        * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
        * @returns {Promise<Boolean>} isIconDisplayed
        */

    }, {
        key: "isIconDisplayed",
        get: function get() {
            var _this2 = this;

            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css("" + ICON_SELECTOR + _this2.config.size)).then(function () {
                    return true;
                }).catch(function () {
                    return false;
                });
            });
        }

        /**
        * the check whether icon is displayed or not
        * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
        * @returns {Promise<Boolean>} isActionVisible
        */

    }, {
        key: "isActionVisible",
        get: function get() {
            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css(ACTION_SELECTOR)).then(function () {
                    return true;
                }).catch(function () {
                    return false;
                });
            });
        }

        /**
        * to get display
        * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
        * @returns {Promise<String>} display
        */

    }, {
        key: "display",
        get: function get() {
            var _this3 = this;

            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css("" + TITLE_SELECTOR + _this3.config.size)).then(function (title) {
                    return title.getText();
                }).catch(function () {
                    return "";
                });
            });
        }

        /**
        * to get description
        * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
        * @returns {Promise<String>} description
        */

    }, {
        key: "description",
        get: function get() {
            var _this4 = this;

            return this.getRootElement().then(function (element) {
                return element.findElement(_seleniumWebdriver.By.css("" + DESCRIPTION_SELECTOR + _this4.config.size)).then(function (description) {
                    return description.getText();
                }).catch(function () {
                    return "";
                });
            });
        }
    }]);

    return NoResultsInfoPage;
}(_UIComponent2.default);

exports.default = NoResultsInfoPage;