/*
 * Applied to the root element of a ViewpointTab, which is a single Tab within
 * the list of tabs in the tab list.
 *
 * @breakpoint {medium} - When the medium breakpoint is hit, the ViewpointTab
 *      will shrink to a more compact tab. The selected styles are also
 *      altered.
 */
.mpageui-ViewpointTab {
    // Flex
    .flex-display(flex);
    .flex(1);
    .flex-direction(row);

    overflow: hidden;
    position: relative;

    // Appearance
    background: @base;
    background-color: @base;
    cursor: default;
    border-bottom: 1px solid @viewpoint-tab-border-color;
    color: @inverse;

    &:after {
        content: "";
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 2px;
        background-color: transparent;
    }

    // State
    // -> Selected State
    &[aria-selected="true"] {
        &:hover {
            background: @viewpoint-tab-is-selected-bg;
            background-color: @viewpoint-tab-is-selected-bg;
        }
        .screen-md-up({
            color: @inverse;
            background: @base;
            background-color: @base;

            &:hover {
                background: @base;
                background-color: @base;
            }

            &:after {
                background-color: @viewpoint-tab-is-selected-accent;
            }
        });

        color: @base;
        background: @viewpoint-tab-is-selected-bg;
        background-color: @viewpoint-tab-is-selected-bg;
    }

    // -> Dragging State
    &.is-dragging {
        color: @viewpoint-tab-is-dragging-color;
        background: @viewpoint-tab-is-dragging-bg !important;
        background-color: @viewpoint-tab-is-dragging-bg !important;
        border: 1px dashed @viewpoint-tab-is-dragging-border-color;
    }

    // -> Hover State
    &:hover {
        background: @viewpoint-tab-hover-bg;
        background-color: @viewpoint-tab-hover-bg;
    }

    // Responsive
    .screen-md-up({
        color: @viewpoint-tab-color;
        border-bottom: none;
        border-right: 1px solid @viewpoint-tab-border-color;
        .linear-gradient(@viewpoint-tab-bg-top, @viewpoint-tab-bg-bottom);
        max-width: @viewpoint-tab-max-width;
        &:hover {
            .linear-gradient(@viewpoint-tab-bg-top, @viewpoint-tab-bg-bottom);
        }
    });
}

/*
 * Applied to the link within a ViewpointTab. This is the clickable area.

 * @breakpoint {medium} - When the medium breakpoint is hit, the padding is
 *      adjusted to be more compact.
 */
.mpageui-ViewpointTab-link {
    // Flex
    .flex-display(flex);
    .flex(1);
    .align-items(center);
    .flex-direction(row);

    color: inherit;
    cursor: default;

    // Dimensions
    padding: @viewpoint-tab-link-padding;

    .screen-md-up({
        padding: @viewpoint-tab-link-padding-md-up;
    });

    overflow: hidden;

    &:hover {
        cursor: default;
        color: inherit;
        text-decoration: none;
    }
}

/*
 * Applied to the text display of a ViewpointTab.

 * @breakpoint {medium} - Due to the size of the close icon scaling, the text
 *      display needs to be adjusted for proper truncation.
 */
.mpageui-ViewpointTab-display {
    width: calc(~"100% - @{viewpoint-tab-close-scale}");
    display: inline-block;
    // Responsive
    .screen-md-up({
        padding-right: 5px;
        .text-truncate();
        width: calc(~"100% - @{viewpoint-tab-close-scale-md-up}");
    });
}

/*
 * Applied to the close target within a ViewpointTab. This serves as the
 * clickable target of the close action and contains the close icon.
 *
 * @breakpoint {medium} - The dimensions of the close action are compacted.
 */
.mpageui-ViewpointTab-close {
    // Flex
    .flex-display(flex);

    // Dimensions
    width: @viewpoint-tab-close-scale;
    height: @viewpoint-tab-close-scale;

    // Appearance
    color: @viewpoint-tab-close-icon-color;
    cursor: pointer;

    &:hover {
        color: @viewpoint-tab-close-icon-color;
    }
    // Parent State
    .mpageui-ViewpointTab[aria-selected="true"] & {
        color: inherit;
    }
    .mpageui-ViewpointTab.is-dragging & {
        display: none;
    }

    // Responsive
    .screen-md-up({
        .mpageui-ViewpointTab[aria-selected="true"] & {
            color: @viewpoint-tab-close-icon-color;
        }
        width: @viewpoint-tab-close-scale-md-up;
        height: @viewpoint-tab-close-scale-md-up;
    });
}

/*
 * Applied to the actual close icon.
 */
.mpageui-ViewpointTab-closeIcon {
    //color: @viewpoint-tab-close-icon-color;
    margin: auto;
    width: @viewpoint-tab-close-icon-scale;
    height: @viewpoint-tab-close-icon-scale;

    // Responsive
    .screen-md-up({
        width: @viewpoint-tab-close-icon-scale-md-up;
        height: @viewpoint-tab-close-icon-scale-md-up;
    });
}
