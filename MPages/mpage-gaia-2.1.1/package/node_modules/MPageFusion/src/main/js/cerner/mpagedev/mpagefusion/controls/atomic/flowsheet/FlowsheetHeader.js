/**
 * @fileoverview TableHeader class
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import FlowsheetRow from "./FlowsheetRow";
import classNames from "classnames";
import { getFlowsheetMinWidth } from "./helpers";

/**
 * Create objects for header cells since they need special treatment
 * @param {Object} cells - column object
 * @returns {Array.<Object>} Collection of cell objects
 * @private
 */
const prepareHeaderCellDisplay = (cells) => cells.map((cell) => ({
    display: cell.display,
    content: cell.content,
    selectable: false,
    key: cell.key,
    classNames: cell.classNames ? cell.classNames : ""
}));

/**
 * Create a single table row object since its an header
 * @param {Object} columns - column object
 * @returns {UIComponent} Object of FlowsheetRow class
 * @private
 */
const getRowObject = (columns) => new FlowsheetRow({
    cells: prepareHeaderCellDisplay(columns),
    isHeaderRow: true
}, []);

/**
 * Constructor for FlowsheetHeader
 * @extends UIComponent
 */
export default class FlowsheetHeader extends UIComponent {
    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            defaultClassNames: "mpageui-Flowsheet-header",
            classNames: "",
            columns: [],
            minWidth: "auto"
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            getRowObject(this.getProp("columns"))
        ];
    }

    /**
     * Calculates the minimum width and returns it
     * @param {int} columnMinWidth - Minimum column width
     * @returns {string} minimum width in px
     */
    getMinWidth(columnMinWidth) {
        return getFlowsheetMinWidth(this.getProp("columns").length, columnMinWidth);
    }

    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            columns: () => {
                this.replaceAllChildren(this.createChildren());
            }
        };
    }

    /**
     * @inheritdoc
     */
    view(el, props, children) {
        return el("div", {
            class: classNames({
                [ props.defaultClassNames ]: true,
                [ props.classNames ]: props.classNames.length > 0
            }),
            style: {
                "min-width": props.minWidth
            }
        }, this.renderChildren());
    }
}
