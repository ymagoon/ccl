/**
 * @fileoverview NotificationFooter class
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import FooterBase from "./FooterBase";
import Label from "../label";
import { forwardProp } from "../../../helpers/props/props";

/**
 * Default CSS class names
 * @type {{display: string}}
 */
const defaultClassNames = {
    display: "mpageui-u-text-size-base mpageui-u-text-color-secondary"
};

/**
 * NotificationFooter class.
 * @class NotificationFooter
 * @constructor
 */
export default class NotificationFooter extends UIComponent {
    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            classNames: "",
            display: "Cancel", // consumers should always override this
            bgStyle: FooterBase.BG_STYLE.ANCHOR
        };
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            display: (newDisplay) => {
                this.getChild("base")
                    .setProp("lSection", new Label({
                        classNames: defaultClassNames.display,
                        value: newDisplay
                    }));
            },
            classNames: forwardProp(this, "classNames", "base"),
            bgStyle: forwardProp(this, "bgStyle", "base")
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            {
                base: new FooterBase({
                    isBisected: true,
                    bgStyle: FooterBase.BG_STYLE.ANCHOR
                })
            }
        ];
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mChildren) {
        return this.renderChildren();
    }
}

/**
 * @inheritDoc
 */
NotificationFooter.BG_STYLE = FooterBase.BG_STYLE;
