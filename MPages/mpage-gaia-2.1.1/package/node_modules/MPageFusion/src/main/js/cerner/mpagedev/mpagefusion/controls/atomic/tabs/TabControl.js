"use strict";

import UIComponent from "../../../base";
import classNames from "classnames";

const NAMESPACE = "mpageui-TabControl";

export default class TabControl extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            classNames: "",
            selectedTabId: "",
            tabList: null,
            tabContents: null
        };
    }

    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            tabList: (tabList) => {
                this.replaceMappedChild("tabList", tabList);
            },
            tabContents: (tabContents) => {
                this.replaceMappedChild("tabContents", tabContents);
            },
            selectedTabId: (selectedTabId) => {
                this.getChild("tabList").setProp("selectedTabId", selectedTabId);
                this.getChild("tabContents").setProp("selectedTabId", selectedTabId);
            }
        };
    }

    /**
     * Handles the selection change on the child TabList.
     * @param {TabList} tabList - The child TabList that fired the selection
     * change.
     * @param {Tab} tab - The Tab that was selected.
     * @returns {undefined} Returns nothing.
     * @private
     */
    _handleTabListSelectionChange(tabList, tab) {
        this.stopPropagation("tabListSelectionChange");
        this.setProp("selectedTabId", tab.getProp("id"));
    }

    /**
     * Binds listeners for events that are fired by children of the
     * TabControl.
     * @returns {undefined} Returns nothing.
     */
    afterCreate() {
        this.on("tabListSelectionChange", this._handleTabListSelectionChange.bind(this));
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mappedChildren) {
        return el(
            "div",
            {
                class: classNames({
                    [ NAMESPACE ]: true,
                    [ props.classNames ]: (props.classNames !== "")
                })
            },
            [
                mappedChildren.tabList.render(),
                mappedChildren.tabContents.render()
            ]
        );
    }
}
