/**
 * @fileoverview
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import PopupSimple from "./PopupSimple";
import PopupHeader from "./PopupHeader";
import { forwardProp } from "../../../helpers/props/props";

export default class Popup extends UIComponent {
    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return PopupSimple
            .getPropNames()
            .reduce((coll, val) => {
                coll[ val ] = forwardProp(this, val, "popup");
                return coll;
            },
            {
                title: (newTitle) => {
                    this.getChild("popup")
                        .getChild("pane")
                        .getChild("header")
                        .setProp("title", newTitle);
                },
                alwaysShowHeader: (newAlwaysShowHeader) => {
                    this.getChild("popup")
                        .getChild("pane")
                        .getChild("header")
                        .setProp("alwaysShowHeader", newAlwaysShowHeader);
                }
            });
    }

    /**
     * Creates the children objects and returns them has an array
     * @returns {Array<UIComponent>} Array of UIComponent
     */
    createChildren() {
        return [
            {
                popup: new PopupSimple({
                    headerObj: new PopupHeader({
                        title: "",
                        alwaysShowHeader: false
                    })
                })
            }
        ];
    }

    /**
     * @inheritdoc
     */
    view(el, props, children, mChildren) {
        return this.renderChildren();
    }
}

Popup.EVENTS = PopupSimple.EVENTS;
Popup.SIZE = PopupSimple.SIZE;
Popup.POSITION = PopupSimple.POSITION;
