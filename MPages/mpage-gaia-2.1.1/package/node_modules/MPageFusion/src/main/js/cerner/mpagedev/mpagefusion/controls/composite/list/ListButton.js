import UIComponent from "../../../base";
import classNames from "classnames";
import Button from "../../atomic/button";
import { forwardProp } from "../../../helpers/props/props";
import { isNotEmpty } from "../../../helpers/core/array";

const BUTTON_CLICK = "ListButton::Internal::Click";

/**
 * A regular button that is meant to be used as a content for List controls.
 */
export default class ListButton extends UIComponent {

    beforeCreate() {
        this._rebuildClassNames = true;
    }

    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            display: "",
            icon: null,
            clickEventName: ListButton.EVENTS.CLICK,
            disabled: false,
            classNames: ""
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            { button: new Button({
                type: "list",
                clickEventName: BUTTON_CLICK
            }) }
        ];
    }

    /**
     * @inheritdoc
     */
    afterCreate() {
        this.convertEventUsingProp(
            BUTTON_CLICK,
            "clickEventName",
            (sourceControl) => [ this ]
        );
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            display: forwardProp(this, "display", "button"),
            disabled: (disabled) => {
                this.getChild("button").setProp("disabled", disabled);
                this._rebuildClassNames = true;
            },
            icon: (icon) => {
                this.getChild("button").setProp("icon", icon);
                this._rebuildClassNames = true;
            },
            classNames: (classes) => { this._rebuildClassNames = true; }
        };
    }

    /**
     * @inheritdoc
     */
    beforeRender() {
        if (this._rebuildClassNames) {
            this.getChild("button").setProp("classNames", classNames({
                "mpageui-ListButton": true,
                [ this.getProp("classNames") ]: isNotEmpty(this.getProp("classNames")),
                "mpageui-ListButton--withicon": !!this.getProp("icon"),
                "mpageui-ListButton--enabled": !this.getProp("disabled")
            }));
            this._rebuildClassNames = false;
        }
    }

    /**
     * @inheritdoc
     */
    view(el, props, children, mChildren) {
        return this.renderChildren();
    }
}

ListButton.EVENTS = {
    CLICK: "ListButton::Click"
};
