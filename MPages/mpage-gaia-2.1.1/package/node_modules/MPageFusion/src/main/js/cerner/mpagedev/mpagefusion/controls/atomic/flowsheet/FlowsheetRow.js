/**
 * @fileoverview TableRow class
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import TableRowCell from "./FlowsheetRowCell";
import classNames from "classnames";
import { isSelectedClassName as selectedClass } from "../../../helpers/const/classNames";
import { eventNames } from "./helpers";

/*
 * Constants for different values
 */
const rowWrapperClass = "mpageui-Flowsheet-row-wrapper";
const rowCellDataClass = "mpageui-Flowsheet-row-cell--data";

/**
 * Create objects of TableRowCell class
 * @param {Object} cells - cells objects
 * @param {Object} cellProps - cellProps objects
 * @param {int} index - row index
 * @returns {Array} Collection of TableRowCell objects
 * @private
 */
const getCellObject = (cells, cellProps, index) => cells.map((cell, i) => new TableRowCell({
    index: `${index}-${i}`,
    columnDisplay: cell.label || "",
    display: cell.display,
    classNames: cell.classNames && cell.classNames.length > 0 ? `${rowCellDataClass} ${cell.classNames}` : `${rowCellDataClass}`,
    content: cell.content || [],
    selectable: "selectable" in cell ? cell.selectable === true : cellProps.selectable === true,
    multiSelect: cellProps.multiSelect === true,
    isSelected: cell.isSelected === true,
    clickEventName: eventNames.PRIVATE.ROW_CELL_SELECTION_CHANGE,
    key: cell.key || ""
}));

/**
 * Constructor for TableRow
 * @extends UIComponent
 */
export default class FlowsheetRow extends UIComponent {
    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            key: this.getId(),
            defaultClassNames: "mpageui-Flowsheet-row",
            classNames: "",
            selectable: false,
            multiSelect: false,
            isHeaderRow: false,
            isSelected: false,
            cells: [],
            cellProps: {},
            clickEventName: eventNames.PRIVATE.ROW_SELECTION_CHANGE,
            header: {},
            index: 0
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        const headerProp = this.getProp("header");

        return [
            {
                header: new TableRowCell({
                    isHeaderCell: true,
                    isHeaderRowHeaderCell: this.getProp("isHeaderRow"),
                    display: headerProp.display,
                    classNames: "mpageui-Flowsheet-row-cell--header",
                    content: headerProp.content || [],
                    selectable: this.getProp("selectable") === true,
                    multiSelect: this.getProp("multiSelect") === true,
                    isSelected: headerProp.isSelected === true,
                    clickEventName: eventNames.PRIVATE.ROW_CELL_SELECTION_CHANGE,
                    key: headerProp.key || ""
                })
            },
            ...getCellObject(this.getProp("cells"), this.getProp("cellProps"), this.getProp("index"))
        ];
    }

    afterCreate() {
        this.on(eventNames.PRIVATE.ROW_CELL_SELECTION_CHANGE, (cellObj, isVisible, isHotKeySelect) => {
            if (cellObj.getProp("isHeaderCell")) {
                this.setProp("isSelected", isVisible);
                this.stopPropagation(eventNames.PRIVATE.ROW_CELL_SELECTION_CHANGE);
                this.emit(this.getProp("clickEventName"), this, isVisible, isHotKeySelect);
            }
        });
    }

    /**
     * @inheritdoc
     */
    view(el, props) {
        return el(
            "div",
            {
                class: classNames({
                    [ rowWrapperClass ]: true,
                    [ selectedClass ]: props.isSelected
                }),
                key: props.key
            },
            el("div", {
                class: classNames({
                    [ props.defaultClassNames ]: true,
                    [ props.classNames ]: props.classNames.length > 0
                })
            }, this.renderChildren())
        );
    }
}
