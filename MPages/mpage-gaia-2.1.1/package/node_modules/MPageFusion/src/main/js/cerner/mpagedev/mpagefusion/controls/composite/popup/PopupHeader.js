/**
 * @fileoverview
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import { NavigationHeader } from "../../atomic/header";
import classNames from "classnames";

const paneHeaderClass = "mpageui-Popup-pane-header";
const paneHeaderHiddenClass = "mpageui-Popup-pane-header--hidden";
const paneHeaderCloseEventName = "PopupHeader::close";

export default class PopupHeader extends UIComponent {
    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            title: "",
            alwaysShowHeader: false,
            defaultClassNames: paneHeaderClass,
            classNames: ""
        };
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            title: (newTitle) => this.getChild("headerObj").setProp("title", newTitle)
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            {
                headerObj: new NavigationHeader({
                    title: this.getProp("title"),
                    showDismiss: true,
                    compact: true
                })
            }
        ];
    }

    /**
     * @inheritDoc
     */
    afterCreate() {
        this.redirectEvent(NavigationHeader.EVENTS.DISMISS, paneHeaderCloseEventName, this);
    }

    /**
     * @inheritdoc
     */
    view(el, props, children, mChildren) {
        return el(
            "div",
            {
                class: classNames({
                    [ props.defaultClassNames ]: true,
                    [ props.classNames ]: props.classNames.length > 0,
                    [ paneHeaderHiddenClass ]: !props.alwaysShowHeader
                })
            },
            [
                mChildren.headerObj.render()
            ]
        );
    }
}
