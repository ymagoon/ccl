import UIComponent from "../../../base";
import classNames from "classnames";

/**
 * A pane that will slide in and out of view based on its isVisible prop.
 * It will hide itself if it receives a hideEvent from one of its children.
 */
export default class NestablePane extends UIComponent {

    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            isVisible: true,
            hideEventName: NestablePane.EVENTS.HIDE,
            preventHideAnimation: true,
            classNames: ""
        };
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            isVisible: (isVisible) => {
                if (isVisible) {
                    this.setProp("preventHideAnimation", false);
                }
            }
        };
    }

    /**
     * @inheritdoc
     */
    afterCreate() {
        this.on(this.getProp("hideEventName"), () => {
            this.setProp("isVisible", false);
            this.stopPropagation(this.getProp("hideEventName"));
            this.update();
        });
    }

    /**
     * @inheritdoc
     */
    view(el, props, children, mChildren) {
        return el(
            "div", {
                class: classNames({
                    "mpageui-NestablePane": true,
                    "mpageui-NestablePane-hidden": !props.isVisible,
                    "mpageui-NestablePane-visible": props.isVisible,
                    "mpageui-NestablePane-preventHide": props.preventHideAnimation,
                    [ props.classNames ]: props.classNames.length > 0
                }),
                role: "group"
            },
            this.renderChildren()
        );
    }
}

NestablePane.EVENTS = {
    HIDE: "NestablePane::hide"
};
