import classNames from "classnames";
import { NAMESPACE, PREVIEW_COUNT } from "./const";
import i18n from "i18n";

const { showAll, showLess } = i18n();

/**
 * Renders the show all action.
 * @param {function} el - Element generator
 * @param {boolean} isShowingAll - If currently showing all.
 * @param {number} count - Tag count.
 * @param {function} onClick - The click function.
 * @returns {VDom} Rendered show all element.
 */
const renderShowAll = (el, isShowingAll, count, onClick) =>
    (count > PREVIEW_COUNT) ? el(
        "a",
        {
            class: `${NAMESPACE}-show`,
            onclick: onClick,
            role: "button"
        },
        isShowingAll ? showLess : showAll.replace("{0}", count)
    ) : null;

/**
 * Renders a single tag item.
 * @param {function} el - Element generator
 * @param {PillBox} tag - A single tag.
 * @returns {VDom} Rendered tag item.
 */
const renderTag = (el, tag) =>
    el(
        "li",
        {
            class: `${NAMESPACE}-tag`,
            key: tag.getProp("key")
        },
        tag.render()
    );

/**
 * Renders the all tags grouping.
 * @param {function} el - Element generator
 * @param {boolean} isShowingAll - If currently showing all.
 * @param {Array<PillBox>} tags - List of tags.
 * @param {function} onShowAllClick - The click function for the
 * show all control.
 * @returns {VDom} Rendered all tags.
 */
const renderAllTags = (el, isShowingAll, tags = [], onShowAllClick) =>
    tags.length ? el(
        "div",
        {
            class: `${NAMESPACE}-all`
        },
        [
            renderShowAll(el, isShowingAll, tags.length, onShowAllClick),
            el(
                "ul",
                {
                    class: classNames(`${NAMESPACE}-tags`, {
                        "is-visible": isShowingAll
                    })
                },
                tags.map((t) => renderTag(el, t))
            )
        ]
    ) : null;

/**
 * Renders the tag preview area. This will render only two tags
 * at a time for a compact preview.
 * @param {function} el - Element generator
 * @param {boolean} isShowingAll - If currently showing all.
 * @param {Array<PillBox>} tags - Array of tags.
 * @returns {VDom} Rendered tag preview.
 */
const renderTagPreview = (el, isShowingAll, tags = []) =>
    tags.length ? el(
        "ul",
        {
            class: classNames(`${NAMESPACE}-preview`, {
                "is-visible": !isShowingAll
            })
        },
        tags.slice(tags.length - PREVIEW_COUNT, tags.length).map((t) => renderTag(el, t))
    ) : null;

export {
    renderAllTags,
    renderShowAll,
    renderTag,
    renderTagPreview
};
