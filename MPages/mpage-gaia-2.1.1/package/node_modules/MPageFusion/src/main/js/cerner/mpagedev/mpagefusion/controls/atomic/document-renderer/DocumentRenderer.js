/**
 * @fileoverview DocumentRenderer control class
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import { isIE } from "../../../helpers/core/compatibility";
import classNames from "classnames";

const defaultCssClasses = {
    wrapper: "mpageui-DocumentRenderer-wrapper",
    iFrame: "mpageui-DocumentRenderer-iframe"
};

/**
 * Adds the src HTML content to the iFrame
 * @param {HtmlElement} iFrameElem - DOM iFrame element
 * @param {string} src - HTML code for iFrame
 * @returns {undefined}
 * @private
 */
const writeSrcToDocument = (iFrameElem, src) => {
    const iframeDoc = iFrameElem.contentWindow.document;

    iframeDoc.open();
    iframeDoc.write(src);
    iframeDoc.close();
};

/**
 * Config function for the control
 * @param {DocumentRenderer} control - control ref object
 * @returns {Function} curried function for config
 * @private
 */
const config = (control) => ({ dom }) => {
    /*
     * Write srcdoc content to iFrame only when the srcdoc prop has changed
     * Since we dont want to keep writing the iFrame content on every render
     */
    if (control._hasSrcdocChanged) { // eslint-disable-line no-underscore-dangle
        writeSrcToDocument(dom, control.getProp("srcdoc"));
        control._hasSrcdocChanged = false; // eslint-disable-line no-underscore-dangle
    }
};

/**
 * Resize function for the control
 * @param {DocumentRenderer} control - control ref object
 * @returns {undefined} This function does not return anything
 * @private
 */
const resize = (control) => function() {
    /*
     * Update the height of iFrame & min-height of document renderer to scrollHeight
     * when srcdoc prop is set from the consumer.
     */
    if(control.getProp("srcdoc") && this.contentWindow.document.body) {
        const scrollHeight = this.contentWindow.document.body.scrollHeight;
        // Adding extra 5% of scrollHeight as padding at the bottom
        const height = scrollHeight + scrollHeight / 20;
        this.style.height = `${height}px`;
        control._minHeight = `${height}px`; // eslint-disable-line no-underscore-dangle
        control.update();
    }
};

/**
 * DocumentRenderer class
 * @constructor
 */
export default class DocumentRenderer extends UIComponent {
    /**
     * @inheritdoc
     */
    constructor(props, children) {
        super(props, children);
        this._hasSrcdocChanged = false;
        this._minHeight = "auto";
    }

    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            classNames: "",
            src: "",
            srcdoc: "",
            shouldHideScrollbar: false
        };
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            srcdoc: () => {
                this._hasSrcdocChanged = true;
            }
        };
    }

    /**
     * @inheritdoc
     */
    view(el, props) {
        return el(
            "div",
            {
                class: classNames({
                    [ defaultCssClasses.wrapper ]: true,
                    [ props.classNames ]: props.classNames.length > 0
                }),
                style: {
                    "min-height": this._minHeight
                }
            },
            [
                el(
                    "iframe",
                    Object.assign(
                        {
                            class: defaultCssClasses.iFrame,
                            /*
                             * Make IE spec compatible, only set src property if srcdoc is empty.
                             * srcdoc takes precedence over src according to spec by IE doesn't respect that
                             * Link: http://www.w3schools.com/TAgs/att_iframe_srcdoc.asp
                             */
                            src: props.srcdoc.length > 0 ? "" : props.src,
                            frameborder: 0,

                            /*
                             * Since IE, doesn't like srcdoc property and all the browsers in the world understand it.
                             * So only use config object for IE so that we can write the html content into the iFrame.
                             * Basically dont pay the config price for smart and awesome browsers.
                             */
                            oncreate: isIE() && props.srcdoc.length > 0 ? config(this) : null,
                            onupdate: isIE() && props.srcdoc.length > 0 ? config(this) : null,
                            onload: props.shouldHideScrollbar ? resize(this) : null
                        },
                        // only put srcdoc if its present otherwise browser will try to use the empty value of srcdoc
                        props.srcdoc.length > 0 ? { srcdoc: props.srcdoc } : null
                    ),
                    []
                )
            ]
        );
    }
}
