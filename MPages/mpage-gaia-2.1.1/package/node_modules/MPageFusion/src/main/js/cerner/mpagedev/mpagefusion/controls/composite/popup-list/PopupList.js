import UIComponent from "../../../base/UIComponent";
import Popup from "../popup";
import { forwardProp } from "../../../helpers/props/props";
import PopupListContents from "./PopupListContents";

/**
 * A Popup that displays a selectable list of items.
 * Items with isSelected = true will have a checkmark displayed next to them,
 * as long as isSelectionVisible is true.
 */
export default class PopupList extends UIComponent {
    constructor(props, children) {
        super(props, children);
    }

    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            items: [],
            title: "",
            isSelectionVisible: true,
            anchorControl: null,
            itemSelectEventName: "PopupList::itemSelect",
            classNames: ""
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            { popup: new Popup() }
        ];
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return {
            items: (items) => this.getChild("popup")
                .setProp("content", [
                    new PopupListContents({
                        items,
                        itemSelectEventName: this.getProp("itemSelectEventName"),
                        isSelectionVisible: this.getProp("isSelectionVisible")
                    }) ]),
            showArrow: forwardProp(this, "showArrow", "popup"),
            visible: forwardProp(this, "visible", "popup"),
            size: forwardProp(this, "size", "popup"),
            anchorControl: forwardProp(this, "anchorControl", "popup"),
            title: forwardProp(this, "title", "popup"),
            classNames: forwardProp(this, "classNames", "popup"),
            itemSelectEventName: (eventName) =>
                this.on(eventName, () => this
                    .getChild("popup")
                    .setProp("visible", false)
                    .update())
        };
    }

    /**
     * @inheritdoc
     */
    view() {
        return this.renderChildren();
    }
}

