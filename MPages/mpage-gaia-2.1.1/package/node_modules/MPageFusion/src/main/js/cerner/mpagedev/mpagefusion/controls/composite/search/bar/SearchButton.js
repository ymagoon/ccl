"use strict";
import UIComponent from "../../../../base/UIComponent";
import Button from "../../../atomic/button";
import SearchIcon from "../../../atomic/icon/svg/category/content/Search";
import { forwardProp } from "../../../../helpers/props/props";

const EVENTS = {
    CLICK: "SearchButton::click"
};

/**
 * A button that triggers an event to submit for retrieving search results
 */
class SearchButton extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            classNames: "",
            clickEventName: EVENTS.CLICK,
            isDisabled: false
        };
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            {
                button: new Button({
                    icon: new SearchIcon()
                })
            }
        ];
    }

    /**
     * @inheritDoc
     */
    afterCreate() {
        this.convertEventUsingProp(
            Button.EVENTS.CLICK,
            "clickEventName",
            (src) => [ this ]
        );
    }

    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            isDisabled: forwardProp(this, "disabled", "button"),
            classNames: forwardProp(this, "classNames", "button")
        };
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mChildren) {
        return mChildren.button.render();
    }
}

SearchButton.EVENTS = EVENTS;

export default SearchButton;
