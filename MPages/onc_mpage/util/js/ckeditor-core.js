if(!Function.prototype.bind){Function.prototype.bind=function(oThis){if(typeof this!=="function"){throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
}var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,fNOP=function(){},fBound=function(){return fToBind.apply(this instanceof fNOP&&oThis?this:oThis,aArgs.concat(Array.prototype.slice.call(arguments)));
};
fNOP.prototype=this.prototype;
fBound.prototype=new fNOP();
return fBound;
};
}if(typeof Node==="undefined"){Node={};
Node.ELEMENT_NODE=1;
Node.TEXT_NODE=3;
Node.PROCESSING_INSTRUCTION_NODE=7;
Node.COMMENT_NODE=8;
Node.DOCUMENT_NODE=9;
Node.DOCUMENT_TYPE_NODE=10;
Node.DOCUMENT_FRAGMENT_NODE=11;
}if(!window.CKEDITOR){window.CKEDITOR=(function(){var CKEDITOR={timestamp:"",version:"%VERSION%",revision:"%REV%",rnd:Math.floor(Math.random()*(999-100+1))+100,_:{pending:[]},status:"unloaded",basePath:(function(){var path=window.CKEDITOR_BASEPATH||"";
if(!path){var scripts=document.getElementsByTagName("script");
for(var i=0;
i<scripts.length;
i++){var match=scripts[i].src.match(/(^|.*[\\\/])ckeditor(?:_basic)?(?:_source)?.js(?:\?.*)?$/i);
if(match){path=match[1];
break;
}}}if(path.indexOf(":/")==-1){if(path.indexOf("/")===0){path=location.href.match(/^.*?:\/\/[^\/]*/)[0]+path;
}else{path=location.href.match(/^[^\?]*\/(?:)/)[0]+path;
}}if(!path){throw'The CKEditor installation path could not be automatically detected. Please set the global variable "CKEDITOR_BASEPATH" before creating editor instances.';
}return path;
})(),getUrl:function(resource){if(resource.indexOf(":/")==-1&&resource.indexOf("/")!==0){resource=this.basePath+resource;
}if(this.timestamp&&resource.charAt(resource.length-1)!="/"&&!(/[&?]t=/).test(resource)){resource+=(resource.indexOf("?")>=0?"&":"?")+"t="+this.timestamp;
}return resource;
},domReady:(function(){var callbacks=[];
function onReady(){try{if(document.addEventListener){document.removeEventListener("DOMContentLoaded",onReady,false);
executeCallbacks();
}else{if(document.attachEvent&&document.readyState==="complete"){document.detachEvent("onreadystatechange",onReady);
executeCallbacks();
}}}catch(er){}}function executeCallbacks(){var i;
while((i=callbacks.shift())){i();
}}return function(fn){callbacks.push(fn);
if(document.readyState==="complete"){setTimeout(onReady,1);
}if(callbacks.length!=1){return;
}if(document.addEventListener){document.addEventListener("DOMContentLoaded",onReady,false);
window.addEventListener("load",onReady,false);
}else{if(document.attachEvent){document.attachEvent("onreadystatechange",onReady);
window.attachEvent("onload",onReady);
var toplevel=false;
try{toplevel=!window.frameElement;
}catch(e){}if(document.documentElement.doScroll&&toplevel){function scrollCheck(){try{document.documentElement.doScroll("left");
}catch(e){setTimeout(scrollCheck,1);
return;
}onReady();
}scrollCheck();
}}}};
})()};
var newGetUrl=window.CKEDITOR_GETURL;
if(newGetUrl){var originalGetUrl=CKEDITOR.getUrl;
CKEDITOR.getUrl=function(resource){return newGetUrl.call(CKEDITOR,resource)||originalGetUrl.call(CKEDITOR,resource);
};
}return CKEDITOR;
})();
}if(!CKEDITOR.event){CKEDITOR.event=function(){};
CKEDITOR.event.implementOn=function(targetObject){var eventProto=CKEDITOR.event.prototype;
for(var prop in eventProto){if(targetObject[prop]==undefined){targetObject[prop]=eventProto[prop];
}}};
CKEDITOR.event.prototype=(function(){var getPrivate=function(obj){var _=(obj.getPrivate&&obj.getPrivate())||obj._||(obj._={});
return _.events||(_.events={});
};
var eventEntry=function(eventName){this.name=eventName;
this.listeners=[];
};
eventEntry.prototype={getListenerIndex:function(listenerFunction){for(var i=0,listeners=this.listeners;
i<listeners.length;
i++){if(listeners[i].fn==listenerFunction){return i;
}}return -1;
}};
function getEntry(name){var events=getPrivate(this);
return events[name]||(events[name]=new eventEntry(name));
}return{define:function(name,meta){var entry=getEntry.call(this,name);
CKEDITOR.tools.extend(entry,meta,true);
},on:function(eventName,listenerFunction,scopeObj,listenerData,priority){function listenerFirer(editor,publisherData,stopFn,cancelFn){var ev={name:eventName,sender:this,editor:editor,data:publisherData,listenerData:listenerData,stop:stopFn,cancel:cancelFn,removeListener:removeListener};
var ret=listenerFunction.call(scopeObj,ev);
return ret===false?false:ev.data;
}function removeListener(){me.removeListener(eventName,listenerFunction);
}var event=getEntry.call(this,eventName);
if(event.getListenerIndex(listenerFunction)<0){var listeners=event.listeners;
if(!scopeObj){scopeObj=this;
}if(isNaN(priority)){priority=10;
}var me=this;
listenerFirer.fn=listenerFunction;
listenerFirer.priority=priority;
for(var i=listeners.length-1;
i>=0;
i--){if(listeners[i].priority<=priority){listeners.splice(i+1,0,listenerFirer);
return{removeListener:removeListener};
}}listeners.unshift(listenerFirer);
}return{removeListener:removeListener};
},once:function(){var fn=arguments[1];
arguments[1]=function(evt){evt.removeListener();
return fn.apply(this,arguments);
};
return this.on.apply(this,arguments);
},capture:function(){CKEDITOR.event.useCapture=1;
var retval=this.on.apply(this,arguments);
CKEDITOR.event.useCapture=0;
return retval;
},fire:(function(){var stopped=0;
var stopEvent=function(){stopped=1;
};
var canceled=0;
var cancelEvent=function(){canceled=1;
};
return function(eventName,data,editor){var event=getPrivate(this)[eventName];
var previousStopped=stopped,previousCancelled=canceled;
stopped=canceled=0;
if(event){var listeners=event.listeners;
if(listeners.length){listeners=listeners.slice(0);
var retData;
for(var i=0;
i<listeners.length;
i++){if(event.errorProof){try{retData=listeners[i].call(this,editor,data,stopEvent,cancelEvent);
}catch(er){}}else{retData=listeners[i].call(this,editor,data,stopEvent,cancelEvent);
}if(retData===false){canceled=1;
}else{if(typeof retData!="undefined"){data=retData;
}}if(stopped||canceled){break;
}}}}var ret=canceled?false:(typeof data=="undefined"?true:data);
stopped=previousStopped;
canceled=previousCancelled;
return ret;
};
})(),fireOnce:function(eventName,data,editor){var ret=this.fire(eventName,data,editor);
delete getPrivate(this)[eventName];
return ret;
},removeListener:function(eventName,listenerFunction){var event=getPrivate(this)[eventName];
if(event){var index=event.getListenerIndex(listenerFunction);
if(index>=0){event.listeners.splice(index,1);
}}},removeAllListeners:function(){var events=getPrivate(this);
for(var i in events){delete events[i];
}},hasListeners:function(eventName){var event=getPrivate(this)[eventName];
return(event&&event.listeners.length>0);
}};
})();
}if(!CKEDITOR.editor){CKEDITOR.editor=function(){CKEDITOR._.pending.push([this,arguments]);
CKEDITOR.event.call(this);
};
CKEDITOR.editor.prototype.fire=function(eventName,data){if(eventName in {instanceReady:1,loaded:1}){this[eventName]=true;
}return CKEDITOR.event.prototype.fire.call(this,eventName,data,this);
};
CKEDITOR.editor.prototype.fireOnce=function(eventName,data){if(eventName in {instanceReady:1,loaded:1}){this[eventName]=true;
}return CKEDITOR.event.prototype.fireOnce.call(this,eventName,data,this);
};
CKEDITOR.event.implementOn(CKEDITOR.editor.prototype);
}if(!CKEDITOR.env){CKEDITOR.env=(function(){var agent=navigator.userAgent.toLowerCase();
var opera=window.opera;
var env={ie:eval("/*@cc_on!@*/false"),opera:(!!opera&&opera.version),webkit:(agent.indexOf(" applewebkit/")>-1),air:(agent.indexOf(" adobeair/")>-1),mac:(agent.indexOf("macintosh")>-1),quirks:(document.compatMode=="BackCompat"),mobile:(agent.indexOf("mobile")>-1),iOS:/(ipad|iphone|ipod)/.test(agent),isCustomDomain:function(){return false;
if(!this.ie){return false;
}var domain=document.domain,hostname=window.location.hostname;
return domain!=hostname&&domain!=("["+hostname+"]");
},secure:location.protocol=="https:"};
env.gecko=(navigator.product=="Gecko"&&!env.webkit&&!env.opera);
if(env.webkit){if(agent.indexOf("chrome")>-1){env.chrome=true;
}else{env.safari=true;
}}var version=0;
if(env.ie){if(env.quirks||!document.documentMode){version=parseFloat(agent.match(/msie (\d+)/)[1]);
}else{version=document.documentMode;
}env.ie9Compat=version==9;
env.ie8Compat=version==8;
env.ie7Compat=version==7;
env.ie6Compat=version<7||env.quirks;
}if(env.gecko){var geckoRelease=agent.match(/rv:([\d\.]+)/);
if(geckoRelease){geckoRelease=geckoRelease[1].split(".");
version=geckoRelease[0]*10000+(geckoRelease[1]||0)*100+(geckoRelease[2]||0)*1;
}}if(env.opera){version=parseFloat(opera.version());
}if(env.air){version=parseFloat(agent.match(/ adobeair\/(\d+)/)[1]);
}if(env.webkit){version=parseFloat(agent.match(/ applewebkit\/(\d+)/)[1]);
}env.version=version;
env.isCompatible=env.iOS&&version>=534||!env.mobile&&((env.ie&&version>6)||(env.gecko&&version>=10801)||(env.opera&&version>=9.5)||(env.air&&version>=1)||(env.webkit&&version>=522)||false);
env.cssClass="cke_browser_"+(env.ie?"ie":env.gecko?"gecko":env.opera?"opera":env.webkit?"webkit":"unknown");
if(env.quirks){env.cssClass+=" cke_browser_quirks";
}if(env.ie){env.cssClass+=" cke_browser_ie"+(env.quirks||env.version<7?"6":env.version);
if(env.quirks){env.cssClass+=" cke_browser_iequirks";
}}if(env.gecko){if(version<10900){env.cssClass+=" cke_browser_gecko18";
}else{if(version<=11000){env.cssClass+=" cke_browser_gecko19";
}}}if(env.air){env.cssClass+=" cke_browser_air";
}return env;
})();
}if(CKEDITOR.status=="unloaded"){(function(){CKEDITOR.event.implementOn(CKEDITOR);
CKEDITOR.loadFullCore=function(){if(CKEDITOR.status!="basic_ready"){CKEDITOR.loadFullCore._load=1;
return;
}delete CKEDITOR.loadFullCore;
var script=document.createElement("script");
script.type="text/javascript";
script.src=CKEDITOR.basePath+"ckeditor.js";
script.src=CKEDITOR.basePath+"ckeditor_source.js";
document.getElementsByTagName("head")[0].appendChild(script);
};
CKEDITOR.loadFullCoreTimeout=0;
CKEDITOR.add=function(editor){var pending=this._.pending||(this._.pending=[]);
pending.push(editor);
};
(function(){var onload=function(){var loadFullCore=CKEDITOR.loadFullCore,loadFullCoreTimeout=CKEDITOR.loadFullCoreTimeout;
if(!loadFullCore){return;
}CKEDITOR.status="basic_ready";
if(loadFullCore&&loadFullCore._load){loadFullCore();
}else{if(loadFullCoreTimeout){setTimeout(function(){if(CKEDITOR.loadFullCore){CKEDITOR.loadFullCore();
}},loadFullCoreTimeout*1000);
}}};
CKEDITOR.domReady(onload);
})();
CKEDITOR.status="basic_loaded";
})();
}CKEDITOR.dom={};
(function(){var functions=[],cssVendorPrefix=CKEDITOR.env.gecko?"-moz-":CKEDITOR.env.webkit?"-webkit-":CKEDITOR.env.opera?"-o-":CKEDITOR.env.ie?"-ms-":"";
CKEDITOR.on("reset",function(){functions=[];
});
CKEDITOR.tools={arrayCompare:function(arrayA,arrayB){if(!arrayA&&!arrayB){return true;
}if(!arrayA||!arrayB||arrayA.length!=arrayB.length){return false;
}for(var i=0;
i<arrayA.length;
i++){if(arrayA[i]!=arrayB[i]){return false;
}}return true;
},clone:function(obj){var clone;
if(obj&&(obj instanceof Array)){clone=[];
for(var i=0;
i<obj.length;
i++){clone[i]=CKEDITOR.tools.clone(obj[i]);
}return clone;
}if(obj===null||(typeof(obj)!="object")||(obj instanceof String)||(obj instanceof Number)||(obj instanceof Boolean)||(obj instanceof Date)||(obj instanceof RegExp)){return obj;
}clone=new obj.constructor();
for(var propertyName in obj){var property=obj[propertyName];
clone[propertyName]=CKEDITOR.tools.clone(property);
}return clone;
},capitalize:function(str){return str.charAt(0).toUpperCase()+str.substring(1).toLowerCase();
},extend:function(target){var argsLength=arguments.length,overwrite,propertiesList;
if(typeof(overwrite=arguments[argsLength-1])=="boolean"){argsLength--;
}else{if(typeof(overwrite=arguments[argsLength-2])=="boolean"){propertiesList=arguments[argsLength-1];
argsLength-=2;
}}for(var i=1;
i<argsLength;
i++){var source=arguments[i];
for(var propertyName in source){if(overwrite===true||target[propertyName]==undefined){if(!propertiesList||(propertyName in propertiesList)){target[propertyName]=source[propertyName];
}}}}return target;
},prototypedCopy:function(source){var copy=function(){};
copy.prototype=source;
return new copy();
},copy:function(source){var obj={},name;
for(name in source){obj[name]=source[name];
}return obj;
},isArray:function(object){return(!!object&&object instanceof Array);
},isEmpty:function(object){for(var i in object){if(object.hasOwnProperty(i)){return false;
}}return true;
},cssVendorPrefix:function(property,value,asString){if(asString){return cssVendorPrefix+property+":"+value+";"+property+":"+value;
}var ret={};
ret[property]=value;
ret[cssVendorPrefix+property]=value;
return ret;
},cssStyleToDomStyle:(function(){var test=document.createElement("div").style;
var cssFloat=(typeof test.cssFloat!="undefined")?"cssFloat":(typeof test.styleFloat!="undefined")?"styleFloat":"float";
return function(cssName){if(cssName=="float"){return cssFloat;
}else{return cssName.replace(/-./g,function(match){return match.substr(1).toUpperCase();
});
}};
})(),buildStyleHtml:function(css){css=[].concat(css);
var item,retval=[];
for(var i=0;
i<css.length;
i++){if((item=css[i])){if(/@import|[{}]/.test(item)){retval.push("<style>"+item+"</style>");
}else{retval.push('<link type="text/css" rel=stylesheet href="'+item+'">');
}}}return retval.join("");
},htmlEncode:function(text){return String(text).replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;");
},htmlEncodeAttr:function(text){return text.replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},getNextNumber:(function(){var last=0;
return function(){return ++last;
};
})(),getNextId:function(){return"cke_"+this.getNextNumber();
},override:function(originalFunction,functionBuilder){var newFn=functionBuilder(originalFunction);
newFn.prototype=originalFunction.prototype;
return newFn;
},setTimeout:function(func,milliseconds,scope,args,ownerWindow){if(!ownerWindow){ownerWindow=window;
}if(!scope){scope=ownerWindow;
}return ownerWindow.setTimeout(function(){if(args){func.apply(scope,[].concat(args));
}else{func.apply(scope);
}},milliseconds||0);
},trim:(function(){var trimRegex=/(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g;
return function(str){return str.replace(trimRegex,"");
};
})(),ltrim:(function(){var trimRegex=/^[ \t\n\r]+/g;
return function(str){return str.replace(trimRegex,"");
};
})(),rtrim:(function(){var trimRegex=/[ \t\n\r]+$/g;
return function(str){return str.replace(trimRegex,"");
};
})(),indexOf:function(array,value){if(typeof value=="function"){for(var i=0,len=array.length;
i<len;
i++){if(value(array[i])){return i;
}}}else{if(array.indexOf){return array.indexOf(value);
}else{for(i=0,len=array.length;
i<len;
i++){if(array[i]===value){return i;
}}}}return -1;
},search:function(array,value){var index=CKEDITOR.tools.indexOf(array,value);
return index>=0?array[index]:null;
},bind:function(func,obj){return function(){return func.apply(obj,arguments);
};
},createClass:function(definition){var $=definition.$,baseClass=definition.base,privates=definition.privates||definition._,proto=definition.proto,statics=definition.statics;
!$&&($=function(){baseClass&&this.base.apply(this,arguments);
});
if(privates){var originalConstructor=$;
$=function(){var _=this._||(this._={});
for(var privateName in privates){var priv=privates[privateName];
_[privateName]=(typeof priv=="function")?CKEDITOR.tools.bind(priv,this):priv;
}originalConstructor.apply(this,arguments);
};
}if(baseClass){$.prototype=this.prototypedCopy(baseClass.prototype);
$.prototype.constructor=$;
$.base=baseClass;
$.baseProto=baseClass.prototype;
$.prototype.base=function(){this.base=baseClass.prototype.base;
baseClass.apply(this,arguments);
this.base=arguments.callee;
};
}if(proto){this.extend($.prototype,proto,true);
}if(statics){this.extend($,statics,true);
}return $;
},addFunction:function(fn,scope){return functions.push(function(){return fn.apply(scope||this,arguments);
})-1;
},removeFunction:function(ref){functions[ref]=null;
},callFunction:function(ref){var fn=functions[ref];
return fn&&fn.apply(window,Array.prototype.slice.call(arguments,1));
},cssLength:(function(){var pixelRegex=/^-?\d+\.?\d*px$/,lengthTrimmed;
return function(length){lengthTrimmed=CKEDITOR.tools.trim(length+"")+"px";
if(pixelRegex.test(lengthTrimmed)){return lengthTrimmed;
}else{return length||"";
}};
})(),convertToPx:(function(){var calculator;
return function(cssLength){if(!calculator){calculator=CKEDITOR.dom.element.createFromHtml('<div style="position:absolute;left:-9999px;top:-9999px;margin:0px;padding:0px;border:0px;"></div>',CKEDITOR.document);
CKEDITOR.document.getBody().append(calculator);
}if(!(/%$/).test(cssLength)){calculator.setStyle("width",cssLength);
return calculator.$.clientWidth;
}return cssLength;
};
})(),repeat:function(str,times){return new Array(times+1).join(str);
},tryThese:function(){var returnValue;
for(var i=0,length=arguments.length;
i<length;
i++){var lambda=arguments[i];
try{returnValue=lambda();
break;
}catch(e){}}return returnValue;
},genKey:function(){return Array.prototype.slice.call(arguments).join("-");
},defer:function(fn){return function(){var args=arguments,self=this;
window.setTimeout(function(){fn.apply(self,args);
},0);
};
},normalizeCssText:function(styleText,nativeNormalize){var props=[],name,parsedProps=CKEDITOR.tools.parseCssText(styleText,true,nativeNormalize);
for(name in parsedProps){props.push(name+":"+parsedProps[name]);
}props.sort();
return props.length?(props.join(";")+";"):"";
},convertRgbToHex:function(styleText){return styleText.replace(/(?:rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\))/gi,function(match,red,green,blue){var color=[red,green,blue];
for(var i=0;
i<3;
i++){color[i]=("0"+parseInt(color[i],10).toString(16)).slice(-2);
}return"#"+color.join("");
});
},parseCssText:function(styleText,normalize,nativeNormalize){var retval={};
if(nativeNormalize){var temp=new CKEDITOR.dom.element("span");
temp.setAttribute("style",styleText);
styleText=CKEDITOR.tools.convertRgbToHex(temp.getAttribute("style")||"");
}if(!styleText||styleText==";"){return retval;
}styleText.replace(/&quot;/g,'"').replace(/\s*([^:;\s]+)\s*:\s*([^;]+)\s*(?=;|$)/g,function(match,name,value){if(normalize){name=name.toLowerCase();
if(name=="font-family"){value=value.toLowerCase().replace(/["']/g,"").replace(/\s*,\s*/g,",");
}value=CKEDITOR.tools.trim(value);
}retval[name]=value;
});
return retval;
},writeCssText:function(styles,sort){var name,stylesArr=[];
for(name in styles){stylesArr.push(name+":"+styles[name]);
}if(sort){stylesArr.sort();
}return stylesArr.join("; ");
},objectCompare:function(left,right,onlyLeft){var name;
if(!left&&!right){return true;
}if(!left||!right){return false;
}for(name in left){if(left[name]!=right[name]){return false;
}}if(!onlyLeft){for(name in right){if(left[name]!=right[name]){return false;
}}}return true;
},objectKeys:function(obj){var keys=[];
for(var i in obj){keys.push(i);
}return keys;
},convertArrayToObject:function(arr,fillWith){var obj={};
if(arguments.length==1){fillWith=true;
}for(var i=0,l=arr.length;
i<l;
++i){obj[arr[i]]=fillWith;
}return obj;
}};
})();
CKEDITOR.dtd=(function(){var X=CKEDITOR.tools.extend,Y=function(source,removed){var substracted=CKEDITOR.tools.clone(source);
for(var i=1;
i<arguments.length;
i++){removed=arguments[i];
for(var name in removed){delete substracted[name];
}}return substracted;
};
var P={},F={},PF={a:1,abbr:1,area:1,audio:1,b:1,bdi:1,bdo:1,br:1,button:1,canvas:1,cite:1,code:1,command:1,datalist:1,del:1,dfn:1,em:1,embed:1,i:1,iframe:1,img:1,input:1,ins:1,kbd:1,keygen:1,label:1,map:1,mark:1,meter:1,noscript:1,object:1,output:1,progress:1,q:1,ruby:1,s:1,samp:1,script:1,select:1,small:1,span:1,strong:1,sub:1,sup:1,textarea:1,time:1,u:1,"var":1,video:1,wbr:1},FO={address:1,article:1,aside:1,blockquote:1,details:1,div:1,dl:1,fieldset:1,figure:1,footer:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,header:1,hgroup:1,hr:1,menu:1,nav:1,ol:1,p:1,pre:1,section:1,table:1,ul:1},M={command:1,link:1,meta:1,noscript:1,script:1,style:1},E={},T={"#":1},DP={acronym:1,applet:1,basefont:1,big:1,font:1,isindex:1,strike:1,style:1,tt:1},DFO={center:1,dir:1,noframes:1};
X(P,PF,T,DP);
X(F,FO,P,DFO);
var dtd={a:Y(P,{a:1,button:1}),abbr:P,address:F,area:E,article:X({style:1},F),aside:X({style:1},F),audio:X({source:1,track:1},F),b:P,base:E,bdi:P,bdo:P,blockquote:F,body:F,br:E,button:Y(P,{a:1,button:1}),canvas:P,caption:F,cite:P,code:P,col:E,colgroup:{col:1},command:E,datalist:X({option:1},P),dd:F,del:P,details:X({summary:1},F),dfn:P,div:X({style:1},F),dl:{dt:1,dd:1},dt:F,em:P,embed:E,fieldset:X({legend:1},F),figcaption:F,figure:X({figcaption:1},F),footer:F,form:F,h1:P,h2:P,h3:P,h4:P,h5:P,h6:P,head:X({title:1,base:1},M),header:F,hgroup:{h1:1,h2:1,h3:1,h4:1,h5:1,h6:1},hr:E,html:X({head:1,body:1},F,M),i:P,iframe:T,img:E,input:E,ins:P,kbd:P,keygen:E,label:P,legend:P,li:F,link:E,map:F,mark:P,menu:X({li:1},F),meta:E,meter:Y(P,{meter:1}),nav:F,noscript:X({link:1,meta:1,style:1},P),object:X({param:1},P),ol:{li:1},optgroup:{option:1},option:T,output:P,p:P,param:E,pre:P,progress:Y(P,{progress:1}),q:P,rp:P,rt:P,ruby:X({rp:1,rt:1},P),s:P,samp:P,script:T,section:X({style:1},F),select:{optgroup:1,option:1},small:P,source:E,span:P,strong:P,style:T,sub:P,summary:P,sup:P,table:{caption:1,colgroup:1,thead:1,tfoot:1,tbody:1,tr:1},tbody:{tr:1},td:F,textarea:T,tfoot:{tr:1},th:F,thead:{tr:1},time:Y(P,{time:1}),title:T,tr:{th:1,td:1},track:E,u:P,ul:{li:1},"var":P,video:X({source:1,track:1},F),wbr:E,acronym:P,applet:X({param:1},F),basefont:E,big:P,center:F,dialog:E,dir:{li:1},font:P,isindex:E,noframes:F,strike:P,tt:P};
X(dtd,{$block:X({audio:1,dd:1,dt:1,li:1,video:1},FO,DFO),$blockLimit:{article:1,aside:1,audio:1,body:1,caption:1,details:1,dir:1,div:1,dl:1,fieldset:1,figure:1,footer:1,form:1,header:1,hgroup:1,menu:1,nav:1,ol:1,section:1,table:1,td:1,th:1,tr:1,ul:1,video:1},$cdata:{script:1,style:1},$editable:{address:1,article:1,aside:1,blockquote:1,body:1,details:1,div:1,fieldset:1,footer:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,header:1,hgroup:1,nav:1,p:1,pre:1,section:1},$empty:{area:1,base:1,basefont:1,br:1,col:1,command:1,dialog:1,embed:1,hr:1,img:1,input:1,isindex:1,keygen:1,link:1,meta:1,param:1,source:1,track:1,wbr:1},$inline:P,$list:{dl:1,ol:1,ul:1},$listItem:{dd:1,dt:1,li:1},$nonBodyContent:X({body:1,head:1,html:1},dtd.head),$nonEditable:{applet:1,audio:1,button:1,embed:1,iframe:1,map:1,object:1,option:1,param:1,script:1,textarea:1,video:1},$object:{applet:1,audio:1,button:1,hr:1,iframe:1,img:1,input:1,object:1,select:1,table:1,textarea:1,video:1},$removeEmpty:{abbr:1,acronym:1,b:1,bdi:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,mark:1,meter:1,output:1,q:1,ruby:1,s:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,time:1,tt:1,u:1,"var":1},$tabIndex:{a:1,area:1,button:1,input:1,object:1,select:1,textarea:1},$tableContent:{caption:1,col:1,colgroup:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1},$transparent:{a:1,audio:1,canvas:1,del:1,ins:1,map:1,noscript:1,object:1,video:1},$intermediate:{caption:1,colgroup:1,dd:1,dt:1,figcaption:1,legend:1,li:1,optgroup:1,option:1,rp:1,rt:1,summary:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1}});
return dtd;
})();
CKEDITOR.dom.event=function(domEvent){this.$=domEvent;
};
CKEDITOR.dom.event.prototype={getKey:function(){return this.$.keyCode||this.$.which;
},getKeystroke:function(){var keystroke=this.getKey();
if(this.$.ctrlKey||this.$.metaKey){keystroke+=CKEDITOR.CTRL;
}if(this.$.shiftKey){keystroke+=CKEDITOR.SHIFT;
}if(this.$.altKey){keystroke+=CKEDITOR.ALT;
}return keystroke;
},preventDefault:function(stopPropagation){var $=this.$;
if($.preventDefault){$.preventDefault();
}else{$.returnValue=false;
}if(stopPropagation){this.stopPropagation();
}},stopPropagation:function(){var $=this.$;
if($.stopPropagation){$.stopPropagation();
}else{$.cancelBubble=true;
}},getTarget:function(){var rawNode=this.$.target||this.$.srcElement;
return rawNode?new CKEDITOR.dom.node(rawNode):null;
},getPhase:function(){return this.$.eventPhase||2;
},getPageOffset:function(){var doc=this.getTarget().getDocument().$;
var pageX=this.$.pageX||this.$.clientX+(doc.documentElement.scrollLeft||doc.body.scrollLeft);
var pageY=this.$.pageY||this.$.clientY+(doc.documentElement.scrollTop||doc.body.scrollTop);
return{x:pageX,y:pageY};
}};
CKEDITOR.CTRL=1114112;
CKEDITOR.SHIFT=2228224;
CKEDITOR.ALT=4456448;
CKEDITOR.EVENT_PHASE_CAPTURING=1;
CKEDITOR.EVENT_PHASE_AT_TARGET=2;
CKEDITOR.EVENT_PHASE_BUBBLING=3;
CKEDITOR.dom.domObject=function(nativeDomObject){if(nativeDomObject){this.$=nativeDomObject;
}};
CKEDITOR.dom.domObject.prototype=(function(){var getNativeListener=function(domObject,eventName){return function(domEvent){if(typeof CKEDITOR!="undefined"){domObject.fire(eventName,new CKEDITOR.dom.event(domEvent));
}};
};
return{getPrivate:function(){var priv;
if(!(priv=this.getCustomData("_"))){this.setCustomData("_",(priv={}));
}return priv;
},on:function(eventName){var nativeListeners=this.getCustomData("_cke_nativeListeners");
if(!nativeListeners){nativeListeners={};
this.setCustomData("_cke_nativeListeners",nativeListeners);
}if(!nativeListeners[eventName]){var listener=nativeListeners[eventName]=getNativeListener(this,eventName);
if(this.$.addEventListener){this.$.addEventListener(eventName,listener,!!CKEDITOR.event.useCapture);
}else{if(this.$.attachEvent){this.$.attachEvent("on"+eventName,listener);
}}}return CKEDITOR.event.prototype.on.apply(this,arguments);
},removeListener:function(eventName){CKEDITOR.event.prototype.removeListener.apply(this,arguments);
if(!this.hasListeners(eventName)){var nativeListeners=this.getCustomData("_cke_nativeListeners");
var listener=nativeListeners&&nativeListeners[eventName];
if(listener){if(this.$.removeEventListener){this.$.removeEventListener(eventName,listener,false);
}else{if(this.$.detachEvent){this.$.detachEvent("on"+eventName,listener);
}}delete nativeListeners[eventName];
}}},removeAllListeners:function(){var nativeListeners=this.getCustomData("_cke_nativeListeners");
for(var eventName in nativeListeners){var listener=nativeListeners[eventName];
if(this.$.detachEvent){this.$.detachEvent("on"+eventName,listener);
}else{if(this.$.removeEventListener){this.$.removeEventListener(eventName,listener,false);
}}delete nativeListeners[eventName];
}}};
})();
(function(domObjectProto){var customData={};
CKEDITOR.on("reset",function(){customData={};
});
domObjectProto.equals=function(object){try{return(object&&object.$===this.$);
}catch(er){return false;
}};
domObjectProto.setCustomData=function(key,value){var expandoNumber=this.getUniqueId(),dataSlot=customData[expandoNumber]||(customData[expandoNumber]={});
dataSlot[key]=value;
return this;
};
domObjectProto.getCustomData=function(key){var expandoNumber=this.$["data-cke-expando"],dataSlot=expandoNumber&&customData[expandoNumber];
return(dataSlot&&key in dataSlot)?dataSlot[key]:null;
};
domObjectProto.removeCustomData=function(key){var expandoNumber=this.$["data-cke-expando"],dataSlot=expandoNumber&&customData[expandoNumber],retval,hadKey;
if(dataSlot){retval=dataSlot[key];
hadKey=key in dataSlot;
delete dataSlot[key];
}return hadKey?retval:null;
};
domObjectProto.clearCustomData=function(){this.removeAllListeners();
var expandoNumber=this.$["data-cke-expando"];
expandoNumber&&delete customData[expandoNumber];
};
domObjectProto.getUniqueId=function(){return this.$["data-cke-expando"]||(this.$["data-cke-expando"]=CKEDITOR.tools.getNextNumber());
};
CKEDITOR.event.implementOn(domObjectProto);
})(CKEDITOR.dom.domObject.prototype);
CKEDITOR.dom.node=function(domNode){if(domNode){var type=domNode.nodeType==CKEDITOR.NODE_DOCUMENT?"document":domNode.nodeType==CKEDITOR.NODE_ELEMENT?"element":domNode.nodeType==CKEDITOR.NODE_TEXT?"text":domNode.nodeType==CKEDITOR.NODE_COMMENT?"comment":domNode.nodeType==CKEDITOR.NODE_DOCUMENT_FRAGMENT?"documentFragment":"domObject";
return new CKEDITOR.dom[type](domNode);
}return this;
};
CKEDITOR.dom.node.prototype=new CKEDITOR.dom.domObject();
CKEDITOR.NODE_ELEMENT=1;
CKEDITOR.NODE_DOCUMENT=9;
CKEDITOR.NODE_TEXT=3;
CKEDITOR.NODE_COMMENT=8;
CKEDITOR.NODE_DOCUMENT_FRAGMENT=11;
CKEDITOR.POSITION_IDENTICAL=0;
CKEDITOR.POSITION_DISCONNECTED=1;
CKEDITOR.POSITION_FOLLOWING=2;
CKEDITOR.POSITION_PRECEDING=4;
CKEDITOR.POSITION_IS_CONTAINED=8;
CKEDITOR.POSITION_CONTAINS=16;
CKEDITOR.tools.extend(CKEDITOR.dom.node.prototype,{appendTo:function(element,toStart){element.append(this,toStart);
return element;
},clone:function(includeChildren,cloneId){var $clone=this.$.cloneNode(includeChildren);
var removeIds=function(node){if(node["data-cke-expando"]){node["data-cke-expando"]=false;
}if(node.nodeType!=CKEDITOR.NODE_ELEMENT){return;
}if(!cloneId){node.removeAttribute("id",false);
}if(includeChildren){var childs=node.childNodes;
for(var i=0;
i<childs.length;
i++){removeIds(childs[i]);
}}};
removeIds($clone);
return new CKEDITOR.dom.node($clone);
},hasPrevious:function(){return !!this.$.previousSibling;
},hasNext:function(){return !!this.$.nextSibling;
},insertAfter:function(node){node.$.parentNode.insertBefore(this.$,node.$.nextSibling);
return node;
},insertBefore:function(node){node.$.parentNode.insertBefore(this.$,node.$);
return node;
},insertBeforeMe:function(node){this.$.parentNode.insertBefore(node.$,this.$);
return node;
},getAddress:function(normalized){try{var address=[];
var $documentElement=this.getDocument().$.documentElement;
var node=this.$;
while(node&&node!=$documentElement){var parentNode=node.parentNode;
if(parentNode){address.unshift(this.getIndex.call({$:node},normalized));
}node=parentNode;
}return address;
}catch(e){return null;
}},getDocument:function(){if(typeof this.$.parentNode==="unknown"){if(typeof console!=="undefined"&&console.log){console.log("Corrupt Node");
}return null;
}return new CKEDITOR.dom.document(this.$.ownerDocument||this.$.parentNode.ownerDocument);
},getIndex:function(normalized){var current=this.$,index=-1,isNormalizing;
if(!this.$.parentNode){return index;
}do{if(normalized&&current!=this.$&&current.nodeType==CKEDITOR.NODE_TEXT&&(isNormalizing||!current.nodeValue)){continue;
}index++;
isNormalizing=current.nodeType==CKEDITOR.NODE_TEXT;
}while((current=typeof current.previousSibling=="object"?current.previousSibling:null));
return index;
},getNextSourceNode:function(startFromSibling,nodeType,guard){if(guard&&!guard.call){var guardNode=guard;
guard=function(node){return !node.equals(guardNode);
};
}var node=(!startFromSibling&&this.getFirst&&this.getFirst()),parent;
if(!node){if(this.type==CKEDITOR.NODE_ELEMENT&&guard&&guard(this,true)===false){return null;
}if(typeof this.$.nextSibling!="object"){return null;
}node=this.getNext();
}while(!node&&(parent=(parent||this).getParent())){if(guard&&guard(parent,true)===false){return null;
}node=parent.getNext();
}if(!node){return null;
}if(guard&&guard(node)===false){return null;
}if(nodeType&&nodeType!=node.type){return node.getNextSourceNode(false,nodeType,guard);
}return node;
},getPreviousSourceNode:function(startFromSibling,nodeType,guard){if(guard&&!guard.call){var guardNode=guard;
guard=function(node){return !node.equals(guardNode);
};
}var node=(!startFromSibling&&this.getLast&&this.getLast()),parent;
if(!node){if(this.type==CKEDITOR.NODE_ELEMENT&&guard&&guard(this,true)===false){return null;
}node=this.getPrevious();
}while(!node&&(parent=(parent||this).getParent())){if(guard&&guard(parent,true)===false){return null;
}node=parent.getPrevious();
}if(!node){return null;
}if(guard&&guard(node)===false){return null;
}if(nodeType&&node.type!=nodeType){return node.getPreviousSourceNode(false,nodeType,guard);
}return node;
},getPrevious:function(evaluator){var previous=this.$,retval;
do{if(typeof previous.previousSibling!="object"){return null;
}previous=previous.previousSibling;
retval=previous&&previous.nodeType!=10&&new CKEDITOR.dom.node(previous);
}while(retval&&evaluator&&!evaluator(retval));
return retval;
},getNext:function(evaluator){var next=this.$,retval;
do{if(typeof next.nextSibling!="object"){return null;
}next=next.nextSibling;
retval=next&&new CKEDITOR.dom.node(next);
}while(retval&&evaluator&&!evaluator(retval));
return retval;
},getParent:function(allowFragmentParent){var parent=null;
try{parent=this.$.parentNode;
}catch(e){return null;
}return(parent&&(parent.nodeType==CKEDITOR.NODE_ELEMENT||allowFragmentParent&&parent.nodeType==CKEDITOR.NODE_DOCUMENT_FRAGMENT))?new CKEDITOR.dom.node(parent):null;
},getParents:function(closerFirst){var node=this;
var parents=[];
do{parents[closerFirst?"push":"unshift"](node);
}while((node=node.getParent()));
return parents;
},getCommonAncestor:function(node){if(node.equals(this)){return this;
}if(node.contains&&node.contains(this)){return node;
}var start=this.contains?this:this.getParent();
do{if(start.contains(node)){return start;
}}while((start=start.getParent()));
return null;
},getPosition:function(otherNode){try{var $=this.$;
var $other=otherNode.$;
if($.compareDocumentPosition){return $.compareDocumentPosition($other);
}if($==$other){return CKEDITOR.POSITION_IDENTICAL;
}if(this.type==CKEDITOR.NODE_ELEMENT&&otherNode.type==CKEDITOR.NODE_ELEMENT){if($.contains){if($.contains($other)){return CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_PRECEDING;
}if($other.contains($)){return CKEDITOR.POSITION_IS_CONTAINED+CKEDITOR.POSITION_FOLLOWING;
}}if("sourceIndex" in $){return($.sourceIndex<0||$other.sourceIndex<0)?CKEDITOR.POSITION_DISCONNECTED:($.sourceIndex<$other.sourceIndex)?CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_FOLLOWING;
}}var addressOfThis=this.getAddress(),addressOfOther=otherNode.getAddress(),minLevel=Math.min(addressOfThis.length,addressOfOther.length);
for(var i=0;
i<=minLevel-1;
i++){if(addressOfThis[i]!=addressOfOther[i]){if(i<minLevel){return addressOfThis[i]<addressOfOther[i]?CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_FOLLOWING;
}break;
}}return(addressOfThis.length<addressOfOther.length)?CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_IS_CONTAINED+CKEDITOR.POSITION_FOLLOWING;
}catch(e){return(CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_PRECEDING);
}},getAscendant:function(reference,includeSelf){var $=this.$,name;
if(!includeSelf){$=$.parentNode;
}while($){if($.nodeName&&(name=$.nodeName.toLowerCase(),(typeof reference=="string"?name==reference:name in reference))){return new CKEDITOR.dom.node($);
}try{$=$.parentNode;
}catch(e){$=null;
}}return null;
},hasAscendant:function(name,includeSelf){var $=this.$;
if(!includeSelf){$=$.parentNode;
}while($){if($.nodeName&&$.nodeName.toLowerCase()==name){return true;
}$=$.parentNode;
}return false;
},move:function(target,toStart){target.append(this.remove(),toStart);
},remove:function(preserveChildren){var $=this.$;
var parent=$.parentNode;
if(parent){if(preserveChildren){for(var child;
(child=$.firstChild);
){parent.insertBefore($.removeChild(child),$);
}}parent.removeChild($);
}return this;
},replace:function(nodeToReplace){this.insertBefore(nodeToReplace);
nodeToReplace.remove();
},trim:function(){this.ltrim();
this.rtrim();
},ltrim:function(){var child;
while(this.getFirst&&(child=this.getFirst())){if(child.type==CKEDITOR.NODE_TEXT){var trimmed=CKEDITOR.tools.ltrim(child.getText()),originalLength=child.getLength();
if(!trimmed){child.remove();
continue;
}else{if(trimmed.length<originalLength){child.split(originalLength-trimmed.length);
this.$.removeChild(this.$.firstChild);
}}}break;
}},rtrim:function(){var child;
while(this.getLast&&(child=this.getLast())){if(child.type==CKEDITOR.NODE_TEXT){var trimmed=CKEDITOR.tools.rtrim(child.getText()),originalLength=child.getLength();
if(!trimmed){child.remove();
continue;
}else{if(trimmed.length<originalLength){child.split(trimmed.length);
this.$.lastChild.parentNode.removeChild(this.$.lastChild);
}}}break;
}if(!CKEDITOR.env.ie&&!CKEDITOR.env.opera){child=this.$.lastChild;
if(child&&child.type==1&&child.nodeName.toLowerCase()=="br"){child.parentNode.removeChild(child);
}}},isReadOnly:function(){var element=this;
if(this.type!=CKEDITOR.NODE_ELEMENT){element=this.getParent();
}if(element&&typeof element.$.isContentEditable!="undefined"){return !(element.$.isContentEditable||element.data("cke-editable"));
}else{while(element){if(element.data("cke-editable")){break;
}if(element.getAttribute("contentEditable")=="false"){return true;
}else{if(element.getAttribute("contentEditable")=="true"){break;
}}element=element.getParent();
}return !element;
}}});
CKEDITOR.dom.window=function(domWindow){CKEDITOR.dom.domObject.call(this,domWindow);
};
CKEDITOR.dom.window.prototype=new CKEDITOR.dom.domObject();
CKEDITOR.tools.extend(CKEDITOR.dom.window.prototype,{focus:function(){this.$.focus();
},getViewPaneSize:function(){var doc=this.$.document,stdMode=doc.compatMode=="CSS1Compat";
return{width:(stdMode?doc.documentElement.clientWidth:doc.body.clientWidth)||0,height:(stdMode?doc.documentElement.clientHeight:doc.body.clientHeight)||0};
},getScrollPosition:function(){var $=this.$;
if("pageXOffset" in $){return{x:$.pageXOffset||0,y:$.pageYOffset||0};
}else{var doc=$.document;
return{x:doc.documentElement.scrollLeft||doc.body.scrollLeft||0,y:doc.documentElement.scrollTop||doc.body.scrollTop||0};
}},getFrame:function(){var iframe=this.$.frameElement;
return iframe?new CKEDITOR.dom.element.get(iframe):null;
}});
CKEDITOR.dom.document=function(domDocument){CKEDITOR.dom.domObject.call(this,domDocument);
};
CKEDITOR.dom.document.prototype=new CKEDITOR.dom.domObject();
CKEDITOR.tools.extend(CKEDITOR.dom.document.prototype,{type:CKEDITOR.NODE_DOCUMENT,appendStyleSheet:function(cssFileUrl){if(this.$.createStyleSheet){this.$.createStyleSheet(cssFileUrl);
}else{var link=new CKEDITOR.dom.element("link");
link.setAttributes({rel:"stylesheet",type:"text/css",href:cssFileUrl});
this.getHead().append(link);
}},appendStyleText:function(cssStyleText){if(this.$.createStyleSheet){var styleSheet=this.$.createStyleSheet("");
styleSheet.cssText=cssStyleText;
}else{var style=new CKEDITOR.dom.element("style",this);
style.append(new CKEDITOR.dom.text(cssStyleText,this));
this.getHead().append(style);
}return styleSheet||style.$.sheet;
},createElement:function(name,attribsAndStyles){var element=new CKEDITOR.dom.element(name,this);
if(attribsAndStyles){if(attribsAndStyles.attributes){element.setAttributes(attribsAndStyles.attributes);
}if(attribsAndStyles.styles){element.setStyles(attribsAndStyles.styles);
}}return element;
},createText:function(text){return new CKEDITOR.dom.text(text,this);
},focus:function(){this.getWindow().focus();
},getActive:function(){return new CKEDITOR.dom.element(this.$.activeElement);
},getById:function(elementId){var $=this.$.getElementById(elementId);
return $?new CKEDITOR.dom.element($):null;
},getByAddress:function(address,normalized){var $=this.$.documentElement;
for(var i=0;
$&&i<address.length;
i++){var target=address[i];
if(!normalized){$=$.childNodes[target];
continue;
}var currentIndex=-1;
for(var j=0;
j<$.childNodes.length;
j++){var candidate=$.childNodes[j];
if(normalized===true&&candidate.nodeType==3&&candidate.previousSibling&&candidate.previousSibling.nodeType==3){continue;
}currentIndex++;
if(currentIndex==target){$=candidate;
break;
}}}return $?new CKEDITOR.dom.node($):null;
},getElementsByTag:function(tagName,namespace){if(!(CKEDITOR.env.ie&&!(document.documentMode>8))&&namespace){tagName=namespace+":"+tagName;
}return new CKEDITOR.dom.nodeList(this.$.getElementsByTagName(tagName));
},getHead:function(){var head=this.$.getElementsByTagName("head")[0];
if(!head){head=this.getDocumentElement().append(new CKEDITOR.dom.element("head"),true);
}else{head=new CKEDITOR.dom.element(head);
}return head;
},getBody:function(){return new CKEDITOR.dom.element(this.$.body);
},getDocumentElement:function(){return new CKEDITOR.dom.element(this.$.documentElement);
},getWindow:function(){var win=new CKEDITOR.dom.window(this.$.parentWindow||this.$.defaultView);
return(this.getWindow=function(){return win;
})();
},write:function(html){this.$.open("text/html","replace");
CKEDITOR.env.isCustomDomain()&&(this.$.domain=document.domain);
this.$.write(html);
this.$.close();
}});
CKEDITOR.dom.nodeList=function(nativeList){this.$=nativeList;
};
CKEDITOR.dom.nodeList.prototype={count:function(){return this.$.length;
},getItem:function(index){if(index<0||index>=this.$.length){return null;
}var $node=this.$[index];
return $node?new CKEDITOR.dom.node($node):null;
}};
CKEDITOR.dom.element=function(element,ownerDocument){if(typeof element=="string"){element=(ownerDocument?ownerDocument.$:document).createElement(element);
}CKEDITOR.dom.domObject.call(this,element);
};
CKEDITOR.dom.element.get=function(element){var el=typeof element=="string"?document.getElementById(element)||document.getElementsByName(element)[0]:element;
return el&&(el.$?el:new CKEDITOR.dom.element(el));
};
CKEDITOR.dom.element.prototype=new CKEDITOR.dom.node();
CKEDITOR.dom.element.createFromHtml=function(html,ownerDocument){var temp=new CKEDITOR.dom.element("div",ownerDocument);
temp.setHtml(html);
return temp.getFirst().remove();
};
CKEDITOR.dom.element.setMarker=function(database,element,name,value){var id=element.getCustomData("list_marker_id")||(element.setCustomData("list_marker_id",CKEDITOR.tools.getNextNumber()).getCustomData("list_marker_id")),markerNames=element.getCustomData("list_marker_names")||(element.setCustomData("list_marker_names",{}).getCustomData("list_marker_names"));
database[id]=element;
markerNames[name]=1;
return element.setCustomData(name,value);
};
CKEDITOR.dom.element.clearAllMarkers=function(database){for(var i in database){CKEDITOR.dom.element.clearMarkers(database,database[i],1);
}};
CKEDITOR.dom.element.clearMarkers=function(database,element,removeFromDatabase){var names=element.getCustomData("list_marker_names"),id=element.getCustomData("list_marker_id");
for(var i in names){element.removeCustomData(i);
}element.removeCustomData("list_marker_names");
if(removeFromDatabase){element.removeCustomData("list_marker_id");
delete database[id];
}};
(function(){CKEDITOR.tools.extend(CKEDITOR.dom.element.prototype,{type:CKEDITOR.NODE_ELEMENT,addClass:function(className){var c=this.$.className;
if(c){var regex=new RegExp("(?:^|\\s)"+className+"(?:\\s|$)","");
if(!regex.test(c)){c+=" "+className;
}}this.$.className=c||className;
return this;
},removeClass:function(className){var c=this.getAttribute("class");
if(c){var regex=new RegExp("(?:^|\\s+)"+className+"(?=\\s|$)","i");
if(regex.test(c)){c=c.replace(regex,"").replace(/^\s+/,"");
if(c){this.setAttribute("class",c);
}else{this.removeAttribute("class");
}}}return this;
},hasClass:function(className){var regex=new RegExp("(?:^|\\s+)"+className+"(?=\\s|$)","");
return regex.test(this.getAttribute("class"));
},append:function(node,toStart){if(typeof node=="string"){node=this.getDocument().createElement(node);
}if(toStart){this.$.insertBefore(node.$,this.$.firstChild);
}else{this.$.appendChild(node.$);
}return node;
},appendHtml:function(html){if(!this.$.childNodes.length){this.setHtml(html);
}else{var temp=new CKEDITOR.dom.element("div",this.getDocument());
temp.setHtml(html);
temp.moveChildren(this);
}},appendText:function(text){if(this.$.text!=undefined){this.$.text+=text;
}else{this.append(new CKEDITOR.dom.text(text));
}},appendBogus:function(){var lastChild=this.getLast();
while(lastChild&&lastChild.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.rtrim(lastChild.getText())){lastChild=lastChild.getPrevious();
}if(!lastChild||!lastChild.is||!lastChild.is("br")){var bogus=CKEDITOR.env.opera?this.getDocument().createText(""):this.getDocument().createElement("br");
CKEDITOR.env.gecko&&bogus.setAttribute("type","_moz");
this.append(bogus);
}},breakParent:function(parent){var range=new CKEDITOR.dom.range(this.getDocument());
range.setStartAfter(this);
range.setEndAfter(parent);
var docFrag=range.extractContents();
range.insertNode(this.remove());
docFrag.insertAfterNode(this);
},contains:CKEDITOR.env.ie||CKEDITOR.env.webkit?function(node){var $=this.$;
return node.type!=CKEDITOR.NODE_ELEMENT?$.contains(node.getParent().$):$!=node.$&&$.contains(node.$);
}:function(node){return !!(this.$.compareDocumentPosition(node.$)&16);
},focus:(function(){function exec(){try{this.$.focus();
}catch(e){}}return function(defer){if(defer){CKEDITOR.tools.setTimeout(exec,100,this);
}else{exec.call(this);
}};
})(),getHtml:function(){var retval=this.$.innerHTML;
return CKEDITOR.env.ie?retval.replace(/<\?[^>]*>/g,""):retval;
},getOuterHtml:function(){if(this.$.outerHTML){return this.$.outerHTML.replace(/<\?[^>]*>/,"");
}var tmpDiv=this.$.ownerDocument.createElement("div");
tmpDiv.appendChild(this.$.cloneNode(true));
return tmpDiv.innerHTML;
},getClientRect:function(){var rect=CKEDITOR.tools.extend({},this.$.getBoundingClientRect());
!rect.width&&(rect.width=rect.right-rect.left);
!rect.height&&(rect.height=rect.bottom-rect.top);
return rect;
},setHtml:(function(){var standard=function(html){return(this.$.innerHTML=html);
};
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){return function(html){try{return standard.call(this,html);
}catch(e){this.$.innerHTML="";
var temp=new CKEDITOR.dom.element("body",this.getDocument());
temp.$.innerHTML=html;
var children=temp.getChildren();
while(children.count()){this.append(children.getItem(0));
}return html;
}};
}else{return standard;
}})(),setText:function(text){CKEDITOR.dom.element.prototype.setText=(this.$.innerText!=undefined)?function(text){return this.$.innerText=text;
}:function(text){return this.$.textContent=text;
};
return this.setText(text);
},getAttribute:(function(){var standard=function(name){return this.$.getAttribute(name,2);
};
if(CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)){return function(name){switch(name){case"class":name="className";
break;
case"http-equiv":name="httpEquiv";
break;
case"name":return this.$.name;
case"tabindex":var tabIndex=standard.call(this,name);
if(tabIndex!==0&&this.$.tabIndex===0){tabIndex=null;
}return tabIndex;
break;
case"checked":var attr=this.$.attributes.getNamedItem(name),attrValue=attr.specified?attr.nodeValue:this.$.checked;
return attrValue?"checked":null;
case"hspace":case"value":return this.$[name];
case"style":return this.$.style.cssText;
case"contenteditable":case"contentEditable":return this.$.attributes.getNamedItem("contentEditable").specified?this.$.getAttribute("contentEditable"):null;
}return standard.call(this,name);
};
}else{return standard;
}})(),getChildren:function(){return new CKEDITOR.dom.nodeList(this.$.childNodes);
},getComputedStyle:CKEDITOR.env.ie?function(propertyName){return this.$.currentStyle[CKEDITOR.tools.cssStyleToDomStyle(propertyName)];
}:function(propertyName){var style=this.getWindow().$.getComputedStyle(this.$,null);
return style?style.getPropertyValue(propertyName):"";
},getDtd:function(){var dtd=CKEDITOR.dtd[this.getName()];
this.getDtd=function(){return dtd;
};
return dtd;
},getElementsByTag:CKEDITOR.dom.document.prototype.getElementsByTag,getTabIndex:CKEDITOR.env.ie?function(){var tabIndex=this.$.tabIndex;
if(tabIndex===0&&!CKEDITOR.dtd.$tabIndex[this.getName()]&&parseInt(this.getAttribute("tabindex"),10)!==0){tabIndex=-1;
}return tabIndex;
}:CKEDITOR.env.webkit?function(){var tabIndex=this.$.tabIndex;
if(tabIndex==undefined){tabIndex=parseInt(this.getAttribute("tabindex"),10);
if(isNaN(tabIndex)){tabIndex=-1;
}}return tabIndex;
}:function(){return this.$.tabIndex;
},getText:function(){return this.$.textContent||this.$.innerText||"";
},getWindow:function(){return this.getDocument().getWindow();
},getId:function(){return this.$.id||null;
},getNameAtt:function(){return this.$.name||null;
},getName:function(){var nodeName=this.$.nodeName.toLowerCase();
if(CKEDITOR.env.ie&&!(document.documentMode>8)){var scopeName=this.$.scopeName;
if(scopeName!="HTML"){nodeName=scopeName.toLowerCase()+":"+nodeName;
}}return(this.getName=function(){return nodeName;
})();
},getValue:function(){return this.$.value;
},getFirst:function(evaluator){var first=this.$.firstChild,retval=first&&new CKEDITOR.dom.node(first);
if(retval&&evaluator&&!evaluator(retval)){retval=retval.getNext(evaluator);
}return retval;
},getLast:function(evaluator){var last=this.$.lastChild,retval=last&&new CKEDITOR.dom.node(last);
if(retval&&evaluator&&!evaluator(retval)){retval=retval.getPrevious(evaluator);
}return retval;
},getStyle:function(name){return this.$.style[CKEDITOR.tools.cssStyleToDomStyle(name)];
},is:function(){var name=this.getName();
if(typeof arguments[0]=="object"){return !!arguments[0][name];
}for(var i=0;
i<arguments.length;
i++){if(arguments[i]==name){return true;
}}return false;
},isEditable:function(textCursor){var name=this.getName();
if(this.isReadOnly()||this.getComputedStyle("display")=="none"||this.getComputedStyle("visibility")=="hidden"||CKEDITOR.dtd.$nonEditable[name]||CKEDITOR.dtd.$empty[name]||(this.is("a")&&(this.data("cke-saved-name")||this.hasAttribute("name"))&&!this.getChildCount())){return false;
}if(textCursor!==false){var dtd=CKEDITOR.dtd[name]||CKEDITOR.dtd.span;
return !!(dtd&&dtd["#"]);
}return true;
},isIdentical:function(otherElement){var thisEl=this.clone(0,1),otherEl=otherElement.clone(0,1);
thisEl.removeAttributes(["_moz_dirty","data-cke-expando","data-cke-saved-href","data-cke-saved-name"]);
otherEl.removeAttributes(["_moz_dirty","data-cke-expando","data-cke-saved-href","data-cke-saved-name"]);
if(thisEl.$.isEqualNode){thisEl.$.style.cssText=CKEDITOR.tools.normalizeCssText(thisEl.$.style.cssText);
otherEl.$.style.cssText=CKEDITOR.tools.normalizeCssText(otherEl.$.style.cssText);
return thisEl.$.isEqualNode(otherEl.$);
}else{thisEl=thisEl.getOuterHtml();
otherEl=otherEl.getOuterHtml();
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9&&this.is("a")){var parent=this.getParent();
if(parent.type==CKEDITOR.NODE_ELEMENT){var el=parent.clone();
el.setHtml(thisEl),thisEl=el.getHtml();
el.setHtml(otherEl),otherEl=el.getHtml();
}}return thisEl==otherEl;
}},isVisible:function(){var isVisible=(this.$.offsetHeight||this.$.offsetWidth)&&this.getComputedStyle("visibility")!="hidden",elementWindow,elementWindowFrame;
if(isVisible&&(CKEDITOR.env.webkit||CKEDITOR.env.opera)){elementWindow=this.getWindow();
if(!elementWindow.equals(CKEDITOR.document.getWindow())&&(elementWindowFrame=elementWindow.$.frameElement)){isVisible=new CKEDITOR.dom.element(elementWindowFrame).isVisible();
}}return !!isVisible;
},isEmptyInlineRemoveable:function(){if(!CKEDITOR.dtd.$removeEmpty[this.getName()]){return false;
}var children=this.getChildren();
for(var i=0,count=children.count();
i<count;
i++){var child=children.getItem(i);
if(child.type==CKEDITOR.NODE_ELEMENT&&child.data("cke-bookmark")){continue;
}if(child.type==CKEDITOR.NODE_ELEMENT&&!child.isEmptyInlineRemoveable()||child.type==CKEDITOR.NODE_TEXT&&CKEDITOR.tools.trim(child.getText())){return false;
}}return true;
},hasAttributes:CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)?function(){var attributes=this.$.attributes;
for(var i=0;
i<attributes.length;
i++){var attribute=attributes[i];
switch(attribute.nodeName){case"class":if(this.getAttribute("class")){return true;
}case"data-cke-expando":continue;
default:if(attribute.specified){return true;
}}}return false;
}:function(){var attrs=this.$.attributes,attrsNum=attrs.length;
var execludeAttrs={"data-cke-expando":1,_moz_dirty:1};
return attrsNum>0&&(attrsNum>2||!execludeAttrs[attrs[0].nodeName]||(attrsNum==2&&!execludeAttrs[attrs[1].nodeName]));
},hasAttribute:(function(){function standard(name){var $attr=this.$.attributes.getNamedItem(name);
return !!($attr&&$attr.specified);
}return(CKEDITOR.env.ie&&CKEDITOR.env.version<8)?function(name){if(name=="name"){return !!this.$.name;
}return standard.call(this,name);
}:standard;
})(),hide:function(){this.setStyle("display","none");
},moveChildren:function(target,toStart){var $=this.$;
target=target.$;
if($==target){return;
}var child;
if(toStart){while((child=$.lastChild)){target.insertBefore($.removeChild(child),target.firstChild);
}}else{while((child=$.firstChild)){target.appendChild($.removeChild(child));
}}},mergeSiblings:(function(){function mergeElements(element,sibling,isNext){if(sibling&&sibling.type==CKEDITOR.NODE_ELEMENT){var pendingNodes=[];
while(sibling.data("cke-bookmark")||sibling.isEmptyInlineRemoveable()){pendingNodes.push(sibling);
sibling=isNext?sibling.getNext():sibling.getPrevious();
if(!sibling||sibling.type!=CKEDITOR.NODE_ELEMENT){return;
}}if(element.isIdentical(sibling)){var innerSibling=isNext?element.getLast():element.getFirst();
while(pendingNodes.length){pendingNodes.shift().move(element,!isNext);
}sibling.moveChildren(element,!isNext);
sibling.remove();
if(innerSibling&&innerSibling.type==CKEDITOR.NODE_ELEMENT){innerSibling.mergeSiblings();
}}}}return function(inlineOnly){if(!(inlineOnly===false||CKEDITOR.dtd.$removeEmpty[this.getName()]||this.is("a"))){return;
}mergeElements(this,this.getNext(),true);
mergeElements(this,this.getPrevious());
};
})(),show:function(){this.setStyles({display:"",visibility:""});
},setAttribute:(function(){var standard=function(name,value){this.$.setAttribute(name,value);
return this;
};
if(CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)){return function(name,value){if(name=="class"){this.$.className=value;
}else{if(name=="style"){this.$.style.cssText=value;
}else{if(name=="tabindex"){this.$.tabIndex=value;
}else{if(name=="checked"){this.$.checked=value;
}else{if(name=="contenteditable"){standard.call(this,"contentEditable",value);
}else{standard.apply(this,arguments);
}}}}}return this;
};
}else{if(CKEDITOR.env.ie8Compat&&CKEDITOR.env.secure){return function(name,value){if(name=="src"&&value.match(/^http:\/\//)){try{standard.apply(this,arguments);
}catch(e){}}else{standard.apply(this,arguments);
}return this;
};
}else{return standard;
}}})(),setAttributes:function(attributesPairs){for(var name in attributesPairs){this.setAttribute(name,attributesPairs[name]);
}return this;
},setValue:function(value){this.$.value=value;
return this;
},removeAttribute:(function(){var standard=function(name){this.$.removeAttribute(name);
};
if(CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)){return function(name){if(name=="class"){name="className";
}else{if(name=="tabindex"){name="tabIndex";
}else{if(name=="contenteditable"){name="contentEditable";
}}}standard.call(this,name);
};
}else{return standard;
}})(),removeAttributes:function(attributes){if(CKEDITOR.tools.isArray(attributes)){for(var i=0;
i<attributes.length;
i++){this.removeAttribute(attributes[i]);
}}else{for(var attr in attributes){attributes.hasOwnProperty(attr)&&this.removeAttribute(attr);
}}},removeStyle:function(name){var $=this.$.style;
if(!$.removeProperty&&(name=="border"||name=="margin"||name=="padding")){var names=expandedRules(name);
for(var i=0;
i<names.length;
i++){this.removeStyle(names[i]);
}return;
}$.removeProperty?$.removeProperty(name):$.removeAttribute(CKEDITOR.tools.cssStyleToDomStyle(name));
if(!this.$.style.cssText){this.removeAttribute("style");
}},setStyle:function(name,value){this.$.style[CKEDITOR.tools.cssStyleToDomStyle(name)]=value;
return this;
},setStyles:function(stylesPairs){for(var name in stylesPairs){this.setStyle(name,stylesPairs[name]);
}return this;
},setOpacity:function(opacity){if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){}else{this.setStyle("opacity",opacity);
}},unselectable:function(){this.setStyles(CKEDITOR.tools.cssVendorPrefix("user-select","none"));
if(CKEDITOR.env.ie||CKEDITOR.env.opera){this.setAttribute("unselectable","on");
var element,elements=this.getElementsByTag("*");
for(var i=0,count=elements.count();
i<count;
i++){element=elements.getItem(i);
element.setAttribute("unselectable","on");
}}},getPositionedAncestor:function(){var current=this;
while(current.getName()!="html"){if(current.getComputedStyle("position")!="static"){return current;
}current=current.getParent();
}return null;
},getDocumentPosition:function(refDocument){var x=0,y=0,doc=this.getDocument(),body=doc.getBody(),quirks=doc.$.compatMode=="BackCompat";
if(document.documentElement.getBoundingClientRect){var box=this.$.getBoundingClientRect(),$doc=doc.$,$docElem=$doc.documentElement;
var clientTop=$docElem.clientTop||body.$.clientTop||0,clientLeft=$docElem.clientLeft||body.$.clientLeft||0,needAdjustScrollAndBorders=true;
if(CKEDITOR.env.ie){var inDocElem=doc.getDocumentElement().contains(this),inBody=doc.getBody().contains(this);
needAdjustScrollAndBorders=(quirks&&inBody)||(!quirks&&inDocElem);
}if(needAdjustScrollAndBorders){x=box.left+(!quirks&&$docElem.scrollLeft||body.$.scrollLeft);
x-=clientLeft;
y=box.top+(!quirks&&$docElem.scrollTop||body.$.scrollTop);
y-=clientTop;
}}else{var current=this,previous=null,offsetParent;
while(current&&!(current.getName()=="body"||current.getName()=="html")){x+=current.$.offsetLeft-current.$.scrollLeft;
y+=current.$.offsetTop-current.$.scrollTop;
if(!current.equals(this)){x+=(current.$.clientLeft||0);
y+=(current.$.clientTop||0);
}var scrollElement=previous;
while(scrollElement&&!scrollElement.equals(current)){x-=scrollElement.$.scrollLeft;
y-=scrollElement.$.scrollTop;
scrollElement=scrollElement.getParent();
}previous=current;
current=(offsetParent=current.$.offsetParent)?new CKEDITOR.dom.element(offsetParent):null;
}}if(refDocument){var currentWindow=this.getWindow(),refWindow=refDocument.getWindow();
if(!currentWindow.equals(refWindow)&&currentWindow.$.frameElement){var iframePosition=(new CKEDITOR.dom.element(currentWindow.$.frameElement)).getDocumentPosition(refDocument);
x+=iframePosition.x;
y+=iframePosition.y;
}}if(!document.documentElement.getBoundingClientRect){if(CKEDITOR.env.gecko&&!quirks){x+=this.$.clientLeft?1:0;
y+=this.$.clientTop?1:0;
}}return{x:x,y:y};
},scrollIntoView:function(alignToTop){var parent=this.getParent();
if(!parent){return;
}do{var overflowed=parent.$.clientWidth&&parent.$.clientWidth<parent.$.scrollWidth||parent.$.clientHeight&&parent.$.clientHeight<parent.$.scrollHeight;
if(overflowed&&!parent.is("body")){this.scrollIntoParent(parent,alignToTop,1);
}if(parent.is("html")){var win=parent.getWindow();
try{var iframe=win.$.frameElement;
iframe&&(parent=new CKEDITOR.dom.element(iframe));
}catch(er){}}}while((parent=parent.getParent()));
},scrollIntoParent:function(parent,alignToTop,hscroll){!parent&&(parent=this.getWindow());
var doc=parent.getDocument();
var isQuirks=doc.$.compatMode=="BackCompat";
if(parent instanceof CKEDITOR.dom.window){parent=isQuirks?doc.getBody():doc.getDocumentElement();
}function scrollBy(x,y){if(/body|html/.test(parent.getName())){parent.getWindow().$.scrollBy(x,y);
}else{parent.$.scrollLeft+=x;
parent.$.scrollTop+=y;
}}function screenPos(element,refWin){var pos={x:0,y:0};
if(!(element.is(isQuirks?"body":"html"))){var box=element.$.getBoundingClientRect();
pos.x=box.left,pos.y=box.top;
}var win=element.getWindow();
if(!win.equals(refWin)){var outerPos=screenPos(CKEDITOR.dom.element.get(win.$.frameElement),refWin);
pos.x+=outerPos.x,pos.y+=outerPos.y;
}return pos;
}function margin(element,side){return parseInt(element.getComputedStyle("margin-"+side)||0,10)||0;
}var win=parent.getWindow();
var thisPos=screenPos(this,win),parentPos=screenPos(parent,win),eh=this.$.offsetHeight,ew=this.$.offsetWidth,ch=parent.$.clientHeight,cw=parent.$.clientWidth,lt,br;
lt={x:thisPos.x-margin(this,"left")-parentPos.x||0,y:thisPos.y-margin(this,"top")-parentPos.y||0};
br={x:thisPos.x+ew+margin(this,"right")-((parentPos.x)+cw)||0,y:thisPos.y+eh+margin(this,"bottom")-((parentPos.y)+ch)||0};
if(lt.y<0||br.y>0){scrollBy(0,alignToTop===true?lt.y:alignToTop===false?br.y:lt.y<0?lt.y:br.y);
}if(hscroll&&(lt.x<0||br.x>0)){scrollBy(lt.x<0?lt.x:br.x,0);
}},setState:function(state,base,useAria){base=base||"cke";
switch(state){case CKEDITOR.TRISTATE_ON:this.addClass(base+"_on");
this.removeClass(base+"_off");
this.removeClass(base+"_disabled");
useAria&&this.setAttribute("aria-pressed",true);
useAria&&this.removeAttribute("aria-disabled");
break;
case CKEDITOR.TRISTATE_DISABLED:this.addClass(base+"_disabled");
this.removeClass(base+"_off");
this.removeClass(base+"_on");
useAria&&this.setAttribute("aria-disabled",true);
useAria&&this.removeAttribute("aria-pressed");
break;
default:this.addClass(base+"_off");
this.removeClass(base+"_on");
this.removeClass(base+"_disabled");
useAria&&this.removeAttribute("aria-pressed");
useAria&&this.removeAttribute("aria-disabled");
break;
}},getFrameDocument:function(){var $=this.$;
try{$.contentWindow.document;
}catch(e){$.src=$.src;
}return $&&new CKEDITOR.dom.document($.contentWindow.document);
},copyAttributes:function(dest,skipAttributes){var attributes=this.$.attributes;
skipAttributes=skipAttributes||{};
for(var n=0;
n<attributes.length;
n++){var attribute=attributes[n];
var attrName=attribute.nodeName.toLowerCase(),attrValue;
if(attrName in skipAttributes){continue;
}if(attrName=="checked"&&(attrValue=this.getAttribute(attrName))){dest.setAttribute(attrName,attrValue);
}else{if(attribute.specified||(CKEDITOR.env.ie&&attribute.nodeValue&&attrName=="value")){attrValue=this.getAttribute(attrName);
if(attrValue===null){attrValue=attribute.nodeValue;
}dest.setAttribute(attrName,attrValue);
}}}if(this.$.style.cssText!==""){dest.$.style.cssText=this.$.style.cssText;
}},renameNode:function(newTag){if(this.getName()==newTag){return;
}var doc=this.getDocument();
var newNode=new CKEDITOR.dom.element(newTag,doc);
this.copyAttributes(newNode);
this.moveChildren(newNode);
this.getParent()&&this.$.parentNode.replaceChild(newNode.$,this.$);
newNode.$["data-cke-expando"]=this.$["data-cke-expando"];
this.$=newNode.$;
},getChild:(function(){function getChild(rawNode,index){var childNodes=rawNode.childNodes;
if(index>=0&&index<childNodes.length){return childNodes[index];
}}return function(indices){var rawNode=this.$;
if(!indices.slice){rawNode=getChild(rawNode,indices);
}else{while(indices.length>0&&rawNode){rawNode=getChild(rawNode,indices.shift());
}}return rawNode?new CKEDITOR.dom.node(rawNode):null;
};
})(),getChildCount:function(){return this.$.childNodes.length;
},disableContextMenu:function(){this.on("contextmenu",function(event){if(!event.data.getTarget().hasClass("cke_enable_context_menu")){event.data.preventDefault();
}});
},getDirection:function(useComputed){if(useComputed){return this.getComputedStyle("direction")||this.getDirection()||this.getParent()&&this.getParent().getDirection(1)||this.getDocument().$.dir||"ltr";
}else{return this.getStyle("direction")||this.getAttribute("dir");
}},data:function(name,value){name="data-"+name;
if(value===undefined){return this.getAttribute(name);
}else{if(value===false){this.removeAttribute(name);
}else{this.setAttribute(name,value);
}}return null;
},getEditor:function(){var instances=CKEDITOR.instances,name,instance;
for(name in instances){instance=instances[name];
if(instance.element.equals(this)&&instance.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO){return instance;
}}return null;
}});
var sides={width:["border-left-width","border-right-width","padding-left","padding-right"],height:["border-top-width","border-bottom-width","padding-top","padding-bottom"]};
function expandedRules(style){var sides=["top","left","right","bottom"],components;
if(style=="border"){components=["color","style","width"];
}var styles=[];
for(var i=0;
i<sides.length;
i++){if(components){for(var j=0;
j<components.length;
j++){styles.push([style,sides[i],components[j]].join("-"));
}}else{styles.push([style,sides[i]].join("-"));
}}return styles;
}function marginAndPaddingSize(type){var adjustment=0;
for(var i=0,len=sides[type].length;
i<len;
i++){adjustment+=parseInt(this.getComputedStyle(sides[type][i])||0,10)||0;
}return adjustment;
}CKEDITOR.dom.element.prototype.setSize=function(type,size,isBorderBox){if(typeof size=="number"){if(isBorderBox&&!(CKEDITOR.env.ie&&CKEDITOR.env.quirks)){size-=marginAndPaddingSize.call(this,type);
}this.setStyle(type,size+"px");
}};
CKEDITOR.dom.element.prototype.getSize=function(type,isBorderBox){var size=Math.max(this.$["offset"+CKEDITOR.tools.capitalize(type)],this.$["client"+CKEDITOR.tools.capitalize(type)])||0;
if(isBorderBox){size-=marginAndPaddingSize.call(this,type);
}return size;
};
})();
CKEDITOR.dom.documentFragment=function(nodeOrDoc){nodeOrDoc=nodeOrDoc||CKEDITOR.document;
if(nodeOrDoc.type==CKEDITOR.NODE_DOCUMENT){this.$=nodeOrDoc.$.createDocumentFragment();
}else{this.$=nodeOrDoc;
}};
CKEDITOR.tools.extend(CKEDITOR.dom.documentFragment.prototype,CKEDITOR.dom.element.prototype,{type:CKEDITOR.NODE_DOCUMENT_FRAGMENT,insertAfterNode:function(node){node=node.$;
node.parentNode.insertBefore(this.$,node.nextSibling);
},getHtml:function(){var container=new CKEDITOR.dom.element("div");
this.clone(1,1).appendTo(container);
return container.getHtml().replace(/\s*data-cke-expando=".*?"/g,"");
}},true,{append:1,appendBogus:1,clone:1,getFirst:1,getHtml:1,getLast:1,getParent:1,getNext:1,getPrevious:1,appendTo:1,moveChildren:1,insertBefore:1,insertAfterNode:1,replace:1,trim:1,type:1,ltrim:1,rtrim:1,getDocument:1,getChildCount:1,getChild:1,getChildren:1});
(function(){function iterate(rtl,breakOnFalse){var range=this.range;
if(this._.end){return null;
}if(!this._.start){this._.start=1;
if(range.collapsed){this.end();
return null;
}range.optimize();
}var node,startCt=range.startContainer,endCt=range.endContainer,startOffset=range.startOffset,endOffset=range.endOffset,guard,userGuard=this.guard,type=this.type,getSourceNodeFn=(rtl?"getPreviousSourceNode":"getNextSourceNode");
if(!rtl&&!this._.guardLTR){var limitLTR=endCt.type==CKEDITOR.NODE_ELEMENT?endCt:endCt.getParent();
var blockerLTR=endCt.type==CKEDITOR.NODE_ELEMENT?endCt.getChild(endOffset):endCt.getNext();
this._.guardLTR=function(node,movingOut){return((!movingOut||!limitLTR.equals(node))&&(!blockerLTR||!node.equals(blockerLTR))&&(node.type!=CKEDITOR.NODE_ELEMENT||!movingOut||!node.equals(range.root)));
};
}if(rtl&&!this._.guardRTL){var limitRTL=startCt.type==CKEDITOR.NODE_ELEMENT?startCt:startCt.getParent();
var blockerRTL=startCt.type==CKEDITOR.NODE_ELEMENT?startOffset?startCt.getChild(startOffset-1):null:startCt.getPrevious();
this._.guardRTL=function(node,movingOut){return((!movingOut||!limitRTL.equals(node))&&(!blockerRTL||!node.equals(blockerRTL))&&(node.type!=CKEDITOR.NODE_ELEMENT||!movingOut||!node.equals(range.root)));
};
}var stopGuard=rtl?this._.guardRTL:this._.guardLTR;
if(userGuard){guard=function(node,movingOut){if(stopGuard(node,movingOut)===false){return false;
}return userGuard(node,movingOut);
};
}else{guard=stopGuard;
}if(this.current){node=this.current[getSourceNodeFn](false,type,guard);
}else{if(rtl){node=endCt;
if(node.type==CKEDITOR.NODE_ELEMENT){if(endOffset>0){node=node.getChild(endOffset-1);
}else{node=(guard(node,true)===false)?null:node.getPreviousSourceNode(true,type,guard);
}}}else{node=startCt;
if(node.type==CKEDITOR.NODE_ELEMENT){if(!(node=node.getChild(startOffset))){node=(guard(startCt,true)===false)?null:startCt.getNextSourceNode(true,type,guard);
}}}if(node&&guard(node)===false){node=null;
}}while(node&&!this._.end){this.current=node;
if(!this.evaluator||this.evaluator(node)!==false){if(!breakOnFalse){return node;
}}else{if(breakOnFalse&&this.evaluator){return false;
}}node=node[getSourceNodeFn](false,type,guard);
}this.end();
return this.current=null;
}function iterateToLast(rtl){var node,last=null;
while((node=iterate.call(this,rtl))){last=node;
}return last;
}CKEDITOR.dom.walker=CKEDITOR.tools.createClass({$:function(range){this.range=range;
this._={};
},proto:{end:function(){this._.end=1;
},next:function(){return iterate.call(this);
},previous:function(){return iterate.call(this,1);
},checkForward:function(){return iterate.call(this,0,1)!==false;
},checkBackward:function(){return iterate.call(this,1,1)!==false;
},lastForward:function(){return iterateToLast.call(this);
},lastBackward:function(){return iterateToLast.call(this,1);
},reset:function(){delete this.current;
this._={};
}}});
var blockBoundaryDisplayMatch={block:1,"list-item":1,table:1,"table-row-group":1,"table-header-group":1,"table-footer-group":1,"table-row":1,"table-column-group":1,"table-column":1,"table-cell":1,"table-caption":1},outOfFlowPositions={absolute:1,fixed:1};
CKEDITOR.dom.element.prototype.isBlockBoundary=function(customNodeNames){var inPageFlow=this.getComputedStyle("float")=="none"&&!(this.getComputedStyle("position") in outOfFlowPositions);
if(inPageFlow&&blockBoundaryDisplayMatch[this.getComputedStyle("display")]){return true;
}return !!(this.is(CKEDITOR.dtd.$block)||customNodeNames&&this.is(customNodeNames));
};
CKEDITOR.dom.walker.blockBoundary=function(customNodeNames){return function(node,type){return !(node.type==CKEDITOR.NODE_ELEMENT&&node.isBlockBoundary(customNodeNames));
};
};
CKEDITOR.dom.walker.listItemBoundary=function(){return this.blockBoundary({br:1});
};
CKEDITOR.dom.walker.bookmark=function(contentOnly,isReject){function isBookmarkNode(node){return(node&&node.getName&&node.getName()=="span"&&node.data("cke-bookmark"));
}return function(node){var isBookmark,parent;
isBookmark=(node&&node.type!=CKEDITOR.NODE_ELEMENT&&(parent=node.getParent())&&isBookmarkNode(parent));
isBookmark=contentOnly?isBookmark:isBookmark||isBookmarkNode(node);
return !!(isReject^isBookmark);
};
};
CKEDITOR.dom.walker.whitespaces=function(isReject){return function(node){var isWhitespace;
if(node&&node.type==CKEDITOR.NODE_TEXT){isWhitespace=!CKEDITOR.tools.trim(node.getText())||CKEDITOR.env.webkit&&node.getText()=="\u200b";
}return !!(isReject^isWhitespace);
};
};
CKEDITOR.dom.walker.invisible=function(isReject){var whitespace=CKEDITOR.dom.walker.whitespaces();
return function(node){var invisible;
if(whitespace(node)){invisible=1;
}else{if(node.type==CKEDITOR.NODE_TEXT){node=node.getParent();
}invisible=!node.$.offsetHeight;
}return !!(isReject^invisible);
};
};
CKEDITOR.dom.walker.nodeType=function(type,isReject){return function(node){return !!(isReject^(node.type==type));
};
};
CKEDITOR.dom.walker.bogus=function(isReject){function nonEmpty(node){return !isWhitespaces(node)&&!isBookmark(node);
}return function(node){var isBogus=CKEDITOR.env.needsBrFiller?node.is&&node.is("br"):node.getText&&tailNbspRegex.test(node.getText());
if(isBogus){var parent=node.getParent(),next=node.getNext(nonEmpty);
isBogus=parent.isBlockBoundary()&&(!next||next.type==CKEDITOR.NODE_ELEMENT&&next.isBlockBoundary());
}return !!(isReject^isBogus);
};
};
CKEDITOR.dom.walker.temp=function(isReject){return function(node){if(node.type!=CKEDITOR.NODE_ELEMENT){node=node.getParent();
}var isTemp=node&&node.hasAttribute("data-cke-temp");
return !!(isReject^isTemp);
};
};
var tailNbspRegex=/^[\t\r\n ]*(?:&nbsp;|\xa0)$/,isWhitespaces=CKEDITOR.dom.walker.whitespaces(),isBookmark=CKEDITOR.dom.walker.bookmark(),isTemp=CKEDITOR.dom.walker.temp(),toSkip=function(node){return isBookmark(node)||isWhitespaces(node)||node.type==CKEDITOR.NODE_ELEMENT&&node.is(CKEDITOR.dtd.$inline)&&!node.is(CKEDITOR.dtd.$empty);
};
CKEDITOR.dom.walker.ignored=function(isReject){return function(node){var isIgnored=isWhitespaces(node)||isBookmark(node)||isTemp(node);
return !!(isReject^isIgnored);
};
};
var isIgnored=CKEDITOR.dom.walker.ignored();
function isEmpty(node){var i=0,l=node.getChildCount();
for(;
i<l;
++i){if(!isIgnored(node.getChild(i))){return false;
}}return true;
}function filterTextContainers(dtd){var hash={},name;
for(name in dtd){if(CKEDITOR.dtd[name]["#"]){hash[name]=1;
}}return hash;
}var dtdTextBlock=filterTextContainers(CKEDITOR.dtd.$block);
function isEditable(node){if(isIgnored(node)){return false;
}if(node.type==CKEDITOR.NODE_TEXT){return true;
}if(node.type==CKEDITOR.NODE_ELEMENT){if(node.is(CKEDITOR.dtd.$inline)||node.is("hr")||node.getAttribute("contenteditable")=="false"){return true;
}if(!CKEDITOR.env.needsBrFiller&&node.is(dtdTextBlock)&&isEmpty(node)){return true;
}}return false;
}CKEDITOR.dom.walker.editable=function(isReject){return function(node){return !!(isReject^isEditable(node));
};
};
CKEDITOR.dom.element.prototype.getBogus=function(){var tail=this;
do{tail=tail.getPreviousSourceNode();
}while(toSkip(tail));
if(tail&&(CKEDITOR.env.needsBrFiller?tail.is&&tail.is("br"):tail.getText&&tailNbspRegex.test(tail.getText()))){return tail;
}return false;
};
})();
CKEDITOR.dom.range=function(root){this.startContainer=null;
this.startOffset=null;
this.endContainer=null;
this.endOffset=null;
this.collapsed=true;
var isDocRoot=root instanceof CKEDITOR.dom.document;
this.document=isDocRoot?root:root.getDocument();
this.root=isDocRoot?root.getBody():root;
};
(function(){var updateCollapsed=function(range){range.collapsed=(range.startContainer&&range.endContainer&&range.startContainer.equals(range.endContainer)&&range.startOffset==range.endOffset);
};
var execContentsAction=function(range,action,docFrag,mergeThen){range.optimizeBookmark();
var startNode=range.startContainer;
var endNode=range.endContainer;
var startOffset=range.startOffset;
var endOffset=range.endOffset;
var removeStartNode;
var removeEndNode;
if(endNode.type==CKEDITOR.NODE_TEXT){endNode=endNode.split(endOffset);
}else{if(endNode.getChildCount()>0){if(endOffset>=endNode.getChildCount()){endNode=endNode.append(range.document.createText(""));
removeEndNode=true;
}else{endNode=endNode.getChild(endOffset);
}}}if(startNode.type==CKEDITOR.NODE_TEXT){startNode.split(startOffset);
if(startNode.equals(endNode)){endNode=startNode.getNext();
}}else{if(!startOffset){startNode=startNode.append(range.document.createText(""),1);
removeStartNode=true;
}else{if(startOffset>=startNode.getChildCount()){startNode=startNode.append(range.document.createText(""));
removeStartNode=true;
}else{startNode=startNode.getChild(startOffset).getPrevious();
}}}var startParents=startNode.getParents();
var endParents=endNode.getParents();
var i,topStart,topEnd;
for(i=0;
i<startParents.length;
i++){topStart=startParents[i];
topEnd=endParents[i];
if(!topStart.equals(topEnd)){break;
}}var clone=docFrag,levelStartNode,levelClone,currentNode,currentSibling;
for(var j=i;
j<startParents.length;
j++){levelStartNode=startParents[j];
if(clone&&!levelStartNode.equals(startNode)){levelClone=clone.append(levelStartNode.clone());
}currentNode=levelStartNode.getNext();
while(currentNode){if(currentNode.equals(endParents[j])||currentNode.equals(endNode)){break;
}currentSibling=currentNode.getNext();
if(action==2){clone.append(currentNode.clone(true));
}else{currentNode.remove();
if(action==1){clone.append(currentNode);
}}currentNode=currentSibling;
}if(clone){clone=levelClone;
}}clone=docFrag;
for(var k=i;
k<endParents.length;
k++){levelStartNode=endParents[k];
if(action>0&&!levelStartNode.equals(endNode)){levelClone=clone.append(levelStartNode.clone());
}if(!startParents[k]||levelStartNode.$.parentNode!=startParents[k].$.parentNode){currentNode=levelStartNode.getPrevious();
while(currentNode){if(currentNode.equals(startParents[k])||currentNode.equals(startNode)){break;
}currentSibling=currentNode.getPrevious();
if(action==2){clone.$.insertBefore(currentNode.$.cloneNode(true),clone.$.firstChild);
}else{currentNode.remove();
if(action==1){clone.$.insertBefore(currentNode.$,clone.$.firstChild);
}}currentNode=currentSibling;
}}if(clone){clone=levelClone;
}}if(action==2){var startTextNode=range.startContainer;
if(startTextNode.type==CKEDITOR.NODE_TEXT){startTextNode.$.data+=startTextNode.$.nextSibling.data;
startTextNode.$.parentNode.removeChild(startTextNode.$.nextSibling);
}var endTextNode=range.endContainer;
if(endTextNode.type==CKEDITOR.NODE_TEXT&&endTextNode.$.nextSibling){endTextNode.$.data+=endTextNode.$.nextSibling.data;
endTextNode.$.parentNode.removeChild(endTextNode.$.nextSibling);
}}else{if(topStart&&topEnd&&(startNode.$.parentNode!=topStart.$.parentNode||endNode.$.parentNode!=topEnd.$.parentNode)){var endIndex=topEnd.getIndex();
if(removeStartNode&&topEnd.$.parentNode==startNode.$.parentNode){endIndex--;
}if(mergeThen&&topStart.type==CKEDITOR.NODE_ELEMENT){var span=CKEDITOR.dom.element.createFromHtml('<span data-cke-bookmark="1" style="display:none">&nbsp;</span>',range.document);
span.insertAfter(topStart);
topStart.mergeSiblings(false);
range.moveToBookmark({startNode:span});
}else{range.setStart(topEnd.getParent(),endIndex);
}}range.collapse(true);
}if(removeStartNode){startNode.remove();
}if(removeEndNode&&endNode.$.parentNode){endNode.remove();
}};
var inlineChildReqElements={abbr:1,acronym:1,b:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,q:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,tt:1,u:1,"var":1};
function getCheckStartEndBlockEvalFunction(){var skipBogus=false,whitespaces=CKEDITOR.dom.walker.whitespaces(),bookmarkEvaluator=CKEDITOR.dom.walker.bookmark(true),isBogus=CKEDITOR.dom.walker.bogus();
return function(node){if(bookmarkEvaluator(node)||whitespaces(node)){return true;
}if(isBogus(node)&&!skipBogus){skipBogus=true;
return true;
}if(node.type==CKEDITOR.NODE_TEXT&&(node.hasAscendant("pre")||CKEDITOR.tools.trim(node.getText()).length)){return false;
}if(node.type==CKEDITOR.NODE_ELEMENT&&!node.is(inlineChildReqElements)){return false;
}return true;
};
}var isBogus=CKEDITOR.dom.walker.bogus(),nbspRegExp=/^[\t\r\n ]*(?:&nbsp;|\xa0)$/,editableEval=CKEDITOR.dom.walker.editable(),notIgnoredEval=CKEDITOR.dom.walker.ignored(true);
function elementBoundaryEval(checkStart){var whitespaces=CKEDITOR.dom.walker.whitespaces(),bookmark=CKEDITOR.dom.walker.bookmark(1);
return function(node){if(bookmark(node)||whitespaces(node)){return true;
}return !checkStart&&isBogus(node)||node.type==CKEDITOR.NODE_ELEMENT&&node.is(CKEDITOR.dtd.$removeEmpty);
};
}function getNextEditableNode(isPrevious){return function(){var first;
return this[isPrevious?"getPreviousNode":"getNextNode"](function(node){if(!first&&notIgnoredEval(node)){first=node;
}return editableEval(node)&&!(isBogus(node)&&node.equals(first));
});
};
}CKEDITOR.dom.range.prototype={clone:function(){var clone=new CKEDITOR.dom.range(this.root);
clone.startContainer=this.startContainer;
clone.startOffset=this.startOffset;
clone.endContainer=this.endContainer;
clone.endOffset=this.endOffset;
clone.collapsed=this.collapsed;
return clone;
},collapse:function(toStart){if(toStart){this.endContainer=this.startContainer;
this.endOffset=this.startOffset;
}else{this.startContainer=this.endContainer;
this.startOffset=this.endOffset;
}this.collapsed=true;
},cloneContents:function(){var docFrag=new CKEDITOR.dom.documentFragment(this.document);
if(!this.collapsed){execContentsAction(this,2,docFrag);
}return docFrag;
},deleteContents:function(mergeThen){if(this.collapsed){return;
}execContentsAction(this,0,null,mergeThen);
},extractContents:function(mergeThen){var docFrag=new CKEDITOR.dom.documentFragment(this.document);
if(!this.collapsed){execContentsAction(this,1,docFrag,mergeThen);
}return docFrag;
},createBookmark:function(serializable){var startNode,endNode;
var baseId;
var clone;
var collapsed=this.collapsed;
startNode=this.document.createElement("span");
startNode.data("cke-bookmark",1);
startNode.setStyle("display","none");
if(!serializable){startNode.setHtml("&nbsp;");
}if(serializable){baseId="cke_bm_"+CKEDITOR.tools.getNextNumber();
startNode.setAttribute("id",baseId+(collapsed?"C":"S"));
}if(!collapsed){endNode=startNode.clone();
if(!serializable){endNode.setHtml("&nbsp;");
}if(serializable){endNode.setAttribute("id",baseId+"E");
}clone=this.clone();
clone.collapse();
clone.insertNode(endNode);
}clone=this.clone();
clone.collapse(true);
clone.insertNode(startNode);
if(endNode){this.setStartAfter(startNode);
this.setEndBefore(endNode);
}else{this.moveToPosition(startNode,CKEDITOR.POSITION_AFTER_END);
}return{startNode:serializable?baseId+(collapsed?"C":"S"):startNode,endNode:serializable?baseId+"E":endNode,serializable:serializable,collapsed:collapsed};
},createBookmark2:(function(){function betweenTextNodes(container,offset){if(container.type!=CKEDITOR.NODE_ELEMENT||offset===0||offset==container.getChildCount()){return 0;
}return container.getChild(offset-1).type==CKEDITOR.NODE_TEXT&&container.getChild(offset).type==CKEDITOR.NODE_TEXT;
}function getLengthOfPrecedingTextNodes(node){var sum=0;
while((node=node.getPrevious())&&node.type==CKEDITOR.NODE_TEXT){sum+=node.getLength();
}return sum;
}function normalize(limit){var container=limit.container,offset=limit.offset;
if(betweenTextNodes(container,offset)){container=container.getChild(offset-1);
offset=container.getLength();
}if(container.type==CKEDITOR.NODE_ELEMENT&&offset>1){offset=container.getChild(offset-1).getIndex(true)+1;
}if(container.type==CKEDITOR.NODE_TEXT){offset+=getLengthOfPrecedingTextNodes(container);
}limit.container=container;
limit.offset=offset;
}return function(normalized){var collapsed=this.collapsed,bmStart={container:this.startContainer,offset:this.startOffset},bmEnd={container:this.endContainer,offset:this.endOffset};
if(normalized){normalize(bmStart);
if(!collapsed){normalize(bmEnd);
}}return{start:bmStart.container.getAddress(normalized),end:collapsed?null:bmEnd.container.getAddress(normalized),startOffset:bmStart.offset,endOffset:bmEnd.offset,normalized:normalized,collapsed:collapsed,is2:true};
};
})(),moveToBookmark:function(bookmark){if(bookmark.is2){var startContainer=this.document.getByAddress(bookmark.start,bookmark.normalized),startOffset=bookmark.startOffset;
var endContainer=bookmark.end&&this.document.getByAddress(bookmark.end,bookmark.normalized),endOffset=bookmark.endOffset;
this.setStart(startContainer,startOffset);
if(endContainer){this.setEnd(endContainer,endOffset);
}else{this.collapse(true);
}}else{var serializable=bookmark.serializable,startNode=serializable?this.document.getById(bookmark.startNode):bookmark.startNode,endNode=serializable?this.document.getById(bookmark.endNode):bookmark.endNode;
if(!startNode.getDocument().getBody().contains(startNode)){DocHandleError("range.prototype.moveToBookmark - startNode is not in the DOM","DynDocCKEditor");
return;
}this.setStartBefore(startNode);
startNode.remove();
if(endNode){this.setEndBefore(endNode);
endNode.remove();
}else{this.collapse(true);
}}},getBoundaryNodes:function(){var startNode=this.startContainer,endNode=this.endContainer,startOffset=this.startOffset,endOffset=this.endOffset,childCount;
if(startNode.type==CKEDITOR.NODE_ELEMENT){childCount=startNode.getChildCount();
if(childCount>startOffset){startNode=startNode.getChild(startOffset);
}else{if(childCount<1){startNode=startNode.getPreviousSourceNode();
}else{startNode=startNode.$;
while(startNode.lastChild){startNode=startNode.lastChild;
}startNode=new CKEDITOR.dom.node(startNode);
startNode=startNode.getNextSourceNode()||startNode;
}}}if(endNode.type==CKEDITOR.NODE_ELEMENT){childCount=endNode.getChildCount();
if(childCount>endOffset){endNode=endNode.getChild(endOffset).getPreviousSourceNode(true);
}else{if(childCount<1){endNode=endNode.getPreviousSourceNode();
}else{endNode=endNode.$;
while(endNode.lastChild){endNode=endNode.lastChild;
}endNode=new CKEDITOR.dom.node(endNode);
}}}if(null!=startNode){if(startNode.getPosition(endNode)&CKEDITOR.POSITION_FOLLOWING){startNode=endNode;
}return{startNode:startNode,endNode:endNode};
}},getCommonAncestor:function(includeSelf,ignoreTextNode){var start=this.startContainer,end=this.endContainer,ancestor;
if(start.equals(end)){if(includeSelf&&start.type==CKEDITOR.NODE_ELEMENT&&this.startOffset==this.endOffset-1){ancestor=start.getChild(this.startOffset);
}else{ancestor=start;
}}else{ancestor=start.getCommonAncestor(end);
}return ignoreTextNode&&!ancestor.is?ancestor.getParent():ancestor;
},optimize:function(){var container=this.startContainer;
var offset=this.startOffset;
if(container.type!=CKEDITOR.NODE_ELEMENT){if(!offset){this.setStartBefore(container);
}else{if(offset>=container.getLength()){this.setStartAfter(container);
}}}container=this.endContainer;
offset=this.endOffset;
if(container.type!=CKEDITOR.NODE_ELEMENT){if(!offset){this.setEndBefore(container);
}else{if(offset>=container.getLength()){this.setEndAfter(container);
}}}},optimizeBookmark:function(){var startNode=this.startContainer,endNode=this.endContainer;
if(startNode.is&&startNode.is("span")&&startNode.data("cke-bookmark")){this.setStartAt(startNode,CKEDITOR.POSITION_BEFORE_START);
}if(endNode&&endNode.is&&endNode.is("span")&&endNode.data("cke-bookmark")){this.setEndAt(endNode,CKEDITOR.POSITION_AFTER_END);
}},trim:function(ignoreStart,ignoreEnd){var startContainer=this.startContainer,startOffset=this.startOffset,collapsed=this.collapsed;
if((!ignoreStart||collapsed)&&startContainer&&startContainer.type==CKEDITOR.NODE_TEXT){if(!startOffset){startOffset=startContainer.getIndex();
startContainer=startContainer.getParent();
}else{if(startOffset>=startContainer.getLength()){startOffset=startContainer.getIndex()+1;
startContainer=startContainer.getParent();
}else{var nextText=startContainer.split(startOffset);
startOffset=startContainer.getIndex()+1;
startContainer=startContainer.getParent();
if(this.startContainer.equals(this.endContainer)){this.setEnd(nextText,this.endOffset-this.startOffset);
}else{if(startContainer.equals(this.endContainer)){this.endOffset+=1;
}}}}this.setStart(startContainer,startOffset);
if(collapsed){this.collapse(true);
return;
}}var endContainer=this.endContainer;
var endOffset=this.endOffset;
if(!(ignoreEnd||collapsed)&&endContainer&&endContainer.type==CKEDITOR.NODE_TEXT){if(!endOffset){endOffset=endContainer.getIndex();
endContainer=endContainer.getParent();
}else{if(endOffset>=endContainer.getLength()){endOffset=endContainer.getIndex()+1;
endContainer=endContainer.getParent();
}else{endContainer.split(endOffset);
endOffset=endContainer.getIndex()+1;
endContainer=endContainer.getParent();
}}this.setEnd(endContainer,endOffset);
}},enlarge:function(unit,excludeBrs){var leadingWhitespaceRegex=new RegExp(/[^\s\ufeff]/);
switch(unit){case CKEDITOR.ENLARGE_INLINE:var enlargeInlineOnly=1;
case CKEDITOR.ENLARGE_ELEMENT:if(this.collapsed){return;
}var commonAncestor=this.getCommonAncestor();
var boundary=this.root;
var startTop,endTop;
var enlargeable,sibling,commonReached;
var needsWhiteSpace=false;
var isWhiteSpace;
var siblingText;
var container=this.startContainer;
var offset=this.startOffset;
if(container.type==CKEDITOR.NODE_TEXT){if(offset){container=!CKEDITOR.tools.trim(container.substring(0,offset)).length&&container;
needsWhiteSpace=!!container;
}if(container){if(!(sibling=container.getPrevious())){enlargeable=container.getParent();
}}}else{if(offset){sibling=container.getChild(offset-1)||container.getLast();
}if(!sibling){enlargeable=container;
}}enlargeable=getValidEnlargeable(enlargeable);
while(enlargeable||sibling){if(enlargeable&&!sibling){if(!commonReached&&enlargeable.equals(commonAncestor)){commonReached=true;
}if(enlargeInlineOnly?enlargeable.isBlockBoundary():!boundary.contains(enlargeable)){break;
}if(!needsWhiteSpace||enlargeable.getComputedStyle("display")!="inline"){needsWhiteSpace=false;
if(commonReached){startTop=enlargeable;
}else{this.setStartBefore(enlargeable);
}}sibling=enlargeable.getPrevious();
}while(sibling){isWhiteSpace=false;
if(sibling.type==CKEDITOR.NODE_COMMENT){sibling=sibling.getPrevious();
continue;
}else{if(sibling.type==CKEDITOR.NODE_TEXT){siblingText=sibling.getText();
if(leadingWhitespaceRegex.test(siblingText)){sibling=null;
}isWhiteSpace=/[\s\ufeff]$/.test(siblingText);
}else{if((sibling.$.offsetWidth>0||excludeBrs&&sibling.is("br"))&&!sibling.data("cke-bookmark")){if(needsWhiteSpace&&CKEDITOR.dtd.$removeEmpty[sibling.getName()]){siblingText=sibling.getText();
if(leadingWhitespaceRegex.test(siblingText)){sibling=null;
}else{var allChildren=sibling.$.getElementsByTagName("*");
for(var i=0,child;
child=allChildren[i++];
){if(!CKEDITOR.dtd.$removeEmpty[child.nodeName.toLowerCase()]){sibling=null;
break;
}}}if(sibling){isWhiteSpace=!!siblingText.length;
}}else{sibling=null;
}}}}if(isWhiteSpace){if(needsWhiteSpace){if(commonReached){startTop=enlargeable;
}else{if(enlargeable){this.setStartBefore(enlargeable);
}}}else{needsWhiteSpace=true;
}}if(sibling){var next=sibling.getPrevious();
if(!enlargeable&&!next){enlargeable=sibling;
sibling=null;
break;
}sibling=next;
}else{enlargeable=null;
}}if(enlargeable){enlargeable=getValidEnlargeable(enlargeable.getParent());
}}container=this.endContainer;
offset=this.endOffset;
enlargeable=sibling=null;
commonReached=needsWhiteSpace=false;
function onlyWhiteSpaces(startContainer,startOffset){var walkerRange=new CKEDITOR.dom.range(boundary);
walkerRange.setStart(startContainer,startOffset);
walkerRange.setEndAt(boundary,CKEDITOR.POSITION_BEFORE_END);
var walker=new CKEDITOR.dom.walker(walkerRange),node;
walker.guard=function(node,movingOut){return !(node.type==CKEDITOR.NODE_ELEMENT&&node.isBlockBoundary());
};
while((node=walker.next())){if(node.type!=CKEDITOR.NODE_TEXT){return false;
}else{if(node!=startContainer){siblingText=node.getText();
}else{siblingText=node.substring(startOffset);
}if(leadingWhitespaceRegex.test(siblingText)){return false;
}}}return true;
}if(container.type==CKEDITOR.NODE_TEXT){if(CKEDITOR.tools.trim(container.substring(offset)).length){needsWhiteSpace=true;
}else{needsWhiteSpace=!container.getLength();
if(offset==container.getLength()){if(!(sibling=container.getNext())){enlargeable=container.getParent();
}}else{if(onlyWhiteSpaces(container,offset)){enlargeable=container.getParent();
}}}}else{sibling=container.getChild(offset);
if(!sibling){enlargeable=container;
}}while(enlargeable||sibling){if(enlargeable&&!sibling){if(!commonReached&&enlargeable.equals(commonAncestor)){commonReached=true;
}if(enlargeInlineOnly?enlargeable.isBlockBoundary():!boundary.contains(enlargeable)){break;
}if(!needsWhiteSpace||enlargeable.getComputedStyle("display")!="inline"){needsWhiteSpace=false;
if(commonReached){endTop=enlargeable;
}else{if(enlargeable){this.setEndAfter(enlargeable);
}}}sibling=enlargeable.getNext();
}while(sibling){isWhiteSpace=false;
if(sibling.type==CKEDITOR.NODE_TEXT){siblingText=sibling.getText();
if(!onlyWhiteSpaces(sibling,0)){sibling=null;
}isWhiteSpace=/^[\s\ufeff]/.test(siblingText);
}else{if(sibling.type==CKEDITOR.NODE_ELEMENT){if((sibling.$.offsetWidth>0||excludeBrs&&sibling.is("br"))&&!sibling.data("cke-bookmark")){if(needsWhiteSpace&&CKEDITOR.dtd.$removeEmpty[sibling.getName()]){siblingText=sibling.getText();
if(leadingWhitespaceRegex.test(siblingText)){sibling=null;
}else{allChildren=sibling.$.getElementsByTagName("*");
for(i=0;
child=allChildren[i++];
){if(!CKEDITOR.dtd.$removeEmpty[child.nodeName.toLowerCase()]){sibling=null;
break;
}}}if(sibling){isWhiteSpace=!!siblingText.length;
}}else{sibling=null;
}}}else{isWhiteSpace=1;
}}if(isWhiteSpace){if(needsWhiteSpace){if(commonReached){endTop=enlargeable;
}else{this.setEndAfter(enlargeable);
}}}if(sibling){next=sibling.getNext();
if(!enlargeable&&!next){enlargeable=sibling;
sibling=null;
break;
}sibling=next;
}else{enlargeable=null;
}}if(enlargeable){enlargeable=getValidEnlargeable(enlargeable.getParent());
}}if(startTop&&endTop){commonAncestor=startTop.contains(endTop)?endTop:startTop;
this.setStartBefore(commonAncestor);
this.setEndAfter(commonAncestor);
}break;
case CKEDITOR.ENLARGE_BLOCK_CONTENTS:case CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:var walkerRange=new CKEDITOR.dom.range(this.root);
boundary=this.root;
walkerRange.setStartAt(boundary,CKEDITOR.POSITION_AFTER_START);
walkerRange.setEnd(this.startContainer,this.startOffset);
var walker=new CKEDITOR.dom.walker(walkerRange),blockBoundary,tailBr,notBlockBoundary=CKEDITOR.dom.walker.blockBoundary((unit==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS)?{br:1}:null),inNonEditable=null,boundaryGuard=function(node){if(node.type==CKEDITOR.NODE_ELEMENT&&node.getAttribute("contenteditable")=="false"){if(inNonEditable){if(inNonEditable.equals(node)){inNonEditable=null;
return;
}}else{inNonEditable=node;
}}else{if(inNonEditable){return;
}}var retval=notBlockBoundary(node);
if(!retval){blockBoundary=node;
}return retval;
},tailBrGuard=function(node){var retval=boundaryGuard(node);
if(!retval&&node.is&&node.is("br")){tailBr=node;
}return retval;
};
walker.guard=boundaryGuard;
enlargeable=walker.lastBackward();
blockBoundary=blockBoundary||boundary;
this.setStartAt(blockBoundary,!blockBoundary.is("br")&&(!enlargeable&&this.checkStartOfBlock()||enlargeable&&blockBoundary.contains(enlargeable))?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_AFTER_END);
if(unit==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS){var theRange=this.clone();
walker=new CKEDITOR.dom.walker(theRange);
var whitespaces=CKEDITOR.dom.walker.whitespaces(),bookmark=CKEDITOR.dom.walker.bookmark();
walker.evaluator=function(node){return !whitespaces(node)&&!bookmark(node);
};
var previous=walker.previous();
if(previous&&previous.type==CKEDITOR.NODE_ELEMENT&&previous.is("br")){return;
}}walkerRange=this.clone();
walkerRange.collapse();
walkerRange.setEndAt(boundary,CKEDITOR.POSITION_BEFORE_END);
walker=new CKEDITOR.dom.walker(walkerRange);
walker.guard=(unit==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS)?tailBrGuard:boundaryGuard;
blockBoundary=inNonEditable=tailBr=null;
enlargeable=walker.lastForward();
blockBoundary=blockBoundary||boundary;
this.setEndAt(blockBoundary,(!enlargeable&&this.checkEndOfBlock()||enlargeable&&blockBoundary.contains(enlargeable))?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_BEFORE_START);
if(tailBr){this.setEndAfter(tailBr);
}}function getValidEnlargeable(enlargeable){return enlargeable&&enlargeable.type==CKEDITOR.NODE_ELEMENT&&enlargeable.hasAttribute("contenteditable")?null:enlargeable;
}},shrink:function(mode,selectContents,shrinkOnBlockBoundary){if(!this.collapsed){mode=mode||CKEDITOR.SHRINK_TEXT;
var walkerRange=this.clone();
var startContainer=this.startContainer,endContainer=this.endContainer,startOffset=this.startOffset,endOffset=this.endOffset,collapsed=this.collapsed;
var moveStart=1,moveEnd=1;
if(startContainer&&startContainer.type==CKEDITOR.NODE_TEXT){if(!startOffset){walkerRange.setStartBefore(startContainer);
}else{if(startOffset>=startContainer.getLength()){walkerRange.setStartAfter(startContainer);
}else{walkerRange.setStartBefore(startContainer);
moveStart=0;
}}}if(endContainer&&endContainer.type==CKEDITOR.NODE_TEXT){if(!endOffset){walkerRange.setEndBefore(endContainer);
}else{if(endOffset>=endContainer.getLength()){walkerRange.setEndAfter(endContainer);
}else{walkerRange.setEndAfter(endContainer);
moveEnd=0;
}}}var walker=new CKEDITOR.dom.walker(walkerRange),isBookmark=CKEDITOR.dom.walker.bookmark();
walker.evaluator=function(node){return node.type==(mode==CKEDITOR.SHRINK_ELEMENT?CKEDITOR.NODE_ELEMENT:CKEDITOR.NODE_TEXT);
};
var currentElement;
walker.guard=function(node,movingOut){if(isBookmark(node)){return true;
}if(mode==CKEDITOR.SHRINK_ELEMENT&&node.type==CKEDITOR.NODE_TEXT){return false;
}if(movingOut&&node.equals(currentElement)){return false;
}if(shrinkOnBlockBoundary===false&&node.type==CKEDITOR.NODE_ELEMENT&&node.isBlockBoundary()){return false;
}if(node.type==CKEDITOR.NODE_ELEMENT&&node.hasAttribute("contenteditable")){return false;
}if(!movingOut&&node.type==CKEDITOR.NODE_ELEMENT){currentElement=node;
}return true;
};
if(moveStart){var textStart=walker[mode==CKEDITOR.SHRINK_ELEMENT?"lastForward":"next"]();
textStart&&this.setStartAt(textStart,selectContents?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_BEFORE_START);
}if(moveEnd){walker.reset();
var textEnd=walker[mode==CKEDITOR.SHRINK_ELEMENT?"lastBackward":"previous"]();
textEnd&&this.setEndAt(textEnd,selectContents?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_AFTER_END);
}return !!(moveStart||moveEnd);
}},insertNode:function(node){this.optimizeBookmark();
this.trim(false,true);
var startContainer=this.startContainer;
var startOffset=this.startOffset;
var nextNode=startContainer.getChild(startOffset);
if(nextNode){node.insertBefore(nextNode);
}else{startContainer.append(node);
}if(node.getParent()&&node.getParent().equals(this.endContainer)){this.endOffset++;
}this.setStartBefore(node);
},moveToPosition:function(node,position){this.setStartAt(node,position);
this.collapse(true);
},moveToRange:function(range){this.setStart(range.startContainer,range.startOffset);
this.setEnd(range.endContainer,range.endOffset);
},selectNodeContents:function(node){this.setStart(node,0);
this.setEnd(node,node.type==CKEDITOR.NODE_TEXT?node.getLength():node.getChildCount());
},setStart:function(startNode,startOffset){if(startNode.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$empty[startNode.getName()]){startOffset=startNode.getIndex(),startNode=startNode.getParent();
}this.startContainer=startNode;
this.startOffset=startOffset;
if(!this.endContainer){this.endContainer=startNode;
this.endOffset=startOffset;
}updateCollapsed(this);
},setEnd:function(endNode,endOffset){if(endNode.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$empty[endNode.getName()]){endOffset=endNode.getIndex()+1,endNode=endNode.getParent();
}this.endContainer=endNode;
this.endOffset=endOffset;
if(!this.startContainer){this.startContainer=endNode;
this.startOffset=endOffset;
}updateCollapsed(this);
},setStartAfter:function(node){this.setStart(node.getParent(),node.getIndex()+1);
},setStartBefore:function(node){this.setStart(node.getParent(),node.getIndex());
},setEndAfter:function(node){this.setEnd(node.getParent(),node.getIndex()+1);
},setEndBefore:function(node){this.setEnd(node.getParent(),node.getIndex());
},setStartAt:function(node,position){switch(position){case CKEDITOR.POSITION_AFTER_START:this.setStart(node,0);
break;
case CKEDITOR.POSITION_BEFORE_END:if(node.type==CKEDITOR.NODE_TEXT){this.setStart(node,node.getLength());
}else{this.setStart(node,node.getChildCount());
}break;
case CKEDITOR.POSITION_BEFORE_START:this.setStartBefore(node);
break;
case CKEDITOR.POSITION_AFTER_END:this.setStartAfter(node);
}updateCollapsed(this);
},setEndAt:function(node,position){switch(position){case CKEDITOR.POSITION_AFTER_START:this.setEnd(node,0);
break;
case CKEDITOR.POSITION_BEFORE_END:if(node.type==CKEDITOR.NODE_TEXT){this.setEnd(node,node.getLength());
}else{this.setEnd(node,node.getChildCount());
}break;
case CKEDITOR.POSITION_BEFORE_START:this.setEndBefore(node);
break;
case CKEDITOR.POSITION_AFTER_END:this.setEndAfter(node);
}updateCollapsed(this);
},fixBlock:function(isStart,blockTag){var bookmark=this.createBookmark(),fixedBlock=this.document.createElement(blockTag);
this.collapse(isStart);
this.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);
this.extractContents().appendTo(fixedBlock);
fixedBlock.trim();
fixedBlock.appendBogus();
this.insertNode(fixedBlock);
this.moveToBookmark(bookmark);
return fixedBlock;
},splitBlock:function(blockTag){var startPath=new CKEDITOR.dom.elementPath(this.startContainer,this.root),endPath=new CKEDITOR.dom.elementPath(this.endContainer,this.root);
var startBlockLimit=startPath.blockLimit,endBlockLimit=endPath.blockLimit;
var startBlock=startPath.block,endBlock=endPath.block;
var elementPath=null;
if(!startBlockLimit.equals(endBlockLimit)){return null;
}if(blockTag!="br"){if(!startBlock){startBlock=this.fixBlock(true,blockTag);
endBlock=new CKEDITOR.dom.elementPath(this.endContainer,this.root).block;
}if(!endBlock){endBlock=this.fixBlock(false,blockTag);
}}var isStartOfBlock=startBlock&&this.checkStartOfBlock(),isEndOfBlock=endBlock&&this.checkEndOfBlock();
this.deleteContents();
if(startBlock&&startBlock.equals(endBlock)){if(isEndOfBlock){elementPath=new CKEDITOR.dom.elementPath(this.startContainer,this.root);
this.moveToPosition(endBlock,CKEDITOR.POSITION_AFTER_END);
endBlock=null;
}else{if(isStartOfBlock){elementPath=new CKEDITOR.dom.elementPath(this.startContainer,this.root);
this.moveToPosition(startBlock,CKEDITOR.POSITION_BEFORE_START);
startBlock=null;
}else{endBlock=this.splitElement(startBlock);
if(!startBlock.is("ul","ol")){startBlock.appendBogus();
}}}}return{previousBlock:startBlock,nextBlock:endBlock,wasStartOfBlock:isStartOfBlock,wasEndOfBlock:isEndOfBlock,elementPath:elementPath};
},splitElement:function(toSplit){if(!this.collapsed){return null;
}this.setEndAt(toSplit,CKEDITOR.POSITION_BEFORE_END);
var documentFragment=this.extractContents();
var clone=toSplit.clone(false);
documentFragment.appendTo(clone);
clone.insertAfter(toSplit);
this.moveToPosition(toSplit,CKEDITOR.POSITION_AFTER_END);
return clone;
},removeEmptyBlocksAtEnd:(function(){var whitespace=CKEDITOR.dom.walker.whitespaces(),bookmark=CKEDITOR.dom.walker.bookmark(false);
function childEval(parent){return function(node){if(whitespace(node)||bookmark(node)||node.type==CKEDITOR.NODE_ELEMENT&&node.isEmptyInlineRemoveable()){return false;
}else{if(parent.is("table")&&node.is("caption")){return false;
}}return true;
};
}return function(atEnd){var bm=this.createBookmark();
var path=this[atEnd?"endPath":"startPath"]();
var block=path.block||path.blockLimit,parent;
while(block&&!block.equals(path.root)&&!block.getFirst(childEval(block))){parent=block.getParent();
this[atEnd?"setEndAt":"setStartAt"](block,CKEDITOR.POSITION_AFTER_END);
block.remove(1);
block=parent;
}this.moveToBookmark(bm);
};
})(),startPath:function(){return new CKEDITOR.dom.elementPath(this.startContainer,this.root);
},endPath:function(){return new CKEDITOR.dom.elementPath(this.endContainer,this.root);
},checkBoundaryOfElement:function(element,checkType){var checkStart=(checkType==CKEDITOR.START);
var walkerRange=this.clone();
walkerRange.collapse(checkStart);
walkerRange[checkStart?"setStartAt":"setEndAt"](element,checkStart?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_BEFORE_END);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=elementBoundaryEval(checkStart);
return walker[checkStart?"checkBackward":"checkForward"]();
},checkStartOfBlock:function(){var startContainer=this.startContainer,startOffset=this.startOffset;
if(CKEDITOR.env.ie&&startOffset&&startContainer.type==CKEDITOR.NODE_TEXT){var textBefore=CKEDITOR.tools.ltrim(startContainer.substring(0,startOffset));
if(nbspRegExp.test(textBefore)){this.trim(0,1);
}}this.trim();
var path=new CKEDITOR.dom.elementPath(this.startContainer,this.root);
var walkerRange=this.clone();
walkerRange.collapse(true);
walkerRange.setStartAt(path.block||path.blockLimit,CKEDITOR.POSITION_AFTER_START);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=getCheckStartEndBlockEvalFunction();
return walker.checkBackward();
},checkEndOfBlock:function(){var endContainer=this.endContainer,endOffset=this.endOffset;
if(CKEDITOR.env.ie&&endContainer.type==CKEDITOR.NODE_TEXT){var textAfter=CKEDITOR.tools.rtrim(endContainer.substring(endOffset));
if(nbspRegExp.test(textAfter)){this.trim(1,0);
}}this.trim();
var path=new CKEDITOR.dom.elementPath(this.endContainer,this.root);
var walkerRange=this.clone();
walkerRange.collapse(false);
walkerRange.setEndAt(path.block||path.blockLimit,CKEDITOR.POSITION_BEFORE_END);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=getCheckStartEndBlockEvalFunction();
return walker.checkForward();
},getPreviousNode:function(evaluator,guard,boundary){var walkerRange=this.clone();
walkerRange.collapse(1);
walkerRange.setStartAt(boundary||this.root,CKEDITOR.POSITION_AFTER_START);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=evaluator;
walker.guard=guard;
return walker.previous();
},getNextNode:function(evaluator,guard,boundary){var walkerRange=this.clone();
walkerRange.collapse();
walkerRange.setEndAt(boundary||this.root,CKEDITOR.POSITION_BEFORE_END);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=evaluator;
walker.guard=guard;
return walker.next();
},checkReadOnly:(function(){function checkNodesEditable(node,anotherEnd){while(node){if(node.type==CKEDITOR.NODE_ELEMENT){if(node.getAttribute("contentEditable")=="false"&&!node.data("cke-editable")){return 0;
}else{if(node.is("html")||node.getAttribute("contentEditable")=="true"&&(node.contains(anotherEnd)||node.equals(anotherEnd))){break;
}}}node=node.getParent();
}return 1;
}return function(){var startNode=this.startContainer,endNode=this.endContainer;
return !(checkNodesEditable(startNode,endNode)&&checkNodesEditable(endNode,startNode));
};
})(),moveToElementEditablePosition:function(el,isMoveToEnd){function nextDFS(node,childOnly){var next;
if(node.type==CKEDITOR.NODE_ELEMENT&&node.isEditable(false)){next=node[isMoveToEnd?"getLast":"getFirst"](notIgnoredEval);
}if(!childOnly&&!next){next=node[isMoveToEnd?"getPrevious":"getNext"](notIgnoredEval);
}return next;
}if(el.type==CKEDITOR.NODE_ELEMENT&&!el.isEditable(false)){this.moveToPosition(el,isMoveToEnd?CKEDITOR.POSITION_AFTER_END:CKEDITOR.POSITION_BEFORE_START);
return true;
}var found=0;
while(el){if(el.type==CKEDITOR.NODE_TEXT){if(isMoveToEnd&&this.endContainer&&this.checkEndOfBlock()&&nbspRegExp.test(el.getText())){this.moveToPosition(el,CKEDITOR.POSITION_BEFORE_START);
}else{this.moveToPosition(el,isMoveToEnd?CKEDITOR.POSITION_AFTER_END:CKEDITOR.POSITION_BEFORE_START);
}found=1;
break;
}if(el.type==CKEDITOR.NODE_ELEMENT){if(el.isEditable()){this.moveToPosition(el,isMoveToEnd?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_AFTER_START);
found=1;
}else{if(isMoveToEnd&&el.is("br")&&this.endContainer&&this.checkEndOfBlock()){this.moveToPosition(el,CKEDITOR.POSITION_BEFORE_START);
}else{if(el.getAttribute("contenteditable")=="false"&&el.is(CKEDITOR.dtd.$block)){this.setStartBefore(el);
this.setEndAfter(el);
return true;
}}}}el=nextDFS(el,found);
}return !!found;
},moveToClosestEditablePosition:function(element,isMoveToEnd){var range=new CKEDITOR.dom.range(this.root),found=0,sibling,positions=[CKEDITOR.POSITION_AFTER_END,CKEDITOR.POSITION_BEFORE_START];
range.moveToPosition(element,positions[isMoveToEnd?0:1]);
if(!element.is(CKEDITOR.dtd.$block)){found=1;
}else{sibling=range[isMoveToEnd?"getNextEditableNode":"getPreviousEditableNode"]();
if(sibling){found=1;
if(sibling.type==CKEDITOR.NODE_ELEMENT&&sibling.is(CKEDITOR.dtd.$block)&&sibling.getAttribute("contenteditable")=="false"){range.setStartAt(sibling,CKEDITOR.POSITION_BEFORE_START);
range.setEndAt(sibling,CKEDITOR.POSITION_AFTER_END);
}else{range.moveToPosition(sibling,positions[isMoveToEnd?1:0]);
}}}if(found){this.moveToRange(range);
}return !!found;
},moveToElementEditStart:function(target){return this.moveToElementEditablePosition(target);
},moveToElementEditEnd:function(target){return this.moveToElementEditablePosition(target,true);
},getEnclosedNode:function(){var walkerRange=this.clone();
if(!this.startContainer){DocHandleError("range.prototype.getEnclosedNode - Ranges does not have a startContainer","DynDocCKEditor");
return null;
}walkerRange.optimize();
if(walkerRange.startContainer.type!=CKEDITOR.NODE_ELEMENT||walkerRange.endContainer.type!=CKEDITOR.NODE_ELEMENT){return null;
}var walker=new CKEDITOR.dom.walker(walkerRange),isNotBookmarks=CKEDITOR.dom.walker.bookmark(false,true),isNotWhitespaces=CKEDITOR.dom.walker.whitespaces(true);
walker.evaluator=function(node){return isNotWhitespaces(node)&&isNotBookmarks(node);
};
var node=walker.next();
walker.reset();
return node&&node.equals(walker.previous())?node:null;
},getTouchedStartNode:function(){var container=this.startContainer;
if(this.collapsed||container.type!=CKEDITOR.NODE_ELEMENT){return container;
}return container.getChild(this.startOffset)||container;
},getTouchedEndNode:function(){var container=this.endContainer;
if(this.collapsed||container.type!=CKEDITOR.NODE_ELEMENT){return container;
}return container.getChild(this.endOffset-1)||container;
},getNextEditableNode:getNextEditableNode(),getPreviousEditableNode:getNextEditableNode(1),scrollIntoView:function(){var reference=new CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>",this.document),afterCaretNode,startContainerText,isStartText;
var range=this.clone();
range.optimize();
if(isStartText=range.startContainer.type==CKEDITOR.NODE_TEXT){startContainerText=range.startContainer.getText();
afterCaretNode=range.startContainer.split(range.startOffset);
reference.insertAfter(range.startContainer);
}else{range.insertNode(reference);
}reference.scrollIntoView();
if(isStartText){range.startContainer.setText(startContainerText);
afterCaretNode.remove();
}reference.remove();
}};
})();
CKEDITOR.POSITION_AFTER_START=1;
CKEDITOR.POSITION_BEFORE_END=2;
CKEDITOR.POSITION_BEFORE_START=3;
CKEDITOR.POSITION_AFTER_END=4;
CKEDITOR.ENLARGE_ELEMENT=1;
CKEDITOR.ENLARGE_BLOCK_CONTENTS=2;
CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS=3;
CKEDITOR.ENLARGE_INLINE=4;
CKEDITOR.START=1;
CKEDITOR.END=2;
CKEDITOR.SHRINK_ELEMENT=1;
CKEDITOR.SHRINK_TEXT=2;
(function(){function iterator(range){if(arguments.length<1){return;
}this.range=range;
this.forceBrBreak=0;
this.enlargeBr=1;
this.enforceRealBlocks=0;
this._||(this._={});
}var beginWhitespaceRegex=/^[\r\n\t ]+$/,bookmarkGuard=CKEDITOR.dom.walker.bookmark(false,true),whitespacesGuard=CKEDITOR.dom.walker.whitespaces(true),skipGuard=function(node){return bookmarkGuard(node)&&whitespacesGuard(node);
};
function getNextSourceNode(node,startFromSibling,lastNode){var next=node.getNextSourceNode(startFromSibling,null,lastNode);
while(!bookmarkGuard(next)){next=next.getNextSourceNode(startFromSibling,null,lastNode);
}return next;
}iterator.prototype={getNextParagraph:function(blockTag){blockTag=blockTag||"p";
if(!CKEDITOR.dtd[this.range.root.getName()][blockTag]){return null;
}var block;
var range;
var isLast;
var touchPre;
var removePreviousBr,removeLastBr;
if(!this._.started){range=this.range.clone();
range.shrink(CKEDITOR.NODE_ELEMENT,true);
touchPre=range.endContainer.hasAscendant("pre",true)||range.startContainer.hasAscendant("pre",true);
range.enlarge(this.forceBrBreak&&!touchPre||!this.enlargeBr?CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:CKEDITOR.ENLARGE_BLOCK_CONTENTS);
if(!range.collapsed){var walker=new CKEDITOR.dom.walker(range.clone()),ignoreBookmarkTextEvaluator=CKEDITOR.dom.walker.bookmark(true,true);
walker.evaluator=ignoreBookmarkTextEvaluator;
this._.nextNode=walker.next();
walker=new CKEDITOR.dom.walker(range.clone());
walker.evaluator=ignoreBookmarkTextEvaluator;
var lastNode=walker.previous();
this._.lastNode=lastNode.getNextSourceNode(true);
if(this._.lastNode&&this._.lastNode.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.trim(this._.lastNode.getText())&&this._.lastNode.getParent().isBlockBoundary()){var testRange=this.range.clone();
testRange.moveToPosition(this._.lastNode,CKEDITOR.POSITION_AFTER_END);
if(testRange.checkEndOfBlock()){var path=new CKEDITOR.dom.elementPath(testRange.endContainer,testRange.root);
var lastBlock=path.block||path.blockLimit;
this._.lastNode=lastBlock.getNextSourceNode(true);
}}if(!this._.lastNode){this._.lastNode=this._.docEndMarker=range.document.createText("");
this._.lastNode.insertAfter(lastNode);
}range=null;
}this._.started=1;
}var currentNode=this._.nextNode;
lastNode=this._.lastNode;
this._.nextNode=null;
while(currentNode){var closeRange=0,parentPre=currentNode.hasAscendant("pre");
var includeNode=(currentNode.type!=CKEDITOR.NODE_ELEMENT),continueFromSibling=0;
if(!includeNode){var nodeName=currentNode.getName();
if(currentNode.isBlockBoundary(this.forceBrBreak&&!parentPre&&{br:1})){if(nodeName=="br"){includeNode=1;
}else{if(!range&&!currentNode.getChildCount()&&nodeName!="hr"){block=currentNode;
isLast=currentNode.equals(lastNode);
break;
}}if(range){range.setEndAt(currentNode,CKEDITOR.POSITION_BEFORE_START);
if(nodeName!="br"){this._.nextNode=currentNode;
}}closeRange=1;
}else{if(currentNode.getFirst()){if(!range){range=this.range.clone();
range.setStartAt(currentNode,CKEDITOR.POSITION_BEFORE_START);
}currentNode=currentNode.getFirst();
continue;
}includeNode=1;
}}else{if(currentNode.type==CKEDITOR.NODE_TEXT){if(beginWhitespaceRegex.test(currentNode.getText())){includeNode=0;
}}}if(includeNode&&!range){range=this.range.clone();
range.setStartAt(currentNode,CKEDITOR.POSITION_BEFORE_START);
}isLast=((!closeRange||includeNode)&&currentNode.equals(lastNode));
if(range&&!closeRange){while(!currentNode.getNext(skipGuard)&&!isLast){var parentNode=currentNode.getParent();
if(parentNode.isBlockBoundary(this.forceBrBreak&&!parentPre&&{br:1})){closeRange=1;
includeNode=0;
isLast=isLast||(parentNode.equals(lastNode));
range.setEndAt(parentNode,CKEDITOR.POSITION_BEFORE_END);
break;
}currentNode=parentNode;
includeNode=1;
isLast=(currentNode.equals(lastNode));
continueFromSibling=1;
}}if(includeNode){range.setEndAt(currentNode,CKEDITOR.POSITION_AFTER_END);
}currentNode=getNextSourceNode(currentNode,continueFromSibling,lastNode);
isLast=!currentNode;
if(isLast||(closeRange&&range)){break;
}}if(!block){if(!range){this._.docEndMarker&&this._.docEndMarker.remove();
this._.nextNode=null;
return null;
}var startPath=new CKEDITOR.dom.elementPath(range.startContainer,range.root);
var startBlockLimit=startPath.blockLimit,checkLimits={div:1,th:1,td:1};
block=startPath.block;
if(!block&&startBlockLimit&&!this.enforceRealBlocks&&checkLimits[startBlockLimit.getName()]&&range.checkStartOfBlock()&&range.checkEndOfBlock()&&!startBlockLimit.equals(range.root)){block=startBlockLimit;
}else{if(!block||(this.enforceRealBlocks&&block.getName()=="li")){block=this.range.document.createElement(blockTag);
range.extractContents().appendTo(block);
block.trim();
range.insertNode(block);
removePreviousBr=removeLastBr=true;
}else{if(block.getName()!="li"){if(!range.checkStartOfBlock()||!range.checkEndOfBlock()){block=block.clone(false);
range.extractContents().appendTo(block);
block.trim();
var splitInfo=range.splitBlock();
if(splitInfo.previousBlock){splitInfo.previousBlock.addClass(g_sCLASS_TEXT_WRAPPABLE);
}if(splitInfo.nextBlock){splitInfo.nextBlock.addClass(g_sCLASS_TEXT_WRAPPABLE);
}removePreviousBr=!splitInfo.wasStartOfBlock;
removeLastBr=!splitInfo.wasEndOfBlock;
range.insertNode(block);
}}else{if(!isLast){this._.nextNode=(block.equals(lastNode)?null:getNextSourceNode(range.getBoundaryNodes().endNode,1,lastNode));
}}}}}if(removePreviousBr){var previousSibling=block.getPrevious();
if(previousSibling&&previousSibling.type==CKEDITOR.NODE_ELEMENT){if(previousSibling.getName()=="br"){previousSibling.remove();
}else{if(previousSibling.getLast()&&previousSibling.getLast().$.nodeName.toLowerCase()=="br"){previousSibling.getLast().remove();
}}}}if(removeLastBr){var lastChild=block.getLast();
if(lastChild&&lastChild.type==CKEDITOR.NODE_ELEMENT&&lastChild.getName()=="br"){if(CKEDITOR.env.ie||lastChild.getPrevious(bookmarkGuard)||lastChild.getNext(bookmarkGuard)){lastChild.remove();
}}}if(!this._.nextNode){this._.nextNode=(isLast||block.equals(lastNode)||!lastNode)?null:getNextSourceNode(block,1,lastNode);
}return block;
}};
CKEDITOR.dom.range.prototype.createIterator=function(){return new iterator(this);
};
})();
CKEDITOR.command=function(editor,commandDefinition){this.uiItems=[];
this.exec=function(data){if(this.state==CKEDITOR.TRISTATE_DISABLED||!this.checkAllowed()){return false;
}if(this.editorFocus){editor.focus();
}if(this.fire("exec")===false){return true;
}return(commandDefinition.exec.call(this,editor,data)!==false);
};
this.execWithReturnValue=function(data){if(this.state==CKEDITOR.TRISTATE_DISABLED){return false;
}if(this.editorFocus){editor.focus();
}return commandDefinition.exec.call(this,editor,data);
};
this.refresh=function(editor,path){if(!this.readOnly&&editor.readOnly){return true;
}if(this.context&&!path.isContextFor(this.context)){this.disable();
return true;
}this.enable();
if(this.fire("refresh",{editor:editor,path:path})===false){return true;
}return(commandDefinition.refresh&&commandDefinition.refresh.apply(this,arguments)!==false);
};
var allowed;
this.checkAllowed=function(){if(typeof allowed=="boolean"){return allowed;
}return allowed=editor.filter.checkFeature(this);
};
CKEDITOR.tools.extend(this,commandDefinition,{modes:{wysiwyg:1},editorFocus:1,contextSensitive:!!commandDefinition.context,state:CKEDITOR.TRISTATE_DISABLED});
CKEDITOR.event.call(this);
};
CKEDITOR.command.prototype={enable:function(){if(this.state==CKEDITOR.TRISTATE_DISABLED&&this.checkAllowed()){this.setState((!this.preserveState||(typeof this.previousState=="undefined"))?CKEDITOR.TRISTATE_OFF:this.previousState);
}},disable:function(){this.setState(CKEDITOR.TRISTATE_DISABLED);
},setState:function(newState){if(this.state==newState||!this.checkAllowed()){return false;
}this.previousState=this.state;
this.state=newState;
this.fire("state");
return true;
},toggleState:function(){if(this.state==CKEDITOR.TRISTATE_OFF){this.setState(CKEDITOR.TRISTATE_ON);
}else{if(this.state==CKEDITOR.TRISTATE_ON){this.setState(CKEDITOR.TRISTATE_OFF);
}}}};
CKEDITOR.event.implementOn(CKEDITOR.command.prototype);
CKEDITOR.ENTER_P=1;
CKEDITOR.ENTER_BR=2;
CKEDITOR.ENTER_DIV=3;
CKEDITOR.config={customConfig:"config.js",autoUpdateElement:true,language:"",defaultLanguage:"en",contentsLangDirection:"",enterMode:CKEDITOR.ENTER_P,forceEnterMode:false,shiftEnterMode:CKEDITOR.ENTER_BR,docType:"<!DOCTYPE html>",bodyId:"",bodyClass:"",fullPage:false,height:200,plugins:"",extraPlugins:"",removePlugins:"",protectedSource:[],tabIndex:0,width:"",baseFloatZIndex:10000,blockedKeystrokes:[CKEDITOR.CTRL+66,CKEDITOR.CTRL+73,CKEDITOR.CTRL+85]};
CKEDITOR.editorConfig=function(config){if(!CKEDITOR.MPAGES){CKEDITOR.MPAGES={};
}var pluginList=["dialogui","dialog","button","panelbutton","panel","floatpanel","menu","contextmenu","toolbar","enterkey","listblock","richcombo","format","htmlwriter","wysiwygarea","undo","onchange","divarea","xml","menubutton","entities","popup"];
var extraPlugins=[];
if(CERN_Platform.inMillenniumContext()){pluginList.push("font","clipboard","basicstyles","cerndyndocjustify","colorbutton","colordialog");
extraPlugins.push("mpagesf3");
}var ieVersion=DDCOMMON.getIeVersionMajor();
if(ieVersion&&ieVersion<9){extraPlugins.push("cernbackspace");
}extraPlugins.push("cerndropdisable","cernselectionfix","cernunformat","cerngetxhtml","autosave","cerndirty","cernundo","mpagedirtyfilters","cerngrow","cernzebrastripe");
if(config.structuredDocumentationEnabled){extraPlugins.push("cernstructure");
}if(!CKEDITOR.DocUtilsHelper){CKEDITOR.DocUtilsHelper=CERN_Platform.getDiscernObject("DOCUTILSHELPER");
}if(!CKEDITOR.AutoTextHelper){CKEDITOR.AutoTextHelper=CERN_Platform.getDiscernObject("AUTOTEXTHELPER");
}if(CKEDITOR.AutoTextHelper&&CKEDITOR.DocUtilsHelper){extraPlugins.push("cernautotext");
}if(!CKEDITOR.SpellCheckHelper){CKEDITOR.SpellCheckHelper=CERN_Platform.getDiscernObject("SPELLCHECKHELPER");
}if(CKEDITOR.SpellCheckHelper&&CKEDITOR.DocUtilsHelper){extraPlugins.push("cernscayt");
}if(config.emrEnabled&&CKEDITOR.DocUtilsHelper){extraPlugins.push("cernrefresh");
}if(config.hoverEnabled){extraPlugins.push("cernhover");
}if(!CKEDITOR.ClipboardHelper){CKEDITOR.ClipboardHelper=CERN_Platform.getDiscernObject("CLIPBOARDHELPER");
}config.contentsCss="";
config.emitValidXhtml=true;
config.removePlugins="blockquote,div,elementspath,fakeobjects,forms,horizontalrule,iframe,image,link,newpage,pagebreak,pastefromword,pastetext,preview,print,removeformat,save,showblocks,showborders,specialchar,tab,table,tabletools,templates,wsc";
config.plugins=pluginList.join(",");
config.extraPlugins=extraPlugins.join(",");
config.skin="kama";
config.enterMode=CKEDITOR.ENTER_BR;
config.scayt_maxSuggestions=5;
config.startupFocus=false;
config.allowedContent=true;
config.colorButton_enableMore=false;
config.undoStackSize=30;
config.menu_groups="clipboard";
config.font_names="Arial;Calibri;Comic Sans MS;Courier New;Georgia;Lucida Sans Unicode;Tahoma;Times New Roman;Trebuchet MS;Verdana;Willow";
config.fontSize_sizes="8/8pt;9/9pt;10/10pt;11/11pt;12/12pt;14/14pt;16/16pt;18/18pt;20/20pt;22/22pt;24/24pt;26/26pt;28/28pt;36/36pt;48/48pt;72/72pt";
config.isStandaloneSection=true;
config.toolbar=[];
var aryToolbar=[];
aryToolbar.push("Font","FontSize","-","Cut","Copy","Paste","-","Bold","Italic","Underline","-","TextColor","-","JustifyLeft","JustifyCenter","JustifyRight","JustifyBlock");
if(CKEDITOR.AutoTextHelper&&CKEDITOR.AutoTextHelper.IsAutoTextEnabled()==1){aryToolbar.push("-");
aryToolbar.push("ManageAutoText");
}config.toolbar.push(aryToolbar);
};
(function(){var DTD=CKEDITOR.dtd,copy=CKEDITOR.tools.copy,trim=CKEDITOR.tools.trim,TEST_VALUE="cke-test";
CKEDITOR.filter=function(editorOrRules){this.allowedContent=[];
this.disabled=false;
this.editor=null;
this.enterMode=CKEDITOR.ENTER_P;
this._={rules:{},transformations:{},cachedTests:{}};
if(editorOrRules instanceof CKEDITOR.editor){var editor=this.editor=editorOrRules;
this.customConfig=true;
var allowedContent=editor.config.allowedContent,enterMode;
if(allowedContent===true){this.disabled=true;
return;
}if(!allowedContent){this.customConfig=false;
}this.enterMode=enterMode=(editor.blockless?CKEDITOR.ENTER_BR:editor.config.enterMode);
this.allow("br "+(enterMode==CKEDITOR.ENTER_P?"p":enterMode==CKEDITOR.ENTER_DIV?"div":""),"default",1);
this.allow(allowedContent,"config",1);
this.allow(editor.config.extraAllowedContent,"extra",1);
this._.toHtmlListener=editor.on("toHtml",function(evt){if(this.applyTo(evt.data.dataValue,true,evt.data.dontFilter)){editor.fire("dataFiltered");
}},this,null,6);
this._.toDataFormatListener=editor.on("toDataFormat",function(evt){this.applyTo(evt.data.dataValue,false,true);
},this,null,11);
}else{this.customConfig=false;
this.allow(editorOrRules,"default",1);
}};
CKEDITOR.filter.prototype={allow:function(newRules,featureName,overrideCustom){if(this.disabled){return false;
}if(this.customConfig&&!overrideCustom){return false;
}if(!newRules){return false;
}this._.cachedChecks={};
var i,ret;
if(typeof newRules=="string"){newRules=parseRulesString(newRules);
}else{if(newRules instanceof CKEDITOR.style){newRules=convertStyleToRules(newRules);
}else{if(CKEDITOR.tools.isArray(newRules)){for(i=0;
i<newRules.length;
++i){ret=this.allow(newRules[i],featureName,overrideCustom);
}return ret;
}}}var groupName,rule,rulesToOptimize=[];
for(groupName in newRules){rule=newRules[groupName];
if(typeof rule=="boolean"){rule={};
}else{if(typeof rule=="function"){rule={match:rule};
}else{rule=copy(rule);
}}if(groupName.charAt(0)!="$"){rule.elements=groupName;
}if(featureName){rule.featureName=featureName.toLowerCase();
}standardizeRule(rule);
this.allowedContent.push(rule);
rulesToOptimize.push(rule);
}optimizeRules(this._.rules,rulesToOptimize);
return true;
},applyTo:function(fragment,toHtml,transformOnly){var toBeRemoved=[],rules=!transformOnly&&this._.rules,transformations=this._.transformations,filterFn=getFilterFunction(this),protectedRegexs=this.editor&&this.editor.config.protectedSource,isModified=false;
fragment.forEach(function(el){if(el.type==CKEDITOR.NODE_ELEMENT){if(filterFn(el,rules,transformations,toBeRemoved,toHtml)){isModified=true;
}}else{if(el.type==CKEDITOR.NODE_COMMENT&&el.value.match(/^\{cke_protected\}(?!\{C\})/)){if(!filterProtectedElement(el,protectedRegexs,filterFn,rules,transformations,toHtml)){toBeRemoved.push(el);
}}}},null,true);
if(toBeRemoved.length){isModified=true;
}var node,element,check,toBeChecked=[],enterTag=["p","br","div"][this.enterMode-1];
while((node=toBeRemoved.pop())){if(node.type==CKEDITOR.NODE_ELEMENT){removeElement(node,enterTag,toBeChecked);
}else{node.remove();
}}while((check=toBeChecked.pop())){element=check.el;
if(!element.parent){continue;
}switch(check.check){case"it":if(DTD.$removeEmpty[element.name]&&!element.children.length){removeElement(element,enterTag,toBeChecked);
}else{if(!validateElement(element)){removeElement(element,enterTag,toBeChecked);
}}break;
case"el-up":if(element.parent.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&!DTD[element.parent.name][element.name]){removeElement(element,enterTag,toBeChecked);
}break;
case"parent-down":if(element.parent.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&!DTD[element.parent.name][element.name]){removeElement(element.parent,enterTag,toBeChecked);
}break;
}}return isModified;
},checkFeature:function(feature){if(this.disabled){return true;
}if(!feature){return true;
}if(feature.toFeature){feature=feature.toFeature(this.editor);
}return !feature.requiredContent||this.check(feature.requiredContent);
},disable:function(){this.disabled=true;
if(this._.toHtmlListener){this._.toHtmlListener.removeListener();
}if(this._.toDataFormatListener){this._.toDataFormatListener.removeListener();
}},addContentForms:function(forms){if(this.disabled){return;
}if(!forms){return;
}var i,form,transfGroups=[],preferredForm;
for(i=0;
i<forms.length&&!preferredForm;
++i){form=forms[i];
if((typeof form=="string"||form instanceof CKEDITOR.style)&&this.check(form)){preferredForm=form;
}}if(!preferredForm){return;
}for(i=0;
i<forms.length;
++i){transfGroups.push(getContentFormTransformationGroup(forms[i],preferredForm));
}this.addTransformations(transfGroups);
},addFeature:function(feature){if(this.disabled){return true;
}if(!feature){return true;
}if(feature.toFeature){feature=feature.toFeature(this.editor);
}this.allow(feature.allowedContent,feature.name);
this.addTransformations(feature.contentTransformations);
this.addContentForms(feature.contentForms);
if(this.customConfig&&feature.requiredContent){return this.check(feature.requiredContent);
}return true;
},addTransformations:function(transformations){if(this.disabled){return;
}if(!transformations){return;
}var optimized=this._.transformations,group,i;
for(i=0;
i<transformations.length;
++i){group=optimizeTransformationsGroup(transformations[i]);
if(!optimized[group.name]){optimized[group.name]=[];
}optimized[group.name].push(group.rules);
}},check:function(test,applyTransformations,strictCheck){if(this.disabled){return true;
}if(CKEDITOR.tools.isArray(test)){for(var i=test.length;
i--;
){if(this.check(test[i],applyTransformations,strictCheck)){return true;
}}return false;
}var element,result,cacheKey;
if(typeof test=="string"){cacheKey=test+"<"+(applyTransformations===false?"0":"1")+(strictCheck?"1":"0")+">";
if(cacheKey in this._.cachedChecks){return this._.cachedChecks[cacheKey];
}element=mockElementFromString(test);
}else{element=mockElementFromStyle(test);
}var clone=CKEDITOR.tools.clone(element),toBeRemoved=[],transformations,i;
if(applyTransformations!==false&&(transformations=this._.transformations[element.name])){for(i=0;
i<transformations.length;
++i){applyTransformationsGroup(this,element,transformations[i]);
}updateAttributes(element);
}getFilterFunction(this)(clone,this._.rules,applyTransformations===false?false:this._.transformations,toBeRemoved,false,!strictCheck,!strictCheck);
if(toBeRemoved.length>0){result=false;
}else{if(!CKEDITOR.tools.objectCompare(element.attributes,clone.attributes,true)){result=false;
}else{result=true;
}}if(typeof test=="string"){this._.cachedChecks[cacheKey]=result;
}return result;
}};
function applyRule(rule,element,status,isSpecific,skipRequired){var name=element.name;
if(!isSpecific&&typeof rule.elements=="function"&&!rule.elements(name)){return;
}if(rule.match){if(!rule.match(element)){return;
}}if(!skipRequired&&!hasAllRequired(rule,element)){return;
}if(!rule.propertiesOnly){status.valid=true;
}if(!status.allAttributes){status.allAttributes=applyRuleToHash(rule.attributes,element.attributes,status.validAttributes);
}if(!status.allStyles){status.allStyles=applyRuleToHash(rule.styles,element.styles,status.validStyles);
}if(!status.allClasses){status.allClasses=applyRuleToArray(rule.classes,element.classes,status.validClasses);
}}function applyRuleToArray(itemsRule,items,validItems){if(!itemsRule){return false;
}if(itemsRule===true){return true;
}for(var i=0,l=items.length,item;
i<l;
++i){item=items[i];
if(!validItems[item]){validItems[item]=itemsRule(item);
}}return false;
}function applyRuleToHash(itemsRule,items,validItems){if(!itemsRule){return false;
}if(itemsRule===true){return true;
}for(var name in items){if(!validItems[name]){validItems[name]=itemsRule(name,items[name]);
}}return false;
}function convertStyleToRules(style){var styleDef=style.getDefinition(),rules={},rule,attrs=styleDef.attributes;
rules[styleDef.element]=rule={styles:styleDef.styles,requiredStyles:styleDef.styles&&CKEDITOR.tools.objectKeys(styleDef.styles)};
if(attrs){attrs=copy(attrs);
rule.classes=attrs["class"]?attrs["class"].split(/\s+/):null;
rule.requiredClasses=rule.classes;
delete attrs["class"];
rule.attributes=attrs;
rule.requiredAttributes=attrs&&CKEDITOR.tools.objectKeys(attrs);
}return rules;
}function convertValidatorToHash(validator,delimiter){if(!validator){return false;
}if(validator===true){return validator;
}if(typeof validator=="string"){validator=trim(validator);
if(validator=="*"){return true;
}else{return CKEDITOR.tools.convertArrayToObject(validator.split(delimiter));
}}else{if(CKEDITOR.tools.isArray(validator)){if(validator.length){return CKEDITOR.tools.convertArrayToObject(validator);
}else{return false;
}}else{var obj={},len=0;
for(var i in validator){obj[i]=validator[i];
len++;
}return len?obj:false;
}}}function extractRequired(required,all){var unbang=[],empty=true,i;
if(required){empty=false;
}else{required={};
}for(i in all){if(i.charAt(0)=="!"){i=i.slice(1);
unbang.push(i);
required[i]=true;
empty=false;
}}while((i=unbang.pop())){all[i]=all["!"+i];
delete all["!"+i];
}return empty?false:required;
}function filterProtectedElement(comment,protectedRegexs,filterFn,rules,transformations,toHtml){var source=decodeURIComponent(comment.value.replace(/^\{cke_protected\}/,"")),protectedFrag,toBeRemoved=[],node,i,match;
if(protectedRegexs){for(i=0;
i<protectedRegexs.length;
++i){if((match=source.match(protectedRegexs[i]))&&match[0].length==source.length){return true;
}}}protectedFrag=CKEDITOR.htmlParser.fragment.fromHtml(source);
if(protectedFrag.children.length==1&&(node=protectedFrag.children[0]).type==CKEDITOR.NODE_ELEMENT){filterFn(node,rules,transformations,toBeRemoved,toHtml);
}return !toBeRemoved.length;
}function getFilterFunction(that){if(that._.filterFunction){return that._.filterFunction;
}var unprotectElementsNamesRegexp=/^cke:(object|embed|param)$/,protectElementsNamesRegexp=/^(object|embed|param)$/;
return that._.filterFunction=function(element,optimizedRules,transformations,toBeRemoved,toHtml,skipRequired,skipFinalValidation){var name=element.name,i,l,trans,isModified=false;
if(toHtml){element.name=name=name.replace(unprotectElementsNamesRegexp,"$1");
}if((transformations=transformations&&transformations[name])){populateProperties(element);
for(i=0;
i<transformations.length;
++i){applyTransformationsGroup(that,element,transformations[i]);
}updateAttributes(element);
}if(optimizedRules){name=element.name;
var rules=optimizedRules.elements[name],genericRules=optimizedRules.generic,status={valid:false,validAttributes:{},validClasses:{},validStyles:{},allAttributes:false,allClasses:false,allStyles:false};
if(!rules&&!genericRules){toBeRemoved.push(element);
return true;
}populateProperties(element);
if(rules){for(i=0,l=rules.length;
i<l;
++i){applyRule(rules[i],element,status,true,skipRequired);
}}if(genericRules){for(i=0,l=genericRules.length;
i<l;
++i){applyRule(genericRules[i],element,status,false,skipRequired);
}}if(!status.valid){toBeRemoved.push(element);
return true;
}if(updateElement(element,status)){isModified=true;
}if(!skipFinalValidation&&!validateElement(element)){toBeRemoved.push(element);
return true;
}}if(toHtml){element.name=element.name.replace(protectElementsNamesRegexp,"cke:$1");
}return isModified;
};
}function hasAllRequired(rule,element){if(rule.nothingRequired){return true;
}var i,reqs,existing;
if((reqs=rule.requiredClasses)){existing=element.classes;
for(i=0;
i<reqs.length;
++i){if(CKEDITOR.tools.indexOf(existing,reqs[i])==-1){return false;
}}}return hasAllRequiredInHash(element.styles,rule.requiredStyles)&&hasAllRequiredInHash(element.attributes,rule.requiredAttributes);
}function hasAllRequiredInHash(existing,required){if(!required){return true;
}for(var i=0;
i<required.length;
++i){if(!(required[i] in existing)){return false;
}}return true;
}function mockElementFromString(str){var element=parseRulesString(str)["$1"],styles=element.styles,classes=element.classes;
element.name=element.elements;
element.classes=classes=(classes?classes.split(/\s*,\s*/):[]);
element.styles=mockHash(styles);
element.attributes=mockHash(element.attributes);
element.children=[];
if(classes.length){element.attributes["class"]=classes.join(" ");
}if(styles){element.attributes.style=CKEDITOR.tools.writeCssText(element.styles);
}return element;
}function mockElementFromStyle(style){var styleDef=style.getDefinition(),styles=styleDef.styles,attrs=styleDef.attributes||{};
if(styles){styles=copy(styles);
attrs.style=CKEDITOR.tools.writeCssText(styles,true);
}else{styles={};
}var el={name:styleDef.element,attributes:attrs,classes:attrs["class"]?attrs["class"].split(/\s+/):[],styles:styles,children:[]};
return el;
}function mockHash(str){if(!str){return{};
}var keys=str.split(/\s*,\s*/).sort(),obj={};
while(keys.length){obj[keys.shift()]=TEST_VALUE;
}return obj;
}var validators={styles:1,attributes:1,classes:1},validatorsRequired={styles:"requiredStyles",attributes:"requiredAttributes",classes:"requiredClasses"};
function optimizeRule(rule){var i;
for(i in validators){rule[i]=validatorFunction(rule[i]);
}var nothingRequired=true;
for(i in validatorsRequired){i=validatorsRequired[i];
rule[i]=CKEDITOR.tools.objectKeys(rule[i]);
if(rule[i]){nothingRequired=false;
}}rule.nothingRequired=nothingRequired;
}function optimizeRules(optimizedRules,rules){var elementsRules=optimizedRules.elements||{},genericRules=optimizedRules.generic||[],i,l,j,rule,element,priority;
for(i=0,l=rules.length;
i<l;
++i){rule=copy(rules[i]);
priority=rule.classes===true||rule.styles===true||rule.attributes===true;
optimizeRule(rule);
if(rule.elements===true||rule.elements===null){rule.elements=validatorFunction(rule.elements);
genericRules[priority?"unshift":"push"](rule);
}else{var elements=rule.elements;
delete rule.elements;
for(element in elements){if(!elementsRules[element]){elementsRules[element]=[rule];
}else{elementsRules[element][priority?"unshift":"push"](rule);
}}}}optimizedRules.elements=elementsRules;
optimizedRules.generic=genericRules.length?genericRules:null;
}var rulePattern=/^([a-z0-9*\s]+)((?:\s*\{[!\w\-,\s\*]+\}\s*|\s*\[[!\w\-,\s\*]+\]\s*|\s*\([!\w\-,\s\*]+\)\s*){0,3})(?:;\s*|$)/i,groupsPatterns={styles:/{([^}]+)}/,attrs:/\[([^\]]+)\]/,classes:/\(([^\)]+)\)/};
function parseRulesString(input){var match,props,styles,attrs,classes,rules={},groupNum=1;
input=trim(input);
while((match=input.match(rulePattern))){if((props=match[2])){styles=parseProperties(props,"styles");
attrs=parseProperties(props,"attrs");
classes=parseProperties(props,"classes");
}else{styles=attrs=classes=null;
}rules["$"+groupNum++]={elements:match[1],classes:classes,styles:styles,attributes:attrs};
input=input.slice(match[0].length);
}return rules;
}function parseProperties(properties,groupName){var group=properties.match(groupsPatterns[groupName]);
return group?trim(group[1]):null;
}function populateProperties(element){if(!element.styles){element.styles=CKEDITOR.tools.parseCssText(element.attributes.style||"",1);
}if(!element.classes){element.classes=element.attributes["class"]?element.attributes["class"].split(/\s+/):[];
}}function standardizeRule(rule){rule.elements=convertValidatorToHash(rule.elements,/\s+/)||null;
rule.propertiesOnly=rule.propertiesOnly||(rule.elements===true);
var delim=/\s*,\s*/,i;
for(i in validators){rule[i]=convertValidatorToHash(rule[i],delim)||null;
rule[validatorsRequired[i]]=extractRequired(convertValidatorToHash(rule[validatorsRequired[i]],delim),rule[i])||null;
}rule.match=rule.match||null;
}function updateAttributes(element){var attrs=element.attributes,stylesArr=[],name,styles;
delete attrs.style;
delete attrs["class"];
if((styles=CKEDITOR.tools.writeCssText(element.styles,true))){attrs.style=styles;
}if(element.classes.length){attrs["class"]=element.classes.sort().join(" ");
}}function updateElement(element,status){var validAttrs=status.validAttributes,validStyles=status.validStyles,validClasses=status.validClasses,attrs=element.attributes,styles=element.styles,origClasses=attrs["class"],origStyles=attrs.style,name,origName,stylesArr=[],classesArr=[],internalAttr=/^data-cke-/,isModified=false;
delete attrs.style;
delete attrs["class"];
if(!status.allAttributes){for(name in attrs){if(!validAttrs[name]){if(internalAttr.test(name)){if(name!=(origName=name.replace(/^data-cke-saved-/,""))&&!validAttrs[origName]){delete attrs[name];
isModified=true;
}}else{delete attrs[name];
isModified=true;
}}}}if(!status.allStyles){for(name in styles){if(validStyles[name]){stylesArr.push(name+":"+styles[name]);
}else{isModified=true;
}}if(stylesArr.length){attrs.style=stylesArr.sort().join("; ");
}}else{if(origStyles){attrs.style=origStyles;
}}if(!status.allClasses){for(name in validClasses){if(validClasses[name]){classesArr.push(name);
}}if(classesArr.length){attrs["class"]=classesArr.sort().join(" ");
}if(origClasses&&classesArr.length<origClasses.split(/\s+/).length){isModified=true;
}}else{if(origClasses){attrs["class"]=origClasses;
}}return isModified;
}function validateElement(element){var attrs;
switch(element.name){case"a":if(!(element.children.length||element.attributes.name)){return false;
}break;
case"img":if(!element.attributes.src){return false;
}break;
}return true;
}function validatorFunction(validator){if(!validator){return false;
}if(validator===true){return true;
}return function(value){return value in validator;
};
}function allowedIn(node,parentDtd){if(node.type==CKEDITOR.NODE_ELEMENT){return parentDtd[node.name];
}if(node.type==CKEDITOR.NODE_TEXT){return parentDtd["#"];
}return true;
}function checkChildren(children,newParentName){var allowed=DTD[newParentName];
for(var i=0,l=children.length,child;
i<l;
++i){child=children[i];
if(child.type==CKEDITOR.NODE_ELEMENT&&!allowed[child.name]){return false;
}}return true;
}function createBr(){return new CKEDITOR.htmlParser.element("br");
}function inlineNode(node){return node.type==CKEDITOR.NODE_TEXT||node.type==CKEDITOR.NODE_ELEMENT&&DTD.$inline[node.name];
}function isBrOrBlock(node){return node.type==CKEDITOR.NODE_ELEMENT&&(node.name=="br"||DTD.$block[node.name]);
}function removeElement(element,enterTag,toBeChecked){var name=element.name;
if(DTD.$empty[name]||!element.children.length){if(name=="hr"&&enterTag=="br"){element.replaceWith(createBr());
}else{if(element.parent){toBeChecked.push({check:"it",el:element.parent});
}element.remove();
}}else{if(DTD.$block[name]||name=="tr"){if(enterTag=="br"){stripBlockBr(element,toBeChecked);
}else{stripBlock(element,enterTag,toBeChecked);
}}else{if(name=="style"){element.remove();
}else{if(element.parent){toBeChecked.push({check:"it",el:element.parent});
}element.replaceWithChildren();
}}}}function stripBlock(element,enterTag,toBeChecked){var children=element.children;
if(checkChildren(children,enterTag)){element.name=enterTag;
element.attributes={};
toBeChecked.push({check:"parent-down",el:element});
return;
}var parent=element.parent,shouldAutoP=parent.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT||parent.name=="body",i,j,child,p,node,toBeRemoved=[];
for(i=children.length;
i>0;
){child=children[--i];
if(shouldAutoP&&inlineNode(child)){if(!p){p=new CKEDITOR.htmlParser.element(enterTag);
p.insertAfter(element);
toBeChecked.push({check:"parent-down",el:p});
}p.add(child,0);
}else{p=null;
child.insertAfter(element);
if(parent.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&child.type==CKEDITOR.NODE_ELEMENT&&!DTD[parent.name][child.name]){toBeChecked.push({check:"el-up",el:child});
}}}element.remove();
}function stripBlockBr(element,toBeChecked){var br;
if(element.previous&&!isBrOrBlock(element.previous)){br=createBr();
br.insertBefore(element);
}if(element.next&&!isBrOrBlock(element.next)){br=createBr();
br.insertAfter(element);
}element.replaceWithChildren();
}function applyTransformationsGroup(filter,element,group){var i,rule;
for(i=0;
i<group.length;
++i){rule=group[i];
if((!rule.check||filter.check(rule.check,false))&&(!rule.left||rule.left(element))){rule.right(element,transformationsTools);
return;
}}}function elementMatchesStyle(element,style){var def=style.getDefinition(),defAttrs=def.attributes,defStyles=def.styles,attrName,styleName,classes,classPattern,cl;
if(element.name!=def.element){return false;
}for(attrName in defAttrs){if(attrName=="class"){classes=defAttrs[attrName].split(/\s+/);
classPattern=element.classes.join("|");
while((cl=classes.pop())){if(classPattern.indexOf(cl)==-1){return false;
}}}else{if(element.attributes[attrName]!=defAttrs[attrName]){return false;
}}}for(styleName in defStyles){if(element.styles[styleName]!=defStyles[styleName]){return false;
}}return true;
}function getContentFormTransformationGroup(form,preferredForm){var element,left;
if(typeof form=="string"){element=form;
}else{if(form instanceof CKEDITOR.style){left=form;
}else{element=form[0];
left=form[1];
}}return[{element:element,left:left,right:function(el,tools){tools.transform(el,preferredForm);
}}];
}function getElementNameForTransformation(rule,check){if(rule.element){return rule.element;
}if(check){return check.match(/^([a-z0-9]+)/i)[0];
}return rule.left.getDefinition().element;
}function getMatchStyleFn(style){return function(el){return elementMatchesStyle(el,style);
};
}function getTransformationFn(toolName){return function(el,tools){tools[toolName](el);
};
}function optimizeTransformationsGroup(rules){var groupName,i,rule,check,left,right,optimizedRules=[];
for(i=0;
i<rules.length;
++i){rule=rules[i];
if(typeof rule=="string"){rule=rule.split(/\s*:\s*/);
check=rule[0];
left=null;
right=rule[1];
}else{check=rule.check;
left=rule.left;
right=rule.right;
}if(!groupName){groupName=getElementNameForTransformation(rule,check);
}if(left instanceof CKEDITOR.style){left=getMatchStyleFn(left);
}optimizedRules.push({check:check==groupName?null:check,left:left,right:typeof right=="string"?getTransformationFn(right):right});
}return{name:groupName,rules:optimizedRules};
}var transformationsTools=CKEDITOR.filter.transformationsTools={sizeToStyle:function(element){this.lengthToStyle(element,"width");
this.lengthToStyle(element,"height");
},sizeToAttribute:function(element){this.lengthToAttribute(element,"width");
this.lengthToAttribute(element,"height");
},lengthToStyle:function(element,attrName,styleName){styleName=styleName||attrName;
if(!(styleName in element.styles)){var value=element.attributes[attrName];
if(value){if((/^\d+$/).test(value)){value+="px";
}element.styles[styleName]=value;
}}delete element.attributes[attrName];
},lengthToAttribute:function(element,styleName,attrName){attrName=attrName||styleName;
if(!(attrName in element.attributes)){var value=element.styles[styleName],match=value&&value.match(/^(\d+)(?:\.\d*)?px$/);
if(match){element.attributes[attrName]=match[1];
}else{if(value==TEST_VALUE){element.attributes[attrName]=TEST_VALUE;
}}}delete element.styles[styleName];
},alignmentToStyle:function(element){if(!("float" in element.styles)){var value=element.attributes.align;
if(value=="left"||value=="right"){element.styles["float"]=value;
}}delete element.attributes.align;
},alignmentToAttribute:function(element){if(!("align" in element.attributes)){var value=element.styles["float"];
if(value=="left"||value=="right"){element.attributes.align=value;
}}delete element.styles["float"];
},matchesStyle:elementMatchesStyle,transform:function(el,form){if(typeof form=="string"){el.name=form;
}else{var def=form.getDefinition(),defStyles=def.styles,defAttrs=def.attributes,attrName,styleName,existingClassesPattern,defClasses,cl;
el.name=def.element;
for(attrName in defAttrs){if(attrName=="class"){existingClassesPattern=el.classes.join("|");
defClasses=defAttrs[attrName].split(/\s+/);
while((cl=defClasses.pop())){if(existingClassesPattern.indexOf(cl)==-1){el.classes.push(cl);
}}}else{el.attributes[attrName]=defAttrs[attrName];
}}for(styleName in defStyles){el.styles[styleName]=defStyles[styleName];
}}}};
})();
(function(){CKEDITOR.focusManager=function(editor){if(editor.focusManager){return editor.focusManager;
}this.hasFocus=false;
this.currentActive=null;
this._={editor:editor};
return this;
};
var SLOT_NAME="focusmanager",SLOT_NAME_LISTENERS="focusmanager_handlers";
CKEDITOR.focusManager._={blurDelay:200};
CKEDITOR.focusManager.prototype={focus:function(){if(this._.timer){clearTimeout(this._.timer);
}if(!(this.hasFocus||this._.locked)){var current=CKEDITOR.currentInstance;
current&&current.focusManager.blur(1);
this.hasFocus=true;
var ct=this._.editor.container;
ct&&ct.addClass("cke_focus");
this._.editor.fire("focus");
}},lock:function(){this._.locked=1;
},unlock:function(){delete this._.locked;
},blur:function(noDelay){if(this._.locked){return;
}function doBlur(){if(this.hasFocus){this.hasFocus=false;
var ct=this._.editor.container;
ct&&ct.removeClass("cke_focus");
this._.editor.fire("blur");
}}if(this._.timer){clearTimeout(this._.timer);
}var delay=CKEDITOR.focusManager._.blurDelay;
if(noDelay||!delay){doBlur.call(this);
}else{this._.timer=CKEDITOR.tools.setTimeout(function(){delete this._.timer;
doBlur.call(this);
},delay,this);
}},add:function(element,isCapture){var fm=element.getCustomData(SLOT_NAME);
if(!fm||fm!=this){fm&&fm.remove(element);
var focusEvent="focus",blurEvent="blur";
if(isCapture){if(CKEDITOR.env.ie){focusEvent="focusin";
blurEvent="focusout";
}else{CKEDITOR.event.useCapture=1;
}}var listeners={blur:function(){if(element.equals(this.currentActive)){this.blur();
}},focus:function(){this.currentActive=element;
this.focus();
}};
element.on(focusEvent,listeners.focus,this);
element.on(blurEvent,listeners.blur,this);
if(isCapture){CKEDITOR.event.useCapture=0;
}element.setCustomData(SLOT_NAME,this);
element.setCustomData(SLOT_NAME_LISTENERS,listeners);
}},remove:function(element){element.removeCustomData(SLOT_NAME);
var listeners=element.removeCustomData(SLOT_NAME_LISTENERS);
element.removeListener("blur",listeners.blur);
element.removeListener("focus",listeners.focus);
}};
})();
CKEDITOR.keystrokeHandler=function(editor){if(editor.keystrokeHandler){return editor.keystrokeHandler;
}this.keystrokes={};
this.blockedKeystrokes={};
this._={editor:editor};
return this;
};
(function(){var cancel;
var onKeyDown=function(event){event=event.data;
var keyCombination=event.getKeystroke();
var command=this.keystrokes[keyCombination];
var editor=this._.editor;
cancel=(editor.fire("key",{keyCode:keyCombination})===false);
if(!cancel){if(command){var data={from:"keystrokeHandler"};
cancel=(editor.execCommand(command,data)!==false);
}if(!cancel){cancel=!!this.blockedKeystrokes[keyCombination];
}}if(cancel){event.preventDefault(true);
}return !cancel;
};
var onKeyPress=function(event){if(cancel){cancel=false;
event.data.preventDefault(true);
}};
CKEDITOR.keystrokeHandler.prototype={attach:function(domObject){domObject.on("keydown",onKeyDown,this);
if(CKEDITOR.env.opera||(CKEDITOR.env.gecko&&CKEDITOR.env.mac)){domObject.on("keypress",onKeyPress,this);
}}};
})();
(function(){var loadedLangs={};
CKEDITOR.lang={languages:{de:1,"en-gb":1,"en-au":1,en:1,es:1,fr:1,"pt-br":1},load:function(languageCode,defaultLanguage,callback){if(!languageCode||!CKEDITOR.lang.languages[languageCode]){languageCode=this.detect(defaultLanguage,languageCode);
}if(!this[languageCode]){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("lang/"+languageCode+".js"),function(){callback(languageCode,this[languageCode]);
},this);
}else{callback(languageCode,this[languageCode]);
}},detect:function(defaultLanguage,probeLanguage){var languages=this.languages;
probeLanguage=probeLanguage||navigator.userLanguage||navigator.language||defaultLanguage;
var parts=probeLanguage.toLowerCase().match(/([a-z]+)(?:-([a-z]+))?/),lang=parts[1],locale=parts[2];
if(languages[lang+"-"+locale]){lang=lang+"-"+locale;
}else{if(!languages[lang]){lang=null;
}}CKEDITOR.lang.detect=lang?function(){return lang;
}:function(defaultLanguage){return defaultLanguage;
};
return lang||defaultLanguage;
}};
})();
CKEDITOR.scriptLoader=(function(){var uniqueScripts={},waitingList={};
return{load:function(scriptUrl,callback,scope,showBusy){var isString=(typeof scriptUrl=="string");
if(isString){scriptUrl=[scriptUrl];
}if(!scope){scope=CKEDITOR;
}var scriptCount=scriptUrl.length,completed=[],failed=[];
var doCallback=function(success){if(callback){if(isString){callback.call(scope,success);
}else{callback.call(scope,completed,failed);
}}};
if(scriptCount===0){doCallback(true);
return;
}var checkLoaded=function(url,success){(success?completed:failed).push(url);
if(--scriptCount<=0){showBusy&&CKEDITOR.document.getDocumentElement().removeStyle("cursor");
doCallback(success);
}};
var onLoad=function(url,success){uniqueScripts[url]=1;
var waitingInfo=waitingList[url];
delete waitingList[url];
for(var i=0;
i<waitingInfo.length;
i++){waitingInfo[i](url,success);
}};
var loadScript=function(url){if(uniqueScripts[url]){checkLoaded(url,true);
return;
}var waitingInfo=waitingList[url]||(waitingList[url]=[]);
waitingInfo.push(checkLoaded);
if(waitingInfo.length>1){return;
}var script=new CKEDITOR.dom.element("script");
script.setAttributes({type:"text/javascript",src:url});
if(callback){if(CKEDITOR.env.ie){script.$.onreadystatechange=function(){if(script.$.readyState=="loaded"||script.$.readyState=="complete"){script.$.onreadystatechange=null;
onLoad(url,true);
}};
}else{script.$.onload=function(){setTimeout(function(){onLoad(url,true);
},0);
};
script.$.onerror=function(){onLoad(url,false);
};
}}script.appendTo(CKEDITOR.document.getHead());
CKEDITOR.fire("download",url);
};
showBusy&&CKEDITOR.document.getDocumentElement().setStyle("cursor","wait");
for(var i=0;
i<scriptCount;
i++){loadScript(scriptUrl[i]);
}}};
})();
CKEDITOR.resourceManager=function(basePath,fileName){this.basePath=basePath;
this.fileName=fileName;
this.registered={};
this.loaded={};
this.externals={};
this._={waitingList:{}};
};
CKEDITOR.resourceManager.prototype={add:function(name,definition){if(this.registered[name]){throw'[CKEDITOR.resourceManager.add] The resource name "'+name+'" is already registered.';
}var resource=this.registered[name]=definition||{};
resource.name=name;
resource.path=this.getPath(name);
CKEDITOR.fire(name+CKEDITOR.tools.capitalize(this.fileName)+"Ready",resource);
return this.get(name);
},get:function(name){return this.registered[name]||null;
},getPath:function(name){var external=this.externals[name];
return CKEDITOR.getUrl((external&&external.dir)||this.basePath+name+"/");
},getFilePath:function(name){var external=this.externals[name];
return CKEDITOR.getUrl(this.getPath(name)+((external&&(typeof external.file=="string"))?external.file:this.fileName+".js"));
},addExternal:function(names,path,fileName){names=names.split(",");
for(var i=0;
i<names.length;
i++){var name=names[i];
this.externals[name]={dir:path,file:fileName};
}},load:function(names,callback,scope){if(!CKEDITOR.tools.isArray(names)){names=names?[names]:[];
}var loaded=this.loaded,registered=this.registered,urls=[],urlsNames={},resources={};
for(var i=0;
i<names.length;
i++){var name=names[i];
if(!name){continue;
}if(!loaded[name]&&!registered[name]){var url=this.getFilePath(name);
urls.push(url);
if(!(url in urlsNames)){urlsNames[url]=[];
}urlsNames[url].push(name);
}else{resources[name]=this.get(name);
}}CKEDITOR.scriptLoader.load(urls,function(completed,failed){if(failed.length){throw'[CKEDITOR.resourceManager.load] Resource name "'+urlsNames[failed[0]].join(",")+'" was not found at "'+failed[0]+'".';
}for(var i=0;
i<completed.length;
i++){var nameList=urlsNames[completed[i]];
for(var j=0;
j<nameList.length;
j++){var name=nameList[j];
resources[name]=this.get(name);
loaded[name]=1;
}}callback.call(scope,resources);
},this);
}};
CKEDITOR.plugins=new CKEDITOR.resourceManager("plugins/","plugin");
CKEDITOR.plugins.load=CKEDITOR.tools.override(CKEDITOR.plugins.load,function(originalLoad){var initialized={};
return function(name,callback,scope){var allPlugins={};
var loadPlugins=function(names){originalLoad.call(this,names,function(plugins){CKEDITOR.tools.extend(allPlugins,plugins);
var requiredPlugins=[];
for(var pluginName in plugins){var plugin=plugins[pluginName],requires=plugin&&plugin.requires;
if(!initialized[pluginName]){if(plugin.icons){var icons=plugin.icons.split(",");
for(var ic=0;
ic<icons.length;
ic++){CKEDITOR.skin.addIcon(icons[ic],plugin.path+"icons/"+icons[ic]+".png");
}}initialized[pluginName]=1;
}if(requires){if(requires.split){requires=requires.split(",");
}for(var i=0;
i<requires.length;
i++){if(!allPlugins[requires[i]]){requiredPlugins.push(requires[i]);
}}}}if(requiredPlugins.length){loadPlugins.call(this,requiredPlugins);
}else{for(pluginName in allPlugins){plugin=allPlugins[pluginName];
if(plugin.onLoad&&!plugin.onLoad._called){if(plugin.onLoad()===false){delete allPlugins[pluginName];
}plugin.onLoad._called=1;
}}if(callback){callback.call(scope||window,allPlugins);
}}},this);
};
loadPlugins.call(this,name);
};
});
CKEDITOR.plugins.setLang=function(pluginName,languageCode,languageEntries){var plugin=this.get(pluginName),pluginLangEntries=plugin.langEntries||(plugin.langEntries={}),pluginLang=plugin.lang||(plugin.lang=[]);
if(pluginLang.split){pluginLang=pluginLang.split(",");
}if(CKEDITOR.tools.indexOf(pluginLang,languageCode)==-1){pluginLang.push(languageCode);
}pluginLangEntries[languageCode]=languageEntries;
};
CKEDITOR.plugins.pluginLocaleLoaded={en:false,"en-au":false,"en-gb":false,es:false,fr:false,"pt-br":false};
CKEDITOR.plugins.masterPlugin="mpage-master-plugin";
CKEDITOR.plugins.initializePlugins=function(config,callback){if(typeof callback!=="function"){throw new Error("Error: called initializePlugins on CKEDITOR.plugins with non function type for callback parameter");
}if(!config){throw new Error("Error: called initializePlugins on CKEDITOR.plugins with no config object.");
}CKEDITOR.editorConfig(config);
var masterPluginName=CKEDITOR.plugins.masterPlugin;
CKEDITOR.plugins.load(masterPluginName,function(plugins){var masterPluginObject=plugins[masterPluginName];
if(!masterPluginObject){throw new Error("Error: there was an error loading the master plugin");
}var masterPluginLang=masterPluginObject.lang;
var configLang=config.language;
if(!masterPluginLang||!masterPluginLang.split(",").length){throw new Error("Error: Language configuration expected for the mpage-master-plugin");
}if(masterPluginLang.split(",").indexOf(configLang)<0){throw new Error("Error: Language file does not exist for the specified language in the configuration.");
}CKEDITOR.plugins.load(config.plugins.split(","),function(plugin){if(CKEDITOR.plugins.pluginLocaleLoaded[configLang]){callback();
return;
}CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(masterPluginObject.path+"lang/"+configLang+".js"),function(){CKEDITOR.plugins.pluginLocaleLoaded[configLang]=true;
callback();
});
});
});
};
CKEDITOR.ui=function(editor){if(editor.ui){return editor.ui;
}this.items={};
this.instances={};
this.editor=editor;
this._={handlers:{}};
return this;
};
CKEDITOR.ui.prototype={add:function(name,type,definition){definition.name=name.toLowerCase();
var item=this.items[name]={type:type,command:definition.command||null,args:Array.prototype.slice.call(arguments,2)};
CKEDITOR.tools.extend(item,definition);
},get:function(name){return this.instances[name];
},create:function(name){var item=this.items[name],handler=item&&this._.handlers[item.type],command=item&&item.command&&this.editor.getCommand(item.command);
var result=handler&&handler.create.apply(this,item.args);
this.instances[name]=result;
if(command){command.uiItems.push(result);
}if(result&&!result.type){result.type=item.type;
}return result;
},addHandler:function(type,handler){this._.handlers[type]=handler;
},space:function(name){return CKEDITOR.document.getById(this.spaceId(name));
},spaceId:function(name){return this.editor.id+"_"+name;
}};
CKEDITOR.event.implementOn(CKEDITOR.ui);
(function(){Editor.prototype=CKEDITOR.editor.prototype;
CKEDITOR.editor=Editor;
function Editor(instanceConfig,element,mode){CKEDITOR.event.call(this);
instanceConfig=instanceConfig&&CKEDITOR.tools.clone(instanceConfig);
if(element!==undefined){if(!(element instanceof CKEDITOR.dom.element)){throw new Error("Expect element of type CKEDITOR.dom.element.");
}else{if(!mode){throw new Error("One of the element mode must be specified.");
}}if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&mode==CKEDITOR.ELEMENT_MODE_INLINE){throw new Error("Inline element mode is not supported on IE quirks.");
}if(mode==CKEDITOR.ELEMENT_MODE_INLINE&&!element.is(CKEDITOR.dtd.$editable)||mode==CKEDITOR.ELEMENT_MODE_REPLACE&&element.is(CKEDITOR.dtd.$nonBodyContent)){throw new Error('The specified element mode is not supported on element: "'+element.getName()+'".');
}this.element=element;
this.elementMode=mode;
this.name=(this.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO)&&(element.getId()||element.getNameAtt());
}else{this.elementMode=CKEDITOR.ELEMENT_MODE_NONE;
}this._={};
this.commands={};
this.templates={};
this.name=this.name||genEditorName();
this.id=CKEDITOR.tools.getNextId();
this.status="unloaded";
this.config=CKEDITOR.tools.prototypedCopy(CKEDITOR.config);
this.ui=new CKEDITOR.ui(this);
this.focusManager=new CKEDITOR.focusManager(this);
this.keystrokeHandler=new CKEDITOR.keystrokeHandler(this);
this.on("readOnly",updateCommands);
this.on("selectionChange",updateCommandsContext);
this.on("instanceReady",function(){updateCommands.call(this);
this.on("mode",updateCommands);
this.config.startupFocus&&this.focus();
});
CKEDITOR.fire("instanceCreated",null,this);
CKEDITOR.add(this);
CKEDITOR.tools.setTimeout(function(){initConfig(this,instanceConfig);
},0,this);
}var nameCounter=0;
function genEditorName(){do{var name="editor"+(++nameCounter);
}while(CKEDITOR.instances[name]);
return name;
}function updateCommands(){var commands=this.commands,mode=this.mode;
if(!mode){return;
}for(var name in commands){updateCommand(this,commands[name]);
}}function updateCommand(editor,cmd){cmd[cmd.startDisabled?"disable":editor.readOnly&&!cmd.readOnly?"disable":cmd.modes[editor.mode]?"enable":"disable"]();
}function updateCommandsContext(ev){var command,commands=this.commands,editor=ev.editor,path=ev.data.path;
for(var name in commands){command=commands[name];
if(command.contextSensitive){command.refresh(editor,path);
}}}var loadConfigLoaded={};
function loadConfig(editor){var customConfig=editor.config.customConfig;
if(!customConfig){return false;
}customConfig=CKEDITOR.getUrl(customConfig);
var loadedConfig=loadConfigLoaded[customConfig]||(loadConfigLoaded[customConfig]={});
if(loadedConfig.fn){loadedConfig.fn.call(editor,editor.config);
if(CKEDITOR.getUrl(editor.config.customConfig)==customConfig||!loadConfig(editor)){editor.fireOnce("customConfigLoaded");
}}else{CKEDITOR.scriptLoader.load(customConfig,function(){if(CKEDITOR.editorConfig){loadedConfig.fn=CKEDITOR.editorConfig;
}else{loadedConfig.fn=function(){};
}loadConfig(editor);
});
}return true;
}function initConfig(editor,instanceConfig){editor.on("customConfigLoaded",function(){if(instanceConfig){if(instanceConfig.on){for(var eventName in instanceConfig.on){editor.on(eventName,instanceConfig.on[eventName]);
}}CKEDITOR.tools.extend(editor.config,instanceConfig,true);
delete editor.config.on;
}onConfigLoaded(editor);
});
if(instanceConfig&&instanceConfig.customConfig!=undefined){editor.config.customConfig=instanceConfig.customConfig;
}if(!loadConfig(editor)){editor.fireOnce("customConfigLoaded");
}}function onConfigLoaded(editor){editor.readOnly=!!(editor.config.readOnly||(editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?editor.element.isReadOnly():editor.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE?editor.element.getAttribute("disabled"):false));
editor.blockless=editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE&&!CKEDITOR.dtd[editor.element.getName()]["p"];
editor.tabIndex=editor.config.tabIndex||editor.element&&editor.element.getAttribute("tabindex")||0;
if(editor.config.skin){CKEDITOR.skinName=editor.config.skin;
}editor.fireOnce("configLoaded");
initComponents(editor);
}function initComponents(editor){editor.dataProcessor=new CKEDITOR.htmlDataProcessor(editor);
editor.filter=new CKEDITOR.filter(editor);
loadSkin(editor);
}function loadSkin(editor){CKEDITOR.skin.loadPart("editor",function(){loadLang(editor);
});
}function loadLang(editor){CKEDITOR.lang.load(editor.config.language,editor.config.defaultLanguage,function(languageCode,lang){editor.langCode=languageCode;
editor.lang=CKEDITOR.tools.prototypedCopy(lang);
if(CKEDITOR.env.gecko&&CKEDITOR.env.version<10900&&editor.lang.dir=="rtl"){editor.lang.dir="ltr";
}if(!editor.config.contentsLangDirection){editor.config.contentsLangDirection=editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?editor.element.getDirection(1):editor.lang.dir;
}editor.fire("langLoaded");
preloadStylesSet(editor);
});
}function preloadStylesSet(editor){editor.getStylesSet(function(styles){editor.once("loaded",function(){editor.fire("stylesSet",{styles:styles});
},null,null,1);
loadPlugins(editor);
});
}function loadPlugins(editor){var config=editor.config,plugins=config.plugins,extraPlugins=config.extraPlugins,removePlugins=config.removePlugins;
if(extraPlugins){var extraRegex=new RegExp("(?:^|,)(?:"+extraPlugins.replace(/\s*,\s*/g,"|")+")(?=,|$)","g");
plugins=plugins.replace(extraRegex,"");
plugins+=","+extraPlugins;
}if(removePlugins){var removeRegex=new RegExp("(?:^|,)(?:"+removePlugins.replace(/\s*,\s*/g,"|")+")(?=,|$)","g");
plugins=plugins.replace(removeRegex,"");
}CKEDITOR.env.air&&(plugins+=",adobeair");
CKEDITOR.plugins.load(plugins.split(","),function(plugins){var pluginsArray=[];
var languageCodes=[];
var languageFiles=[];
editor.plugins=plugins;
for(var pluginName in plugins){var plugin=plugins[pluginName],pluginLangs=plugin.lang,lang=null,requires=plugin.requires,match,name;
if(CKEDITOR.tools.isArray(requires)){requires=requires.join(",");
}if(requires&&(match=requires.match(removeRegex))){while((name=match.pop())){CKEDITOR.tools.setTimeout(function(name,pluginName){throw new Error('Plugin "'+name.replace(",","")+'" cannot be removed from the plugins list, because it\'s required by "'+pluginName+'" plugin.');
},0,null,[name,pluginName]);
}}if(pluginLangs&&!editor.lang[pluginName]){if(pluginLangs.split){pluginLangs=pluginLangs.split(",");
}if(CKEDITOR.tools.indexOf(pluginLangs,editor.langCode)>=0){lang=editor.langCode;
}else{var langPart=editor.langCode.replace(/-.*/,"");
if(langPart!=editor.langCode&&CKEDITOR.tools.indexOf(pluginLangs,langPart)>=0){lang=langPart;
}else{if(CKEDITOR.tools.indexOf(pluginLangs,"en")>=0){lang="en";
}else{lang=pluginLangs[0];
}}}if(!plugin.langEntries||!plugin.langEntries[lang]){languageFiles.push(CKEDITOR.getUrl(plugin.path+"lang/"+lang+".js"));
}else{editor.lang[pluginName]=plugin.langEntries[lang];
lang=null;
}}languageCodes.push(lang);
pluginsArray.push(plugin);
}CKEDITOR.scriptLoader.load(languageFiles,function(){var methods=["beforeInit","init","afterInit"];
for(var m=0;
m<methods.length;
m++){for(var i=0;
i<pluginsArray.length;
i++){var plugin=pluginsArray[i];
if(m===0&&languageCodes[i]&&plugin.lang&&plugin.langEntries){editor.lang[plugin.name]=plugin.langEntries[languageCodes[i]];
}if(plugin[methods[m]]){plugin[methods[m]](editor);
}}}editor.fireOnce("pluginsLoaded");
config.keystrokes&&editor.setKeystroke(editor.config.keystrokes);
for(i=0;
i<editor.config.blockedKeystrokes.length;
i++){editor.keystrokeHandler.blockedKeystrokes[editor.config.blockedKeystrokes[i]]=1;
}editor.status="loaded";
editor.fireOnce("loaded");
CKEDITOR.fire("instanceLoaded",null,editor);
});
});
}function updateEditorElement(){var element=this.element;
if(element&&this.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO){var data=this.getData();
if(this.config.htmlEncodeOutput){data=CKEDITOR.tools.htmlEncode(data);
}if(element.is("textarea")){element.setValue(data);
}else{element.setHtml(data);
}return true;
}return false;
}CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{addCommand:function(commandName,commandDefinition){commandDefinition.name=commandName.toLowerCase();
var cmd=new CKEDITOR.command(this,commandDefinition);
if(this.status=="ready"&&this.mode){updateCommand(this,cmd);
}return this.commands[commandName]=cmd;
},destroy:function(noUpdate){this.fire("beforeDestroy");
!noUpdate&&updateEditorElement.call(this);
this.editable(null);
this.status="destroyed";
this.fire("destroy");
this.removeAllListeners();
CKEDITOR.remove(this);
CKEDITOR.fire("instanceDestroyed",null,this);
},elementPath:function(startNode){startNode=startNode||this.getSelection().getStartElement();
return startNode?new CKEDITOR.dom.elementPath(startNode,this.editable()):null;
},createRange:function(){var editable=this.editable();
return editable?new CKEDITOR.dom.range(editable):null;
},execCommand:function(commandName,data){var command=this.getCommand(commandName);
var eventData={name:commandName,commandData:data,command:command};
if(command&&command.state!=CKEDITOR.TRISTATE_DISABLED){if(this.fire("beforeCommandExec",eventData)!==true){eventData.returnValue=command.exec(eventData.commandData);
if(!command.async&&this.fire("afterCommandExec",eventData)!==true){return eventData.returnValue;
}}}return false;
},getCommand:function(commandName){return this.commands[commandName];
},getData:function(noEvents){!noEvents&&this.fire("beforeGetData");
var eventData=this._.data;
if(typeof eventData!="string"){var element=this.element;
if(element&&this.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE){eventData=element.is("textarea")?element.getValue():element.getHtml();
}else{eventData="";
}}eventData={dataValue:eventData};
!noEvents&&this.fire("getData",eventData);
return eventData.dataValue;
},getSnapshot:function(){var data=this.fire("getSnapshot");
if(typeof data!="string"){var element=this.element;
if(element&&this.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE){data=element.is("textarea")?element.getValue():element.getHtml();
}}return data;
},loadSnapshot:function(snapshot){this.fire("loadSnapshot",snapshot);
},setData:function(data,callback,internal){if(callback){this.on("dataReady",function(evt){evt.removeListener();
callback.call(evt.editor);
});
}var eventData={dataValue:data};
!internal&&this.fire("setData",eventData);
this._.data=eventData.dataValue;
!internal&&this.fire("afterSetData",eventData);
},setReadOnly:function(isReadOnly){isReadOnly=(isReadOnly==undefined)||isReadOnly;
if(this.readOnly!=isReadOnly){this.readOnly=isReadOnly;
this.editable().setReadOnly(isReadOnly);
this.fire("readOnly");
}},insertHtml:function(html,mode){this.fire("insertHtml",{dataValue:html,mode:mode});
},insertText:function(text){this.fire("insertText",text);
},insertElement:function(element){this.fire("insertElement",element);
},focus:function(){this.fire("beforeFocus");
},checkDirty:function(){return this.status=="ready"&&this._.previousValue!==this.getSnapshot();
},resetDirty:function(){this._.previousValue=this.getSnapshot();
},updateElement:function(){return updateEditorElement.call(this);
},setKeystroke:function(){var keystrokes=this.keystrokeHandler.keystrokes,newKeystrokes=CKEDITOR.tools.isArray(arguments[0])?arguments[0]:[[].slice.call(arguments,0)],keystroke,behavior;
for(var i=newKeystrokes.length;
i--;
){keystroke=newKeystrokes[i];
behavior=0;
if(CKEDITOR.tools.isArray(keystroke)){behavior=keystroke[1];
keystroke=keystroke[0];
}if(behavior){keystrokes[keystroke]=behavior;
}else{delete keystrokes[keystroke];
}}},addFeature:function(feature){return this.filter.addFeature(feature);
}});
})();
CKEDITOR.ELEMENT_MODE_NONE=0;
CKEDITOR.ELEMENT_MODE_REPLACE=1;
CKEDITOR.ELEMENT_MODE_APPENDTO=2;
CKEDITOR.ELEMENT_MODE_INLINE=3;
CKEDITOR.htmlParser=function(){this._={htmlPartsRegex:new RegExp("<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)-->)|(?:([^\\s>]+)\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\"'>])*)\\/?>))","g")};
};
(function(){var attribsRegex=/([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g,emptyAttribs={checked:1,compact:1,declare:1,defer:1,disabled:1,ismap:1,multiple:1,nohref:1,noresize:1,noshade:1,nowrap:1,readonly:1,selected:1};
CKEDITOR.htmlParser.prototype={onTagOpen:function(){},onTagClose:function(){},onText:function(){},onCDATA:function(){},onComment:function(){},parse:function(html){var parts,tagName,nextIndex=0,cdata;
while((parts=this._.htmlPartsRegex.exec(html))){var tagIndex=parts.index;
if(tagIndex>nextIndex){var text=html.substring(nextIndex,tagIndex);
if(cdata){cdata.push(text);
}else{this.onText(text);
}}nextIndex=this._.htmlPartsRegex.lastIndex;
if((tagName=parts[1])){tagName=tagName.toLowerCase();
if(cdata&&CKEDITOR.dtd.$cdata[tagName]){this.onCDATA(cdata.join(""));
cdata=null;
}if(!cdata){this.onTagClose(tagName);
continue;
}}if(cdata){cdata.push(parts[0]);
continue;
}if((tagName=parts[3])){tagName=tagName.toLowerCase();
if(/="/.test(tagName)){continue;
}var attribs={},attribMatch,attribsPart=parts[4],selfClosing=!!(attribsPart&&attribsPart.charAt(attribsPart.length-1)=="/");
if(attribsPart){while((attribMatch=attribsRegex.exec(attribsPart))){var attName=attribMatch[1].toLowerCase(),attValue=attribMatch[2]||attribMatch[3]||attribMatch[4]||"";
if(!attValue&&emptyAttribs[attName]){attribs[attName]=attName;
}else{attribs[attName]=attValue;
}}}this.onTagOpen(tagName,attribs,selfClosing);
if(!cdata&&CKEDITOR.dtd.$cdata[tagName]){cdata=[];
}continue;
}if((tagName=parts[2])){this.onComment(tagName);
}}if(html.length>nextIndex){this.onText(html.substring(nextIndex,html.length));
}}};
})();
CKEDITOR.htmlParser.basicWriter=CKEDITOR.tools.createClass({$:function(){this._={output:[]};
},proto:{openTag:function(tagName,attributes){this._.output.push("<",tagName);
},openTagClose:function(tagName,isSelfClose){if(isSelfClose){this._.output.push(" />");
}else{this._.output.push(">");
}},attribute:function(attName,attValue){if(typeof attValue=="string"){attValue=CKEDITOR.tools.htmlEncodeAttr(attValue);
}this._.output.push(" ",attName,'="',attValue,'"');
},closeTag:function(tagName){this._.output.push("</",tagName,">");
},text:function(text){this._.output.push(text);
},comment:function(comment){this._.output.push("<!--",comment,"-->");
},write:function(data){this._.output.push(data);
},reset:function(){this._.output=[];
this._.indent=false;
},getHtml:function(reset){var html=this._.output.join("");
if(reset){this.reset();
}return html;
}}});
"use strict";
(function(){CKEDITOR.htmlParser.node=function(){};
CKEDITOR.htmlParser.node.prototype={remove:function(){var children=this.parent.children,index=CKEDITOR.tools.indexOf(children,this),previous=this.previous,next=this.next;
previous&&(previous.next=next);
next&&(next.previous=previous);
children.splice(index,1);
this.parent=null;
},replaceWith:function(node){var children=this.parent.children,index=CKEDITOR.tools.indexOf(children,this),previous=node.previous=this.previous,next=node.next=this.next;
previous&&(previous.next=node);
next&&(next.previous=node);
children[index]=node;
node.parent=this.parent;
this.parent=null;
},insertAfter:function(node){var children=node.parent.children,index=CKEDITOR.tools.indexOf(children,node),next=node.next;
children.splice(index+1,0,this);
this.next=node.next;
this.previous=node;
node.next=this;
next&&(next.previous=this);
this.parent=node.parent;
},insertBefore:function(node){var children=node.parent.children,index=CKEDITOR.tools.indexOf(children,node);
children.splice(index,0,this);
this.next=node;
this.previous=node.previous;
node.previous&&(node.previous.next=this);
node.previous=this;
this.parent=node.parent;
}};
})();
"use strict";
CKEDITOR.htmlParser.comment=function(value){this.value=value;
this._={isBlockLike:false};
};
CKEDITOR.htmlParser.comment.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node(),{type:CKEDITOR.NODE_COMMENT,filter:function(filter){var comment=this.value;
if(!(comment=filter.onComment(comment,this))){this.remove();
return false;
}if(typeof comment!="string"){this.replaceWith(comment);
return false;
}this.value=comment;
return true;
},writeHtml:function(writer,filter){if(filter){this.filter(filter);
}writer.comment(this.value);
}});
"use strict";
(function(){CKEDITOR.htmlParser.text=function(value){this.value=value;
this._={isBlockLike:false};
};
CKEDITOR.htmlParser.text.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node(),{type:CKEDITOR.NODE_TEXT,filter:function(filter){if(!(this.value=filter.onText(this.value,this))){this.remove();
return false;
}},writeHtml:function(writer,filter){if(filter){this.filter(filter);
}writer.text(this.value);
}});
})();
"use strict";
(function(){CKEDITOR.htmlParser.cdata=function(value){this.value=value;
};
CKEDITOR.htmlParser.cdata.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node(),{type:CKEDITOR.NODE_TEXT,filter:function(){},writeHtml:function(writer){writer.write(this.value);
}});
})();
"use strict";
CKEDITOR.htmlParser.fragment=function(){this.children=[];
this.parent=null;
this._={isBlockLike:true,hasInlineStarted:false};
};
(function(){var nonBreakingBlocks=CKEDITOR.tools.extend({table:1,ul:1,ol:1,dl:1},CKEDITOR.dtd.table,CKEDITOR.dtd.ul,CKEDITOR.dtd.ol,CKEDITOR.dtd.dl);
var listBlocks={ol:1,ul:1};
var rootDtd=CKEDITOR.tools.extend({},{html:1},CKEDITOR.dtd.html,CKEDITOR.dtd.body,CKEDITOR.dtd.head,{style:1,script:1});
function isRemoveEmpty(node){return node.name=="a"&&node.attributes.href||CKEDITOR.dtd.$removeEmpty[node.name];
}CKEDITOR.htmlParser.fragment.fromHtml=function(fragmentHtml,parent,fixingBlock){var parser=new CKEDITOR.htmlParser();
var root=parent instanceof CKEDITOR.htmlParser.element?parent:typeof parent=="string"?new CKEDITOR.htmlParser.element(parent):new CKEDITOR.htmlParser.fragment();
var pendingInline=[],pendingBRs=[],currentNode=root,inTextarea=root.name=="textarea",inPre=root.name=="pre";
function checkPending(newTagName){var pendingBRsSent;
if(pendingInline.length>0){for(var i=0;
i<pendingInline.length;
i++){var pendingElement=pendingInline[i],pendingName=pendingElement.name,pendingDtd=CKEDITOR.dtd[pendingName],currentDtd=currentNode.name&&CKEDITOR.dtd[currentNode.name];
if((!currentDtd||currentDtd[pendingName])&&(!newTagName||!pendingDtd||pendingDtd[newTagName]||!CKEDITOR.dtd[newTagName])){if(!pendingBRsSent){sendPendingBRs();
pendingBRsSent=1;
}pendingElement=pendingElement.clone();
pendingElement.parent=currentNode;
currentNode=pendingElement;
pendingInline.splice(i,1);
i--;
}else{if(pendingName==currentNode.name){addElement(currentNode,currentNode.parent,1),i--;
}}}}}function sendPendingBRs(){while(pendingBRs.length){addElement(pendingBRs.shift(),currentNode);
}}function removeTailWhitespace(element){if(element._.isBlockLike&&element.name!="pre"&&element.name!="textarea"){var length=element.children.length,lastChild=element.children[length-1],text;
if(lastChild&&lastChild.type==CKEDITOR.NODE_TEXT){if(!(text=CKEDITOR.tools.rtrim(lastChild.value))){element.children.length=length-1;
}else{lastChild.value=text;
}}}}function addElement(element,target,moveCurrent){target=target||currentNode||root;
var savedCurrent=currentNode;
if(element.previous===undefined){if(checkAutoParagraphing(target,element)){currentNode=target;
parser.onTagOpen(fixingBlock,{});
element.returnPoint=target=currentNode;
}removeTailWhitespace(element);
if(!(isRemoveEmpty(element)&&!element.children.length)){target.add(element);
}if(element.name=="pre"){inPre=false;
}if(element.name=="textarea"){inTextarea=false;
}}if(element.returnPoint){currentNode=element.returnPoint;
delete element.returnPoint;
}else{currentNode=moveCurrent?target:savedCurrent;
}}function checkAutoParagraphing(parent,node){if((parent==root||parent.name=="body")&&fixingBlock&&(!parent.name||CKEDITOR.dtd[parent.name][fixingBlock])){var name,realName;
if(node.attributes&&(realName=node.attributes["data-cke-real-element-type"])){name=realName;
}else{name=node.name;
}return name&&name in CKEDITOR.dtd.$inline&&!(name in CKEDITOR.dtd.head)&&!node.isOrphan||node.type==CKEDITOR.NODE_TEXT;
}}function possiblySibling(tag1,tag2){if(tag1 in CKEDITOR.dtd.$listItem||tag1 in CKEDITOR.dtd.$tableContent){return tag1==tag2||tag1=="dt"&&tag2=="dd"||tag1=="dd"&&tag2=="dt";
}return false;
}parser.onTagOpen=function(tagName,attributes,selfClosing,optionalClose){var element=new CKEDITOR.htmlParser.element(tagName,attributes);
if(element.isUnknown&&selfClosing){element.isEmpty=true;
}element.isOptionalClose=optionalClose;
if(isRemoveEmpty(element)){pendingInline.push(element);
return;
}else{if(tagName=="pre"){inPre=true;
}else{if(tagName=="br"&&inPre){currentNode.add(new CKEDITOR.htmlParser.text("\n"));
return;
}else{if(tagName=="textarea"){inTextarea=true;
}}}}if(tagName=="br"){pendingBRs.push(element);
return;
}while(1){var currentName=currentNode.name;
var currentDtd=currentName?(CKEDITOR.dtd[currentName]||(currentNode._.isBlockLike?CKEDITOR.dtd.div:CKEDITOR.dtd.span)):rootDtd;
if(!element.isUnknown&&!currentNode.isUnknown&&!currentDtd[tagName]){if(currentNode.isOptionalClose){parser.onTagClose(currentName);
}else{if(tagName in listBlocks&&currentName in listBlocks){var children=currentNode.children,lastChild=children[children.length-1];
if(!(lastChild&&lastChild.name=="li")){addElement((lastChild=new CKEDITOR.htmlParser.element("li")),currentNode);
}!element.returnPoint&&(element.returnPoint=currentNode);
currentNode=lastChild;
}else{if(tagName in CKEDITOR.dtd.$listItem&&!possiblySibling(tagName,currentName)){parser.onTagOpen(tagName=="li"?"ul":"dl",{},0,1);
}else{if(currentName in nonBreakingBlocks&&!possiblySibling(tagName,currentName)){!element.returnPoint&&(element.returnPoint=currentNode);
currentNode=currentNode.parent;
}else{if(currentName in CKEDITOR.dtd.$inline){pendingInline.unshift(currentNode);
}if(currentNode.parent){addElement(currentNode,currentNode.parent,1);
}else{element.isOrphan=1;
break;
}}}}}}else{break;
}}checkPending(tagName);
sendPendingBRs();
element.parent=currentNode;
if(element.isEmpty){addElement(element);
}else{currentNode=element;
}};
parser.onTagClose=function(tagName){for(var i=pendingInline.length-1;
i>=0;
i--){if(tagName==pendingInline[i].name){pendingInline.splice(i,1);
return;
}}var pendingAdd=[],newPendingInline=[],candidate=currentNode;
while(candidate!=root&&candidate.name!=tagName){if(!candidate._.isBlockLike){newPendingInline.unshift(candidate);
}pendingAdd.push(candidate);
candidate=candidate.returnPoint||candidate.parent;
}if(candidate!=root){for(i=0;
i<pendingAdd.length;
i++){var node=pendingAdd[i];
addElement(node,node.parent);
}currentNode=candidate;
if(candidate._.isBlockLike){sendPendingBRs();
}addElement(candidate,candidate.parent);
if(candidate==currentNode){currentNode=currentNode.parent;
}pendingInline=pendingInline.concat(newPendingInline);
}if(tagName=="body"){fixingBlock=false;
}};
parser.onText=function(text){if((!currentNode._.hasInlineStarted||pendingBRs.length)&&!inPre&&!inTextarea){text=CKEDITOR.tools.ltrim(text);
if(text.length===0){return;
}}var currentName=currentNode.name,currentDtd=currentName?(CKEDITOR.dtd[currentName]||(currentNode._.isBlockLike?CKEDITOR.dtd.div:CKEDITOR.dtd.span)):rootDtd;
if(!inTextarea&&!currentDtd["#"]&&currentName in nonBreakingBlocks){parser.onTagOpen(currentName in listBlocks?"li":currentName=="dl"?"dd":currentName=="table"?"tr":currentName=="tr"?"td":"");
parser.onText(text);
return;
}sendPendingBRs();
checkPending();
if(!inPre&&!inTextarea){text=text.replace(/[\t\r\n ]{2,}|[\t\r\n]/g," ");
}text=new CKEDITOR.htmlParser.text(text);
if(checkAutoParagraphing(currentNode,text)){this.onTagOpen(fixingBlock,{},0,1);
}currentNode.add(text);
};
parser.onCDATA=function(cdata){currentNode.add(new CKEDITOR.htmlParser.cdata(cdata));
};
parser.onComment=function(comment){sendPendingBRs();
checkPending();
currentNode.add(new CKEDITOR.htmlParser.comment(comment));
};
parser.parse(fragmentHtml);
sendPendingBRs(!CKEDITOR.env.ie&&1);
while(currentNode!=root){addElement(currentNode,currentNode.parent,1);
}removeTailWhitespace(root);
return root;
};
CKEDITOR.htmlParser.fragment.prototype={type:CKEDITOR.NODE_DOCUMENT_FRAGMENT,add:function(node,index){isNaN(index)&&(index=this.children.length);
var previous=index>0?this.children[index-1]:null;
if(previous){if(node._.isBlockLike&&previous.type==CKEDITOR.NODE_TEXT){previous.value=CKEDITOR.tools.rtrim(previous.value);
if(previous.value.length===0){this.children.pop();
this.add(node);
return;
}}previous.next=node;
}node.previous=previous;
node.parent=this;
this.children.splice(index,0,node);
if(!this._.hasInlineStarted){this._.hasInlineStarted=node.type==CKEDITOR.NODE_TEXT||(node.type==CKEDITOR.NODE_ELEMENT&&!node._.isBlockLike);
}},filter:function(filter){filter.onRoot(this);
this.filterChildren(filter);
},filterChildren:function(filter,filterRoot){if(this.childrenFilteredBy==filter.id){return;
}if(filterRoot&&!this.parent){filter.onRoot(this);
}this.childrenFilteredBy=filter.id;
for(var i=0;
i<this.children.length;
i++){if(this.children[i].filter(filter)===false){i--;
}}},writeHtml:function(writer,filter){if(filter){this.filter(filter);
}this.writeChildrenHtml(writer);
},writeChildrenHtml:function(writer,filter,filterRoot){if(filterRoot&&!this.parent&&filter){filter.onRoot(this);
}if(filter){this.filterChildren(filter);
}for(var i=0,children=this.children,l=children.length;
i<l;
i++){children[i].writeHtml(writer);
}},forEach:function(callback,type,skipRoot){if(!skipRoot&&(!type||this.type==type)){callback(this);
}var children=this.children,node,i=0,l=children.length;
for(;
i<l;
i++){node=children[i];
if(node.type==CKEDITOR.NODE_ELEMENT){node.forEach(callback,type);
}else{if(!type||node.type==type){callback(node);
}}}}};
})();
(function(){CKEDITOR.htmlParser.filter=CKEDITOR.tools.createClass({$:function(rules){this.id=CKEDITOR.tools.getNextNumber();
this._={elementNames:[],attributeNames:[],elements:{$length:0},attributes:{$length:0}};
if(rules){this.addRules(rules,10);
}},proto:{addRules:function(rules,priority){if(typeof priority!="number"){priority=10;
}addItemsToList(this._.elementNames,rules.elementNames,priority);
addItemsToList(this._.attributeNames,rules.attributeNames,priority);
addNamedItems(this._.elements,rules.elements,priority);
addNamedItems(this._.attributes,rules.attributes,priority);
this._.text=transformNamedItem(this._.text,rules.text,priority)||this._.text;
this._.comment=transformNamedItem(this._.comment,rules.comment,priority)||this._.comment;
this._.root=transformNamedItem(this._.root,rules.root,priority)||this._.root;
},applyTo:function(node){node.filter(this);
},onElementName:function(name){return filterName(name,this._.elementNames);
},onAttributeName:function(name){return filterName(name,this._.attributeNames);
},onText:function(text){var textFilter=this._.text;
return textFilter?textFilter.filter(text):text;
},onComment:function(commentText,comment){var textFilter=this._.comment;
return textFilter?textFilter.filter(commentText,comment):commentText;
},onRoot:function(element){var rootFilter=this._.root;
return rootFilter?rootFilter.filter(element):element;
},onElement:function(element){var filters=[this._.elements["^"],this._.elements[element.name],this._.elements.$],filter,ret;
for(var i=0;
i<3;
i++){filter=filters[i];
if(filter){ret=filter.filter(element,this);
if(ret===false){return null;
}if(ret&&ret!=element){return this.onNode(ret);
}if(element.parent&&!element.name){break;
}}}return element;
},onNode:function(node){var type=node.type;
return type==CKEDITOR.NODE_ELEMENT?this.onElement(node):type==CKEDITOR.NODE_TEXT?new CKEDITOR.htmlParser.text(this.onText(node.value)):type==CKEDITOR.NODE_COMMENT?new CKEDITOR.htmlParser.comment(this.onComment(node.value)):null;
},onAttribute:function(element,name,value){var filter=this._.attributes[name];
if(filter){var ret=filter.filter(value,element,this);
if(ret===false){return false;
}if(typeof ret!="undefined"){return ret;
}}return value;
}}});
function filterName(name,filters){for(var i=0;
name&&i<filters.length;
i++){var filter=filters[i];
name=name.replace(filter[0],filter[1]);
}return name;
}function addItemsToList(list,items,priority){if(typeof items=="function"){items=[items];
}var i,j,listLength=list.length,itemsLength=items&&items.length;
if(itemsLength){for(i=0;
i<listLength&&list[i].pri<=priority;
i++){}for(j=itemsLength-1;
j>=0;
j--){var item=items[j];
if(item){item.pri=priority;
list.splice(i,0,item);
}}}}function addNamedItems(hashTable,items,priority){if(items){for(var name in items){var current=hashTable[name];
hashTable[name]=transformNamedItem(current,items[name],priority);
if(!current){hashTable.$length++;
}}}}function transformNamedItem(current,item,priority){if(item){item.pri=priority;
if(current){if(!current.splice){if(current.pri>priority){current=[item,current];
}else{current=[current,item];
}current.filter=callItems;
}else{addItemsToList(current,item,priority);
}return current;
}else{item.filter=item;
return item;
}}}function callItems(currentEntry){var isNode=currentEntry.type||currentEntry instanceof CKEDITOR.htmlParser.fragment;
for(var i=0;
i<this.length;
i++){if(isNode){var orgType=currentEntry.type,orgName=currentEntry.name;
}var item=this[i],ret=item.apply(window,arguments);
if(ret===false){return ret;
}if(isNode){if(ret&&(ret.name!=orgName||ret.type!=orgType)){return ret;
}}else{if(typeof ret!="string"){return ret;
}}ret!=undefined&&(currentEntry=ret);
}return currentEntry;
}})();
(function(){CKEDITOR.htmlDataProcessor=function(editor){var dataFilter,htmlFilter,that=this;
this.editor=editor;
this.dataFilter=dataFilter=new CKEDITOR.htmlParser.filter();
this.htmlFilter=htmlFilter=new CKEDITOR.htmlParser.filter();
this.writer=new CKEDITOR.htmlParser.basicWriter();
dataFilter.addRules(defaultDataFilterRules);
dataFilter.addRules(createBogusAndFillerRules(editor,"data"));
htmlFilter.addRules(defaultHtmlFilterRules);
htmlFilter.addRules(createBogusAndFillerRules(editor,"html"));
editor.on("toHtml",function(evt){var evtData=evt.data,data=evtData.dataValue;
data=protectSource(data,editor);
data=protectAttributes(data);
data=protectElements(data);
data=protectElementsNames(data);
data=protectSelfClosingElements(data);
data=protectPreFormatted(data);
var fixBin=evtData.context||editor.editable().getName(),isPre;
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9&&fixBin=="pre"){fixBin="div";
data="<pre>"+data+"</pre>";
isPre=1;
}var el=editor.document.createElement(fixBin);
el.setHtml("a"+data);
data=el.getHtml().substr(1);
data=data.replace(new RegExp(" data-cke-"+CKEDITOR.rnd+"-","ig")," ");
isPre&&(data=data.replace(/^<pre>|<\/pre>$/gi,""));
data=unprotectElementNames(data);
data=unprotectElements(data);
data=unprotectRealComments(data);
evtData.dataValue=CKEDITOR.htmlParser.fragment.fromHtml(data,evtData.context,evtData.fixForBody===false?false:getFixBodyTag(editor.config));
},null,null,5);
editor.on("toHtml",function(evt){evt.data.dataValue.filterChildren(that.dataFilter,true);
},null,null,10);
editor.on("toHtml",function(evt){var evtData=evt.data,data=evtData.dataValue,writer=new CKEDITOR.htmlParser.basicWriter();
data.writeChildrenHtml(writer);
data=writer.getHtml(true);
evtData.dataValue=protectRealComments(data);
},null,null,15);
editor.on("toDataFormat",function(evt){evt.data.dataValue=CKEDITOR.htmlParser.fragment.fromHtml(evt.data.dataValue,editor.editable().getName(),getFixBodyTag(editor.config));
},null,null,5);
editor.on("toDataFormat",function(evt){evt.data.dataValue.filterChildren(that.htmlFilter,true);
},null,null,10);
editor.on("toDataFormat",function(evt){var data=evt.data.dataValue,writer=that.writer;
writer.reset();
data.writeChildrenHtml(writer);
data=writer.getHtml(true);
data=unprotectRealComments(data);
data=unprotectSource(data,editor);
evt.data.dataValue=data;
},null,null,15);
};
CKEDITOR.htmlDataProcessor.prototype={toHtml:function(data,context,fixForBody,dontFilter){var editor=this.editor;
if(!context&&context!==null){context=editor.editable().getName();
}return editor.fire("toHtml",{dataValue:data,context:context,fixForBody:fixForBody,dontFilter:!!dontFilter}).dataValue;
},toDataFormat:function(html){return this.editor.fire("toDataFormat",{dataValue:html}).dataValue;
}};
function createBogusAndFillerRules(editor,type){function createFiller(isOutput){return isOutput||CKEDITOR.env.ie?new CKEDITOR.htmlParser.text("\xa0"):new CKEDITOR.htmlParser.element("br",{"data-cke-bogus":1});
}function blockFilter(isOutput,fillEmptyBlock){return function(block){if(editor.htmlParser_skipFiller){return;
}if(block.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT){return;
}cleanBogus(block);
if(((CKEDITOR.env.opera&&!isOutput)||(typeof fillEmptyBlock=="function"?fillEmptyBlock(block)!==false:fillEmptyBlock))&&isEmptyBlockNeedFiller(block)){block.add(createFiller(isOutput));
}};
}function brFilter(isOutput){return function(br){if(editor.htmlParser_skipFiller){return;
}if(br.parent.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT){return;
}var attrs=br.attributes;
if("data-cke-bogus" in attrs||"data-cke-eol" in attrs){delete attrs["data-cke-bogus"];
return;
}var next=getNext(br),previous=getPrevious(br);
if(!next&&isBlockBoundary(br.parent)){append(br.parent,createFiller(isOutput));
}else{if(isBlockBoundary(next)&&previous&&!isBlockBoundary(previous)){insertBefore(next,createFiller(isOutput));
}}};
}function maybeBogus(node,atBlockEnd){if(!(isOutput&&CKEDITOR.env.ie)&&node.type==CKEDITOR.NODE_ELEMENT&&node.name=="br"&&!node.attributes["data-cke-eol"]){return true;
}var match;
if(node.type==CKEDITOR.NODE_TEXT&&(match=node.value.match(tailNbspRegex))){if(match.index){insertBefore(node,new CKEDITOR.htmlParser.text(node.value.substring(0,match.index)));
node.value=match[0];
}if(CKEDITOR.env.ie&&isOutput&&(!atBlockEnd||node.parent.name in textBlockTags)){return true;
}if(!isOutput){var previous=node.previous;
if(previous&&previous.name=="br"){return true;
}if(!previous||isBlockBoundary(previous)){return true;
}}}return false;
}function cleanBogus(block){if(editor.htmlParser_skipFiller){return;
}var bogus=[];
var last=getLast(block),node,previous;
if(last){maybeBogus(last,1)&&bogus.push(last);
while(last){if(isBlockBoundary(last)&&(node=getPrevious(last))&&maybeBogus(node)){if((previous=getPrevious(node))&&!isBlockBoundary(previous)){bogus.push(node);
}else{insertAfter(node,createFiller(isOutput));
removeFromParent(node);
}}last=last.previous;
}}for(var i=0;
i<bogus.length;
i++){removeFromParent(bogus[i]);
}}function isEmptyBlockNeedFiller(block){if(!isOutput&&CKEDITOR.env.ie&&block.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT){return false;
}if(!isOutput&&CKEDITOR.env.ie&&(document.documentMode>7||block.name in CKEDITOR.dtd.tr||block.name in CKEDITOR.dtd.$listItem)){return false;
}var last=getLast(block);
return !last||block.name=="form"&&last.name=="input";
}var rules={elements:{}};
var isOutput=type=="html";
var textBlockTags=CKEDITOR.tools.extend({},blockLikeTags);
for(var i in textBlockTags){if(!("#" in dtd[i])){delete textBlockTags[i];
}}for(i in textBlockTags){rules.elements[i]=blockFilter(isOutput,editor.config.fillEmptyBlocks!==false);
}rules.root=blockFilter(isOutput);
rules.elements.br=brFilter(isOutput);
return rules;
}function getFixBodyTag(config){return(config.enterMode!=CKEDITOR.ENTER_BR&&config.autoParagraph!==false)?config.enterMode==CKEDITOR.ENTER_DIV?"div":"p":false;
}var tailNbspRegex=/(?:&nbsp;|\xa0)$/;
var protectedSourceMarker="{cke_protected}";
function getLast(node){var last=node.children[node.children.length-1];
while(last&&isEmpty(last)){last=last.previous;
}return last;
}function getNext(node){var next=node.next;
while(next&&isEmpty(next)){next=next.next;
}return next;
}function getPrevious(node){var previous=node.previous;
while(previous&&isEmpty(previous)){previous=previous.previous;
}return previous;
}function isEmpty(node){return node.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.trim(node.value)||node.type==CKEDITOR.NODE_ELEMENT&&node.attributes["data-cke-bookmark"];
}function isBlockBoundary(node){return node&&(node.type==CKEDITOR.NODE_ELEMENT&&node.name in blockLikeTags||node.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT);
}function insertAfter(node,insertion){var children=node.parent.children;
var index=CKEDITOR.tools.indexOf(children,node);
children.splice(index+1,0,insertion);
var next=node.next;
node.next=insertion;
insertion.previous=node;
insertion.parent=node.parent;
insertion.next=next;
}function insertBefore(node,insertion){var children=node.parent.children;
var index=CKEDITOR.tools.indexOf(children,node);
children.splice(index,0,insertion);
var prev=node.previous;
node.previous=insertion;
insertion.next=node;
insertion.parent=node.parent;
if(prev){insertion.previous=prev;
prev.next=insertion;
}}function append(parent,node){var last=parent.children[parent.children.length-1];
parent.children.push(node);
node.parent=parent;
if(last){last.next=node;
node.previous=last;
}}function removeFromParent(node){var children=node.parent.children;
var index=CKEDITOR.tools.indexOf(children,node);
var previous=node.previous,next=node.next;
previous&&(previous.next=next);
next&&(next.previous=previous);
children.splice(index,1);
}function getNodeIndex(node){var parent=node.parent;
return parent?CKEDITOR.tools.indexOf(parent.children,node):-1;
}var dtd=CKEDITOR.dtd;
var tableOrder=["caption","colgroup","col","thead","tfoot","tbody"];
var blockLikeTags=CKEDITOR.tools.extend({},dtd.$blockLimit,dtd.$block);
var defaultDataFilterRules={elements:{},attributeNames:[[(/^on/),"data-cke-pa-on"]]};
var defaultHtmlFilterRules={elementNames:[[(/^cke:/),""],[(/^\?xml:namespace$/),""]],attributeNames:[[(/^data-cke-(saved|pa)-/),""],[(/^data-cke-.*/),""],["hidefocus",""]],elements:{$:function(element){var attribs=element.attributes;
if(attribs){if(attribs["data-cke-temp"]){return false;
}var attributeNames=["name","href","src"],savedAttributeName;
for(var i=0;
i<attributeNames.length;
i++){savedAttributeName="data-cke-saved-"+attributeNames[i];
savedAttributeName in attribs&&(delete attribs[attributeNames[i]]);
}}return element;
},table:function(element){var children=element.children.slice(0);
children.sort(function(node1,node2){var index1,index2;
if(node1.type==CKEDITOR.NODE_ELEMENT&&node2.type==node1.type){index1=CKEDITOR.tools.indexOf(tableOrder,node1.name);
index2=CKEDITOR.tools.indexOf(tableOrder,node2.name);
}if(!(index1>-1&&index2>-1&&index1!=index2)){index1=getNodeIndex(node1);
index2=getNodeIndex(node2);
}return index1>index2?1:-1;
});
},embed:function(element){var parent=element.parent;
if(parent&&parent.name=="object"){var parentWidth=parent.attributes.width,parentHeight=parent.attributes.height;
parentWidth&&(element.attributes.width=parentWidth);
parentHeight&&(element.attributes.height=parentHeight);
}},param:function(param){param.children=[];
param.isEmpty=true;
return param;
},a:function(element){if(!(element.children.length||element.attributes.name||element.attributes["data-cke-saved-name"])){return false;
}},span:function(element){if(element.attributes["class"]=="Apple-style-span"){delete element.name;
}},html:function(element){delete element.attributes.contenteditable;
delete element.attributes["class"];
},body:function(element){delete element.attributes.spellcheck;
delete element.attributes.contenteditable;
},style:function(element){var child=element.children[0];
child&&child.value&&(child.value=CKEDITOR.tools.trim(child.value));
if(!element.attributes.type){element.attributes.type="text/css";
}},title:function(element){var titleText=element.children[0];
!titleText&&append(element,titleText=new CKEDITOR.htmlParser.text());
titleText.value=element.attributes["data-cke-title"]||"";
}},attributes:{"class":function(value,element){return CKEDITOR.tools.ltrim(value.replace(/(?:^|\s+)cke_[^\s]*/g,""))||false;
}}};
if(CKEDITOR.env.ie){defaultHtmlFilterRules.attributes.style=function(value,element){return value.replace(/(^|;)([^\:]+)/g,function(match){return match.toLowerCase();
});
};
}function protectReadOnly(element){var attrs=element.attributes;
if(attrs.contenteditable!="false"){attrs["data-cke-editable"]=attrs.contenteditable?"true":1;
}attrs.contenteditable="false";
}function unprotectReadyOnly(element){var attrs=element.attributes;
switch(attrs["data-cke-editable"]){case"true":attrs.contenteditable="true";
break;
case"1":delete attrs.contenteditable;
break;
}}for(var i in {input:1,textarea:1}){defaultDataFilterRules.elements[i]=protectReadOnly;
defaultHtmlFilterRules.elements[i]=unprotectReadyOnly;
}var protectElementRegex=/<(a|area|img|input|source)\b([^>]*)>/gi,protectAttributeRegex=/\b(on\w+|href|src|name)\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|(?:[^ "'>]+))/gi;
var protectElementsRegex=/(?:<style(?=[ >])[^>]*>[\s\S]*<\/style>)|(?:<(:?link|meta|base)[^>]*>)/gi,encodedElementsRegex=/<cke:encoded>([^<]*)<\/cke:encoded>/gi;
var protectElementNamesRegex=/(<\/?)((?:object|embed|param|html|body|head|title)[^>]*>)/gi,unprotectElementNamesRegex=/(<\/?)cke:((?:html|body|head|title)[^>]*>)/gi;
var protectSelfClosingRegex=/<cke:(param|embed)([^>]*?)\/?>(?!\s*<\/cke:\1)/gi;
function protectAttributes(html){return html.replace(protectElementRegex,function(element,tag,attributes){return"<"+tag+attributes.replace(protectAttributeRegex,function(fullAttr,attrName){if(!(/^on/).test(attrName)&&attributes.indexOf("data-cke-saved-"+attrName)==-1){return" data-cke-saved-"+fullAttr+" data-cke-"+CKEDITOR.rnd+"-"+fullAttr;
}return fullAttr;
})+">";
});
}function protectElements(html){return html.replace(protectElementsRegex,function(match){return"<cke:encoded>"+encodeURIComponent(match)+"</cke:encoded>";
});
}function unprotectElements(html){return html.replace(encodedElementsRegex,function(match,encoded){return decodeURIComponent(encoded);
});
}function protectElementsNames(html){return html.replace(protectElementNamesRegex,"$1cke:$2");
}function unprotectElementNames(html){return html.replace(unprotectElementNamesRegex,"$1$2");
}function protectSelfClosingElements(html){return html.replace(protectSelfClosingRegex,"<cke:$1$2></cke:$1>");
}function protectPreFormatted(html){return CKEDITOR.env.opera?html:html.replace(/(<pre\b[^>]*>)(\r\n|\n)/g,"$1$2$2");
}function protectRealComments(html){return html.replace(/<!--(?!{cke_protected})[\s\S]+?-->/g,function(match){return"<!--"+protectedSourceMarker+"{C}"+encodeURIComponent(match).replace(/--/g,"%2D%2D")+"-->";
});
}function unprotectRealComments(html){return html.replace(/<!--\{cke_protected\}\{C\}([\s\S]+?)-->/g,function(match,data){return decodeURIComponent(data);
});
}function unprotectSource(html,editor){var store=editor._.dataStore;
return html.replace(/<!--\{cke_protected\}([\s\S]+?)-->/g,function(match,data){return decodeURIComponent(data);
}).replace(/\{cke_protected_(\d+)\}/g,function(match,id){return store&&store[id]||"";
});
}function protectSource(data,editor){var protectedHtml=[],protectRegexes=editor.config.protectedSource,store=editor._.dataStore||(editor._.dataStore={id:1}),tempRegex=/<\!--\{cke_temp(comment)?\}(\d*?)-->/g;
var regexes=[(/<script[\s\S]*?<\/script>/gi),/<noscript[\s\S]*?<\/noscript>/gi].concat(protectRegexes);
data=data.replace((/<!--[\s\S]*?-->/g),function(match){return"<!--{cke_tempcomment}"+(protectedHtml.push(match)-1)+"-->";
});
for(var i=0;
i<regexes.length;
i++){data=data.replace(regexes[i],function(match){match=match.replace(tempRegex,function($,isComment,id){return protectedHtml[id];
});
return(/cke_temp(comment)?/).test(match)?match:"<!--{cke_temp}"+(protectedHtml.push(match)-1)+"-->";
});
}data=data.replace(tempRegex,function($,isComment,id){return"<!--"+protectedSourceMarker+(isComment?"{C}":"")+encodeURIComponent(protectedHtml[id]).replace(/--/g,"%2D%2D")+"-->";
});
return data.replace(/(['"]).*?\1/g,function(match){return match.replace(/<!--\{cke_protected\}([\s\S]+?)-->/g,function(match,data){store[store.id]=decodeURIComponent(data);
return"{cke_protected_"+(store.id++)+"}";
});
});
}})();
"use strict";
CKEDITOR.htmlParser.element=function(name,attributes){this.name=name;
this.attributes=attributes||{};
this.children=[];
var realName=name||"",prefixed=realName.match(/^cke:(.*)/);
prefixed&&(realName=prefixed[1]);
var isBlockLike=!!(CKEDITOR.dtd.$nonBodyContent[realName]||CKEDITOR.dtd.$block[realName]||CKEDITOR.dtd.$listItem[realName]||CKEDITOR.dtd.$tableContent[realName]||CKEDITOR.dtd.$nonEditable[realName]||realName=="br");
this.isEmpty=!!CKEDITOR.dtd.$empty[name];
this.isUnknown=!CKEDITOR.dtd[name];
this._={isBlockLike:isBlockLike,hasInlineStarted:this.isEmpty||!isBlockLike};
};
CKEDITOR.htmlParser.cssStyle=function(){var styleText,arg=arguments[0],rules={};
styleText=arg instanceof CKEDITOR.htmlParser.element?arg.attributes.style:arg;
(styleText||"").replace(/&quot;/g,'"').replace(/\s*([^ :;]+)\s*:\s*([^;]+)\s*(?=;|$)/g,function(match,name,value){name=="font-family"&&(value=value.replace(/["']/g,""));
rules[name.toLowerCase()]=value;
});
return{rules:rules,populate:function(obj){var style=this.toString();
if(style){obj instanceof CKEDITOR.dom.element?obj.setAttribute("style",style):obj instanceof CKEDITOR.htmlParser.element?obj.attributes.style=style:obj.style=style;
}},toString:function(){var output=[];
for(var i in rules){rules[i]&&output.push(i,":",rules[i],";");
}return output.join("");
}};
};
(function(){var sortAttribs=function(a,b){a=a[0];
b=b[0];
return a<b?-1:a>b?1:0;
},fragProto=CKEDITOR.htmlParser.fragment.prototype;
CKEDITOR.htmlParser.element.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node(),{type:CKEDITOR.NODE_ELEMENT,add:fragProto.add,clone:function(){return new CKEDITOR.htmlParser.element(this.name,this.attributes);
},filter:function(filter){var element=this,originalName,name;
if(!element.parent){filter.onRoot(element);
}while(true){originalName=element.name;
if(!(name=filter.onElementName(originalName))){this.remove();
return false;
}element.name=name;
if(!(element=filter.onElement(element))){this.remove();
return false;
}if(element!==this){this.replaceWith(element);
return false;
}if(element.name==originalName){break;
}if(element.type!=CKEDITOR.NODE_ELEMENT){this.replaceWith(element);
return false;
}if(!element.name){this.replaceWithChildren();
return false;
}}var attributes=element.attributes,a,value,newAttrName;
for(a in attributes){newAttrName=a;
value=attributes[a];
while(true){if(!(newAttrName=filter.onAttributeName(a))){delete attributes[a];
break;
}else{if(newAttrName!=a){delete attributes[a];
a=newAttrName;
continue;
}else{break;
}}}if(newAttrName){if((value=filter.onAttribute(element,newAttrName,value))===false){delete attributes[newAttrName];
}else{attributes[newAttrName]=value;
}}}if(!element.isEmpty){this.filterChildren(filter);
}return true;
},filterChildren:fragProto.filterChildren,writeHtml:function(writer,filter){if(filter){this.filter(filter);
}var name=this.name,attribsArray=[],attributes=this.attributes,attrName,attr,i,l;
writer.openTag(name,attributes);
for(attrName in attributes){attribsArray.push([attrName,attributes[attrName]]);
}if(writer.sortAttributes){attribsArray.sort(sortAttribs);
}for(i=0,l=attribsArray.length;
i<l;
i++){attr=attribsArray[i];
writer.attribute(attr[0],attr[1]);
}writer.openTagClose(name,this.isEmpty);
this.writeChildrenHtml(writer);
if(!this.isEmpty){writer.closeTag(name);
}},writeChildrenHtml:fragProto.writeChildrenHtml,replaceWithChildren:function(){var children=this.children;
for(var i=children.length;
i;
){children[--i].insertAfter(this);
}this.remove();
},forEach:fragProto.forEach});
})();
(function(){var cache={};
CKEDITOR.template=function(source){if(cache[source]){this.output=cache[source];
}else{var fn=source.replace(/'/g,"\\'").replace(/{([^}]+)}/g,function(m,key){return"',data['"+key+"']==undefined?'{"+key+"}':data['"+key+"'],'";
});
fn="return buffer?buffer.push('"+fn+"'):['"+fn+"'].join('');";
this.output=cache[source]=Function("data","buffer",fn);
}};
})();
delete CKEDITOR.loadFullCore;
CKEDITOR.instances={};
CKEDITOR.document=new CKEDITOR.dom.document(document);
CKEDITOR.add=function(editor){CKEDITOR.instances[editor.name]=editor;
editor.on("focus",function(){if(CKEDITOR.currentInstance!=editor){CKEDITOR.currentInstance=editor;
CKEDITOR.fire("currentInstance");
}});
editor.on("blur",function(){if(CKEDITOR.currentInstance==editor){CKEDITOR.currentInstance=null;
CKEDITOR.fire("currentInstance");
}});
CKEDITOR.fire("instance",null,editor);
};
CKEDITOR.remove=function(editor){delete CKEDITOR.instances[editor.name];
};
(function(){var tpls={};
CKEDITOR.addTemplate=function(name,source){var tpl=tpls[name];
if(tpl){return tpl;
}var params={name:name,source:source};
CKEDITOR.fire("template",params);
return(tpls[name]=new CKEDITOR.template(params.source));
};
CKEDITOR.getTemplate=function(name){return tpls[name];
};
})();
(function(){var styles=[];
CKEDITOR.addCss=function(css){styles.push(css);
};
CKEDITOR.getCss=function(){return styles.join("\n");
};
})();
CKEDITOR.on("instanceDestroyed",function(){if(CKEDITOR.tools.isEmpty(this.instances)){CKEDITOR.fire("reset");
}});
if(CKEDITOR.loader){CKEDITOR.loader.load("_bootstrap");
}CKEDITOR.TRISTATE_ON=1;
CKEDITOR.TRISTATE_OFF=2;
CKEDITOR.TRISTATE_DISABLED=0;
CKEDITOR.replaceClass="ckeditor";
(function(){CKEDITOR.replace=function(element,config){return createInstance(element,config,null,CKEDITOR.ELEMENT_MODE_REPLACE);
};
CKEDITOR.appendTo=function(element,config,data){return createInstance(element,config,data,CKEDITOR.ELEMENT_MODE_APPENDTO);
};
CKEDITOR.replaceAll=function(){var textareas=document.getElementsByTagName("textarea");
for(var i=0;
i<textareas.length;
i++){var config=null,textarea=textareas[i];
if(!textarea.name&&!textarea.id){continue;
}if(typeof arguments[0]=="string"){var classRegex=new RegExp("(?:^|\\s)"+arguments[0]+"(?:$|\\s)");
if(!classRegex.test(textarea.className)){continue;
}}else{if(typeof arguments[0]=="function"){config={};
if(arguments[0](textarea,config)===false){continue;
}}}this.replace(textarea,config);
}};
CKEDITOR.editor.prototype.addMode=function(mode,exec){(this._.modes||(this._.modes={}))[mode]=exec;
};
CKEDITOR.editor.prototype.setMode=function(newMode,callback){var editor=this;
var modes=this._.modes;
if(newMode==editor.mode||!modes||!modes[newMode]){return;
}editor.fire("beforeSetMode",newMode);
if(editor.mode){var isDirty=editor.checkDirty();
editor._.previousMode=editor.mode;
editor.fire("beforeModeUnload");
editor.editable(0);
editor.ui.space("contents").setHtml("");
editor.mode="";
}this._.modes[newMode](function(){editor.mode=newMode;
if(isDirty!==undefined){!isDirty&&editor.resetDirty();
}setTimeout(function(){editor.fire("mode");
callback&&callback.call(editor);
},0);
});
};
CKEDITOR.editor.prototype.resize=function(width,height,isContentHeight,resizeInner){var container=this.container,contents=this.ui.space("contents"),contentsFrame=CKEDITOR.env.webkit&&this.document&&this.document.getWindow().$.frameElement,outer=resizeInner?container.getChild(1):container;
outer.setSize("width",width,true);
contentsFrame&&(contentsFrame.style.width="1%");
var delta=isContentHeight?0:(outer.$.offsetHeight||0)-(contents.$.clientHeight||0);
contents.setStyle("height",Math.max(height-delta,0)+"px");
contentsFrame&&(contentsFrame.style.width="100%");
this.fire("resize");
};
CKEDITOR.editor.prototype.getResizable=function(forContents){return forContents?this.ui.space("contents"):this.container;
};
function createInstance(element,config,data,mode){if(!CKEDITOR.env.isCompatible){return null;
}element=CKEDITOR.dom.element.get(element);
if(element.getEditor()){throw'The editor instance "'+element.getEditor().name+'" is already attached to the provided element.';
}var editor=new CKEDITOR.editor(config,element,mode);
if(mode==CKEDITOR.ELEMENT_MODE_REPLACE){element.setStyle("visibility","hidden");
}data&&editor.setData(data,null,true);
editor.on("loaded",function(){loadTheme(editor);
if(mode==CKEDITOR.ELEMENT_MODE_REPLACE&&editor.config.autoUpdateElement){attachToForm(editor);
}editor.setMode(editor.config.startupMode,function(){editor.resetDirty();
editor.status="ready";
editor.fireOnce("instanceReady");
CKEDITOR.fire("instanceReady",null,editor);
});
});
editor.on("destroy",destroy);
return editor;
}function destroy(){var editor=this,container=editor.container,element=editor.element;
if(container){container.clearCustomData();
container.remove();
}if(element){element.clearCustomData();
editor.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&element.show();
delete editor.element;
}}var themedTpl;
function loadTheme(editor){var name=editor.name,element=editor.element,elementMode=editor.elementMode;
var topHtml=editor.fire("uiSpace",{space:"top",html:""}).html;
var bottomHtml=editor.fire("uiSpace",{space:"bottom",html:""}).html;
if(!themedTpl){themedTpl=CKEDITOR.addTemplate("maincontainer",'<{outerEl} id="cke_{name}" class="{id} cke cke_reset cke_chrome cke_editor_{name} cke_{langDir} '+CKEDITOR.env.cssClass+'"  dir="{langDir}" lang="{langCode}" role="application" aria-labelledby="cke_{name}_arialbl"><span id="cke_{name}_arialbl" class="cke_voice_label">{voiceLabel}</span><{outerEl} class="cke_inner cke_reset" role="presentation">{topHtml}<{outerEl} id="{contentId}" class="cke_contents cke_reset" role="presentation"></{outerEl}>{bottomHtml}</{outerEl}></{outerEl}>');
}var container=CKEDITOR.dom.element.createFromHtml(themedTpl.output({id:editor.id,name:name,langDir:editor.lang.dir,langCode:editor.langCode,voiceLabel:editor.lang.editor,topHtml:topHtml?'<span id="'+editor.ui.spaceId("top")+'" class="cke_top cke_reset_all" role="presentation" style="height:auto">'+topHtml+"</span>":"",contentId:editor.ui.spaceId("contents"),bottomHtml:bottomHtml?'<span id="'+editor.ui.spaceId("bottom")+'" class="cke_bottom cke_reset_all" role="presentation">'+bottomHtml+"</span>":"",outerEl:"div"}));
if(elementMode==CKEDITOR.ELEMENT_MODE_REPLACE){element.hide();
container.insertAfter(element);
}else{element.append(container);
}editor.container=container;
topHtml&&editor.ui.space("top").unselectable();
bottomHtml&&editor.ui.space("bottom").unselectable();
var width=editor.config.width,height=editor.config.height;
if(width){container.setStyle("width",CKEDITOR.tools.cssLength(width));
}if(height){editor.ui.space("contents").setStyle("height",CKEDITOR.tools.cssLength(height));
}container.disableContextMenu();
CKEDITOR.env.webkit&&container.on("focus",function(){editor.focus();
});
editor.fireOnce("uiReady");
}function attachToForm(editor){var element=editor.element;
if(editor.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&element.is("textarea")){var form=element.$.form&&new CKEDITOR.dom.element(element.$.form);
if(form){function onSubmit(){editor.updateElement();
}form.on("submit",onSubmit);
if(!form.$.submit.nodeName&&!form.$.submit.length){form.$.submit=CKEDITOR.tools.override(form.$.submit,function(originalSubmit){return function(){editor.updateElement();
if(originalSubmit.apply){originalSubmit.apply(this,arguments);
}else{originalSubmit();
}};
});
}editor.on("destroy",function(){form.removeListener("submit",onSubmit);
});
}}}CKEDITOR.domReady(function(){CKEDITOR.replaceClass&&CKEDITOR.replaceAll(CKEDITOR.replaceClass);
});
})();
CKEDITOR.config.startupMode="wysiwyg";
(function(){CKEDITOR.inline=function(element,instanceConfig){if(!CKEDITOR.env.isCompatible){return null;
}element=CKEDITOR.dom.element.get(element);
if(element.getEditor()){throw'The editor instance "'+element.getEditor().name+'" is already attached to the provided element.';
}var editor=new CKEDITOR.editor(instanceConfig,element,CKEDITOR.ELEMENT_MODE_INLINE);
editor.setData(element.getHtml(),null,true);
editor.on("loaded",function(){editor.fire("uiReady");
editor.editable(element);
editor.container=element;
editor.setData(editor.getData(1));
editor.resetDirty();
editor.fire("contentDom");
editor.mode="wysiwyg";
editor.fire("mode");
editor.status="ready";
editor.fireOnce("instanceReady");
CKEDITOR.fire("instanceReady",null,editor);
},null,null,10000);
editor.on("destroy",function(){editor.element.clearCustomData();
delete editor.element;
});
return editor;
};
CKEDITOR.inlineAll=function(){var el,data;
for(var name in CKEDITOR.dtd.$editable){var elements=CKEDITOR.document.getElementsByTag(name);
for(var i=0,len=elements.count();
i<len;
i++){el=elements.getItem(i);
if(el.getAttribute("contenteditable")=="true"){data={element:el,config:{}};
if(CKEDITOR.fire("inline",data)!==false){CKEDITOR.inline(el,data.config);
}}}}};
CKEDITOR.domReady(function(){!CKEDITOR.disableAutoInline&&CKEDITOR.inlineAll();
});
})();
(function(){CKEDITOR.editable=CKEDITOR.tools.createClass({base:CKEDITOR.dom.element,$:function(editor,element){this.base(element.$||element);
this.editor=editor;
this.hasFocus=false;
this.setup();
},proto:{checkFocus:function(){if(CKEDITOR.env.ie){var doc=this.getDocument();
var e=doc.$.activeElement;
if(e==null){return false;
}if(e===doc.$.body&&this.$===doc.$){return true;
}while(e&&e!==doc.$.body){if(e===this.$){return true;
}e=e.parentNode;
}return false;
}},focus:function(specificElement){if(CKEDITOR.env.webkit&&!this.hasFocus){active=this.editor._.previousActive||this.getDocument().getActive();
if(this.contains(active)){active.focus();
return;
}}if(!specificElement&&this.checkFocus()){return;
}this.$[CKEDITOR.env.ie&&CKEDITOR.env.version<9&&this.getDocument().equals(CKEDITOR.document)?"setActive":"focus"]();
if(CKEDITOR.env.safari&&!this.isInline()){var active=CKEDITOR.document.getActive();
if(!active.equals(this.getWindow().getFrame())){this.getWindow().focus();
}}},on:function(name,fn){var args=Array.prototype.slice.call(arguments,0);
if(CKEDITOR.env.ie&&(/^focus|blur$/).exec(name)){name=name=="focus"?"focusin":"focusout";
fn=isNotBubbling(fn,this);
args[0]=name;
args[1]=fn;
}return CKEDITOR.dom.element.prototype.on.apply(this,args);
},attachListener:function(obj,event,fn,scope,listenerData,priority){!this._.listeners&&(this._.listeners=[]);
var args=Array.prototype.slice.call(arguments,1);
this._.listeners.push(obj.on.apply(obj,args));
},clearListeners:function(){var listeners=this._.listeners;
try{while(listeners.length){listeners.pop().removeListener();
}}catch(e){}},restoreAttrs:function(){var changes=this._.attrChanges,orgVal;
for(var attr in changes){if(changes.hasOwnProperty(attr)){orgVal=changes[attr];
orgVal!==null?this.setAttribute(attr,orgVal):this.removeAttribute(attr);
}}},attachClass:function(cls){var classes=this.getCustomData("classes");
if(!this.hasClass(cls)){!classes&&(classes=[]),classes.push(cls);
this.setCustomData("classes",classes);
this.addClass(cls);
}},changeAttr:function(attr,val){var orgVal=this.getAttribute(attr);
if(val!==orgVal){!this._.attrChanges&&(this._.attrChanges={});
if(!(attr in this._.attrChanges)){this._.attrChanges[attr]=orgVal;
}this.setAttribute(attr,val);
}},insertHtml:function(data,mode){beforeInsert(this);
insert(this,mode||"html",data);
},insertText:function(text){beforeInsert(this);
var editor=this.editor,mode=editor.getSelection().getStartElement().hasAscendant("pre",true)?CKEDITOR.ENTER_BR:editor.config.enterMode,isEnterBrMode=mode==CKEDITOR.ENTER_BR,tools=CKEDITOR.tools;
var html=tools.htmlEncode(text.replace(/\r\n/g,"\n"));
html=html.replace(/\t/g,"&nbsp;&nbsp; &nbsp;");
var paragraphTag=mode==CKEDITOR.ENTER_P?"p":"div";
if(!isEnterBrMode){var duoLF=/\n{2}/g;
if(duoLF.test(html)){var openTag="<"+paragraphTag+">",endTag="</"+paragraphTag+">";
html=openTag+html.replace(duoLF,function(){return endTag+openTag;
})+endTag;
}}html=html.replace(/\n/g,"<br>");
if(!isEnterBrMode){html=html.replace(new RegExp("<br>(?=</"+paragraphTag+">)"),function(match){return tools.repeat(match,2);
});
}html=html.replace(/^ | $/g,"&nbsp;");
html=html.replace(/(>|\s) /g,function(match,before){return before+"&nbsp;";
}).replace(/ (?=<)/g,"&nbsp;");
insert(this,"text",html);
},insertElement:function(element){beforeInsert(this);
var editor=this.editor,enterMode=editor.config.enterMode,selection=editor.getSelection(),ranges=selection.getRanges(),elementName=element.getName(),isBlock=CKEDITOR.dtd.$block[elementName];
var range,clone,lastElement;
for(var i=ranges.length-1;
i>=0;
i--){range=ranges[i];
if(!range.checkReadOnly()){range.deleteContents(1);
clone=!i&&element||element.clone(1);
var current,dtd;
if(isBlock){while((current=range.getCommonAncestor(0,1))&&(dtd=CKEDITOR.dtd[current.getName()])&&!(dtd&&dtd[elementName])){if(current.getName() in CKEDITOR.dtd.span){range.splitElement(current);
}else{if(range.checkStartOfBlock()&&range.checkEndOfBlock()){range.setStartBefore(current);
range.collapse(true);
current.remove();
}else{range.splitBlock(enterMode==CKEDITOR.ENTER_DIV?"div":"p",editor.editable());
}}}}range.insertNode(clone);
if(!lastElement){lastElement=clone;
}}}if(lastElement){range.moveToPosition(lastElement,CKEDITOR.POSITION_AFTER_END);
if(isBlock){var next=lastElement.getNext(isNotEmpty);
if(next&&next.type==CKEDITOR.NODE_ELEMENT&&next.is(CKEDITOR.dtd.$block)){if(next.getDtd()["#"]){range.moveToElementEditStart(next);
}else{range.moveToElementEditEnd(lastElement);
}}else{if(!next&&enterMode!=CKEDITOR.ENTER_BR){next=range.fixBlock(true,enterMode==CKEDITOR.ENTER_DIV?"div":"p");
range.moveToElementEditStart(next);
}}}}selection.selectRanges([range]);
afterInsert(this,CKEDITOR.env.opera);
},setData:function(data,isSnapshot){if(!isSnapshot&&this.editor.dataProcessor){data=this.editor.dataProcessor.toHtml(data);
}this.setHtml(data);
this.editor.fire("dataReady");
},getData:function(isSnapshot){var data=this.getHtml();
if(!isSnapshot&&this.editor.dataProcessor){data=this.editor.dataProcessor.toDataFormat(data);
}return data;
},setReadOnly:function(isReadOnly){this.setAttribute("contenteditable",!isReadOnly);
},detach:function(){this.removeClass("cke_editable");
var editor=this.editor;
this._.detach();
delete editor.document;
delete editor.window;
},isInline:function(){return this.getDocument().equals(CKEDITOR.document);
},setup:function(){var editor=this.editor;
this.attachListener(editor,"beforeGetData",function(){var data=this.getData();
if(!this.is("textarea")){if(editor.config.ignoreEmptyParagraph!==false){data=data.replace(emptyParagraphRegexp,function(match,lookback){return lookback;
});
}}editor.setData(data,null,1);
},this);
this.attachListener(editor,"getSnapshot",function(evt){evt.data=this.getData(1);
},this);
this.attachListener(editor,"afterSetData",function(){this.setData(editor.getData(1));
},this);
this.attachListener(editor,"loadSnapshot",function(evt){this.setData(evt.data,1);
},this);
this.attachListener(editor,"beforeFocus",function(){var sel=editor.getSelection(),ieSel=sel&&sel.getNative();
if(ieSel&&ieSel.type=="Control"){return;
}this.focus();
},this);
this.attachListener(editor,"insertHtml",function(evt){this.insertHtml(evt.data.dataValue,evt.data.mode);
},this);
this.attachListener(editor,"insertElement",function(evt){this.insertElement(evt.data);
},this);
this.attachListener(editor,"insertText",function(evt){this.insertText(evt.data);
},this);
this.setReadOnly(editor.readOnly);
this.attachClass("cke_editable");
this.attachClass(editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?"cke_editable_inline":editor.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE||editor.elementMode==CKEDITOR.ELEMENT_MODE_APPENDTO?"cke_editable_themed":"");
this.attachClass("cke_contents_"+editor.config.contentsLangDirection);
var keystrokeHandler=editor.keystrokeHandler;
keystrokeHandler.blockedKeystrokes[8]=editor.readOnly;
editor.keystrokeHandler.attach(this);
this.on("blur",function(evt){if(CKEDITOR.env.opera){var active=CKEDITOR.document.getActive();
if(active.equals(this.isInline()?this:this.getWindow().getFrame())){evt.cancel();
return;
}}this.hasFocus=false;
},null,null,-1);
this.on("focus",function(){this.hasFocus=true;
},null,null,-1);
editor.focusManager.add(this);
if(this.equals(CKEDITOR.document.getActive())){this.hasFocus=true;
editor.once("contentDom",function(){editor.focusManager.focus();
});
}if(this.isInline()){this.changeAttr("tabindex",editor.tabIndex);
}if(this.is("textarea")){return;
}editor.document=this.getDocument();
editor.window=this.getWindow();
var doc=editor.document;
this.changeAttr("spellcheck",!editor.config.disableNativeSpellChecker);
var dir=editor.config.contentsLangDirection;
if(this.getDirection(1)!=dir){this.changeAttr("dir",dir);
}var styles=CKEDITOR.getCss();
if(styles){var head=doc.getHead();
if(!head.getCustomData("stylesheet")){var sheet=doc.appendStyleText(styles);
sheet=new CKEDITOR.dom.element(sheet.ownerNode||sheet.owningElement);
head.setCustomData("stylesheet",sheet);
sheet.data("cke-temp",1);
}}var ref=doc.getCustomData("stylesheet_ref")||0;
doc.setCustomData("stylesheet_ref",ref+1);
this.setCustomData("cke_includeReadonly",!editor.config.disableReadonlyStyling);
this.attachListener(this,"click",function(ev){ev=ev.data;
var target=ev.getTarget();
if(target.is("a")&&ev.$.button!=2&&target.isReadOnly()){ev.preventDefault();
}});
this.attachListener(editor,"key",function(evt){if(editor.readOnly){return true;
}var keyCode=evt.data.keyCode,isHandled;
if(keyCode in {8:1,46:1}){var sel=editor.getSelection(),selected,range=sel.getRanges()[0];
if(!range){return;
}var path=range.startPath(),block,parent,next,rtl=keyCode==8;
if((selected=getSelectedTableList(sel))){editor.fire("saveSnapshot");
range.moveToPosition(selected,CKEDITOR.POSITION_BEFORE_START);
selected.remove();
range.select();
editor.fire("saveSnapshot");
isHandled=1;
}else{if(range.collapsed){if((block=path.block)&&range[rtl?"checkStartOfBlock":"checkEndOfBlock"]()&&(next=block[rtl?"getPrevious":"getNext"](isNotWhitespace))&&next.equals("table")){editor.fire("saveSnapshot");
if(range[rtl?"checkEndOfBlock":"checkStartOfBlock"]()){block.remove();
}range["moveToElementEdit"+(rtl?"End":"Start")](next);
range.select();
editor.fire("saveSnapshot");
isHandled=1;
}else{if(path.blockLimit&&path.blockLimit.is("td")&&(parent=path.blockLimit.getAscendant("table"))&&range.checkBoundaryOfElement(parent,rtl?CKEDITOR.START:CKEDITOR.END)&&(next=parent[rtl?"getPrevious":"getNext"](isNotWhitespace))){editor.fire("saveSnapshot");
range["moveToElementEdit"+(rtl?"End":"Start")](next);
if(range.checkStartOfBlock()&&range.checkEndOfBlock()){next.remove();
}else{range.select();
}editor.fire("saveSnapshot");
isHandled=1;
}else{if((parent=path.contains(["td","th","caption"]))&&range.checkBoundaryOfElement(parent,rtl?CKEDITOR.START:CKEDITOR.END)){next=parent[rtl?"getPreviousSourceNode":"getNextSourceNode"](1,CKEDITOR.NODE_ELEMENT);
if(next&&!next.isReadOnly()&&range.root.contains(next)){range[rtl?"moveToElementEditEnd":"moveToElementEditStart"](next);
range.select();
isHandled=1;
}}}}}}}return !isHandled;
});
CKEDITOR.env.ie&&this.attachListener(this,"click",blockInputClick);
if(!(CKEDITOR.env.ie||CKEDITOR.env.opera)){this.attachListener(this,"mousedown",function(ev){var control=ev.data.getTarget();
if(control.is("img","hr","input","textarea","select")){editor.getSelection().selectElement(control);
if(control.is("input","textarea","select")){ev.data.preventDefault();
}}});
}if(CKEDITOR.env.gecko){this.attachListener(this,"mouseup",function(ev){if(ev.data.$.button==2){var target=ev.data.getTarget();
if(!target.getOuterHtml().replace(emptyParagraphRegexp,"")){var range=editor.createRange();
range.moveToElementEditStart(target);
range.select(true);
}}});
}if(CKEDITOR.env.webkit){this.attachListener(this,"click",function(ev){if(ev.data.getTarget().is("input","select")){ev.data.preventDefault();
}});
this.attachListener(this,"mouseup",function(ev){if(ev.data.getTarget().is("input","textarea")){ev.data.preventDefault();
}});
}}},_:{detach:function(){this.editor.setData(this.editor.getData(),0,1);
this.clearListeners();
this.restoreAttrs();
var classes;
if((classes=this.removeCustomData("classes"))){while(classes.length){this.removeClass(classes.pop());
}}var doc=this.getDocument(),head=doc.getHead();
if(head.getCustomData("stylesheet")){var refs=doc.getCustomData("stylesheet_ref");
if(!(--refs)){doc.removeCustomData("stylesheet_ref");
var sheet=head.removeCustomData("stylesheet");
sheet.remove();
}else{doc.setCustomData("stylesheet_ref",refs);
}}delete this.editor;
}}});
CKEDITOR.editor.prototype.editable=function(element){var editable=this._.editable;
if(editable&&element){return 0;
}if(arguments.length){editable=this._.editable=element?(element instanceof CKEDITOR.editable?element:new CKEDITOR.editable(this,element)):(editable&&editable.detach(),null);
}return editable;
};
function fixDom(evt){var editor=evt.editor,editable=editor.editable(),path=evt.data.path,blockLimit=path.blockLimit,selection=evt.data.selection,range=selection.getRanges()[0],enterMode=editor.config.enterMode;
if(CKEDITOR.env.gecko){var pathBlock=path.block||path.blockLimit||path.root,lastNode=pathBlock&&pathBlock.getLast(isNotEmpty);
if(pathBlock&&pathBlock.isBlockBoundary()&&!(lastNode&&lastNode.type==CKEDITOR.NODE_ELEMENT&&lastNode.isBlockBoundary())&&!pathBlock.is("pre")&&!pathBlock.getBogus()){pathBlock.appendBogus();
}}if(editor.config.autoParagraph!==false&&enterMode!=CKEDITOR.ENTER_BR&&range.collapsed&&editable.equals(blockLimit)&&!path.block){var testRng=range.clone();
testRng.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);
var walker=new CKEDITOR.dom.walker(testRng);
walker.guard=function(node){return !isNotEmpty(node)||node.type==CKEDITOR.NODE_COMMENT||node.isReadOnly();
};
if(!walker.checkForward()||testRng.checkStartOfBlock()&&testRng.checkEndOfBlock()){var fixedBlock=range.fixBlock(true,editor.config.enterMode==CKEDITOR.ENTER_DIV?"div":"p");
if(CKEDITOR.env.ie){var first=fixedBlock.getFirst(isNotEmpty);
if(first&&isNbsp(first)){first.remove();
}}range.select();
evt.cancel();
}}}function blockInputClick(evt){var element=evt.data.getTarget();
if(element.is("input")){var type=element.getAttribute("type");
if(type=="submit"||type=="reset"){evt.data.preventDefault();
}}}function isBlankParagraph(block){return block.getOuterHtml().match(emptyParagraphRegexp);
}function isNotEmpty(node){return isNotWhitespace(node)&&isNotBookmark(node);
}function isNbsp(node){return node.type==CKEDITOR.NODE_TEXT&&CKEDITOR.tools.trim(node.getText()).match(/^(?:&nbsp;|\xa0)$/);
}function nonEditable(element){return element.isBlockBoundary()&&CKEDITOR.dtd.$empty[element.getName()];
}function isNotBubbling(fn,src){return function(evt){var other=CKEDITOR.dom.element.get(evt.data.$.toElement||evt.data.$.fromElement||evt.data.$.relatedTarget);
if(!(other&&(src.equals(other)||src.contains(other)))){fn.call(this,evt);
}};
}function getSelectedTableList(sel){var selected,range=sel.getRanges()[0],editable=sel.root,path=range.startPath(),structural={table:1,ul:1,ol:1,dl:1};
var isBogus=CKEDITOR.dom.walker.bogus();
if(path.contains(structural)){var walkerRng=range.clone();
walkerRng.collapse(1);
walkerRng.setStartAt(editable,CKEDITOR.POSITION_AFTER_START);
var walker=new CKEDITOR.dom.walker(walkerRng),guard=function(walker,isEnd){return function(node,isWalkOut){if(isWalkOut&&node.type==CKEDITOR.NODE_ELEMENT&&node.is(structural)){selected=node;
}if(isNotEmpty(node)&&!isWalkOut&&!(isEnd&&isBogus(node))){return false;
}};
};
walker.guard=guard(walker);
walker.checkBackward();
if(selected){walkerRng=range.clone();
walkerRng.collapse();
walkerRng.setEndAt(editable,CKEDITOR.POSITION_BEFORE_END);
walker=new CKEDITOR.dom.walker(walkerRng);
walker.guard=guard(walker,1);
selected=0;
walker.checkForward();
return selected;
}}return null;
}var emptyParagraphRegexp=/(^|<body\b[^>]*>)\s*<(p|div|address|h\d|center|pre)[^>]*>\s*(?:<br[^>]*>|&nbsp;|\u00A0|&#160;)?\s*(:?<\/\2>)?\s*(?=$|<\/body>)/gi;
var isNotWhitespace=CKEDITOR.dom.walker.whitespaces(true),isNotBookmark=CKEDITOR.dom.walker.bookmark(false,true);
CKEDITOR.on("instanceLoaded",function(evt){var editor=evt.editor;
editor.on("insertElement",function(evt){var element=evt.data;
if(element.type==CKEDITOR.NODE_ELEMENT&&(element.is("input")||element.is("textarea"))){if(element.getAttribute("contentEditable")!="false"){element.data("cke-editable",element.hasAttribute("contenteditable")?"true":"1");
}element.setAttribute("contentEditable",false);
}});
editor.on("selectionChange",function(evt){if(editor.readOnly){return;
}var sel=editor.getSelection();
if(sel&&!sel.isLocked){var isDirty=editor.checkDirty();
editor.fire("lockSnapshot");
fixDom(evt);
editor.fire("unlockSnapshot");
!isDirty&&editor.resetDirty();
}});
});
CKEDITOR.on("instanceCreated",function(evt){var editor=evt.editor;
editor.on("mode",function(){var editable=editor.editable();
if(editable&&editable.isInline()){var ariaLabel=this.lang.editor+", "+this.name;
editable.changeAttr("role","textbox");
editable.changeAttr("aria-label",ariaLabel);
editable.changeAttr("title","");
var ct=this.ui.space(this.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?"top":"contents");
if(ct){var ariaDescId=CKEDITOR.tools.getNextId(),desc=CKEDITOR.dom.element.createFromHtml('<span id="'+ariaDescId+'" class="cke_voice_label">'+this.lang.common.editorHelp+"</span>");
ct.append(desc);
editable.changeAttr("aria-describedby",ariaDescId);
}}});
});
CKEDITOR.addCss(".cke_editable{cursor:text}.cke_editable img,.cke_editable input,.cke_editable textarea{cursor:default}");
var insert=(function(){var DTD=CKEDITOR.dtd;
function insert(editable,type,data){var editor=editable.editor,doc=editable.getDocument(),selection=editor.getSelection(),range=selection.getRanges()[0],dontFilter=false;
if(type=="unfiltered_html"){type="html";
dontFilter=true;
}if(!range){DocHandleError("editable.js, insert - Range is null","DynDocCKEditor","","");
return;
}if(range.checkReadOnly()){return;
}var path=new CKEDITOR.dom.elementPath(range.startContainer,range.root),blockLimit=path.blockLimit||range.root,that={type:type,dontFilter:dontFilter,editable:editable,editor:editor,range:range,blockLimit:blockLimit,mergeCandidates:[],zombies:[]};
prepareRangeToDataInsertion(that);
if(data){processDataForInsertion(that,data);
insertDataIntoRange(that);
}cleanupAfterInsertion(that);
range.select();
afterInsert(editable);
}function prepareRangeToDataInsertion(that){var range=that.range,mergeCandidates=that.mergeCandidates,node,marker,path,startPath,endPath,previous,bm;
if(that.type=="text"&&range.shrink(CKEDITOR.SHRINK_ELEMENT,true,false)){marker=CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>",range.document);
range.insertNode(marker);
range.setStartAfter(marker);
}startPath=new CKEDITOR.dom.elementPath(range.startContainer);
that.endPath=endPath=new CKEDITOR.dom.elementPath(range.endContainer);
if(!range.collapsed){node=endPath.block||endPath.blockLimit;
var ancestor=range.getCommonAncestor();
if(node&&!(node.equals(ancestor)||node.contains(ancestor))&&range.checkEndOfBlock()){that.zombies.push(node);
}range.deleteContents();
}while((previous=getRangePrevious(range))&&checkIfElement(previous)&&previous.isBlockBoundary()&&startPath.contains(previous)){range.moveToPosition(previous,CKEDITOR.POSITION_BEFORE_END);
}mergeAncestorElementsOfSelectionEnds(range,that.blockLimit,startPath,endPath);
if(marker){range.setEndBefore(marker);
range.collapse();
marker.remove();
}path=range.startPath();
if((node=path.contains(isInline,false,1))){range.splitElement(node);
that.inlineStylesRoot=node;
that.inlineStylesPeak=path.lastElement;
}bm=range.createBookmark();
node=bm.startNode.getPrevious(isNotEmpty);
node&&checkIfElement(node)&&isInline(node)&&mergeCandidates.push(node);
node=bm.startNode.getNext(isNotEmpty);
node&&checkIfElement(node)&&isInline(node)&&mergeCandidates.push(node);
node=bm.startNode;
while((node=node.getParent())&&isInline(node)){mergeCandidates.push(node);
}range.moveToBookmark(bm);
}function processDataForInsertion(that,data){var range=that.range;
if(that.type=="text"&&that.inlineStylesRoot){data=wrapDataWithInlineStyles(data,that);
}var context=that.blockLimit.getName();
if(/^\s+|\s+$/.test(data)&&"span" in CKEDITOR.dtd[context]){var protect='<span data-cke-marker="1">&nbsp;</span>';
data=protect+data+protect;
}data=that.editor.dataProcessor.toHtml(data,null,false,that.dontFilter);
var doc=range.document,wrapper=doc.createElement("body");
wrapper.setHtml(data);
if(protect){wrapper.getFirst().remove();
wrapper.getLast().remove();
}var block=range.startPath().block;
if(block&&!(block.getChildCount()==1&&block.getBogus())){stripBlockTagIfSingleLine(wrapper);
}that.dataWrapper=wrapper;
}function insertDataIntoRange(that){var range=that.range,doc=range.document,path,blockLimit=that.blockLimit,nodesData,nodeData,node,nodeIndex=0,bogus,bogusNeededBlocks=[],pathBlock,fixBlock,splittingContainer=0,dontMoveCaret=0,insertionContainer,toSplit,newContainer,startContainer=range.startContainer,endContainer=that.endPath.elements[0],filteredNodes,pos=endContainer.getPosition(startContainer),separateEndContainer=!!endContainer.getCommonAncestor(startContainer)&&pos!=CKEDITOR.POSITION_IDENTICAL&&!(pos&CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_IS_CONTAINED);
nodesData=extractNodesData(that.dataWrapper,that);
removeBrsAdjacentToPastedBlocks(nodesData,range);
for(;
nodeIndex<nodesData.length;
nodeIndex++){nodeData=nodesData[nodeIndex];
if(nodeData.isLineBreak&&splitOnLineBreak(range,blockLimit,nodeData)){dontMoveCaret=nodeIndex>0;
continue;
}path=range.startPath();
if(!nodeData.isBlock&&(fixBlock=autoParagraphTag(that.editor.config))&&!path.block&&path.blockLimit&&path.blockLimit.equals(range.root)){fixBlock=doc.createElement(fixBlock);
!CKEDITOR.env.ie&&fixBlock.appendBogus();
range.insertNode(fixBlock);
if(!CKEDITOR.env.ie&&(bogus=fixBlock.getBogus())){bogus.remove();
}range.moveToPosition(fixBlock,CKEDITOR.POSITION_BEFORE_END);
}node=range.startPath().block;
if(node&&!node.equals(pathBlock)){bogus=node.getBogus();
if(bogus){bogus.remove();
bogusNeededBlocks.push(node);
}pathBlock=node;
}if(nodeData.firstNotAllowed){splittingContainer=1;
}if(splittingContainer&&nodeData.isElement){insertionContainer=range.startContainer;
toSplit=null;
while(insertionContainer&&!DTD[insertionContainer.getName()][nodeData.name]){if(insertionContainer.equals(blockLimit)){insertionContainer=null;
break;
}toSplit=insertionContainer;
insertionContainer=insertionContainer.getParent();
}if(insertionContainer){if(toSplit){newContainer=range.splitElement(toSplit);
that.zombies.push(newContainer);
that.zombies.push(toSplit);
}}else{filteredNodes=filterElement(nodeData.node,blockLimit.getName(),!nodeIndex,nodeIndex==nodesData.length-1);
}}if(filteredNodes){while((node=filteredNodes.pop())){range.insertNode(node);
}filteredNodes=0;
}else{range.insertNode(nodeData.node);
}if(nodeData.lastNotAllowed&&nodeIndex<nodesData.length-1){newContainer=separateEndContainer?endContainer:newContainer;
newContainer&&range.setEndAt(newContainer,CKEDITOR.POSITION_AFTER_START);
splittingContainer=0;
}range.collapse();
}that.dontMoveCaret=dontMoveCaret;
that.bogusNeededBlocks=bogusNeededBlocks;
}function cleanupAfterInsertion(that){var range=that.range,node,testRange,parent,movedIntoInline,bogusNeededBlocks=that.bogusNeededBlocks,bm=range.createBookmark();
while((node=that.zombies.pop())){if(!node.getParent()){continue;
}testRange=range.clone();
testRange.moveToElementEditStart(node);
testRange.removeEmptyBlocksAtEnd();
}if(bogusNeededBlocks){while((node=bogusNeededBlocks.pop())){node.append(CKEDITOR.env.ie?range.document.createText("\u00a0"):range.document.createElement("br"));
}}while((node=that.mergeCandidates.pop())){node.mergeSiblings();
}range.moveToBookmark(bm);
if(!that.dontMoveCaret){node=getRangePrevious(range);
while(node&&checkIfElement(node)&&!node.is(DTD.$empty)){if(node.isBlockBoundary()){range.moveToPosition(node,CKEDITOR.POSITION_BEFORE_END);
}else{if(isInline(node)&&node.getHtml().match(/(\s|&nbsp;)$/g)){movedIntoInline=null;
break;
}movedIntoInline=range.clone();
movedIntoInline.moveToPosition(node,CKEDITOR.POSITION_BEFORE_END);
}node=node.getLast(isNotEmpty);
}movedIntoInline&&range.moveToRange(movedIntoInline);
}}function autoParagraphTag(config){return(config.enterMode!=CKEDITOR.ENTER_BR&&config.autoParagraph!==false)?config.enterMode==CKEDITOR.ENTER_DIV?"div":"p":false;
}function checkIfElement(node){return node.type==CKEDITOR.NODE_ELEMENT;
}function extractNodesData(dataWrapper,that){var node,sibling,nodeName,allowed,nodesData=[],startContainer=that.range.startContainer,path=that.range.startPath(),allowedNames=DTD[startContainer.getName()],nodeIndex=0,nodesList=dataWrapper.getChildren(),nodesCount=nodesList.count(),firstNotAllowed=-1,lastNotAllowed=-1,lineBreak=0,blockSibling;
var insideOfList=path.contains(DTD.$list);
for(;
nodeIndex<nodesCount;
++nodeIndex){node=nodesList.getItem(nodeIndex);
if(checkIfElement(node)){nodeName=node.getName();
if(insideOfList&&nodeName in CKEDITOR.dtd.$list){nodesData=nodesData.concat(extractNodesData(node,that));
continue;
}allowed=!!allowedNames[nodeName];
if(nodeName=="br"&&node.data("cke-eol")&&(!nodeIndex||nodeIndex==nodesCount-1)){sibling=nodeIndex?nodesData[nodeIndex-1].node:nodesList.getItem(nodeIndex+1);
lineBreak=sibling&&(!checkIfElement(sibling)||!sibling.is("br"));
blockSibling=sibling&&checkIfElement(sibling)&&DTD.$block[sibling.getName()];
}if(firstNotAllowed==-1&&!allowed){firstNotAllowed=nodeIndex;
}if(!allowed){lastNotAllowed=nodeIndex;
}nodesData.push({isElement:1,isLineBreak:lineBreak,isBlock:node.isBlockBoundary(),hasBlockSibling:blockSibling,node:node,name:nodeName,allowed:allowed});
lineBreak=0;
blockSibling=0;
}else{nodesData.push({isElement:0,node:node,allowed:1});
}}if(firstNotAllowed>-1){nodesData[firstNotAllowed].firstNotAllowed=1;
}if(lastNotAllowed>-1){nodesData[lastNotAllowed].lastNotAllowed=1;
}return nodesData;
}function filterElement(element,parentName,isFirst,isLast){var nodes=filterElementInner(element,parentName),nodes2=[],nodesCount=nodes.length,nodeIndex=0,node,afterSpace=0,lastSpaceIndex=-1;
for(;
nodeIndex<nodesCount;
nodeIndex++){node=nodes[nodeIndex];
if(node==" "){if(!afterSpace&&!(isFirst&&!nodeIndex)){nodes2.push(new CKEDITOR.dom.text(" "));
lastSpaceIndex=nodes2.length;
}afterSpace=1;
}else{nodes2.push(node);
afterSpace=0;
}}if(isLast&&lastSpaceIndex==nodes2.length){nodes2.pop();
}return nodes2;
}function filterElementInner(element,parentName){var nodes=[],children=element.getChildren(),childrenCount=children.count(),child,childIndex=0,allowedNames=DTD[parentName],surroundBySpaces=!element.is(DTD.$inline)||element.is("br");
if(surroundBySpaces){nodes.push(" ");
}for(;
childIndex<childrenCount;
childIndex++){child=children.getItem(childIndex);
if(checkIfElement(child)&&!child.is(allowedNames)){nodes=nodes.concat(filterElementInner(child,parentName));
}else{nodes.push(child);
}}if(surroundBySpaces){nodes.push(" ");
}return nodes;
}function getRangePrevious(range){return checkIfElement(range.startContainer)&&range.startContainer.getChild(range.startOffset-1);
}function isInline(node){return node&&checkIfElement(node)&&(node.is(DTD.$removeEmpty)||node.is("a")&&!node.isBlockBoundary());
}var blockMergedTags={p:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,ul:1,ol:1,li:1,pre:1,dl:1,blockquote:1};
function mergeAncestorElementsOfSelectionEnds(range,blockLimit,startPath,endPath){var walkerRange=range.clone(),walker,nextNode,previousNode;
walkerRange.setEndAt(blockLimit,CKEDITOR.POSITION_BEFORE_END);
walker=new CKEDITOR.dom.walker(walkerRange);
if((nextNode=walker.next())&&checkIfElement(nextNode)&&blockMergedTags[nextNode.getName()]&&(previousNode=nextNode.getPrevious())&&checkIfElement(previousNode)&&!previousNode.getParent().equals(range.startContainer)&&startPath.contains(previousNode)&&endPath.contains(nextNode)&&nextNode.isIdentical(previousNode)){nextNode.moveChildren(previousNode);
nextNode.remove();
mergeAncestorElementsOfSelectionEnds(range,blockLimit,startPath,endPath);
}}function removeBrsAdjacentToPastedBlocks(nodesData,range){var succeedingNode=range.endContainer.getChild(range.endOffset),precedingNode=range.endContainer.getChild(range.endOffset-1);
if(succeedingNode){remove(succeedingNode,nodesData[nodesData.length-1]);
}if(precedingNode&&remove(precedingNode,nodesData[0])){range.setEnd(range.endContainer,range.endOffset-1);
range.collapse();
}function remove(maybeBr,maybeBlockData){if(maybeBlockData.isBlock&&maybeBlockData.isElement&&!maybeBlockData.node.is("br")&&checkIfElement(maybeBr)&&maybeBr.is("br")){maybeBr.remove();
return 1;
}}}function splitOnLineBreak(range,blockLimit,nodeData){var firstBlockAscendant,pos;
if(nodeData.hasBlockSibling){return 1;
}firstBlockAscendant=range.startContainer.getAscendant(DTD.$block,1);
if(!firstBlockAscendant||!firstBlockAscendant.is({div:1,p:1})){return 0;
}pos=firstBlockAscendant.getPosition(blockLimit);
if(pos==CKEDITOR.POSITION_IDENTICAL||pos==CKEDITOR.POSITION_CONTAINS){return 0;
}var newContainer=range.splitElement(firstBlockAscendant);
range.moveToPosition(newContainer,CKEDITOR.POSITION_AFTER_START);
return 1;
}var stripSingleBlockTags={p:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1},inlineButNotBr=CKEDITOR.tools.extend({},DTD.$inline);
delete inlineButNotBr.br;
function stripBlockTagIfSingleLine(dataWrapper){var block,children;
if(dataWrapper.getChildCount()==1&&checkIfElement(block=dataWrapper.getFirst())&&block.is(stripSingleBlockTags)){children=block.getElementsByTag("*");
for(var i=0,child,count=children.count();
i<count;
i++){child=children.getItem(i);
if(!child.is(inlineButNotBr)){return;
}}block.moveChildren(block.getParent(1));
block.remove();
}}function wrapDataWithInlineStyles(data,that){var element=that.inlineStylesPeak,doc=element.getDocument(),wrapper=doc.createText("{cke-peak}"),limit=that.inlineStylesRoot.getParent();
while(!element.equals(limit)){wrapper=wrapper.appendTo(element.clone());
element=element.getParent();
}return wrapper.getOuterHtml().replace("{cke-peak}",data);
}return insert;
})();
function beforeInsert(editable){editable.editor.focus();
editable.editor.fire("saveSnapshot");
}function afterInsert(editable,noScroll){var editor=editable.editor;
!noScroll&&editor.getSelection().scrollIntoView();
setTimeout(function(){editor.fire("saveSnapshot");
},0);
}})();
(function(){function checkSelectionChange(){var sel=this.getSelection(1);
if(sel.getType()==CKEDITOR.SELECTION_NONE){return;
}this.fire("selectionCheck",sel);
var currentPath=this.elementPath();
if(currentPath){if(!currentPath.compare(this._.selectionPreviousPath)){this._.selectionPreviousPath=currentPath;
this.fire("selectionChange",{selection:sel,path:currentPath});
}}else{DocHandleError("checkSelectionChange - currentPath is null","DynDocCKEditor");
}}var checkSelectionChangeTimer,checkSelectionChangeTimeoutPending;
function checkSelectionChangeTimeout(){checkSelectionChangeTimeoutPending=true;
if(checkSelectionChangeTimer){return;
}checkSelectionChangeTimeoutExec.call(this);
checkSelectionChangeTimer=CKEDITOR.tools.setTimeout(checkSelectionChangeTimeoutExec,200,this);
}function checkSelectionChangeTimeoutExec(){checkSelectionChangeTimer=null;
if(checkSelectionChangeTimeoutPending){CKEDITOR.tools.setTimeout(checkSelectionChange,0,this);
checkSelectionChangeTimeoutPending=false;
}}var isVisible=CKEDITOR.dom.walker.invisible(1);
function rangeRequiresFix(range){function isTextCt(node,isAtEnd){if(!node||node.type==CKEDITOR.NODE_TEXT){return false;
}var testRng=range.clone();
return testRng["moveToElementEdit"+(isAtEnd?"End":"Start")](node);
}if(!(range.root instanceof CKEDITOR.editable)){return false;
}var ct=range.startContainer;
var previous=range.getPreviousNode(isVisible,null,ct),next=range.getNextNode(isVisible,null,ct);
if(isTextCt(previous)||isTextCt(next,1)){return true;
}if(!(previous||next)&&!(ct.type==CKEDITOR.NODE_ELEMENT&&ct.isBlockBoundary()&&ct.getBogus())){return true;
}return false;
}function createFillingChar(element){removeFillingChar(element,false);
var fillingChar=element.getDocument().createText("\u200B");
element.setCustomData("cke-fillingChar",fillingChar);
return fillingChar;
}function getFillingChar(element){return element.getCustomData("cke-fillingChar");
}function checkFillingChar(element){var fillingChar=getFillingChar(element);
if(fillingChar){if(fillingChar.getCustomData("ready")){removeFillingChar(element);
}else{fillingChar.setCustomData("ready",1);
}}}function removeFillingChar(element,keepSelection){var fillingChar=element&&element.removeCustomData("cke-fillingChar");
if(fillingChar){if(keepSelection!==false){var bm,doc=element.getDocument(),sel=doc.getSelection().getNative(),range=sel&&sel.type!="None"&&sel.getRangeAt(0);
if(fillingChar.getLength()>1&&range&&range.intersectsNode(fillingChar.$)){bm=[sel.anchorOffset,sel.focusOffset];
var startAffected=sel.anchorNode==fillingChar.$&&sel.anchorOffset>0,endAffected=sel.focusNode==fillingChar.$&&sel.focusOffset>0;
startAffected&&bm[0]--;
endAffected&&bm[1]--;
isReversedSelection(sel)&&bm.unshift(bm.pop());
}}fillingChar.setText(fillingChar.getText().replace(/\u200B/g,""));
if(bm){var rng=sel.getRangeAt(0);
rng.setStart(rng.startContainer,bm[0]);
rng.setEnd(rng.startContainer,bm[1]);
sel.removeAllRanges();
sel.addRange(rng);
}}}function isReversedSelection(sel){if(!sel.isCollapsed){var range=sel.getRangeAt(0);
range.setStart(sel.anchorNode,sel.anchorOffset);
range.setEnd(sel.focusNode,sel.focusOffset);
return range.collapsed;
}}CKEDITOR.on("instanceCreated",function(ev){var editor=ev.editor;
var savedBookmarks=null;
editor.define("selectionChange",{errorProof:1});
editor.on("contentDom",function(){var doc=editor.document,outerDoc=CKEDITOR.document,editable=editor.editable(),body=doc.getBody(),html=doc.getDocumentElement();
var isInline=editable.isInline();
var restoreSel;
if(editor.contextMenu){editor.contextMenu.addListener(function(){savedBookmarks=null;
});
}if(CKEDITOR.env.gecko){editable.attachListener(editable,"focus",function(evt){evt.removeListener();
if(restoreSel!==0){var nativ=editor.getSelection().getNative();
if(nativ.isCollapsed&&nativ.anchorNode==editable.$){var rng=editor.createRange();
rng.moveToElementEditStart(editable);
rng.select();
}}},null,null,-2);
}editable.attachListener(editable,"focus",function(){editor.unlockSelection(restoreSel);
if(restoreSel&&savedBookmarks&&savedBookmarks[0]&&editor.editable().isReadOnly()){var selection=editor.getSelection();
if(selection&&editor.document.getByAddress(savedBookmarks[0].start,savedBookmarks[0].normalized)&&(savedBookmarks[0].collapsed||editor.document.getByAddress(savedBookmarks[0].end,savedBookmarks[0].normalized))){selection.selectBookmarks(savedBookmarks);
}}savedBookmarks=null;
restoreSel=0;
},null,null,-1);
editable.attachListener(editable,"mousedown",function(){restoreSel=0;
});
if(CKEDITOR.env.ie||CKEDITOR.env.opera||isInline){var lastSel;
function saveSel(){lastSel=editor.getSelection(1);
lastSel.lock();
}if(isMSSelection){editable.attachListener(editable,"beforedeactivate",saveSel,null,null,-1);
}else{editable.attachListener(editor,"selectionCheck",saveSel,null,null,-1);
}editable.attachListener(editable,"blur",function(){if(!window.getSelection){var selection=editor.getSelection();
if(selection&&!this.editor.contextMenu.isVisible()){savedBookmarks=selection.createBookmarks2();
}}editor.lockSelection(lastSel);
restoreSel=1;
},null,null,-1);
}if(CKEDITOR.env.ie&&!isInline){var scroll;
editable.attachListener(editable,"mousedown",function(evt){if(evt.data.$.button==2){var sel=editor.document.$.selection;
if(sel.type=="None"){scroll=editor.window.getScrollPosition();
}}});
editable.attachListener(editable,"mouseup",function(evt){if(evt.data.$.button==2&&scroll){editor.document.$.documentElement.scrollLeft=scroll.x;
editor.document.$.documentElement.scrollTop=scroll.y;
}scroll=null;
});
if(doc.$.compatMode!="BackCompat"){if(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat){function moveRangeToPoint(range,x,y){try{range.moveToPoint(x,y);
}catch(e){}}html.on("mousedown",function(evt){evt=evt.data;
function onHover(evt){evt=evt.data.$;
if(textRng){var rngEnd=body.$.createTextRange();
moveRangeToPoint(rngEnd,evt.x,evt.y);
textRng.setEndPoint(startRng.compareEndPoints("StartToStart",rngEnd)<0?"EndToEnd":"StartToStart",rngEnd);
textRng.select();
}}function removeListeners(){outerDoc.removeListener("mouseup",onSelectEnd);
html.removeListener("mouseup",onSelectEnd);
}function onSelectEnd(){html.removeListener("mousemove",onHover);
removeListeners();
textRng.select();
}if(evt.getTarget().is("html")&&evt.$.y<html.$.clientHeight&&evt.$.x<html.$.clientWidth){var textRng=body.$.createTextRange();
moveRangeToPoint(textRng,evt.$.x,evt.$.y);
var startRng=textRng.duplicate();
html.on("mousemove",onHover);
outerDoc.on("mouseup",onSelectEnd);
html.on("mouseup",onSelectEnd);
}});
}if(CKEDITOR.env.version>7){html.on("mousedown",function(evt){if(evt.data.getTarget().is("html")){outerDoc.on("mouseup",onSelectEnd);
html.on("mouseup",onSelectEnd);
}});
function removeListeners(){outerDoc.removeListener("mouseup",onSelectEnd);
html.removeListener("mouseup",onSelectEnd);
}function onSelectEnd(){removeListeners();
var sel=CKEDITOR.document.$.selection,range=sel.createRange();
if(sel.type!="None"&&range.parentElement().ownerDocument==doc.$){range.select();
}}}}}editable.attachListener(editable,"selectionchange",checkSelectionChange,editor);
editable.attachListener(editable,"keyup",checkSelectionChangeTimeout,editor);
editable.attachListener(editable,"focus",function(){editor.forceNextSelectionCheck();
editor.selectionChange(1);
});
if(isInline?(CKEDITOR.env.webkit||CKEDITOR.env.gecko):CKEDITOR.env.opera){var mouseDown;
editable.attachListener(editable,"mousedown",function(){mouseDown=1;
});
editable.attachListener(doc.getDocumentElement(),"mouseup",function(){if(mouseDown){checkSelectionChangeTimeout.call(editor);
}mouseDown=0;
});
}else{editable.attachListener(CKEDITOR.env.ie?editable:doc.getDocumentElement(),"mouseup",checkSelectionChangeTimeout,editor);
}if(CKEDITOR.env.webkit){doc.on("keydown",function(evt){var key=evt.data.getKey();
switch(key){case 13:case 33:case 34:case 35:case 36:case 37:case 39:case 8:case 45:case 46:removeFillingChar(editor.editable());
}},null,null,-1);
}});
editor.on("contentDomUnload",editor.forceNextSelectionCheck,editor);
editor.on("dataReady",function(){editor.selectionChange(1);
});
function clearSelection(){var sel=editor.getSelection();
sel&&sel.removeAllRanges();
}CKEDITOR.env.ie9Compat&&editor.on("beforeDestroy",clearSelection,null,null,9);
CKEDITOR.env.webkit&&editor.on("setData",clearSelection);
editor.on("contentDomUnload",function(){editor.unlockSelection();
});
});
CKEDITOR.on("instanceReady",function(evt){var editor=evt.editor,editable=editor.editable();
if(CKEDITOR.env.webkit){editor.on("selectionChange",function(){checkFillingChar(editable);
},null,null,-1);
editor.on("beforeSetMode",function(){removeFillingChar(editable);
},null,null,-1);
var fillingCharBefore,resetSelection;
function beforeData(){var doc=editor.document,fillingChar=getFillingChar(editable);
if(fillingChar){var sel=doc.$.defaultView.getSelection();
if(sel.type=="Caret"&&sel.anchorNode==fillingChar.$){resetSelection=1;
}fillingCharBefore=fillingChar.getText();
fillingChar.setText(fillingCharBefore.replace(/\u200B/g,""));
}}function afterData(){var doc=editor.document,fillingChar=getFillingChar(editable);
if(fillingChar){fillingChar.setText(fillingCharBefore);
if(resetSelection){doc.$.defaultView.getSelection().setPosition(fillingChar.$,fillingChar.getLength());
resetSelection=0;
}}}editor.on("beforeUndoImage",beforeData);
editor.on("afterUndoImage",afterData);
editor.on("beforeGetData",beforeData,null,null,0);
editor.on("getData",afterData);
}});
CKEDITOR.editor.prototype.selectionChange=function(checkNow){(checkNow?checkSelectionChange:checkSelectionChangeTimeout).call(this);
};
CKEDITOR.editor.prototype.getSelection=function(forceRealSelection){if(CKEDITOR.env.ie&&CKEDITOR.env.version>=9&&this.editable()&&this.editable().isReadOnly()){window.nothing;
}else{if(this._.savedSelection&&!forceRealSelection&&this._.savedSelection.isValid()){return this._.savedSelection;
}}var editable=this.editable();
return editable?new CKEDITOR.dom.selection(editable):null;
};
CKEDITOR.editor.prototype.lockSelection=function(sel){sel=sel||this.getSelection(1);
if(sel.getType()!=CKEDITOR.SELECTION_NONE){!sel.isLocked&&sel.lock();
this._.savedSelection=sel;
return true;
}return false;
};
CKEDITOR.editor.prototype.unlockSelection=function(restore){var sel=this._.savedSelection;
if(sel){sel.unlock(restore);
delete this._.savedSelection;
return true;
}return false;
};
CKEDITOR.editor.prototype.forceNextSelectionCheck=function(){delete this._.selectionPreviousPath;
};
CKEDITOR.dom.document.prototype.getSelection=function(){return new CKEDITOR.dom.selection(this);
};
CKEDITOR.dom.range.prototype.select=function(){var sel=this.root instanceof CKEDITOR.editable?this.root.editor.getSelection():new CKEDITOR.dom.selection(this.root);
sel.selectRanges([this]);
return sel;
};
CKEDITOR.SELECTION_NONE=1;
CKEDITOR.SELECTION_TEXT=2;
CKEDITOR.SELECTION_ELEMENT=3;
var isMSSelection=typeof window.getSelection!="function";
CKEDITOR.dom.selection=function(target){var isElement=target instanceof CKEDITOR.dom.element;
this.document=target instanceof CKEDITOR.dom.document?target:target.getDocument();
this.root=isElement?target:this.document.getBody();
this.isLocked=0;
this._={cache:{}};
if(CKEDITOR.env.webkit){var sel=this.document.getWindow().$.getSelection();
if(sel.type=="None"&&this.document.getActive().equals(this.root)||sel.type=="Caret"&&sel.anchorNode.nodeType==CKEDITOR.NODE_DOCUMENT){var range=new CKEDITOR.dom.range(this.root);
range.moveToPosition(this.root,CKEDITOR.POSITION_AFTER_START);
var nativeRange=this.document.$.createRange();
nativeRange.setStart(range.startContainer.$,range.startOffset);
nativeRange.collapse(1);
var listener=this.root.on("focus",function(evt){evt.cancel();
},null,null,-100);
sel.addRange(nativeRange);
listener.removeListener();
}}var nativeSel=this.getNative(),rangeParent;
if(nativeSel){if(nativeSel.getRangeAt){range=nativeSel.rangeCount&&nativeSel.getRangeAt(0);
rangeParent=range&&new CKEDITOR.dom.node(range.commonAncestorContainer);
}else{try{range=nativeSel.createRange();
}catch(err){}rangeParent=range&&CKEDITOR.dom.element.get(range.item&&range.item(0)||range.parentElement());
}}if(!(rangeParent&&(this.root.equals(rangeParent)||this.root.contains(rangeParent)))){this._.cache.type=CKEDITOR.SELECTION_NONE;
this._.cache.startElement=null;
this._.cache.selectedElement=null;
this._.cache.selectedText="";
this._.cache.ranges=new CKEDITOR.dom.rangeList();
}return this;
};
var styleObjectElements={img:1,hr:1,li:1,table:1,tr:1,td:1,th:1,embed:1,object:1,ol:1,ul:1,a:1,input:1,form:1,select:1,textarea:1,button:1,fieldset:1,thead:1,tfoot:1};
CKEDITOR.dom.selection.prototype={getNative:function(){if(this._.cache.nativeSel){return this._.cache.nativeSel;
}return(this._.cache.nativeSel=isMSSelection?this.document.$.selection:this.document.getWindow().$.getSelection());
},isValid:function(){if(isMSSelection==false){return true;
}if(this._.cache==null||this._.cache.ranges==null||this._.cache.ranges.length===0){return false;
}var range=this._.cache.ranges[0];
var startContainer=range.startContainer;
if(!startContainer){return false;
}return typeof startContainer.$.parentNode==="unknown"?false:true;
},getType:isMSSelection?function(){var cache=this._.cache;
if(cache.type){return cache.type;
}var type=CKEDITOR.SELECTION_NONE;
try{var sel=this.getNative(),ieType=sel.type;
if(ieType=="Text"){type=CKEDITOR.SELECTION_TEXT;
}if(ieType=="Control"){type=CKEDITOR.SELECTION_ELEMENT;
}if(sel.createRange().parentElement()){type=CKEDITOR.SELECTION_TEXT;
}}catch(e){}return(cache.type=type);
}:function(){var cache=this._.cache;
if(cache.type){return cache.type;
}var type=CKEDITOR.SELECTION_TEXT;
var sel=this.getNative();
if(!(sel&&sel.rangeCount)){type=CKEDITOR.SELECTION_NONE;
}else{if(sel.rangeCount==1){var range=sel.getRangeAt(0),startContainer=range.startContainer;
if(startContainer==range.endContainer&&startContainer.nodeType==1&&(range.endOffset-range.startOffset)==1&&styleObjectElements[startContainer.childNodes[range.startOffset].nodeName.toLowerCase()]){type=CKEDITOR.SELECTION_ELEMENT;
}}}return(cache.type=type);
},getRanges:(function(){var func=isMSSelection?(function(){function getNodeIndex(node){return new CKEDITOR.dom.node(node).getIndex();
}var getBoundaryInformation=function(range,start){range=range.duplicate();
range.collapse(start);
var parent=range.parentElement(),doc=parent.ownerDocument;
if(!parent.hasChildNodes()){return{container:parent,offset:0};
}var siblings=parent.children,child,sibling,testRange=range.duplicate(),startIndex=0,endIndex=siblings.length-1,index=-1,position,distance,container;
while(startIndex<=endIndex){index=Math.floor((startIndex+endIndex)/2);
child=siblings[index];
testRange.moveToElementText(child);
position=testRange.compareEndPoints("StartToStart",range);
if(position>0){endIndex=index-1;
}else{if(position<0){startIndex=index+1;
}else{if(CKEDITOR.env.ie9Compat&&child.tagName=="BR"){var sel=doc.defaultView.getSelection();
return{container:sel[start?"anchorNode":"focusNode"],offset:sel[start?"anchorOffset":"focusOffset"]};
}else{return{container:parent,offset:getNodeIndex(child)};
}}}}if(index==-1||index==siblings.length-1&&position<0){testRange.moveToElementText(parent);
testRange.setEndPoint("StartToStart",range);
distance=testRange.text.replace(/(\r\n|\r)/g,"\n").length;
siblings=parent.childNodes;
if(!distance){try{child=siblings[siblings.length-1];
if(child.nodeType==CKEDITOR.NODE_TEXT&&typeof child.nodeValue!="string"){child=siblings[siblings.length-2];
}if(child.nodeType==CKEDITOR.NODE_ELEMENT){return{container:parent,offset:siblings.length};
}else{return{container:child,offset:child.nodeValue.length};
}}catch(e){DocHandleError("getRanges - exception:  "+(e.message||e),"DynDocCKEditor");
return{container:parent,offset:0};
}}var i=siblings.length;
while(distance>0&&i>0){sibling=siblings[--i];
if(sibling.nodeType==CKEDITOR.NODE_TEXT){container=sibling;
try{distance-=sibling.nodeValue.length;
}catch(e){DocHandleError("getRanges - exception (2):  "+(e.message||e),"DynDocCKEditor");
distance=0;
}}}return{container:container,offset:-distance};
}else{testRange.collapse(position>0?true:false);
testRange.setEndPoint(position>0?"StartToStart":"EndToStart",range);
distance=testRange.text.replace(/(\r\n|\r)/g,"\n").length;
if(!distance){return{container:parent,offset:getNodeIndex(child)+(position>0?0:1)};
}while(distance>0){try{sibling=child[position>0?"previousSibling":"nextSibling"];
if(sibling.nodeType==CKEDITOR.NODE_TEXT){distance-=sibling.nodeValue.length;
container=sibling;
}child=sibling;
}catch(e){return{container:parent,offset:getNodeIndex(child)};
}}return{container:container,offset:position>0?-distance:container.nodeValue.length+distance};
}};
return function(){var sel=this.getNative(),nativeRange=sel&&sel.createRange(),type=this.getType(),range;
if(!sel){return[];
}if(type==CKEDITOR.SELECTION_TEXT){range=new CKEDITOR.dom.range(this.root);
var boundaryInfo=getBoundaryInformation(nativeRange,true);
range.setStart(new CKEDITOR.dom.node(boundaryInfo.container),boundaryInfo.offset);
boundaryInfo=getBoundaryInformation(nativeRange);
range.setEnd(new CKEDITOR.dom.node(boundaryInfo.container),boundaryInfo.offset);
if(range.endContainer.getPosition(range.startContainer)&CKEDITOR.POSITION_PRECEDING&&range.endOffset<=range.startContainer.getIndex()){range.collapse();
}return[range];
}else{if(type==CKEDITOR.SELECTION_ELEMENT){var retval=[];
for(var i=0;
i<nativeRange.length;
i++){var element=nativeRange.item(i),parentElement=element.parentNode,j=0;
range=new CKEDITOR.dom.range(this.root);
for(;
j<parentElement.childNodes.length&&parentElement.childNodes[j]!=element;
j++){}range.setStart(new CKEDITOR.dom.node(parentElement),j);
range.setEnd(new CKEDITOR.dom.node(parentElement),j+1);
retval.push(range);
}return retval;
}}return[];
};
})():function(){var ranges=[],range,sel=this.getNative();
if(!sel){return ranges;
}for(var i=0;
i<sel.rangeCount;
i++){var nativeRange=sel.getRangeAt(i);
range=new CKEDITOR.dom.range(this.root);
range.setStart(new CKEDITOR.dom.node(nativeRange.startContainer),nativeRange.startOffset);
range.setEnd(new CKEDITOR.dom.node(nativeRange.endContainer),nativeRange.endOffset);
ranges.push(range);
}return ranges;
};
return function(onlyEditables){var cache=this._.cache;
if(cache.ranges&&!onlyEditables){return cache.ranges;
}else{if(!cache.ranges){cache.ranges=new CKEDITOR.dom.rangeList(func.call(this));
}}if(onlyEditables){var ranges=cache.ranges;
for(var i=0;
i<ranges.length;
i++){var range=ranges[i];
var parent=range.getCommonAncestor();
if(parent.isReadOnly()){ranges.splice(i,1);
}if(range.collapsed){continue;
}if(range.startContainer.isReadOnly()){var current=range.startContainer,isElement;
while(current){isElement=current.type==CKEDITOR.NODE_ELEMENT;
if((isElement&&current.equals("body"))||!current.isReadOnly()){break;
}if(isElement&&current.getAttribute("contentEditable")=="false"){range.setStartAfter(current);
}current=current.getParent();
}}var startContainer=range.startContainer,endContainer=range.endContainer,startOffset=range.startOffset,endOffset=range.endOffset,walkerRange=range.clone();
if(startContainer&&startContainer.type==CKEDITOR.NODE_TEXT){if(startOffset>=startContainer.getLength()){walkerRange.setStartAfter(startContainer);
}else{walkerRange.setStartBefore(startContainer);
}}if(endContainer&&endContainer.type==CKEDITOR.NODE_TEXT){if(!endOffset){walkerRange.setEndBefore(endContainer);
}else{walkerRange.setEndAfter(endContainer);
}}var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=function(node){if(node.type==CKEDITOR.NODE_ELEMENT&&node.isReadOnly()){var newRange=range.clone();
range.setEndBefore(node);
if(range.collapsed){ranges.splice(i--,1);
}if(!(node.getPosition(walkerRange.endContainer)&CKEDITOR.POSITION_CONTAINS)){newRange.setStartAfter(node);
if(!newRange.collapsed){ranges.splice(i+1,0,newRange);
}}return true;
}return false;
};
walker.next();
}}var ranges=cache.ranges;
if(CKEDITOR.env.ie&&CKEDITOR.env.version>=9){cache.ranges=null;
}return ranges;
};
})(),getStartElement:function(){var cache=this._.cache;
if(cache.startElement!==undefined){return cache.startElement;
}var node;
switch(this.getType()){case CKEDITOR.SELECTION_ELEMENT:return this.getSelectedElement();
case CKEDITOR.SELECTION_TEXT:var range=this.getRanges()[0];
if(range){if(!range.collapsed){range.optimize();
while(1){var startContainer=range.startContainer,startOffset=range.startOffset;
if(startOffset==(startContainer.getChildCount?startContainer.getChildCount():startContainer.getLength())&&!startContainer.isBlockBoundary()){range.setStartAfter(startContainer);
}else{break;
}}node=range.startContainer;
if(node.type!=CKEDITOR.NODE_ELEMENT){return node.getParent();
}node=node.getChild(range.startOffset);
if(!node||node.type!=CKEDITOR.NODE_ELEMENT){node=range.startContainer;
}else{var child=node.getFirst();
while(child&&child.type==CKEDITOR.NODE_ELEMENT){node=child;
child=child.getFirst();
}}}else{node=range.startContainer;
if(node.type!=CKEDITOR.NODE_ELEMENT){node=node.getParent();
}}if(node!=null){node=node.$;
}}}return cache.startElement=(node?new CKEDITOR.dom.element(node):null);
},getSelectedElement:function(){var cache=this._.cache;
if(cache.selectedElement!==undefined){return cache.selectedElement;
}var self=this;
var node=CKEDITOR.tools.tryThese(function(){return self.getNative().createRange().item(0);
},function(){var range=self.getRanges()[0],enclosed,selected;
for(var i=2;
i&&!((enclosed=range.getEnclosedNode())&&(enclosed.type==CKEDITOR.NODE_ELEMENT)&&styleObjectElements[enclosed.getName()]&&(selected=enclosed));
i--){range.shrink(CKEDITOR.SHRINK_ELEMENT);
}return selected.$;
});
return cache.selectedElement=(node?new CKEDITOR.dom.element(node):null);
},getSelectedText:function(){var cache=this._.cache;
if(cache.selectedText!==undefined){return cache.selectedText;
}var nativeSel=this.getNative(),text=isMSSelection?nativeSel.type=="Control"?"":nativeSel.createRange().text:nativeSel.toString();
return(cache.selectedText=text);
},lock:function(){this.getRanges();
this.getStartElement();
this.getSelectedElement();
this.getSelectedText();
this._.cache.nativeSel=null;
this.isLocked=1;
},unlock:function(restore){if(!this.isLocked){return;
}if(restore){var selectedElement=this.getSelectedElement(),ranges=!selectedElement&&this.getRanges();
}var isValid=function(range){return range&&range.startContainer&&typeof range.startContainer.$.parentNode!=="unknown"&&!!range.startContainer.$.parentNode&&range.startContainer.$.ownerDocument===this.document.$;
}.bind(this);
this.isLocked=0;
this.reset();
if(restore){if(ranges&&ranges.length&&!isValid(ranges[0])){if(typeof CKEDITOR.DynDocHelper!=="undefined"){CKEDITOR.DynDocHelper.ReportDebugMsg("selection - Range is not valid - resetting the cache and trying again","DynDocCKEditor");
}ranges=!selectedElement&&this.getRanges();
}var common=selectedElement||ranges[0]&&ranges[0].getCommonAncestor();
if(!(common&&common.getAscendant("body",1))){return;
}if(selectedElement){this.selectElement(selectedElement);
}else{if(ranges&&ranges.length&&isValid(ranges[0])){this.selectRanges(ranges);
}}}},reset:function(){this._.cache={};
},selectElement:function(element){var range=new CKEDITOR.dom.range(this.root);
range.setStartBefore(element);
range.setEndAfter(element);
this.selectRanges([range]);
},selectRanges:function(ranges){if(!ranges.length){return;
}if(this.isLocked){var focused=CKEDITOR.document.getActive();
this.unlock();
this.selectRanges(ranges);
this.lock();
!focused.equals(this.root)&&focused.focus();
return;
}if(isMSSelection){var notWhitespaces=CKEDITOR.dom.walker.whitespaces(true),fillerTextRegex=/\ufeff|\u00a0/,nonCells={table:1,tbody:1,tr:1};
if(ranges.length>1){var last=ranges[ranges.length-1];
ranges[0].setEnd(last.endContainer,last.endOffset);
}var range=ranges[0];
var collapsed=range.collapsed,isStartMarkerAlone,dummySpan,ieRange;
if(!range.startContainer){DocHandleError("selection.prototype.selectRanges - range does not have a startContainer","DynDocCKEditor");
return;
}var selected=range.getEnclosedNode();
if(selected&&selected.type==CKEDITOR.NODE_ELEMENT&&selected.getName() in styleObjectElements&&!(selected.is("a")&&selected.getText())){try{ieRange=selected.$.createControlRange();
ieRange.addElement(selected.$);
ieRange.select();
return;
}catch(er){}}if(range.startContainer.type==CKEDITOR.NODE_ELEMENT&&range.startContainer.getName() in nonCells||range.endContainer.type==CKEDITOR.NODE_ELEMENT&&range.endContainer.getName() in nonCells){range.shrink(CKEDITOR.NODE_ELEMENT,true);
}var bookmark=range.createBookmark();
var startNode=bookmark.startNode;
var endNode;
if(!collapsed){endNode=bookmark.endNode;
}ieRange=range.document.$.body.createTextRange();
ieRange.moveToElementText(startNode.$);
ieRange.moveStart("character",1);
if(endNode){var ieRangeEnd=range.document.$.body.createTextRange();
ieRangeEnd.moveToElementText(endNode.$);
ieRange.setEndPoint("EndToEnd",ieRangeEnd);
ieRange.moveEnd("character",-1);
}else{var next=startNode.getNext(notWhitespaces);
var inPre=startNode.hasAscendant("pre");
isStartMarkerAlone=(!(next&&next.getText&&next.getText().match(fillerTextRegex))&&(inPre||!startNode.hasPrevious()||(startNode.getPrevious().is&&startNode.getPrevious().is("br"))));
dummySpan=range.document.createElement("span");
dummySpan.setHtml("&#65279;");
dummySpan.insertBefore(startNode);
if(isStartMarkerAlone){range.document.createText("\ufeff").insertBefore(startNode);
}}range.setStartBefore(startNode);
startNode.remove();
if(collapsed){if(isStartMarkerAlone){ieRange.moveStart("character",-1);
ieRange.select();
range.document.$.selection.clear();
}else{ieRange.select();
}range.moveToPosition(dummySpan,CKEDITOR.POSITION_BEFORE_START);
dummySpan.remove();
}else{range.setEndBefore(endNode);
endNode.remove();
try{ieRange.select();
}catch(e){if(typeof DocHandleError!=="undefined"){DocHandleError("selection.prototype.selectRanges:  Unable to select range - "+(e.message||e),"DynDocCKEditor","","");
}}}}else{var sel=this.getNative();
if(!sel){return;
}if(CKEDITOR.env.opera){var nativeRng=this.document.$.createRange();
nativeRng.selectNodeContents(this.root.$);
sel.addRange(nativeRng);
}this.removeAllRanges();
for(var i=0;
i<ranges.length;
i++){if(i<ranges.length-1){var left=ranges[i],right=ranges[i+1],between=left.clone();
between.setStart(left.endContainer,left.endOffset);
between.setEnd(right.startContainer,right.startOffset);
if(!between.collapsed){between.shrink(CKEDITOR.NODE_ELEMENT,true);
var ancestor=between.getCommonAncestor(),enclosed=between.getEnclosedNode();
if(ancestor.isReadOnly()||enclosed&&enclosed.isReadOnly()){right.setStart(left.startContainer,left.startOffset);
ranges.splice(i--,1);
continue;
}}}range=ranges[i];
var nativeRange=this.document.$.createRange();
var startContainer=range.startContainer;
if(CKEDITOR.env.opera&&range.collapsed&&startContainer.type==CKEDITOR.NODE_ELEMENT){var leftSib=startContainer.getChild(range.startOffset-1),rightSib=startContainer.getChild(range.startOffset);
if(!leftSib&&!rightSib&&startContainer.is(CKEDITOR.dtd.$removeEmpty)||leftSib&&leftSib.type==CKEDITOR.NODE_ELEMENT||rightSib&&rightSib.type==CKEDITOR.NODE_ELEMENT){range.insertNode(this.document.createText(""));
range.collapse(1);
}}if(range.collapsed&&CKEDITOR.env.webkit&&rangeRequiresFix(range)){var fillingChar=createFillingChar(this.root);
range.insertNode(fillingChar);
next=fillingChar.getNext();
if(next&&!fillingChar.getPrevious()&&next.type==CKEDITOR.NODE_ELEMENT&&next.getName()=="br"){removeFillingChar(this.root);
range.moveToPosition(next,CKEDITOR.POSITION_BEFORE_START);
}else{range.moveToPosition(fillingChar,CKEDITOR.POSITION_AFTER_END);
}}function estimateCursorPosition(index){try{nativeRange.setStart(range.startContainer.$,index);
return true;
}catch(e){estimateCursorPosition(index-1);
}}var rangeInErrorState=false;
try{nativeRange.setStart(range.startContainer.$,range.startOffset);
}catch(e){estimateCursorPosition(range.startOffset-1);
nativeRange.collapse(true);
rangeInErrorState=true;
}if(!rangeInErrorState){try{nativeRange.setEnd(range.endContainer.$,range.endOffset);
}catch(e){if(e.toString().indexOf("NS_ERROR_ILLEGAL_VALUE")>=0){range.collapse(1);
nativeRange.setEnd(range.endContainer.$,range.endOffset);
}else{throw e;
}}}sel.addRange(nativeRange);
}}this.reset();
this.root.fire("selectionchange");
},createBookmarks:function(serializable){return this.getRanges().createBookmarks(serializable);
},createBookmarks2:function(normalized){return this.getRanges().createBookmarks2(normalized);
},selectBookmarks:function(bookmarks){var ranges=[];
for(var i=0;
i<bookmarks.length;
i++){var range=new CKEDITOR.dom.range(this.root);
range.moveToBookmark(bookmarks[i]);
ranges.push(range);
}this.selectRanges(ranges);
return this;
},getCommonAncestor:function(){var ranges=this.getRanges(),startNode=ranges[0].startContainer,endNode=ranges[ranges.length-1].endContainer;
return startNode.getCommonAncestor(endNode);
},scrollIntoView:function(){if(this.type!=CKEDITOR.SELECTION_NONE){this.getRanges()[0].scrollIntoView();
}},removeAllRanges:function(){var nativ=this.getNative();
try{nativ&&nativ[isMSSelection?"empty":"removeAllRanges"]();
}catch(er){}this.reset();
}};
})();
CKEDITOR.editor.prototype.attachStyleStateChange=function(style,callback){var styleStateChangeCallbacks=this._.styleStateChangeCallbacks;
if(!styleStateChangeCallbacks){styleStateChangeCallbacks=this._.styleStateChangeCallbacks=[];
this.on("selectionChange",function(ev){for(var i=0;
i<styleStateChangeCallbacks.length;
i++){var callback=styleStateChangeCallbacks[i];
var currentState=callback.style.checkActive(ev.data.path)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF;
callback.fn.call(this,currentState);
}});
}styleStateChangeCallbacks.push({style:style,fn:callback});
};
CKEDITOR.STYLE_BLOCK=1;
CKEDITOR.STYLE_INLINE=2;
CKEDITOR.STYLE_OBJECT=3;
(function(){var blockElements={address:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,p:1,pre:1,section:1,header:1,footer:1,nav:1,article:1,aside:1,figure:1,dialog:1,hgroup:1,time:1,meter:1,menu:1,command:1,keygen:1,output:1,progress:1,details:1,datagrid:1,datalist:1},objectElements={a:1,embed:1,hr:1,img:1,li:1,object:1,ol:1,table:1,td:1,tr:1,th:1,ul:1,dl:1,dt:1,dd:1,form:1,audio:1,video:1};
var semicolonFixRegex=/\s*(?:;\s*|$)/,varRegex=/#\((.+?)\)/g;
var notBookmark=CKEDITOR.dom.walker.bookmark(0,1),nonWhitespaces=CKEDITOR.dom.walker.whitespaces(1);
CKEDITOR.style=function(styleDefinition,variablesValues){styleDefinition.ignoreReadonly=true;
var attrs=styleDefinition.attributes;
if(attrs&&attrs.style){styleDefinition.styles=CKEDITOR.tools.extend({},styleDefinition.styles,CKEDITOR.tools.parseCssText(attrs.style));
delete attrs.style;
}if(variablesValues){styleDefinition=CKEDITOR.tools.clone(styleDefinition);
replaceVariables(styleDefinition.attributes,variablesValues);
replaceVariables(styleDefinition.styles,variablesValues);
}var element=this.element=styleDefinition.element?(typeof styleDefinition.element=="string"?styleDefinition.element.toLowerCase():styleDefinition.element):"*";
this.type=styleDefinition.type||(blockElements[element]?CKEDITOR.STYLE_BLOCK:objectElements[element]?CKEDITOR.STYLE_OBJECT:CKEDITOR.STYLE_INLINE);
if(typeof this.element=="object"){this.type=CKEDITOR.STYLE_OBJECT;
}this._={definition:styleDefinition};
};
CKEDITOR.editor.prototype.applyStyle=function(style){applyStyleOnSelection.call(style,this.getSelection());
};
CKEDITOR.editor.prototype.removeStyle=function(style){applyStyleOnSelection.call(style,this.getSelection(),1);
this.fire("selectionChange",{selection:this.getSelection(),path:this.elementPath()});
};
CKEDITOR.style.prototype={apply:function(document){applyStyleOnSelection.call(this,document.getSelection());
},remove:function(document){applyStyleOnSelection.call(this,document.getSelection(),1);
},applyToRange:function(range){return(this.applyToRange=this.type==CKEDITOR.STYLE_INLINE?applyInlineStyle:this.type==CKEDITOR.STYLE_BLOCK?applyBlockStyle:this.type==CKEDITOR.STYLE_OBJECT?applyObjectStyle:null).call(this,range);
},removeFromRange:function(range){return(this.removeFromRange=this.type==CKEDITOR.STYLE_INLINE?removeInlineStyle:this.type==CKEDITOR.STYLE_BLOCK?removeBlockStyle:this.type==CKEDITOR.STYLE_OBJECT?removeObjectStyle:null).call(this,range);
},applyToObject:function(element){setupElement(element,this);
},checkActive:function(elementPath){switch(this.type){case CKEDITOR.STYLE_BLOCK:return this.checkElementRemovable(elementPath.block||elementPath.blockLimit,true);
case CKEDITOR.STYLE_OBJECT:case CKEDITOR.STYLE_INLINE:var elements=elementPath.elements;
for(var i=0,element;
i<elements.length;
i++){element=elements[i];
if(this.type==CKEDITOR.STYLE_INLINE&&(element==elementPath.block||element==elementPath.blockLimit)){continue;
}if(this.type==CKEDITOR.STYLE_OBJECT){var name=element.getName();
if(!(typeof this.element=="string"?name==this.element:name in this.element)){continue;
}}if(this.checkElementRemovable(element,true)){return true;
}}}return false;
},checkApplicable:function(elementPath){switch(this.type){case CKEDITOR.STYLE_INLINE:case CKEDITOR.STYLE_BLOCK:break;
case CKEDITOR.STYLE_OBJECT:return elementPath.contains(this.element);
}return true;
},checkElementMatch:function(element,fullMatch){var def=this._.definition;
if(!element||!def.ignoreReadonly&&element.isReadOnly()){return false;
}var attribs,name=element.getName();
if(typeof this.element=="string"?name==this.element:name in this.element){if(!fullMatch&&!element.hasAttributes()){return true;
}attribs=getAttributesForComparison(def);
if(attribs._length){for(var attName in attribs){if(attName=="_length"){continue;
}var elementAttr=element.getAttribute(attName)||"";
if(attName=="style"?compareCssText(attribs[attName],elementAttr):attribs[attName]==elementAttr){if(!fullMatch){return true;
}}else{if(fullMatch){return false;
}}}if(fullMatch){return true;
}}else{return true;
}}return false;
},checkElementRemovable:function(element,fullMatch){if(this.checkElementMatch(element,fullMatch)){return true;
}var override=getOverrides(this)[element.getName()];
if(override){var attribs,attName;
if(!(attribs=override.attributes)){return true;
}for(var i=0;
i<attribs.length;
i++){attName=attribs[i][0];
var actualAttrValue=element.getAttribute(attName);
if(actualAttrValue){var attValue=attribs[i][1];
if(attValue===null||(typeof attValue=="string"&&actualAttrValue==attValue)||attValue.test(actualAttrValue)){return true;
}}}}return false;
},buildPreview:function(label){var styleDefinition=this._.definition,html=[],elementName=styleDefinition.element;
if(elementName=="bdo"){elementName="span";
}html=["<",elementName];
var attribs=styleDefinition.attributes;
if(attribs){for(var att in attribs){html.push(" ",att,'="',attribs[att],'"');
}}var cssStyle=CKEDITOR.style.getStyleText(styleDefinition);
if(cssStyle){html.push(' style="',cssStyle,'"');
}html.push(">",(label||styleDefinition.name),"</",elementName,">");
return html.join("");
},getDefinition:function(){return this._.definition;
}};
CKEDITOR.style.getStyleText=function(styleDefinition){var stylesDef=styleDefinition._ST;
if(stylesDef){return stylesDef;
}stylesDef=styleDefinition.styles;
var stylesText=(styleDefinition.attributes&&styleDefinition.attributes.style)||"",specialStylesText="";
if(stylesText.length){stylesText=stylesText.replace(semicolonFixRegex,";");
}for(var style in stylesDef){var styleVal=stylesDef[style],text=(style+":"+styleVal).replace(semicolonFixRegex,";");
if(styleVal=="inherit"){specialStylesText+=text;
}else{stylesText+=text;
}}if(stylesText.length){stylesText=CKEDITOR.tools.normalizeCssText(stylesText,true);
}stylesText+=specialStylesText;
return(styleDefinition._ST=stylesText);
};
function getUnstylableParent(element,root){var unstylable,editable;
while((element=element.getParent())){if(element.equals(root)){break;
}if(element.getAttribute("data-nostyle")){unstylable=element;
}else{if(!editable){var contentEditable=element.getAttribute("contentEditable");
if(contentEditable=="false"){unstylable=element;
}else{if(contentEditable=="true"){editable=1;
}}}}}return unstylable;
}function applyInlineStyle(range){var document=range.document;
if(range.collapsed){var collapsedElement=getElement(this,document);
range.insertNode(collapsedElement);
range.moveToPosition(collapsedElement,CKEDITOR.POSITION_BEFORE_END);
return;
}var elementName=this.element;
var def=this._.definition;
var isUnknownElement;
var ignoreReadonly=def.ignoreReadonly,includeReadonly=ignoreReadonly||def.includeReadonly;
if(includeReadonly==undefined){includeReadonly=range.root.getCustomData("cke_includeReadonly");
}var dtd=CKEDITOR.dtd[elementName]||(isUnknownElement=true,CKEDITOR.dtd.span);
range.enlarge(CKEDITOR.ENLARGE_INLINE,1);
range.trim();
var boundaryNodes=range.createBookmark(),firstNode=boundaryNodes.startNode,lastNode=boundaryNodes.endNode;
var currentNode=firstNode;
var styleRange;
if(!ignoreReadonly){var root=range.getCommonAncestor(),firstUnstylable=getUnstylableParent(firstNode,root),lastUnstylable=getUnstylableParent(lastNode,root);
if(firstUnstylable){currentNode=firstUnstylable.getNextSourceNode(true);
}if(lastUnstylable){lastNode=lastUnstylable;
}}if(currentNode.getPosition(lastNode)==CKEDITOR.POSITION_FOLLOWING){currentNode=0;
}while(currentNode){var applyStyle=false;
if(currentNode.equals(lastNode)){currentNode=null;
applyStyle=true;
}else{var nodeType=currentNode.type;
var nodeName=nodeType==CKEDITOR.NODE_ELEMENT?currentNode.getName():null;
var nodeIsReadonly=nodeName&&(currentNode.getAttribute("contentEditable")=="false");
var nodeIsNoStyle=nodeName&&currentNode.getAttribute("data-nostyle");
if(nodeName&&currentNode.data("cke-bookmark")){currentNode=currentNode.getNextSourceNode(true);
continue;
}if(!nodeName||(dtd[nodeName]&&!nodeIsNoStyle&&(!nodeIsReadonly||includeReadonly)&&(currentNode.getPosition(lastNode)|CKEDITOR.POSITION_PRECEDING|CKEDITOR.POSITION_IDENTICAL|CKEDITOR.POSITION_IS_CONTAINED)==(CKEDITOR.POSITION_PRECEDING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED)&&(!def.childRule||def.childRule(currentNode)))){var currentParent=currentNode.getParent();
if(currentParent&&((currentParent.getDtd()||CKEDITOR.dtd.span)[elementName]||isUnknownElement)&&(!def.parentRule||def.parentRule(currentParent))){if(!styleRange&&(!nodeName||!CKEDITOR.dtd.$removeEmpty[nodeName]||(currentNode.getPosition(lastNode)|CKEDITOR.POSITION_PRECEDING|CKEDITOR.POSITION_IDENTICAL|CKEDITOR.POSITION_IS_CONTAINED)==(CKEDITOR.POSITION_PRECEDING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED))){styleRange=range.clone();
styleRange.setStartBefore(currentNode);
}if(nodeType==CKEDITOR.NODE_TEXT||nodeIsReadonly||(nodeType==CKEDITOR.NODE_ELEMENT&&!currentNode.getChildCount())){var includedNode=currentNode;
var parentNode;
while((applyStyle=!includedNode.getNext(notBookmark))&&(parentNode=includedNode.getParent(),dtd[parentNode.getName()])&&(parentNode.getPosition(firstNode)|CKEDITOR.POSITION_FOLLOWING|CKEDITOR.POSITION_IDENTICAL|CKEDITOR.POSITION_IS_CONTAINED)==(CKEDITOR.POSITION_FOLLOWING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED)&&(!def.childRule||def.childRule(parentNode))){includedNode=parentNode;
}styleRange.setEndAfter(includedNode);
}}else{applyStyle=true;
}}else{applyStyle=true;
}currentNode=currentNode.getNextSourceNode(nodeIsNoStyle||nodeIsReadonly&&!includeReadonly);
}if(applyStyle&&styleRange&&!styleRange.collapsed){var styleNode=getElement(this,document),styleHasAttrs=styleNode.hasAttributes();
var parent=styleRange.getCommonAncestor();
var removeList={styles:{},attrs:{},blockedStyles:{},blockedAttrs:{}};
var attName,styleName,value;
while(styleNode&&parent){if(parent.getName()==elementName){for(attName in def.attributes){if(removeList.blockedAttrs[attName]||!(value=parent.getAttribute(styleName))){continue;
}if(styleNode.getAttribute(attName)==value){removeList.attrs[attName]=1;
}else{removeList.blockedAttrs[attName]=1;
}}for(styleName in def.styles){if(removeList.blockedStyles[styleName]||!(value=parent.getStyle(styleName))){continue;
}if(styleNode.getStyle(styleName)==value){removeList.styles[styleName]=1;
}else{removeList.blockedStyles[styleName]=1;
}}}parent=parent.getParent();
}for(attName in removeList.attrs){styleNode.removeAttribute(attName);
}for(styleName in removeList.styles){styleNode.removeStyle(styleName);
}if(styleHasAttrs&&!styleNode.hasAttributes()){styleNode=null;
}if(styleNode){styleRange.extractContents().appendTo(styleNode);
removeFromInsideElement.call(this,styleNode);
styleRange.insertNode(styleNode);
styleNode.mergeSiblings();
if(!CKEDITOR.env.ie){styleNode.$.normalize();
}}else{styleNode=new CKEDITOR.dom.element("span");
styleRange.extractContents().appendTo(styleNode);
styleRange.insertNode(styleNode);
removeFromInsideElement.call(this,styleNode);
styleNode.remove(true);
}styleRange=null;
}}range.moveToBookmark(boundaryNodes);
range.shrink(CKEDITOR.SHRINK_TEXT);
}function removeInlineStyle(range){range.enlarge(CKEDITOR.ENLARGE_INLINE,1);
var bookmark=range.createBookmark(),startNode=bookmark.startNode;
if(range.collapsed){var startPath=new CKEDITOR.dom.elementPath(startNode.getParent(),range.root),boundaryElement;
for(var i=0,element;
i<startPath.elements.length&&(element=startPath.elements[i]);
i++){if(element==startPath.block||element==startPath.blockLimit){break;
}if(this.checkElementRemovable(element)){var isStart;
if(range.collapsed&&(range.checkBoundaryOfElement(element,CKEDITOR.END)||(isStart=range.checkBoundaryOfElement(element,CKEDITOR.START)))){boundaryElement=element;
boundaryElement.match=isStart?"start":"end";
}else{element.mergeSiblings();
if(element.getName()==this.element){removeFromElement.call(this,element);
}else{removeOverrides(element,getOverrides(this)[element.getName()]);
}}}}if(boundaryElement){var clonedElement=startNode;
for(i=0;
;
i++){var newElement=startPath.elements[i];
if(newElement.equals(boundaryElement)){break;
}else{if(newElement.match){continue;
}else{newElement=newElement.clone();
}}newElement.append(clonedElement);
clonedElement=newElement;
}clonedElement[boundaryElement.match=="start"?"insertBefore":"insertAfter"](boundaryElement);
}}else{var endNode=bookmark.endNode,me=this;
function breakNodes(){var startPath=new CKEDITOR.dom.elementPath(startNode.getParent()),endPath=new CKEDITOR.dom.elementPath(endNode.getParent()),breakStart=null,breakEnd=null;
for(var i=0;
i<startPath.elements.length;
i++){var element=startPath.elements[i];
if(element==startPath.block||element==startPath.blockLimit){break;
}if(me.checkElementRemovable(element)){breakStart=element;
}}for(i=0;
i<endPath.elements.length;
i++){element=endPath.elements[i];
if(element==endPath.block||element==endPath.blockLimit){break;
}if(me.checkElementRemovable(element)){breakEnd=element;
}}if(breakEnd){endNode.breakParent(breakEnd);
}if(breakStart){startNode.breakParent(breakStart);
}}breakNodes();
var currentNode=startNode;
while(!currentNode.equals(endNode)){var nextNode=currentNode.getNextSourceNode();
if(currentNode.type==CKEDITOR.NODE_ELEMENT&&this.checkElementRemovable(currentNode)){if(currentNode.getName()==this.element){removeFromElement.call(this,currentNode);
}else{removeOverrides(currentNode,getOverrides(this)[currentNode.getName()]);
}if(nextNode.type==CKEDITOR.NODE_ELEMENT&&nextNode.contains(startNode)){breakNodes();
nextNode=startNode.getNext();
}}currentNode=nextNode;
}}range.moveToBookmark(bookmark);
}function applyObjectStyle(range){var start=range.getEnclosedNode()||range.getCommonAncestor(false,true),element=new CKEDITOR.dom.elementPath(start,range.root).contains(this.element,1);
element&&!element.isReadOnly()&&setupElement(element,this);
}function removeObjectStyle(range){var parent=range.getCommonAncestor(true,true),element=new CKEDITOR.dom.elementPath(parent,range.root).contains(this.element,1);
if(!element){return;
}var style=this,def=style._.definition,attributes=def.attributes;
if(attributes){for(var att in attributes){element.removeAttribute(att,attributes[att]);
}}if(def.styles){for(var i in def.styles){if(!def.styles.hasOwnProperty(i)){continue;
}element.removeStyle(i);
}}}function applyBlockStyle(range){var bookmark=range.createBookmark(true);
var iterator=range.createIterator();
iterator.enforceRealBlocks=true;
if(this._.enterMode){iterator.enlargeBr=(this._.enterMode!=CKEDITOR.ENTER_BR);
}var block;
var doc=range.document;
var previousPreBlock;
while((block=iterator.getNextParagraph())){if(!block.isReadOnly()){var newBlock=getElement(this,doc,block);
replaceBlock(block,newBlock);
}}range.moveToBookmark(bookmark);
}function removeBlockStyle(range){var bookmark=range.createBookmark(1);
var iterator=range.createIterator();
iterator.enforceRealBlocks=true;
iterator.enlargeBr=this._.enterMode!=CKEDITOR.ENTER_BR;
var block;
while((block=iterator.getNextParagraph())){if(this.checkElementRemovable(block)){if(block.is("pre")){var newBlock=this._.enterMode==CKEDITOR.ENTER_BR?null:range.document.createElement(this._.enterMode==CKEDITOR.ENTER_P?"p":"div");
newBlock&&block.copyAttributes(newBlock);
replaceBlock(block,newBlock);
}else{removeFromElement.call(this,block);
}}}range.moveToBookmark(bookmark);
}function replaceBlock(block,newBlock){var removeBlock=!newBlock;
if(removeBlock){newBlock=block.getDocument().createElement("div");
block.copyAttributes(newBlock);
}var newBlockIsPre=newBlock&&newBlock.is("pre");
var blockIsPre=block.is("pre");
var isToPre=newBlockIsPre&&!blockIsPre;
var isFromPre=!newBlockIsPre&&blockIsPre;
if(isToPre){newBlock=toPre(block,newBlock);
}else{if(isFromPre){newBlock=fromPres(removeBlock?[block.getHtml()]:splitIntoPres(block),newBlock);
}else{block.moveChildren(newBlock);
}}newBlock.replace(block);
if(newBlockIsPre){mergePre(newBlock);
}else{if(removeBlock){removeNoAttribsElement(newBlock);
}}}function mergePre(preBlock){var previousBlock;
if(!((previousBlock=preBlock.getPrevious(nonWhitespaces))&&previousBlock.is&&previousBlock.is("pre"))){return;
}var mergedHtml=replace(previousBlock.getHtml(),/\n$/,"")+"\n\n"+replace(preBlock.getHtml(),/^\n/,"");
if(CKEDITOR.env.ie){preBlock.$.outerHTML="<pre>"+mergedHtml+"</pre>";
}else{preBlock.setHtml(mergedHtml);
}previousBlock.remove();
}function splitIntoPres(preBlock){var duoBrRegex=/(\S\s*)\n(?:\s|(<span[^>]+data-cke-bookmark.*?\/span>))*\n(?!$)/gi,blockName=preBlock.getName(),splitedHtml=replace(preBlock.getOuterHtml(),duoBrRegex,function(match,charBefore,bookmark){return charBefore+"</pre>"+bookmark+"<pre>";
});
var pres=[];
splitedHtml.replace(/<pre\b.*?>([\s\S]*?)<\/pre>/gi,function(match,preContent){pres.push(preContent);
});
return pres;
}function replace(str,regexp,replacement){var headBookmark="",tailBookmark="";
str=str.replace(/(^<span[^>]+data-cke-bookmark.*?\/span>)|(<span[^>]+data-cke-bookmark.*?\/span>$)/gi,function(str,m1,m2){m1&&(headBookmark=m1);
m2&&(tailBookmark=m2);
return"";
});
return headBookmark+str.replace(regexp,replacement)+tailBookmark;
}function fromPres(preHtmls,newBlock){var docFrag;
if(preHtmls.length>1){docFrag=new CKEDITOR.dom.documentFragment(newBlock.getDocument());
}for(var i=0;
i<preHtmls.length;
i++){var blockHtml=preHtmls[i];
blockHtml=blockHtml.replace(/(\r\n|\r)/g,"\n");
blockHtml=replace(blockHtml,/^[ \t]*\n/,"");
blockHtml=replace(blockHtml,/\n$/,"");
blockHtml=replace(blockHtml,/^[ \t]+|[ \t]+$/g,function(match,offset,s){if(match.length==1){return"&nbsp;";
}else{if(!offset){return CKEDITOR.tools.repeat("&nbsp;",match.length-1)+" ";
}else{return" "+CKEDITOR.tools.repeat("&nbsp;",match.length-1);
}}});
blockHtml=blockHtml.replace(/\n/g,"<br>");
blockHtml=blockHtml.replace(/[ \t]{2,}/g,function(match){return CKEDITOR.tools.repeat("&nbsp;",match.length-1)+" ";
});
if(docFrag){var newBlockClone=newBlock.clone();
newBlockClone.setHtml(blockHtml);
docFrag.append(newBlockClone);
}else{newBlock.setHtml(blockHtml);
}}return docFrag||newBlock;
}function toPre(block,newBlock){var bogus=block.getBogus();
bogus&&bogus.remove();
var preHtml=block.getHtml();
preHtml=replace(preHtml,/(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g,"");
preHtml=preHtml.replace(/[ \t\r\n]*(<br[^>]*>)[ \t\r\n]*/gi,"$1");
preHtml=preHtml.replace(/([ \t\n\r]+|&nbsp;)/g," ");
preHtml=preHtml.replace(/<br\b[^>]*>/gi,"\n");
if(CKEDITOR.env.ie){var temp=block.getDocument().createElement("div");
temp.append(newBlock);
newBlock.$.outerHTML="<pre>"+preHtml+"</pre>";
newBlock.copyAttributes(temp.getFirst());
newBlock=temp.getFirst().remove();
}else{newBlock.setHtml(preHtml);
}return newBlock;
}function removeFromElement(element){var def=this._.definition,attributes=def.attributes,styles=def.styles,overrides=getOverrides(this)[element.getName()],removeEmpty=CKEDITOR.tools.isEmpty(attributes)&&CKEDITOR.tools.isEmpty(styles);
for(var attName in attributes){if((attName=="class"||this._.definition.fullMatch)&&element.getAttribute(attName)!=normalizeProperty(attName,attributes[attName])){continue;
}removeEmpty=element.hasAttribute(attName);
element.removeAttribute(attName);
}for(var styleName in styles){if(this._.definition.fullMatch&&element.getStyle(styleName)!=normalizeProperty(styleName,styles[styleName],true)){continue;
}removeEmpty=removeEmpty||!!element.getStyle(styleName);
var existingStyle=element.getStyle(styleName);
var bIsTextDecorationRemovable=!((existingStyle==="underline"&&(styles[styleName]==="line-through"||styles[styleName]==="overline"))||(existingStyle==="line-through"&&(styles[styleName]==="underline"||styles[styleName]==="overline"))||(existingStyle==="overline"&&(styles[styleName]==="underline"||styles[styleName]==="line-through")));
if(!CKEDITOR.env.ie||CKEDITOR.env.version>7){var noOfContributions=document.body.querySelectorAll(".ddcontribution").length;
var bAddending=(noOfContributions>1);
if(noOfContributions>0&&(styleName.toLowerCase()==="text-decoration")){if(bIsTextDecorationRemovable&&((element.isReadOnly()&&!bAddending)||(element.isReadOnly()&&bAddending)||element.isEditable())){element.removeStyle(styleName);
}}else{if(styleName.toLowerCase()==="text-decoration"){if(bIsTextDecorationRemovable){element.removeStyle(styleName);
}}else{element.removeStyle(styleName);
}}}else{element.removeStyle(styleName);
}}removeOverrides(element,overrides,blockElements[element.getName()]);
if(removeEmpty){if(this._.definition.alwaysRemoveElement){removeNoAttribsElement(element,1);
}else{!CKEDITOR.dtd.$block[element.getName()]||this._.enterMode==CKEDITOR.ENTER_BR&&!element.hasAttributes()?removeNoAttribsElement(element):element.renameNode(this._.enterMode==CKEDITOR.ENTER_P?"p":"div");
}}}function removeFromInsideElement(element){var def=this._.definition,attribs=def.attributes,styles=def.styles,overrides=getOverrides(this),innerElements=element.getElementsByTag(this.element);
for(var i=innerElements.count();
--i>=0;
){removeFromElement.call(this,innerElements.getItem(i));
}for(var overrideElement in overrides){if(overrideElement!=this.element){innerElements=element.getElementsByTag(overrideElement);
for(i=innerElements.count()-1;
i>=0;
i--){var innerElement=innerElements.getItem(i);
removeOverrides(innerElement,overrides[overrideElement]);
}}}}function removeOverrides(element,overrides,dontRemove){var attributes=overrides&&overrides.attributes;
if(attributes){for(var i=0;
i<attributes.length;
i++){var attName=attributes[i][0],actualAttrValue;
if((actualAttrValue=element.getAttribute(attName))){var attValue=attributes[i][1];
if(attValue===null||(attValue.test&&attValue.test(actualAttrValue))||(typeof attValue=="string"&&actualAttrValue==attValue)){element.removeAttribute(attName);
}}}}if(!dontRemove){removeNoAttribsElement(element);
}}function removeNoAttribsElement(element,forceRemove){if(!element.hasAttributes()||forceRemove){if(CKEDITOR.dtd.$block[element.getName()]){var previous=element.getPrevious(nonWhitespaces),next=element.getNext(nonWhitespaces);
if(previous&&(previous.type==CKEDITOR.NODE_TEXT||!previous.isBlockBoundary({br:1}))){element.append("br",1);
}if(next&&(next.type==CKEDITOR.NODE_TEXT||!next.isBlockBoundary({br:1}))){element.append("br");
}element.remove(true);
}else{var firstChild=element.getFirst();
var lastChild=element.getLast();
element.remove(true);
if(firstChild){firstChild.type==CKEDITOR.NODE_ELEMENT&&firstChild.mergeSiblings();
if(lastChild&&!firstChild.equals(lastChild)&&lastChild.type==CKEDITOR.NODE_ELEMENT){lastChild.mergeSiblings();
}}}}}function getElement(style,targetDocument,element){var el,def=style._.definition,elementName=style.element;
if(elementName=="*"){elementName="span";
}el=new CKEDITOR.dom.element(elementName,targetDocument);
if(element){element.copyAttributes(el);
}el=setupElement(el,style);
if(targetDocument.getCustomData("doc_processing_style")&&el.hasAttribute("id")){el.removeAttribute("id");
}else{targetDocument.setCustomData("doc_processing_style",1);
}return el;
}function setupElement(el,style){var def=style._.definition,attributes=def.attributes,styles=CKEDITOR.style.getStyleText(def);
if(attributes){for(var att in attributes){el.setAttribute(att,attributes[att]);
}}if(styles){el.setAttribute("style",styles);
}return el;
}function replaceVariables(list,variablesValues){for(var item in list){list[item]=list[item].replace(varRegex,function(match,varName){return variablesValues[varName];
});
}}function getAttributesForComparison(styleDefinition){var attribs=styleDefinition._AC;
if(attribs){return attribs;
}attribs={};
var length=0;
var styleAttribs=styleDefinition.attributes;
if(styleAttribs){for(var styleAtt in styleAttribs){length++;
attribs[styleAtt]=styleAttribs[styleAtt];
}}var styleText=CKEDITOR.style.getStyleText(styleDefinition);
if(styleText){if(!attribs.style){length++;
}attribs.style=styleText;
}attribs._length=length;
return(styleDefinition._AC=attribs);
}function getOverrides(style){if(style._.overrides){return style._.overrides;
}var overrides=(style._.overrides={}),definition=style._.definition.overrides;
if(definition){if(!CKEDITOR.tools.isArray(definition)){definition=[definition];
}for(var i=0;
i<definition.length;
i++){var override=definition[i];
var elementName;
var overrideEl;
var attrs;
if(typeof override=="string"){elementName=override.toLowerCase();
}else{elementName=override.element?override.element.toLowerCase():style.element;
attrs=override.attributes;
}overrideEl=overrides[elementName]||(overrides[elementName]={});
if(attrs){var overrideAttrs=(overrideEl.attributes=overrideEl.attributes||new Array());
for(var attName in attrs){overrideAttrs.push([attName.toLowerCase(),attrs[attName]]);
}}}}return overrides;
}function normalizeProperty(name,value,isStyle){var temp=new CKEDITOR.dom.element("span");
temp[isStyle?"setStyle":"setAttribute"](name,value);
return temp[isStyle?"getStyle":"getAttribute"](name);
}function compareCssText(source,target){typeof source=="string"&&(source=CKEDITOR.tools.parseCssText(source));
typeof target=="string"&&(target=CKEDITOR.tools.parseCssText(target,true));
for(var name in source){if(!(name in target&&(target[name]==source[name]||source[name]=="inherit"||target[name]=="inherit"))){return false;
}}return true;
}function applyStyleOnSelection(selection,remove){var doc=selection.document,ranges=selection.getRanges(),func=remove?this.removeFromRange:this.applyToRange,range;
var iterator=ranges.createIterator();
while((range=iterator.getNextRange())){func.call(this,range);
}selection.selectRanges(ranges);
doc.removeCustomData("doc_processing_style");
}})();
CKEDITOR.styleCommand=function(style,ext){this.style=style;
this.allowedContent=style;
this.requiredContent=style;
CKEDITOR.tools.extend(this,ext,true);
};
CKEDITOR.styleCommand.prototype.exec=function(editor){editor.focus();
if(this.state==CKEDITOR.TRISTATE_OFF){editor.applyStyle(this.style);
}else{if(this.state==CKEDITOR.TRISTATE_ON){editor.removeStyle(this.style);
}}};
CKEDITOR.stylesSet=new CKEDITOR.resourceManager("","stylesSet");
CKEDITOR.addStylesSet=CKEDITOR.tools.bind(CKEDITOR.stylesSet.add,CKEDITOR.stylesSet);
CKEDITOR.loadStylesSet=function(name,url,callback){CKEDITOR.stylesSet.addExternal(name,url,"");
CKEDITOR.stylesSet.load(name,callback);
};
CKEDITOR.editor.prototype.getStylesSet=function(callback){if(!this._.stylesDefinitions){var editor=this,configStyleSet=editor.config.stylesCombo_stylesSet||editor.config.stylesSet;
if(configStyleSet===false){callback(null);
return;
}if(configStyleSet instanceof Array){editor._.stylesDefinitions=configStyleSet;
callback(configStyleSet);
return;
}if(!configStyleSet){configStyleSet="default";
}var partsStylesSet=configStyleSet.split(":"),styleSetName=partsStylesSet[0],externalPath=partsStylesSet[1];
CKEDITOR.stylesSet.addExternal(styleSetName,externalPath?partsStylesSet.slice(1).join(":"):CKEDITOR.getUrl("styles.js"),"");
CKEDITOR.stylesSet.load(styleSetName,function(stylesSet){editor._.stylesDefinitions=stylesSet[styleSetName];
callback(editor._.stylesDefinitions);
});
}else{callback(this._.stylesDefinitions);
}};
CKEDITOR.dom.comment=function(comment,ownerDocument){if(typeof comment=="string"){comment=(ownerDocument?ownerDocument.$:document).createComment(comment);
}CKEDITOR.dom.domObject.call(this,comment);
};
CKEDITOR.dom.comment.prototype=new CKEDITOR.dom.node();
CKEDITOR.tools.extend(CKEDITOR.dom.comment.prototype,{type:CKEDITOR.NODE_COMMENT,getOuterHtml:function(){return"<!--"+this.$.nodeValue+"-->";
}});
(function(){var pathBlockLimitElements={};
for(var tag in CKEDITOR.dtd.$blockLimit){if(!(tag in CKEDITOR.dtd.$list)){pathBlockLimitElements[tag]=1;
}}var pathBlockElements={};
for(tag in CKEDITOR.dtd.$block){if(!(tag in CKEDITOR.dtd.$blockLimit||tag in CKEDITOR.dtd.$empty)){pathBlockElements[tag]=1;
}}var checkHasBlock=function(element){var childNodes=element.getChildren();
for(var i=0,count=childNodes.count();
i<count;
i++){var child=childNodes.getItem(i);
if(child.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$block[child.getName()]){return true;
}}return false;
};
CKEDITOR.dom.elementPath=function(startNode,root){var block=null;
var blockLimit=null;
var elements=[];
root=root||startNode.getDocument().getBody();
var e=startNode;
do{if(e.type==CKEDITOR.NODE_ELEMENT){elements.push(e);
if(!this.lastElement){this.lastElement=e;
if(e.is(CKEDITOR.dtd.$object)){continue;
}}var elementName=e.getName();
if(!blockLimit){if(!block&&pathBlockElements[elementName]){block=e;
}if(pathBlockLimitElements[elementName]){if(!block&&elementName=="div"&&!checkHasBlock(e)&&!e.equals(root)){block=e;
}else{blockLimit=e;
}}}if(e.equals(root)){break;
}}}while((e=e.getParent()));
this.block=block;
this.blockLimit=blockLimit;
this.root=root;
this.elements=elements;
};
})();
CKEDITOR.dom.elementPath.prototype={compare:function(otherPath){var thisElements=this.elements;
var otherElements=otherPath&&otherPath.elements;
if(!otherElements||thisElements.length!=otherElements.length){return false;
}for(var i=0;
i<thisElements.length;
i++){if(!thisElements[i].equals(otherElements[i])){return false;
}}return true;
},contains:function(query,excludeRoot,fromTop){var evaluator;
if(typeof query=="string"){evaluator=function(node){return node.getName()==query;
};
}if(query instanceof CKEDITOR.dom.element){evaluator=function(node){return node.equals(query);
};
}else{if(CKEDITOR.tools.isArray(query)){evaluator=function(node){return CKEDITOR.tools.indexOf(query,node.getName())>-1;
};
}else{if(typeof query=="function"){evaluator=query;
}else{if(typeof query=="object"){evaluator=function(node){return node.getName() in query;
};
}}}}var elements=this.elements,length=elements.length;
excludeRoot&&length--;
if(fromTop){elements=Array.prototype.slice.call(elements,0);
elements.reverse();
}for(var i=0;
i<length;
i++){if(evaluator(elements[i])){return elements[i];
}}return null;
},isContextFor:function(tag){var holder;
if(tag in CKEDITOR.dtd.$block){var inter=this.contains(CKEDITOR.dtd.$intermediate);
holder=inter||(this.root.equals(this.block)&&this.block)||this.blockLimit;
return !!holder.getDtd()[tag];
}return true;
},direction:function(){var directionNode=this.block||this.blockLimit||this.root;
return directionNode.getDirection(1);
}};
CKEDITOR.dom.text=function(text,ownerDocument){if(typeof text=="string"){text=(ownerDocument?ownerDocument.$:document).createTextNode(text);
}this.$=text;
};
CKEDITOR.dom.text.prototype=new CKEDITOR.dom.node();
CKEDITOR.tools.extend(CKEDITOR.dom.text.prototype,{type:CKEDITOR.NODE_TEXT,getLength:function(){return this.$.nodeValue.length;
},getText:function(){return this.$.nodeValue;
},setText:function(text){this.$.nodeValue=text;
},split:function(offset){var parent=this.$.parentNode,count=parent.childNodes.length,length=this.getLength();
var doc=this.getDocument();
var retval=new CKEDITOR.dom.text(this.$.splitText(offset),doc);
if(parent.childNodes.length==count){if(offset>=length){retval=doc.createText("");
retval.insertAfter(this);
}else{var workaround=doc.createText("");
workaround.insertAfter(retval);
workaround.remove();
}}return retval;
},substring:function(indexA,indexB){if(typeof indexB!="number"){return this.$.nodeValue.substr(indexA);
}else{return this.$.nodeValue.substring(indexA,indexB);
}}});
(function(){CKEDITOR.dom.rangeList=function(ranges){if(ranges instanceof CKEDITOR.dom.rangeList){return ranges;
}if(!ranges){ranges=[];
}else{if(ranges instanceof CKEDITOR.dom.range){ranges=[ranges];
}}return CKEDITOR.tools.extend(ranges,mixins);
};
var mixins={createIterator:function(){var rangeList=this,bookmark=CKEDITOR.dom.walker.bookmark(),guard=function(node){return !(node.is&&node.is("tr"));
},bookmarks=[],current;
return{getNextRange:function(mergeConsequent){current=current==undefined?0:current+1;
var range=rangeList[current];
if(range&&rangeList.length>1){if(!current){for(var i=rangeList.length-1;
i>=0;
i--){bookmarks.unshift(rangeList[i].createBookmark(true));
}}if(mergeConsequent){var mergeCount=0;
while(rangeList[current+mergeCount+1]){var doc=range.document,found=0,left=doc.getById(bookmarks[mergeCount].endNode),right=doc.getById(bookmarks[mergeCount+1].startNode),next;
while(1){next=left.getNextSourceNode(false);
if(!right.equals(next)){if(bookmark(next)||(next.type==CKEDITOR.NODE_ELEMENT&&next.isBlockBoundary())){left=next;
continue;
}}else{found=1;
}break;
}if(!found){break;
}mergeCount++;
}}range.moveToBookmark(bookmarks.shift());
while(mergeCount--){next=rangeList[++current];
next.moveToBookmark(bookmarks.shift());
range.setEnd(next.endContainer,next.endOffset);
}}return range;
}};
},createBookmarks:function(serializable){var retval=[],bookmark;
for(var i=0;
i<this.length;
i++){retval.push(bookmark=this[i].createBookmark(serializable,true));
for(var j=i+1;
j<this.length;
j++){this[j]=updateDirtyRange(bookmark,this[j]);
this[j]=updateDirtyRange(bookmark,this[j],true);
}}return retval;
},createBookmarks2:function(normalized){var bookmarks=[];
for(var i=0;
i<this.length;
i++){bookmarks.push(this[i].createBookmark2(normalized));
}return bookmarks;
},moveToBookmarks:function(bookmarks){for(var i=0;
i<this.length;
i++){this[i].moveToBookmark(bookmarks[i]);
}}};
function updateDirtyRange(bookmark,dirtyRange,checkEnd){var serializable=bookmark.serializable,container=dirtyRange[checkEnd?"endContainer":"startContainer"],offset=checkEnd?"endOffset":"startOffset";
var bookmarkStart=serializable?dirtyRange.document.getById(bookmark.startNode):bookmark.startNode;
var bookmarkEnd=serializable?dirtyRange.document.getById(bookmark.endNode):bookmark.endNode;
if(container.equals(bookmarkStart.getPrevious())){dirtyRange.startOffset=dirtyRange.startOffset-container.getLength()-bookmarkEnd.getPrevious().getLength();
container=bookmarkEnd.getNext();
}else{if(container.equals(bookmarkEnd.getPrevious())){dirtyRange.startOffset=dirtyRange.startOffset-container.getLength();
container=bookmarkEnd.getNext();
}}container.equals(bookmarkStart.getParent())&&dirtyRange[offset]++;
container.equals(bookmarkEnd.getParent())&&dirtyRange[offset]++;
dirtyRange[checkEnd?"endContainer":"startContainer"]=container;
return dirtyRange;
}})();
(function(){var cssLoaded={};
function getName(){return CKEDITOR.skinName.split(",")[0];
}function getConfigPath(){return CKEDITOR.getUrl(CKEDITOR.skinName.split(",")[1]||("skins/"+getName()+"/"));
}CKEDITOR.skin={path:getConfigPath,loadPart:function(part,fn){if(CKEDITOR.skin.name!=getName()){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(getConfigPath()+"skin.js"),function(){loadCss(part,fn);
});
}else{loadCss(part,fn);
}},getPath:function(part){return CKEDITOR.getUrl(getCssPath(part));
},icons:{},addIcon:function(name,path,offset){name=name.toLowerCase();
if(!this.icons[name]){this.icons[name]={path:path,offset:offset||0};
}},getIconStyle:function(name,rtl,overridePath,overrideOffset){var icon,path,offset;
if(name){name=name.toLowerCase();
if(rtl){icon=this.icons[name+"-rtl"];
}if(!icon){icon=this.icons[name];
}}path=overridePath||(icon&&icon.path)||"";
offset=overrideOffset||(icon&&icon.offset);
return path&&("background-image:url('"+CKEDITOR.getUrl(path).replace(/\\/g,"\\\\")+"');background-position:0 "+offset+"px;");
}};
function getCssPath(part){var uas=CKEDITOR.skin["ua_"+part],env=CKEDITOR.env;
if(uas){uas=uas.split(",").sort(function(a,b){return a>b?-1:1;
});
for(var i=0,ua;
i<uas.length;
i++){ua=uas[i];
if(env.ie){if((ua.replace(/^ie/,"")==env.version)||(env.quirks&&ua=="iequirks")){ua="ie";
}}if(env[ua]){part+="_"+uas[i];
break;
}}}return CKEDITOR.getUrl(getConfigPath()+part+".css");
}function loadCss(part,callback){if(!cssLoaded[part]){CKEDITOR.document.appendStyleSheet(getCssPath(part));
cssLoaded[part]=1;
}callback&&callback();
}CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{getUiColor:function(){return this.uiColor;
},setUiColor:function(color){var uiStyle=getStylesheet(CKEDITOR.document);
return(this.setUiColor=function(color){var chameleon=CKEDITOR.skin.chameleon;
if(null==chameleon){return;
}var replace=[[uiColorRegexp,color]];
this.uiColor=color;
updateStylesheets([uiStyle],chameleon(this,"editor"),replace);
updateStylesheets(uiColorMenus,chameleon(this,"panel"),replace);
}).call(this,color);
}});
var uiColorStylesheetId="cke_ui_color",uiColorMenus=[],uiColorRegexp=/\$color/g;
function getStylesheet(document){var node=document.getById(uiColorStylesheetId);
if(!node){node=document.getHead().append("style");
node.setAttribute("id",uiColorStylesheetId);
node.setAttribute("type","text/css");
}return node;
}function updateStylesheets(styleNodes,styleContent,replace){var r,i,content;
if(CKEDITOR.env.webkit){styleContent=styleContent.split("}").slice(0,-1);
for(i=0;
i<styleContent.length;
i++){styleContent[i]=styleContent[i].split("{");
}}for(var id=0;
id<styleNodes.length;
id++){if(CKEDITOR.env.webkit){for(i=0;
i<styleContent.length;
i++){content=styleContent[i][1];
for(r=0;
r<replace.length;
r++){content=content.replace(replace[r][0],replace[r][1]);
}styleNodes[id].$.sheet.addRule(styleContent[i][0],content);
}}else{content=styleContent;
for(r=0;
r<replace.length;
r++){content=content.replace(replace[r][0],replace[r][1]);
}if(CKEDITOR.env.ie){styleNodes[id].$.styleSheet.cssText+=content;
}else{styleNodes[id].$.innerHTML+=content;
}}}}CKEDITOR.on("instanceLoaded",function(evt){if(CKEDITOR.env.ie&&CKEDITOR.env.quirks){return;
}var editor=evt.editor,showCallback=function(event){var panel=event.data[0]||event.data;
var iframe=panel.element.getElementsByTag("iframe").getItem(0).getFrameDocument();
if(!iframe.getById("cke_ui_color")){var node=getStylesheet(iframe);
uiColorMenus.push(node);
var color=editor.getUiColor();
if(color){updateStylesheets([node],CKEDITOR.skin.chameleon(editor,"panel"),[[uiColorRegexp,color]]);
}}};
editor.on("panelShow",showCallback);
editor.on("menuShow",showCallback);
if(editor.config.uiColor){editor.setUiColor(editor.config.uiColor);
}});
})();
(function(){if(CKEDITOR.env.webkit){CKEDITOR.env.hc=false;
}else{var hcDetect=CKEDITOR.dom.element.createFromHtml('<div style="width:0px;height:0px;position:absolute;left:-10000px;border: 1px solid;border-color: red blue;"></div>',CKEDITOR.document);
hcDetect.appendTo(CKEDITOR.document.getHead());
try{CKEDITOR.env.hc=hcDetect.getComputedStyle("border-top-color")==hcDetect.getComputedStyle("border-right-color");
}catch(e){CKEDITOR.env.hc=false;
}hcDetect.remove();
}if(CKEDITOR.env.hc){CKEDITOR.env.cssClass+=" cke_hc";
}CKEDITOR.document.appendStyleText(".cke{visibility:hidden;}");
CKEDITOR.status="loaded";
CKEDITOR.fireOnce("loaded");
var pending=CKEDITOR._.pending;
if(pending){delete CKEDITOR._.pending;
for(var i=0;
i<pending.length;
i++){CKEDITOR.editor.prototype.constructor.apply(pending[i][0],pending[i][1]);
CKEDITOR.add(pending[i][0]);
}}})();
$.fn.removeAttrs=function(regex){return this.each(function(){var $this=$(this);
for(var nIdx=0;
nIdx<this.attributes.length;
nIdx++){var attr=this.attributes[nIdx];
if(attr&&typeof attr.name!=="undefined"&&regex.test(attr.name)){$this.removeAttr(attr.name);
}}});
};
CKEDITOR.skin.name="kama";
CKEDITOR.skin.ua_editor="ie,iequirks,ie7,ie8";
CKEDITOR.skin.ua_dialog="ie,iequirks,ie7,ie8,opera";
CKEDITOR.skin.chameleon=function(e,d){function b(a){return"background:-moz-linear-gradient("+a+");background:-webkit-linear-gradient("+a+");background:-o-linear-gradient("+a+");background:-ms-linear-gradient("+a+");background:linear-gradient("+a+");";
}var c,a="."+e.id;
"editor"==d?c=a+" .cke_inner,"+a+" .cke_dialog_tab{background-color:$color;background:-webkit-gradient(linear,0 -15,0 40,from(#fff),to($color));"+b("top,#fff -15px,$color 40px")+"}"+a+" .cke_toolgroup{background:-webkit-gradient(linear,0 0,0 100,from(#fff),to($color));"+b("top,#fff,$color 100px")+"}"+a+" .cke_combo_button{background:-webkit-gradient(linear, left bottom, left -100, from(#fff), to($color));"+b("bottom,#fff,$color 100px")+"}"+a+" .cke_dialog_contents,"+a+" .cke_dialog_footer{background-color:$color !important;}"+a+" .cke_dialog_tab:hover,"+a+" .cke_dialog_tab:active,"+a+" .cke_dialog_tab:focus,"+a+" .cke_dialog_tab_selected{background-color:$color;background-image:none;}":"panel"==d&&(c=".cke_menubutton_icon{background-color:$color !important;border-color:$color !important;}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:$color !important;border-color:$color !important;}.cke_menubutton:hover .cke_menubutton_label,.cke_menubutton:focus .cke_menubutton_label,.cke_menubutton:active .cke_menubutton_label{background-color:$color !important;}.cke_menubutton_disabled:hover .cke_menubutton_label,.cke_menubutton_disabled:focus .cke_menubutton_label,.cke_menubutton_disabled:active .cke_menubutton_label{background-color: transparent !important;}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:$color !important;border-color:$color !important;}.cke_menubutton_disabled .cke_menubutton_icon{background-color:$color !important;border-color:$color !important;}.cke_menuseparator{background-color:$color !important;}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:$color !important;}");
return c;
};
CKEDITOR.stylesSet.add("default",[{name:"Italic Title",element:"h2",styles:{"font-style":"italic"}},{name:"Subtitle",element:"h3",styles:{color:"#aaa","font-style":"italic"}},{name:"Special Container",element:"div",styles:{padding:"5px 10px",background:"#eee",border:"1px solid #ccc"}},{name:"Marker",element:"span",attributes:{"class":"marker"}},{name:"Big",element:"big"},{name:"Small",element:"small"},{name:"Typewriter",element:"tt"},{name:"Computer Code",element:"code"},{name:"Keyboard Phrase",element:"kbd"},{name:"Sample Text",element:"samp"},{name:"Variable",element:"var"},{name:"Deleted Text",element:"del"},{name:"Inserted Text",element:"ins"},{name:"Cited Work",element:"cite"},{name:"Inline Quotation",element:"q"},{name:"Language: RTL",element:"span",attributes:{dir:"rtl"}},{name:"Language: LTR",element:"span",attributes:{dir:"ltr"}},{name:"Styled image (left)",element:"img",attributes:{"class":"left"}},{name:"Styled image (right)",element:"img",attributes:{"class":"right"}},{name:"Compact table",element:"table",attributes:{cellpadding:"5",cellspacing:"0",border:"1",bordercolor:"#ccc"},styles:{"border-collapse":"collapse"}},{name:"Borderless Table",element:"table",styles:{"border-style":"hidden","background-color":"#E6E6FA"}},{name:"Square Bulleted List",element:"ul",styles:{"list-style-type":"square"}}]);
CKEDITOR.lang.de={dir:"ltr",editor:"WYSIWYG-Editor",common:{editorHelp:"Drücken Sie ALT 0 für Hilfe",browseServer:"Server durchsuchen",url:"URL",protocol:"Protokoll",upload:"Hochladen",uploadSubmit:"Zum Server senden",image:"Bild",flash:"Flash",form:"Formular",checkbox:"Kontrollkästchen",radio:"Radiobutton",textField:"Textfeld einzeilig",textarea:"Textfeld mehrzeilig",hiddenField:"Verstecktes Feld",button:"Klickbutton",select:"Auswahlfeld",imageButton:"Bildbutton",notSet:"<nichts>",id:"ID",name:"Name",langDir:"Schreibrichtung",langDirLtr:"Links nach Rechts (LTR)",langDirRtl:"Rechts nach Links (RTL)",langCode:"Sprachenkürzel",longDescr:"Langform URL",cssClass:"Stylesheet Klasse",advisoryTitle:"Titel Beschreibung",cssStyle:"Stil",ok:"OK",cancel:"Abbrechen",close:"Schließen",preview:"Vorschau",resize:"Zum Vergrößern ziehen",generalTab:"Allgemein",advancedTab:"Erweitert",validateNumberFailed:"Dieser Wert ist keine Nummer.",confirmNewPage:"Alle nicht gespeicherten Änderungen gehen verlohren. Sind Sie sicher die neue Seite zu laden?",confirmCancel:"Einige Optionen wurden geändert. Wollen Sie den Dialog dennoch schließen?",options:"Optionen",target:"Zielseite",targetNew:"Neues Fenster (_blank)",targetTop:"Oberstes Fenster (_top)",targetSelf:"Gleiches Fenster (_self)",targetParent:"Oberes Fenster (_parent)",langDirLTR:"Links nach Rechts (LNR)",langDirRTL:"Rechts nach Links (RNL)",styles:"Stil",cssClasses:"Stylesheet Klasse",width:"Breite",height:"Höhe",align:"Ausrichtung",alignLeft:"Links",alignRight:"Rechts",alignCenter:"Zentriert",alignTop:"Oben",alignMiddle:"Mitte",alignBottom:"Unten",invalidValue:"Ungültiger Wert.",invalidHeight:"Höhe muss eine Zahl sein.",invalidWidth:"Breite muss eine Zahl sein.",invalidCssLength:'Wert spezifiziert für "%1" Feld muss ein positiver numerischer Wert sein mit oder ohne korrekte CSS Messeinheit (px, %, in, cm, mm, em, ex, pt oder pc).',invalidHtmlLength:'Wert spezifiziert für "%1" Feld muss ein positiver numerischer Wert sein mit oder ohne korrekte HTML Messeinheit (px oder %).',invalidInlineStyle:'Wert spezifiziert für inline Stilart muss enthalten ein oder mehr Tupels mit dem Format "Name : Wert" getrennt mit Semikolons.',cssLengthTooltip:"Gebe eine Zahl ein für ein Wert in pixels oder eine Zahl mit einer korrekten CSS Messeinheit (px, %, in, cm, mm, em, ex, pt oder pc).",unavailable:'%1<span class="cke_accessibility">, nicht verfügbar</span>'}};
CKEDITOR.lang["en-au"]={dir:"ltr",editor:"Rich Text Editor",common:{editorHelp:"Press ALT 0 for help",browseServer:"Browse Server",url:"URL",protocol:"Protocol",upload:"Upload",uploadSubmit:"Send it to the Server",image:"Image",flash:"Flash",form:"Form",checkbox:"Checkbox",radio:"Radio Button",textField:"Text Field",textarea:"Textarea",hiddenField:"Hidden Field",button:"Button",select:"Selection Field",imageButton:"Image Button",notSet:"<not set>",id:"Id",name:"Name",langDir:"Language Direction",langDirLtr:"Left to Right (LTR)",langDirRtl:"Right to Left (RTL)",langCode:"Language Code",longDescr:"Long Description URL",cssClass:"Stylesheet Classes",advisoryTitle:"Advisory Title",cssStyle:"Style",ok:"OK",cancel:"Cancel",close:"Close",preview:"Preview",resize:"Resize",generalTab:"General",advancedTab:"Advanced",validateNumberFailed:"This value is not a number.",confirmNewPage:"Any unsaved changes to this content will be lost. Are you sure you want to load new page?",confirmCancel:"Some of the options have been changed. Are you sure to close the dialog?",options:"Options",target:"Target",targetNew:"New Window (_blank)",targetTop:"Topmost Window (_top)",targetSelf:"Same Window (_self)",targetParent:"Parent Window (_parent)",langDirLTR:"Left to Right (LTR)",langDirRTL:"Right to Left (RTL)",styles:"Style",cssClasses:"Stylesheet Classes",width:"Width",height:"Height",align:"Align",alignLeft:"Left",alignRight:"Right",alignCenter:"Centre",alignTop:"Top",alignMiddle:"Middle",alignBottom:"Bottom",invalidValue:"Invalid value.",invalidHeight:"Height must be a number.",invalidWidth:"Width must be a number.",invalidCssLength:'Value specified for the "%1" field must be a positive number with or without a valid CSS measurement unit (px, %, in, cm, mm, em, ex, pt, or pc).',invalidHtmlLength:'Value specified for the "%1" field must be a positive number with or without a valid HTML measurement unit (px or %).',invalidInlineStyle:'Value specified for the inline style must consist of one or more tuples with the format of "name : value", separated by semi-colons.',cssLengthTooltip:"Enter a number for a value in pixels or a number with a valid CSS unit (px, %, in, cm, mm, em, ex, pt, or pc).",unavailable:'%1<span class="cke_accessibility">, unavailable</span>'}};
CKEDITOR.lang["en-gb"]={dir:"ltr",editor:"Rich Text Editor",common:{editorHelp:"Press ALT 0 for help",browseServer:"Browse Server",url:"URL",protocol:"Protocol",upload:"Upload",uploadSubmit:"Send it to the Server",image:"Image",flash:"Flash",form:"Form",checkbox:"Checkbox",radio:"Radio Button",textField:"Text Field",textarea:"Textarea",hiddenField:"Hidden Field",button:"Button",select:"Selection Field",imageButton:"Image Button",notSet:"<not set>",id:"ID",name:"Name",langDir:"Language Direction",langDirLtr:"Left to Right (LTR)",langDirRtl:"Right to Left (RTL)",langCode:"Language Code",longDescr:"Long Description URL",cssClass:"Stylesheet Classes",advisoryTitle:"Advisory Title",cssStyle:"Style",ok:"OK",cancel:"Cancel",close:"Close",preview:"Preview",resize:"Drag to resize",generalTab:"General",advancedTab:"Advanced",validateNumberFailed:"This value is not a number.",confirmNewPage:"Any unsaved changes to this content will be lost. Are you sure you want to load new page?",confirmCancel:"Some of the options have been changed. Are you sure to close the dialog?",options:"Options",target:"Target",targetNew:"New Window (_blank)",targetTop:"Topmost Window (_top)",targetSelf:"Same Window (_self)",targetParent:"Parent Window (_parent)",langDirLTR:"Left to Right (LTR)",langDirRTL:"Right to Left (RTL)",styles:"Style",cssClasses:"Stylesheet Classes",width:"Width",height:"Height",align:"Align",alignLeft:"Left",alignRight:"Right",alignCenter:"Centre",alignTop:"Top",alignMiddle:"Middle",alignBottom:"Bottom",invalidValue:"Invalid value.",invalidHeight:"Height must be a number.",invalidWidth:"Width must be a number.",invalidCssLength:'Value specified for the "%1" field must be a positive number with or without a valid CSS measurement unit (px, %, in, cm, mm, em, ex, pt, or pc).',invalidHtmlLength:'Value specified for the "%1" field must be a positive number with or without a valid HTML measurement unit (px or %).',invalidInlineStyle:'Value specified for the inline style must consist of one or more tuples with the format of "name : value", separated by semi-colons.',cssLengthTooltip:"Enter a number for a value in pixels or a number with a valid CSS unit (px, %, in, cm, mm, em, ex, pt, or pc).",unavailable:'%1<span class="cke_accessibility">, unavailable</span>'}};
CKEDITOR.lang.en={dir:"ltr",editor:"Rich Text Editor",common:{editorHelp:"Press ALT 0 for help",browseServer:"Browse Server",url:"URL",protocol:"Protocol",upload:"Upload",uploadSubmit:"Send it to the Server",image:"Image",flash:"Flash",form:"Form",checkbox:"Checkbox",radio:"Radio Button",textField:"Text Field",textarea:"Textarea",hiddenField:"Hidden Field",button:"Button",select:"Selection Field",imageButton:"Image Button",notSet:"<not set>",id:"Id",name:"Name",langDir:"Language Direction",langDirLtr:"Left to Right (LTR)",langDirRtl:"Right to Left (RTL)",langCode:"Language Code",longDescr:"Long Description URL",cssClass:"Stylesheet Classes",advisoryTitle:"Advisory Title",cssStyle:"Style",ok:"OK",cancel:"Cancel",close:"Close",preview:"Preview",resize:"Resize",generalTab:"General",advancedTab:"Advanced",validateNumberFailed:"This value is not a number.",confirmNewPage:"Any unsaved changes to this content will be lost. Are you sure you want to load new page?",confirmCancel:"Some of the options have been changed. Are you sure to close the dialog?",options:"Options",target:"Target",targetNew:"New Window (_blank)",targetTop:"Topmost Window (_top)",targetSelf:"Same Window (_self)",targetParent:"Parent Window (_parent)",langDirLTR:"Left to Right (LTR)",langDirRTL:"Right to Left (RTL)",styles:"Style",cssClasses:"Stylesheet Classes",width:"Width",height:"Height",align:"Alignment",alignLeft:"Left",alignRight:"Right",alignCenter:"Center",alignTop:"Top",alignMiddle:"Middle",alignBottom:"Bottom",invalidValue:"Invalid value.",invalidHeight:"Height must be a number.",invalidWidth:"Width must be a number.",invalidCssLength:'Value specified for the "%1" field must be a positive number with or without a valid CSS measurement unit (px, %, in, cm, mm, em, ex, pt, or pc).',invalidHtmlLength:'Value specified for the "%1" field must be a positive number with or without a valid HTML measurement unit (px or %).',invalidInlineStyle:'Value specified for the inline style must consist of one or more tuples with the format of "name : value", separated by semi-colons.',cssLengthTooltip:"Enter a number for a value in pixels or a number with a valid CSS unit (px, %, in, cm, mm, em, ex, pt, or pc).",unavailable:'%1<span class="cke_accessibility">, unavailable</span>'}};
CKEDITOR.lang.es={dir:"ltr",editor:"Editor de texto enriquecido",common:{editorHelp:"Pulse ALT 0 para ayuda",browseServer:"Ver Servidor",url:"URL",protocol:"Protocolo",upload:"Cargar",uploadSubmit:"Enviar al Servidor",image:"Imagen",flash:"Boletín informativo",form:"Formulario",checkbox:"Casilla de Verificación",radio:"Botones de Radio",textField:"Campo de Texto",textarea:"Area de Texto",hiddenField:"Campo Oculto",button:"Botón",select:"Campo de Selección",imageButton:"Botón Imagen",notSet:"<No definido>",id:"Id.",name:"Nombre",langDir:"Orientación",langDirLtr:"Izquierda a Derecha (LTR)",langDirRtl:"Derecha a Izquierda (RTL)",langCode:"Cód. de idioma",longDescr:"Descripción larga URL",cssClass:"Clases de hojas de estilo",advisoryTitle:"Título",cssStyle:"Estilo",ok:"Aceptar",cancel:"Cancelar",close:"Cerrar",preview:"Previsualización",resize:"Arrastre para redimensionar",generalTab:"General",advancedTab:"Avanzado",validateNumberFailed:"El valor no es un número.",confirmNewPage:"Cualquier cambio que no se haya guardado se perderá.\r\n¿Está seguro de querer crear una nueva página?",confirmCancel:"Algunas de las opciones se han cambiado.\r\n¿Está seguro de querer cerrar el diálogo?",options:"Opciones",target:"Destino",targetNew:"Nueva ventana (_blank)",targetTop:"Ventana principal (_top)",targetSelf:"Misma ventana (_self)",targetParent:"Ventana padre (_parent)",langDirLTR:"Izquierda a derecha (LTR)",langDirRTL:"Derecha a izquierda (RTL)",styles:"Estilos",cssClasses:"Clase de la hoja de estilos",width:"Anchura",height:"Altura",align:"Alineación",alignLeft:"Izquierda",alignRight:"Derecha",alignCenter:"Centrado",alignTop:"Tope",alignMiddle:"Centro",alignBottom:"Pie",invalidValue:"Valor no válido",invalidHeight:"Altura debe ser un número.",invalidWidth:"Anchura debe ser un número.",invalidCssLength:'El valor especificado para el campo "%1" debe ser un número positivo, incluyendo optionalmente una unidad de medida CSS válida (px, %, in, cm, mm, em, ex, pt, o pc).',invalidHtmlLength:'El valor especificado para el campo "%1" debe ser un número positivo, incluyendo optionalmente una unidad de medida HTML válida (px o %).',invalidInlineStyle:'El valor especificado para el estilo debe consistir en uno o más pares con el formato "nombre: valor", separados por punto y coma.',cssLengthTooltip:"Introduca un número para el valor en pixels o un número con una unidad de medida CSS válida (px, %, in, cm, mm, em, ex, pt, o pc).",unavailable:'%1<span class="cke_accessibility">, no disponible</span>'}};
CKEDITOR.lang.fr={dir:"ltr",editor:"Éditeur de Texte Enrichi",common:{editorHelp:"Appuyez sur ALT-0 pour l'aide",browseServer:"Explorer le serveur",url:"URL",protocol:"Protocole",upload:"Envoyer",uploadSubmit:"Envoyer sur le serveur",image:"Image",flash:"Flash",form:"Formulaire",checkbox:"Case à cocher",radio:"Bouton Radio",textField:"Champ texte",textarea:"Zone de texte",hiddenField:"Champ caché",button:"Bouton",select:"Liste déroulante",imageButton:"Bouton image",notSet:"<non défini>",id:"ID",name:"Nom",langDir:"Sens d'écriture",langDirLtr:"Gauche à droite (LTR)",langDirRtl:"Droite à gauche (RTL)",langCode:"Code de langue",longDescr:"URL de description longue (longdesc => malvoyant)",cssClass:"Classe CSS",advisoryTitle:"Description (title)",cssStyle:"Style",ok:"OK",cancel:"Annuler",close:"Fermer",preview:"Aperçu",resize:"Déplacer pour modifier la taille",generalTab:"Général",advancedTab:"Avancé",validateNumberFailed:"Cette valeur n'est pas un nombre.",confirmNewPage:"Les changements non sauvegardés seront perdus. Êtes-vous sûr de vouloir charger une nouvelle page?",confirmCancel:"Certaines options ont été modifiées. Êtes-vous sûr de vouloir fermer?",options:"Options",target:"Cible (Target)",targetNew:"Nouvelle fenêtre (_blank)",targetTop:"Fenêtre supérieure (_top)",targetSelf:"Même fenêtre (_self)",targetParent:"Fenêtre parent (_parent)",langDirLTR:"Gauche à Droite (LTR)",langDirRTL:"Droite à Gauche (RTL)",styles:"Style",cssClasses:"Classes de style",width:"Largeur",height:"Hauteur",align:"Alignement",alignLeft:"Gauche",alignRight:"Droite",alignCenter:"Centré",alignTop:"Haut",alignMiddle:"Milieu",alignBottom:"Bas",invalidValue:"Valeur non valide.",invalidHeight:"La hauteur doit être un nombre.",invalidWidth:"La largeur doit être un nombre.",invalidCssLength:'La valeur spécifiée pour le champ "%1" doit être un nombre positif avec ou sans unité de mesure CSS valide (px, %, in, cm, mm, em, ex, pt, or pc).',invalidHtmlLength:'La valeur spécifiée pour le champ "%1" doit être un nombre positif avec ou sans unité de mesure HTML valide (px or %).',invalidInlineStyle:'La valeur spécifiée pour le style inline doit être composée d\'un ou plusieurs couples de valeur au format "nom : valeur", separés par des points-virgules.',cssLengthTooltip:"Entrer un nombre pour une valeur en pixels ou un nombre avec une unité de mesure CSS valide (px, %, in, cm, mm, em, ex, pt, or pc).",unavailable:'%1<span class="cke_accessibility">, Indisponible</span>'}};
CKEDITOR.lang["pt-br"]={dir:"ltr",editor:"Editor de Texto",common:{editorHelp:"Pressionar ALT 0 para Ajuda",browseServer:"Localizar no Servidor",url:"URL",protocol:"Protocolo",upload:"Enviar ao Servidor",uploadSubmit:"Enviar para o Servidor",image:"Imagem",flash:"Flash",form:"Formulário",checkbox:"Caixa de Seleção",radio:"Botão de Opção",textField:"Caixa de Texto",textarea:"Área de Texto",hiddenField:"Campo Oculto",button:"Botão",select:"Caixa de Listagem",imageButton:"Botão de Imagem",notSet:"<não ajustado>",id:"ID",name:"Nome",langDir:"Direção do idioma",langDirLtr:"Esquerda para Direita (LTR)",langDirRtl:"Direita para Esquerda (RTL)",langCode:"Idioma",longDescr:"Descrição da URL",cssClass:"Classe de CSS",advisoryTitle:"Título",cssStyle:"Estilos",ok:"OK",cancel:"Cancelar",close:"Fechar",preview:"Visualizar",resize:"Arraste para redimensionar",generalTab:"Geral",advancedTab:"Avançado",validateNumberFailed:"Este valor não é um número.",confirmNewPage:"Todas as mudanças não salvas serão perdidas. Tem certeza de que quer abrir uma nova página?",confirmCancel:"Algumas opções foram alteradas. Tem certeza de que quer fechar a caixa de diálogo?",options:"Opções",target:"Destino",targetNew:"Nova Janela (_blank)",targetTop:"Janela de Cima (_top)",targetSelf:"Mesma Janela (_self)",targetParent:"Janela Pai (_parent)",langDirLTR:"Esquerda para Direita (LTR)",langDirRTL:"Direita para Esquerda (RTL)",styles:"Estilo",cssClasses:"Classes",width:"Largura",height:"Altura",align:"Alinhamento",alignLeft:"Esquerda",alignRight:"Direita",alignCenter:"Centralizado",alignTop:"Superior",alignMiddle:"Centralizado",alignBottom:"Inferior",invalidValue:"Valor inválido.",invalidHeight:"A altura tem que ser um número",invalidWidth:"A largura tem que ser um número.",invalidCssLength:'O valor do campo "%1" deve ser um número positivo opcionalmente seguido por uma válida unidade de medida de CSS (px, %, in, cm, mm, em, ex, pt, or pc).',invalidHtmlLength:'O valor do campo "%1" deve ser um número positivo opcionalmente seguido por uma válida unidade de medida de HTML (px or %).',invalidInlineStyle:'O valor válido para estilo deve conter uma ou mais tuplas no formato "nome : valor", separados por ponto e vírgula.',cssLengthTooltip:"Insira um número para valor em pixels ou um número seguido de uma válida unidade de medida de CSS (px, %, in, cm, mm, em, ex, pt, or pc).",unavailable:'%1<span class="cke_accessibility">, indisponível</span>'}};
(function(){function n(n){function t(t,r,e,u,i,o){for(;
i>=0&&o>i;
i+=n){var a=u?u[i]:i;
e=r(e,t[a],a,t);
}return e;
}return function(r,e,u,i){e=b(e,i,4);
var o=!k(r)&&m.keys(r),a=(o||r).length,c=n>0?0:a-1;
return arguments.length<3&&(u=r[o?o[c]:c],c+=n),t(r,e,u,o,c,a);
};
}function t(n){return function(t,r,e){r=x(r,e);
for(var u=O(t),i=n>0?0:u-1;
i>=0&&u>i;
i+=n){if(r(t[i],i,t)){return i;
}}return -1;
};
}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);
if("number"==typeof i){n>0?o=i>=0?i:Math.max(i+a,o):a=i>=0?Math.min(i+1,a):i+a+1;
}else{if(r&&i&&a){return i=r(e,u),e[i]===u?i:-1;
}}if(u!==u){return i=t(l.call(e,o,a),m.isNaN),i>=0?i+o:-1;
}for(i=n>0?o:a-1;
i>=0&&a>i;
i+=n){if(e[i]===u){return i;
}}return -1;
};
}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";
for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);
r--;
){i=I[r],i in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i);
}}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void (this._wrapped=n):new m(n);
};
"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):u._=m,m.VERSION="1.8.3";
var b=function(n,t,r){if(t===void 0){return n;
}switch(null==r?3:r){case 1:return function(r){return n.call(t,r);
};
case 2:return function(r,e){return n.call(t,r,e);
};
case 3:return function(r,e,u){return n.call(t,r,e,u);
};
case 4:return function(r,e,u,i){return n.call(t,r,e,u,i);
};
}return function(){return n.apply(t,arguments);
};
},x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n);
};
m.iteratee=function(n,t){return x(n,t,1/0);
};
var _=function(n,t){return function(r){var e=arguments.length;
if(2>e||null==r){return r;
}for(var u=1;
e>u;
u++){for(var i=arguments[u],o=n(i),a=o.length,c=0;
a>c;
c++){var f=o[c];
t&&r[f]!==void 0||(r[f]=i[f]);
}}return r;
};
},j=function(n){if(!m.isObject(n)){return{};
}if(y){return y(n);
}d.prototype=n;
var t=new d;
return d.prototype=null,t;
},w=function(n){return function(t){return null==t?void 0:t[n];
};
},A=Math.pow(2,53)-1,O=w("length"),k=function(n){var t=O(n);
return"number"==typeof t&&t>=0&&A>=t;
};
m.each=m.forEach=function(n,t,r){t=b(t,r);
var e,u;
if(k(n)){for(e=0,u=n.length;
u>e;
e++){t(n[e],e,n);
}}else{var i=m.keys(n);
for(e=0,u=i.length;
u>e;
e++){t(n[i[e]],i[e],n);
}}return n;
},m.map=m.collect=function(n,t,r){t=x(t,r);
for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;
u>o;
o++){var a=e?e[o]:o;
i[o]=t(n[a],a,n);
}return i;
},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){var e;
return e=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r),e!==void 0&&e!==-1?n[e]:void 0;
},m.filter=m.select=function(n,t,r){var e=[];
return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n);
}),e;
},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r);
},m.every=m.all=function(n,t,r){t=x(t,r);
for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;
u>i;
i++){var o=e?e[i]:i;
if(!t(n[o],o,n)){return !1;
}}return !0;
},m.some=m.any=function(n,t,r){t=x(t,r);
for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;
u>i;
i++){var o=e?e[i]:i;
if(t(n[o],o,n)){return !0;
}}return !1;
},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),("number"!=typeof r||e)&&(r=0),m.indexOf(n,t,r)>=0;
},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);
return m.map(n,function(n){var u=e?t:n[t];
return null==u?u:u.apply(n,r);
});
},m.pluck=function(n,t){return m.map(n,m.property(t));
},m.where=function(n,t){return m.filter(n,m.matcher(t));
},m.findWhere=function(n,t){return m.find(n,m.matcher(t));
},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;
if(null==t&&null!=n){n=k(n)?n:m.values(n);
for(var a=0,c=n.length;
c>a;
a++){e=n[a],e>i&&(i=e);
}}else{t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(u>o||u===-1/0&&i===-1/0)&&(i=n,o=u);
});
}return i;
},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;
if(null==t&&null!=n){n=k(n)?n:m.values(n);
for(var a=0,c=n.length;
c>a;
a++){e=n[a],i>e&&(i=e);
}}else{t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o>u||1/0===u&&1/0===i)&&(i=n,o=u);
});
}return i;
},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;
e>i;
i++){t=m.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];
}return u;
},m.sample=function(n,t,r){return null==t||r?(k(n)||(n=m.values(n)),n[m.random(n.length-1)]):m.shuffle(n).slice(0,Math.max(0,t));
},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)};
}).sort(function(n,t){var r=n.criteria,e=t.criteria;
if(r!==e){if(r>e||r===void 0){return 1;
}if(e>r||e===void 0){return -1;
}}return n.index-t.index;
}),"value");
};
var F=function(n){return function(t,r,e){var u={};
return r=x(r,e),m.each(t,function(e,i){var o=r(e,i,t);
n(u,e,o);
}),u;
};
};
m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t];
}),m.indexBy=F(function(n,t,r){n[r]=t;
}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1;
}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[];
},m.size=function(n){return null==n?0:k(n)?n.length:m.keys(n).length;
},m.partition=function(n,t,r){t=x(t,r);
var e=[],u=[];
return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n);
}),[e,u];
},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t);
},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)));
},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t));
},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t);
},m.compact=function(n){return m.filter(n,m.identity);
};
var S=function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);
a>o;
o++){var c=n[o];
if(k(c)&&(m.isArray(c)||m.isArguments(c))){t||(c=S(c,t,r));
var f=0,l=c.length;
for(u.length+=l;
l>f;
){u[i++]=c[f++];
}}else{r||(u[i++]=c);
}}return u;
};
m.flatten=function(n,t){return S(n,t,!1);
},m.without=function(n){return m.difference(n,l.call(arguments,1));
},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));
for(var u=[],i=[],o=0,a=O(n);
a>o;
o++){var c=n[o],f=r?r(c,o,n):c;
t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c);
}return u;
},m.union=function(){return m.uniq(S(arguments,!0,!0));
},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);
u>e;
e++){var i=n[e];
if(!m.contains(t,i)){for(var o=1;
r>o&&m.contains(arguments[o],i);
o++){}o===r&&t.push(i);
}}return t;
},m.difference=function(n){var t=S(arguments,!0,!0,1);
return m.filter(n,function(n){return !m.contains(t,n);
});
},m.zip=function(){return m.unzip(arguments);
},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;
t>e;
e++){r[e]=m.pluck(n,e);
}return r;
},m.object=function(n,t){for(var r={},e=0,u=O(n);
u>e;
e++){t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];
}return r;
},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){r=x(r,e,1);
for(var u=r(t),i=0,o=O(n);
o>i;
){var a=Math.floor((i+o)/2);
r(n[a])<u?i=a+1:o=a;
}return i;
},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;
for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;
e>i;
i++,n+=r){u[i]=n;
}return u;
};
var E=function(n,t,r,e,u){if(!(e instanceof t)){return n.apply(r,u);
}var i=j(n.prototype),o=n.apply(i,u);
return m.isObject(o)?o:i;
};
m.bind=function(n,t){if(g&&n.bind===g){return g.apply(n,l.call(arguments,1));
}if(!m.isFunction(n)){throw new TypeError("Bind must be called on a function");
}var r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)));
};
return e;
},m.partial=function(n){var t=l.call(arguments,1),r=function(){for(var e=0,u=t.length,i=Array(u),o=0;
u>o;
o++){i[o]=t[o]===m?arguments[e++]:t[o];
}for(;
e<arguments.length;
){i.push(arguments[e++]);
}return E(n,r,this,this,i);
};
return r;
},m.bindAll=function(n){var t,r,e=arguments.length;
if(1>=e){throw new Error("bindAll must be passed function names");
}for(t=1;
e>t;
t++){r=arguments[t],n[r]=m.bind(n[r],n);
}return n;
},m.memoize=function(n,t){var r=function(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);
return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i];
};
return r.cache={},r;
},m.delay=function(n,t){var r=l.call(arguments,2);
return setTimeout(function(){return n.apply(null,r);
},t);
},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){var e,u,i,o=null,a=0;
r||(r={});
var c=function(){a=r.leading===!1?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null);
};
return function(){var f=m.now();
a||r.leading!==!1||(a=f);
var l=t-(f-a);
return e=this,u=arguments,0>=l||l>t?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||r.trailing===!1||(o=setTimeout(c,l)),i;
};
},m.debounce=function(n,t,r){var e,u,i,o,a,c=function(){var f=m.now()-o;
t>f&&f>=0?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e||(i=u=null)));
};
return function(){i=this,u=arguments,o=m.now();
var f=r&&!e;
return e||(e=setTimeout(c,t)),f&&(a=n.apply(i,u),i=u=null),a;
};
},m.wrap=function(n,t){return m.partial(t,n);
},m.negate=function(n){return function(){return !n.apply(this,arguments);
};
},m.compose=function(){var n=arguments,t=n.length-1;
return function(){for(var r=t,e=n[t].apply(this,arguments);
r--;
){e=n[r].call(this,e);
}return e;
};
},m.after=function(n,t){return function(){return --n<1?t.apply(this,arguments):void 0;
};
},m.before=function(n,t){var r;
return function(){return --n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r;
};
},m.once=m.partial(m.before,2);
var M=!{toString:null}.propertyIsEnumerable("toString"),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];
m.keys=function(n){if(!m.isObject(n)){return[];
}if(v){return v(n);
}var t=[];
for(var r in n){m.has(n,r)&&t.push(r);
}return M&&e(n,t),t;
},m.allKeys=function(n){if(!m.isObject(n)){return[];
}var t=[];
for(var r in n){t.push(r);
}return M&&e(n,t),t;
},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;
r>u;
u++){e[u]=n[t[u]];
}return e;
},m.mapObject=function(n,t,r){t=x(t,r);
for(var e,u=m.keys(n),i=u.length,o={},a=0;
i>a;
a++){e=u[a],o[e]=t(n[e],e,n);
}return o;
},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;
r>u;
u++){e[u]=[t[u],n[t[u]]];
}return e;
},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;
u>e;
e++){t[n[r[e]]]=r[e];
}return t;
},m.functions=m.methods=function(n){var t=[];
for(var r in n){m.isFunction(n[r])&&t.push(r);
}return t.sort();
},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);
for(var e,u=m.keys(n),i=0,o=u.length;
o>i;
i++){if(e=u[i],t(n[e],e,n)){return e;
}}},m.pick=function(n,t,r){var e,u,i={},o=n;
if(null==o){return i;
}m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r;
},o=Object(o));
for(var a=0,c=u.length;
c>a;
a++){var f=u[a],l=o[f];
e(l,f,o)&&(i[f]=l);
}return i;
},m.omit=function(n,t,r){if(m.isFunction(t)){t=m.negate(t);
}else{var e=m.map(S(arguments,!1,!1,1),String);
t=function(n,t){return !m.contains(e,t);
};
}return m.pick(n,t,r);
},m.defaults=_(m.allKeys,!0),m.create=function(n,t){var r=j(n);
return t&&m.extendOwn(r,t),r;
},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n;
},m.tap=function(n,t){return t(n),n;
},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;
if(null==n){return !e;
}for(var u=Object(n),i=0;
e>i;
i++){var o=r[i];
if(t[o]!==u[o]||!(o in u)){return !1;
}}return !0;
};
var N=function(n,t,r,e){if(n===t){return 0!==n||1/n===1/t;
}if(null==n||null==t){return n===t;
}n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);
var u=s.call(n);
if(u!==s.call(t)){return !1;
}switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;
case"[object Number]":return +n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;
case"[object Date]":case"[object Boolean]":return +n===+t;
}var i="[object Array]"===u;
if(!i){if("object"!=typeof n||"object"!=typeof t){return !1;
}var o=n.constructor,a=t.constructor;
if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor" in n&&"constructor" in t){return !1;
}}r=r||[],e=e||[];
for(var c=r.length;
c--;
){if(r[c]===n){return e[c]===t;
}}if(r.push(n),e.push(t),i){if(c=n.length,c!==t.length){return !1;
}for(;
c--;
){if(!N(n[c],t[c],r,e)){return !1;
}}}else{var f,l=m.keys(n);
if(c=l.length,m.keys(t).length!==c){return !1;
}for(;
c--;
){if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e)){return !1;
}}}return r.pop(),e.pop(),!0;
};
m.isEqual=function(n,t){return N(n,t);
},m.isEmpty=function(n){return null==n?!0:k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length;
},m.isElement=function(n){return !(!n||1!==n.nodeType);
},m.isArray=h||function(n){return"[object Array]"===s.call(n);
},m.isObject=function(n){var t=typeof n;
return"function"===t||"object"===t&&!!n;
},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]";
};
}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee");
}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1;
}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n));
},m.isNaN=function(n){return m.isNumber(n)&&n!==+n;
},m.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===s.call(n);
},m.isNull=function(n){return null===n;
},m.isUndefined=function(n){return n===void 0;
},m.has=function(n,t){return null!=n&&p.call(n,t);
},m.noConflict=function(){return u._=i,this;
},m.identity=function(n){return n;
},m.constant=function(n){return function(){return n;
};
},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t];
};
},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n);
};
},m.times=function(n,t,r){var e=Array(Math.max(0,n));
t=b(t,r,1);
for(var u=0;
n>u;
u++){e[u]=t(u);
}return e;
},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1));
},m.now=Date.now||function(){return(new Date).getTime();
};
var B={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=m.invert(B),R=function(n){var t=function(t){return n[t];
},r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");
return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n;
};
};
m.escape=R(B),m.unescape=R(T),m.result=function(n,t,r){var e=null==n?void 0:n[t];
return e===void 0&&(e=r),m.isFunction(e)?e.call(n):e;
};
var q=0;
m.uniqueId=function(n){var t=++q+"";
return n?n+t:t;
},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};
var K=/(.)^/,z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g,L=function(n){return"\\"+z[n];
};
m.template=function(n,t,r){!t&&r&&(t=r),t=m.defaults({},t,m.templateSettings);
var e=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";
n.replace(e,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t;
}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";
try{var o=new Function(t.variable||"obj","_",i);
}catch(a){throw a.source=i,a;
}var c=function(n){return o.call(this,n,m);
},f=t.variable||"obj";
return c.source="function("+f+"){\n"+i+"}",c;
},m.chain=function(n){var t=m(n);
return t._chain=!0,t;
};
var P=function(n,t){return n._chain?m(t).chain():t;
};
m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];
m.prototype[t]=function(){var n=[this._wrapped];
return f.apply(n,arguments),P(this,r.apply(m,n));
};
});
},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];
m.prototype[n]=function(){var r=this._wrapped;
return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r);
};
}),m.each(["concat","join","slice"],function(n){var t=o[n];
m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments));
};
}),m.prototype.value=function(){return this._wrapped;
},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped;
},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m;
});
}).call(this);
function DocHandleError(sMsg,sProject,sWorkFlow,sParam){if(!sProject){sProject=window.PROJECT_NAME||window.PROJECT||"DynDocCKEditor";
}if(typeof DynDocDlgReusableConsumerCallBack!=="undefined"&&typeof DynDocDlgReusableConsumerCallBack.ReportError!=="undefined"){DynDocDlgReusableConsumerCallBack.ReportError(sMsg,sProject,sWorkFlow||"",sParam||"");
}else{if(typeof CKEDITOR!=="undefined"&&typeof CKEDITOR.DynDocHelper!=="undefined"&&typeof CKEDITOR.DynDocHelper.ReportError!=="undefined"){CKEDITOR.DynDocHelper.ReportError(sMsg,sProject,sWorkFlow||"",sParam||"");
}else{if(typeof CKEDITOR!=="undefined"&&typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.LogError!=="undefined"){CKEDITOR.DocUtilsHelper.LogError(sMsg,sProject);
}else{if(typeof DocUtilsHelper!=="undefined"&&typeof DocUtilsHelper.LogError!=="undefined"){DocUtilsHelper.LogError(sMsg,sProject);
}}}}if(typeof console!=="undefined"&&console.log){console.log(sMsg);
}}function DocHandleException(sMsg,sProject,exception){var sParam=exception.toString?exception.toString():""+exception;
DocHandleError(sMsg,sProject,"",sParam);
}function DocPrintf(){var regex=/%%|%(\d+\$)?([sid])/g;
var params=arguments,i=0,format=params[i++];
var doFormat=function(substring,valueIndex,type){var number;
var prefix;
var value;
if(substring=="%%"){return"%";
}value=valueIndex?params[valueIndex.slice(0,-1)]:params[i++];
switch(type){case"s":return String(value);
case"i":case"d":number=(+value)|0;
prefix=number<0?"-":"";
value=prefix+String(number);
return value;
default:return substring;
}};
return format.replace(regex,doFormat);
}DDCOLOR=function(){return{m_oDocUtilsHelper:null,eDefaultColors:{gHeadingColor04:7,gDefaultTextColor:8,gBannerTextColor01:9,gBannerTextColor02:10,gBannerTextColor03:11,gBannerTextColor04:12,gDefaultBackgroundColor:19,gRequiredBackgroundColor:20,gTextHighlightColor01:21,gFilterBarBorderColor:42,gRangeBarBorderColor:44,gHeaderBarFillColor:129,gHeaderBarFillGradient:130,gHeaderBarTextColor:131,gComponentToolbarButtonRolloverFillColor:132,gComponentToolbarButtonRolloverFillGradient:133},getFontColorDefault:function(){return getColor(this.eDefaultColors.gDefaultTextColor);
},getFontColorSelected:function(){return getColor(this.eDefaultColors.gBannerTextColor04);
},getDefaultBackgroundColor:function(){return getColor(this.eDefaultColors.gDefaultBackgroundColor);
},getRequiredFieldColor:function(){return getColor(this.eDefaultColors.gRequiredBackgroundColor);
},getTextHighlightColor:function(){return getColor(this.eDefaultColors.gTextHighlightColor01);
},getTextEditorBorder:function(){return getColor(this.eDefaultColors.gFilterBarBorderColor);
},getDropdownBorder:function(){return getColor(this.eDefaultColors.gRangeBarBorderColor);
},getColumnHeaderFillColor:function(){return getColor(this.eDefaultColors.gComponentToolbarButtonRolloverFillColor);
},getColumnHeaderFillGradient:function(){return getColor(this.eDefaultColors.gComponentToolbarButtonRolloverFillGradient);
},getAltRowColor:function(){return getColor(this.eDefaultColors.gHeadingColor04);
},getDefaultFont:function(){if(DDCOLOR.m_oDocUtilsHelper){return DDCOLOR.m_oDocUtilsHelper.GetDefaultFontFace();
}else{if(typeof CKEDITOR!=="undefined"&&typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.GetDefaultFontFace!=="undefined"){return CKEDITOR.DocUtilsHelper.GetDefaultFontFace();
}else{return DocUtilsHelper.GetDefaultFontFace();
}}}};
function getColor(eColor){var color="";
if(DDCOLOR.m_oDocUtilsHelper){color=DDCOLOR.m_oDocUtilsHelper.GetDefaultColorScheme(eColor);
}else{if(typeof CKEDITOR!=="undefined"&&typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.GetDefaultColorScheme!=="undefined"){color=CKEDITOR.DocUtilsHelper.GetDefaultColorScheme(eColor);
}else{color=DocUtilsHelper.GetDefaultColorScheme(eColor);
}}color=color.toString(16);
while(color.length<6){color="0"+color;
}return"#"+color;
}}();
DDCMD_COPY="copy";
DDCMD_CUT="cut";
DDCMD_PASTE="paste";
DDBTN_COPY="Copy";
DDBTN_CUT="Cut";
DDBTN_PASTE="Paste";
IECMD_COPY="copy";
IECMD_CUT="cut";
DDCMD_BOLD="bold";
DDCMD_ITALIC="italic";
DDCMD_UNDERLINE="underline";
DDCMD_STRIKE="strike";
DDCMD_JUSTIFYLEFT="ddjustifyleft";
DDCMD_JUSTIFYCENTER="ddjustifycenter";
DDCMD_JUSTIFYRIGHT="ddjustifyright";
DDCMD_JUSTIFYBLOCK="ddjustifyblock";
DD_NOOP="ddnoop";
DDCMD_UNDO="undo";
DDCMD_REDO="redo";
DDCMD_SAVE="ddsavenote";
DDCMD_SAVECLOSE="ddsaveclosenote";
DDCMD_SIGN="ddsignnote";
DDCMD_CLOSENOTE="ddclosenote";
DDCMD_DQR="dddqr_run";
DDCMD_DQRRESULTS="dddqr_apply";
DDCMD_SETHTML="dynDocSetHTML";
DDCMD_MAKEREADONLY="dynDocMakeEditorReadOnly";
DDCMD_SETADDENDCMDS="dynDocSetNoteDetailCommands";
DDCMD_LAYOUTDOCUMENT="dynDocLayoutDocument";
DDCMD_CONTENTHTMLLOADED="dynDocContentHTMLLoaded";
DDCMD_GETDOCHTML="dynDocPopulateDocumentObjHTML";
DDCMD_EXECUSERCMD="dynDocExecuteUserCommand";
DDCMD_GETSECTIONNAMES="dynDocFindSectionName";
DDCMD_GETCONCEPTSECTION="dynDocGetConceptSection";
DDCMD_GETEMREXTRACTSECTION="dynDocGetExtractKeySectionDisplay";
DDCMD_UPDATEIMGPOSITION="ddupdateimgposition";
DDCMD_SANITIZECONTENT="ddsanitizecontent";
DDCMD_INSERTFREETEXT="ddinsertfreetext";
DDCMD_REMOVEELEMENT="ddremoveelement";
DDCMD_REFRESHELEMENT="ddrefreshelement";
DDCMD_REFRESHCONCEPTS="ddrefreshconcepts";
DDCMD_STRIKEELEMENT="ddstrikeelement";
DDCMD_REMOVEFLOATINGIMGS="ddRemoveFloatingImages";
DDCMD_HIDE_AUTOTEXT_MENU="ddhideautotext";
DDCMD_MANAGE_AUTOTEXT="ddmanageautotext";
DDCMD_NEXT_UNDERSCORE="ddf3";
DDCMD_PREV_UNDERSCORE="ddf3_back";
var SERVICE_TASK=3202004;
g_sCSS_BORDERCOLOR="border-color";
g_sCLASS_CONTRIBUTION="ddcontribution";
g_sCLASS_SECTION="ddsection";
g_sCLASS_SUBSECTION="ddsubsection";
g_sCLASS_ACTION_IMAGE="ddactionimage";
g_sCLASS_EMR_CONTENT="ddemrcontent";
g_sCLASS_EMR_CONTENT_ITEM="ddemrcontentitem";
g_sCLASS_REMOVABLE="ddremovable";
g_sCLASS_INSERT_FREETEXT="ddinsertfreetext";
g_sCLASS_SECTION_DISP="ddsectiondisplay";
g_sCLASS_FREETEXT="ddfreetext";
g_sCLASS_ACTIONELEMENT="ddactionelement";
g_sCLASS_INFOCUS="ddinfocus";
g_sCLASS_SIBLING="ddsibling";
g_sCLASS_SPELLCHECK="ddspellcheck";
g_sCLASS_CONTRIBUTION_ID="ddcontributionid";
g_sCLASS_CONTRIBUTION_HTML="ddcontributionhtml";
g_sCLASS_CONTRIBUTION_TITLE="ddcontributiontitle";
g_sCLASS_BLOCK_CN_TEMPLATE="blockcntemplate";
g_sCLASS_BLOCK_SMART_TEMPLATE="blocksmarttemplate";
g_sCLASS_BLOCK_TOKEN="blocktoken";
g_sCLASS_DQR_CONTENT="dddqrcontent";
g_sCLASS_GROUPER="ddgrouper";
g_sUI_DROPPABLE="ui-droppable";
g_sCLASS_REFRESHABLE="ddrefreshable";
g_sCLASS_TEXT_WRAPPABLE="ddtextwrappable";
g_sCLASS_STRUCTURE_TEXT="ddstructuredtext";
g_sCLASS_FOOTNOTEITEM="ddfootnoteitem";
g_sATTRIBUTE_ACTIVE="ddactive";
g_sATTRIBUTE_ALT_TEXT="alt";
g_sATTRIBUTE_REFRESHING="dd:refreshing";
g_sATTRIBUTE_INITIALIZING="dd:initializing";
g_sATTRIBUTE_REFERENCEUUID="dd:referenceuuid";
g_sATTRIBUTE_CONTENTTYPE="dd:contenttype";
g_sATTRIBUTE_BTN_FLOAT_STYLE="dd:btnfloatingstyle";
g_sATTRIBUTE_TEMPLATE_CKI="dd:template_cki";
g_sATTRIBUTE_TOKEN="dd:token_name";
g_sATTRIBUTE_CONCEPT="dd:concept";
g_sATTRIBUTE_CONCEPT_CKI="dd:concept_cki";
g_sATTRIBUTE_ENTITYID="dd:entityid";
g_sATTRIBUTE_ENTITYVERSION="dd:entityversion";
g_sATTRIBUTE_EXTRACTKEY="dd:extractkey";
g_sATTRIBUTE_REFRESH_SMART_TEMPLATES="dd:refreshst";
g_sATTRIBUTE_REFRESH_TOKENS="dd:refreshtokens";
g_sATTRIBUTE_SILENTREFRESH="dd:silentrefresh";
g_sATTRIBUTE_BTN_FLOAT_STYLE_FLOAT_RIGHT="float-right";
g_sATTRIBUTE_BTN_FLOAT_STYLE_TOP_RIGHT="top-right";
g_sTABLE_TAGNAME="TABLE";
g_sTABLE_ROW_TAGNAME="TR";
g_sTABLE_CELL_TAGNAME="TD";
g_sBODY_TAGNAME="BODY";
g_sEMR_CONTENT_TYPE_DOC_COMP="DOC_COMP";
if(typeof console==="undefined"){console={log:function(msg){}};
}function DDENUM(){}DDENUM.prototype.none="";
DDENUM.BtnFloatingStyle={floatRight:0,topRight:1};
DDCOMMON=function(){function dyndocRangePosition(startPos,endPos){this.start=startPos;
this.end=endPos;
}var m_oInnerDomElementsCache;
var CKEditorNewLine={HTML_UPPER_NL:"<BR>",HTML_LOWER_NL:"<br>",XHTML_UPPER_NL:"<BR />",XHTML_LOWER_NL:"<br />"};
function disableStyleCmdStatus(oEditor){if(!oEditor){return;
}DDCOMMON.disableCommand(oEditor,"bold");
DDCOMMON.disableCommand(oEditor,"italic");
DDCOMMON.disableCommand(oEditor,"underline");
DDCOMMON.disableCommand(oEditor,DDCMD_JUSTIFYLEFT);
DDCOMMON.disableCommand(oEditor,DDCMD_JUSTIFYRIGHT);
DDCOMMON.disableCommand(oEditor,DDCMD_JUSTIFYBLOCK);
DDCOMMON.disableCommand(oEditor,DDCMD_JUSTIFYCENTER);
DDCOMMON.setComboStatus(oEditor,"font",false);
DDCOMMON.setComboStatus(oEditor,"fontsize",false);
DDCOMMON.setButtonStatus(oEditor,"textcolor",false);
}function processChildNodeForClassName(oElement,sClassNames,aRtnArray){if(null==oElement||null==aRtnArray||null==sClassNames){return null;
}var aClassNames=[];
var iFoundIdx=sClassNames.search("[|]");
while(iFoundIdx>=0){aClassNames.push(sClassNames.substr(0,iFoundIdx));
sClassNames=sClassNames.substr(iFoundIdx+1);
iFoundIdx=sClassNames.search("[|]");
}if(sClassNames.length>0){aClassNames.push(sClassNames);
}return processChildNodeForClassHelper(oElement,aClassNames,aRtnArray);
}function processChildNodeForClassHelper(oElement,aClassNames,aRtnArray){for(var i=0;
i<aClassNames.length;
i++){if(DDCOMMON.hasClassName(oElement.className,aClassNames[i])){aRtnArray.push(oElement);
break;
}}var iListLength=oElement.childNodes.length;
for(var x=0;
x<iListLength;
x++){var oChild=oElement.childNodes[x];
if(oChild){processChildNodeForClassHelper(oChild,aClassNames,aRtnArray);
}}}return{m_oWin32Document:null,m_oJavaScriptDocument:null,INCORRECT_CURSOR_POSITION:-2,AsynchronousDfs:function(node,visitCallback,postOrderCallback,interval,direction){if(!node){throw'AsynchronousDfs requires first param "node"';
}if(!visitCallback){throw'AsynchronousDfs requires second param "visitCallback"';
}if(!direction){direction=1;
}this.visitCallback=visitCallback;
visitCallback=undefined;
this.postOrderCallback=postOrderCallback;
postOrderCallback=undefined;
this.direction=direction;
direction=undefined;
if(!interval){interval=50;
}if(typeof interval!=="function"){interval=(function(ival){return function(node){return ival;
};
})(interval);
}this.getInterval=interval;
interval=undefined;
var doVisit=CKEDITOR.tools.bind(function(node,finishCallback){if(this.canceled){return;
}if(typeof node.parentNode==="unknown"||!node.parentNode){return(finishCallback||$.noop)();
}var traverseSubtree=true;
var skipTo=undefined;
var evt={traversal:this,cancelSubtree:function(){traverseSubtree=false;
},skipTo:function(node){skipTo=node;
}};
this.visitCallback(node,evt);
var visitChildren=function(node){if(typeof node.parentNode==="unknown"||!node.parentNode){return(finishCallback||$.noop)();
}var sibling=this.direction>0?node.nextSibling:node.previousSibling;
delayVisit(node,CKEDITOR.tools.bind(function(skipTo){if(this.postOrderCallback){this.postOrderCallback(node);
}if(skipTo||sibling){visitChildren.call(this,skipTo||sibling);
}else{if(finishCallback){finishCallback(skipTo&&skipTo.parentNode);
}}},this));
};
if(node.nodeType===Node.ELEMENT_NODE&&traverseSubtree){var sibling=this.direction>0?node.firstChild:node.lastChild;
if(sibling){visitChildren.call(this,sibling);
}else{if(finishCallback){finishCallback(skipTo);
}}}else{if(finishCallback&&!this.canceled){finishCallback(skipTo);
}}},this);
var delayVisit=CKEDITOR.tools.bind(function(node,finishCallback){this.timer=setTimeout(function(){doVisit(node,finishCallback);
},this.getInterval(node));
},this);
this.start=function(finishCallback){this.canceled=false;
delayVisit(node,function(){if(finishCallback){finishCallback();
}});
};
this.cancel=function(){clearTimeout(this.timer);
this.canceled=true;
};
},domDfs:function(root,iDirection,preOrderCallback,postOrderCallback){var bContinue=true;
var internalTraverse=function(node){if(!node){return;
}var bTraverseSubtree=true;
var evt={cancelSubtree:function(){bTraverseSubtree=false;
},stop:function(){bContinue=false;
}};
if(preOrderCallback){preOrderCallback(node,evt);
}if(bContinue&&bTraverseSubtree){if(iDirection>=0){for(var i=0;
bContinue&&i<node.childNodes.length;
i++){var child=node.childNodes[i];
internalTraverse(child);
}}else{for(var i=node.childNodes.length-1;
bContinue&&i>=0;
i--){var child=node.childNodes[i];
internalTraverse(child);
}}}if(bContinue&&postOrderCallback){postOrderCallback(node,evt);
}};
return internalTraverse(root);
},getFormatEnd:function(root){var innerMost=root;
DDCOMMON.domDfs(root,-1,function(node){innerMost=node;
},function(node,event){event.stop();
});
return innerMost;
},getIeVersion:function(){var Helper=window.DocUtilsHelper||CKEDITOR.DocUtilsHelper;
if(Helper&&typeof Helper.GetIeVersion!=="undefined"){try{return Helper.GetIeVersion();
}catch(e){DocHandleError("DDCOMMON.getIeVersion - Unable to determine IE version:  "+(e.message||e),"DynDocCKEditor");
return null;
}}else{return null;
}},getIeVersionMajor:function(){var sVersion=DDCOMMON.getIeVersion();
if(!sVersion){return null;
}var major=parseInt(sVersion,10);
return major||null;
},createXmlParser:(function(){if(window.DOMParser){return function(){return new DOMParser();
};
}else{if(window.ActiveXObject&&new window.ActiveXObject("Microsoft.XMLDOM")){return function(){var doc=new ActiveXObject("Microsoft.XMLDOM");
doc.async="false";
return doc;
};
}else{return function(){throw"No parser found";
};
}}})(),serializeXml:(function(){if(window.DOMParser){return function(doc){return(new XMLSerializer()).serializeToString(doc);
};
}else{if(window.ActiveXObject&&new window.ActiveXObject("Microsoft.XMLDOM")){return function(doc){return doc.xml;
};
}else{return function(){throw"No parser found";
};
}}})(),cleanHtmlForCompare:function(sHtml){if(!sHtml){return sHtml;
}return sHtml.replace(/sizcache="\d+"/,"").replace(/sizset="\d+"/,"");
},getZoomRatio:function(){if(!window.screen.deviceXDPI||!window.screen.logicalXDPI){return 1;
}return window.screen.deviceXDPI/window.screen.logicalXDPI;
},addHotKeys:function(oEditor,keystrokesPlugin){var keystrokes=oEditor.keystrokeHandler.keystrokes;
for(var i=0;
i<keystrokesPlugin.length;
i++){keystrokes[keystrokesPlugin[i][0]]=keystrokesPlugin[i][1];
}},appendClassName:function(sOrigClassNameAtrb,sNewClassName){if(null==sOrigClassNameAtrb){if(null==sNewClassName){return"";
}else{return sNewClassName;
}}if(DDCOMMON.isEmpty(sNewClassName)){return sOrigClassNameAtrb;
}if(""==sOrigClassNameAtrb){return sNewClassName;
}if(false==this.hasClassName(sOrigClassNameAtrb,sNewClassName)){var aClassNames=sOrigClassNameAtrb.split(" ");
aClassNames.push(sNewClassName);
return aClassNames.join(" ");
}else{return sOrigClassNameAtrb;
}},createSelector:function(classNames){var prepended=[];
for(var i=0;
i<classNames.length;
i++){prepended.push("."+classNames[i]);
}return prepended.join(",");
},buildFreetextCache:function(sSection,oFreetext){if(DDCOMMON.isEmpty(sSection)||oFreetext==null){DocHandleError("buildFreetextCache, invalid arguments received","dynDocCommonFunc.js");
return;
}if(DDCOMMON.isEmpty(oFreetext.innerHTML)){return;
}var emrContentItem=$(oFreetext).closest(".ddemrcontentitem");
if(emrContentItem.length==1){var iEntityId=parseInt(emrContentItem[0].getAttribute(g_sATTRIBUTE_ENTITYID),10);
DDCOMMON.appendFreetextCache(sSection,iEntityId,oFreetext.innerHTML,true);
return;
}var emrGrouper=$(oFreetext).closest(".ddgrouper");
if(emrGrouper.length==1){var aEmrContentItems=emrGrouper.find(".ddemrcontentitem");
var bIsFirst=true;
for(var i=0;
i<aEmrContentItems.length;
i++){iEntityId=parseInt(aEmrContentItems.eq(i).attr(g_sATTRIBUTE_ENTITYID),10);
DDCOMMON.appendFreetextCache(sSection,iEntityId,oFreetext.innerHTML,bIsFirst);
bIsFirst=false;
}}},contains:function(array,arg){if(array){var length=array.length;
for(var i=0;
i<length;
i++){if(array[i]==arg){return true;
}}}return false;
},disableCommand:function(editor,cmdName){var command=editor.getCommand(cmdName);
command&&command.disable();
},getAttributeBoolean:function(oElement,sAttribName){if(null==oElement||DDCOMMON.isEmpty(sAttribName)){return false;
}var oAttributeVal=oElement.getAttribute(sAttribName);
if(typeof oAttributeVal=="string"){return DDCOMMON.stringToBoolean(oAttributeVal);
}else{if(typeof oAttributeVal=="undefined"||null==oAttributeVal){return false;
}}return oAttributeVal;
},getDescendentsByClassName:function(oElement,sClassName){return DDCOMMON.getDescendentsByClassNames(oElement,[sClassName]);
},getDescendentsByClassNames:function(oElement,aClassNames){var selector=$.map(aClassNames,function(sClassName){return"."+sClassName;
}).join(",");
return $(oElement).find(selector).addBack(selector);
},getCursorPosition:function(oElement,oRange){var oRangePosition=DDCOMMON.getRangePosition(oElement,oRange);
if(null==oRangePosition||oRangePosition.start<0||oRangePosition.end<0){return -1;
}return oRange.text.length>0?oRangePosition.start:oRangePosition.end;
},isAncestor:function(node,ancestor,limit){if(!node||!ancestor){return false;
}if(node.ownerDocument!==ancestor.ownerDocument){return false;
}if(!limit){limit=node.ownerDocument.documentElement;
}var anc=node.parentNode;
while(anc&&anc.nodeType===Node.ELEMENT_NODE&&anc!==limit){if(anc===ancestor){return true;
}anc=anc.parentNode;
}return false;
},getElementsByClassName:function(oDocument,sClassName){var aRtnElements=[];
if(null==oDocument||null==sClassName||""==sClassName){return aRtnElements;
}processChildNodeForClassName(oDocument.body,sClassName,aRtnElements);
return aRtnElements;
},getChildrenByClassName:function(element,className){if(!element||!className){return[];
}var elements=[];
var children=element.childNodes;
for(var i=0;
i<children.length;
i++){if(DDCOMMON.hasClassName(children[i].className,className)){elements.push(children[i]);
}}return elements;
},getButtonFloatingStyle:function(oElement){if(oElement){var oAttributeVal=oElement.getAttribute(g_sATTRIBUTE_BTN_FLOAT_STYLE);
if(typeof oAttributeVal=="string"&&oAttributeVal.toLowerCase()==g_sATTRIBUTE_BTN_FLOAT_STYLE_TOP_RIGHT){return DDENUM.BtnFloatingStyle.topRight;
}}return DDENUM.BtnFloatingStyle.floatRight;
},getParentByClass:function(oElement,sClassName){if(oElement==null){return null;
}var oElementCur=oElement;
while(oElementCur!=null&&false==DDCOMMON.hasClassName(oElementCur.className,sClassName)){try{oElementCur=oElementCur.parentNode;
}catch(e){return null;
}}return oElementCur;
},getParentElementByClass:function(oElement,sClassName){if(!oElement||DDCOMMON.isEmpty(sClassName)){return null;
}var oParentElement=oElement.parentElement;
if(!oParentElement&&oElement.$){oParentElement=oElement.$.parentElement;
}while(oParentElement!=null){if(DDCOMMON.hasClassName(oParentElement.className,sClassName)){return oParentElement;
}else{oParentElement=oParentElement.parentElement;
}}return null;
},getActiveContribution:function(editor){return $(editor.editable().$).find(".ddcontribution[ddactive=true]:last")[0];
},getDocModeMeta:function(doc){if(!doc){doc=document;
}return doc.documentMode?"IE="+doc.documentMode:null;
},getRangePosition:function(element,range){if(null==element||null==range||null==element.parentElement){return null;
}var duplRange=range.duplicate();
try{duplRange.moveToElementText(element);
}catch(e){DocHandleError("getRangePosition, Exception while trying to `moveToElementText`:  "+(e.message||e),"dynDocCommonFunc.js","","");
return null;
}duplRange.setEndPoint("EndToEnd",range);
var nStartPos=duplRange.text.length-1;
if(range.text.length>0){nStartPos-=range.text.length;
}duplRange=range.duplicate();
duplRange.collapse();
while(DDCOMMON.isBRPresent(duplRange)){nStartPos+=2;
duplRange.moveEnd("character",-1);
}return new dyndocRangePosition(nStartPos,nStartPos+range.text.length);
},containsNode:function(ancestor,descendent){if(descendent.nodeType===Node.TEXT_NODE){return descendent.parentNode===ancestor||ancestor.contains(descendent.parentNode);
}else{return ancestor.contains(descendent);
}},isNodeEditable:function(node){if(node.$){node=node.$;
}if(node.nodeType===CKEDITOR.NODE_ELEMENT){return node.isContentEditable;
}else{if(node.nodeType===CKEDITOR.NODE_TEXT){return node.parentNode&&node.parentNode.isContentEditable;
}else{return false;
}}},getFirstTextNode:function(element){var rv=null;
DDCOMMON.domDfs(element,1,function(node,evt){if(node.nodeType===Node.TEXT_NODE){rv=node;
evt.stop();
}});
return rv;
},getLastTextNode:function(element){var rv=null;
DDCOMMON.domDfs(element,-1,function(node,evt){if(node.nodeType===Node.TEXT_NODE){rv=node;
evt.stop();
}});
return rv;
},getPreviousNode:function(node,preorderFilter,postorderFilter){var sibling=node.lastChild||node.previousSibling;
if(sibling){return preorderFilter==null||preorderFilter(sibling)?sibling:null;
}else{for(var cur=node;
cur&&!cur.previousSibling;
cur=cur.parentNode){if(postorderFilter&&!postorderFilter(cur)){return null;
}}if(cur&&cur.previousSibling){if(postorderFilter&&!postorderFilter(cur)){return null;
}return preorderFilter==null||preorderFilter(cur.previousSibling)?cur.previousSibling:null;
}}return null;
},getNextNode:function(node,preorderFilter,postorderFilter){var sibling=node.firstChild||node.nextSibling;
if(sibling){return preorderFilter==null||preorderFilter(sibling)?sibling:null;
}else{for(var cur=node;
cur&&!cur.nextSibling;
cur=cur.parentNode){if(postorderFilter&&!postorderFilter(cur)){return null;
}}if(cur&&cur.nextSibling){if(postorderFilter&&!postorderFilter(cur)){return null;
}return preorderFilter==null||preorderFilter(cur.nextSibling)?cur.nextSibling:null;
}}return null;
},moveRangeWhenAtBoundary:function(elem,editor){var sel=editor.getSelection();
if(sel&&!sel.isLocked&&sel.getRanges().length>0){var range=sel.getRanges()[0];
if(range.collapsed==true){if(range.checkBoundaryOfElement(CKEDITOR.dom.element.get(elem),CKEDITOR.END)){range.moveToPosition(CKEDITOR.dom.element.get(elem),CKEDITOR.POSITION_AFTER_END);
sel.selectRanges([range]);
}else{if(range.checkBoundaryOfElement(CKEDITOR.dom.element.get(elem),CKEDITOR.START)){range.moveToPosition(CKEDITOR.dom.element.get(elem),CKEDITOR.POSITION_BEFORE_START);
sel.selectRanges([range]);
}}}}},stopAtBr:function(node){return !(node.nodeType===Node.ELEMENT_NODE&&node.tagName.toUpperCase()==="BR");
},stopAtBlock:function(node){return !(node.nodeType===Node.ELEMENT_NODE&&CKEDITOR.dom.element.get(node).isBlockBoundary());
},stopAtSpacingRight:function(node){if(node.nodeType!==Node.ELEMENT_NODE){return true;
}var $element=$(node);
return !(parseInt($element.css("margin-right"),10)>0||parseInt($element.css("padding-right"),10)>0);
},stopAtSpacingLeft:function(node){if(node.nodeType!==Node.ELEMENT_NODE){return true;
}var $element=$(node);
return !(parseInt($element.css("margin-left"),10)>0||parseInt($element.css("padding-left"),10)>0);
},isFillingChar:function(node){return node.nodeType===Node.TEXT_NODE&&node.nodeValue.length===1&&node.nodeValue.charCodeAt(0)==8203;
},makeConjunction:function(){var funcs=Array.prototype.slice.call(arguments,0);
return function(){for(var i=0;
i<funcs.length;
i++){if(!funcs[i].apply(window,arguments)){return false;
}}return true;
};
},getPreviousInlineTextnode:function(node){var leftNode=node;
do{leftNode=DDCOMMON.getPreviousNode(leftNode,DDCOMMON.makeConjunction(DDCOMMON.stopAtBr,DDCOMMON.stopAtBlock,DDCOMMON.stopAtSpacingRight),DDCOMMON.makeConjunction(DDCOMMON.stopAtBlock,DDCOMMON.stopAtSpacingLeft));
}while(leftNode&&(leftNode.nodeType!==Node.TEXT_NODE||DDCOMMON.isBookmarkElement(leftNode.parentNode)));
return leftNode;
},getNextInlineTextnode:function(node){var rightNode=node;
do{rightNode=DDCOMMON.getNextNode(rightNode,DDCOMMON.makeConjunction(DDCOMMON.stopAtBr,DDCOMMON.stopAtBlock,DDCOMMON.stopAtSpacingLeft),DDCOMMON.makeConjunction(DDCOMMON.stopAtBlock,DDCOMMON.stopAtSpacingRight));
}while(rightNode&&(rightNode.nodeType!==Node.TEXT_NODE||DDCOMMON.isBookmarkElement(rightNode.parentNode)));
return rightNode;
},isNodeAtEnd:function(subjectNode,rootNode){if(subjectNode===rootNode.lastChild){return true;
}return rootNode.lastChild?DDCOMMON.isNodeAtEnd(subjectNode,rootNode.lastChild):false;
},isBookmarkElement:function(node){if(!node){return false;
}var node$=node.$||node;
if(node$.nodeType!==Node.ELEMENT_NODE){return false;
}var element=CKEDITOR.dom.element.get(node$);
return !!element.data("cke-bookmark");
},searchFrom:function(str,regex,fromIndex){var substr=fromIndex>0?str.substring(fromIndex):str;
regex.lastIndex=0;
var idx=substr.search(regex);
return idx>=0&&fromIndex>=0?idx+fromIndex:idx;
},searchLast:function(str,regex){var lastIdx=-1;
do{var substr=lastIdx>=0?str.substring(lastIdx+1):str;
regex.lastIndex=0;
var idx=substr.search(regex);
if(idx<0){return lastIdx;
}if(str.length===0){return idx;
}lastIdx=idx+(str.length-substr.length);
}while(idx>=0);
return lastIdx;
},getSectionDisplayElement:function(oElement){if(null==oElement.childNodes||oElement.childNodes.length==0){return null;
}var oCurDescendent=oElement.childNodes[0];
while(oCurDescendent!=null){if(DDCOMMON.hasClassName(oCurDescendent.className,g_sCLASS_SECTION_DISP)){for(var oElementCur=oCurDescendent;
true;
){var oElementNext=oElementCur.nextSibling;
if(oElementNext&&DDCOMMON.hasClassName(oElementNext.className,g_sCLASS_SECTION_DISP)){oElementCur=oElementNext;
}else{break;
}}return oElementCur;
}else{if(DDCOMMON.hasClassName(oCurDescendent.className,g_sCLASS_SECTION)){return null;
}else{oCurDescendent=oCurDescendent.childNodes[0];
}}}return null;
},findStyle:function(element,styleName,traversePredicate){if(!traversePredicate){traversePredicate=function(){return true;
};
}var sStyleValue=element.style[styleName];
if(sStyleValue){return sStyleValue;
}else{if(element.parentNode&&element.parentNode.nodeType===Node.ELEMENT_NODE&&traversePredicate(element.parentNode)){return DDCOMMON.findStyle(element.parentNode,styleName,traversePredicate);
}else{return null;
}}},matchElementFont:function(elToMatch,toStyle){var predIsInContribution=function(element){return $(element).closest(".ddcontributionhtml").length>0;
};
var sFontFamily=DDCOMMON.findStyle(elToMatch,"fontFamily",predIsInContribution);
var sFontSize=DDCOMMON.findStyle(elToMatch,"fontSize",predIsInContribution);
if(sFontFamily||sFontSize){if(typeof toStyle==="function"){toStyle(sFontFamily,sFontSize);
}else{var $toStyle=$(toStyle.$||toStyle);
$toStyle.css({"font-family":sFontFamily,"font-size":sFontSize});
}}},hasClassName:function(sClassNameAtrb,sWantedClassName){if(!sClassNameAtrb||!sWantedClassName){return false;
}var iFindIdx=sClassNameAtrb.indexOf(sWantedClassName);
if(iFindIdx>=0){var iWantedClassLen=sWantedClassName.length;
var iClassAtrbLen=sClassNameAtrb.length;
if((iFindIdx+iWantedClassLen)==iClassAtrbLen){return true;
}var cDelimiter=sClassNameAtrb.charAt(iFindIdx+iWantedClassLen);
if(/\s/.test(cDelimiter)){return true;
}}return false;
},isBRPresent:function(range){if(!range){return false;
}var duplRange=range.duplicate();
duplRange.moveStart("character",-1);
var sText=duplRange.htmlText;
if(sText.search(CKEditorNewLine.HTML_UPPER_NL)!=-1||sText.search(CKEditorNewLine.HTML_LOWER_NL)!=-1||sText.search(CKEditorNewLine.XHTML_UPPER_NL)!=-1||sText.search(CKEditorNewLine.XHTML_LOWER_NL)!=-1){return true;
}else{return false;
}},isDYNDocContent:function(oElement){if(!oElement){return false;
}if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_EMR_CONTENT_ITEM)||DDCOMMON.hasClassName(oElement.className,g_sCLASS_EMR_CONTENT)||DDCOMMON.hasClassName(oElement.className,g_sCLASS_FREETEXT)){return true;
}return false;
},isElementRemovable:function(oElement){return oElement&&DDCOMMON.hasClassName(oElement.className,g_sCLASS_REMOVABLE);
},isEmpty:function(sString){if(null==sString){return true;
}var sTrimmed=sString.replace(/^\s+|\s+$/g,"");
if(sTrimmed.length>0){return false;
}return true;
},makeFreetextEditable:function(oEditor,oFreetextElement){if(null==oEditor||null==oFreetextElement||false==DDCOMMON.hasClassName(oFreetextElement.className,g_sCLASS_FREETEXT)){return;
}var aTemplates=DDCOMMON.getDescendentsByClassNames(oFreetextElement,[g_sCLASS_BLOCK_CN_TEMPLATE,g_sCLASS_BLOCK_SMART_TEMPLATE]);
for(var i=0;
i<aTemplates.length;
i++){var oTemplate=aTemplates[i];
if(oTemplate&&true==DDCOMMON.getAttributeBoolean(oTemplate,g_sATTRIBUTE_REFRESHING)){return;
}}oFreetextElement.setAttribute("contentEditable",true);
},disableNoteDetailButtons:function(editor){DDCOMMON.disableCommand(editor,DDCMD_SAVE);
DDCOMMON.disableCommand(editor,DDCMD_SAVECLOSE);
DDCOMMON.disableCommand(editor,DDCMD_SIGN);
DDCOMMON.disableCommand(editor,DDCMD_DQR);
},removeAllPreWrap:function(element){var fnIsBad=function(_,el){return $(el).css("white-space")==="pre-wrap";
};
$(element).find("*").addBack().filter(fnIsBad).css("white-space","");
},removeFontFormatAndPreWrap:function(element){var fnBadFontSize=function(_,el){return $(el).css("font-size")!=="";
};
$(element).find("*").addBack().filter(fnBadFontSize).css("font-size","");
var fnHasFontFamily=function(_,el){return $(el).css("font-family")!=="";
};
$(element).find("*").addBack().filter(fnHasFontFamily).css("font-family","");
this.removeAllPreWrap(element);
},removeHtmlPreWrap:function(html){var $e=$("<div>").html(html);
this.removeAllPreWrap($e[0]);
return $e.html();
},resetCaches:function(){m_oInnerDomElementsCache=[];
},removeCommentNodes:function(node){if(node.nodeType===Node.COMMENT_NODE){node.parentNode.removeChild(node);
}else{if(node.childNodes){for(var i=node.childNodes.length-1;
i>=0;
i--){DDCOMMON.removeCommentNodes(node.childNodes[i]);
}}}},setButtonStatus:function(oEditor,sButtonName,bEnable){if(null==oEditor){return;
}var toolbars=oEditor.toolbox.toolbars;
for(var i=0;
i<toolbars.length;
i++){var toolbarItems=toolbars[i].items;
for(var j=0;
j<toolbarItems.length;
j++){var button=toolbarItems[j].button;
if(button&&button.name==sButtonName){button.setState(bEnable?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
}}}},setComboStatus:function(oEditor,sComboName,bEnable){if(null==oEditor){return;
}var toolbars=oEditor.toolbox.toolbars;
for(var i=0;
i<toolbars.length;
i++){var toolbarItems=toolbars[i].items;
for(var j=0;
j<toolbarItems.length;
j++){var combo=toolbarItems[j].combo;
if(combo&&combo.name==sComboName){combo.setState(bEnable?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
}}}},stringToBoolean:function(sString){if(!sString){return false;
}switch(sString.toLowerCase()){case"true":case"yes":case"1":return true;
case"false":case"no":case"0":case"inherit":case null:return false;
default:return Boolean(sString);
}},updateToolbarCmdStatus:function(oEditor){if(!oEditor){return;
}var oSelection=oEditor.getSelection();
if(!oSelection){return;
}var startElement=oSelection.getStartElement();
if(!startElement){disableStyleCmdStatus(oEditor);
return;
}var $ddcontributiontitle=$(startElement.$).closest("."+g_sCLASS_CONTRIBUTION_TITLE);
if($ddcontributiontitle.length&&!$ddcontributiontitle[0].isContentEditable){disableStyleCmdStatus(oEditor);
return;
}if($(startElement.$).is(".ddcontribution[ddactive=true], .ddcontribution[ddactive=true] *")){DDCOMMON.setComboStatus(oEditor,"font",true);
DDCOMMON.setComboStatus(oEditor,"fontsize",true);
DDCOMMON.setButtonStatus(oEditor,"textcolor",true);
}else{disableStyleCmdStatus(oEditor);
}},putCursorAtEnd:function(oElement){if(!oElement){return;
}try{oElement.focus();
}catch(e){}var doc=new CKEDITOR.dom.document(oElement.ownerDocument);
var sel=new CKEDITOR.dom.selection(doc);
var range=new CKEDITOR.dom.range(doc);
range.moveToElementEditEnd(new CKEDITOR.dom.element(oElement));
sel.selectRanges([range]);
},valueifyObject:function(obj){if(!$.isPlainObject(obj)){return{value:obj};
}var rv={};
for(var key in obj){if(!obj.hasOwnProperty(key)||typeof obj[key]==="undefined"){continue;
}var val=obj[key];
if($.isArray(val)){val=$.map(val,function(sub){return DDCOMMON.valueifyObject(sub);
});
}rv[key]=DDCOMMON.valueifyObject(val);
}return rv;
},lead2Digit:function(num){num=parseInt(num,10);
return num>=0&&num<10?"0"+num:""+num;
},convertDateObjectToSrvString:function(date){var lead=DDCOMMON.lead2Digit;
return[date.year,lead(date.month),lead(date.day),lead(date.hour),lead(date.min),lead(date.sec||0),lead(date.hsec||0)].join("");
},isStepSuccessful:function(reply){return reply.status_data&&reply.status_data.status==="S";
},callCrmAsync:function(taskId,reqId,req,options){if(!taskId){taskId=SERVICE_TASK;
}if(!_.isString(req)){req=JSON.stringify(req);
}var DocUtilsHelper=window.DocUtilsHelper||CKEDITOR.DocUtilsHelper;
if(typeof DocUtilsHelper.CallCRMAsync!=="undefined"){DocUtilsHelper.CallCRMAsync(taskId,reqId,req,options);
}else{if(typeof DynDocHelper!=="undefined"&&typeof DynDocHelper.CallCRMAsync!=="undefined"){DynDocHelper.CallCRMAsync(options,taskId,reqId,req,"complete");
}else{if(typeof DynDocDlgReusableConsumerCallBack!=="undefined"&&typeof DynDocDlgReusableConsumerCallBack.CallCRMAsync!=="undefined"){DynDocDlgReusableConsumerCallBack.CallCRMAsync(options,taskId,reqId,req,"complete");
}else{throw Error("CallCRMAsync is unavailable");
}}}},hideEmptySections:function(oEditor,className){var bAreAnySectionsHidden=false;
if(className=="ddsubsection"){var subSectionElements=$(oEditor).find(".ddsubsection.ddremovable");
for(var ddSubSectionCnt=0;
ddSubSectionCnt<subSectionElements.length;
ddSubSectionCnt++){var subSectionElementsText=$.trim($(subSectionElements[ddSubSectionCnt]).text());
var subSectionDisplayElements=$(subSectionElements[ddSubSectionCnt]).find("."+g_sCLASS_SECTION_DISP);
if(subSectionDisplayElements.length>0){if(subSectionElementsText.replace(/[\r\n]/gm,"").replace(/\s/g,"")!==$.trim($(subSectionDisplayElements[0]).text().replace(/[\r\n]/gm,"").replace(/\s/g,""))){continue;
}}if(subSectionDisplayElements.length==0){if($.trim(subSectionElementsText)!==""){continue;
}}$(subSectionElements[ddSubSectionCnt]).css("display","none");
bAreAnySectionsHidden=true;
}}if(className=="ddsection"){var sectionElements=$(oEditor).find(".ddsection.ddremovable");
for(var ddSectionCnt=0;
ddSectionCnt<sectionElements.length;
ddSectionCnt++){var sectionElementsText=$.trim($(sectionElements[ddSectionCnt]).text());
var sectionVisibleElements=$($(sectionElements[ddSectionCnt]).find("."+g_sCLASS_SUBSECTION)).filter(function(){return $(this).css("display")!="none";
});
if(sectionVisibleElements.length>0){continue;
}else{var sectionDisplayElements=$(sectionElements[ddSectionCnt]).find("."+g_sCLASS_SECTION_DISP);
if(sectionDisplayElements.length>0){if($(sectionDisplayElements).text().replace(/[\r\n]/gm,"").replace(/\s/g,"")!==sectionElementsText.replace(/[\r\n]/gm,"").replace(/\s/g,"")){continue;
}}else{if(sectionElementsText.replace(/[\r\n]/gm,"").replace(/\s/g,"")!==""){continue;
}}}if($(sectionElements[ddSectionCnt]).hasClass(g_sCLASS_FOOTNOTEITEM)){continue;
}$(sectionElements[ddSectionCnt]).css("display","none");
bAreAnySectionsHidden=true;
}}return bAreAnySectionsHidden;
},hideEmptyFreeTextAreas:function(oEditor){var bAreAnyFreeTextAreasHidden=false;
$.each($(oEditor).find(".ddfreetext.ddremovable"),function(i,element){if($.trim($(element).text())===""){$(element).css("display","none");
bAreAnyFreeTextAreasHidden=true;
}});
return bAreAnyFreeTextAreasHidden;
},updateLatestEntityVersions:function(oEditor){var sJson=DDCOMMON.m_oJavaScriptDocument.getLatestEntityVersions();
if(sJson){var arrComponents=$.parseJSON(sJson);
for(var concept in arrComponents){var iVersion=arrComponents[concept].version;
var ddemrcontentNode=$(oEditor.document.$).find('.ddemrcontent[dd\\:concept_cki="'+concept+'"],.ddemrcontent[dd\\:concept="'+concept+'"]:first');
var emrItemNode=ddemrcontentNode.find(".ddemrcontentitem:first");
if(!emrItemNode.length){var sDebugMsg="DynDocCKEditor, updateLatestEntityVersions; Could not find EMR element in the document for "+concept;
CKEDITOR.DynDocHelper.ReportDebugMsg(sDebugMsg,"DynDocCKEditor");
continue;
}var sPrevVersion=emrItemNode.attr("dd:entityversion");
if(typeof sPrevVersion==="undefined"){DocHandleError("DynDocCKEditor, updateLatestEntityVersions; dd attributes missing from emrcontentitem for "+concept,"DynDocCKEditor","","");
continue;
}sPrevVersion=$.trim(sPrevVersion);
var iPrevVersion=parseInt(sPrevVersion,10);
if(iPrevVersion){if(iVersion==iPrevVersion){continue;
}else{if(iVersion<iPrevVersion){DocHandleError("DynDocCKEditor, updateLatestEntityVersions; version became older","DynDocCKEditor","","");
continue;
}}}emrItemNode.attr("dd:entityversion",""+iVersion);
}}}};
}();
DDCOMMON.LegacyContentFixers={fixBadDxOrders:function(ancestor){$(ancestor).find('[dd\\:contenttype="DIAGNOSES"] :not(.ddfreetext) div').each(function(){var $div=$(this);
if($div.css("float") in {left:1,right:1}){$div.css("float","");
$div.css("display","table-cell");
}});
}};
eUserCommands={eCut:0,eCopy:1,ePaste:2,eSave:3,eSign:4,eCloseNote:5,eManageAutoText:6,eDQR:7};
eCallBackFunctions={eSetContentHTML:1,eLayoutDocument:2,ePopulateDocumentObjHTML:3,eSetNoteDetailDisplay:4,eIsDocumentDirty:5,eAreActiveContributionsEmpty:6,eExecuteUserCommand:7,eFindSectionName:8,eApplyDqr:9,eSetClipboardHtml:10};
g_iDD_KEYCODE_BACKSPACE=8;
g_iDD_KEYCODE_TAB=9;
g_iDD_KEYCODE_ENTER=13;
g_iDD_KEYCODE_SHIFT=16;
g_iDD_KEYCODE_CTRL=17;
g_iDD_KEYCODE_ESC=27;
g_iDD_KEYCODE_SPACE=32;
g_iDD_KEYCODE_KEYLEFT=37;
g_iDD_KEYCODE_KEYUP=38;
g_iDD_KEYCODE_KEYRIGHT=39;
g_iDD_KEYCODE_KEYDOWN=40;
g_iDD_KEYCODE_DELETE=46;
g_iDD_KEYCODE_F3=114;
g_iDD_KEYCODE_A=65;
INCORRECT_CURSOR_POSITION=-2;
PvnStrings={IDS_CLINICALNOTEWND_009:21,IDS_VERIFIED_STATUS:32968,IDS_UNVERIFIED_STATUS:32969,nothing:0};
DYNDOCDOCUMENTFACTORY=function(){function ddContent(sID,sHTML,aAttributes,sExtractKey){this.id=sID;
this.HTML=sHTML;
this.extractKey=sExtractKey;
this.Attributes=aAttributes;
}function ddDocument(){var m_aRetrievedContent={};
var m_sBannerText;
var m_sJsonLatestEntityVersion;
this.addRetrievedContent=function(oContentObject){if(null==oContentObject||DDCOMMON.isEmpty(oContentObject.id)){return;
}m_aRetrievedContent[oContentObject.id]=oContentObject;
};
this.getRetrievedContent=function(sID){if(DDCOMMON.isEmpty(sID)){return null;
}var oContent=m_aRetrievedContent[sID];
if(null!=oContent){return oContent;
}return null;
};
this.setBannerText=function(sBannerText){m_sBannerText=sBannerText;
};
this.getBannerText=function(){return m_sBannerText;
};
this.setLatestEntityVersion=function(sJsonLatestEntityVersions){m_sJsonLatestEntityVersion=sJsonLatestEntityVersions;
};
this.getLatestEntityVersions=function(){return m_sJsonLatestEntityVersion;
};
}return{createDDContent:function(sID,sHTML,aAttributes,sExtractKey){return new ddContent(sID,sHTML,aAttributes,sExtractKey);
},createDDDocument:function(){return new ddDocument();
}};
}();
g_sDYNDOC_SLA_TIMER_USR_ADD_DOCUMENT="USR: DynDoc Add Document";
g_sDYNDOC_SLA_TIMER_USR_EXECUTE_AUTOTEXT_DOCUMENT="USR: DynDoc Execute AutoText Document";
g_sDYNDOC_CKPT_DOC_COMP_REFRESH_WITH_EMRCONTENT="CKPT: DynDoc Doc Comp With Emr Content";
g_sDYNDOC_CKPT_DOC_COMP_REFRESH="CKPT: DynDoc Refresh Doc Comp";
g_sDYNDOC_CKPT_SAVE_FAVORITE_TEMPLATE="CKPT: DynDoc Save Favorite Reference Template";
g_sDYNDOC_CKPT_SUBEVENT_CHECK="Checkpoint";
g_sDYNDOC_CKPT_ENDORSE_USAGE="CKPT: DynDoc CC_Endorse Usage";
g_sDYNDOC_HIDE_EMPTY_SECTIONS="CKPT: DynDoc Hide Empty Sections";
g_sSTRUCTURE_CKPT_LOAD_SECTION="CKPT: Structure Load Section";
g_sSTRUCTURE_CKPT_SAVE_SECTION="CKPT: Structure Save Section";
DYNDOC=function(){return{dynDocMakeEditorReadOnly:function(editor){var oEditingArea=editor.editable().$;
if(null!=oEditingArea){oEditingArea.contentEditable="false";
oEditingArea.unselectable="on";
}},defaultReadWrite:function(editor){var oEditingArea=editor.editable().$;
if(null!=oEditingArea){oEditingArea.contentEditable="inherit";
oEditingArea.unselectable=undefined;
}},dynDocOpenNewDocument:function(oEditor){if(typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.GenerateGUID!=="undefined"){$(".ddsection,.ddsubsection,.ddfreetext").each(function(){if(!this.id){this.id=CKEDITOR.DocUtilsHelper.GenerateGUID();
}});
}var $refreshable=$(oEditor.editable().$).find(".ddemrcontent,.blocksmarttemplate,.blockcntemplate,.blocktoken");
$refreshable.each(function(){if(DDCOMMON.isEmpty(this.id)&&typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.GenerateGUID!=="undefined"){this.id=CKEDITOR.DocUtilsHelper.GenerateGUID();
}oEditor.execCommand(DDCMD_REFRESHELEMENT,{element:this,type:g_sATTRIBUTE_INITIALIZING});
});
oEditor.resetUndo();
var selection=oEditor.getSelection();
selection&&selection.reset();
},dynDocFindSectionNameOrSubSectionName:function(oEditor,extractkey){if(extractkey.length===0){DocHandleError("dyndoc::dynDocFindSectionName, No content extractkey passed in.","DynDocCKEditor");
return"";
}var activityElement=document.getElementById(extractkey);
if(activityElement==null){DocHandleError("dyndoc::dynDocFindSectionName, Cannot find element by content extractkey "+extractkey+".","DynDocCKEditor","","");
return"";
}var $section=$(activityElement).closest("."+g_sCLASS_SECTION+",."+g_sCLASS_SUBSECTION);
if($section.length===0){DocHandleError("dyndoc::dynDocFindSectionName, Cannot find the section element for content extractkey "+extractkey+".","DynDocCKEditor","","");
return"";
}var oSectionDisplay=DDCOMMON.getSectionDisplayElement($section[0]);
if(oSectionDisplay){return oSectionDisplay.innerText;
}return"";
},dynDocFindSectionName:function(oEditor,guid,sWorkFlow,sContentType){if(guid.length===0){DocHandleError("dyndoc::dynDocFindSectionName, No content GUID passed in.","DynDocCKEditor",sWorkFlow,sContentType);
return"";
}var activityElement=document.getElementById(guid);
if(activityElement==null){DocHandleError("dyndoc::dynDocFindSectionName, Cannot find element by content guid "+guid+".","DynDocCKEditor","","");
return"";
}var $section=$(activityElement).closest("."+g_sCLASS_SECTION);
if($section.length===0){DocHandleError("dyndoc::dynDocFindSectionName, Cannot find the section element for content guid "+guid+".","DynDocCKEditor","","");
return"";
}var oSectionDisplay=DDCOMMON.getSectionDisplayElement($section[0]);
if(oSectionDisplay){return oSectionDisplay.innerText;
}return"";
},dynDocSetHTML:function(oEditor,sHtml,sWorkFlow,fnCallback){if("wysiwyg"===oEditor.mode){var oEditingArea=oEditor.editable().$;
oEditor.setData(sHtml,function(){DDCOMMON.removeCommentNodes(oEditor.editable().$);
if(0==DDCOMMON.m_oWin32Document.MDocEventId){this.dynDocOpenNewDocument(oEditor);
}this.dynDocMakeEditorReadOnly(oEditor);
oEditingArea.scrollTop=0;
fnCallback&&fnCallback();
}.bind(this));
}else{DocHandleError("dyndoc::dynDocSetHTML, You must be on WYSIWYG mode!","DynDocCKEditor",sWorkFlow,"");
}},dynDocExecuteUserCommand:function(oEditor,sUserCommand){var iUserCommand=parseInt(sUserCommand,10);
var sCommandName;
switch(iUserCommand){case eUserCommands.eCut:sCommandName=DDCMD_CUT;
break;
case eUserCommands.eCopy:sCommandName=DDCMD_COPY;
break;
case eUserCommands.ePaste:sCommandName=oEditor.getCommand("pastetext")?"pastetext":"paste";
break;
case eUserCommands.eSave:sCommandName=DDCMD_SAVE;
break;
case eUserCommands.eSign:sCommandName=DDCMD_SIGN;
break;
case eUserCommands.eCloseNote:sCommandName=DDCMD_CLOSENOTE;
break;
case eUserCommands.eDQR:sCommandName=DDCMD_DQR;
break;
default:return;
}oEditor.execCommand(sCommandName);
}};
}();
