(function($){var undefined;
$.fn.emptyForce=function(){for(var i=0,elem;
(elem=$(this)[i])!=null;
i++){if(elem.nodeType===1){jQuery.cleanData(elem.getElementsByTagName("*"));
}if($.jqplot_use_excanvas){elem.outerHTML="";
}else{while(elem.firstChild){elem.removeChild(elem.firstChild);
}}elem=null;
}return $(this);
};
$.fn.removeChildForce=function(parent){while(parent.firstChild){this.removeChildForce(parent.firstChild);
parent.removeChild(parent.firstChild);
}};
$.jqplot=function(target,data,options){var _data,_options;
if(options==null){if(jQuery.isArray(data)){_data=data;
_options=null;
}else{if(typeof(data)==="object"){_data=null;
_options=data;
}}}else{_data=data;
_options=options;
}var plot=new jqPlot();
$("#"+target).removeClass("jqplot-error");
if($.jqplot.config.catchErrors){try{plot.init(target,_data,_options);
plot.draw();
plot.themeEngine.init.call(plot);
return plot;
}catch(e){var msg=$.jqplot.config.errorMessage||e.message;
$("#"+target).append('<div class="jqplot-error-message">'+msg+"</div>");
$("#"+target).addClass("jqplot-error");
document.getElementById(target).style.background=$.jqplot.config.errorBackground;
document.getElementById(target).style.border=$.jqplot.config.errorBorder;
document.getElementById(target).style.fontFamily=$.jqplot.config.errorFontFamily;
document.getElementById(target).style.fontSize=$.jqplot.config.errorFontSize;
document.getElementById(target).style.fontStyle=$.jqplot.config.errorFontStyle;
document.getElementById(target).style.fontWeight=$.jqplot.config.errorFontWeight;
}}else{plot.init(target,_data,_options);
plot.draw();
plot.themeEngine.init.call(plot);
return plot;
}};
$.jqplot.version="1.0.0b2_r1012";
$.jqplot.CanvasManager=function(){if(typeof $.jqplot.CanvasManager.canvases=="undefined"){$.jqplot.CanvasManager.canvases=[];
$.jqplot.CanvasManager.free=[];
}var myCanvases=[];
this.getCanvas=function(){var canvas;
var makeNew=true;
if(!$.jqplot.use_excanvas){for(var i=0,l=$.jqplot.CanvasManager.canvases.length;
i<l;
i++){if($.jqplot.CanvasManager.free[i]===true){makeNew=false;
canvas=$.jqplot.CanvasManager.canvases[i];
$.jqplot.CanvasManager.free[i]=false;
myCanvases.push(i);
break;
}}}if(makeNew){canvas=document.createElement("canvas");
myCanvases.push($.jqplot.CanvasManager.canvases.length);
$.jqplot.CanvasManager.canvases.push(canvas);
$.jqplot.CanvasManager.free.push(false);
}return canvas;
};
this.initCanvas=function(canvas){if($.jqplot.use_excanvas){return window.G_vmlCanvasManager.initElement(canvas);
}return canvas;
};
this.freeAllCanvases=function(){for(var i=0,l=myCanvases.length;
i<l;
i++){this.freeCanvas(myCanvases[i]);
}myCanvases=[];
};
this.freeCanvas=function(idx){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){window.G_vmlCanvasManager.uninitElement($.jqplot.CanvasManager.canvases[idx]);
$.jqplot.CanvasManager.canvases[idx]=null;
}else{var canvas=$.jqplot.CanvasManager.canvases[idx];
canvas.getContext("2d").clearRect(0,0,canvas.width,canvas.height);
$(canvas).unbind().removeAttr("class").removeAttr("style");
$(canvas).css({left:"",top:"",position:""});
canvas.width=0;
canvas.height=0;
$.jqplot.CanvasManager.free[idx]=true;
}};
};
$.jqplot.log=function(){if(window.console){window.console.log.apply(window.console,arguments);
}};
$.jqplot.config={addDomReference:false,enablePlugins:true,defaultHeight:300,defaultWidth:400,UTCAdjust:false,timezoneOffset:new Date(new Date().getTimezoneOffset()*60000),errorMessage:"",errorBackground:"",errorBorder:"",errorFontFamily:"",errorFontSize:"",errorFontStyle:"",errorFontWeight:"",catchErrors:false,defaultTickFormatString:"%.1f",defaultColors:["#4bb2c5","#EAA228","#c5b47f","#579575","#839557","#958c12","#953579","#4b5de4","#d8b83f","#ff5800","#0085cc","#c747a3","#cddf54","#FBD178","#26B4E3","#bd70c7"],defaultNegativeColors:["#498991","#C08840","#9F9274","#546D61","#646C4A","#6F6621","#6E3F5F","#4F64B0","#A89050","#C45923","#187399","#945381","#959E5C","#C7AF7B","#478396","#907294"],dashLength:4,gapLength:4,dotGapLength:2.5,srcLocation:"jqplot/src/",pluginLocation:"jqplot/src/plugins/"};
$.jqplot.arrayMax=function(array){return Math.max.apply(Math,array);
};
$.jqplot.arrayMin=function(array){return Math.min.apply(Math,array);
};
$.jqplot.enablePlugins=$.jqplot.config.enablePlugins;
$.jqplot.support_canvas=function(){if(typeof $.jqplot.support_canvas.result=="undefined"){$.jqplot.support_canvas.result=!!document.createElement("canvas").getContext;
}return $.jqplot.support_canvas.result;
};
$.jqplot.support_canvas_text=function(){if(typeof $.jqplot.support_canvas_text.result=="undefined"){if(window.G_vmlCanvasManager!==undefined&&window.G_vmlCanvasManager._version>887){$.jqplot.support_canvas_text.result=true;
}else{$.jqplot.support_canvas_text.result=!!(document.createElement("canvas").getContext&&typeof document.createElement("canvas").getContext("2d").fillText=="function");
}}return $.jqplot.support_canvas_text.result;
};
$.jqplot.use_excanvas=false;
$.jqplot.preInitHooks=[];
$.jqplot.postInitHooks=[];
$.jqplot.preParseOptionsHooks=[];
$.jqplot.postParseOptionsHooks=[];
$.jqplot.preDrawHooks=[];
$.jqplot.postDrawHooks=[];
$.jqplot.preDrawSeriesHooks=[];
$.jqplot.postDrawSeriesHooks=[];
$.jqplot.preDrawLegendHooks=[];
$.jqplot.addLegendRowHooks=[];
$.jqplot.preSeriesInitHooks=[];
$.jqplot.postSeriesInitHooks=[];
$.jqplot.preParseSeriesOptionsHooks=[];
$.jqplot.postParseSeriesOptionsHooks=[];
$.jqplot.eventListenerHooks=[];
$.jqplot.preDrawSeriesShadowHooks=[];
$.jqplot.postDrawSeriesShadowHooks=[];
$.jqplot.ElemContainer=function(){this._elem;
this._plotWidth;
this._plotHeight;
this._plotDimensions={height:null,width:null};
};
$.jqplot.ElemContainer.prototype.createElement=function(el,offsets,clss,cssopts,attrib){this._offsets=offsets;
var klass=clss||"jqplot";
var elem=document.createElement(el);
this._elem=$(elem);
this._elem.addClass(klass);
this._elem.css(cssopts);
this._elem.attr(attrib);
elem=null;
return this._elem;
};
$.jqplot.ElemContainer.prototype.getWidth=function(){if(this._elem){return this._elem.outerWidth(true);
}else{return null;
}};
$.jqplot.ElemContainer.prototype.getHeight=function(){if(this._elem){return this._elem.outerHeight(true);
}else{return null;
}};
$.jqplot.ElemContainer.prototype.getPosition=function(){if(this._elem){return this._elem.position();
}else{return{top:null,left:null,bottom:null,right:null};
}};
$.jqplot.ElemContainer.prototype.getTop=function(){return this.getPosition().top;
};
$.jqplot.ElemContainer.prototype.getLeft=function(){return this.getPosition().left;
};
$.jqplot.ElemContainer.prototype.getBottom=function(){return this._elem.css("bottom");
};
$.jqplot.ElemContainer.prototype.getRight=function(){return this._elem.css("right");
};
function Axis(name){$.jqplot.ElemContainer.call(this);
this.name=name;
this._series=[];
this.show=false;
this.tickRenderer=$.jqplot.AxisTickRenderer;
this.tickOptions={};
this.labelRenderer=$.jqplot.AxisLabelRenderer;
this.labelOptions={};
this.label=null;
this.showLabel=true;
this.min=null;
this.max=null;
this.autoscale=false;
this.pad=1.2;
this.padMax=null;
this.padMin=null;
this.ticks=[];
this.numberTicks;
this.tickInterval;
this.renderer=$.jqplot.LinearAxisRenderer;
this.rendererOptions={};
this.showTicks=true;
this.showTickMarks=true;
this.showMinorTicks=true;
this.drawMajorGridlines=true;
this.drawMinorGridlines=false;
this.drawMajorTickMarks=true;
this.drawMinorTickMarks=true;
this.useSeriesColor=false;
this.borderWidth=null;
this.borderColor=null;
this._dataBounds={min:null,max:null};
this._intervalStats=[];
this._offsets={min:null,max:null};
this._ticks=[];
this._label=null;
this.syncTicks=null;
this.tickSpacing=75;
this._min=null;
this._max=null;
this._tickInterval=null;
this._numberTicks=null;
this.__ticks=null;
this._options={};
}Axis.prototype=new $.jqplot.ElemContainer();
Axis.prototype.constructor=Axis;
Axis.prototype.init=function(){this.renderer=new this.renderer();
this.tickOptions.axis=this.name;
if(this.tickOptions.showMark==null){this.tickOptions.showMark=this.showTicks;
}if(this.tickOptions.showMark==null){this.tickOptions.showMark=this.showTickMarks;
}if(this.tickOptions.showLabel==null){this.tickOptions.showLabel=this.showTicks;
}if(this.label==null||this.label==""){this.showLabel=false;
}else{this.labelOptions.label=this.label;
}if(this.showLabel==false){this.labelOptions.show=false;
}if(this.pad==0){this.pad=1;
}if(this.padMax==0){this.padMax=1;
}if(this.padMin==0){this.padMin=1;
}if(this.padMax==null){this.padMax=(this.pad-1)/2+1;
}if(this.padMin==null){this.padMin=(this.pad-1)/2+1;
}this.pad=this.padMax+this.padMin-1;
if(this.min!=null||this.max!=null){this.autoscale=false;
}if(this.syncTicks==null&&this.name.indexOf("y")>-1){this.syncTicks=true;
}else{if(this.syncTicks==null){this.syncTicks=false;
}}this.renderer.init.call(this,this.rendererOptions);
};
Axis.prototype.draw=function(ctx,plot){if(this.__ticks){this.__ticks=null;
}return this.renderer.draw.call(this,ctx,plot);
};
Axis.prototype.set=function(){this.renderer.set.call(this);
};
Axis.prototype.pack=function(pos,offsets){if(this.show){this.renderer.pack.call(this,pos,offsets);
}if(this._min==null){this._min=this.min;
this._max=this.max;
this._tickInterval=this.tickInterval;
this._numberTicks=this.numberTicks;
this.__ticks=this._ticks;
}};
Axis.prototype.reset=function(){this.renderer.reset.call(this);
};
Axis.prototype.resetScale=function(opts){$.extend(true,this,{min:null,max:null,numberTicks:null,tickInterval:null,_ticks:[],ticks:[]},opts);
this.resetDataBounds();
};
Axis.prototype.resetDataBounds=function(){var db=this._dataBounds;
db.min=null;
db.max=null;
var l,s,d;
var doforce=(this.show)?true:false;
for(var i=0;
i<this._series.length;
i++){s=this._series[i];
if(s.show){d=s._plotData;
if(s._type==="line"&&s.renderer.bands.show&&this.name.charAt(0)!=="x"){d=[[0,s.renderer.bands._min],[1,s.renderer.bands._max]];
}var minyidx=1,maxyidx=1;
if(s._type!=null&&s._type=="ohlc"){minyidx=3;
maxyidx=2;
}for(var j=0,l=d.length;
j<l;
j++){if(this.name=="xaxis"||this.name=="x2axis"){if((d[j][0]!=null&&d[j][0]<db.min)||db.min==null){db.min=d[j][0];
}if((d[j][0]!=null&&d[j][0]>db.max)||db.max==null){db.max=d[j][0];
}}else{if((d[j][minyidx]!=null&&d[j][minyidx]<db.min)||db.min==null){db.min=d[j][minyidx];
}if((d[j][maxyidx]!=null&&d[j][maxyidx]>db.max)||db.max==null){db.max=d[j][maxyidx];
}}}if(doforce&&s.renderer.constructor!==$.jqplot.BarRenderer){doforce=false;
}else{if(doforce&&this._options.hasOwnProperty("forceTickAt0")&&this._options.forceTickAt0==false){doforce=false;
}else{if(doforce&&s.renderer.constructor===$.jqplot.BarRenderer){if(s.barDirection=="vertical"&&this.name!="xaxis"&&this.name!="x2axis"){if(this._options.pad!=null||this._options.padMin!=null){doforce=false;
}}else{if(s.barDirection=="horizontal"&&(this.name=="xaxis"||this.name=="x2axis")){if(this._options.pad!=null||this._options.padMin!=null){doforce=false;
}}}}}}}}if(doforce&&this.renderer.constructor===$.jqplot.LinearAxisRenderer&&db.min>=0){this.padMin=1;
this.forceTickAt0=true;
}};
function Legend(options){$.jqplot.ElemContainer.call(this);
this.show=false;
this.location="ne";
this.labels=[];
this.showLabels=true;
this.showSwatches=true;
this.placement="insideGrid";
this.xoffset=0;
this.yoffset=0;
this.border;
this.background;
this.textColor;
this.fontFamily;
this.fontSize;
this.rowSpacing="0.5em";
this.renderer=$.jqplot.TableLegendRenderer;
this.rendererOptions={};
this.preDraw=false;
this.marginTop=null;
this.marginRight=null;
this.marginBottom=null;
this.marginLeft=null;
this.escapeHtml=false;
this._series=[];
$.extend(true,this,options);
}Legend.prototype=new $.jqplot.ElemContainer();
Legend.prototype.constructor=Legend;
Legend.prototype.setOptions=function(options){$.extend(true,this,options);
if(this.placement=="inside"){this.placement="insideGrid";
}if(this.xoffset>0){if(this.placement=="insideGrid"){switch(this.location){case"nw":case"w":case"sw":if(this.marginLeft==null){this.marginLeft=this.xoffset+"px";
}this.marginRight="0px";
break;
case"ne":case"e":case"se":default:if(this.marginRight==null){this.marginRight=this.xoffset+"px";
}this.marginLeft="0px";
break;
}}else{if(this.placement=="outside"){switch(this.location){case"nw":case"w":case"sw":if(this.marginRight==null){this.marginRight=this.xoffset+"px";
}this.marginLeft="0px";
break;
case"ne":case"e":case"se":default:if(this.marginLeft==null){this.marginLeft=this.xoffset+"px";
}this.marginRight="0px";
break;
}}}this.xoffset=0;
}if(this.yoffset>0){if(this.placement=="outside"){switch(this.location){case"sw":case"s":case"se":if(this.marginTop==null){this.marginTop=this.yoffset+"px";
}this.marginBottom="0px";
break;
case"ne":case"n":case"nw":default:if(this.marginBottom==null){this.marginBottom=this.yoffset+"px";
}this.marginTop="0px";
break;
}}else{if(this.placement=="insideGrid"){switch(this.location){case"sw":case"s":case"se":if(this.marginBottom==null){this.marginBottom=this.yoffset+"px";
}this.marginTop="0px";
break;
case"ne":case"n":case"nw":default:if(this.marginTop==null){this.marginTop=this.yoffset+"px";
}this.marginBottom="0px";
break;
}}}this.yoffset=0;
}};
Legend.prototype.init=function(){this.renderer=new this.renderer();
this.renderer.init.call(this,this.rendererOptions);
};
Legend.prototype.draw=function(offsets){for(var i=0;
i<$.jqplot.preDrawLegendHooks.length;
i++){$.jqplot.preDrawLegendHooks[i].call(this,offsets);
}return this.renderer.draw.call(this,offsets);
};
Legend.prototype.pack=function(offsets){this.renderer.pack.call(this,offsets);
};
function Title(text){$.jqplot.ElemContainer.call(this);
this.text=text;
this.show=true;
this.fontFamily;
this.fontSize;
this.textAlign;
this.textColor;
this.renderer=$.jqplot.DivTitleRenderer;
this.rendererOptions={};
this.escapeHtml=false;
}Title.prototype=new $.jqplot.ElemContainer();
Title.prototype.constructor=Title;
Title.prototype.init=function(){this.renderer=new this.renderer();
this.renderer.init.call(this,this.rendererOptions);
};
Title.prototype.draw=function(width){return this.renderer.draw.call(this,width);
};
Title.prototype.pack=function(){this.renderer.pack.call(this);
};
function Series(){$.jqplot.ElemContainer.call(this);
this.show=true;
this.xaxis="xaxis";
this._xaxis;
this.yaxis="yaxis";
this._yaxis;
this.gridBorderWidth=2;
this.renderer=$.jqplot.LineRenderer;
this.rendererOptions={};
this.data=[];
this.gridData=[];
this.label="";
this.showLabel=true;
this.color;
this.negativeColor;
this.lineWidth=2.5;
this.lineJoin="round";
this.lineCap="round";
this.linePattern="solid";
this.shadow=true;
this.shadowAngle=45;
this.shadowOffset=1.25;
this.shadowDepth=3;
this.shadowAlpha="0.1";
this.breakOnNull=false;
this.markerRenderer=$.jqplot.MarkerRenderer;
this.markerOptions={};
this.showLine=true;
this.showMarker=true;
this.index;
this.fill=false;
this.fillColor;
this.fillAlpha;
this.fillAndStroke=false;
this.disableStack=false;
this._stack=false;
this.neighborThreshold=4;
this.fillToZero=false;
this.fillToValue=0;
this.fillAxis="y";
this.useNegativeColors=true;
this._stackData=[];
this._plotData=[];
this._plotValues={x:[],y:[]};
this._intervals={x:{},y:{}};
this._prevPlotData=[];
this._prevGridData=[];
this._stackAxis="y";
this._primaryAxis="_xaxis";
this.canvas=new $.jqplot.GenericCanvas();
this.shadowCanvas=new $.jqplot.GenericCanvas();
this.plugins={};
this._sumy=0;
this._sumx=0;
this._type="";
}Series.prototype=new $.jqplot.ElemContainer();
Series.prototype.constructor=Series;
Series.prototype.init=function(index,gridbw,plot){this.index=index;
this.gridBorderWidth=gridbw;
var d=this.data;
var temp=[],i;
for(i=0;
i<d.length;
i++){if(!this.breakOnNull){if(d[i]==null||d[i][0]==null||d[i][1]==null){continue;
}else{temp.push(d[i]);
}}else{temp.push(d[i]);
}}this.data=temp;
if(!this.color&&this.show){this.color=plot.colorGenerator.get(this.index);
}if(!this.negativeColor&&this.show){this.negativeColor=plot.negativeColorGenerator.get(this.index);
}if(!this.fillColor){this.fillColor=this.color;
}if(this.fillAlpha){var comp=$.jqplot.normalize2rgb(this.fillColor);
var comp=$.jqplot.getColorComponents(comp);
this.fillColor="rgba("+comp[0]+","+comp[1]+","+comp[2]+","+this.fillAlpha+")";
}this.renderer=new this.renderer();
this.renderer.init.call(this,this.rendererOptions,plot);
this.markerRenderer=new this.markerRenderer();
if(!this.markerOptions.color){this.markerOptions.color=this.color;
}if(this.markerOptions.show==null){this.markerOptions.show=this.showMarker;
}this.showMarker=this.markerOptions.show;
this.markerRenderer.init(this.markerOptions);
};
Series.prototype.draw=function(sctx,opts,plot){var options=(opts==undefined)?{}:opts;
sctx=(sctx==undefined)?this.canvas._ctx:sctx;
var j,data,gridData;
for(j=0;
j<$.jqplot.preDrawSeriesHooks.length;
j++){$.jqplot.preDrawSeriesHooks[j].call(this,sctx,options);
}if(this.show){this.renderer.setGridData.call(this,plot);
if(!options.preventJqPlotSeriesDrawTrigger){$(sctx.canvas).trigger("jqplotSeriesDraw",[this.data,this.gridData]);
}data=[];
if(options.data){data=options.data;
}else{if(!this._stack){data=this.data;
}else{data=this._plotData;
}}gridData=options.gridData||this.renderer.makeGridData.call(this,data,plot);
if(this._type==="line"&&this.renderer.smooth&&this.renderer._smoothedData.length){gridData=this.renderer._smoothedData;
}this.renderer.draw.call(this,sctx,gridData,options,plot);
}for(j=0;
j<$.jqplot.postDrawSeriesHooks.length;
j++){$.jqplot.postDrawSeriesHooks[j].call(this,sctx,options,plot);
}sctx=opts=plot=j=data=gridData=null;
};
Series.prototype.drawShadow=function(sctx,opts,plot){var options=(opts==undefined)?{}:opts;
sctx=(sctx==undefined)?this.shadowCanvas._ctx:sctx;
var j,data,gridData;
for(j=0;
j<$.jqplot.preDrawSeriesShadowHooks.length;
j++){$.jqplot.preDrawSeriesShadowHooks[j].call(this,sctx,options);
}if(this.shadow){this.renderer.setGridData.call(this,plot);
data=[];
if(options.data){data=options.data;
}else{if(!this._stack){data=this.data;
}else{data=this._plotData;
}}gridData=options.gridData||this.renderer.makeGridData.call(this,data,plot);
this.renderer.drawShadow.call(this,sctx,gridData,options);
}for(j=0;
j<$.jqplot.postDrawSeriesShadowHooks.length;
j++){$.jqplot.postDrawSeriesShadowHooks[j].call(this,sctx,options);
}sctx=opts=plot=j=data=gridData=null;
};
Series.prototype.toggleDisplay=function(ev){var s,speed;
if(ev.data.series){s=ev.data.series;
}else{s=this;
}if(ev.data.speed){speed=ev.data.speed;
}if(speed){if(s.canvas._elem.is(":hidden")){s.canvas._elem.removeClass("jqplot-series-hidden");
if(s.shadowCanvas._elem){s.shadowCanvas._elem.fadeIn(speed);
}s.canvas._elem.fadeIn(speed);
s.canvas._elem.nextAll(".jqplot-point-label.jqplot-series-"+s.index).fadeIn(speed);
}else{s.canvas._elem.addClass("jqplot-series-hidden");
if(s.shadowCanvas._elem){s.shadowCanvas._elem.fadeOut(speed);
}s.canvas._elem.fadeOut(speed);
s.canvas._elem.nextAll(".jqplot-point-label.jqplot-series-"+s.index).fadeOut(speed);
}}else{if(s.canvas._elem.is(":hidden")){s.canvas._elem.removeClass("jqplot-series-hidden");
if(s.shadowCanvas._elem){s.shadowCanvas._elem.show();
}s.canvas._elem.show();
s.canvas._elem.nextAll(".jqplot-point-label.jqplot-series-"+s.index).show();
}else{s.canvas._elem.addClass("jqplot-series-hidden");
if(s.shadowCanvas._elem){s.shadowCanvas._elem.hide();
}s.canvas._elem.hide();
s.canvas._elem.nextAll(".jqplot-point-label.jqplot-series-"+s.index).hide();
}}};
function Grid(){$.jqplot.ElemContainer.call(this);
this.drawGridlines=true;
this.gridLineColor="#cccccc";
this.gridLineWidth=1;
this.background="#fffdf6";
this.borderColor="#999999";
this.borderWidth=2;
this.drawBorder=true;
this.shadow=true;
this.shadowAngle=45;
this.shadowOffset=1.5;
this.shadowWidth=3;
this.shadowDepth=3;
this.shadowColor=null;
this.shadowAlpha="0.07";
this._left;
this._top;
this._right;
this._bottom;
this._width;
this._height;
this._axes=[];
this.renderer=$.jqplot.CanvasGridRenderer;
this.rendererOptions={};
this._offsets={top:null,bottom:null,left:null,right:null};
}Grid.prototype=new $.jqplot.ElemContainer();
Grid.prototype.constructor=Grid;
Grid.prototype.init=function(){this.renderer=new this.renderer();
this.renderer.init.call(this,this.rendererOptions);
};
Grid.prototype.createElement=function(offsets,plot){this._offsets=offsets;
return this.renderer.createElement.call(this,plot);
};
Grid.prototype.draw=function(){this.renderer.draw.call(this);
};
$.jqplot.GenericCanvas=function(){$.jqplot.ElemContainer.call(this);
this._ctx;
};
$.jqplot.GenericCanvas.prototype=new $.jqplot.ElemContainer();
$.jqplot.GenericCanvas.prototype.constructor=$.jqplot.GenericCanvas;
$.jqplot.GenericCanvas.prototype.createElement=function(offsets,clss,plotDimensions,plot){this._offsets=offsets;
var klass="jqplot";
if(clss!=undefined){klass=clss;
}var elem;
elem=plot.canvasManager.getCanvas();
if(plotDimensions!=null){this._plotDimensions=plotDimensions;
}elem.width=this._plotDimensions.width-this._offsets.left-this._offsets.right;
elem.height=this._plotDimensions.height-this._offsets.top-this._offsets.bottom;
this._elem=$(elem);
this._elem.css({position:"absolute",left:this._offsets.left,top:this._offsets.top});
this._elem.addClass(klass);
elem=plot.canvasManager.initCanvas(elem);
elem=null;
return this._elem;
};
$.jqplot.GenericCanvas.prototype.setContext=function(){this._ctx=this._elem.get(0).getContext("2d");
return this._ctx;
};
$.jqplot.GenericCanvas.prototype.resetCanvas=function(){if(this._elem){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){window.G_vmlCanvasManager.uninitElement(this._elem.get(0));
}this._elem.emptyForce();
}this._ctx=null;
};
$.jqplot.HooksManager=function(){this.hooks=[];
this.args=[];
};
$.jqplot.HooksManager.prototype.addOnce=function(fn,args){args=args||[];
var havehook=false;
for(var i=0,l=this.hooks.length;
i<l;
i++){if(this.hooks[i][0]==fn){havehook=true;
}}if(!havehook){this.hooks.push(fn);
this.args.push(args);
}};
$.jqplot.HooksManager.prototype.add=function(fn,args){args=args||[];
this.hooks.push(fn);
this.args.push(args);
};
$.jqplot.EventListenerManager=function(){this.hooks=[];
};
$.jqplot.EventListenerManager.prototype.addOnce=function(ev,fn){var havehook=false,h,i;
for(var i=0,l=this.hooks.length;
i<l;
i++){h=this.hooks[i];
if(h[0]==ev&&h[1]==fn){havehook=true;
}}if(!havehook){this.hooks.push([ev,fn]);
}};
$.jqplot.EventListenerManager.prototype.add=function(ev,fn){this.hooks.push([ev,fn]);
};
var _axisNames=["yMidAxis","xaxis","yaxis","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis"];
function jqPlot(){this.animate=false;
this.animateReplot=false;
this.axes={xaxis:new Axis("xaxis"),yaxis:new Axis("yaxis"),x2axis:new Axis("x2axis"),y2axis:new Axis("y2axis"),y3axis:new Axis("y3axis"),y4axis:new Axis("y4axis"),y5axis:new Axis("y5axis"),y6axis:new Axis("y6axis"),y7axis:new Axis("y7axis"),y8axis:new Axis("y8axis"),y9axis:new Axis("y9axis"),yMidAxis:new Axis("yMidAxis")};
this.baseCanvas=new $.jqplot.GenericCanvas();
this.captureRightClick=false;
this.data=[];
this.dataRenderer;
this.dataRendererOptions;
this.graphName="graph";
this.performOnPlot=function(){};
this.performAfterPlot=function(){};
this.defaults={axesDefaults:{},axes:{xaxis:{},yaxis:{},x2axis:{},y2axis:{},y3axis:{},y4axis:{},y5axis:{},y6axis:{},y7axis:{},y8axis:{},y9axis:{},yMidAxis:{}},seriesDefaults:{},series:[]};
this.defaultAxisStart=1;
this.drawIfHidden=false;
this.eventCanvas=new $.jqplot.GenericCanvas();
this.fillBetween={series1:null,series2:null,color:null,baseSeries:0,fill:true};
this.fontFamily;
this.fontSize;
this.grid=new Grid();
this.legend=new Legend();
this.negativeSeriesColors=$.jqplot.config.defaultNegativeColors;
this.noDataIndicator={show:false,indicator:"Loading Data...",axes:{xaxis:{min:0,max:10,tickInterval:2,show:true},yaxis:{min:0,max:12,tickInterval:3,show:true}}};
this.options={};
this.previousSeriesStack=[];
this.plugins={};
this.series=[];
this.seriesStack=[];
this.seriesColors=$.jqplot.config.defaultColors;
this.sortData=true;
this.stackSeries=false;
this.syncXTicks=true;
this.syncYTicks=true;
this.target=null;
this.targetId=null;
this.textColor;
this.title=new Title();
this._drawCount=0;
this._sumy=0;
this._sumx=0;
this._stackData=[];
this._plotData=[];
this._width=null;
this._height=null;
this._plotDimensions={height:null,width:null};
this._gridPadding={top:null,right:null,bottom:null,left:null};
this._defaultGridPadding={top:10,right:10,bottom:23,left:10};
this._addDomReference=$.jqplot.config.addDomReference;
this.preInitHooks=new $.jqplot.HooksManager();
this.postInitHooks=new $.jqplot.HooksManager();
this.preParseOptionsHooks=new $.jqplot.HooksManager();
this.postParseOptionsHooks=new $.jqplot.HooksManager();
this.preDrawHooks=new $.jqplot.HooksManager();
this.postDrawHooks=new $.jqplot.HooksManager();
this.preDrawSeriesHooks=new $.jqplot.HooksManager();
this.postDrawSeriesHooks=new $.jqplot.HooksManager();
this.preDrawLegendHooks=new $.jqplot.HooksManager();
this.addLegendRowHooks=new $.jqplot.HooksManager();
this.preSeriesInitHooks=new $.jqplot.HooksManager();
this.postSeriesInitHooks=new $.jqplot.HooksManager();
this.preParseSeriesOptionsHooks=new $.jqplot.HooksManager();
this.postParseSeriesOptionsHooks=new $.jqplot.HooksManager();
this.eventListenerHooks=new $.jqplot.EventListenerManager();
this.preDrawSeriesShadowHooks=new $.jqplot.HooksManager();
this.postDrawSeriesShadowHooks=new $.jqplot.HooksManager();
this.colorGenerator=new $.jqplot.ColorGenerator();
this.negativeColorGenerator=new $.jqplot.ColorGenerator();
this.canvasManager=new $.jqplot.CanvasManager();
this.themeEngine=new $.jqplot.ThemeEngine();
var seriesColorsIndex=0;
this.init=function(target,data,options){options=options||{};
for(var i=0;
i<$.jqplot.preInitHooks.length;
i++){$.jqplot.preInitHooks[i].call(this,target,data,options);
}for(var i=0;
i<this.preInitHooks.hooks.length;
i++){this.preInitHooks.hooks[i].call(this,target,data,options);
}if(options){if(options.graphName){this.graphName=options.graphName;
}if(options.performOnPlot){this.performOnPlot=options.performOnPlot;
}if(options.performAfterPlot){this.performAfterPlot=options.performAfterPlot;
}}this.targetId="#"+target;
this.target=$("#"+target);
if(this._addDomReference){this.target.data("jqplot_plot",this);
}this.target.removeClass("jqplot-error");
if(!this.target.get(0)){throw"No plot target specified";
}if(this.target.css("position")=="static"){this.target.css("position","relative");
}if(!this.target.hasClass("jqplot-target")){this.target.addClass("jqplot-target");
}if(!this.target.height()){var h;
if(options&&options.height){h=parseInt(options.height,10);
}else{if(this.target.attr("data-height")){h=parseInt(this.target.attr("data-height"),10);
}else{h=parseInt($.jqplot.config.defaultHeight,10);
}}this._height=h;
this.target.css("height",h+"px");
}else{this._height=h=this.target.height();
}if(!this.target.width()){var w;
if(options&&options.width){w=parseInt(options.width,10);
}else{if(this.target.attr("data-width")){w=parseInt(this.target.attr("data-width"),10);
}else{w=parseInt($.jqplot.config.defaultWidth,10);
}}this._width=w;
this.target.css("width",w+"px");
}else{this._width=w=this.target.width();
}this._plotDimensions.height=this._height;
this._plotDimensions.width=this._width;
this.grid._plotDimensions=this._plotDimensions;
this.title._plotDimensions=this._plotDimensions;
this.baseCanvas._plotDimensions=this._plotDimensions;
this.eventCanvas._plotDimensions=this._plotDimensions;
this.legend._plotDimensions=this._plotDimensions;
if(this._height<=0||this._width<=0||!this._height||!this._width){throw"Canvas dimension not set";
}if(options.dataRenderer&&jQuery.isFunction(options.dataRenderer)){if(options.dataRendererOptions){this.dataRendererOptions=options.dataRendererOptions;
}this.dataRenderer=options.dataRenderer;
data=this.dataRenderer(data,this,this.dataRendererOptions);
}if(options.noDataIndicator&&jQuery.isPlainObject(options.noDataIndicator)){$.extend(true,this.noDataIndicator,options.noDataIndicator);
}if(data==null||jQuery.isArray(data)==false||data.length==0||jQuery.isArray(data[0])==false){if(this.noDataIndicator.show==false){throw {name:"DataError",message:"No data to plot."};
}else{for(var ax in this.noDataIndicator.axes){for(var prop in this.noDataIndicator.axes[ax]){this.axes[ax][prop]=this.noDataIndicator.axes[ax][prop];
}}this.postDrawHooks.add(function(){var eh=this.eventCanvas.getHeight();
var ew=this.eventCanvas.getWidth();
var temp=$('<div class="jqplot-noData-container" style="position:absolute;"></div>');
this.target.append(temp);
temp.height(eh);
temp.width(ew);
temp.css("top",this.eventCanvas._offsets.top);
temp.css("left",this.eventCanvas._offsets.left);
var temp2=$('<div class="jqplot-noData-contents" style="text-align:center; position:relative; margin-left:auto; margin-right:auto;"></div>');
temp.append(temp2);
temp2.html(this.noDataIndicator.indicator);
var th=temp2.height();
var tw=temp2.width();
temp2.height(th);
temp2.width(tw);
temp2.css("top",(eh-th)/2+"px");
});
}}this.data=data;
this.parseOptions(options);
if(this.textColor){this.target.css("color",this.textColor);
}if(this.fontFamily){this.target.css("font-family",this.fontFamily);
}if(this.fontSize){this.target.css("font-size",this.fontSize);
}this.title.init();
this.legend.init();
this._sumy=0;
this._sumx=0;
for(var i=0;
i<this.series.length;
i++){this.seriesStack.push(i);
this.previousSeriesStack.push(i);
this.series[i].shadowCanvas._plotDimensions=this._plotDimensions;
this.series[i].canvas._plotDimensions=this._plotDimensions;
for(var j=0;
j<$.jqplot.preSeriesInitHooks.length;
j++){$.jqplot.preSeriesInitHooks[j].call(this.series[i],target,data,this.options.seriesDefaults,this.options.series[i],this);
}for(var j=0;
j<this.preSeriesInitHooks.hooks.length;
j++){this.preSeriesInitHooks.hooks[j].call(this.series[i],target,data,this.options.seriesDefaults,this.options.series[i],this);
}this.populatePlotData(this.series[i],i);
this.series[i]._plotDimensions=this._plotDimensions;
this.series[i].init(i,this.grid.borderWidth,this);
for(var j=0;
j<$.jqplot.postSeriesInitHooks.length;
j++){$.jqplot.postSeriesInitHooks[j].call(this.series[i],target,data,this.options.seriesDefaults,this.options.series[i],this);
}for(var j=0;
j<this.postSeriesInitHooks.hooks.length;
j++){this.postSeriesInitHooks.hooks[j].call(this.series[i],target,data,this.options.seriesDefaults,this.options.series[i],this);
}this._sumy+=this.series[i]._sumy;
this._sumx+=this.series[i]._sumx;
}var name;
for(var i=0;
i<12;
i++){name=_axisNames[i];
this.axes[name]._plotDimensions=this._plotDimensions;
this.axes[name].init();
if(this.axes[name].borderColor==null){if(name.charAt(0)!=="x"&&this.axes[name].useSeriesColor===true&&this.axes[name].show){this.axes[name].borderColor=this.axes[name]._series[0].color;
}else{this.axes[name].borderColor=this.grid.borderColor;
}}}if(this.sortData){sortData(this.series);
}this.grid.init();
this.grid._axes=this.axes;
this.legend._series=this.series;
for(var i=0;
i<$.jqplot.postInitHooks.length;
i++){$.jqplot.postInitHooks[i].call(this,target,data,options);
}for(var i=0;
i<this.postInitHooks.hooks.length;
i++){this.postInitHooks.hooks[i].call(this,target,data,options);
}};
this.resetAxesScale=function(axes,options){var opts=options||{};
var ax=axes||this.axes;
if(ax===true){ax=this.axes;
}if(jQuery.isArray(ax)){for(var i=0;
i<ax.length;
i++){this.axes[ax[i]].resetScale(opts[ax[i]]);
}}else{if(typeof(ax)==="object"){for(var name in ax){this.axes[name].resetScale(opts[name]);
}}}};
this.reInitialize=function(){this._height=this.target.height();
this._width=this.target.width();
if(this._height<=0||this._width<=0||!this._height||!this._width){throw"Target dimension not set";
}this._plotDimensions.height=this._height;
this._plotDimensions.width=this._width;
this.grid._plotDimensions=this._plotDimensions;
this.title._plotDimensions=this._plotDimensions;
this.baseCanvas._plotDimensions=this._plotDimensions;
this.eventCanvas._plotDimensions=this._plotDimensions;
this.legend._plotDimensions=this._plotDimensions;
for(var n in this.axes){this.axes[n]._plotWidth=this._width;
this.axes[n]._plotHeight=this._height;
}this.title._plotWidth=this._width;
if(this.textColor){this.target.css("color",this.textColor);
}if(this.fontFamily){this.target.css("font-family",this.fontFamily);
}if(this.fontSize){this.target.css("font-size",this.fontSize);
}this._sumy=0;
this._sumx=0;
for(var i=0;
i<this.series.length;
i++){this.populatePlotData(this.series[i],i);
if(this.series[i]._type==="line"&&this.series[i].renderer.bands.show){this.series[i].renderer.initBands.call(this.series[i],this.series[i].renderer.options,this);
}this.series[i]._plotDimensions=this._plotDimensions;
this.series[i].canvas._plotDimensions=this._plotDimensions;
this._sumy+=this.series[i]._sumy;
this._sumx+=this.series[i]._sumx;
}var name;
for(var j=0;
j<12;
j++){name=_axisNames[j];
var t=this.axes[name]._ticks;
for(var i=0;
i<t.length;
i++){var el=t[i]._elem;
if(el){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){window.G_vmlCanvasManager.uninitElement(el.get(0));
}el.emptyForce();
el=null;
t._elem=null;
}}t=null;
this.axes[name]._plotDimensions=this._plotDimensions;
this.axes[name]._ticks=[];
}if(this.sortData){sortData(this.series);
}this.grid._axes=this.axes;
this.legend._series=this.series;
};
function sortData(series){var d,sd,pd,ppd,ret;
for(var i=0;
i<series.length;
i++){var check;
var bat=[series[i].data,series[i]._stackData,series[i]._plotData,series[i]._prevPlotData];
for(var n=0;
n<4;
n++){check=true;
d=bat[n];
if(series[i]._stackAxis=="x"){for(var j=0;
j<d.length;
j++){if(typeof(d[j][1])!="number"){check=false;
break;
}}if(check){d.sort(function(a,b){return a[1]-b[1];
});
}}else{for(var j=0;
j<d.length;
j++){if(typeof(d[j][0])!="number"){check=false;
break;
}}if(check){d.sort(function(a,b){return a[0]-b[0];
});
}}}}}this.populatePlotData=function(series,index){this._plotData=[];
this._stackData=[];
series._stackData=[];
series._plotData=[];
var plotValues={x:[],y:[]};
if(this.stackSeries&&!series.disableStack){series._stack=true;
var sidx=series._stackAxis=="x"?0:1;
var idx=sidx?0:1;
var temp=$.extend(true,[],series.data);
var plotdata=$.extend(true,[],series.data);
for(var j=0;
j<index;
j++){var cd=this.series[j].data;
for(var k=0;
k<cd.length;
k++){temp[k][0]+=cd[k][0];
temp[k][1]+=cd[k][1];
plotdata[k][sidx]+=cd[k][sidx];
}}for(var i=0;
i<plotdata.length;
i++){plotValues.x.push(plotdata[i][0]);
plotValues.y.push(plotdata[i][1]);
}this._plotData.push(plotdata);
this._stackData.push(temp);
series._stackData=temp;
series._plotData=plotdata;
series._plotValues=plotValues;
}else{for(var i=0;
i<series.data.length;
i++){plotValues.x.push(series.data[i][0]);
plotValues.y.push(series.data[i][1]);
}this._stackData.push(series.data);
this.series[index]._stackData=series.data;
this._plotData.push(series.data);
series._plotData=series.data;
series._plotValues=plotValues;
}if(index>0){series._prevPlotData=this.series[index-1]._plotData;
}series._sumy=0;
series._sumx=0;
for(i=series.data.length-1;
i>-1;
i--){series._sumy+=series.data[i][1];
series._sumx+=series.data[i][0];
}};
this.getNextSeriesColor=(function(t){var idx=0;
var sc=t.seriesColors;
return function(){if(idx<sc.length){return sc[idx++];
}else{idx=0;
return sc[idx++];
}};
})(this);
this.parseOptions=function(options){for(var i=0;
i<this.preParseOptionsHooks.hooks.length;
i++){this.preParseOptionsHooks.hooks[i].call(this,options);
}for(var i=0;
i<$.jqplot.preParseOptionsHooks.length;
i++){$.jqplot.preParseOptionsHooks[i].call(this,options);
}this.options=$.extend(true,{},this.defaults,options);
var opts=this.options;
this.animate=opts.animate;
this.animateReplot=opts.animateReplot;
this.stackSeries=opts.stackSeries;
if($.isPlainObject(opts.fillBetween)){var temp=["series1","series2","color","baseSeries","fill"],tempi;
for(var i=0,l=temp.length;
i<l;
i++){tempi=temp[i];
if(opts.fillBetween[tempi]!=null){this.fillBetween[tempi]=opts.fillBetween[tempi];
}}}if(opts.seriesColors){this.seriesColors=opts.seriesColors;
}if(opts.negativeSeriesColors){this.negativeSeriesColors=opts.negativeSeriesColors;
}if(opts.captureRightClick){this.captureRightClick=opts.captureRightClick;
}this.defaultAxisStart=(options&&options.defaultAxisStart!=null)?options.defaultAxisStart:this.defaultAxisStart;
this.colorGenerator.setColors(this.seriesColors);
this.negativeColorGenerator.setColors(this.negativeSeriesColors);
$.extend(true,this._gridPadding,opts.gridPadding);
this.sortData=(opts.sortData!=null)?opts.sortData:this.sortData;
for(var i=0;
i<12;
i++){var n=_axisNames[i];
var axis=this.axes[n];
axis._options=$.extend(true,{},opts.axesDefaults,opts.axes[n]);
$.extend(true,axis,opts.axesDefaults,opts.axes[n]);
axis._plotWidth=this._width;
axis._plotHeight=this._height;
}var normalizeData=function(data,dir,start){var temp=[];
var i;
dir=dir||"vertical";
if(!jQuery.isArray(data[0])){for(i=0;
i<data.length;
i++){if(dir=="vertical"){temp.push([start+i,data[i]]);
}else{temp.push([data[i],start+i]);
}}}else{$.extend(true,temp,data);
}return temp;
};
var colorIndex=0;
for(var i=0;
i<this.data.length;
i++){var temp=new Series();
for(var j=0;
j<$.jqplot.preParseSeriesOptionsHooks.length;
j++){$.jqplot.preParseSeriesOptionsHooks[j].call(temp,this.options.seriesDefaults,this.options.series[i]);
}for(var j=0;
j<this.preParseSeriesOptionsHooks.hooks.length;
j++){this.preParseSeriesOptionsHooks.hooks[j].call(temp,this.options.seriesDefaults,this.options.series[i]);
}$.extend(true,temp,{seriesColors:this.seriesColors,negativeSeriesColors:this.negativeSeriesColors},this.options.seriesDefaults,this.options.series[i],{rendererOptions:{animation:{show:this.animate}}});
var dir="vertical";
if(temp.renderer===$.jqplot.BarRenderer&&temp.rendererOptions&&temp.rendererOptions.barDirection=="horizontal"&&temp.transposeData===true){dir="horizontal";
}temp.data=normalizeData(this.data[i],dir,this.defaultAxisStart);
switch(temp.xaxis){case"xaxis":temp._xaxis=this.axes.xaxis;
break;
case"x2axis":temp._xaxis=this.axes.x2axis;
break;
default:break;
}temp._yaxis=this.axes[temp.yaxis];
temp._xaxis._series.push(temp);
temp._yaxis._series.push(temp);
if(temp.show){temp._xaxis.show=true;
temp._yaxis.show=true;
}if(!temp.label){temp.label="Series "+(i+1).toString();
}this.series.push(temp);
for(var j=0;
j<$.jqplot.postParseSeriesOptionsHooks.length;
j++){$.jqplot.postParseSeriesOptionsHooks[j].call(this.series[i],this.options.seriesDefaults,this.options.series[i]);
}for(var j=0;
j<this.postParseSeriesOptionsHooks.hooks.length;
j++){this.postParseSeriesOptionsHooks.hooks[j].call(this.series[i],this.options.seriesDefaults,this.options.series[i]);
}}$.extend(true,this.grid,this.options.grid);
for(var i=0;
i<12;
i++){var n=_axisNames[i];
var axis=this.axes[n];
if(axis.borderWidth==null){axis.borderWidth=this.grid.borderWidth;
}}if(typeof this.options.title=="string"){this.title.text=this.options.title;
}else{if(typeof this.options.title=="object"){$.extend(true,this.title,this.options.title);
}}this.title._plotWidth=this._width;
this.legend.setOptions(this.options.legend);
for(var i=0;
i<$.jqplot.postParseOptionsHooks.length;
i++){$.jqplot.postParseOptionsHooks[i].call(this,options);
}for(var i=0;
i<this.postParseOptionsHooks.hooks.length;
i++){this.postParseOptionsHooks.hooks[i].call(this,options);
}};
this.destroy=function(){this.canvasManager.freeAllCanvases();
if(this.eventCanvas&&this.eventCanvas._elem){this.eventCanvas._elem.unbind();
}this.target.empty();
this.target[0].innerHTML="";
};
this.replot=function(options){this.performOnPlot();
var opts=options||{};
var clear=(opts.clear===false)?false:true;
var resetAxes=opts.resetAxes||false;
this.target.trigger("jqplotPreReplot");
if(clear){this.destroy();
}this.reInitialize();
if(resetAxes){this.resetAxesScale(resetAxes,opts.axes);
}this.draw();
this.target.trigger("jqplotPostReplot");
this.performAfterPlot();
};
this.redraw=function(clear){this.performOnPlot();
clear=(clear!=null)?clear:true;
this.target.trigger("jqplotPreRedraw");
if(clear){this.canvasManager.freeAllCanvases();
this.eventCanvas._elem.unbind();
this.target.empty();
}for(var ax in this.axes){this.axes[ax]._ticks=[];
}for(var i=0;
i<this.series.length;
i++){this.populatePlotData(this.series[i],i);
}this._sumy=0;
this._sumx=0;
for(i=0;
i<this.series.length;
i++){this._sumy+=this.series[i]._sumy;
this._sumx+=this.series[i]._sumx;
}this.draw();
this.target.trigger("jqplotPostRedraw");
this.performAfterPlot();
};
this.draw=function(){if(this.drawIfHidden||this.target.is(":visible")){this.target.trigger("jqplotPreDraw");
var i,j,l,tempseries;
for(i=0,l=$.jqplot.preDrawHooks.length;
i<l;
i++){$.jqplot.preDrawHooks[i].call(this);
}for(i=0,l=this.preDrawHooks.length;
i<l;
i++){this.preDrawHooks.hooks[i].apply(this,this.preDrawSeriesHooks.args[i]);
}this.target.append(this.baseCanvas.createElement({left:0,right:0,top:0,bottom:0},"jqplot-base-canvas",null,this));
this.baseCanvas.setContext();
this.target.append(this.title.draw());
this.title.pack({top:0,left:0});
var legendElem=this.legend.draw();
var gridPadding={top:0,left:0,bottom:0,right:0};
if(this.legend.placement=="outsideGrid"){this.target.append(legendElem);
switch(this.legend.location){case"n":gridPadding.top+=this.legend.getHeight();
break;
case"s":gridPadding.bottom+=this.legend.getHeight();
break;
case"ne":case"e":case"se":gridPadding.right+=this.legend.getWidth();
break;
case"nw":case"w":case"sw":gridPadding.left+=this.legend.getWidth();
break;
default:gridPadding.right+=this.legend.getWidth();
break;
}legendElem=legendElem.detach();
}var ax=this.axes;
var name;
for(i=0;
i<12;
i++){name=_axisNames[i];
this.target.append(ax[name].draw(this.baseCanvas._ctx,this));
ax[name].set();
}if(ax.yaxis.show){gridPadding.left+=ax.yaxis.getWidth();
}var ra=["y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis"];
var rapad=[0,0,0,0,0,0,0,0];
var gpr=0;
var n;
for(n=0;
n<8;
n++){if(ax[ra[n]].show){gpr+=ax[ra[n]].getWidth();
rapad[n]=gpr;
}}gridPadding.right+=gpr;
if(ax.x2axis.show){gridPadding.top+=ax.x2axis.getHeight();
}if(this.title.show){gridPadding.top+=this.title.getHeight();
}if(ax.xaxis.show){gridPadding.bottom+=ax.xaxis.getHeight();
}if(this.options.gridDimensions&&$.isPlainObject(this.options.gridDimensions)){var gdw=parseInt(this.options.gridDimensions.width,10)||0;
var gdh=parseInt(this.options.gridDimensions.height,10)||0;
var widthAdj=(this._width-gridPadding.left-gridPadding.right-gdw)/2;
var heightAdj=(this._height-gridPadding.top-gridPadding.bottom-gdh)/2;
if(heightAdj>=0&&widthAdj>=0){gridPadding.top+=heightAdj;
gridPadding.bottom+=heightAdj;
gridPadding.left+=widthAdj;
gridPadding.right+=widthAdj;
}}var arr=["top","bottom","left","right"];
for(var n in arr){if(this._gridPadding[arr[n]]==null&&gridPadding[arr[n]]>0){this._gridPadding[arr[n]]=gridPadding[arr[n]];
}else{if(this._gridPadding[arr[n]]==null){this._gridPadding[arr[n]]=this._defaultGridPadding[arr[n]];
}}}var legendPadding=(this.legend.placement=="outsideGrid")?{top:this.title.getHeight(),left:0,right:0,bottom:0}:this._gridPadding;
ax.xaxis.pack({position:"absolute",bottom:this._gridPadding.bottom-ax.xaxis.getHeight(),left:0,width:this._width},{min:this._gridPadding.left,max:this._width-this._gridPadding.right});
ax.yaxis.pack({position:"absolute",top:0,left:this._gridPadding.left-ax.yaxis.getWidth(),height:this._height},{min:this._height-this._gridPadding.bottom,max:this._gridPadding.top});
ax.x2axis.pack({position:"absolute",top:this._gridPadding.top-ax.x2axis.getHeight(),left:0,width:this._width},{min:this._gridPadding.left,max:this._width-this._gridPadding.right});
for(i=8;
i>0;
i--){ax[ra[i-1]].pack({position:"absolute",top:0,right:this._gridPadding.right-rapad[i-1]},{min:this._height-this._gridPadding.bottom,max:this._gridPadding.top});
}var ltemp=(this._width-this._gridPadding.left-this._gridPadding.right)/2+this._gridPadding.left-ax.yMidAxis.getWidth()/2;
ax.yMidAxis.pack({position:"absolute",top:0,left:ltemp,zIndex:9,textAlign:"center"},{min:this._height-this._gridPadding.bottom,max:this._gridPadding.top});
this.target.append(this.grid.createElement(this._gridPadding,this));
this.grid.draw();
var series=this.series;
var seriesLength=series.length;
for(i=0,l=seriesLength;
i<l;
i++){j=this.seriesStack[i];
this.target.append(series[j].shadowCanvas.createElement(this._gridPadding,"jqplot-series-shadowCanvas",null,this));
series[j].shadowCanvas.setContext();
series[j].shadowCanvas._elem.data("seriesIndex",j);
}for(i=0,l=seriesLength;
i<l;
i++){j=this.seriesStack[i];
this.target.append(series[j].canvas.createElement(this._gridPadding,"jqplot-series-canvas",null,this));
series[j].canvas.setContext();
series[j].canvas._elem.data("seriesIndex",j);
}this.target.append(this.eventCanvas.createElement(this._gridPadding,"jqplot-event-canvas",null,this));
this.eventCanvas.setContext();
this.eventCanvas._ctx.fillStyle="rgba(0,0,0,0)";
this.eventCanvas._ctx.fillRect(0,0,this.eventCanvas._ctx.canvas.width,this.eventCanvas._ctx.canvas.height);
this.bindCustomEvents();
if(this.legend.preDraw){this.eventCanvas._elem.before(legendElem);
this.legend.pack(legendPadding);
if(this.legend._elem){this.drawSeries({legendInfo:{location:this.legend.location,placement:this.legend.placement,width:this.legend.getWidth(),height:this.legend.getHeight(),xoffset:this.legend.xoffset,yoffset:this.legend.yoffset}});
}else{this.drawSeries();
}}else{this.drawSeries();
if(seriesLength){$(series[seriesLength-1].canvas._elem).after(legendElem);
}this.legend.pack(legendPadding);
}for(var i=0,l=$.jqplot.eventListenerHooks.length;
i<l;
i++){this.eventCanvas._elem.bind($.jqplot.eventListenerHooks[i][0],{plot:this},$.jqplot.eventListenerHooks[i][1]);
}for(var i=0,l=this.eventListenerHooks.hooks.length;
i<l;
i++){this.eventCanvas._elem.bind(this.eventListenerHooks.hooks[i][0],{plot:this},this.eventListenerHooks.hooks[i][1]);
}var fb=this.fillBetween;
if(typeof fb.series1=="number"){if(fb.fill&&fb.series1!==fb.series2&&fb.series1<seriesLength&&fb.series2<seriesLength&&series[fb.series1]._type==="line"&&series[fb.series2]._type==="line"){this.doFillBetweenLines();
}}else{if(fb.series1!=null&&fb.series2!=null){var doFb=false;
if(fb.series1.length===fb.series2.length){var tempSeries1=0;
var tempSeries2=0;
for(var cnt=0;
cnt<fb.series1.length;
cnt++){tempSeries1=fb.series1[cnt];
tempSeries2=fb.series2[cnt];
if(tempSeries1!==tempSeries2&&tempSeries1<seriesLength&&tempSeries2<seriesLength&&series[tempSeries1]._type==="line"&&series[tempSeries2]._type==="line"){doFb=true;
}else{doFb=false;
break;
}}}if(fb.fill&&doFb){this.doFillBetweenLines();
}}}for(var i=0,l=$.jqplot.postDrawHooks.length;
i<l;
i++){$.jqplot.postDrawHooks[i].call(this);
}for(var i=0,l=this.postDrawHooks.hooks.length;
i<l;
i++){this.postDrawHooks.hooks[i].apply(this,this.postDrawHooks.args[i]);
}if(this.target.is(":visible")){this._drawCount+=1;
}var temps,tempr,sel,_els;
for(i=0,l=seriesLength;
i<l;
i++){temps=series[i];
tempr=temps.renderer;
sel=".jqplot-point-label.jqplot-series-"+i;
if(tempr.animation&&tempr.animation._supported&&tempr.animation.show&&(this._drawCount<2||this.animateReplot)){_els=this.target.find(sel);
_els.stop(true,true).hide();
temps.canvas._elem.stop(true,true).hide();
temps.shadowCanvas._elem.stop(true,true).hide();
temps.canvas._elem.jqplotEffect("blind",{mode:"show",direction:tempr.animation.direction},tempr.animation.speed);
temps.shadowCanvas._elem.jqplotEffect("blind",{mode:"show",direction:tempr.animation.direction},tempr.animation.speed);
_els.fadeIn(tempr.animation.speed*0.8);
}}_els=null;
this.target.trigger("jqplotPostDraw",[this]);
}};
jqPlot.prototype.doFillBetweenLines=function(){var fb=this.fillBetween;
var series=this.series;
var sid1=fb.series1;
var sid2=fb.series2;
var id1=0,id2=0;
function fill(id1,id2){var series1=series[id1];
var series2=series[id2];
if(series2.renderer.smooth){var tempgd=series2.renderer._smoothedData.slice(0).reverse();
}else{var tempgd=series2.gridData.slice(0).reverse();
}if(series1.renderer.smooth){var gd=series1.renderer._smoothedData.concat(tempgd);
}else{var gd=series1.gridData.concat(tempgd);
}var color=fb.color!==null?fb.color:series[sid1].fillColor;
var baseSeries=fb.baseSeries!==null?fb.baseSeries:id1;
var sr=series[baseSeries].renderer.shapeRenderer;
var opts={fillStyle:color,fill:true,closePath:true};
sr.draw(series1.shadowCanvas._ctx,gd,opts);
}if(typeof sid1=="number"&&typeof sid2=="number"){id1=sid1<sid2?sid1:sid2;
id2=sid2>sid1?sid2:sid1;
fill(id1,id2);
}else{for(var cnt=0;
cnt<sid1.length;
cnt++){id1=sid1[cnt]<sid2[cnt]?sid1[cnt]:sid2[cnt];
id2=sid2[cnt]>sid1[cnt]?sid2[cnt]:sid1[cnt];
fill(id1,id2);
}}};
this.bindCustomEvents=function(){this.eventCanvas._elem.bind("click",{plot:this},this.onClick);
this.eventCanvas._elem.bind("dblclick",{plot:this},this.onDblClick);
this.eventCanvas._elem.bind("mousedown",{plot:this},this.onMouseDown);
this.eventCanvas._elem.bind("mousemove",{plot:this},this.onMouseMove);
this.eventCanvas._elem.bind("mouseenter",{plot:this},this.onMouseEnter);
this.eventCanvas._elem.bind("mouseleave",{plot:this},this.onMouseLeave);
if(this.captureRightClick){this.eventCanvas._elem.bind("mouseup",{plot:this},this.onRightClick);
this.eventCanvas._elem.get(0).oncontextmenu=function(){return false;
};
}else{this.eventCanvas._elem.bind("mouseup",{plot:this},this.onMouseUp);
}};
function getEventPosition(ev){var plot=ev.data.plot;
var go=plot.eventCanvas._elem.offset();
var gridPos={x:ev.pageX-go.left,y:ev.pageY-go.top};
var dataPos={xaxis:null,yaxis:null,x2axis:null,y2axis:null,y3axis:null,y4axis:null,y5axis:null,y6axis:null,y7axis:null,y8axis:null,y9axis:null,yMidAxis:null};
var an=["xaxis","yaxis","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis"];
var ax=plot.axes;
var n,axis;
for(n=11;
n>0;
n--){axis=an[n-1];
if(ax[axis].show){dataPos[axis]=ax[axis].series_p2u(gridPos[axis.charAt(0)]);
}}return{offsets:go,gridPos:gridPos,dataPos:dataPos};
}function checkIntersection(gridpos,plot){var series=plot.series;
var i,j,k,s,r,x,y,theta,sm,sa,minang,maxang;
var d0,d,p,pp,points,bw;
var threshold,t;
for(k=plot.seriesStack.length-1;
k>=0;
k--){i=plot.seriesStack[k];
s=series[i];
switch(s.renderer.constructor){case $.jqplot.BarRenderer:case $.jqplot.PyramidRenderer:x=gridpos.x;
y=gridpos.y;
for(j=0;
j<s._barPoints.length;
j++){points=s._barPoints[j];
p=s.gridData[j];
if(x>points[0][0]&&x<points[2][0]&&y>points[2][1]&&y<points[0][1]){return{seriesIndex:s.index,pointIndex:j,gridData:p,data:s.data[j],points:s._barPoints[j]};
}}break;
case $.jqplot.DonutRenderer:sa=s.startAngle/180*Math.PI;
x=gridpos.x-s._center[0];
y=gridpos.y-s._center[1];
r=Math.sqrt(Math.pow(x,2)+Math.pow(y,2));
if(x>0&&-y>=0){theta=2*Math.PI-Math.atan(-y/x);
}else{if(x>0&&-y<0){theta=-Math.atan(-y/x);
}else{if(x<0){theta=Math.PI-Math.atan(-y/x);
}else{if(x==0&&-y>0){theta=3*Math.PI/2;
}else{if(x==0&&-y<0){theta=Math.PI/2;
}else{if(x==0&&y==0){theta=0;
}}}}}}if(sa){theta-=sa;
if(theta<0){theta+=2*Math.PI;
}else{if(theta>2*Math.PI){theta-=2*Math.PI;
}}}sm=s.sliceMargin/180*Math.PI;
if(r<s._radius&&r>s._innerRadius){for(j=0;
j<s.gridData.length;
j++){minang=(j>0)?s.gridData[j-1][1]+sm:sm;
maxang=s.gridData[j][1];
if(theta>minang&&theta<maxang){return{seriesIndex:s.index,pointIndex:j,gridData:s.gridData[j],data:s.data[j]};
}}}break;
case $.jqplot.PieRenderer:sa=s.startAngle/180*Math.PI;
x=gridpos.x-s._center[0];
y=gridpos.y-s._center[1];
r=Math.sqrt(Math.pow(x,2)+Math.pow(y,2));
if(x>0&&-y>=0){theta=2*Math.PI-Math.atan(-y/x);
}else{if(x>0&&-y<0){theta=-Math.atan(-y/x);
}else{if(x<0){theta=Math.PI-Math.atan(-y/x);
}else{if(x==0&&-y>0){theta=3*Math.PI/2;
}else{if(x==0&&-y<0){theta=Math.PI/2;
}else{if(x==0&&y==0){theta=0;
}}}}}}if(sa){theta-=sa;
if(theta<0){theta+=2*Math.PI;
}else{if(theta>2*Math.PI){theta-=2*Math.PI;
}}}sm=s.sliceMargin/180*Math.PI;
if(r<s._radius){for(j=0;
j<s.gridData.length;
j++){minang=(j>0)?s.gridData[j-1][1]+sm:sm;
maxang=s.gridData[j][1];
if(theta>minang&&theta<maxang){return{seriesIndex:s.index,pointIndex:j,gridData:s.gridData[j],data:s.data[j]};
}}}break;
case $.jqplot.BubbleRenderer:x=gridpos.x;
y=gridpos.y;
var ret=null;
if(s.show){for(var j=0;
j<s.gridData.length;
j++){p=s.gridData[j];
d=Math.sqrt((x-p[0])*(x-p[0])+(y-p[1])*(y-p[1]));
if(d<=p[2]&&(d<=d0||d0==null)){d0=d;
ret={seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}if(ret!=null){return ret;
}}break;
case $.jqplot.FunnelRenderer:x=gridpos.x;
y=gridpos.y;
var v=s._vertices,vfirst=v[0],vlast=v[v.length-1],lex,rex,cv;
function findedge(l,p1,p2){var m=(p1[1]-p2[1])/(p1[0]-p2[0]);
var b=p1[1]-m*p1[0];
var y=l+p1[1];
return[(y-b)/m,y];
}lex=findedge(y,vfirst[0],vlast[3]);
rex=findedge(y,vfirst[1],vlast[2]);
for(j=0;
j<v.length;
j++){cv=v[j];
if(y>=cv[0][1]&&y<=cv[3][1]&&x>=lex[0]&&x<=rex[0]){return{seriesIndex:s.index,pointIndex:j,gridData:null,data:s.data[j]};
}}break;
case $.jqplot.LineRenderer:x=gridpos.x;
y=gridpos.y;
r=s.renderer;
if(s.show){if((s.fill||(s.renderer.bands.show&&s.renderer.bands.fill))&&(!plot.plugins.highlighter||!plot.plugins.highlighter.show)){var inside=false;
if(x>s._boundingBox[0][0]&&x<s._boundingBox[1][0]&&y>s._boundingBox[1][1]&&y<s._boundingBox[0][1]){var numPoints=s._areaPoints.length;
var ii;
var j=numPoints-1;
for(var ii=0;
ii<numPoints;
ii++){var vertex1=[s._areaPoints[ii][0],s._areaPoints[ii][1]];
var vertex2=[s._areaPoints[j][0],s._areaPoints[j][1]];
if(vertex1[1]<y&&vertex2[1]>=y||vertex2[1]<y&&vertex1[1]>=y){if(vertex1[0]+(y-vertex1[1])/(vertex2[1]-vertex1[1])*(vertex2[0]-vertex1[0])<x){inside=!inside;
}}j=ii;
}}if(inside){return{seriesIndex:i,pointIndex:null,gridData:s.gridData,data:s.data,points:s._areaPoints};
}break;
}else{t=s.markerRenderer.size/2+s.neighborThreshold;
threshold=(t>0)?t:0;
for(var j=0;
j<s.gridData.length;
j++){p=s.gridData[j];
if(r.constructor==$.jqplot.OHLCRenderer){if(r.candleStick){var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._bodyWidth/2&&x<=p[0]+r._bodyWidth/2&&y>=yp(s.data[j][2])&&y<=yp(s.data[j][3])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}else{if(!r.hlc){var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._tickLength&&x<=p[0]+r._tickLength&&y>=yp(s.data[j][2])&&y<=yp(s.data[j][3])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}else{var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._tickLength&&x<=p[0]+r._tickLength&&y>=yp(s.data[j][1])&&y<=yp(s.data[j][2])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}}}else{if(p[0]!=null&&p[1]!=null){d=Math.sqrt((x-p[0])*(x-p[0])+(y-p[1])*(y-p[1]));
if(d<=threshold&&(d<=d0||d0==null)){d0=d;
return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}}}}}break;
default:x=gridpos.x;
y=gridpos.y;
r=s.renderer;
if(s.show){t=s.markerRenderer.size/2+s.neighborThreshold;
threshold=(t>0)?t:0;
for(var j=0;
j<s.gridData.length;
j++){p=s.gridData[j];
if(r.constructor==$.jqplot.OHLCRenderer){if(r.candleStick){var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._bodyWidth/2&&x<=p[0]+r._bodyWidth/2&&y>=yp(s.data[j][2])&&y<=yp(s.data[j][3])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}else{if(!r.hlc){var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._tickLength&&x<=p[0]+r._tickLength&&y>=yp(s.data[j][2])&&y<=yp(s.data[j][3])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}else{var yp=s._yaxis.series_u2p;
if(x>=p[0]-r._tickLength&&x<=p[0]+r._tickLength&&y>=yp(s.data[j][1])&&y<=yp(s.data[j][2])){return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}}}else{d=Math.sqrt((x-p[0])*(x-p[0])+(y-p[1])*(y-p[1]));
if(d<=threshold&&(d<=d0||d0==null)){d0=d;
return{seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]};
}}}}break;
}}return null;
}this.onClick=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var neighbor=checkIntersection(positions.gridPos,p);
var evt=jQuery.Event("jqplotClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
};
this.onDblClick=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var neighbor=checkIntersection(positions.gridPos,p);
var evt=jQuery.Event("jqplotDblClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
};
this.onMouseDown=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var neighbor=checkIntersection(positions.gridPos,p);
var evt=jQuery.Event("jqplotMouseDown");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
};
this.onMouseUp=function(ev){var positions=getEventPosition(ev);
var evt=jQuery.Event("jqplotMouseUp");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,null,ev.data.plot]);
};
this.onRightClick=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var neighbor=checkIntersection(positions.gridPos,p);
if(p.captureRightClick){if(ev.which==3){var evt=jQuery.Event("jqplotRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
}else{var evt=jQuery.Event("jqplotMouseUp");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
}}};
this.onMouseMove=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var neighbor=checkIntersection(positions.gridPos,p);
var evt=jQuery.Event("jqplotMouseMove");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,neighbor,p]);
};
this.onMouseEnter=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var evt=jQuery.Event("jqplotMouseEnter");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
evt.relatedTarget=ev.relatedTarget;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,null,p]);
};
this.onMouseLeave=function(ev){var positions=getEventPosition(ev);
var p=ev.data.plot;
var evt=jQuery.Event("jqplotMouseLeave");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
evt.relatedTarget=ev.relatedTarget;
$(this).trigger(evt,[positions.gridPos,positions.dataPos,null,p]);
};
this.drawSeries=function(options,idx){var i,series,ctx;
idx=(typeof(options)==="number"&&idx==null)?options:idx;
options=(typeof(options)==="object")?options:{};
if(idx!=undefined){series=this.series[idx];
ctx=series.shadowCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
series.drawShadow(ctx,options,this);
ctx=series.canvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
series.draw(ctx,options,this);
if(series.renderer.constructor==$.jqplot.BezierCurveRenderer){if(idx<this.series.length-1){this.drawSeries(idx+1);
}}}else{for(i=0;
i<this.series.length;
i++){series=this.series[i];
ctx=series.shadowCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
series.drawShadow(ctx,options,this);
ctx=series.canvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
series.draw(ctx,options,this);
}}options=idx=i=series=ctx=null;
};
this.moveSeriesToFront=function(idx){idx=parseInt(idx,10);
var stackIndex=$.inArray(idx,this.seriesStack);
if(stackIndex==-1){return;
}if(stackIndex==this.seriesStack.length-1){this.previousSeriesStack=this.seriesStack.slice(0);
return;
}var opidx=this.seriesStack[this.seriesStack.length-1];
var serelem=this.series[idx].canvas._elem.detach();
var shadelem=this.series[idx].shadowCanvas._elem.detach();
this.series[opidx].shadowCanvas._elem.after(shadelem);
this.series[opidx].canvas._elem.after(serelem);
this.previousSeriesStack=this.seriesStack.slice(0);
this.seriesStack.splice(stackIndex,1);
this.seriesStack.push(idx);
};
this.moveSeriesToBack=function(idx){idx=parseInt(idx,10);
var stackIndex=$.inArray(idx,this.seriesStack);
if(stackIndex==0||stackIndex==-1){return;
}var opidx=this.seriesStack[0];
var serelem=this.series[idx].canvas._elem.detach();
var shadelem=this.series[idx].shadowCanvas._elem.detach();
this.series[opidx].shadowCanvas._elem.before(shadelem);
this.series[opidx].canvas._elem.before(serelem);
this.previousSeriesStack=this.seriesStack.slice(0);
this.seriesStack.splice(stackIndex,1);
this.seriesStack.unshift(idx);
};
this.restorePreviousSeriesOrder=function(){var i,j,serelem,shadelem,temp,move,keep;
if(this.seriesStack==this.previousSeriesStack){return;
}for(i=1;
i<this.previousSeriesStack.length;
i++){move=this.previousSeriesStack[i];
keep=this.previousSeriesStack[i-1];
serelem=this.series[move].canvas._elem.detach();
shadelem=this.series[move].shadowCanvas._elem.detach();
this.series[keep].shadowCanvas._elem.after(shadelem);
this.series[keep].canvas._elem.after(serelem);
}temp=this.seriesStack.slice(0);
this.seriesStack=this.previousSeriesStack.slice(0);
this.previousSeriesStack=temp;
};
this.restoreOriginalSeriesOrder=function(){var i,j,arr=[],serelem,shadelem;
for(i=0;
i<this.series.length;
i++){arr.push(i);
}if(this.seriesStack==arr){return;
}this.previousSeriesStack=this.seriesStack.slice(0);
this.seriesStack=arr;
for(i=1;
i<this.seriesStack.length;
i++){serelem=this.series[i].canvas._elem.detach();
shadelem=this.series[i].shadowCanvas._elem.detach();
this.series[i-1].shadowCanvas._elem.after(shadelem);
this.series[i-1].canvas._elem.after(serelem);
}};
this.activateTheme=function(name){this.themeEngine.activate(this,name);
};
}$.jqplot.computeHighlightColors=function(colors){var ret;
if(jQuery.isArray(colors)){ret=[];
for(var i=0;
i<colors.length;
i++){var rgba=$.jqplot.getColorComponents(colors[i]);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>660)?newrgb[j]*0.85:0.73*newrgb[j]+90;
newrgb[j]=parseInt(newrgb[j],10);
(newrgb[j]>255)?255:newrgb[j];
}newrgb[3]=0.3+0.35*rgba[3];
ret.push("rgba("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+","+newrgb[3]+")");
}}else{var rgba=$.jqplot.getColorComponents(colors);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>660)?newrgb[j]*0.85:0.73*newrgb[j]+90;
newrgb[j]=parseInt(newrgb[j],10);
(newrgb[j]>255)?255:newrgb[j];
}newrgb[3]=0.3+0.35*rgba[3];
ret="rgba("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+","+newrgb[3]+")";
}return ret;
};
$.jqplot.ColorGenerator=function(colors){colors=colors||$.jqplot.config.defaultColors;
var idx=0;
this.next=function(){if(idx<colors.length){return colors[idx++];
}else{idx=0;
return colors[idx++];
}};
this.previous=function(){if(idx>0){return colors[idx--];
}else{idx=colors.length-1;
return colors[idx];
}};
this.get=function(i){var idx=i-colors.length*Math.floor(i/colors.length);
return colors[idx];
};
this.setColors=function(c){colors=c;
};
this.reset=function(){idx=0;
};
this.getIndex=function(){return idx;
};
this.setIndex=function(index){idx=index;
};
};
$.jqplot.hex2rgb=function(h,a){h=h.replace("#","");
if(h.length==3){h=h.charAt(0)+h.charAt(0)+h.charAt(1)+h.charAt(1)+h.charAt(2)+h.charAt(2);
}var rgb;
rgb="rgba("+parseInt(h.slice(0,2),16)+", "+parseInt(h.slice(2,4),16)+", "+parseInt(h.slice(4,6),16);
if(a){rgb+=", "+a;
}rgb+=")";
return rgb;
};
$.jqplot.rgb2hex=function(s){var pat=/rgba?\( *([0-9]{1,3}\.?[0-9]*%?) *, *([0-9]{1,3}\.?[0-9]*%?) *, *([0-9]{1,3}\.?[0-9]*%?) *(?:, *[0-9.]*)?\)/;
var m=s.match(pat);
var h="#";
for(var i=1;
i<4;
i++){var temp;
if(m[i].search(/%/)!=-1){temp=parseInt(255*m[i]/100,10).toString(16);
if(temp.length==1){temp="0"+temp;
}}else{temp=parseInt(m[i],10).toString(16);
if(temp.length==1){temp="0"+temp;
}}h+=temp;
}return h;
};
$.jqplot.normalize2rgb=function(s,a){if(s.search(/^ *rgba?\(/)!=-1){return s;
}else{if(s.search(/^ *#?[0-9a-fA-F]?[0-9a-fA-F]/)!=-1){return $.jqplot.hex2rgb(s,a);
}else{throw"invalid color spec";
}}};
$.jqplot.getColorComponents=function(s){s=$.jqplot.colorKeywordMap[s]||s;
var rgb=$.jqplot.normalize2rgb(s);
var pat=/rgba?\( *([0-9]{1,3}\.?[0-9]*%?) *, *([0-9]{1,3}\.?[0-9]*%?) *, *([0-9]{1,3}\.?[0-9]*%?) *,? *([0-9.]* *)?\)/;
var m=rgb.match(pat);
var ret=[];
for(var i=1;
i<4;
i++){if(m[i].search(/%/)!=-1){ret[i-1]=parseInt(255*m[i]/100,10);
}else{ret[i-1]=parseInt(m[i],10);
}}ret[3]=parseFloat(m[4])?parseFloat(m[4]):1;
return ret;
};
$.jqplot.colorKeywordMap={aliceblue:"rgb(240, 248, 255)",antiquewhite:"rgb(250, 235, 215)",aqua:"rgb( 0, 255, 255)",aquamarine:"rgb(127, 255, 212)",azure:"rgb(240, 255, 255)",beige:"rgb(245, 245, 220)",bisque:"rgb(255, 228, 196)",black:"rgb( 0, 0, 0)",blanchedalmond:"rgb(255, 235, 205)",blue:"rgb( 0, 0, 255)",blueviolet:"rgb(138, 43, 226)",brown:"rgb(165, 42, 42)",burlywood:"rgb(222, 184, 135)",cadetblue:"rgb( 95, 158, 160)",chartreuse:"rgb(127, 255, 0)",chocolate:"rgb(210, 105, 30)",coral:"rgb(255, 127, 80)",cornflowerblue:"rgb(100, 149, 237)",cornsilk:"rgb(255, 248, 220)",crimson:"rgb(220, 20, 60)",cyan:"rgb( 0, 255, 255)",darkblue:"rgb( 0, 0, 139)",darkcyan:"rgb( 0, 139, 139)",darkgoldenrod:"rgb(184, 134, 11)",darkgray:"rgb(169, 169, 169)",darkgreen:"rgb( 0, 100, 0)",darkgrey:"rgb(169, 169, 169)",darkkhaki:"rgb(189, 183, 107)",darkmagenta:"rgb(139, 0, 139)",darkolivegreen:"rgb( 85, 107, 47)",darkorange:"rgb(255, 140, 0)",darkorchid:"rgb(153, 50, 204)",darkred:"rgb(139, 0, 0)",darksalmon:"rgb(233, 150, 122)",darkseagreen:"rgb(143, 188, 143)",darkslateblue:"rgb( 72, 61, 139)",darkslategray:"rgb( 47, 79, 79)",darkslategrey:"rgb( 47, 79, 79)",darkturquoise:"rgb( 0, 206, 209)",darkviolet:"rgb(148, 0, 211)",deeppink:"rgb(255, 20, 147)",deepskyblue:"rgb( 0, 191, 255)",dimgray:"rgb(105, 105, 105)",dimgrey:"rgb(105, 105, 105)",dodgerblue:"rgb( 30, 144, 255)",firebrick:"rgb(178, 34, 34)",floralwhite:"rgb(255, 250, 240)",forestgreen:"rgb( 34, 139, 34)",fuchsia:"rgb(255, 0, 255)",gainsboro:"rgb(220, 220, 220)",ghostwhite:"rgb(248, 248, 255)",gold:"rgb(255, 215, 0)",goldenrod:"rgb(218, 165, 32)",gray:"rgb(128, 128, 128)",grey:"rgb(128, 128, 128)",green:"rgb( 0, 128, 0)",greenyellow:"rgb(173, 255, 47)",honeydew:"rgb(240, 255, 240)",hotpink:"rgb(255, 105, 180)",indianred:"rgb(205, 92, 92)",indigo:"rgb( 75, 0, 130)",ivory:"rgb(255, 255, 240)",khaki:"rgb(240, 230, 140)",lavender:"rgb(230, 230, 250)",lavenderblush:"rgb(255, 240, 245)",lawngreen:"rgb(124, 252, 0)",lemonchiffon:"rgb(255, 250, 205)",lightblue:"rgb(173, 216, 230)",lightcoral:"rgb(240, 128, 128)",lightcyan:"rgb(224, 255, 255)",lightgoldenrodyellow:"rgb(250, 250, 210)",lightgray:"rgb(211, 211, 211)",lightgreen:"rgb(144, 238, 144)",lightgrey:"rgb(211, 211, 211)",lightpink:"rgb(255, 182, 193)",lightsalmon:"rgb(255, 160, 122)",lightseagreen:"rgb( 32, 178, 170)",lightskyblue:"rgb(135, 206, 250)",lightslategray:"rgb(119, 136, 153)",lightslategrey:"rgb(119, 136, 153)",lightsteelblue:"rgb(176, 196, 222)",lightyellow:"rgb(255, 255, 224)",lime:"rgb( 0, 255, 0)",limegreen:"rgb( 50, 205, 50)",linen:"rgb(250, 240, 230)",magenta:"rgb(255, 0, 255)",maroon:"rgb(128, 0, 0)",mediumaquamarine:"rgb(102, 205, 170)",mediumblue:"rgb( 0, 0, 205)",mediumorchid:"rgb(186, 85, 211)",mediumpurple:"rgb(147, 112, 219)",mediumseagreen:"rgb( 60, 179, 113)",mediumslateblue:"rgb(123, 104, 238)",mediumspringgreen:"rgb( 0, 250, 154)",mediumturquoise:"rgb( 72, 209, 204)",mediumvioletred:"rgb(199, 21, 133)",midnightblue:"rgb( 25, 25, 112)",mintcream:"rgb(245, 255, 250)",mistyrose:"rgb(255, 228, 225)",moccasin:"rgb(255, 228, 181)",navajowhite:"rgb(255, 222, 173)",navy:"rgb( 0, 0, 128)",oldlace:"rgb(253, 245, 230)",olive:"rgb(128, 128, 0)",olivedrab:"rgb(107, 142, 35)",orange:"rgb(255, 165, 0)",orangered:"rgb(255, 69, 0)",orchid:"rgb(218, 112, 214)",palegoldenrod:"rgb(238, 232, 170)",palegreen:"rgb(152, 251, 152)",paleturquoise:"rgb(175, 238, 238)",palevioletred:"rgb(219, 112, 147)",papayawhip:"rgb(255, 239, 213)",peachpuff:"rgb(255, 218, 185)",peru:"rgb(205, 133, 63)",pink:"rgb(255, 192, 203)",plum:"rgb(221, 160, 221)",powderblue:"rgb(176, 224, 230)",purple:"rgb(128, 0, 128)",red:"rgb(255, 0, 0)",rosybrown:"rgb(188, 143, 143)",royalblue:"rgb( 65, 105, 225)",saddlebrown:"rgb(139, 69, 19)",salmon:"rgb(250, 128, 114)",sandybrown:"rgb(244, 164, 96)",seagreen:"rgb( 46, 139, 87)",seashell:"rgb(255, 245, 238)",sienna:"rgb(160, 82, 45)",silver:"rgb(192, 192, 192)",skyblue:"rgb(135, 206, 235)",slateblue:"rgb(106, 90, 205)",slategray:"rgb(112, 128, 144)",slategrey:"rgb(112, 128, 144)",snow:"rgb(255, 250, 250)",springgreen:"rgb( 0, 255, 127)",steelblue:"rgb( 70, 130, 180)",tan:"rgb(210, 180, 140)",teal:"rgb( 0, 128, 128)",thistle:"rgb(216, 191, 216)",tomato:"rgb(255, 99, 71)",turquoise:"rgb( 64, 224, 208)",violet:"rgb(238, 130, 238)",wheat:"rgb(245, 222, 179)",white:"rgb(255, 255, 255)",whitesmoke:"rgb(245, 245, 245)",yellow:"rgb(255, 255, 0)",yellowgreen:"rgb(154, 205, 50)"};
$.jqplot.AxisLabelRenderer=function(options){$.jqplot.ElemContainer.call(this);
this.axis;
this.show=true;
this.label="";
this.fontFamily=null;
this.fontSize=null;
this.textColor=null;
this._elem;
this.escapeHTML=false;
$.extend(true,this,options);
};
$.jqplot.AxisLabelRenderer.prototype=new $.jqplot.ElemContainer();
$.jqplot.AxisLabelRenderer.prototype.constructor=$.jqplot.AxisLabelRenderer;
$.jqplot.AxisLabelRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.AxisLabelRenderer.prototype.draw=function(ctx,plot){if(this._elem){this._elem.emptyForce();
this._elem=null;
}this._elem=$('<div style="position:absolute;" class="jqplot-'+this.axis+'-label"></div>');
if(Number(this.label)){this._elem.css("white-space","nowrap");
}if(!this.escapeHTML){this._elem.html(this.label);
}else{this._elem.text(this.label);
}if(this.fontFamily){this._elem.css("font-family",this.fontFamily);
}if(this.fontSize){this._elem.css("font-size",this.fontSize);
}if(this.textColor){this._elem.css("color",this.textColor);
}return this._elem;
};
$.jqplot.AxisLabelRenderer.prototype.pack=function(){};
$.jqplot.AxisTickRenderer=function(options){$.jqplot.ElemContainer.call(this);
this.mark="outside";
this.axis;
this.showMark=true;
this.showGridline=true;
this.isMinorTick=false;
this.size=4;
this.markSize=6;
this.show=true;
this.showLabel=true;
this.label=null;
this.value=null;
this._styles={};
this.formatter=$.jqplot.DefaultTickFormatter;
this.prefix="";
this.formatString="";
this.fontFamily;
this.fontSize;
this.textColor;
this.escapeHTML=false;
this._elem;
this._breakTick=false;
$.extend(true,this,options);
};
$.jqplot.AxisTickRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.AxisTickRenderer.prototype=new $.jqplot.ElemContainer();
$.jqplot.AxisTickRenderer.prototype.constructor=$.jqplot.AxisTickRenderer;
$.jqplot.AxisTickRenderer.prototype.setTick=function(value,axisName,isMinor){this.value=value;
this.axis=axisName;
if(isMinor){this.isMinorTick=true;
}return this;
};
$.jqplot.AxisTickRenderer.prototype.draw=function(){if(this.label===null){this.label=this.prefix+this.formatter(this.formatString,this.value);
}var style={position:"absolute"};
if(Number(this.label)){style.whitSpace="nowrap";
}if(this._elem){this._elem.emptyForce();
this._elem=null;
}this._elem=$(document.createElement("div"));
this._elem.addClass("jqplot-"+this.axis+"-tick");
if(!this.escapeHTML){this._elem.html(this.label);
}else{this._elem.text(this.label);
}this._elem.css(style);
for(var s in this._styles){this._elem.css(s,this._styles[s]);
}if(this.fontFamily){this._elem.css("font-family",this.fontFamily);
}if(this.fontSize){this._elem.css("font-size",this.fontSize);
}if(this.textColor){this._elem.css("color",this.textColor);
}if(this._breakTick){this._elem.addClass("jqplot-breakTick");
}return this._elem;
};
$.jqplot.DefaultTickFormatter=function(format,val){if(typeof val=="number"){if(!format){format=$.jqplot.config.defaultTickFormatString;
}return $.jqplot.sprintf(format,val);
}else{return String(val);
}};
$.jqplot.AxisTickRenderer.prototype.pack=function(){};
$.jqplot.CanvasGridRenderer=function(){this.shadowRenderer=new $.jqplot.ShadowRenderer();
};
$.jqplot.CanvasGridRenderer.prototype.init=function(options){this._ctx;
$.extend(true,this,options);
var sopts={lineJoin:"miter",lineCap:"round",fill:false,isarc:false,angle:this.shadowAngle,offset:this.shadowOffset,alpha:this.shadowAlpha,depth:this.shadowDepth,lineWidth:this.shadowWidth,closePath:false,strokeStyle:this.shadowColor};
this.renderer.shadowRenderer.init(sopts);
};
$.jqplot.CanvasGridRenderer.prototype.createElement=function(plot){var elem;
if(this._elem){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){elem=this._elem.get(0);
window.G_vmlCanvasManager.uninitElement(elem);
elem=null;
}this._elem.emptyForce();
this._elem=null;
}elem=plot.canvasManager.getCanvas();
var w=this._plotDimensions.width;
var h=this._plotDimensions.height;
elem.width=w;
elem.height=h;
this._elem=$(elem);
this._elem.addClass("jqplot-grid-canvas");
this._elem.css({position:"absolute",left:0,top:0});
elem=plot.canvasManager.initCanvas(elem);
this._top=this._offsets.top;
this._bottom=h-this._offsets.bottom;
this._left=this._offsets.left;
this._right=w-this._offsets.right;
this._width=this._right-this._left;
this._height=this._bottom-this._top;
elem=null;
return this._elem;
};
$.jqplot.CanvasGridRenderer.prototype.draw=function(){this._ctx=this._elem.get(0).getContext("2d");
var ctx=this._ctx;
var axes=this._axes;
ctx.save();
ctx.clearRect(0,0,this._plotDimensions.width,this._plotDimensions.height);
ctx.fillStyle=this.backgroundColor||this.background;
ctx.fillRect(this._left,this._top,this._width,this._height);
ctx.save();
ctx.lineJoin="miter";
ctx.lineCap="butt";
ctx.lineWidth=this.gridLineWidth;
ctx.strokeStyle=this.gridLineColor;
var b,e,s,m;
var ax=["xaxis","yaxis","x2axis","y2axis"];
for(var i=4;
i>0;
i--){var name=ax[i-1];
var axis=axes[name];
var ticks=axis._ticks;
var numticks=ticks.length;
if(axis.show){if(axis.drawBaseline){var bopts={};
if(axis.baselineWidth!==null){bopts.lineWidth=axis.baselineWidth;
}if(axis.baselineColor!==null){bopts.strokeStyle=axis.baselineColor;
}switch(name){case"xaxis":drawLine(this._left,this._bottom,this._right,this._bottom,bopts);
break;
case"yaxis":drawLine(this._left,this._bottom,this._left,this._top,bopts);
break;
case"x2axis":drawLine(this._left,this._bottom,this._right,this._bottom,bopts);
break;
case"y2axis":drawLine(this._right,this._bottom,this._right,this._top,bopts);
break;
}}for(var j=numticks;
j>0;
j--){var t=ticks[j-1];
if(t.show){var pos=Math.round(axis.u2p(t.value))+0.5;
switch(name){case"xaxis":if(t.showGridline&&this.drawGridlines&&((!t.isMinorTick&&axis.drawMajorGridlines)||(t.isMinorTick&&axis.drawMinorGridlines))){drawLine(pos,this._top,pos,this._bottom);
}if(t.showMark&&t.mark&&((!t.isMinorTick&&axis.drawMajorTickMarks)||(t.isMinorTick&&axis.drawMinorTickMarks))){s=t.markSize;
m=t.mark;
var pos=Math.round(axis.u2p(t.value))+0.5;
switch(m){case"outside":b=this._bottom;
e=this._bottom+s;
break;
case"inside":b=this._bottom-s;
e=this._bottom;
break;
case"cross":b=this._bottom-s;
e=this._bottom+s;
break;
default:b=this._bottom;
e=this._bottom+s;
break;
}if(this.shadow){this.renderer.shadowRenderer.draw(ctx,[[pos,b],[pos,e]],{lineCap:"butt",lineWidth:this.gridLineWidth,offset:this.gridLineWidth*0.75,depth:2,fill:false,closePath:false});
}drawLine(pos,b,pos,e);
}break;
case"yaxis":if(t.showGridline&&this.drawGridlines&&((!t.isMinorTick&&axis.drawMajorGridlines)||(t.isMinorTick&&axis.drawMinorGridlines))){drawLine(this._right,pos,this._left,pos);
}if(t.showMark&&t.mark&&((!t.isMinorTick&&axis.drawMajorTickMarks)||(t.isMinorTick&&axis.drawMinorTickMarks))){s=t.markSize;
m=t.mark;
var pos=Math.round(axis.u2p(t.value))+0.5;
switch(m){case"outside":b=this._left-s;
e=this._left;
break;
case"inside":b=this._left;
e=this._left+s;
break;
case"cross":b=this._left-s;
e=this._left+s;
break;
default:b=this._left-s;
e=this._left;
break;
}if(this.shadow){this.renderer.shadowRenderer.draw(ctx,[[b,pos],[e,pos]],{lineCap:"butt",lineWidth:this.gridLineWidth*1.5,offset:this.gridLineWidth*0.75,fill:false,closePath:false});
}drawLine(b,pos,e,pos,{strokeStyle:axis.borderColor});
}break;
case"x2axis":if(t.showGridline&&this.drawGridlines&&((!t.isMinorTick&&axis.drawMajorGridlines)||(t.isMinorTick&&axis.drawMinorGridlines))){drawLine(pos,this._bottom,pos,this._top);
}if(t.showMark&&t.mark&&((!t.isMinorTick&&axis.drawMajorTickMarks)||(t.isMinorTick&&axis.drawMinorTickMarks))){s=t.markSize;
m=t.mark;
var pos=Math.round(axis.u2p(t.value))+0.5;
switch(m){case"outside":b=this._top-s;
e=this._top;
break;
case"inside":b=this._top;
e=this._top+s;
break;
case"cross":b=this._top-s;
e=this._top+s;
break;
default:b=this._top-s;
e=this._top;
break;
}if(this.shadow){this.renderer.shadowRenderer.draw(ctx,[[pos,b],[pos,e]],{lineCap:"butt",lineWidth:this.gridLineWidth,offset:this.gridLineWidth*0.75,depth:2,fill:false,closePath:false});
}drawLine(pos,b,pos,e);
}break;
case"y2axis":if(t.showGridline&&this.drawGridlines&&((!t.isMinorTick&&axis.drawMajorGridlines)||(t.isMinorTick&&axis.drawMinorGridlines))){drawLine(this._left,pos,this._right,pos);
}if(t.showMark&&t.mark&&((!t.isMinorTick&&axis.drawMajorTickMarks)||(t.isMinorTick&&axis.drawMinorTickMarks))){s=t.markSize;
m=t.mark;
var pos=Math.round(axis.u2p(t.value))+0.5;
switch(m){case"outside":b=this._right;
e=this._right+s;
break;
case"inside":b=this._right-s;
e=this._right;
break;
case"cross":b=this._right-s;
e=this._right+s;
break;
default:b=this._right;
e=this._right+s;
break;
}if(this.shadow){this.renderer.shadowRenderer.draw(ctx,[[b,pos],[e,pos]],{lineCap:"butt",lineWidth:this.gridLineWidth*1.5,offset:this.gridLineWidth*0.75,fill:false,closePath:false});
}drawLine(b,pos,e,pos,{strokeStyle:axis.borderColor});
}break;
default:break;
}}}t=null;
}axis=null;
ticks=null;
}ax=["y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis"];
for(var i=7;
i>0;
i--){var axis=axes[ax[i-1]];
var ticks=axis._ticks;
if(axis.show){var tn=ticks[axis.numberTicks-1];
var t0=ticks[0];
var left=axis.getLeft();
var points=[[left,tn.getTop()+tn.getHeight()/2],[left,t0.getTop()+t0.getHeight()/2+1]];
if(this.shadow){this.renderer.shadowRenderer.draw(ctx,points,{lineCap:"butt",fill:false,closePath:false});
}drawLine(points[0][0],points[0][1],points[1][0],points[1][1],{lineCap:"butt",strokeStyle:axis.borderColor,lineWidth:axis.borderWidth});
for(var j=ticks.length;
j>0;
j--){var t=ticks[j-1];
s=t.markSize;
m=t.mark;
var pos=Math.round(axis.u2p(t.value))+0.5;
if(t.showMark&&t.mark){switch(m){case"outside":b=left;
e=left+s;
break;
case"inside":b=left-s;
e=left;
break;
case"cross":b=left-s;
e=left+s;
break;
default:b=left;
e=left+s;
break;
}points=[[b,pos],[e,pos]];
if(this.shadow){this.renderer.shadowRenderer.draw(ctx,points,{lineCap:"butt",lineWidth:this.gridLineWidth*1.5,offset:this.gridLineWidth*0.75,fill:false,closePath:false});
}drawLine(b,pos,e,pos,{strokeStyle:axis.borderColor});
}t=null;
}t0=null;
}axis=null;
ticks=null;
}ctx.restore();
function drawLine(bx,by,ex,ey,opts){ctx.save();
opts=opts||{};
if(opts.lineWidth==null||opts.lineWidth!=0){$.extend(true,ctx,opts);
ctx.beginPath();
ctx.moveTo(bx,by);
ctx.lineTo(ex,ey);
ctx.stroke();
ctx.restore();
}}if(this.shadow){var points=[[this._left,this._bottom],[this._right,this._bottom],[this._right,this._top]];
this.renderer.shadowRenderer.draw(ctx,points);
}if(this.borderWidth!=0&&this.drawBorder){drawLine(this._left,this._top,this._right,this._top,{lineCap:"round",strokeStyle:axes.x2axis.borderColor,lineWidth:axes.x2axis.borderWidth});
drawLine(this._right,this._top,this._right,this._bottom,{lineCap:"round",strokeStyle:axes.y2axis.borderColor,lineWidth:axes.y2axis.borderWidth});
drawLine(this._right,this._bottom,this._left,this._bottom,{lineCap:"round",strokeStyle:axes.xaxis.borderColor,lineWidth:axes.xaxis.borderWidth});
drawLine(this._left,this._bottom,this._left,this._top,{lineCap:"round",strokeStyle:axes.yaxis.borderColor,lineWidth:axes.yaxis.borderWidth});
}ctx.restore();
ctx=null;
axes=null;
};
$.jqplot.DivTitleRenderer=function(){};
$.jqplot.DivTitleRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.DivTitleRenderer.prototype.draw=function(){if(this._elem){this._elem.emptyForce();
this._elem=null;
}var r=this.renderer;
var elem=document.createElement("div");
this._elem=$(elem);
this._elem.addClass("jqplot-title");
if(!this.text){this.show=false;
this._elem.height(0);
this._elem.width(0);
}else{if(this.text){var color;
if(this.color){color=this.color;
}else{if(this.textColor){color=this.textColor;
}}var styles={position:"absolute",top:"0px",left:"0px"};
if(this._plotWidth){styles.width=this._plotWidth+"px";
}if(this.fontSize){styles.fontSize=this.fontSize;
}if(typeof this.textAlign==="string"){styles.textAlign=this.textAlign;
}else{styles.textAlign="center";
}if(color){styles.color=color;
}if(this.paddingBottom){styles.paddingBottom=this.paddingBottom;
}if(this.fontFamily){styles.fontFamily=this.fontFamily;
}this._elem.css(styles);
if(this.escapeHtml){this._elem.text(this.text);
}else{this._elem.html(this.text);
}}}elem=null;
return this._elem;
};
$.jqplot.DivTitleRenderer.prototype.pack=function(){};
var dotlen=0.1;
$.jqplot.LinePattern=function(ctx,pattern){var defaultLinePatterns={dotted:[dotlen,$.jqplot.config.dotGapLength],dashed:[$.jqplot.config.dashLength,$.jqplot.config.gapLength],solid:null};
if(typeof pattern==="string"){if(pattern[0]==="."||pattern[0]==="-"){var s=pattern;
pattern=[];
for(var i=0,imax=s.length;
i<imax;
i++){if(s[i]==="."){pattern.push(dotlen);
}else{if(s[i]==="-"){pattern.push($.jqplot.config.dashLength);
}else{continue;
}}pattern.push($.jqplot.config.gapLength);
}}else{pattern=defaultLinePatterns[pattern];
}}if(!(pattern&&pattern.length)){return ctx;
}var patternIndex=0;
var patternDistance=pattern[0];
var px=0;
var py=0;
var pathx0=0;
var pathy0=0;
var moveTo=function(x,y){ctx.moveTo(x,y);
px=x;
py=y;
pathx0=x;
pathy0=y;
};
var lineTo=function(x,y){var scale=ctx.lineWidth;
var dx=x-px;
var dy=y-py;
var dist=Math.sqrt(dx*dx+dy*dy);
if((dist>0)&&(scale>0)){dx/=dist;
dy/=dist;
while(true){var dp=scale*patternDistance;
if(dp<dist){px+=dp*dx;
py+=dp*dy;
if((patternIndex&1)==0){ctx.lineTo(px,py);
}else{ctx.moveTo(px,py);
}dist-=dp;
patternIndex++;
if(patternIndex>=pattern.length){patternIndex=0;
}patternDistance=pattern[patternIndex];
}else{px=x;
py=y;
if((patternIndex&1)==0){ctx.lineTo(px,py);
}else{ctx.moveTo(px,py);
}patternDistance-=dist/scale;
break;
}}}};
var beginPath=function(){ctx.beginPath();
};
var closePath=function(){lineTo(pathx0,pathy0);
};
return{moveTo:moveTo,lineTo:lineTo,beginPath:beginPath,closePath:closePath};
};
$.jqplot.LineRenderer=function(){this.shapeRenderer=new $.jqplot.ShapeRenderer();
this.shadowRenderer=new $.jqplot.ShadowRenderer();
};
$.jqplot.LineRenderer.prototype.init=function(options,plot){options=options||{};
this._type="line";
this.renderer.animation={show:false,direction:"left",speed:2500,_supported:true};
this.renderer.smooth=false;
this.renderer.tension=null;
this.renderer.constrainSmoothing=true;
this.renderer._smoothedData=[];
this.renderer._smoothedPlotData=[];
this.renderer._hiBandGridData=[];
this.renderer._lowBandGridData=[];
this.renderer._hiBandSmoothedData=[];
this.renderer._lowBandSmoothedData=[];
this.renderer.bandData=[];
this.renderer.bands={show:false,hiData:[],lowData:[],color:this.color,showLines:false,fill:true,fillColor:null,_min:null,_max:null,interval:"3%"};
var lopts={highlightMouseOver:options.highlightMouseOver,highlightMouseDown:options.highlightMouseDown,highlightColor:options.highlightColor};
delete (options.highlightMouseOver);
delete (options.highlightMouseDown);
delete (options.highlightColor);
$.extend(true,this.renderer,options);
this.renderer.options=options;
if(this.renderer.bandData.length>1&&(!options.bands||options.bands.show==null)){this.renderer.bands.show=true;
}else{if(options.bands&&options.bands.show==null&&options.bands.interval!=null){this.renderer.bands.show=true;
}}if(this.fill){this.renderer.bands.show=false;
}if(this.renderer.bands.show){this.renderer.initBands.call(this,this.renderer.options,plot);
}if(this._stack){this.renderer.smooth=false;
}var opts={lineJoin:this.lineJoin,lineCap:this.lineCap,fill:this.fill,isarc:false,strokeStyle:this.color,fillStyle:this.fillColor,lineWidth:this.lineWidth,linePattern:this.linePattern,closePath:this.fill};
this.renderer.shapeRenderer.init(opts);
var shadow_offset=options.shadowOffset;
if(shadow_offset==null){if(this.lineWidth>2.5){shadow_offset=1.25*(1+(Math.atan((this.lineWidth/2.5))/0.785398163-1)*0.6);
}else{shadow_offset=1.25*Math.atan((this.lineWidth/2.5))/0.785398163;
}}var sopts={lineJoin:this.lineJoin,lineCap:this.lineCap,fill:this.fill,isarc:false,angle:this.shadowAngle,offset:shadow_offset,alpha:this.shadowAlpha,depth:this.shadowDepth,lineWidth:this.lineWidth,linePattern:this.linePattern,closePath:this.fill};
this.renderer.shadowRenderer.init(sopts);
this._areaPoints=[];
this._boundingBox=[[],[]];
if(!this.isTrendline&&this.fill||this.renderer.bands.show){this.highlightMouseOver=true;
this.highlightMouseDown=false;
this.highlightColor=null;
if(lopts.highlightMouseDown&&lopts.highlightMouseOver==null){lopts.highlightMouseOver=false;
}$.extend(true,this,{highlightMouseOver:lopts.highlightMouseOver,highlightMouseDown:lopts.highlightMouseDown,highlightColor:lopts.highlightColor});
if(!this.highlightColor){var fc=(this.renderer.bands.show)?this.renderer.bands.fillColor:this.fillColor;
this.highlightColor=$.jqplot.computeHighlightColors(fc);
}if(this.highlighter){this.highlighter.show=false;
}}if(!this.isTrendline&&plot){plot.plugins.lineRenderer={};
plot.postInitHooks.addOnce(postInit);
plot.postDrawHooks.addOnce(postPlotDraw);
plot.eventListenerHooks.addOnce("jqplotMouseMove",handleMove);
plot.eventListenerHooks.addOnce("jqplotMouseDown",handleMouseDown);
plot.eventListenerHooks.addOnce("jqplotMouseUp",handleMouseUp);
plot.eventListenerHooks.addOnce("jqplotClick",handleClick);
plot.eventListenerHooks.addOnce("jqplotRightClick",handleRightClick);
}};
$.jqplot.LineRenderer.prototype.initBands=function(options,plot){var bd=options.bandData||[];
var bands=this.renderer.bands;
bands.hiData=[];
bands.lowData=[];
var data=this.data;
bands._max=null;
bands._min=null;
if(bd.length==2){if($.isArray(bd[0][0])){var p;
var bdminidx=0,bdmaxidx=0;
for(var i=0,l=bd[0].length;
i<l;
i++){p=bd[0][i];
if((p[1]!=null&&p[1]>bands._max)||bands._max==null){bands._max=p[1];
}if((p[1]!=null&&p[1]<bands._min)||bands._min==null){bands._min=p[1];
}}for(var i=0,l=bd[1].length;
i<l;
i++){p=bd[1][i];
if((p[1]!=null&&p[1]>bands._max)||bands._max==null){bands._max=p[1];
bdmaxidx=1;
}if((p[1]!=null&&p[1]<bands._min)||bands._min==null){bands._min=p[1];
bdminidx=1;
}}if(bdmaxidx===bdminidx){bands.show=false;
}bands.hiData=bd[bdmaxidx];
bands.lowData=bd[bdminidx];
}else{if(bd[0].length===data.length&&bd[1].length===data.length){var hi=(bd[0][0]>bd[1][0])?0:1;
var low=(hi)?0:1;
for(var i=0,l=data.length;
i<l;
i++){bands.hiData.push([data[i][0],bd[hi][i]]);
bands.lowData.push([data[i][0],bd[low][i]]);
}}else{bands.show=false;
}}}else{if(bd.length>2&&!$.isArray(bd[0][0])){var hi=(bd[0][0]>bd[0][1])?0:1;
var low=(hi)?0:1;
for(var i=0,l=bd.length;
i<l;
i++){bands.hiData.push([data[i][0],bd[i][hi]]);
bands.lowData.push([data[i][0],bd[i][low]]);
}}else{var intrv=bands.interval;
var a=null;
var b=null;
var afunc=null;
var bfunc=null;
if($.isArray(intrv)){a=intrv[0];
b=intrv[1];
}else{a=intrv;
}if(isNaN(a)){if(a.charAt(a.length-1)==="%"){afunc="multiply";
a=parseFloat(a)/100+1;
}}else{a=parseFloat(a);
afunc="add";
}if(b!==null&&isNaN(b)){if(b.charAt(b.length-1)==="%"){bfunc="multiply";
b=parseFloat(b)/100+1;
}}else{if(b!==null){b=parseFloat(b);
bfunc="add";
}}if(a!==null){if(b===null){b=-a;
bfunc=afunc;
if(bfunc==="multiply"){b+=2;
}}if(a<b){var temp=a;
a=b;
b=temp;
temp=afunc;
afunc=bfunc;
bfunc=temp;
}for(var i=0,l=data.length;
i<l;
i++){switch(afunc){case"add":bands.hiData.push([data[i][0],data[i][1]+a]);
break;
case"multiply":bands.hiData.push([data[i][0],data[i][1]*a]);
break;
}switch(bfunc){case"add":bands.lowData.push([data[i][0],data[i][1]+b]);
break;
case"multiply":bands.lowData.push([data[i][0],data[i][1]*b]);
break;
}}}else{bands.show=false;
}}}var hd=bands.hiData;
var ld=bands.lowData;
for(var i=0,l=hd.length;
i<l;
i++){if((hd[i][1]!=null&&hd[i][1]>bands._max)||bands._max==null){bands._max=hd[i][1];
}}for(var i=0,l=ld.length;
i<l;
i++){if((ld[i][1]!=null&&ld[i][1]<bands._min)||bands._min==null){bands._min=ld[i][1];
}}if(bands.fillColor===null){var c=$.jqplot.getColorComponents(bands.color);
c[3]=c[3]*0.5;
bands.fillColor="rgba("+c[0]+", "+c[1]+", "+c[2]+", "+c[3]+")";
}};
function getSteps(d,f){return(3.4182054+f)*Math.pow(d,-0.3534992);
}function computeSteps(d1,d2){var s=Math.sqrt(Math.pow((d2[0]-d1[0]),2)+Math.pow((d2[1]-d1[1]),2));
return 5.7648*Math.log(s)+7.4456;
}function tanh(x){var a=(Math.exp(2*x)-1)/(Math.exp(2*x)+1);
return a;
}function computeConstrainedSmoothedData(gd){var smooth=this.renderer.smooth;
var dim=this.canvas.getWidth();
var xp=this._xaxis.series_p2u;
var yp=this._yaxis.series_p2u;
var steps=null;
var _steps=null;
var dist=gd.length/dim;
var _smoothedData=[];
var _smoothedPlotData=[];
if(!isNaN(parseFloat(smooth))){steps=parseFloat(smooth);
}else{steps=getSteps(dist,0.5);
}var yy=[];
var xx=[];
for(var i=0,l=gd.length;
i<l;
i++){yy.push(gd[i][1]);
xx.push(gd[i][0]);
}function dxx(x1,x0){if(x1-x0==0){return Math.pow(10,10);
}else{return x1-x0;
}}var A,B,C,D;
var nmax=gd.length-1;
for(var num=1,gdl=gd.length;
num<gdl;
num++){var gxx=[];
var ggxx=[];
for(var j=0;
j<2;
j++){var i=num-1+j;
if(i==0||i==nmax){gxx[j]=Math.pow(10,10);
}else{if(yy[i+1]-yy[i]==0||yy[i]-yy[i-1]==0){gxx[j]=0;
}else{if(((xx[i+1]-xx[i])/(yy[i+1]-yy[i])+(xx[i]-xx[i-1])/(yy[i]-yy[i-1]))==0){gxx[j]=0;
}else{if((yy[i+1]-yy[i])*(yy[i]-yy[i-1])<0){gxx[j]=0;
}else{gxx[j]=2/(dxx(xx[i+1],xx[i])/(yy[i+1]-yy[i])+dxx(xx[i],xx[i-1])/(yy[i]-yy[i-1]));
}}}}}if(num==1){gxx[0]=3/2*(yy[1]-yy[0])/dxx(xx[1],xx[0])-gxx[1]/2;
}else{if(num==nmax){gxx[1]=3/2*(yy[nmax]-yy[nmax-1])/dxx(xx[nmax],xx[nmax-1])-gxx[0]/2;
}}ggxx[0]=-2*(gxx[1]+2*gxx[0])/dxx(xx[num],xx[num-1])+6*(yy[num]-yy[num-1])/Math.pow(dxx(xx[num],xx[num-1]),2);
ggxx[1]=2*(2*gxx[1]+gxx[0])/dxx(xx[num],xx[num-1])-6*(yy[num]-yy[num-1])/Math.pow(dxx(xx[num],xx[num-1]),2);
D=1/6*(ggxx[1]-ggxx[0])/dxx(xx[num],xx[num-1]);
C=1/2*(xx[num]*ggxx[0]-xx[num-1]*ggxx[1])/dxx(xx[num],xx[num-1]);
B=(yy[num]-yy[num-1]-C*(Math.pow(xx[num],2)-Math.pow(xx[num-1],2))-D*(Math.pow(xx[num],3)-Math.pow(xx[num-1],3)))/dxx(xx[num],xx[num-1]);
A=yy[num-1]-B*xx[num-1]-C*Math.pow(xx[num-1],2)-D*Math.pow(xx[num-1],3);
var increment=(xx[num]-xx[num-1])/steps;
var temp,tempx;
for(var j=0,l=steps;
j<l;
j++){temp=[];
tempx=xx[num-1]+j*increment;
temp.push(tempx);
temp.push(A+B*tempx+C*Math.pow(tempx,2)+D*Math.pow(tempx,3));
_smoothedData.push(temp);
_smoothedPlotData.push([xp(temp[0]),yp(temp[1])]);
}}_smoothedData.push(gd[i]);
_smoothedPlotData.push([xp(gd[i][0]),yp(gd[i][1])]);
return[_smoothedData,_smoothedPlotData];
}function computeHermiteSmoothedData(gd){var smooth=this.renderer.smooth;
var tension=this.renderer.tension;
var dim=this.canvas.getWidth();
var xp=this._xaxis.series_p2u;
var yp=this._yaxis.series_p2u;
var steps=null;
var _steps=null;
var a=null;
var a1=null;
var a2=null;
var slope=null;
var slope2=null;
var temp=null;
var t,s,h1,h2,h3,h4;
var TiX,TiY,Ti1X,Ti1Y;
var pX,pY,p;
var sd=[];
var spd=[];
var dist=gd.length/dim;
var min,max,stretch,scale,shift;
var _smoothedData=[];
var _smoothedPlotData=[];
if(!isNaN(parseFloat(smooth))){steps=parseFloat(smooth);
}else{steps=getSteps(dist,0.5);
}if(!isNaN(parseFloat(tension))){tension=parseFloat(tension);
}for(var i=0,l=gd.length-1;
i<l;
i++){if(tension===null){slope=Math.abs((gd[i+1][1]-gd[i][1])/(gd[i+1][0]-gd[i][0]));
min=0.3;
max=0.6;
stretch=(max-min)/2;
scale=2.5;
shift=-1.4;
temp=slope/scale+shift;
a1=stretch*tanh(temp)-stretch*tanh(shift)+min;
if(i>0){slope2=Math.abs((gd[i][1]-gd[i-1][1])/(gd[i][0]-gd[i-1][0]));
}temp=slope2/scale+shift;
a2=stretch*tanh(temp)-stretch*tanh(shift)+min;
a=(a1+a2)/2;
}else{a=tension;
}for(t=0;
t<steps;
t++){s=t/steps;
h1=(1+2*s)*Math.pow((1-s),2);
h2=s*Math.pow((1-s),2);
h3=Math.pow(s,2)*(3-2*s);
h4=Math.pow(s,2)*(s-1);
if(gd[i-1]){TiX=a*(gd[i+1][0]-gd[i-1][0]);
TiY=a*(gd[i+1][1]-gd[i-1][1]);
}else{TiX=a*(gd[i+1][0]-gd[i][0]);
TiY=a*(gd[i+1][1]-gd[i][1]);
}if(gd[i+2]){Ti1X=a*(gd[i+2][0]-gd[i][0]);
Ti1Y=a*(gd[i+2][1]-gd[i][1]);
}else{Ti1X=a*(gd[i+1][0]-gd[i][0]);
Ti1Y=a*(gd[i+1][1]-gd[i][1]);
}pX=h1*gd[i][0]+h3*gd[i+1][0]+h2*TiX+h4*Ti1X;
pY=h1*gd[i][1]+h3*gd[i+1][1]+h2*TiY+h4*Ti1Y;
p=[pX,pY];
_smoothedData.push(p);
_smoothedPlotData.push([xp(pX),yp(pY)]);
}}_smoothedData.push(gd[l]);
_smoothedPlotData.push([xp(gd[l][0]),yp(gd[l][1])]);
return[_smoothedData,_smoothedPlotData];
}$.jqplot.LineRenderer.prototype.setGridData=function(plot){var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var data=this._plotData;
var pdata=this._prevPlotData;
this.gridData=[];
this._prevGridData=[];
this.renderer._smoothedData=[];
this.renderer._smoothedPlotData=[];
this.renderer._hiBandGridData=[];
this.renderer._lowBandGridData=[];
this.renderer._hiBandSmoothedData=[];
this.renderer._lowBandSmoothedData=[];
var bands=this.renderer.bands;
var hasNull=false;
for(var i=0,l=this.data.length;
i<l;
i++){if(data[i][0]!=null&&data[i][1]!=null){this.gridData.push([xp.call(this._xaxis,data[i][0]),yp.call(this._yaxis,data[i][1])]);
}else{if(data[i][0]==null){hasNull=true;
this.gridData.push([null,yp.call(this._yaxis,data[i][1])]);
}else{if(data[i][1]==null){hasNull=true;
this.gridData.push([xp.call(this._xaxis,data[i][0]),null]);
}}}if(pdata[i]!=null&&pdata[i][0]!=null&&pdata[i][1]!=null){this._prevGridData.push([xp.call(this._xaxis,pdata[i][0]),yp.call(this._yaxis,pdata[i][1])]);
}else{if(pdata[i]!=null&&pdata[i][0]==null){this._prevGridData.push([null,yp.call(this._yaxis,pdata[i][1])]);
}else{if(pdata[i]!=null&&pdata[i][0]!=null&&pdata[i][1]==null){this._prevGridData.push([xp.call(this._xaxis,pdata[i][0]),null]);
}}}}if(hasNull){this.renderer.smooth=false;
if(this._type==="line"){bands.show=false;
}}if(this._type==="line"&&bands.show){for(var i=0,l=bands.hiData.length;
i<l;
i++){this.renderer._hiBandGridData.push([xp.call(this._xaxis,bands.hiData[i][0]),yp.call(this._yaxis,bands.hiData[i][1])]);
}for(var i=0,l=bands.lowData.length;
i<l;
i++){this.renderer._lowBandGridData.push([xp.call(this._xaxis,bands.lowData[i][0]),yp.call(this._yaxis,bands.lowData[i][1])]);
}}if(this._type==="line"&&this.renderer.smooth&&this.gridData.length>2){var ret;
if(this.renderer.constrainSmoothing){ret=computeConstrainedSmoothedData.call(this,this.gridData);
this.renderer._smoothedData=ret[0];
this.renderer._smoothedPlotData=ret[1];
if(bands.show){ret=computeConstrainedSmoothedData.call(this,this.renderer._hiBandGridData);
this.renderer._hiBandSmoothedData=ret[0];
ret=computeConstrainedSmoothedData.call(this,this.renderer._lowBandGridData);
this.renderer._lowBandSmoothedData=ret[0];
}ret=null;
}else{ret=computeHermiteSmoothedData.call(this,this.gridData);
this.renderer._smoothedData=ret[0];
this.renderer._smoothedPlotData=ret[1];
if(bands.show){ret=computeHermiteSmoothedData.call(this,this.renderer._hiBandGridData);
this.renderer._hiBandSmoothedData=ret[0];
ret=computeHermiteSmoothedData.call(this,this.renderer._lowBandGridData);
this.renderer._lowBandSmoothedData=ret[0];
}ret=null;
}}var wData=(this.markerRenderer.whiskerData)?this.markerRenderer.whiskerData:[];
var wArr=[];
for(var i=0,wLen=wData.length;
i<wLen;
i++){if(wData[i]!==null&&wData[i].length==3){wArr.push([xp.call(this._xaxis,wData[i][0]),yp.call(this._yaxis,wData[i][1]),yp.call(this._yaxis,wData[i][2])]);
}}this.markerRenderer._whiskerData=wArr;
};
$.jqplot.LineRenderer.prototype.makeGridData=function(data,plot){var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var gd=[];
var pgd=[];
this.renderer._smoothedData=[];
this.renderer._smoothedPlotData=[];
this.renderer._hiBandGridData=[];
this.renderer._lowBandGridData=[];
this.renderer._hiBandSmoothedData=[];
this.renderer._lowBandSmoothedData=[];
var bands=this.renderer.bands;
var hasNull=false;
for(var i=0;
i<data.length;
i++){if(data[i][0]!=null&&data[i][1]!=null){gd.push([xp.call(this._xaxis,data[i][0]),yp.call(this._yaxis,data[i][1])]);
}else{if(data[i][0]==null){hasNull=true;
gd.push([null,yp.call(this._yaxis,data[i][1])]);
}else{if(data[i][1]==null){hasNull=true;
gd.push([xp.call(this._xaxis,data[i][0]),null]);
}}}}if(hasNull){this.renderer.smooth=false;
if(this._type==="line"){bands.show=false;
}}if(this._type==="line"&&bands.show){for(var i=0,l=bands.hiData.length;
i<l;
i++){this.renderer._hiBandGridData.push([xp.call(this._xaxis,bands.hiData[i][0]),yp.call(this._yaxis,bands.hiData[i][1])]);
}for(var i=0,l=bands.lowData.length;
i<l;
i++){this.renderer._lowBandGridData.push([xp.call(this._xaxis,bands.lowData[i][0]),yp.call(this._yaxis,bands.lowData[i][1])]);
}}if(this._type==="line"&&this.renderer.smooth&&gd.length>2){var ret;
if(this.renderer.constrainSmoothing){ret=computeConstrainedSmoothedData.call(this,gd);
this.renderer._smoothedData=ret[0];
this.renderer._smoothedPlotData=ret[1];
if(bands.show){ret=computeConstrainedSmoothedData.call(this,this.renderer._hiBandGridData);
this.renderer._hiBandSmoothedData=ret[0];
ret=computeConstrainedSmoothedData.call(this,this.renderer._lowBandGridData);
this.renderer._lowBandSmoothedData=ret[0];
}ret=null;
}else{ret=computeHermiteSmoothedData.call(this,gd);
this.renderer._smoothedData=ret[0];
this.renderer._smoothedPlotData=ret[1];
if(bands.show){ret=computeHermiteSmoothedData.call(this,this.renderer._hiBandGridData);
this.renderer._hiBandSmoothedData=ret[0];
ret=computeHermiteSmoothedData.call(this,this.renderer._lowBandGridData);
this.renderer._lowBandSmoothedData=ret[0];
}ret=null;
}}return gd;
};
$.jqplot.LineRenderer.prototype.draw=function(ctx,gd,options,plot){var i;
var opts=$.extend(true,{},options);
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var fillAndStroke=(opts.fillAndStroke!=undefined)?opts.fillAndStroke:this.fillAndStroke;
var xmin,ymin,xmax,ymax;
ctx.save();
if(gd.length){if(showLine){if(fill){if(this.fillToZero){var negativeColor=this.negativeColor;
if(!this.useNegativeColors){negativeColor=opts.fillStyle;
}var isnegative=false;
var posfs=opts.fillStyle;
if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var tempgd=[];
var pd=(this.renderer.smooth)?this.renderer._smoothedPlotData:this._plotData;
this._areaPoints=[];
var pyzero=this._yaxis.series_u2p(this.fillToValue);
var pxzero=this._xaxis.series_u2p(this.fillToValue);
opts.closePath=true;
if(this.fillAxis=="y"){tempgd.push([gd[0][0],pyzero]);
this._areaPoints.push([gd[0][0],pyzero]);
for(var i=0;
i<gd.length-1;
i++){tempgd.push(gd[i]);
this._areaPoints.push(gd[i]);
if(pd[i][1]*pd[i+1][1]<0){if(pd[i][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}var xintercept=gd[i][0]+(gd[i+1][0]-gd[i][0])*(pyzero-gd[i][1])/(gd[i+1][1]-gd[i][1]);
tempgd.push([xintercept,pyzero]);
this._areaPoints.push([xintercept,pyzero]);
if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
tempgd=[[xintercept,pyzero]];
}}if(pd[gd.length-1][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}tempgd.push(gd[gd.length-1]);
this._areaPoints.push(gd[gd.length-1]);
tempgd.push([gd[gd.length-1][0],pyzero]);
this._areaPoints.push([gd[gd.length-1][0],pyzero]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this._areaPoints=gd;
this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}else{if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var gridymin=ctx.canvas.height;
gd.unshift([gd[0][0],gridymin]);
var len=gd.length;
gd.push([gd[len-1][0],gridymin]);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}}this._areaPoints=gd;
if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}if(fillAndStroke){var fasopts=$.extend(true,{},opts,{fill:false,closePath:false});
this.renderer.shapeRenderer.draw(ctx,fasgd,fasopts);
if(this.markerRenderer.show){if(this.renderer.smooth){fasgd=this.gridData;
}for(i=0;
i<fasgd.length;
i++){this.markerRenderer.draw(fasgd[i][0],fasgd[i][1],ctx,opts.markerOptions);
}}}}else{if(this.renderer.bands.show){var bdat;
var bopts=$.extend(true,{},opts);
if(this.renderer.bands.showLines){bdat=(this.renderer.smooth)?this.renderer._hiBandSmoothedData:this.renderer._hiBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,opts);
bdat=(this.renderer.smooth)?this.renderer._lowBandSmoothedData:this.renderer._lowBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}if(this.renderer.bands.fill){if(this.renderer.smooth){bdat=this.renderer._hiBandSmoothedData.concat(this.renderer._lowBandSmoothedData.reverse());
}else{bdat=this.renderer._hiBandGridData.concat(this.renderer._lowBandGridData.reverse());
}this._areaPoints=bdat;
bopts.closePath=true;
bopts.fill=true;
bopts.fillStyle=this.renderer.bands.fillColor;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}var xmin=xmax=ymin=ymax=null;
for(i=0;
i<this._areaPoints.length;
i++){var p=this._areaPoints[i];
if(xmin>p[0]||xmin==null){xmin=p[0];
}if(ymax<p[1]||ymax==null){ymax=p[1];
}if(xmax<p[0]||xmax==null){xmax=p[0];
}if(ymin>p[1]||ymin==null){ymin=p[1];
}}if(this.type==="line"&&this.renderer.bands.show){ymax=this._yaxis.series_u2p(this.renderer.bands._min);
ymin=this._yaxis.series_u2p(this.renderer.bands._max);
}this._boundingBox=[[xmin,ymax],[xmax,ymin]];
if(this.markerRenderer.show&&!fill){if(this.renderer.smooth){gd=this.gridData;
}for(i=0;
i<gd.length;
i++){if(gd[i][0]!=null&&gd[i][1]!=null){this.markerRenderer.draw(gd[i][0],gd[i][1],ctx,opts.markerOptions);
}}}}ctx.restore();
};
$.jqplot.LineRenderer.prototype.drawShadow=function(ctx,gd,options){};
function postInit(target,data,options){for(var i=0;
i<this.series.length;
i++){if(this.series[i].renderer.constructor==$.jqplot.LineRenderer){if(this.series[i].highlightMouseOver){this.series[i].highlightMouseDown=false;
}}}}function postPlotDraw(){if(this.plugins.lineRenderer&&this.plugins.lineRenderer.highlightCanvas){this.plugins.lineRenderer.highlightCanvas.resetCanvas();
this.plugins.lineRenderer.highlightCanvas=null;
}this.plugins.lineRenderer.highlightedSeriesIndex=null;
this.plugins.lineRenderer.highlightCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(this.plugins.lineRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-lineRenderer-highlight-canvas",this._plotDimensions,this));
this.plugins.lineRenderer.highlightCanvas.setContext();
this.eventCanvas._elem.bind("mouseleave",{plot:this},function(ev){unhighlight(ev.data.plot);
});
}function highlight(plot,sidx,pidx,points){var s=plot.series[sidx];
var canvas=plot.plugins.lineRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
s._highlightedPoint=pidx;
plot.plugins.lineRenderer.highlightedSeriesIndex=sidx;
var opts={fillStyle:s.highlightColor};
if(s.type==="line"&&s.renderer.bands.show){opts.fill=true;
opts.closePath=true;
}s.renderer.shapeRenderer.draw(canvas._ctx,points,opts);
canvas=null;
}function unhighlight(plot){var canvas=plot.plugins.lineRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
for(var i=0;
i<plot.series.length;
i++){plot.series[i]._highlightedPoint=null;
}plot.plugins.lineRenderer.highlightedSeriesIndex=null;
plot.target.trigger("jqplotDataUnhighlight");
canvas=null;
}function handleMove(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt1=jQuery.Event("jqplotDataMouseOver");
evt1.pageX=ev.pageX;
evt1.pageY=ev.pageY;
plot.target.trigger(evt1,ins);
if(plot.series[ins[0]].highlightMouseOver&&!(ins[0]==plot.plugins.lineRenderer.highlightedSeriesIndex)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
if(plot.series[ins[0]].highlightMouseDown&&!(ins[0]==plot.plugins.lineRenderer.highlightedSeriesIndex)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseUp(ev,gridpos,datapos,neighbor,plot){var idx=plot.plugins.lineRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}}function handleClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt=jQuery.Event("jqplotDataClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function handleRightClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var idx=plot.plugins.lineRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}var evt=jQuery.Event("jqplotDataRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}$.jqplot.LinearAxisRenderer=function(){};
$.jqplot.LinearAxisRenderer.prototype.init=function(options){this.breakPoints=null;
this.breakTickLabel="&asymp;";
this.drawBaseline=true;
this.baselineWidth=null;
this.baselineColor=null;
this.forceTickAt0=false;
this.forceTickAt100=false;
this.tickInset=0;
this.minorTicks=0;
this.alignTicks=false;
this._autoFormatString="";
this._overrideFormatString=false;
this._scalefact=1;
$.extend(true,this,options);
if(this.breakPoints){if(!$.isArray(this.breakPoints)){this.breakPoints=null;
}else{if(this.breakPoints.length<2||this.breakPoints[1]<=this.breakPoints[0]){this.breakPoints=null;
}}}if(this.numberTicks!=null&&this.numberTicks<2){this.numberTicks=2;
}this.resetDataBounds();
};
$.jqplot.LinearAxisRenderer.prototype.draw=function(ctx,plot){if(this.show){this.renderer.createTicks.call(this,plot);
var dim=0;
var temp;
if(this._elem){this._elem.emptyForce();
this._elem=null;
}this._elem=$(document.createElement("div"));
this._elem.addClass("jqplot-axis jqplot-"+this.name);
this._elem.css("position","absolute");
if(this.name=="xaxis"||this.name=="x2axis"){this._elem.width(this._plotDimensions.width);
}else{this._elem.height(this._plotDimensions.height);
}this.labelOptions.axis=this.name;
this._label=new this.labelRenderer(this.labelOptions);
if(this._label.show){var elem=this._label.draw(ctx,plot);
elem.appendTo(this._elem);
elem=null;
}var t=this._ticks;
var tick;
for(var i=0;
i<t.length;
i++){tick=t[i];
if(tick.show&&tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){this._elem.append(tick.draw(ctx,plot));
}}tick=null;
t=null;
}return this._elem;
};
$.jqplot.LinearAxisRenderer.prototype.reset=function(){this.min=this._options.min;
this.max=this._options.max;
this.tickInterval=this._options.tickInterval;
this.numberTicks=this._options.numberTicks;
this._autoFormatString="";
if(this._overrideFormatString&&this.tickOptions&&this.tickOptions.formatString){this.tickOptions.formatString="";
}};
$.jqplot.LinearAxisRenderer.prototype.set=function(){var dim=0;
var temp;
var w=0;
var h=0;
var lshow=(this._label==null)?false:this._label.show;
if(this.show){var t=this._ticks;
var tick;
for(var i=0;
i<t.length;
i++){tick=t[i];
if(!tick._breakTick&&tick.show&&tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){if(this.name=="xaxis"||this.name=="x2axis"){temp=tick._elem.outerHeight(true);
}else{temp=tick._elem.outerWidth(true);
}if(temp>dim){dim=temp;
}}}tick=null;
t=null;
if(lshow){w=this._label._elem.outerWidth(true);
h=this._label._elem.outerHeight(true);
}if(this.name=="xaxis"){dim=dim+h;
this._elem.css({height:dim+"px",left:"0px",bottom:"0px"});
}else{if(this.name=="x2axis"){dim=dim+h;
this._elem.css({height:dim+"px",left:"0px",top:"0px"});
}else{if(this.name=="yaxis"){dim=dim+w;
this._elem.css({width:dim+"px",left:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}else{dim=dim+w;
this._elem.css({width:dim+"px",right:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}}}}};
$.jqplot.LinearAxisRenderer.prototype.createTicks=function(){var ticks=this._ticks;
var userTicks=this.ticks;
var name=this.name;
var db=this._dataBounds;
var dim,interval;
var min,max;
var pos1,pos2;
var tt,i;
if(userTicks.length){for(i=0;
i<userTicks.length;
i++){var ut=userTicks[i];
var t=new this.tickRenderer(this.tickOptions);
if($.isArray(ut)){t.value=ut[0];
t.label=ut[1];
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(ut[0],this.name);
this._ticks.push(t);
}else{t.value=ut;
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(ut,this.name);
this._ticks.push(t);
}}this.numberTicks=userTicks.length;
this.min=this._ticks[0].value;
this.max=this._ticks[this.numberTicks-1].value;
this.tickInterval=(this.max-this.min)/(this.numberTicks-1);
}else{if(name=="xaxis"||name=="x2axis"){dim=this._plotDimensions.width;
}else{dim=this._plotDimensions.height;
}if(!this.autoscale&&this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null;
}min=((this.min!=null)?this.min:db.min);
max=((this.max!=null)?this.max:db.max);
if(min==max){var adj=0.05;
if(min>0){adj=Math.max(Math.log(min)/Math.LN10,0.05);
}min-=adj;
max+=adj;
}var range=max-min;
var rmin,rmax;
var temp;
if(this.autoscale&&this.min==null&&this.max==null){var rrange,ti,margin;
var forceMinZero=false;
var forceZeroLine=false;
var intervals={min:null,max:null,average:null,stddev:null};
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
var faname=(s.fillAxis=="x")?s._xaxis.name:s._yaxis.name;
if(this.name==faname){var vals=s._plotValues[s.fillAxis];
var vmin=vals[0];
var vmax=vals[0];
for(var j=1;
j<vals.length;
j++){if(vals[j]<vmin){vmin=vals[j];
}else{if(vals[j]>vmax){vmax=vals[j];
}}}var dp=(vmax-vmin)/vmax;
if(s.renderer.constructor==$.jqplot.BarRenderer){if(vmin>=0&&(s.fillToZero||dp>0.1)){forceMinZero=true;
}else{forceMinZero=false;
if(s.fill&&s.fillToZero&&vmin<0&&vmax>0){forceZeroLine=true;
}else{forceZeroLine=false;
}}}else{if(s.fill){if(vmin>=0&&(s.fillToZero||dp>0.1)){forceMinZero=true;
}else{if(vmin<0&&vmax>0&&s.fillToZero){forceMinZero=false;
forceZeroLine=true;
}else{forceMinZero=false;
forceZeroLine=false;
}}}else{if(vmin<0){forceMinZero=false;
}}}}}if(forceMinZero){this.numberTicks=2+Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);
this.min=0;
ti=max/(this.numberTicks-1);
temp=Math.pow(10,Math.abs(Math.floor(Math.log(ti)/Math.LN10)));
if(ti/temp==parseInt(ti/temp,10)){ti+=temp;
}this.tickInterval=Math.ceil(ti/temp)*temp;
this.max=this.tickInterval*(this.numberTicks-1);
}else{if(forceZeroLine){this.numberTicks=2+Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);
var ntmin=Math.ceil(Math.abs(min)/range*(this.numberTicks-1));
var ntmax=this.numberTicks-1-ntmin;
ti=Math.max(Math.abs(min/ntmin),Math.abs(max/ntmax));
temp=Math.pow(10,Math.abs(Math.floor(Math.log(ti)/Math.LN10)));
this.tickInterval=Math.ceil(ti/temp)*temp;
this.max=this.tickInterval*ntmax;
this.min=-this.tickInterval*ntmin;
}else{if(this.numberTicks==null){if(this.tickInterval){this.numberTicks=3+Math.ceil(range/this.tickInterval);
}else{this.numberTicks=2+Math.ceil((dim-(this.tickSpacing-1))/this.tickSpacing);
}}if(this.tickInterval==null){ti=range/(this.numberTicks-1);
if(ti<1){temp=Math.pow(10,Math.abs(Math.floor(Math.log(ti)/Math.LN10)));
}else{temp=1;
}this.tickInterval=Math.ceil(ti*temp*this.pad)/temp;
}else{temp=1/this.tickInterval;
}rrange=this.tickInterval*(this.numberTicks-1);
margin=(rrange-range)/2;
if(this.min==null){this.min=Math.floor(temp*(min-margin))/temp;
}if(this.max==null){this.max=this.min+rrange;
}}}}else{rmin=(this.min!=null)?this.min:min-range*(this.padMin-1);
rmax=(this.max!=null)?this.max:max+range*(this.padMax-1);
this.min=rmin;
this.max=rmax;
range=this.max-this.min;
if(this.numberTicks==null){if(this.tickInterval!=null){this.numberTicks=Math.ceil((this.max-this.min)/this.tickInterval)+1;
this.max=this.min+this.tickInterval*(this.numberTicks-1);
}else{if(dim>100){this.numberTicks=parseInt(3+(dim-100)/75,10);
}else{this.numberTicks=2;
}}}if(this.tickInterval==null){this.tickInterval=range/(this.numberTicks-1);
}}for(var i=0;
i<this.numberTicks;
i++){tt=this.min+i*this.tickInterval;
var t=new this.tickRenderer(this.tickOptions);
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(tt,this.name);
this._ticks.push(t);
}}};
$.jqplot.LinearAxisRenderer.prototype.resetTickValues=function(opts){if($.isArray(opts)&&opts.length==this._ticks.length){var t;
for(var i=0;
i<opts.length;
i++){t=this._ticks[i];
t.value=opts[i];
t.label=t.formatter(t.formatString,opts[i]);
t.label=t.prefix+t.label;
t._elem.html(t.label);
}t=null;
this.min=$.jqplot.arrayMin(opts);
this.max=$.jqplot.arrayMax(opts);
this.pack();
}};
$.jqplot.LinearAxisRenderer.prototype.pack=function(pos,offsets){pos=pos||{};
offsets=offsets||this._offsets;
var ticks=this._ticks;
var max=this.max;
var min=this.min;
var offmax=offsets.max;
var offmin=offsets.min;
var lshow=(this._label==null)?false:this._label.show;
for(var p in pos){this._elem.css(p,pos[p]);
}this._offsets=offsets;
var pixellength=offmax-offmin;
var unitlength=max-min;
if(this.breakPoints){unitlength=unitlength-this.breakPoints[1]+this.breakPoints[0];
this.p2u=function(p){return(p-offmin)*unitlength/pixellength+min;
};
this.u2p=function(u){if(u>this.breakPoints[0]&&u<this.breakPoints[1]){u=this.breakPoints[0];
}if(u<=this.breakPoints[0]){return(u-min)*pixellength/unitlength+offmin;
}else{return(u-this.breakPoints[1]+this.breakPoints[0]-min)*pixellength/unitlength+offmin;
}};
if(this.name.charAt(0)=="x"){this.series_u2p=function(u){if(u>this.breakPoints[0]&&u<this.breakPoints[1]){u=this.breakPoints[0];
}if(u<=this.breakPoints[0]){return(u-min)*pixellength/unitlength;
}else{return(u-this.breakPoints[1]+this.breakPoints[0]-min)*pixellength/unitlength;
}};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}else{this.series_u2p=function(u){if(u>this.breakPoints[0]&&u<this.breakPoints[1]){u=this.breakPoints[0];
}if(u>=this.breakPoints[1]){return(u-max)*pixellength/unitlength;
}else{return(u+this.breakPoints[1]-this.breakPoints[0]-max)*pixellength/unitlength;
}};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}}else{this.p2u=function(p){return(p-offmin)*unitlength/pixellength+min;
};
this.u2p=function(u){return(u-min)*pixellength/unitlength+offmin;
};
if(this.name=="xaxis"||this.name=="x2axis"){this.series_u2p=function(u){return(u-min)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}else{this.series_u2p=function(u){return(u-max)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}}if(this.show){if(this.name=="xaxis"||this.name=="x2axis"){for(var i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="xaxis")?1:-1;
switch(t.labelPosition){case"auto":if(temp*t.angle<0){shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
}else{shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
}break;
case"end":shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
case"start":shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
break;
case"middle":shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
default:shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
}}else{shim=-t.getWidth()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("left",val);
t.pack();
}}if(lshow){var w=this._label._elem.outerWidth(true);
this._label._elem.css("left",offmin+pixellength/2-w/2+"px");
if(this.name=="xaxis"){this._label._elem.css("bottom","0px");
}else{this._label._elem.css("top","0px");
}this._label.pack();
}}else{for(var i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="yaxis")?1:-1;
switch(t.labelPosition){case"auto":case"end":if(temp*t.angle<0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"start":if(t.angle>0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"middle":shim=-t.getHeight()/2;
break;
default:shim=-t.getHeight()/2;
break;
}}else{shim=-t.getHeight()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("top",val);
t.pack();
}}if(lshow){var h=this._label._elem.outerHeight(true);
this._label._elem.css("top",offmax-pixellength/2-h/2+"px");
if(this.name=="yaxis"){this._label._elem.css("left","0px");
}else{this._label._elem.css("right","0px");
}this._label.pack();
}}}ticks=null;
};
function bestFormatString(interval){var fstr;
interval=Math.abs(interval);
if(interval>=10){fstr="%d";
}else{if(interval>1){if(interval===parseInt(interval,10)){fstr="%d";
}else{fstr="%.1f";
}}else{var expv=-Math.floor(Math.log(interval)/Math.LN10);
fstr="%."+expv+"f";
}}return fstr;
}var _factors=[0.1,0.2,0.3,0.4,0.5,0.8,1,2,3,4,5];
var _getLowerFactor=function(f){var i=_factors.indexOf(f);
if(i>0){return _factors[i-1];
}else{return _factors[_factors.length-1]/100;
}};
var _getHigherFactor=function(f){var i=_factors.indexOf(f);
if(i<_factors.length-1){return _factors[i+1];
}else{return _factors[0]*100;
}};
function bestConstrainedInterval(min,max,nttarget){var low=Math.floor(nttarget/2);
var hi=Math.ceil(nttarget*1.5);
var badness=Number.MAX_VALUE;
var r=(max-min);
var temp;
var sd;
var bestNT;
var fsd;
var fs;
var gsf=$.jqplot.getSignificantFigures;
var currentNT;
var bestPrec;
for(var i=0,l=hi-low+1;
i<l;
i++){currentNT=low+i;
temp=r/(currentNT-1);
sd=gsf(temp);
temp=Math.abs(nttarget-currentNT)+sd.digitsRight;
if(temp<badness){badness=temp;
bestNT=currentNT;
bestPrec=sd.digitsRight;
}else{if(temp===badness){if(sd.digitsRight<bestPrec){bestNT=currentNT;
bestPrec=sd.digitsRight;
}}}}fsd=Math.max(bestPrec,Math.max(gsf(min).digitsRight,gsf(max).digitsRight));
if(fsd===0){fs="%d";
}else{fs="%."+fsd+"f";
}temp=r/(bestNT-1);
return[min,max,bestNT,fs,temp];
}function bestInterval(range,numberTicks){numberTicks=numberTicks||7;
var minimum=range/(numberTicks-1);
var magnitude=Math.pow(10,Math.floor(Math.log(minimum)/Math.LN10));
var residual=minimum/magnitude;
var interval;
if(magnitude<1){if(residual>5){interval=10*magnitude;
}else{if(residual>2){interval=5*magnitude;
}else{if(residual>1){interval=2*magnitude;
}else{interval=magnitude;
}}}}else{if(residual>5){interval=10*magnitude;
}else{if(residual>4){interval=5*magnitude;
}else{if(residual>3){interval=4*magnitude;
}else{if(residual>2){interval=3*magnitude;
}else{if(residual>1){interval=2*magnitude;
}else{interval=magnitude;
}}}}}}return interval;
}function bestLinearInterval(range,scalefact){scalefact=scalefact||1;
var expv=Math.floor(Math.log(range)/Math.LN10);
var magnitude=Math.pow(10,expv);
var f=range/magnitude;
var fact;
f=f/scalefact;
if(f<=0.38){fact=0.1;
}else{if(f<=1.6){fact=0.2;
}else{if(f<=4){fact=0.5;
}else{if(f<=8){fact=1;
}else{if(f<=16){fact=2;
}else{fact=5;
}}}}}return fact*magnitude;
}function bestLinearComponents(range,scalefact){var expv=Math.floor(Math.log(range)/Math.LN10);
var magnitude=Math.pow(10,expv);
var f=range/magnitude;
var interval;
var fact;
f=f/scalefact;
if(f<=0.38){fact=0.1;
}else{if(f<=1.6){fact=0.2;
}else{if(f<=4){fact=0.5;
}else{if(f<=8){fact=1;
}else{if(f<=16){fact=2;
}else{fact=5;
}}}}}interval=fact*magnitude;
return[interval,fact,magnitude];
}$.jqplot.LinearTickGenerator=function(axis_min,axis_max,scalefact,numberTicks){if(axis_min===axis_max){axis_max=(axis_max)?0:1;
}scalefact=scalefact||1;
if(axis_max<axis_min){var a=axis_max;
axis_max=axis_min;
axis_min=a;
}var r=[];
var ss=bestLinearInterval(axis_max-axis_min,scalefact);
if(numberTicks==null){r[0]=Math.floor(axis_min/ss)*ss;
r[1]=Math.ceil(axis_max/ss)*ss;
r[2]=Math.round((r[1]-r[0])/ss+1);
r[3]=bestFormatString(ss);
r[4]=ss;
}else{var tempr=[];
tempr[0]=Math.floor(axis_min/ss)*ss;
tempr[1]=Math.ceil(axis_max/ss)*ss;
tempr[2]=Math.round((tempr[1]-tempr[0])/ss+1);
tempr[3]=bestFormatString(ss);
tempr[4]=ss;
if(tempr[2]===numberTicks){r=tempr;
}else{var newti=bestInterval(tempr[1]-tempr[0],numberTicks);
r[0]=tempr[0];
r[2]=numberTicks;
r[4]=newti;
r[3]=bestFormatString(newti);
r[1]=r[0]+(r[2]-1)*r[4];
}}return r;
};
$.jqplot.LinearTickGenerator.bestLinearInterval=bestLinearInterval;
$.jqplot.LinearTickGenerator.bestInterval=bestInterval;
$.jqplot.LinearTickGenerator.bestLinearComponents=bestLinearComponents;
$.jqplot.LinearTickGenerator.bestConstrainedInterval=bestConstrainedInterval;
$.jqplot.ShadowRenderer=function(options){this.angle=45;
this.offset=1;
this.alpha=0.07;
this.lineWidth=1.5;
this.lineJoin="miter";
this.lineCap="round";
this.closePath=false;
this.fill=false;
this.depth=3;
this.strokeStyle="rgba(0,0,0,0.1)";
this.isarc=false;
$.extend(true,this,options);
};
$.jqplot.ShadowRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.ShadowRenderer.prototype.draw=function(ctx,points,options){ctx.save();
var opts=(options!=null)?options:{};
var fill=(opts.fill!=null)?opts.fill:this.fill;
var fillRect=(opts.fillRect!=null)?opts.fillRect:this.fillRect;
var closePath=(opts.closePath!=null)?opts.closePath:this.closePath;
var offset=(opts.offset!=null)?opts.offset:this.offset;
var alpha=(opts.alpha!=null)?opts.alpha:this.alpha;
var depth=(opts.depth!=null)?opts.depth:this.depth;
var isarc=(opts.isarc!=null)?opts.isarc:this.isarc;
var linePattern=(opts.linePattern!=null)?opts.linePattern:this.linePattern;
ctx.lineWidth=(opts.lineWidth!=null)?opts.lineWidth:this.lineWidth;
ctx.lineJoin=(opts.lineJoin!=null)?opts.lineJoin:this.lineJoin;
ctx.lineCap=(opts.lineCap!=null)?opts.lineCap:this.lineCap;
ctx.strokeStyle=opts.strokeStyle||this.strokeStyle||"rgba(0,0,0,"+alpha+")";
ctx.fillStyle=opts.fillStyle||this.fillStyle||"rgba(0,0,0,"+alpha+")";
for(var j=0;
j<depth;
j++){var ctxPattern=$.jqplot.LinePattern(ctx,linePattern);
ctx.translate(Math.cos(this.angle*Math.PI/180)*offset,Math.sin(this.angle*Math.PI/180)*offset);
ctxPattern.beginPath();
if(isarc){ctx.arc(points[0],points[1],points[2],points[3],points[4],true);
}else{if(fillRect){if(fillRect){ctx.fillRect(points[0],points[1],points[2],points[3]);
}}else{if(points&&points.length){var move=true;
for(var i=0;
i<points.length;
i++){if(points[i][0]!=null&&points[i][1]!=null){if(move){ctxPattern.moveTo(points[i][0],points[i][1]);
move=false;
}else{ctxPattern.lineTo(points[i][0],points[i][1]);
}}else{move=true;
}}}}}if(closePath){ctxPattern.closePath();
}if(fill){ctx.fill();
}else{ctx.stroke();
}}ctx.restore();
};
$.jqplot.ShapeRenderer=function(options){this.lineWidth=1.5;
this.linePattern="solid";
this.lineJoin="miter";
this.lineCap="round";
this.closePath=true;
this.fill=true;
this.isarc=false;
this.fillRect=false;
this.strokeRect=false;
this.clearRect=false;
this.strokeStyle="#999999";
this.fillStyle="#999999";
$.extend(true,this,options);
};
$.jqplot.ShapeRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.ShapeRenderer.prototype.draw=function(ctx,points,options){ctx.save();
var opts=(options!=null)?options:{};
var fill=(opts.fill!=null)?opts.fill:this.fill;
var closePath=(opts.closePath!=null)?opts.closePath:this.closePath;
var fillRect=(opts.fillRect!=null)?opts.fillRect:this.fillRect;
var strokeRect=(opts.strokeRect!=null)?opts.strokeRect:this.strokeRect;
var clearRect=(opts.clearRect!=null)?opts.clearRect:this.clearRect;
var isarc=(opts.isarc!=null)?opts.isarc:this.isarc;
var linePattern=(opts.linePattern!=null)?opts.linePattern:this.linePattern;
var ctxPattern=$.jqplot.LinePattern(ctx,linePattern);
ctx.lineWidth=opts.lineWidth||this.lineWidth;
ctx.lineJoin=opts.lineJoin||this.lineJoin;
ctx.lineCap=opts.lineCap||this.lineCap;
ctx.strokeStyle=(opts.strokeStyle||opts.color)||this.strokeStyle;
ctx.fillStyle=opts.fillStyle||this.fillStyle;
ctx.beginPath();
if(isarc){ctx.arc(points[0],points[1],points[2],points[3],points[4],true);
if(closePath){ctx.closePath();
}if(fill){ctx.fill();
}else{ctx.stroke();
}ctx.restore();
return;
}else{if(clearRect){ctx.clearRect(points[0],points[1],points[2],points[3]);
ctx.restore();
return;
}else{if(fillRect||strokeRect){if(fillRect){ctx.fillRect(points[0],points[1],points[2],points[3]);
}if(strokeRect){ctx.strokeRect(points[0],points[1],points[2],points[3]);
ctx.restore();
return;
}}else{if(points&&points.length){var move=true;
for(var i=0;
i<points.length;
i++){if(points[i][0]!=null&&points[i][1]!=null){if(move){ctxPattern.moveTo(points[i][0],points[i][1]);
move=false;
}else{ctxPattern.lineTo(points[i][0],points[i][1]);
}}else{move=true;
}}if(closePath){ctxPattern.closePath();
}if(fill){ctx.fill();
}else{ctx.stroke();
}}}}}ctx.restore();
};
$.jqplot.TableLegendRenderer=function(){};
$.jqplot.TableLegendRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.TableLegendRenderer.prototype.addrow=function(label,color,pad,reverse){var rs=(pad)?this.rowSpacing+"px":"0px";
var tr;
var td;
var elem;
var div0;
var div1;
elem=document.createElement("tr");
tr=$(elem);
tr.addClass("jqplot-table-legend");
elem=null;
if(reverse){tr.prependTo(this._elem);
}else{tr.appendTo(this._elem);
}if(this.showSwatches){td=$(document.createElement("td"));
td.addClass("jqplot-table-legend jqplot-table-legend-swatch");
td.css({textAlign:"center",paddingTop:rs});
div0=$(document.createElement("div"));
div0.addClass("jqplot-table-legend-swatch-outline");
div1=$(document.createElement("div"));
div1.addClass("jqplot-table-legend-swatch");
div1.css({backgroundColor:color,borderColor:color});
tr.append(td.append(div0.append(div1)));
}if(this.showLabels){td=$(document.createElement("td"));
td.addClass("jqplot-table-legend jqplot-table-legend-label");
td.css("paddingTop",rs);
tr.append(td);
if(this.escapeHtml){td.text(label);
}else{td.html(label);
}}td=null;
div0=null;
div1=null;
tr=null;
elem=null;
};
$.jqplot.TableLegendRenderer.prototype.draw=function(){if(this._elem){this._elem.emptyForce();
this._elem=null;
}if(this.show){var series=this._series;
var elem=document.createElement("table");
this._elem=$(elem);
this._elem.addClass("jqplot-table-legend");
var ss={position:"absolute"};
if(this.background){ss.background=this.background;
}if(this.border){ss.border=this.border;
}if(this.fontSize){ss.fontSize=this.fontSize;
}if(this.fontFamily){ss.fontFamily=this.fontFamily;
}if(this.textColor){ss.textColor=this.textColor;
}if(this.marginTop!=null){ss.marginTop=this.marginTop;
}if(this.marginBottom!=null){ss.marginBottom=this.marginBottom;
}if(this.marginLeft!=null){ss.marginLeft=this.marginLeft;
}if(this.marginRight!=null){ss.marginRight=this.marginRight;
}var pad=false,reverse=false,s;
for(var i=0;
i<series.length;
i++){s=series[i];
if(s._stack||s.renderer.constructor==$.jqplot.BezierCurveRenderer){reverse=true;
}if(s.show&&s.showLabel){var lt=this.labels[i]||s.label.toString();
if(lt){var color=s.color;
if(reverse&&i<series.length-1){pad=true;
}else{if(reverse&&i==series.length-1){pad=false;
}}this.renderer.addrow.call(this,lt,color,pad,reverse);
pad=true;
}for(var j=0;
j<$.jqplot.addLegendRowHooks.length;
j++){var item=$.jqplot.addLegendRowHooks[j].call(this,s);
if(item){this.renderer.addrow.call(this,item.label,item.color,pad);
pad=true;
}}lt=null;
}}}return this._elem;
};
$.jqplot.TableLegendRenderer.prototype.pack=function(offsets){if(this.show){if(this.placement=="insideGrid"){switch(this.location){case"nw":var a=offsets.left;
var b=offsets.top;
this._elem.css("left",a);
this._elem.css("top",b);
break;
case"n":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
var b=offsets.top;
this._elem.css("left",a);
this._elem.css("top",b);
break;
case"ne":var a=offsets.right;
var b=offsets.top;
this._elem.css({right:a,top:b});
break;
case"e":var a=offsets.right;
var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({right:a,top:b});
break;
case"se":var a=offsets.right;
var b=offsets.bottom;
this._elem.css({right:a,bottom:b});
break;
case"s":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
var b=offsets.bottom;
this._elem.css({left:a,bottom:b});
break;
case"sw":var a=offsets.left;
var b=offsets.bottom;
this._elem.css({left:a,bottom:b});
break;
case"w":var a=offsets.left;
var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({left:a,top:b});
break;
default:var a=offsets.right;
var b=offsets.bottom;
this._elem.css({right:a,bottom:b});
break;
}}else{if(this.placement=="outside"){switch(this.location){case"nw":var a=this._plotDimensions.width-offsets.left;
var b=offsets.top;
this._elem.css("right",a);
this._elem.css("top",b);
break;
case"n":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
var b=this._plotDimensions.height-offsets.top;
this._elem.css("left",a);
this._elem.css("bottom",b);
break;
case"ne":var a=this._plotDimensions.width-offsets.right;
var b=offsets.top;
this._elem.css({left:a,top:b});
break;
case"e":var a=this._plotDimensions.width-offsets.right;
var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({left:a,top:b});
break;
case"se":var a=this._plotDimensions.width-offsets.right;
var b=offsets.bottom;
this._elem.css({left:a,bottom:b});
break;
case"s":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
var b=this._plotDimensions.height-offsets.bottom;
this._elem.css({left:a,top:b});
break;
case"sw":var a=this._plotDimensions.width-offsets.left;
var b=offsets.bottom;
this._elem.css({right:a,bottom:b});
break;
case"w":var a=this._plotDimensions.width-offsets.left;
var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({right:a,top:b});
break;
default:var a=offsets.right;
var b=offsets.bottom;
this._elem.css({right:a,bottom:b});
break;
}}else{switch(this.location){case"nw":this._elem.css({left:0,top:offsets.top});
break;
case"n":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
this._elem.css({left:a,top:offsets.top});
break;
case"ne":this._elem.css({right:0,top:offsets.top});
break;
case"e":var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({right:offsets.right,top:b});
break;
case"se":this._elem.css({right:offsets.right,bottom:offsets.bottom});
break;
case"s":var a=(offsets.left+(this._plotDimensions.width-offsets.right))/2-this.getWidth()/2;
this._elem.css({left:a,bottom:offsets.bottom});
break;
case"sw":this._elem.css({left:offsets.left,bottom:offsets.bottom});
break;
case"w":var b=(offsets.top+(this._plotDimensions.height-offsets.bottom))/2-this.getHeight()/2;
this._elem.css({left:offsets.left,top:b});
break;
default:this._elem.css({right:offsets.right,bottom:offsets.bottom});
break;
}}}}};
$.jqplot.ThemeEngine=function(){this.themes={};
this.activeTheme=null;
};
$.jqplot.ThemeEngine.prototype.init=function(){var th=new $.jqplot.Theme({_name:"Default"});
var n,i,nn;
for(n in th.target){if(n=="textColor"){th.target[n]=this.target.css("color");
}else{th.target[n]=this.target.css(n);
}}if(this.title.show&&this.title._elem){for(n in th.title){if(n=="textColor"){th.title[n]=this.title._elem.css("color");
}else{th.title[n]=this.title._elem.css(n);
}}}for(n in th.grid){th.grid[n]=this.grid[n];
}if(th.grid.backgroundColor==null&&this.grid.background!=null){th.grid.backgroundColor=this.grid.background;
}if(this.legend.show&&this.legend._elem){for(n in th.legend){if(n=="textColor"){th.legend[n]=this.legend._elem.css("color");
}else{th.legend[n]=this.legend._elem.css(n);
}}}var s;
for(i=0;
i<this.series.length;
i++){s=this.series[i];
if(s.renderer.constructor==$.jqplot.LineRenderer){th.series.push(new LineSeriesProperties());
}else{if(s.renderer.constructor==$.jqplot.BarRenderer){th.series.push(new BarSeriesProperties());
}else{if(s.renderer.constructor==$.jqplot.PieRenderer){th.series.push(new PieSeriesProperties());
}else{if(s.renderer.constructor==$.jqplot.DonutRenderer){th.series.push(new DonutSeriesProperties());
}else{if(s.renderer.constructor==$.jqplot.FunnelRenderer){th.series.push(new FunnelSeriesProperties());
}else{if(s.renderer.constructor==$.jqplot.MeterGaugeRenderer){th.series.push(new MeterSeriesProperties());
}else{th.series.push({});
}}}}}}for(n in th.series[i]){th.series[i][n]=s[n];
}}var a,ax;
for(n in this.axes){ax=this.axes[n];
a=th.axes[n]=new AxisProperties();
a.borderColor=ax.borderColor;
a.borderWidth=ax.borderWidth;
if(ax._ticks&&ax._ticks[0]){for(nn in a.ticks){if(ax._ticks[0].hasOwnProperty(nn)){a.ticks[nn]=ax._ticks[0][nn];
}else{if(ax._ticks[0]._elem){a.ticks[nn]=ax._ticks[0]._elem.css(nn);
}}}}if(ax._label&&ax._label.show){for(nn in a.label){if(ax._label[nn]){a.label[nn]=ax._label[nn];
}else{if(ax._label._elem){if(nn=="textColor"){a.label[nn]=ax._label._elem.css("color");
}else{a.label[nn]=ax._label._elem.css(nn);
}}}}}}this.themeEngine._add(th);
this.themeEngine.activeTheme=this.themeEngine.themes[th._name];
};
$.jqplot.ThemeEngine.prototype.get=function(name){if(!name){return this.activeTheme;
}else{return this.themes[name];
}};
function numericalOrder(a,b){return a-b;
}$.jqplot.ThemeEngine.prototype.getThemeNames=function(){var tn=[];
for(var n in this.themes){tn.push(n);
}return tn.sort(numericalOrder);
};
$.jqplot.ThemeEngine.prototype.getThemes=function(){var tn=[];
var themes=[];
for(var n in this.themes){tn.push(n);
}tn.sort(numericalOrder);
for(var i=0;
i<tn.length;
i++){themes.push(this.themes[tn[i]]);
}return themes;
};
$.jqplot.ThemeEngine.prototype.activate=function(plot,name){var redrawPlot=false;
if(!name&&this.activeTheme&&this.activeTheme._name){name=this.activeTheme._name;
}if(!this.themes.hasOwnProperty(name)){throw new Error("No theme of that name");
}else{var th=this.themes[name];
this.activeTheme=th;
var val,checkBorderColor=false,checkBorderWidth=false;
var arr=["xaxis","x2axis","yaxis","y2axis"];
for(i=0;
i<arr.length;
i++){var ax=arr[i];
if(th.axesStyles.borderColor!=null){plot.axes[ax].borderColor=th.axesStyles.borderColor;
}if(th.axesStyles.borderWidth!=null){plot.axes[ax].borderWidth=th.axesStyles.borderWidth;
}}for(var axname in plot.axes){var axis=plot.axes[axname];
if(axis.show){var thaxis=th.axes[axname]||{};
var thaxstyle=th.axesStyles;
var thax=$.jqplot.extend(true,{},thaxis,thaxstyle);
val=(th.axesStyles.borderColor!=null)?th.axesStyles.borderColor:thax.borderColor;
if(thax.borderColor!=null){axis.borderColor=thax.borderColor;
redrawPlot=true;
}val=(th.axesStyles.borderWidth!=null)?th.axesStyles.borderWidth:thax.borderWidth;
if(thax.borderWidth!=null){axis.borderWidth=thax.borderWidth;
redrawPlot=true;
}if(axis._ticks&&axis._ticks[0]){for(var nn in thax.ticks){val=thax.ticks[nn];
if(val!=null){axis.tickOptions[nn]=val;
axis._ticks=[];
redrawPlot=true;
}}}if(axis._label&&axis._label.show){for(var nn in thax.label){val=thax.label[nn];
if(val!=null){axis.labelOptions[nn]=val;
redrawPlot=true;
}}}}}for(var n in th.grid){if(th.grid[n]!=null){plot.grid[n]=th.grid[n];
}}if(!redrawPlot){plot.grid.draw();
}if(plot.legend.show){for(n in th.legend){if(th.legend[n]!=null){plot.legend[n]=th.legend[n];
}}}if(plot.title.show){for(n in th.title){if(th.title[n]!=null){plot.title[n]=th.title[n];
}}}var i;
for(i=0;
i<th.series.length;
i++){var opts={};
var redrawSeries=false;
for(n in th.series[i]){val=(th.seriesStyles[n]!=null)?th.seriesStyles[n]:th.series[i][n];
if(val!=null){opts[n]=val;
if(n=="color"){plot.series[i].renderer.shapeRenderer.fillStyle=val;
plot.series[i].renderer.shapeRenderer.strokeStyle=val;
plot.series[i][n]=val;
}else{if((n=="lineWidth")||(n=="linePattern")){plot.series[i].renderer.shapeRenderer[n]=val;
plot.series[i][n]=val;
}else{if(n=="markerOptions"){merge(plot.series[i].markerOptions,val);
merge(plot.series[i].markerRenderer,val);
}else{plot.series[i][n]=val;
}}}redrawPlot=true;
}}}if(redrawPlot){plot.target.empty();
plot.draw();
}for(n in th.target){if(th.target[n]!=null){plot.target.css(n,th.target[n]);
}}}};
$.jqplot.ThemeEngine.prototype._add=function(theme,name){if(name){theme._name=name;
}if(!theme._name){theme._name=Date.parse(new Date());
}if(!this.themes.hasOwnProperty(theme._name)){this.themes[theme._name]=theme;
}else{throw new Error("jqplot.ThemeEngine Error: Theme already in use");
}};
$.jqplot.ThemeEngine.prototype.remove=function(name){if(name=="Default"){return false;
}return;
delete this.themes[name];
};
$.jqplot.ThemeEngine.prototype.newTheme=function(name,obj){if(typeof(name)=="object"){obj=obj||name;
name=null;
}if(obj&&obj._name){name=obj._name;
}else{name=name||Date.parse(new Date());
}var th=this.copy(this.themes.Default._name,name);
$.jqplot.extend(th,obj);
return th;
};
function clone(obj){if(obj==null||typeof(obj)!="object"){return obj;
}var temp=new obj.constructor();
for(var key in obj){temp[key]=clone(obj[key]);
}return temp;
}$.jqplot.clone=clone;
function merge(obj1,obj2){if(obj2==null||typeof(obj2)!="object"){return;
}for(var key in obj2){if(key=="highlightColors"){obj1[key]=clone(obj2[key]);
}if(obj2[key]!=null&&typeof(obj2[key])=="object"){if(!obj1.hasOwnProperty(key)){obj1[key]={};
}merge(obj1[key],obj2[key]);
}else{obj1[key]=obj2[key];
}}}$.jqplot.merge=merge;
$.jqplot.extend=function(){var target=arguments[0]||{},i=1,length=arguments.length,deep=false,options;
if(typeof target==="boolean"){deep=target;
target=arguments[1]||{};
i=2;
}if(typeof target!=="object"&&!toString.call(target)==="[object Function]"){target={};
}for(;
i<length;
i++){if((options=arguments[i])!=null){for(var name in options){var src=target[name],copy=options[name];
if(target===copy){continue;
}if(deep&&copy&&typeof copy==="object"&&!copy.nodeType){target[name]=$.jqplot.extend(deep,src||(copy.length!=null?[]:{}),copy);
}else{if(copy!==undefined){target[name]=copy;
}}}}}return target;
};
$.jqplot.ThemeEngine.prototype.rename=function(oldName,newName){if(oldName=="Default"||newName=="Default"){throw new Error("jqplot.ThemeEngine Error: Cannot rename from/to Default");
}if(this.themes.hasOwnProperty(newName)){throw new Error("jqplot.ThemeEngine Error: New name already in use.");
}else{if(this.themes.hasOwnProperty(oldName)){var th=this.copy(oldName,newName);
this.remove(oldName);
return th;
}}throw new Error("jqplot.ThemeEngine Error: Old name or new name invalid");
};
$.jqplot.ThemeEngine.prototype.copy=function(sourceName,targetName,obj){if(targetName=="Default"){throw new Error("jqplot.ThemeEngine Error: Cannot copy over Default theme");
}if(!this.themes.hasOwnProperty(sourceName)){var s="jqplot.ThemeEngine Error: Source name invalid";
throw new Error(s);
}if(this.themes.hasOwnProperty(targetName)){var s="jqplot.ThemeEngine Error: Target name invalid";
throw new Error(s);
}else{var th=clone(this.themes[sourceName]);
th._name=targetName;
$.jqplot.extend(true,th,obj);
this._add(th);
return th;
}};
$.jqplot.Theme=function(name,obj){if(typeof(name)=="object"){obj=obj||name;
name=null;
}name=name||Date.parse(new Date());
this._name=name;
this.target={backgroundColor:null};
this.legend={textColor:null,fontFamily:null,fontSize:null,border:null,background:null};
this.title={textColor:null,fontFamily:null,fontSize:null,textAlign:null};
this.seriesStyles={};
this.series=[];
this.grid={drawGridlines:null,gridLineColor:null,gridLineWidth:null,backgroundColor:null,borderColor:null,borderWidth:null,shadow:null};
this.axesStyles={label:{},ticks:{}};
this.axes={};
if(typeof(obj)=="string"){this._name=obj;
}else{if(typeof(obj)=="object"){$.jqplot.extend(true,this,obj);
}}};
var AxisProperties=function(){this.borderColor=null;
this.borderWidth=null;
this.ticks=new AxisTicks();
this.label=new AxisLabel();
};
var AxisTicks=function(){this.show=null;
this.showGridline=null;
this.showLabel=null;
this.showMark=null;
this.size=null;
this.textColor=null;
this.whiteSpace=null;
this.fontSize=null;
this.fontFamily=null;
};
var AxisLabel=function(){this.textColor=null;
this.whiteSpace=null;
this.fontSize=null;
this.fontFamily=null;
this.fontWeight=null;
};
var LineSeriesProperties=function(){this.color=null;
this.lineWidth=null;
this.linePattern=null;
this.shadow=null;
this.fillColor=null;
this.showMarker=null;
this.markerOptions=new MarkerOptions();
};
var MarkerOptions=function(){this.show=null;
this.style=null;
this.lineWidth=null;
this.size=null;
this.color=null;
this.shadow=null;
};
var BarSeriesProperties=function(){this.color=null;
this.seriesColors=null;
this.lineWidth=null;
this.shadow=null;
this.barPadding=null;
this.barMargin=null;
this.barWidth=null;
this.highlightColors=null;
};
var PieSeriesProperties=function(){this.seriesColors=null;
this.padding=null;
this.sliceMargin=null;
this.fill=null;
this.shadow=null;
this.startAngle=null;
this.lineWidth=null;
this.highlightColors=null;
};
var DonutSeriesProperties=function(){this.seriesColors=null;
this.padding=null;
this.sliceMargin=null;
this.fill=null;
this.shadow=null;
this.startAngle=null;
this.lineWidth=null;
this.innerDiameter=null;
this.thickness=null;
this.ringMargin=null;
this.highlightColors=null;
};
var FunnelSeriesProperties=function(){this.color=null;
this.lineWidth=null;
this.shadow=null;
this.padding=null;
this.sectionMargin=null;
this.seriesColors=null;
this.highlightColors=null;
};
var MeterSeriesProperties=function(){this.padding=null;
this.backgroundColor=null;
this.ringColor=null;
this.tickColor=null;
this.ringWidth=null;
this.intervalColors=null;
this.intervalInnerRadius=null;
this.intervalOuterRadius=null;
this.hubRadius=null;
this.needleThickness=null;
this.needlePad=null;
};
$.fn.jqplotChildText=function(){return $(this).contents().filter(function(){return this.nodeType==3;
}).text();
};
$.fn.jqplotGetComputedFontStyle=function(){var css=window.getComputedStyle?window.getComputedStyle(this[0]):this[0].currentStyle;
var attrs=css["font-style"]?["font-style","font-weight","font-size","font-family"]:["fontStyle","fontWeight","fontSize","fontFamily"];
var style=[];
for(var i=0;
i<attrs.length;
++i){var attr=String(css[attrs[i]]);
if(attr&&attr!="normal"){style.push(attr);
}}return style.join(" ");
};
$.fn.jqplotToImageCanvas=function(options){options=options||{};
var x_offset=(options.x_offset==null)?0:options.x_offset;
var y_offset=(options.y_offset==null)?0:options.y_offset;
var backgroundColor=(options.backgroundColor==null)?"rgb(255,255,255)":options.backgroundColor;
if($(this).width()==0||$(this).height()==0){return null;
}if(!$.jqplot.support_canvas){return null;
}var newCanvas=document.createElement("canvas");
var h=$(this).outerHeight(true);
var w=$(this).outerWidth(true);
var offs=$(this).offset();
var plotleft=offs.left;
var plottop=offs.top;
var transx=0,transy=0;
var clses=["jqplot-table-legend","jqplot-xaxis-tick","jqplot-x2axis-tick","jqplot-yaxis-tick","jqplot-y2axis-tick","jqplot-y3axis-tick","jqplot-y4axis-tick","jqplot-y5axis-tick","jqplot-y6axis-tick","jqplot-y7axis-tick","jqplot-y8axis-tick","jqplot-y9axis-tick","jqplot-xaxis-label","jqplot-x2axis-label","jqplot-yaxis-label","jqplot-y2axis-label","jqplot-y3axis-label","jqplot-y4axis-label","jqplot-y5axis-label","jqplot-y6axis-label","jqplot-y7axis-label","jqplot-y8axis-label","jqplot-y9axis-label"];
var temptop,templeft,tempbottom,tempright;
for(var i in clses){$(this).find("."+clses[i]).each(function(){temptop=$(this).offset().top-plottop;
templeft=$(this).offset().left-plotleft;
tempright=templeft+$(this).outerWidth(true)+transx;
tempbottom=temptop+$(this).outerHeight(true)+transy;
if(templeft<-transx){w=w-transx-templeft;
transx=-templeft;
}if(temptop<-transy){h=h-transy-temptop;
transy=-temptop;
}if(tempright>w){w=tempright;
}if(tempbottom>h){h=tempbottom;
}});
}newCanvas.width=w+Number(x_offset);
newCanvas.height=h+Number(y_offset);
var newContext=newCanvas.getContext("2d");
newContext.save();
newContext.fillStyle=backgroundColor;
newContext.fillRect(0,0,newCanvas.width,newCanvas.height);
newContext.restore();
newContext.translate(transx,transy);
newContext.textAlign="left";
newContext.textBaseline="top";
function getLineheight(el){var lineheight=parseInt($(el).css("line-height"),10);
if(isNaN(lineheight)){lineheight=parseInt($(el).css("font-size"),10)*1.2;
}return lineheight;
}function writeWrappedText(el,context,text,left,top,canvasWidth){var lineheight=getLineheight(el);
var tagwidth=$(el).innerWidth();
var tagheight=$(el).innerHeight();
var words=text.split(/\s+/);
var wl=words.length;
var w="";
var breaks=[];
var temptop=top;
var templeft=left;
for(var i=0;
i<wl;
i++){w+=words[i];
if(context.measureText(w).width>tagwidth){breaks.push(i);
w="";
}}if(breaks.length===0){if($(el).css("textAlign")==="center"){templeft=left+(canvasWidth-context.measureText(w).width)/2-transx;
}context.fillText(text,templeft,top);
}else{w=words.slice(0,breaks[0]).join(" ");
if($(el).css("textAlign")==="center"){templeft=left+(canvasWidth-context.measureText(w).width)/2-transx;
}context.fillText(w,templeft,temptop);
temptop+=lineheight;
for(var i=1,l=breaks.length;
i<l;
i++){w=words.slice(breaks[i-1],breaks[i]).join(" ");
if($(el).css("textAlign")==="center"){templeft=left+(canvasWidth-context.measureText(w).width)/2-transx;
}context.fillText(w,templeft,temptop);
temptop+=lineheight;
}w=words.slice(breaks[i-1],words.length).join(" ");
if($(el).css("textAlign")==="center"){templeft=left+(canvasWidth-context.measureText(w).width)/2-transx;
}context.fillText(w,templeft,temptop);
}}function _jqpToImage(el,x_offset,y_offset){var tagname=el.tagName.toLowerCase();
var p=$(el).position();
var css=window.getComputedStyle?window.getComputedStyle(el):el.currentStyle;
var left=x_offset+p.left+parseInt(css.marginLeft,10)+parseInt(css.borderLeftWidth,10)+parseInt(css.paddingLeft,10);
var top=y_offset+p.top+parseInt(css.marginTop,10)+parseInt(css.borderTopWidth,10)+parseInt(css.paddingTop,10);
var w=newCanvas.width;
if((tagname=="div"||tagname=="span")&&!$(el).hasClass("jqplot-highlighter-tooltip")){$(el).children().each(function(){_jqpToImage(this,left,top);
});
var text=$(el).jqplotChildText();
if(text){newContext.font=$(el).jqplotGetComputedFontStyle();
newContext.fillStyle=$(el).css("color");
writeWrappedText(el,newContext,text,left,top,w);
}}else{if(tagname==="table"&&$(el).hasClass("jqplot-table-legend")){newContext.strokeStyle=$(el).css("border-top-color");
newContext.fillStyle=$(el).css("background-color");
newContext.fillRect(left,top,$(el).innerWidth(),$(el).innerHeight());
if(parseInt($(el).css("border-top-width"),10)>0){newContext.strokeRect(left,top,$(el).innerWidth(),$(el).innerHeight());
}$(el).find("div.jqplot-table-legend-swatch-outline").each(function(){var elem=$(this);
newContext.strokeStyle=elem.css("border-top-color");
var l=left+elem.position().left;
var t=top+elem.position().top;
newContext.strokeRect(l,t,elem.innerWidth(),elem.innerHeight());
l+=parseInt(elem.css("padding-left"),10);
t+=parseInt(elem.css("padding-top"),10);
var h=elem.innerHeight()-2*parseInt(elem.css("padding-top"),10);
var w=elem.innerWidth()-2*parseInt(elem.css("padding-left"),10);
var swatch=elem.children("div.jqplot-table-legend-swatch");
newContext.fillStyle=swatch.css("background-color");
newContext.fillRect(l,t,w,h);
});
$(el).find("td.jqplot-table-legend-label").each(function(){var elem=$(this);
var l=left+elem.position().left;
var t=top+elem.position().top+parseInt(elem.css("padding-top"),10);
newContext.font=elem.jqplotGetComputedFontStyle();
newContext.fillStyle=elem.css("color");
newContext.fillText(elem.text(),l,t);
});
var elem=null;
}else{if(tagname=="canvas"){newContext.drawImage(el,left,top);
}}}}$(this).children().each(function(){_jqpToImage(this,x_offset,y_offset);
});
return newCanvas;
};
$.fn.jqplotToImageStr=function(options){var imgCanvas=$(this).jqplotToImageCanvas(options);
if(imgCanvas){return imgCanvas.toDataURL("image/png");
}else{return null;
}};
$.fn.jqplotToImageElem=function(options){var elem=document.createElement("img");
var str=$(this).jqplotToImageStr(options);
elem.src=str;
return elem;
};
$.fn.jqplotToImageElemStr=function(options){var str="<img src="+$(this).jqplotToImageStr(options)+" />";
return str;
};
$.fn.jqplotSaveImage=function(){var imgData=$(this).jqplotToImageStr({});
if(imgData){window.location.href=imgData.replace("image/png","image/octet-stream");
}};
$.fn.jqplotViewImage=function(){var imgStr=$(this).jqplotToImageElemStr({});
var imgData=$(this).jqplotToImageStr({});
if(imgStr){var w=window.open("");
w.document.open("image/png");
w.document.write(imgStr);
w.document.close();
w=null;
}};
var jsDate=function(){this.syntax=jsDate.config.syntax;
this._type="jsDate";
this.proxy=new Date();
this.options={};
this.locale=jsDate.regional.getLocale();
this.formatString="";
this.defaultCentury=jsDate.config.defaultCentury;
switch(arguments.length){case 0:break;
case 1:if(get_type(arguments[0])=="[object Object]"&&arguments[0]._type!="jsDate"){var opts=this.options=arguments[0];
this.syntax=opts.syntax||this.syntax;
this.defaultCentury=opts.defaultCentury||this.defaultCentury;
this.proxy=jsDate.createDate(opts.date);
}else{this.proxy=jsDate.createDate(arguments[0]);
}break;
default:var a=[];
for(var i=0;
i<arguments.length;
i++){a.push(arguments[i]);
}this.proxy=new Date();
this.proxy.setFullYear.apply(this.proxy,a.slice(0,3));
if(a.slice(3).length){this.proxy.setHours.apply(this.proxy,a.slice(3));
}break;
}};
jsDate.config={defaultLocale:"en",syntax:"perl",defaultCentury:1900};
jsDate.prototype.add=function(number,unit){var factor=multipliers[unit]||multipliers.day;
if(typeof factor=="number"){this.proxy.setTime(this.proxy.getTime()+(factor*number));
}else{factor.add(this,number);
}return this;
};
jsDate.prototype.addNoDST=function(number,unit){var aVal=parseFloat(number);
var rVal=null;
switch(unit.toLowerCase()){case"second":case"seconds":this.setSeconds(this.getSeconds()+aVal);
break;
case"minute":case"minutes":this.setMinutes(this.getMinutes()+aVal);
break;
case"hour":case"hours":this.setHours(this.getHours()+aVal);
break;
case"day":case"days":this.setDate(this.getDate()+aVal);
break;
case"week":case"weeks":var daysFromWeek=aVal*7;
this.setDate(this.getDate()+daysFromWeek);
break;
case"month":case"months":this.setMonth(this.getMonth()+aVal);
break;
case"year":case"years":this.setYear(this.getYear()+aVal);
break;
default:this.setMilliseconds(this.getMilliseconds()+aVal);
break;
}return this;
};
jsDate.prototype.clone=function(){return new jsDate(this.proxy.getTime());
};
jsDate.prototype.getUtcOffset=function(){return this.proxy.getTimezoneOffset()*60000;
};
jsDate.prototype.diff=function(dateObj,unit,allowDecimal){dateObj=new jsDate(dateObj);
if(dateObj===null){return null;
}var factor=multipliers[unit]||multipliers.day;
if(typeof factor=="number"){var unitDiff=(this.proxy.getTime()-dateObj.proxy.getTime())/factor;
}else{var unitDiff=factor.diff(this.proxy,dateObj.proxy);
}return(allowDecimal?unitDiff:Math[unitDiff>0?"floor":"ceil"](unitDiff));
};
jsDate.prototype.getAbbrDayName=function(){return jsDate.regional[this.locale]["dayNamesShort"][this.proxy.getDay()];
};
jsDate.prototype.getAbbrMonthName=function(){return jsDate.regional[this.locale]["monthNamesShort"][this.proxy.getMonth()];
};
jsDate.prototype.getAMPM=function(){return this.proxy.getHours()>=12?"PM":"AM";
};
jsDate.prototype.getAmPm=function(){return this.proxy.getHours()>=12?"pm":"am";
};
jsDate.prototype.getCentury=function(){return parseInt(this.proxy.getFullYear()/100,10);
};
jsDate.prototype.getDate=function(){return this.proxy.getDate();
};
jsDate.prototype.getDay=function(){return this.proxy.getDay();
};
jsDate.prototype.getDayOfWeek=function(){var dow=this.proxy.getDay();
return dow===0?7:dow;
};
jsDate.prototype.getDayOfYear=function(){var d=this.proxy;
var ms=d-new Date(""+d.getFullYear()+"/1/1 GMT");
ms+=d.getTimezoneOffset()*60000;
d=null;
return parseInt(ms/60000/60/24,10)+1;
};
jsDate.prototype.getDayName=function(){return jsDate.regional[this.locale]["dayNames"][this.proxy.getDay()];
};
jsDate.prototype.getFullWeekOfYear=function(){var d=this.proxy;
var doy=this.getDayOfYear();
var rdow=6-d.getDay();
var woy=parseInt((doy+rdow)/7,10);
return woy;
};
jsDate.prototype.getFullYear=function(){return this.proxy.getFullYear();
};
jsDate.prototype.getGmtOffset=function(){var hours=this.proxy.getTimezoneOffset()/60;
var prefix=hours<0?"+":"-";
hours=Math.abs(hours);
return prefix+addZeros(Math.floor(hours),2)+":"+addZeros((hours%1)*60,2);
};
jsDate.prototype.getHours=function(){return this.proxy.getHours();
};
jsDate.prototype.getHours12=function(){var hours=this.proxy.getHours();
return hours>12?hours-12:(hours==0?12:hours);
};
jsDate.prototype.getIsoWeek=function(){var d=this.proxy;
var woy=d.getWeekOfYear();
var dow1_1=(new Date(""+d.getFullYear()+"/1/1")).getDay();
var idow=woy+(dow1_1>4||dow1_1<=1?0:1);
if(idow==53&&(new Date(""+d.getFullYear()+"/12/31")).getDay()<4){idow=1;
}else{if(idow===0){d=new jsDate(new Date(""+(d.getFullYear()-1)+"/12/31"));
idow=d.getIsoWeek();
}}d=null;
return idow;
};
jsDate.prototype.getMilliseconds=function(){return this.proxy.getMilliseconds();
};
jsDate.prototype.getMinutes=function(){return this.proxy.getMinutes();
};
jsDate.prototype.getMonth=function(){return this.proxy.getMonth();
};
jsDate.prototype.getMonthName=function(){return jsDate.regional[this.locale]["monthNames"][this.proxy.getMonth()];
};
jsDate.prototype.getMonthNumber=function(){return this.proxy.getMonth()+1;
};
jsDate.prototype.getSeconds=function(){return this.proxy.getSeconds();
};
jsDate.prototype.getShortYear=function(){return this.proxy.getYear()%100;
};
jsDate.prototype.getTime=function(){return this.proxy.getTime();
};
jsDate.prototype.getTimezoneAbbr=function(){return this.proxy.toString().replace(/^.*\(([^)]+)\)$/,"$1");
};
jsDate.prototype.getTimezoneName=function(){var match=/(?:\((.+)\)$| ([A-Z]{3}) )/.exec(this.toString());
return match[1]||match[2]||"GMT"+this.getGmtOffset();
};
jsDate.prototype.getTimezoneOffset=function(){return this.proxy.getTimezoneOffset();
};
jsDate.prototype.getWeekOfYear=function(){var doy=this.getDayOfYear();
var rdow=7-this.getDayOfWeek();
var woy=parseInt((doy+rdow)/7,10);
return woy;
};
jsDate.prototype.getUnix=function(){return Math.round(this.proxy.getTime()/1000,0);
};
jsDate.prototype.getYear=function(){return this.proxy.getYear();
};
jsDate.prototype.next=function(unit){unit=unit||"day";
return this.clone().add(1,unit);
};
jsDate.prototype.set=function(){switch(arguments.length){case 0:this.proxy=new Date();
break;
case 1:if(get_type(arguments[0])=="[object Object]"&&arguments[0]._type!="jsDate"){var opts=this.options=arguments[0];
this.syntax=opts.syntax||this.syntax;
this.defaultCentury=opts.defaultCentury||this.defaultCentury;
this.proxy=jsDate.createDate(opts.date);
}else{this.proxy=jsDate.createDate(arguments[0]);
}break;
default:var a=[];
for(var i=0;
i<arguments.length;
i++){a.push(arguments[i]);
}this.proxy=new Date();
this.proxy.setFullYear.apply(this.proxy,a.slice(0,3));
if(a.slice(3).length){this.proxy.setHours.apply(this.proxy,a.slice(3));
}break;
}return this;
};
jsDate.prototype.setDate=function(n){this.proxy.setDate(n);
return this;
};
jsDate.prototype.setFullYear=function(){this.proxy.setFullYear.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.setHours=function(){this.proxy.setHours.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.setMilliseconds=function(n){this.proxy.setMilliseconds(n);
return this;
};
jsDate.prototype.setMinutes=function(){this.proxy.setMinutes.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.setMonth=function(){this.proxy.setMonth.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.setSeconds=function(){this.proxy.setSeconds.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.setTime=function(n){this.proxy.setTime(n);
return this;
};
jsDate.prototype.setYear=function(){this.proxy.setYear.apply(this.proxy,arguments);
return this;
};
jsDate.prototype.strftime=function(formatString){formatString=formatString||this.formatString||jsDate.regional[this.locale]["formatString"];
return jsDate.strftime(this,formatString,this.syntax);
};
jsDate.prototype.toString=function(){return this.proxy.toString();
};
jsDate.prototype.toYmdInt=function(){return(this.proxy.getFullYear()*10000)+(this.getMonthNumber()*100)+this.proxy.getDate();
};
jsDate.regional={en:{monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],formatString:"%Y-%m-%d %H:%M:%S"},fr:{monthNames:["Janvier","FÃ©vrier","Mars","Avril","Mai","Juin","Juillet","AoÃ»t","Septembre","Octobre","Novembre","DÃ©cembre"],monthNamesShort:["Jan","FÃ©v","Mar","Avr","Mai","Jun","Jul","AoÃ»","Sep","Oct","Nov","DÃ©c"],dayNames:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],dayNamesShort:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],formatString:"%Y-%m-%d %H:%M:%S"},de:{monthNames:["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthNamesShort:["Jan","Feb","MÃ¤r","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],dayNames:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],dayNamesShort:["So","Mo","Di","Mi","Do","Fr","Sa"],formatString:"%Y-%m-%d %H:%M:%S"},es:{monthNames:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],monthNamesShort:["Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"],dayNames:["Domingo","Lunes","Martes","Mi&eacute;rcoles","Jueves","Viernes","S&aacute;bado"],dayNamesShort:["Dom","Lun","Mar","Mi&eacute;","Juv","Vie","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"},ru:{monthNames:["�?¯�?½�?²�?°Ñ€ÑŒ","�?¤�?µ�?²Ñ€�?°�?»ÑŒ","�?œ�?°Ñ€Ñ‚","�?�?�?¿Ñ€�?µ�?»ÑŒ","�?œ�?°�?¹","�?˜ÑŽ�?½ÑŒ","�?˜ÑŽ�?»ÑŒ","�?�?�?²�?³ÑƒÑ�?Ñ‚","�?¡�?µ�?½Ñ‚Ñ�?�?±Ñ€ÑŒ","�?ž�?ºÑ‚Ñ�?�?±Ñ€ÑŒ","�?�?�?¾Ñ�?�?±Ñ€ÑŒ","�?�?�?µ�?º�?°�?±Ñ€ÑŒ"],monthNamesShort:["�?¯�?½�?²","�?¤�?µ�?²","�?œ�?°Ñ€","�?�?�?¿Ñ€","�?œ�?°�?¹","�?˜ÑŽ�?½","�?˜ÑŽ�?»","�?�?�?²�?³","�?¡�?µ�?½","�?ž�?ºÑ‚","�?�?�?¾Ñ�?","�?�?�?µ�?º"],dayNames:["�?²�?¾Ñ�?�?ºÑ€�?µÑ�?�?µ�?½ÑŒ�?µ","�?¿�?¾�?½�?µ�?´�?µ�?»ÑŒ�?½�?¸�?º","�?²Ñ‚�?¾Ñ€�?½�?¸�?º","Ñ�?Ñ€�?µ�?´�?°","Ñ‡�?µÑ‚�?²�?µÑ€�?³","�?¿Ñ�?Ñ‚�?½�?¸Ñ†�?°","Ñ�?Ñƒ�?±�?±�?¾Ñ‚�?°"],dayNamesShort:["�?²Ñ�?�?º","�?¿�?½�?´","�?²Ñ‚Ñ€","Ñ�?Ñ€�?´","Ñ‡Ñ‚�?²","�?¿Ñ‚�?½","Ñ�?�?±Ñ‚"],formatString:"%Y-%m-%d %H:%M:%S"},ar:{monthNames:["ÙƒØ§Ù†ÙˆÙ† Ø§Ù„Ø«Ø§Ù†ÙŠ","Ø´Ø¨Ø§Ø·","Ø¢Ø°Ø§Ø±","Ù†ÙŠØ³Ø§Ù†","Ø¢Ø°Ø§Ø±","Ø�Ø²ÙŠØ±Ø§Ù†","ØªÙ…ÙˆØ²","Ø¢Ø¨","Ø£ÙŠÙ„ÙˆÙ„","ØªØ´Ø±ÙŠÙ† Ø§Ù„Ø£ÙˆÙ„","ØªØ´Ø±ÙŠÙ† Ø§Ù„Ø«Ø§Ù†ÙŠ","ÙƒØ§Ù†ÙˆÙ† Ø§Ù„Ø£ÙˆÙ„"],monthNamesShort:["1","2","3","4","5","6","7","8","9","10","11","12"],dayNames:["Ø§Ù„Ø³Ø¨Øª","Ø§Ù„Ø£Ø�Ø¯","Ø§Ù„Ø§Ø«Ù†ÙŠÙ†","Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡","Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡","Ø§Ù„Ø®Ù…ÙŠØ³","Ø§Ù„Ø¬Ù…Ø¹Ø©"],dayNamesShort:["Ø³Ø¨Øª","Ø£Ø�Ø¯","Ø§Ø«Ù†ÙŠÙ†","Ø«Ù„Ø§Ø«Ø§Ø¡","Ø£Ø±Ø¨Ø¹Ø§Ø¡","Ø®Ù…ÙŠØ³","Ø¬Ù…Ø¹Ø©"],formatString:"%Y-%m-%d %H:%M:%S"},pt:{monthNames:["Janeiro","Fevereiro","Mar&ccedil;o","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthNamesShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],dayNames:["Domingo","Segunda-feira","Ter&ccedil;a-feira","Quarta-feira","Quinta-feira","Sexta-feira","S&aacute;bado"],dayNamesShort:["Dom","Seg","Ter","Qua","Qui","Sex","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"},"pt-BR":{monthNames:["Janeiro","Fevereiro","Mar&ccedil;o","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthNamesShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],dayNames:["Domingo","Segunda-feira","Ter&ccedil;a-feira","Quarta-feira","Quinta-feira","Sexta-feira","S&aacute;bado"],dayNamesShort:["Dom","Seg","Ter","Qua","Qui","Sex","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"}};
jsDate.regional["en-US"]=jsDate.regional["en-GB"]=jsDate.regional.en;
jsDate.regional.getLocale=function(){var l=jsDate.config.defaultLocale;
if(document&&document.getElementsByTagName("html")&&document.getElementsByTagName("html")[0].lang){l=document.getElementsByTagName("html")[0].lang;
if(!jsDate.regional.hasOwnProperty(l)){l=jsDate.config.defaultLocale;
}}return l;
};
var day=24*60*60*1000;
var addZeros=function(num,digits){num=String(num);
var i=digits-num.length;
var s=String(Math.pow(10,i)).slice(1);
return s.concat(num);
};
var multipliers={millisecond:1,second:1000,minute:60*1000,hour:60*60*1000,day:day,week:7*day,month:{add:function(d,number){multipliers.year.add(d,Math[number>0?"floor":"ceil"](number/12));
var prevMonth=d.getMonth()+(number%12);
if(prevMonth==12){prevMonth=0;
d.setYear(d.getFullYear()+1);
}else{if(prevMonth==-1){prevMonth=11;
d.setYear(d.getFullYear()-1);
}}d.setMonth(prevMonth);
},diff:function(d1,d2){var diffYears=d1.getFullYear()-d2.getFullYear();
var diffMonths=d1.getMonth()-d2.getMonth()+(diffYears*12);
var diffDays=d1.getDate()-d2.getDate();
return diffMonths+(diffDays/30);
}},year:{add:function(d,number){d.setYear(d.getFullYear()+Math[number>0?"floor":"ceil"](number));
},diff:function(d1,d2){return multipliers.month.diff(d1,d2)/12;
}}};
for(var unit in multipliers){if(unit.substring(unit.length-1)!="s"){multipliers[unit+"s"]=multipliers[unit];
}}var format=function(d,code,syntax){if(jsDate.formats[syntax]["shortcuts"][code]){return jsDate.strftime(d,jsDate.formats[syntax]["shortcuts"][code],syntax);
}else{var getter=(jsDate.formats[syntax]["codes"][code]||"").split(".");
var nbr=d["get"+getter[0]]?d["get"+getter[0]]():"";
if(getter[1]){nbr=addZeros(nbr,getter[1]);
}return nbr;
}};
jsDate.strftime=function(d,formatString,syntax,locale){var syn="perl";
var loc=jsDate.regional.getLocale();
if(syntax&&jsDate.formats.hasOwnProperty(syntax)){syn=syntax;
}else{if(syntax&&jsDate.regional.hasOwnProperty(syntax)){loc=syntax;
}}if(locale&&jsDate.formats.hasOwnProperty(locale)){syn=locale;
}else{if(locale&&jsDate.regional.hasOwnProperty(locale)){loc=locale;
}}if(get_type(d)!="[object Object]"||d._type!="jsDate"){d=new jsDate(d);
d.locale=loc;
}if(!formatString){formatString=d.formatString||jsDate.regional[loc]["formatString"];
}var source=formatString||"%Y-%m-%d",result="",match;
while(source.length>0){if(match=source.match(jsDate.formats[syn].codes.matcher)){result+=source.slice(0,match.index);
result+=(match[1]||"")+format(d,match[2],syn);
source=source.slice(match.index+match[0].length);
}else{result+=source;
source="";
}}return result;
};
jsDate.formats={ISO:"%Y-%m-%dT%H:%M:%S.%N%G",SQL:"%Y-%m-%d %H:%M:%S"};
jsDate.formats.perl={codes:{matcher:/()%(#?(%|[a-z]))/i,Y:"FullYear",y:"ShortYear.2",m:"MonthNumber.2","#m":"MonthNumber",B:"MonthName",b:"AbbrMonthName",d:"Date.2","#d":"Date",e:"Date",A:"DayName",a:"AbbrDayName",w:"Day",H:"Hours.2","#H":"Hours",I:"Hours12.2","#I":"Hours12",p:"AMPM",M:"Minutes.2","#M":"Minutes",S:"Seconds.2","#S":"Seconds",s:"Unix",N:"Milliseconds.3","#N":"Milliseconds",O:"TimezoneOffset",Z:"TimezoneName",G:"GmtOffset"},shortcuts:{F:"%Y-%m-%d",T:"%H:%M:%S",X:"%H:%M:%S",x:"%m/%d/%y",D:"%m/%d/%y","#c":"%a %b %e %H:%M:%S %Y",v:"%e-%b-%Y",R:"%H:%M",r:"%I:%M:%S %p",t:"\t",n:"\n","%":"%"}};
jsDate.formats.php={codes:{matcher:/()%((%|[a-z]))/i,a:"AbbrDayName",A:"DayName",d:"Date.2",e:"Date",j:"DayOfYear.3",u:"DayOfWeek",w:"Day",U:"FullWeekOfYear.2",V:"IsoWeek.2",W:"WeekOfYear.2",b:"AbbrMonthName",B:"MonthName",m:"MonthNumber.2",h:"AbbrMonthName",C:"Century.2",y:"ShortYear.2",Y:"FullYear",H:"Hours.2",I:"Hours12.2",l:"Hours12",p:"AMPM",P:"AmPm",M:"Minutes.2",S:"Seconds.2",s:"Unix",O:"TimezoneOffset",z:"GmtOffset",Z:"TimezoneAbbr"},shortcuts:{D:"%m/%d/%y",F:"%Y-%m-%d",T:"%H:%M:%S",X:"%H:%M:%S",x:"%m/%d/%y",R:"%H:%M",r:"%I:%M:%S %p",t:"\t",n:"\n","%":"%"}};
jsDate.round=function(unit,option){if(unit!=null){switch(unit.toLowerCase()){case"seconds":this.setSeconds((option=="down")?0:60);
this.setMilliseconds(0);
break;
case"minutes":this.setMinutes((option=="down")?0:60);
this.setSeconds(0);
this.setMilliseconds(0);
break;
case"hours":this.setHours((option=="down")?0:24);
this.setMinutes(0);
this.setSeconds(0);
this.setMilliseconds(0);
break;
default:break;
}}return this;
};
jsDate.createDate=function(date){if(date==null){return new Date();
}if(date instanceof Date){return date;
}if(typeof date=="number"){return new Date(date);
}var parsable=String(date).replace(/^\s*(.+)\s*$/g,"$1");
parsable=parsable.replace(/^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,4})/,"$1/$2/$3");
parsable=parsable.replace(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{4})/i,"$1 $2 $3");
var match=parsable.match(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{2})\D*/i);
if(match&&match.length>3){var m3=parseFloat(match[3]);
var ny=jsDate.config.defaultCentury+m3;
ny=String(ny);
parsable=parsable.replace(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{2})\D*/i,match[1]+" "+match[2]+" "+ny);
}match=parsable.match(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})[^0-9]/);
function h1(parsable,match){var m1=parseFloat(match[1]);
var m2=parseFloat(match[2]);
var m3=parseFloat(match[3]);
var cent=jsDate.config.defaultCentury;
var ny,nd,nm,str;
if(m1>31){nd=m3;
nm=m2;
ny=cent+m1;
}else{nd=m2;
nm=m1;
ny=cent+m3;
}str=nm+"/"+nd+"/"+ny;
return parsable.replace(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})/,str);
}if(match&&match.length>3){parsable=h1(parsable,match);
}var match=parsable.match(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})$/);
if(match&&match.length>3){parsable=h1(parsable,match);
}var i=0;
var length=jsDate.matchers.length;
var pattern,ms,current=parsable,obj;
while(i<length){ms=Date.parse(current);
if(!isNaN(ms)){return new Date(ms);
}pattern=jsDate.matchers[i];
if(typeof pattern=="function"){obj=pattern.call(jsDate,current);
if(obj instanceof Date){return obj;
}}else{current=parsable.replace(pattern[0],pattern[1]);
}i++;
}return NaN;
};
jsDate.daysInMonth=function(year,month){if(month==2){return new Date(year,1,29).getDate()==29?29:28;
}return[undefined,31,undefined,31,30,31,30,31,31,30,31,30,31][month];
};
jsDate.matchers=[[/(3[01]|[0-2]\d)\s*\.\s*(1[0-2]|0\d)\s*\.\s*([1-9]\d{3})/,"$2/$1/$3"],[/([1-9]\d{3})\s*-\s*(1[0-2]|0\d)\s*-\s*(3[01]|[0-2]\d)/,"$2/$3/$1"],function(str){var match=str.match(/^(?:(.+)\s+)?([012]?\d)(?:\s*\:\s*(\d\d))?(?:\s*\:\s*(\d\d(\.\d*)?))?\s*(am|pm)?\s*$/i);
if(match){if(match[1]){var d=this.createDate(match[1]);
if(isNaN(d)){return;
}}else{var d=new Date();
d.setMilliseconds(0);
}var hour=parseFloat(match[2]);
if(match[6]){hour=match[6].toLowerCase()=="am"?(hour==12?0:hour):(hour==12?12:hour+12);
}d.setHours(hour,parseInt(match[3]||0,10),parseInt(match[4]||0,10),((parseFloat(match[5]||0))||0)*1000);
return d;
}else{return str;
}},function(str){var match=str.match(/^(?:(.+))[T|\s+]([012]\d)(?:\:(\d\d))(?:\:(\d\d))(?:\.\d+)([\+\-]\d\d\:\d\d)$/i);
if(match){if(match[1]){var d=this.createDate(match[1]);
if(isNaN(d)){return;
}}else{var d=new Date();
d.setMilliseconds(0);
}var hour=parseFloat(match[2]);
d.setHours(hour,parseInt(match[3],10),parseInt(match[4],10),parseFloat(match[5])*1000);
return d;
}else{return str;
}},function(str){var match=str.match(/^([0-3]?\d)\s*[-\/.\s]{1}\s*([a-zA-Z]{3,9})\s*[-\/.\s]{1}\s*([0-3]?\d)$/);
if(match){var d=new Date();
var cent=jsDate.config.defaultCentury;
var m1=parseFloat(match[1]);
var m3=parseFloat(match[3]);
var ny,nd,nm;
if(m1>31){nd=m3;
ny=cent+m1;
}else{nd=m1;
ny=cent+m3;
}var nm=inArray(match[2],jsDate.regional[jsDate.regional.getLocale()]["monthNamesShort"]);
if(nm==-1){nm=inArray(match[2],jsDate.regional[jsDate.regional.getLocale()]["monthNames"]);
}d.setFullYear(ny,nm,nd);
d.setHours(0,0,0,0);
return d;
}else{return str;
}}];
function inArray(elem,array){if(array.indexOf){return array.indexOf(elem);
}for(var i=0,length=array.length;
i<length;
i++){if(array[i]===elem){return i;
}}return -1;
}function get_type(thing){if(thing===null){return"[object Null]";
}return Object.prototype.toString.call(thing);
}$.jsDate=jsDate;
$.jqplot.sprintf=function(){function pad(str,len,chr,leftJustify){var padding=(str.length>=len)?"":Array(1+len-str.length>>>0).join(chr);
return leftJustify?str+padding:padding+str;
}function thousand_separate(value){var value_str=new String(value);
for(var i=10;
i>0;
i--){if(value_str==(value_str=value_str.replace(/^(\d+)(\d{3})/,"$1"+$.jqplot.sprintf.thousandsSeparator+"$2"))){break;
}}return value_str;
}function justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace){var diff=minWidth-value.length;
if(diff>0){var spchar=" ";
if(htmlSpace){spchar="&nbsp;";
}if(leftJustify||!zeroPad){value=pad(value,minWidth,spchar,leftJustify);
}else{value=value.slice(0,prefix.length)+pad("",diff,"0",true)+value.slice(prefix.length);
}}return value;
}function formatBaseX(value,base,prefix,leftJustify,minWidth,precision,zeroPad,htmlSpace){var number=value>>>0;
prefix=prefix&&number&&{"2":"0b","8":"0","16":"0x"}[base]||"";
value=prefix+pad(number.toString(base),precision||0,"0",false);
return justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace);
}function formatString(value,leftJustify,minWidth,precision,zeroPad,htmlSpace){if(precision!=null){value=value.slice(0,precision);
}return justify(value,"",leftJustify,minWidth,zeroPad,htmlSpace);
}var a=arguments,i=0,format=a[i++];
return format.replace($.jqplot.sprintf.regex,function(substring,valueIndex,flags,minWidth,_,precision,type){if(substring=="%%"){return"%";
}var leftJustify=false,positivePrefix="",zeroPad=false,prefixBaseX=false,htmlSpace=false,thousandSeparation=false;
for(var j=0;
flags&&j<flags.length;
j++){switch(flags.charAt(j)){case" ":positivePrefix=" ";
break;
case"+":positivePrefix="+";
break;
case"-":leftJustify=true;
break;
case"0":zeroPad=true;
break;
case"#":prefixBaseX=true;
break;
case"&":htmlSpace=true;
break;
case"'":thousandSeparation=true;
break;
}}if(!minWidth){minWidth=0;
}else{if(minWidth=="*"){minWidth=+a[i++];
}else{if(minWidth.charAt(0)=="*"){minWidth=+a[minWidth.slice(1,-1)];
}else{minWidth=+minWidth;
}}}if(minWidth<0){minWidth=-minWidth;
leftJustify=true;
}if(!isFinite(minWidth)){throw new Error("$.jqplot.sprintf: (minimum-)width must be finite");
}if(!precision){precision="fFeE".indexOf(type)>-1?6:(type=="d")?0:void (0);
}else{if(precision=="*"){precision=+a[i++];
}else{if(precision.charAt(0)=="*"){precision=+a[precision.slice(1,-1)];
}else{precision=+precision;
}}}var value=valueIndex?a[valueIndex.slice(0,-1)]:a[i++];
switch(type){case"s":if(value==null){return"";
}return formatString(String(value),leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"c":return formatString(String.fromCharCode(+value),leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"b":return formatBaseX(value,2,prefixBaseX,leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"o":return formatBaseX(value,8,prefixBaseX,leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"x":return formatBaseX(value,16,prefixBaseX,leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"X":return formatBaseX(value,16,prefixBaseX,leftJustify,minWidth,precision,zeroPad,htmlSpace).toUpperCase();
case"u":return formatBaseX(value,10,prefixBaseX,leftJustify,minWidth,precision,zeroPad,htmlSpace);
case"i":var number=parseInt(+value,10);
if(isNaN(number)){return"";
}var prefix=number<0?"-":positivePrefix;
var number_str=thousandSeparation?thousand_separate(String(Math.abs(number))):String(Math.abs(number));
value=prefix+pad(number_str,precision,"0",false);
return justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace);
case"d":var number=Math.round(+value);
if(isNaN(number)){return"";
}var prefix=number<0?"-":positivePrefix;
var number_str=thousandSeparation?thousand_separate(String(Math.abs(number))):String(Math.abs(number));
value=prefix+pad(number_str,precision,"0",false);
return justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace);
case"e":case"E":case"f":case"F":case"g":case"G":var number=+value;
if(isNaN(number)){return"";
}var prefix=number<0?"-":positivePrefix;
var method=["toExponential","toFixed","toPrecision"]["efg".indexOf(type.toLowerCase())];
var textTransform=["toString","toUpperCase"]["eEfFgG".indexOf(type)%2];
var number_str=Math.abs(number)[method](precision);
number_str=thousandSeparation?thousand_separate(number_str):number_str;
value=prefix+number_str;
return justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace)[textTransform]();
case"p":case"P":var number=+value;
if(isNaN(number)){return"";
}var prefix=number<0?"-":positivePrefix;
var parts=String(Number(Math.abs(number)).toExponential()).split(/e|E/);
var sd=(parts[0].indexOf(".")!=-1)?parts[0].length-1:parts[0].length;
var zeros=(parts[1]<0)?-parts[1]-1:0;
if(Math.abs(number)<1){if(sd+zeros<=precision){value=prefix+Math.abs(number).toPrecision(sd);
}else{if(sd<=precision-1){value=prefix+Math.abs(number).toExponential(sd-1);
}else{value=prefix+Math.abs(number).toExponential(precision-1);
}}}else{var prec=(sd<=precision)?sd:precision;
value=prefix+Math.abs(number).toPrecision(prec);
}var textTransform=["toString","toUpperCase"]["pP".indexOf(type)%2];
return justify(value,prefix,leftJustify,minWidth,zeroPad,htmlSpace)[textTransform]();
case"n":return"";
default:return substring;
}});
};
$.jqplot.sprintf.thousandsSeparator=",";
$.jqplot.sprintf.regex=/%%|%(\d+\$)?([-+#0&\' ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([nAscboxXuidfegpEGP])/g;
$.jqplot.getSignificantFigures=function(number){var parts=String(Number(Math.abs(number)).toExponential()).split(/e|E/);
var sd=(parts[0].indexOf(".")!=-1)?parts[0].length-1:parts[0].length;
var zeros=(parts[1]<0)?-parts[1]-1:0;
var expn=parseInt(parts[1],10);
var dleft=(expn+1>0)?expn+1:0;
var dright=(sd<=dleft)?0:sd-expn-1;
return{significantDigits:sd,digitsLeft:dleft,digitsRight:dright,zeros:zeros,exponent:expn};
};
$.jqplot.getPrecision=function(number){return $.jqplot.getSignificantFigures(number).digitsRight;
};
})(jQuery);
var backCompat=$.uiBackCompat!==false;
$.jqplot.effects={effect:{}};
var dataSpace="jqplot.storage.";
$.extend($.jqplot.effects,{version:"1.9pre",save:function(element,set){for(var i=0;
i<set.length;
i++){if(set[i]!==null){element.data(dataSpace+set[i],element[0].style[set[i]]);
}}},restore:function(element,set){for(var i=0;
i<set.length;
i++){if(set[i]!==null){element.css(set[i],element.data(dataSpace+set[i]));
}}},setMode:function(el,mode){if(mode==="toggle"){mode=el.is(":hidden")?"show":"hide";
}return mode;
},createWrapper:function(element){if(element.parent().is(".ui-effects-wrapper")){return element.parent();
}var props={width:element.outerWidth(true),height:element.outerHeight(true),"float":element.css("float")},wrapper=$("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),size={width:element.width(),height:element.height()},active=document.activeElement;
element.wrap(wrapper);
if(element[0]===active||$.contains(element[0],active)){$(active).focus();
}wrapper=element.parent();
if(element.css("position")==="static"){wrapper.css({position:"relative"});
element.css({position:"relative"});
}else{$.extend(props,{position:element.css("position"),zIndex:element.css("z-index")});
$.each(["top","left","bottom","right"],function(i,pos){props[pos]=element.css(pos);
if(isNaN(parseInt(props[pos],10))){props[pos]="auto";
}});
element.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"});
}element.css(size);
return wrapper.css(props).show();
},removeWrapper:function(element){var active=document.activeElement;
if(element.parent().is(".ui-effects-wrapper")){element.parent().replaceWith(element);
if(element[0]===active||$.contains(element[0],active)){$(active).focus();
}}return element;
}});
function _normalizeArguments(effect,options,speed,callback){if($.isPlainObject(effect)){return effect;
}effect={effect:effect};
if(options===undefined){options={};
}if($.isFunction(options)){callback=options;
speed=null;
options={};
}if($.type(options)==="number"||$.fx.speeds[options]){callback=speed;
speed=options;
options={};
}if($.isFunction(speed)){callback=speed;
speed=null;
}if(options){$.extend(effect,options);
}speed=speed||options.duration;
effect.duration=$.fx.off?0:typeof speed==="number"?speed:speed in $.fx.speeds?$.fx.speeds[speed]:$.fx.speeds._default;
effect.complete=callback||options.complete;
return effect;
}function standardSpeed(speed){if(!speed||typeof speed==="number"||$.fx.speeds[speed]){return true;
}if(typeof speed==="string"&&!$.jqplot.effects.effect[speed]){if(backCompat&&$.jqplot.effects[speed]){return false;
}return true;
}return false;
}$.fn.extend({jqplotEffect:function(effect,options,speed,callback){var args=_normalizeArguments.apply(this,arguments),mode=args.mode,queue=args.queue,effectMethod=$.jqplot.effects.effect[args.effect],oldEffectMethod=!effectMethod&&backCompat&&$.jqplot.effects[args.effect];
if($.fx.off||!(effectMethod||oldEffectMethod)){if(mode){return this[mode](args.duration,args.complete);
}else{return this.each(function(){if(args.complete){args.complete.call(this);
}});
}}function run(next){var elem=$(this),complete=args.complete,mode=args.mode;
function done(){if($.isFunction(complete)){complete.call(elem[0]);
}if($.isFunction(next)){next();
}}if(elem.is(":hidden")?mode==="hide":mode==="show"){done();
}else{effectMethod.call(elem[0],args,done);
}}if(effectMethod){return queue===false?this.each(run):this.queue(queue||"fx",run);
}else{return oldEffectMethod.call(this,{options:args,duration:args.duration,callback:args.complete,mode:args.mode});
}}});
var rvertical=/up|down|vertical/,rpositivemotion=/up|left|vertical|horizontal/;
$.jqplot.effects.effect.blind=function(o,done){var el=$(this),props=["position","top","bottom","left","right","height","width"],mode=$.jqplot.effects.setMode(el,o.mode||"hide"),direction=o.direction||"up",vertical=rvertical.test(direction),ref=vertical?"height":"width",ref2=vertical?"top":"left",motion=rpositivemotion.test(direction),animation={},show=mode==="show",wrapper,distance,top;
if(el.parent().is(".ui-effects-wrapper")){$.jqplot.effects.save(el.parent(),props);
}else{$.jqplot.effects.save(el,props);
}el.show();
top=parseInt(el.css("top"),10);
wrapper=$.jqplot.effects.createWrapper(el).css({overflow:"hidden"});
distance=vertical?wrapper[ref]()+top:wrapper[ref]();
animation[ref]=show?String(distance):"0";
if(!motion){el.css(vertical?"bottom":"right",0).css(vertical?"top":"left","").css({position:"absolute"});
animation[ref2]=show?"0":String(distance);
}if(show){wrapper.css(ref,0);
if(!motion){wrapper.css(ref2,distance);
}}wrapper.animate(animation,{duration:o.duration,easing:o.easing,queue:false,complete:function(){if(mode==="hide"){el.hide();
}$.jqplot.effects.restore(el,props);
$.jqplot.effects.removeWrapper(el);
done();
}});
};
(function($){$.jqplot.BarRenderer=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.BarRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.BarRenderer.prototype.constructor=$.jqplot.BarRenderer;
$.jqplot.BarRenderer.prototype.init=function(options,plot){this.barPadding=8;
this.barMargin=10;
this.barDirection="vertical";
this.barWidth=null;
this.shadowOffset=2;
this.shadowDepth=5;
this.shadowAlpha=0.08;
this.waterfall=false;
this.groups=1;
this.varyBarColor=false;
this.highlightMouseOver=true;
this.highlightMouseDown=false;
this.highlightColors=[];
this.transposedData=true;
this.renderer.animation={show:false,direction:"down",speed:3000,_supported:true};
this._type="bar";
if(options.highlightMouseDown&&options.highlightMouseOver==null){options.highlightMouseOver=false;
}$.extend(true,this,options);
$.extend(true,this.renderer,options);
this.fill=true;
if(this.barDirection==="horizontal"&&this.rendererOptions.animation&&this.rendererOptions.animation.direction==null){this.renderer.animation.direction="left";
}if(this.waterfall){this.fillToZero=false;
this.disableStack=true;
}if(this.barDirection=="vertical"){this._primaryAxis="_xaxis";
this._stackAxis="y";
this.fillAxis="y";
}else{this._primaryAxis="_yaxis";
this._stackAxis="x";
this.fillAxis="x";
}this._highlightedPoint=null;
this._plotSeriesInfo=null;
this._dataColors=[];
this._barPoints=[];
var opts={lineJoin:"miter",lineCap:"round",fill:true,isarc:false,strokeStyle:this.color,fillStyle:this.color,closePath:this.fill};
this.renderer.shapeRenderer.init(opts);
var sopts={lineJoin:"miter",lineCap:"round",fill:true,isarc:false,angle:this.shadowAngle,offset:this.shadowOffset,alpha:this.shadowAlpha,depth:this.shadowDepth,closePath:this.fill};
this.renderer.shadowRenderer.init(sopts);
plot.postInitHooks.addOnce(postInit);
plot.postDrawHooks.addOnce(postPlotDraw);
plot.eventListenerHooks.addOnce("jqplotMouseMove",handleMove);
plot.eventListenerHooks.addOnce("jqplotMouseDown",handleMouseDown);
plot.eventListenerHooks.addOnce("jqplotMouseUp",handleMouseUp);
plot.eventListenerHooks.addOnce("jqplotClick",handleClick);
plot.eventListenerHooks.addOnce("jqplotRightClick",handleRightClick);
};
function barPreInit(target,data,seriesDefaults,options){if(this.rendererOptions.barDirection=="horizontal"){this._stackAxis="x";
this._primaryAxis="_yaxis";
}if(this.rendererOptions.waterfall==true){this._data=$.extend(true,[],this.data);
var sum=0;
var pos=(!this.rendererOptions.barDirection||this.rendererOptions.barDirection==="vertical"||this.transposedData===false)?1:0;
for(var i=0;
i<this.data.length;
i++){sum+=this.data[i][pos];
if(i>0){this.data[i][pos]+=this.data[i-1][pos];
}}this.data[this.data.length]=(pos==1)?[this.data.length+1,sum]:[sum,this.data.length+1];
this._data[this._data.length]=(pos==1)?[this._data.length+1,sum]:[sum,this._data.length+1];
}if(this.rendererOptions.groups>1){this.breakOnNull=true;
var l=this.data.length;
var skip=parseInt(l/this.rendererOptions.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip){this.data.splice(i+count,0,[null,null]);
count++;
}for(i=0;
i<this.data.length;
i++){if(this._primaryAxis=="_xaxis"){this.data[i][0]=i+1;
}else{this.data[i][1]=i+1;
}}}}$.jqplot.preSeriesInitHooks.push(barPreInit);
$.jqplot.BarRenderer.prototype.calcSeriesNumbers=function(){var nvals=0;
var nseries=0;
var paxis=this[this._primaryAxis];
var s,series,pos;
for(var i=0;
i<paxis._series.length;
i++){series=paxis._series[i];
if(series===this){pos=i;
}if(series.renderer.constructor==$.jqplot.BarRenderer){nvals+=series.data.length;
nseries+=1;
}}return[nvals,nseries,pos];
};
$.jqplot.BarRenderer.prototype.setBarWidth=function(){var i;
var nvals=0;
var nseries=0;
var paxis=this[this._primaryAxis];
var s,series,pos;
var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
nvals=temp[0];
nseries=temp[1];
var nticks=paxis.numberTicks;
var nbins=(nticks-1)/2;
if(paxis.name=="xaxis"||paxis.name=="x2axis"){if(this._stack){this.barWidth=(paxis._offsets.max-paxis._offsets.min)/nvals*nseries-this.barMargin;
}else{this.barWidth=((paxis._offsets.max-paxis._offsets.min)/nbins-this.barPadding*(nseries-1)-this.barMargin*2)/nseries;
}}else{if(this._stack){this.barWidth=(paxis._offsets.min-paxis._offsets.max)/nvals*nseries-this.barMargin;
}else{this.barWidth=((paxis._offsets.min-paxis._offsets.max)/nbins-this.barPadding*(nseries-1)-this.barMargin*2)/nseries;
}}return[nvals,nseries];
};
function computeHighlightColors(colors){var ret=[];
for(var i=0;
i<colors.length;
i++){var rgba=$.jqplot.getColorComponents(colors[i]);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>570)?newrgb[j]*0.8:newrgb[j]+0.3*(255-newrgb[j]);
newrgb[j]=parseInt(newrgb[j],10);
}ret.push("rgb("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+")");
}return ret;
}$.jqplot.BarRenderer.prototype.draw=function(ctx,gridData,options){var i;
var opts=$.extend({},options);
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var xaxis=this.xaxis;
var yaxis=this.yaxis;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var pointx,pointy;
this._dataColors=[];
this._barPoints=[];
if(this.barWidth==null){this.renderer.setBarWidth.call(this);
}var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
var nvals=temp[0];
var nseries=temp[1];
var pos=temp[2];
var points=[];
if(this._stack){this._barNudge=0;
}else{this._barNudge=(-Math.abs(nseries/2-0.5)+pos)*(this.barWidth+this.barPadding);
}if(showLine){var negativeColors=new $.jqplot.ColorGenerator(this.negativeSeriesColors);
var positiveColors=new $.jqplot.ColorGenerator(this.seriesColors);
var negativeColor=negativeColors.get(this.index);
if(!this.useNegativeColors){negativeColor=opts.fillStyle;
}var positiveColor=opts.fillStyle;
var base;
var xstart;
var ystart;
if(this.barDirection=="vertical"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][1]==null){continue;
}points=[];
base=gridData[i][0]+this._barNudge;
ystart;
if(this._stack&&this._prevGridData.length){ystart=this._prevGridData[i][1];
}else{if(this.fillToZero){ystart=this._yaxis.series_u2p(0);
}else{if(this.waterfall&&i>0&&i<this.gridData.length-1){ystart=this.gridData[i-1][1];
}else{if(this.waterfall&&i==0&&i<this.gridData.length-1){if(this._yaxis.min<=0&&this._yaxis.max>=0){ystart=this._yaxis.series_u2p(0);
}else{if(this._yaxis.min>0){ystart=ctx.canvas.height;
}else{ystart=0;
}}}else{if(this.waterfall&&i==this.gridData.length-1){if(this._yaxis.min<=0&&this._yaxis.max>=0){ystart=this._yaxis.series_u2p(0);
}else{if(this._yaxis.min>0){ystart=ctx.canvas.height;
}else{ystart=0;
}}}else{ystart=ctx.canvas.height;
}}}}}if((this.fillToZero&&this._plotData[i][1]<0)||(this.waterfall&&this._data[i][1]<0)){if(this.varyBarColor&&!this._stack){if(this.useNegativeColors){opts.fillStyle=negativeColors.next();
}else{opts.fillStyle=positiveColors.next();
}}else{opts.fillStyle=negativeColor;
}}else{if(this.varyBarColor&&!this._stack){opts.fillStyle=positiveColors.next();
}else{opts.fillStyle=positiveColor;
}}if(!this.fillToZero||this._plotData[i][1]>=0){points.push([base-this.barWidth/2,ystart]);
points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,ystart]);
}else{points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base-this.barWidth/2,ystart]);
points.push([base+this.barWidth/2,ystart]);
points.push([base+this.barWidth/2,gridData[i][1]]);
}this._barPoints.push(points);
if(shadow&&!this._stack){var sopts=$.extend(true,{},opts);
delete sopts.fillStyle;
this.renderer.shadowRenderer.draw(ctx,points,sopts);
}var clr=opts.fillStyle||this.color;
this._dataColors.push(clr);
this.renderer.shapeRenderer.draw(ctx,points,opts);
}}else{if(this.barDirection=="horizontal"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][0]==null){continue;
}points=[];
base=gridData[i][1]-this._barNudge;
xstart;
if(this._stack&&this._prevGridData.length){xstart=this._prevGridData[i][0];
}else{if(this.fillToZero){xstart=this._xaxis.series_u2p(0);
}else{if(this.waterfall&&i>0&&i<this.gridData.length-1){xstart=this.gridData[i-1][1];
}else{if(this.waterfall&&i==0&&i<this.gridData.length-1){if(this._xaxis.min<=0&&this._xaxis.max>=0){xstart=this._xaxis.series_u2p(0);
}else{if(this._xaxis.min>0){xstart=0;
}else{xstart=ctx.canvas.width;
}}}else{if(this.waterfall&&i==this.gridData.length-1){if(this._xaxis.min<=0&&this._xaxis.max>=0){xstart=this._xaxis.series_u2p(0);
}else{if(this._xaxis.min>0){xstart=0;
}else{xstart=ctx.canvas.width;
}}}else{xstart=0;
}}}}}if((this.fillToZero&&this._plotData[i][1]<0)||(this.waterfall&&this._data[i][1]<0)){if(this.varyBarColor&&!this._stack){if(this.useNegativeColors){opts.fillStyle=negativeColors.next();
}else{opts.fillStyle=positiveColors.next();
}}}else{if(this.varyBarColor&&!this._stack){opts.fillStyle=positiveColors.next();
}else{opts.fillStyle=positiveColor;
}}if(!this.fillToZero||this._plotData[i][0]>=0){points.push([xstart,base+this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([gridData[i][0],base+this.barWidth/2]);
}else{points.push([gridData[i][0],base+this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
points.push([xstart,base+this.barWidth/2]);
}this._barPoints.push(points);
if(shadow&&!this._stack){var sopts=$.extend(true,{},opts);
delete sopts.fillStyle;
this.renderer.shadowRenderer.draw(ctx,points,sopts);
}var clr=opts.fillStyle||this.color;
this._dataColors.push(clr);
this.renderer.shapeRenderer.draw(ctx,points,opts);
}}}}if(this.highlightColors.length==0){this.highlightColors=$.jqplot.computeHighlightColors(this._dataColors);
}else{if(typeof(this.highlightColors)=="string"){var temp=this.highlightColors;
this.highlightColors=[];
for(var i=0;
i<this._dataColors.length;
i++){this.highlightColors.push(temp);
}}}};
$.jqplot.BarRenderer.prototype.drawShadow=function(ctx,gridData,options){var i;
var opts=(options!=undefined)?options:{};
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var xaxis=this.xaxis;
var yaxis=this.yaxis;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var pointx,points,pointy,nvals,nseries,pos;
if(this._stack&&this.shadow){if(this.barWidth==null){this.renderer.setBarWidth.call(this);
}var temp=this._plotSeriesInfo=this.renderer.calcSeriesNumbers.call(this);
nvals=temp[0];
nseries=temp[1];
pos=temp[2];
if(this._stack){this._barNudge=0;
}else{this._barNudge=(-Math.abs(nseries/2-0.5)+pos)*(this.barWidth+this.barPadding);
}if(showLine){if(this.barDirection=="vertical"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][1]==null){continue;
}points=[];
var base=gridData[i][0]+this._barNudge;
var ystart;
if(this._stack&&this._prevGridData.length){ystart=this._prevGridData[i][1];
}else{if(this.fillToZero){ystart=this._yaxis.series_u2p(0);
}else{ystart=ctx.canvas.height;
}}points.push([base-this.barWidth/2,ystart]);
points.push([base-this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,gridData[i][1]]);
points.push([base+this.barWidth/2,ystart]);
this.renderer.shadowRenderer.draw(ctx,points,opts);
}}else{if(this.barDirection=="horizontal"){for(var i=0;
i<gridData.length;
i++){if(this.data[i][0]==null){continue;
}points=[];
var base=gridData[i][1]-this._barNudge;
var xstart;
if(this._stack&&this._prevGridData.length){xstart=this._prevGridData[i][0];
}else{xstart=0;
}points.push([xstart,base+this.barWidth/2]);
points.push([gridData[i][0],base+this.barWidth/2]);
points.push([gridData[i][0],base-this.barWidth/2]);
points.push([xstart,base-this.barWidth/2]);
this.renderer.shadowRenderer.draw(ctx,points,opts);
}}}}}};
function postInit(target,data,options){for(var i=0;
i<this.series.length;
i++){if(this.series[i].renderer.constructor==$.jqplot.BarRenderer){if(this.series[i].highlightMouseOver){this.series[i].highlightMouseDown=false;
}}}}function postPlotDraw(){if(this.plugins.barRenderer&&this.plugins.barRenderer.highlightCanvas){this.plugins.barRenderer.highlightCanvas.resetCanvas();
this.plugins.barRenderer.highlightCanvas=null;
}this.plugins.barRenderer={highlightedSeriesIndex:null};
this.plugins.barRenderer.highlightCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(this.plugins.barRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-barRenderer-highlight-canvas",this._plotDimensions,this));
this.plugins.barRenderer.highlightCanvas.setContext();
this.eventCanvas._elem.bind("mouseleave",{plot:this},function(ev){unhighlight(ev.data.plot);
});
}function highlight(plot,sidx,pidx,points){var s=plot.series[sidx];
var canvas=plot.plugins.barRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
s._highlightedPoint=pidx;
plot.plugins.barRenderer.highlightedSeriesIndex=sidx;
var opts={fillStyle:s.highlightColors[pidx]};
s.renderer.shapeRenderer.draw(canvas._ctx,points,opts);
canvas=null;
}function unhighlight(plot){var canvas=plot.plugins.barRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
for(var i=0;
i<plot.series.length;
i++){plot.series[i]._highlightedPoint=null;
}plot.plugins.barRenderer.highlightedSeriesIndex=null;
plot.target.trigger("jqplotDataUnhighlight");
canvas=null;
}function handleMove(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt1=jQuery.Event("jqplotDataMouseOver");
evt1.pageX=ev.pageX;
evt1.pageY=ev.pageY;
plot.target.trigger(evt1,ins);
if(plot.series[ins[0]].highlightMouseOver&&!(ins[0]==plot.plugins.barRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
if(plot.series[ins[0]].highlightMouseDown&&!(ins[0]==plot.plugins.barRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,neighbor.seriesIndex,neighbor.pointIndex,neighbor.points);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseUp(ev,gridpos,datapos,neighbor,plot){var idx=plot.plugins.barRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}}function handleClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt=jQuery.Event("jqplotDataClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function handleRightClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var idx=plot.plugins.barRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}var evt=jQuery.Event("jqplotDataRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}})(jQuery);
(function($){$.jqplot.CanvasAxisTickRenderer=function(options){this.mark="outside";
this.showMark=true;
this.showGridline=true;
this.isMinorTick=false;
this.angle=0;
this.markSize=4;
this.show=true;
this.showLabel=true;
this.labelPosition="auto";
this.label="";
this.value=null;
this._styles={};
this.formatter=$.jqplot.DefaultTickFormatter;
this.formatString="";
this.prefix="";
this.fontFamily='"Trebuchet MS", Arial, Helvetica, sans-serif';
this.fontSize="10pt";
this.fontWeight="normal";
this.fontStretch=1;
this.textColor="#666666";
this.enableFontSupport=true;
this.pt2px=null;
this._elem;
this._ctx;
this._plotWidth;
this._plotHeight;
this._plotDimensions={height:null,width:null};
$.extend(true,this,options);
var ropts={fontSize:this.fontSize,fontWeight:this.fontWeight,fontStretch:this.fontStretch,fillStyle:this.textColor,angle:this.getAngleRad(),fontFamily:this.fontFamily};
if(this.pt2px){ropts.pt2px=this.pt2px;
}if(this.enableFontSupport){if($.jqplot.support_canvas_text()){this._textRenderer=new $.jqplot.CanvasFontRenderer(ropts);
}else{this._textRenderer=new $.jqplot.CanvasTextRenderer(ropts);
}}else{this._textRenderer=new $.jqplot.CanvasTextRenderer(ropts);
}};
$.jqplot.CanvasAxisTickRenderer.prototype.init=function(options){$.extend(true,this,options);
this._textRenderer.init({fontSize:this.fontSize,fontWeight:this.fontWeight,fontStretch:this.fontStretch,fillStyle:this.textColor,angle:this.getAngleRad(),fontFamily:this.fontFamily});
};
$.jqplot.CanvasAxisTickRenderer.prototype.getWidth=function(ctx){if(this._elem){return this._elem.outerWidth(true);
}else{var tr=this._textRenderer;
var l=tr.getWidth(ctx);
var h=tr.getHeight(ctx);
var w=Math.abs(Math.sin(tr.angle)*h)+Math.abs(Math.cos(tr.angle)*l);
return w;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getHeight=function(ctx){if(this._elem){return this._elem.outerHeight(true);
}else{var tr=this._textRenderer;
var l=tr.getWidth(ctx);
var h=tr.getHeight(ctx);
var w=Math.abs(Math.cos(tr.angle)*h)+Math.abs(Math.sin(tr.angle)*l);
return w;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getTop=function(ctx){if(this._elem){return this._elem.position().top;
}else{return null;
}};
$.jqplot.CanvasAxisTickRenderer.prototype.getAngleRad=function(){var a=this.angle*Math.PI/180;
return a;
};
$.jqplot.CanvasAxisTickRenderer.prototype.setTick=function(value,axisName,isMinor){this.value=value;
if(isMinor){this.isMinorTick=true;
}return this;
};
$.jqplot.CanvasAxisTickRenderer.prototype.draw=function(ctx,plot){if(!this.label){this.label=this.prefix+this.formatter(this.formatString,this.value);
}if(this._elem){if($.jqplot.use_excanvas&&window.G_vmlCanvasManager.uninitElement!==undefined){window.G_vmlCanvasManager.uninitElement(this._elem.get(0));
}this._elem.emptyForce();
this._elem=null;
}var elem=plot.canvasManager.getCanvas();
this._textRenderer.setText(this.label,ctx);
var w=this.getWidth(ctx);
var h=this.getHeight(ctx);
elem.width=w;
elem.height=h;
elem.style.width=w;
elem.style.height=h;
elem.style.textAlign="left";
elem.style.position="absolute";
elem=plot.canvasManager.initCanvas(elem);
this._elem=$(elem);
this._elem.css(this._styles);
this._elem.addClass("jqplot-"+this.axis+"-tick");
elem=null;
return this._elem;
};
$.jqplot.CanvasAxisTickRenderer.prototype.pack=function(){this._textRenderer.draw(this._elem.get(0).getContext("2d"),this.label);
};
})(jQuery);
(function($){var objCounter=0;
$.jqplot.CanvasOverlay=function(opts){var options=opts||{};
this.options={show:$.jqplot.config.enablePlugins,deferDraw:false};
this.objects=[];
this.objectNames=[];
this.canvas=null;
this.markerRenderer=new $.jqplot.MarkerRenderer({style:"line"});
this.markerRenderer.init();
this.highlightObjectIndex=null;
if(options.objects){var objs=options.objects,obj;
for(var i=0;
i<objs.length;
i++){obj=objs[i];
for(var n in obj){switch(n){case"line":this.addLine(obj[n]);
break;
case"horizontalLine":this.addHorizontalLine(obj[n]);
break;
case"dashedHorizontalLine":this.addDashedHorizontalLine(obj[n]);
break;
case"verticalLine":this.addVerticalLine(obj[n]);
break;
case"dashedVerticalLine":this.addDashedVerticalLine(obj[n]);
break;
case"rectangle":this.addRectangle(obj[n]);
break;
default:break;
}}}}$.extend(true,this.options,options);
};
$.jqplot.CanvasOverlay.postPlotInit=function(target,data,opts){var options=opts||{};
this.plugins.canvasOverlay=new $.jqplot.CanvasOverlay(options.canvasOverlay);
};
function LineBase(){this.uid=null;
this.type=null;
this.gridStart=null;
this.gridStop=null;
this.tooltipWidthFactor=0;
this.options={name:null,show:true,lineWidth:2,lineCap:"round",color:"#666666",shadow:true,shadowAngle:45,shadowOffset:1,shadowDepth:3,shadowAlpha:"0.07",xaxis:"xaxis",yaxis:"yaxis",showTooltip:false,showTooltipPrecision:0.6,tooltipLocation:"nw",fadeTooltip:true,tooltipFadeSpeed:"fast",tooltipOffset:4,tooltipFormatString:"%d, %d"};
}function Rectangle(options){LineBase.call(this);
this.type="rectangle";
var opts={xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}Rectangle.prototype=new LineBase();
Rectangle.prototype.constructor=Rectangle;
function Line(options){LineBase.call(this);
this.type="line";
var opts={start:[],stop:[]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}Line.prototype=new LineBase();
Line.prototype.constructor=Line;
function HorizontalLine(options){LineBase.call(this);
this.type="horizontalLine";
var opts={y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}HorizontalLine.prototype=new LineBase();
HorizontalLine.prototype.constructor=HorizontalLine;
function DashedHorizontalLine(options){LineBase.call(this);
this.type="dashedHorizontalLine";
var opts={y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null,dashPattern:[8,8]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}DashedHorizontalLine.prototype=new LineBase();
DashedHorizontalLine.prototype.constructor=DashedHorizontalLine;
function VerticalLine(options){LineBase.call(this);
this.type="verticalLine";
var opts={x:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}VerticalLine.prototype=new LineBase();
VerticalLine.prototype.constructor=VerticalLine;
function DashedVerticalLine(options){LineBase.call(this);
this.type="dashedVerticalLine";
this.start=null;
this.stop=null;
var opts={x:null,ymin:null,ymax:null,yOffset:"6px",yminOffset:null,ymaxOffset:null,dashPattern:[8,8]};
$.extend(true,this.options,opts,options);
if(this.options.showTooltipPrecision<0.01){this.options.showTooltipPrecision=0.01;
}}DashedVerticalLine.prototype=new LineBase();
DashedVerticalLine.prototype.constructor=DashedVerticalLine;
$.jqplot.CanvasOverlay.prototype.addLine=function(opts){var line=new Line(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addHorizontalLine=function(opts){var line=new HorizontalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addDashedHorizontalLine=function(opts){var line=new DashedHorizontalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addVerticalLine=function(opts){var line=new VerticalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addDashedVerticalLine=function(opts){var line=new DashedVerticalLine(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.addRectangle=function(opts){var line=new Rectangle(opts);
line.uid=objCounter++;
this.objects.push(line);
this.objectNames.push(line.options.name);
};
$.jqplot.CanvasOverlay.prototype.removeObject=function(idx){if($.type(idx)=="number"){this.objects.splice(idx,1);
this.objectNames.splice(idx,1);
}else{var id=$.inArray(idx,this.objectNames);
if(id!=-1){this.objects.splice(id,1);
this.objectNames.splice(id,1);
}}};
$.jqplot.CanvasOverlay.prototype.getObject=function(idx){if($.type(idx)=="number"){return this.objects[idx];
}else{var id=$.inArray(idx,this.objectNames);
if(id!=-1){return this.objects[id];
}}};
$.jqplot.CanvasOverlay.prototype.get=$.jqplot.CanvasOverlay.prototype.getObject;
$.jqplot.CanvasOverlay.prototype.clear=function(plot){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight());
};
$.jqplot.CanvasOverlay.prototype.draw=function(plot){var obj,objs=this.objects,mr=this.markerRenderer,start,stop;
if(this.options.show){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight());
for(var k=0;
k<objs.length;
k++){obj=objs[k];
var opts=$.extend(true,{},obj.options);
if(obj.options.show){mr.shadow=obj.options.shadow;
obj.tooltipWidthFactor=obj.options.lineWidth/obj.options.showTooltipPrecision;
switch(obj.type){case"line":mr.style="line";
opts.closePath=false;
start=[plot.axes[obj.options.xaxis].series_u2p(obj.options.start[0]),plot.axes[obj.options.yaxis].series_u2p(obj.options.start[1])];
stop=[plot.axes[obj.options.xaxis].series_u2p(obj.options.stop[0]),plot.axes[obj.options.yaxis].series_u2p(obj.options.stop[1])];
obj.gridStart=start;
obj.gridStop=stop;
mr.draw(start,stop,this.canvas._ctx,opts);
break;
case"horizontalLine":if(obj.options.y!=null){mr.style="line";
opts.closePath=false;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}if(xstop!=null&&xstart!=null){obj.gridStart=[xstart,y];
obj.gridStop=[xstop,y];
mr.draw([xstart,y],[xstop,y],this.canvas._ctx,opts);
}}break;
case"dashedHorizontalLine":var dashPat=obj.options.dashPattern;
var dashPatLen=0;
for(var i=0;
i<dashPat.length;
i++){dashPatLen+=dashPat[i];
}if(obj.options.y!=null){mr.style="line";
opts.closePath=false;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}if(xstop!=null&&xstart!=null){obj.gridStart=[xstart,y];
obj.gridStop=[xstop,y];
var numDash=Math.ceil((xstop-xstart)/dashPatLen);
var b=xstart,e;
for(var i=0;
i<numDash;
i++){for(var j=0;
j<dashPat.length;
j+=2){e=b+dashPat[j];
mr.draw([b,y],[e,y],this.canvas._ctx,opts);
b+=dashPat[j];
if(j<dashPat.length-1){b+=dashPat[j+1];
}}}}}break;
case"verticalLine":if(obj.options.x!=null){mr.style="line";
opts.closePath=false;
var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(ystop!=null&&ystart!=null){obj.gridStart=[x,ystart];
obj.gridStop=[x,ystop];
mr.draw([x,ystart],[x,ystop],this.canvas._ctx,opts);
}}break;
case"dashedVerticalLine":var dashPat=obj.options.dashPattern;
var dashPatLen=0;
for(var i=0;
i<dashPat.length;
i++){dashPatLen+=dashPat[i];
}if(obj.options.x!=null){mr.style="line";
opts.closePath=false;
var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(ystop!=null&&ystart!=null){obj.gridStart=[x,ystart];
obj.gridStop=[x,ystop];
var numDash=Math.ceil((ystart-ystop)/dashPatLen);
var firstDashAdjust=((numDash*dashPatLen)-(ystart-ystop))/2;
var b=ystart,e,bs,es;
for(var i=0;
i<numDash;
i++){for(var j=0;
j<dashPat.length;
j+=2){e=b-dashPat[j];
if(e<ystop){e=ystop;
}if(b<ystop){b=ystop;
}mr.draw([x,b],[x,e],this.canvas._ctx,opts);
b-=dashPat[j];
if(j<dashPat.length-1){b-=dashPat[j+1];
}}}}}break;
case"rectangle":mr.style="line";
opts.closePath=true;
var xaxis=plot.axes[obj.options.xaxis],xstart,xstop,y=plot.axes[obj.options.yaxis].series_u2p(obj.options.y),xminoff=obj.options.xminOffset||obj.options.xOffset,xmaxoff=obj.options.xmaxOffset||obj.options.xOffset;
if(obj.options.xmin!=null){xstart=xaxis.series_u2p(obj.options.xmin);
}else{if(xminoff!=null){if($.type(xminoff)=="number"){xstart=xaxis.series_u2p(xaxis.min+xminoff);
}else{if($.type(xminoff)=="string"){xstart=xaxis.series_u2p(xaxis.min)+parseFloat(xminoff);
}}}}if(obj.options.xmax!=null){xstop=xaxis.series_u2p(obj.options.xmax);
}else{if(xmaxoff!=null){if($.type(xmaxoff)=="number"){xstop=xaxis.series_u2p(xaxis.max-xmaxoff);
}else{if($.type(xmaxoff)=="string"){xstop=xaxis.series_u2p(xaxis.max)-parseFloat(xmaxoff);
}}}}var yaxis=plot.axes[obj.options.yaxis],ystart,ystop,x=plot.axes[obj.options.xaxis].series_u2p(obj.options.x),yminoff=obj.options.yminOffset||obj.options.yOffset,ymaxoff=obj.options.ymaxOffset||obj.options.yOffset;
if(obj.options.ymin!=null){ystart=yaxis.series_u2p(obj.options.ymin);
}else{if(yminoff!=null){if($.type(yminoff)=="number"){ystart=yaxis.series_u2p(yaxis.min-yminoff);
}else{if($.type(yminoff)=="string"){ystart=yaxis.series_u2p(yaxis.min)-parseFloat(yminoff);
}}}}if(obj.options.ymax!=null){ystop=yaxis.series_u2p(obj.options.ymax);
}else{if(ymaxoff!=null){if($.type(ymaxoff)=="number"){ystop=yaxis.series_u2p(yaxis.max+ymaxoff);
}else{if($.type(ymaxoff)=="string"){ystop=yaxis.series_u2p(yaxis.max)+parseFloat(ymaxoff);
}}}}if(xstop!=null&&xstart!=null&&ystop!=null&&ystart!=null){obj.gridStart=[xstart,ystart];
obj.gridStop=[xstop,ystop];
this.canvas._ctx.fillStyle=obj.options.color;
this.canvas._ctx.fillRect(xstart,ystart,xstop-xstart,ystop-ystart);
}break;
default:break;
}}}}};
$.jqplot.CanvasOverlay.postPlotDraw=function(){var co=this.plugins.canvasOverlay;
if(co&&co.highlightCanvas){co.highlightCanvas.resetCanvas();
co.highlightCanvas=null;
}co.canvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(co.canvas.createElement(this._gridPadding,"jqplot-overlayCanvas-canvas",this._plotDimensions,this));
co.canvas.setContext();
if(!co.deferDraw){co.draw(this);
}var elem=document.createElement("div");
co._tooltipElem=$(elem);
elem=null;
co._tooltipElem.addClass("jqplot-canvasOverlay-tooltip");
co._tooltipElem.css({position:"absolute",display:"none"});
this.eventCanvas._elem.before(co._tooltipElem);
this.eventCanvas._elem.bind("mouseleave",{elem:co._tooltipElem},function(ev){ev.data.elem.hide();
});
var co=null;
};
function showTooltip(plot,obj,gridpos,datapos){var co=plot.plugins.canvasOverlay;
var elem=co._tooltipElem;
var opts=obj.options,x,y;
elem.html($.jqplot.sprintf(opts.tooltipFormatString,datapos[0],datapos[1]));
switch(opts.tooltipLocation){case"nw":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"n":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)/2;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"ne":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
case"e":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":x=gridpos[0]+plot._gridPadding.left+opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"s":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)/2;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"sw":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top+opts.tooltipOffset;
break;
case"w":x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:x=gridpos[0]+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset;
y=gridpos[1]+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true);
break;
}elem.css("left",x);
elem.css("top",y);
if(opts.fadeTooltip){elem.stop(true,true).fadeIn(opts.tooltipFadeSpeed);
}else{elem.show();
}elem=null;
}function isNearLine(point,lstart,lstop,width){var rx=point[0];
var ry=point[1];
var px=Math.round(lstop[0]);
var py=Math.round(lstop[1]);
var qx=Math.round(lstart[0]);
var qy=Math.round(lstart[1]);
var l=Math.sqrt(Math.pow(px-qx,2)+Math.pow(py-qy,2));
var eps=width*l;
var res=Math.abs((qx-px)*(ry-py)-(qy-py)*(rx-px));
var ret=(res<eps)?true:false;
return ret;
}function isNearRectangle(point,lstart,lstop,width){var rx=point[0];
var ry=point[1];
var px=Math.round(lstop[0]);
var py=Math.round(lstop[1]);
var qx=Math.round(lstart[0]);
var qy=Math.round(lstart[1]);
var temp;
if(px>qx){temp=px;
px=qx;
qx=temp;
}if(py>qy){temp=py;
py=qy;
qy=temp;
}var ret=(rx>=px&&rx<=qx&&ry>=py&&ry<=qy);
return ret;
}function handleMove(ev,gridpos,datapos,neighbor,plot){var co=plot.plugins.canvasOverlay;
var objs=co.objects;
var l=objs.length;
var obj,haveHighlight=false;
var elem;
for(var i=0;
i<l;
i++){obj=objs[i];
if(obj.options.showTooltip){var n;
if(obj.type==="rectangle"){n=isNearRectangle([gridpos.x,gridpos.y],obj.gridStart,obj.gridStop,obj.tooltipWidthFactor);
}else{n=isNearLine([gridpos.x,gridpos.y],obj.gridStart,obj.gridStop,obj.tooltipWidthFactor);
}datapos=[plot.axes[obj.options.xaxis].series_p2u(gridpos.x),plot.axes[obj.options.yaxis].series_p2u(gridpos.y)];
if(n&&co.highlightObjectIndex==null){switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}co.highlightObjectIndex=i;
haveHighlight=true;
break;
}else{if(n&&co.highlightObjectIndex!==i){elem=co._tooltipElem;
if(obj.fadeTooltip){elem.fadeOut(obj.tooltipFadeSpeed);
}else{elem.hide();
}switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}co.highlightObjectIndex=i;
haveHighlight=true;
break;
}else{if(n){switch(obj.type){case"line":showTooltip(plot,obj,[gridpos.x,gridpos.y],datapos);
break;
case"horizontalLine":case"dashedHorizontalLine":showTooltip(plot,obj,[gridpos.x,obj.gridStart[1]],[datapos[0],obj.options.y]);
break;
case"verticalLine":case"dashedVerticalLine":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
case"rectangle":showTooltip(plot,obj,[obj.gridStart[0],gridpos.y],[obj.options.x,datapos[1]]);
break;
default:break;
}haveHighlight=true;
break;
}}}}}if(!haveHighlight&&co.highlightObjectIndex!==null){elem=co._tooltipElem;
obj=co.getObject(co.highlightObjectIndex);
if(obj.fadeTooltip){elem.fadeOut(obj.tooltipFadeSpeed);
}else{elem.hide();
}co.highlightObjectIndex=null;
}}$.jqplot.postInitHooks.push($.jqplot.CanvasOverlay.postPlotInit);
$.jqplot.postDrawHooks.push($.jqplot.CanvasOverlay.postPlotDraw);
$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMove]);
})(jQuery);
(function($){$.jqplot.CanvasTextRenderer=function(options){this.fontStyle="normal";
this.fontVariant="normal";
this.fontWeight="normal";
this.fontSize="10px";
this.fontFamily="sans-serif";
this.fontStretch=1;
this.fillStyle="#666666";
this.angle=0;
this.textAlign="start";
this.textBaseline="alphabetic";
this.text;
this.width;
this.height;
this.pt2px=1.28;
$.extend(true,this,options);
this.normalizedFontSize=this.normalizeFontSize(this.fontSize);
this.setHeight();
};
$.jqplot.CanvasTextRenderer.prototype.init=function(options){$.extend(true,this,options);
this.normalizedFontSize=this.normalizeFontSize(this.fontSize);
this.setHeight();
};
$.jqplot.CanvasTextRenderer.prototype.normalizeFontSize=function(sz){sz=String(sz);
var n=parseFloat(sz);
if(sz.indexOf("px")>-1){return n/this.pt2px;
}else{if(sz.indexOf("pt")>-1){return n;
}else{if(sz.indexOf("em")>-1){return n*12;
}else{if(sz.indexOf("%")>-1){return n*12/100;
}else{return n/this.pt2px;
}}}}};
$.jqplot.CanvasTextRenderer.prototype.fontWeight2Float=function(w){if(Number(w)){return w/400;
}else{switch(w){case"normal":return 1;
break;
case"bold":return 1.75;
break;
case"bolder":return 2.25;
break;
case"lighter":return 0.75;
break;
default:return 1;
break;
}}};
$.jqplot.CanvasTextRenderer.prototype.getText=function(){return this.text;
};
$.jqplot.CanvasTextRenderer.prototype.setText=function(t,ctx){this.text=t;
this.setWidth(ctx);
return this;
};
$.jqplot.CanvasTextRenderer.prototype.getWidth=function(ctx){return this.width;
};
$.jqplot.CanvasTextRenderer.prototype.setWidth=function(ctx,w){if(!w){this.width=this.measure(ctx,this.text);
}else{this.width=w;
}return this;
};
$.jqplot.CanvasTextRenderer.prototype.getHeight=function(ctx){return this.height;
};
$.jqplot.CanvasTextRenderer.prototype.setHeight=function(w){if(!w){this.height=this.normalizedFontSize*this.pt2px;
}else{this.height=w;
}return this;
};
$.jqplot.CanvasTextRenderer.prototype.letter=function(ch){return this.letters[ch];
};
$.jqplot.CanvasTextRenderer.prototype.ascent=function(){return this.normalizedFontSize;
};
$.jqplot.CanvasTextRenderer.prototype.descent=function(){return 7*this.normalizedFontSize/25;
};
$.jqplot.CanvasTextRenderer.prototype.measure=function(ctx,str){var total=0;
var len=str.length;
for(var i=0;
i<len;
i++){var c=this.letter(str.charAt(i));
if(c){total+=c.width*this.normalizedFontSize/25*this.fontStretch;
}}return total;
};
$.jqplot.CanvasTextRenderer.prototype.draw=function(ctx,str){var x=0;
var y=this.height*0.72;
var total=0;
var len=str.length;
var mag=this.normalizedFontSize/25;
ctx.save();
var tx,ty;
if((-Math.PI/2<=this.angle&&this.angle<=0)||(Math.PI*3/2<=this.angle&&this.angle<=Math.PI*2)){tx=0;
ty=-Math.sin(this.angle)*this.width;
}else{if((0<this.angle&&this.angle<=Math.PI/2)||(-Math.PI*2<=this.angle&&this.angle<=-Math.PI*3/2)){tx=Math.sin(this.angle)*this.height;
ty=0;
}else{if((-Math.PI<this.angle&&this.angle<-Math.PI/2)||(Math.PI<=this.angle&&this.angle<=Math.PI*3/2)){tx=-Math.cos(this.angle)*this.width;
ty=-Math.sin(this.angle)*this.width-Math.cos(this.angle)*this.height;
}else{if((-Math.PI*3/2<this.angle&&this.angle<Math.PI)||(Math.PI/2<this.angle&&this.angle<Math.PI)){tx=Math.sin(this.angle)*this.height-Math.cos(this.angle)*this.width;
ty=-Math.cos(this.angle)*this.height;
}}}}ctx.strokeStyle=this.fillStyle;
ctx.fillStyle=this.fillStyle;
ctx.translate(tx,ty);
ctx.rotate(this.angle);
ctx.lineCap="round";
var fact=(this.normalizedFontSize>30)?2:2+(30-this.normalizedFontSize)/20;
ctx.lineWidth=fact*mag*this.fontWeight2Float(this.fontWeight);
for(var i=0;
i<len;
i++){var c=this.letter(str.charAt(i));
if(!c){continue;
}ctx.beginPath();
var penUp=1;
var needStroke=0;
for(var j=0;
j<c.points.length;
j++){var a=c.points[j];
if(a[0]==-1&&a[1]==-1){penUp=1;
continue;
}if(penUp){ctx.moveTo(x+a[0]*mag*this.fontStretch,y-a[1]*mag);
penUp=false;
}else{ctx.lineTo(x+a[0]*mag*this.fontStretch,y-a[1]*mag);
}}ctx.stroke();
x+=c.width*mag*this.fontStretch;
}ctx.restore();
return total;
};
$.jqplot.CanvasTextRenderer.prototype.letters={" ":{width:16,points:[]},"!":{width:10,points:[[5,21],[5,7],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]]},'"':{width:16,points:[[4,21],[4,14],[-1,-1],[12,21],[12,14]]},"#":{width:21,points:[[11,25],[4,-7],[-1,-1],[17,25],[10,-7],[-1,-1],[4,12],[18,12],[-1,-1],[3,6],[17,6]]},"$":{width:20,points:[[8,25],[8,-4],[-1,-1],[12,25],[12,-4],[-1,-1],[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]]},"%":{width:24,points:[[21,21],[3,0],[-1,-1],[8,21],[10,19],[10,17],[9,15],[7,14],[5,14],[3,16],[3,18],[4,20],[6,21],[8,21],[10,20],[13,19],[16,19],[19,20],[21,21],[-1,-1],[17,7],[15,6],[14,4],[14,2],[16,0],[18,0],[20,1],[21,3],[21,5],[19,7],[17,7]]},"&":{width:26,points:[[23,12],[23,13],[22,14],[21,14],[20,13],[19,11],[17,6],[15,3],[13,1],[11,0],[7,0],[5,1],[4,2],[3,4],[3,6],[4,8],[5,9],[12,13],[13,14],[14,16],[14,18],[13,20],[11,21],[9,20],[8,18],[8,16],[9,13],[11,10],[16,3],[18,1],[20,0],[22,0],[23,1],[23,2]]},"'":{width:10,points:[[5,19],[4,20],[5,21],[6,20],[6,18],[5,16],[4,15]]},"(":{width:14,points:[[11,25],[9,23],[7,20],[5,16],[4,11],[4,7],[5,2],[7,-2],[9,-5],[11,-7]]},")":{width:14,points:[[3,25],[5,23],[7,20],[9,16],[10,11],[10,7],[9,2],[7,-2],[5,-5],[3,-7]]},"*":{width:16,points:[[8,21],[8,9],[-1,-1],[3,18],[13,12],[-1,-1],[13,18],[3,12]]},"+":{width:26,points:[[13,18],[13,0],[-1,-1],[4,9],[22,9]]},",":{width:10,points:[[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]]},"-":{width:18,points:[[6,9],[12,9]]},".":{width:10,points:[[5,2],[4,1],[5,0],[6,1],[5,2]]},"/":{width:22,points:[[20,25],[2,-7]]},"0":{width:20,points:[[9,21],[6,20],[4,17],[3,12],[3,9],[4,4],[6,1],[9,0],[11,0],[14,1],[16,4],[17,9],[17,12],[16,17],[14,20],[11,21],[9,21]]},"1":{width:20,points:[[6,17],[8,18],[11,21],[11,0]]},"2":{width:20,points:[[4,16],[4,17],[5,19],[6,20],[8,21],[12,21],[14,20],[15,19],[16,17],[16,15],[15,13],[13,10],[3,0],[17,0]]},"3":{width:20,points:[[5,21],[16,21],[10,13],[13,13],[15,12],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]]},"4":{width:20,points:[[13,21],[3,7],[18,7],[-1,-1],[13,21],[13,0]]},"5":{width:20,points:[[15,21],[5,21],[4,12],[5,13],[8,14],[11,14],[14,13],[16,11],[17,8],[17,6],[16,3],[14,1],[11,0],[8,0],[5,1],[4,2],[3,4]]},"6":{width:20,points:[[16,18],[15,20],[12,21],[10,21],[7,20],[5,17],[4,12],[4,7],[5,3],[7,1],[10,0],[11,0],[14,1],[16,3],[17,6],[17,7],[16,10],[14,12],[11,13],[10,13],[7,12],[5,10],[4,7]]},"7":{width:20,points:[[17,21],[7,0],[-1,-1],[3,21],[17,21]]},"8":{width:20,points:[[8,21],[5,20],[4,18],[4,16],[5,14],[7,13],[11,12],[14,11],[16,9],[17,7],[17,4],[16,2],[15,1],[12,0],[8,0],[5,1],[4,2],[3,4],[3,7],[4,9],[6,11],[9,12],[13,13],[15,14],[16,16],[16,18],[15,20],[12,21],[8,21]]},"9":{width:20,points:[[16,14],[15,11],[13,9],[10,8],[9,8],[6,9],[4,11],[3,14],[3,15],[4,18],[6,20],[9,21],[10,21],[13,20],[15,18],[16,14],[16,9],[15,4],[13,1],[10,0],[8,0],[5,1],[4,3]]},":":{width:10,points:[[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[5,2],[4,1],[5,0],[6,1],[5,2]]},";":{width:10,points:[[5,14],[4,13],[5,12],[6,13],[5,14],[-1,-1],[6,1],[5,0],[4,1],[5,2],[6,1],[6,-1],[5,-3],[4,-4]]},"<":{width:24,points:[[20,18],[4,9],[20,0]]},"=":{width:26,points:[[4,12],[22,12],[-1,-1],[4,6],[22,6]]},">":{width:24,points:[[4,18],[20,9],[4,0]]},"?":{width:18,points:[[3,16],[3,17],[4,19],[5,20],[7,21],[11,21],[13,20],[14,19],[15,17],[15,15],[14,13],[13,12],[9,10],[9,7],[-1,-1],[9,2],[8,1],[9,0],[10,1],[9,2]]},"@":{width:27,points:[[18,13],[17,15],[15,16],[12,16],[10,15],[9,14],[8,11],[8,8],[9,6],[11,5],[14,5],[16,6],[17,8],[-1,-1],[12,16],[10,14],[9,11],[9,8],[10,6],[11,5],[-1,-1],[18,16],[17,8],[17,6],[19,5],[21,5],[23,7],[24,10],[24,12],[23,15],[22,17],[20,19],[18,20],[15,21],[12,21],[9,20],[7,19],[5,17],[4,15],[3,12],[3,9],[4,6],[5,4],[7,2],[9,1],[12,0],[15,0],[18,1],[20,2],[21,3],[-1,-1],[19,16],[18,8],[18,6],[19,5]]},A:{width:18,points:[[9,21],[1,0],[-1,-1],[9,21],[17,0],[-1,-1],[4,7],[14,7]]},B:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[-1,-1],[4,11],[13,11],[16,10],[17,9],[18,7],[18,4],[17,2],[16,1],[13,0],[4,0]]},C:{width:21,points:[[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5]]},D:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[11,21],[14,20],[16,18],[17,16],[18,13],[18,8],[17,5],[16,3],[14,1],[11,0],[4,0]]},E:{width:19,points:[[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11],[-1,-1],[4,0],[17,0]]},F:{width:18,points:[[4,21],[4,0],[-1,-1],[4,21],[17,21],[-1,-1],[4,11],[12,11]]},G:{width:21,points:[[18,16],[17,18],[15,20],[13,21],[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[18,8],[-1,-1],[13,8],[18,8]]},H:{width:22,points:[[4,21],[4,0],[-1,-1],[18,21],[18,0],[-1,-1],[4,11],[18,11]]},I:{width:8,points:[[4,21],[4,0]]},J:{width:16,points:[[12,21],[12,5],[11,2],[10,1],[8,0],[6,0],[4,1],[3,2],[2,5],[2,7]]},K:{width:21,points:[[4,21],[4,0],[-1,-1],[18,21],[4,7],[-1,-1],[9,12],[18,0]]},L:{width:17,points:[[4,21],[4,0],[-1,-1],[4,0],[16,0]]},M:{width:24,points:[[4,21],[4,0],[-1,-1],[4,21],[12,0],[-1,-1],[20,21],[12,0],[-1,-1],[20,21],[20,0]]},N:{width:22,points:[[4,21],[4,0],[-1,-1],[4,21],[18,0],[-1,-1],[18,21],[18,0]]},O:{width:22,points:[[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21]]},P:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,14],[17,12],[16,11],[13,10],[4,10]]},Q:{width:22,points:[[9,21],[7,20],[5,18],[4,16],[3,13],[3,8],[4,5],[5,3],[7,1],[9,0],[13,0],[15,1],[17,3],[18,5],[19,8],[19,13],[18,16],[17,18],[15,20],[13,21],[9,21],[-1,-1],[12,4],[18,-2]]},R:{width:21,points:[[4,21],[4,0],[-1,-1],[4,21],[13,21],[16,20],[17,19],[18,17],[18,15],[17,13],[16,12],[13,11],[4,11],[-1,-1],[11,11],[18,0]]},S:{width:20,points:[[17,18],[15,20],[12,21],[8,21],[5,20],[3,18],[3,16],[4,14],[5,13],[7,12],[13,10],[15,9],[16,8],[17,6],[17,3],[15,1],[12,0],[8,0],[5,1],[3,3]]},T:{width:16,points:[[8,21],[8,0],[-1,-1],[1,21],[15,21]]},U:{width:22,points:[[4,21],[4,6],[5,3],[7,1],[10,0],[12,0],[15,1],[17,3],[18,6],[18,21]]},V:{width:18,points:[[1,21],[9,0],[-1,-1],[17,21],[9,0]]},W:{width:24,points:[[2,21],[7,0],[-1,-1],[12,21],[7,0],[-1,-1],[12,21],[17,0],[-1,-1],[22,21],[17,0]]},X:{width:20,points:[[3,21],[17,0],[-1,-1],[17,21],[3,0]]},Y:{width:18,points:[[1,21],[9,11],[9,0],[-1,-1],[17,21],[9,11]]},Z:{width:20,points:[[17,21],[3,0],[-1,-1],[3,21],[17,21],[-1,-1],[3,0],[17,0]]},"[":{width:14,points:[[4,25],[4,-7],[-1,-1],[5,25],[5,-7],[-1,-1],[4,25],[11,25],[-1,-1],[4,-7],[11,-7]]},"\\":{width:14,points:[[0,21],[14,-3]]},"]":{width:14,points:[[9,25],[9,-7],[-1,-1],[10,25],[10,-7],[-1,-1],[3,25],[10,25],[-1,-1],[3,-7],[10,-7]]},"^":{width:16,points:[[6,15],[8,18],[10,15],[-1,-1],[3,12],[8,17],[13,12],[-1,-1],[8,17],[8,0]]},_:{width:16,points:[[0,-2],[16,-2]]},"`":{width:10,points:[[6,21],[5,20],[4,18],[4,16],[5,15],[6,16],[5,17]]},a:{width:19,points:[[15,14],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},b:{width:19,points:[[4,21],[4,0],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]]},c:{width:18,points:[[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},d:{width:19,points:[[15,21],[15,0],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},e:{width:18,points:[[3,8],[15,8],[15,10],[14,12],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},f:{width:12,points:[[10,21],[8,21],[6,20],[5,17],[5,0],[-1,-1],[2,14],[9,14]]},g:{width:19,points:[[15,14],[15,-2],[14,-5],[13,-6],[11,-7],[8,-7],[6,-6],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},h:{width:19,points:[[4,21],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]]},i:{width:8,points:[[3,21],[4,20],[5,21],[4,22],[3,21],[-1,-1],[4,14],[4,0]]},j:{width:10,points:[[5,21],[6,20],[7,21],[6,22],[5,21],[-1,-1],[6,14],[6,-3],[5,-6],[3,-7],[1,-7]]},k:{width:17,points:[[4,21],[4,0],[-1,-1],[14,14],[4,4],[-1,-1],[8,8],[15,0]]},l:{width:8,points:[[4,21],[4,0]]},m:{width:30,points:[[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0],[-1,-1],[15,10],[18,13],[20,14],[23,14],[25,13],[26,10],[26,0]]},n:{width:19,points:[[4,14],[4,0],[-1,-1],[4,10],[7,13],[9,14],[12,14],[14,13],[15,10],[15,0]]},o:{width:19,points:[[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3],[16,6],[16,8],[15,11],[13,13],[11,14],[8,14]]},p:{width:19,points:[[4,14],[4,-7],[-1,-1],[4,11],[6,13],[8,14],[11,14],[13,13],[15,11],[16,8],[16,6],[15,3],[13,1],[11,0],[8,0],[6,1],[4,3]]},q:{width:19,points:[[15,14],[15,-7],[-1,-1],[15,11],[13,13],[11,14],[8,14],[6,13],[4,11],[3,8],[3,6],[4,3],[6,1],[8,0],[11,0],[13,1],[15,3]]},r:{width:13,points:[[4,14],[4,0],[-1,-1],[4,8],[5,11],[7,13],[9,14],[12,14]]},s:{width:17,points:[[14,11],[13,13],[10,14],[7,14],[4,13],[3,11],[4,9],[6,8],[11,7],[13,6],[14,4],[14,3],[13,1],[10,0],[7,0],[4,1],[3,3]]},t:{width:12,points:[[5,21],[5,4],[6,1],[8,0],[10,0],[-1,-1],[2,14],[9,14]]},u:{width:19,points:[[4,14],[4,4],[5,1],[7,0],[10,0],[12,1],[15,4],[-1,-1],[15,14],[15,0]]},v:{width:16,points:[[2,14],[8,0],[-1,-1],[14,14],[8,0]]},w:{width:22,points:[[3,14],[7,0],[-1,-1],[11,14],[7,0],[-1,-1],[11,14],[15,0],[-1,-1],[19,14],[15,0]]},x:{width:17,points:[[3,14],[14,0],[-1,-1],[14,14],[3,0]]},y:{width:16,points:[[2,14],[8,0],[-1,-1],[14,14],[8,0],[6,-4],[4,-6],[2,-7],[1,-7]]},z:{width:17,points:[[14,14],[3,0],[-1,-1],[3,14],[14,14],[-1,-1],[3,0],[14,0]]},"{":{width:14,points:[[9,25],[7,24],[6,23],[5,21],[5,19],[6,17],[7,16],[8,14],[8,12],[6,10],[-1,-1],[7,24],[6,22],[6,20],[7,18],[8,17],[9,15],[9,13],[8,11],[4,9],[8,7],[9,5],[9,3],[8,1],[7,0],[6,-2],[6,-4],[7,-6],[-1,-1],[6,8],[8,6],[8,4],[7,2],[6,1],[5,-1],[5,-3],[6,-5],[7,-6],[9,-7]]},"|":{width:8,points:[[4,25],[4,-7]]},"}":{width:14,points:[[5,25],[7,24],[8,23],[9,21],[9,19],[8,17],[7,16],[6,14],[6,12],[8,10],[-1,-1],[7,24],[8,22],[8,20],[7,18],[6,17],[5,15],[5,13],[6,11],[10,9],[6,7],[5,5],[5,3],[6,1],[7,0],[8,-2],[8,-4],[7,-6],[-1,-1],[8,8],[6,6],[6,4],[7,2],[8,1],[9,-1],[9,-3],[8,-5],[7,-6],[5,-7]]},"~":{width:24,points:[[3,6],[3,8],[4,11],[6,12],[8,12],[10,11],[14,8],[16,7],[18,7],[20,8],[21,10],[-1,-1],[3,8],[4,10],[6,11],[8,11],[10,10],[14,7],[16,6],[18,6],[20,7],[21,10],[21,12]]}};
$.jqplot.CanvasFontRenderer=function(options){options=options||{};
if(!options.pt2px){options.pt2px=1.5;
}$.jqplot.CanvasTextRenderer.call(this,options);
};
$.jqplot.CanvasFontRenderer.prototype=new $.jqplot.CanvasTextRenderer({});
$.jqplot.CanvasFontRenderer.prototype.constructor=$.jqplot.CanvasFontRenderer;
$.jqplot.CanvasFontRenderer.prototype.measure=function(ctx,str){var fstyle=this.fontSize+" "+this.fontFamily;
ctx.save();
ctx.font=fstyle;
var w=ctx.measureText(str).width;
ctx.restore();
return w;
};
$.jqplot.CanvasFontRenderer.prototype.draw=function(ctx,str){var x=0;
var y=this.height*0.72;
ctx.save();
var tx,ty;
if((-Math.PI/2<=this.angle&&this.angle<=0)||(Math.PI*3/2<=this.angle&&this.angle<=Math.PI*2)){tx=0;
ty=-Math.sin(this.angle)*this.width;
}else{if((0<this.angle&&this.angle<=Math.PI/2)||(-Math.PI*2<=this.angle&&this.angle<=-Math.PI*3/2)){tx=Math.sin(this.angle)*this.height;
ty=0;
}else{if((-Math.PI<this.angle&&this.angle<-Math.PI/2)||(Math.PI<=this.angle&&this.angle<=Math.PI*3/2)){tx=-Math.cos(this.angle)*this.width;
ty=-Math.sin(this.angle)*this.width-Math.cos(this.angle)*this.height;
}else{if((-Math.PI*3/2<this.angle&&this.angle<Math.PI)||(Math.PI/2<this.angle&&this.angle<Math.PI)){tx=Math.sin(this.angle)*this.height-Math.cos(this.angle)*this.width;
ty=-Math.cos(this.angle)*this.height;
}}}}ctx.strokeStyle=this.fillStyle;
ctx.fillStyle=this.fillStyle;
var fstyle=this.fontSize+" "+this.fontFamily;
ctx.font=fstyle;
ctx.translate(tx,ty);
ctx.rotate(this.angle);
ctx.fillText(str,x,y);
ctx.restore();
};
})(jQuery);
(function($){$.jqplot.CategoryAxisRenderer=function(options){$.jqplot.LinearAxisRenderer.call(this);
this.sortMergedLabels=false;
};
$.jqplot.CategoryAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.CategoryAxisRenderer.prototype.constructor=$.jqplot.CategoryAxisRenderer;
$.jqplot.CategoryAxisRenderer.prototype.init=function(options){this.groups=1;
this.groupLabels=[];
this._groupLabels=[];
this._grouped=false;
this._barsPerGroup=null;
this.reverse=false;
$.extend(true,this,{tickOptions:{formatString:"%d"}},options);
var db=this._dataBounds;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
if(s.groups){this.groups=s.groups;
}var d=s.data;
for(var j=0;
j<d.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){if(d[j][0]<db.min||db.min==null){db.min=d[j][0];
}if(d[j][0]>db.max||db.max==null){db.max=d[j][0];
}}else{if(d[j][1]<db.min||db.min==null){db.min=d[j][1];
}if(d[j][1]>db.max||db.max==null){db.max=d[j][1];
}}}}if(this.groupLabels.length){this.groups=this.groupLabels.length;
}};
$.jqplot.CategoryAxisRenderer.prototype.createTicks=function(){var ticks=this._ticks;
var userTicks=this.ticks;
var name=this.name;
var db=this._dataBounds;
var dim,interval;
var min,max;
var pos1,pos2;
var tt,i;
if(userTicks.length){if(this.groups>1&&!this._grouped){var l=userTicks.length;
var skip=parseInt(l/this.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip){userTicks.splice(i+count,0," ");
count++;
}this._grouped=true;
}this.min=0.5;
this.max=userTicks.length+0.5;
var range=this.max-this.min;
this.numberTicks=2*userTicks.length+1;
for(i=0;
i<userTicks.length;
i++){tt=this.min+2*i*range/(this.numberTicks-1);
var t=new this.tickRenderer(this.tickOptions);
t.showLabel=false;
t.setTick(tt,this.name);
this._ticks.push(t);
var t=new this.tickRenderer(this.tickOptions);
t.label=userTicks[i];
t.showMark=false;
t.showGridline=false;
t.setTick(tt+0.5,this.name);
this._ticks.push(t);
}var t=new this.tickRenderer(this.tickOptions);
t.showLabel=false;
t.setTick(tt+1,this.name);
this._ticks.push(t);
}else{if(name=="xaxis"||name=="x2axis"){dim=this._plotDimensions.width;
}else{dim=this._plotDimensions.height;
}if(this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null;
}if(this.min!=null&&this.max!=null&&this.tickInterval!=null){if(parseInt((this.max-this.min)/this.tickInterval,10)!=(this.max-this.min)/this.tickInterval){this.tickInterval=null;
}}var labels=[];
var numcats=0;
var min=0.5;
var max,val;
var isMerged=false;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
for(var j=0;
j<s.data.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){val=s.data[j][0];
}else{val=s.data[j][1];
}if($.inArray(val,labels)==-1){isMerged=true;
numcats+=1;
labels.push(val);
}}}if(isMerged&&this.sortMergedLabels){labels.sort(function(a,b){return a-b;
});
}this.ticks=labels;
for(var i=0;
i<this._series.length;
i++){var s=this._series[i];
for(var j=0;
j<s.data.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){val=s.data[j][0];
}else{val=s.data[j][1];
}var idx=$.inArray(val,labels)+1;
if(this.name=="xaxis"||this.name=="x2axis"){s.data[j][0]=idx;
}else{s.data[j][1]=idx;
}}}if(this.groups>1&&!this._grouped){var l=labels.length;
var skip=parseInt(l/this.groups,10);
var count=0;
for(var i=skip;
i<l;
i+=skip+1){labels[i]=" ";
}this._grouped=true;
}max=numcats+0.5;
if(this.numberTicks==null){this.numberTicks=2*numcats+1;
}var range=max-min;
this.min=min;
this.max=max;
var track=0;
var maxVisibleTicks=parseInt(3+dim/10,10);
var skip=parseInt(numcats/maxVisibleTicks,10);
if(this.tickInterval==null){this.tickInterval=range/(this.numberTicks-1);
}for(var i=0;
i<this.numberTicks;
i++){tt=this.min+i*this.tickInterval;
var t=new this.tickRenderer(this.tickOptions);
if(i/2==parseInt(i/2,10)){t.showLabel=false;
t.showMark=true;
}else{if(skip>0&&track<skip){t.showLabel=false;
track+=1;
}else{t.showLabel=true;
track=0;
}t.label=t.formatter(t.formatString,labels[(i-1)/2]);
t.showMark=false;
t.showGridline=false;
}t.setTick(tt,this.name);
this._ticks.push(t);
}}};
$.jqplot.CategoryAxisRenderer.prototype.draw=function(ctx,plot){if(this.show){this.renderer.createTicks.call(this);
var dim=0;
var temp;
if(this._elem){this._elem.emptyForce();
}this._elem=this._elem||$('<div class="jqplot-axis jqplot-'+this.name+'" style="position:absolute;"></div>');
if(this.name=="xaxis"||this.name=="x2axis"){this._elem.width(this._plotDimensions.width);
}else{this._elem.height(this._plotDimensions.height);
}this.labelOptions.axis=this.name;
this._label=new this.labelRenderer(this.labelOptions);
if(this._label.show){var elem=this._label.draw(ctx,plot);
elem.appendTo(this._elem);
}var t=this._ticks;
for(var i=0;
i<t.length;
i++){var tick=t[i];
if(tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){var elem=tick.draw(ctx,plot);
elem.appendTo(this._elem);
}}this._groupLabels=[];
for(var i=0;
i<this.groupLabels.length;
i++){var elem=$('<div style="position:absolute;" class="jqplot-'+this.name+'-groupLabel"></div>');
elem.html(this.groupLabels[i]);
this._groupLabels.push(elem);
elem.appendTo(this._elem);
}}return this._elem;
};
$.jqplot.CategoryAxisRenderer.prototype.set=function(){var dim=0;
var temp;
var w=0;
var h=0;
var lshow=(this._label==null)?false:this._label.show;
if(this.show){var t=this._ticks;
for(var i=0;
i<t.length;
i++){var tick=t[i];
if(tick.showLabel&&(!tick.isMinorTick||this.showMinorTicks)){if(this.name=="xaxis"||this.name=="x2axis"){temp=tick._elem.outerHeight(true);
}else{temp=tick._elem.outerWidth(true);
}if(temp>dim){dim=temp;
}}}var dim2=0;
for(var i=0;
i<this._groupLabels.length;
i++){var l=this._groupLabels[i];
if(this.name=="xaxis"||this.name=="x2axis"){temp=l.outerHeight(true);
}else{temp=l.outerWidth(true);
}if(temp>dim2){dim2=temp;
}}if(lshow){w=this._label._elem.outerWidth(true);
h=this._label._elem.outerHeight(true);
}if(this.name=="xaxis"){dim+=dim2+h;
this._elem.css({height:dim+"px",left:"0px",bottom:"0px"});
}else{if(this.name=="x2axis"){dim+=dim2+h;
this._elem.css({height:dim+"px",left:"0px",top:"0px"});
}else{if(this.name=="yaxis"){dim+=dim2+w;
this._elem.css({width:dim+"px",left:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}else{dim+=dim2+w;
this._elem.css({width:dim+"px",right:"0px",top:"0px"});
if(lshow&&this._label.constructor==$.jqplot.AxisLabelRenderer){this._label._elem.css("width",w+"px");
}}}}}};
$.jqplot.CategoryAxisRenderer.prototype.pack=function(pos,offsets){var ticks=this._ticks;
var max=this.max;
var min=this.min;
var offmax=offsets.max;
var offmin=offsets.min;
var lshow=(this._label==null)?false:this._label.show;
var i;
for(var p in pos){this._elem.css(p,pos[p]);
}this._offsets=offsets;
var pixellength=offmax-offmin;
var unitlength=max-min;
if(!this.reverse){this.u2p=function(u){return(u-min)*pixellength/unitlength+offmin;
};
this.p2u=function(p){return(p-offmin)*unitlength/pixellength+min;
};
if(this.name=="xaxis"||this.name=="x2axis"){this.series_u2p=function(u){return(u-min)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}else{this.series_u2p=function(u){return(u-max)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}}else{this.u2p=function(u){return offmin+(max-u)*pixellength/unitlength;
};
this.p2u=function(p){return min+(p-offmin)*unitlength/pixellength;
};
if(this.name=="xaxis"||this.name=="x2axis"){this.series_u2p=function(u){return(max-u)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+max;
};
}else{this.series_u2p=function(u){return(min-u)*pixellength/unitlength;
};
this.series_p2u=function(p){return p*unitlength/pixellength+min;
};
}}if(this.show){if(this.name=="xaxis"||this.name=="x2axis"){for(i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="xaxis")?1:-1;
switch(t.labelPosition){case"auto":if(temp*t.angle<0){shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
}else{shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
}break;
case"end":shim=-t.getWidth()+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
case"start":shim=-t._textRenderer.height*Math.sin(t._textRenderer.angle)/2;
break;
case"middle":shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
default:shim=-t.getWidth()/2+t._textRenderer.height*Math.sin(-t._textRenderer.angle)/2;
break;
}}else{shim=-t.getWidth()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("left",val);
t.pack();
}}var labeledge=["bottom",0];
if(lshow){var w=this._label._elem.outerWidth(true);
this._label._elem.css("left",offmin+pixellength/2-w/2+"px");
if(this.name=="xaxis"){this._label._elem.css("bottom","0px");
labeledge=["bottom",this._label._elem.outerHeight(true)];
}else{this._label._elem.css("top","0px");
labeledge=["top",this._label._elem.outerHeight(true)];
}this._label.pack();
}var step=parseInt(this._ticks.length/this.groups,10);
for(i=0;
i<this._groupLabels.length;
i++){var mid=0;
var count=0;
for(var j=i*step;
j<=(i+1)*step;
j++){if(this._ticks[j]._elem&&this._ticks[j].label!=" "){var t=this._ticks[j]._elem;
var p=t.position();
mid+=p.left+t.outerWidth(true)/2;
count++;
}}mid=mid/count;
this._groupLabels[i].css({left:(mid-this._groupLabels[i].outerWidth(true)/2)});
this._groupLabels[i].css(labeledge[0],labeledge[1]);
}}else{for(i=0;
i<ticks.length;
i++){var t=ticks[i];
if(t.show&&t.showLabel){var shim;
if(t.constructor==$.jqplot.CanvasAxisTickRenderer&&t.angle){var temp=(this.name=="yaxis")?1:-1;
switch(t.labelPosition){case"auto":case"end":if(temp*t.angle<0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"start":if(t.angle>0){shim=-t._textRenderer.height*Math.cos(-t._textRenderer.angle)/2;
}else{shim=-t.getHeight()+t._textRenderer.height*Math.cos(t._textRenderer.angle)/2;
}break;
case"middle":shim=-t.getHeight()/2;
break;
default:shim=-t.getHeight()/2;
break;
}}else{shim=-t.getHeight()/2;
}var val=this.u2p(t.value)+shim+"px";
t._elem.css("top",val);
t.pack();
}}var labeledge=["left",0];
if(lshow){var h=this._label._elem.outerHeight(true);
this._label._elem.css("top",offmax-pixellength/2-h/2+"px");
if(this.name=="yaxis"){this._label._elem.css("left","0px");
labeledge=["left",this._label._elem.outerWidth(true)];
}else{this._label._elem.css("right","0px");
labeledge=["right",this._label._elem.outerWidth(true)];
}this._label.pack();
}var step=parseInt(this._ticks.length/this.groups,10);
for(i=0;
i<this._groupLabels.length;
i++){var mid=0;
var count=0;
for(var j=i*step;
j<=(i+1)*step;
j++){if(this._ticks[j]._elem&&this._ticks[j].label!=" "){var t=this._ticks[j]._elem;
var p=t.position();
mid+=p.top+t.outerHeight()/2;
count++;
}}mid=mid/count;
this._groupLabels[i].css({top:mid-this._groupLabels[i].outerHeight()/2});
this._groupLabels[i].css(labeledge[0],labeledge[1]);
}}}};
})(jQuery);
(function($){$.jqplot.Cursor=function(options){this.style="crosshair";
this.previousCursor="auto";
this.snapZoomTo=null;
this.show=$.jqplot.config.enablePlugins;
this.performOnZoom=function(plot){};
this.performAfterZoom=function(plot){};
this.showTooltip=true;
this.followMouse=false;
this.tooltipLocation="se";
this.tooltipOffset=6;
this.showTooltipGridPosition=false;
this.showTooltipUnitPosition=true;
this.showTooltipDataPosition=false;
this.tooltipFormatString="%.4P, %.4P";
this.useAxesFormatters=true;
this.tooltipAxisGroups=[];
this.zoom=false;
this.zoomProxy=false;
this.zoomOnController=true;
this.zoomTarget=false;
this.looseZoom=true;
this.clickReset=false;
this.dblClickReset=true;
this.showVerticalLine=false;
this.showHorizontalLine=false;
this.constrainZoomTo="none";
this.shapeRenderer=new $.jqplot.ShapeRenderer();
this._zoom={start:[],end:[],started:false,zooming:false,isZoomed:false,axes:{start:{},end:{}},gridpos:{},datapos:{}};
this._tooltipElem;
this.zoomCanvas;
this.cursorCanvas;
this.intersectionThreshold=2;
this.showCursorLegend=false;
this.cursorLegendFormatString=$.jqplot.Cursor.cursorLegendFormatString;
this._oldHandlers={onselectstart:null,ondrag:null,onmousedown:null};
this.constrainOutsideZoom=true;
this.showTooltipOutsideZoom=false;
this.onGrid=false;
$.extend(true,this,options);
};
$.jqplot.Cursor.cursorLegendFormatString="%s x:%s, y:%s";
$.jqplot.Cursor.init=function(target,data,opts){var options=opts||{};
this.plugins.cursor=new $.jqplot.Cursor(options.cursor);
var c=this.plugins.cursor;
if(c.show){$.jqplot.eventListenerHooks.push(["jqplotMouseEnter",handleMouseEnter]);
$.jqplot.eventListenerHooks.push(["jqplotMouseLeave",handleMouseLeave]);
$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMouseMove]);
if(c.showCursorLegend){opts.legend=opts.legend||{};
opts.legend.renderer=$.jqplot.CursorLegendRenderer;
opts.legend.formatString=this.plugins.cursor.cursorLegendFormatString;
opts.legend.show=true;
}if(c.zoom){$.jqplot.eventListenerHooks.push(["jqplotMouseDown",handleMouseDown]);
if(c.clickReset){$.jqplot.eventListenerHooks.push(["jqplotClick",handleClick]);
}if(c.dblClickReset){$.jqplot.eventListenerHooks.push(["jqplotDblClick",handleDblClick]);
}}this.resetZoom=function(){var axes=this.axes;
if(!c.zoomProxy){var axesLen=axes.length;
for(var ax=0,y=axesLen;
ax<y;
ax++){axes[ax].reset();
axes[ax]._ticks=[];
if(c._zoom.axes[ax]!==undefined){axes[ax]._autoFormatString=c._zoom.axes[ax].tickFormatString;
}}this.redraw();
}else{var ctx=this.plugins.cursor.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}this.plugins.cursor._zoom.isZoomed=false;
this.target.trigger("jqplotResetZoom",[this,this.plugins.cursor]);
};
if(c.showTooltipDataPosition){c.showTooltipUnitPosition=false;
c.showTooltipGridPosition=false;
if(options.cursor.tooltipFormatString==undefined){c.tooltipFormatString=$.jqplot.Cursor.cursorLegendFormatString;
}}}};
$.jqplot.Cursor.postDraw=function(){var c=this.plugins.cursor;
if(c.zoomCanvas){c.zoomCanvas.resetCanvas();
c.zoomCanvas=null;
}if(c.cursorCanvas){c.cursorCanvas.resetCanvas();
c.cursorCanvas=null;
}if(c._tooltipElem){c._tooltipElem.emptyForce();
c._tooltipElem=null;
}c.zoomCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(c.zoomCanvas.createElement(this._gridPadding,"jqplot-zoom-canvas",this._plotDimensions,this));
c.zoomCanvas.setContext();
var elem=document.createElement("div");
c._tooltipElem=$(elem);
elem=null;
c._tooltipElem.addClass("jqplot-cursor-tooltip");
c._tooltipElem.css({position:"absolute",display:"none"});
if(c.zoomCanvas){c.zoomCanvas._elem.before(c._tooltipElem);
}else{this.eventCanvas._elem.before(c._tooltipElem);
}if(c.showVerticalLine||c.showHorizontalLine){c.cursorCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(c.cursorCanvas.createElement(this._gridPadding,"jqplot-cursor-canvas",this._plotDimensions,this));
c.cursorCanvas.setContext();
}if(c.showTooltipUnitPosition){if(c.tooltipAxisGroups.length===0){var series=this.series;
var s;
var temp=[];
for(var i=0;
i<series.length;
i++){s=series[i];
var ax=s.xaxis+","+s.yaxis;
if($.inArray(ax,temp)==-1){temp.push(ax);
}}for(var i=0;
i<temp.length;
i++){c.tooltipAxisGroups.push(temp[i].split(","));
}}}};
$.jqplot.Cursor.zoomProxy=function(targetPlot,controllerPlot,zoomOnController){var tc=targetPlot.plugins.cursor;
var cc=controllerPlot.plugins.cursor;
tc.zoomTarget=true;
tc.zoom=true;
tc.style="auto";
tc.dblClickReset=false;
cc.zoom=true;
cc.zoomProxy=true;
controllerPlot.target.bind("jqplotZoom",plotZoom);
controllerPlot.target.bind("jqplotResetZoom",plotReset);
function plotZoom(ev,gridpos,datapos,plot,cursor){tc.doZoom(gridpos,datapos,targetPlot,cursor);
}function plotReset(ev,plot,cursor){var cax=cursor._zoom.axes;
var axes=targetPlot.axes;
var axesLen=axes.length;
for(var ax in axes){axes[ax]._ticks=[];
axes[ax].min=cax[ax].min;
axes[ax].max=cax[ax].max;
axes[ax].autoscale=cax[ax].autoscale;
axes[ax].numberTicks=cax[ax].numberTicks;
axes[ax].tickInterval=cax[ax].tickInterval;
axes[ax].specialFormat=cax[ax].specialFormat;
axes[ax].specialFormatFlag=cax[ax].specialFormatFlag;
axes[ax].useDST=cax[ax].useDST;
axes[ax].daTickInterval=cax[ax].daTickInterval;
var newMin=Number.POSITIVE_INFINITY,newMax=Number.NEGATIVE_INFINITY;
var targetPlotLen=targetPlot.series.length;
for(var i=0;
i<targetPlotLen;
i++){var sObj=targetPlot.series[i];
var dStr=ax.match(/^[xy]/);
if(sObj.show&&sObj[dStr+"axis"]==ax){var minStr=(dStr=="x")?"minX":"minY";
var maxStr=(dStr=="x")?"maxX":"maxY";
if(sObj[minStr]&&sObj[minStr]<newMin){newMin=sObj[minStr];
}if(sObj[maxStr]&&sObj[maxStr]>newMax){newMax=sObj[maxStr];
}}}if(newMin!=Number.POSITIVE_INFINITY){axes[ax].min=(newMin>0&&(newMin*0.9)<0)?0:newMin*0.9;
axes[ax].numberTicks=null;
axes[ax].tickInterval=null;
axes[ax].daTickInterval=null;
}if(newMax!=Number.NEGATIVE_INFINITY){axes[ax].max=newMax*1.1;
axes[ax].numberTicks=null;
axes[ax].tickInterval=null;
axes[ax].daTickInterval=null;
}}targetPlot.redraw();
cursor._zoom.isZoomed=false;
}};
$.jqplot.Cursor.prototype.resetZoom=function(plot,cursor){var axes=plot.axes;
var cax=cursor._zoom.axes;
if((!plot.plugins.cursor.zoomProxy||plot.plugins.cursor.zoomOnController)&&cursor._zoom.isZoomed){for(var ax in axes){axes[ax]._ticks=[];
axes[ax].min=cax[ax].min;
axes[ax].max=cax[ax].max;
axes[ax].autoscale=cax[ax].autoscale;
axes[ax].numberTicks=cax[ax].numberTicks;
axes[ax].tickInterval=cax[ax].tickInterval;
axes[ax].daTickInterval=cax[ax].daTickInterval;
axes[ax].specialFormat=cax[ax].specialFormat;
axes[ax].specialFormatFlag=cax[ax].specialFormatFlag;
axes[ax].useDST=cax[ax].useDST;
}plot.redraw();
cursor._zoom.isZoomed=false;
}else{var ctx=cursor.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}plot.target.trigger("jqplotResetZoom",[plot,cursor]);
};
$.jqplot.Cursor.resetZoom=function(plot){plot.resetZoom();
};
$.jqplot.Cursor.prototype.doZoom=function(gridpos,datapos,plot,cursor){this.performOnZoom(plot);
var c=cursor;
var axes=plot.axes;
var zaxes=c._zoom.axes;
var start=zaxes.start;
var end=zaxes.end;
var min,max,dp,span,newmin,newmax,curax,_numberTicks,ret;
var ctx=plot.plugins.cursor.zoomCanvas._ctx;
var Date=new $.jsDate();
if((c.constrainZoomTo=="none"&&Math.abs(gridpos.x-c._zoom.start[0])>6&&Math.abs(gridpos.y-c._zoom.start[1])>6)||(c.constrainZoomTo=="x"&&Math.abs(gridpos.x-c._zoom.start[0])>6)||(c.constrainZoomTo=="y"&&Math.abs(gridpos.y-c._zoom.start[1])>6)){if(!plot.plugins.cursor.zoomProxy||plot.plugins.cursor.zoomOnController){for(var ax in datapos){if(c._zoom.axes[ax]==undefined){c._zoom.axes[ax]={};
c._zoom.axes[ax].numberTicks=axes[ax].numberTicks;
c._zoom.axes[ax].tickInterval=axes[ax].tickInterval;
c._zoom.axes[ax].autoscale=axes[ax].autoscale;
c._zoom.axes[ax].daTickInterval=axes[ax].daTickInterval;
c._zoom.axes[ax].specialFormat=axes[ax].specialFormat;
c._zoom.axes[ax].specialFormatFlag=axes[ax].specialFormatFlag;
c._zoom.axes[ax].useDST=axes[ax].useDST;
c._zoom.axes[ax].min=axes[ax].min;
var curmin=new $.jsDate(axes[ax].min);
c._zoom.axes[ax].max=axes[ax].max;
var curmax=new $.jsDate(axes[ax].max);
c._zoom.axes[ax].tickFormatString=(axes[ax].tickOptions!=null)?axes[ax].tickOptions.formatString:"";
}if((c.constrainZoomTo=="none")||(c.constrainZoomTo=="x"&&ax.charAt(0)=="x")||(c.constrainZoomTo=="y"&&ax.charAt(0)=="y")){dp=datapos[ax];
if(dp!=null){if(dp>start[ax]){if(c.snapZoomTo!=null){var minDate=$.jsDate.createDate(start[ax]);
newmin=round(minDate,c.snapZoomTo,"down");
var maxDate=$.jsDate.createDate(dp);
newmax=round(maxDate,c.snapZoomTo,"up");
}else{newmin=start[ax];
newmax=dp;
}}else{span=start[ax]-dp;
if(c.snapZoomTo!=null){var minDate=$.jsDate.createDate(start[ax]);
newmin=round(minDate,c.snapZoomTo,"down");
var maxDate=$.jsDate.createDate(dp);
newmax=round(maxDate,c.snapZoomTo,"up");
}else{newmin=start[ax];
newmax=dp;
}}curax=axes[ax];
_numberTicks=null;
if(curax.alignTicks){if(curax.name==="x2axis"&&plot.axes.xaxis.show){_numberTicks=plot.axes.xaxis.numberTicks;
}else{if(curax.name.charAt(0)==="y"&&curax.name!=="yaxis"&&curax.name!=="yMidAxis"&&plot.axes.yaxis.show){_numberTicks=plot.axes.yaxis.numberTicks;
}}}if(this.looseZoom&&(axes[ax].renderer.constructor===$.jqplot.LinearAxisRenderer||axes[ax].renderer.constructor===$.jqplot.LogAxisRenderer)){ret=$.jqplot.LinearTickGenerator(newmin,newmax,curax._scalefact,_numberTicks);
if(axes[ax].tickInset&&ret[0]<axes[ax].min+axes[ax].tickInset*axes[ax].tickInterval){ret[0]+=ret[4];
ret[2]-=1;
}if(axes[ax].tickInset&&ret[1]>axes[ax].max-axes[ax].tickInset*axes[ax].tickInterval){ret[1]-=ret[4];
ret[2]-=1;
}if(axes[ax].renderer.constructor===$.jqplot.LogAxisRenderer&&ret[0]<axes[ax].min){ret[0]+=ret[4];
ret[2]-=1;
}axes[ax].min=ret[0];
axes[ax].max=ret[1];
axes[ax]._autoFormatString=ret[3];
axes[ax].numberTicks=ret[2];
axes[ax].tickInterval=ret[4];
axes[ax].daTickInterval=[ret[4]/1000,"seconds"];
}else{axes[ax].min=newmin;
var rmin=new $.jsDate(newmin).getTime();
axes[ax].max=newmax;
var rmax=new $.jsDate(newmax).getTime();
var nc=new $.jsDate(rmax).diff(rmin,c.snapZoomTo,true);
var tickIntervalStr=(Math.ceil(nc/axes[ax].numberTicks))+" minutes";
axes[ax].tickInterval=tickIntervalStr;
axes[ax].numberTicks=null;
axes[ax].daTickInterval=tickIntervalStr;
}axes[ax]._ticks=[];
}if(axes[ax].autoscaleOnZoom!=null){axes[ax].autoscale=this.autoscaleOnZoom;
}}}ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
plot.redraw();
c._zoom.isZoomed=true;
ctx=null;
}this.performAfterZoom(plot);
plot.target.trigger("jqplotZoom",[gridpos,datapos,plot,cursor]);
}};
$.jqplot.preInitHooks.push($.jqplot.Cursor.init);
$.jqplot.postDrawHooks.push($.jqplot.Cursor.postDraw);
function round(dateObj,unit,option){if(unit!=null){switch(unit.toLowerCase()){case"seconds":dateObj.setSeconds((option=="down")?0:60);
dateObj.setMilliseconds(0);
break;
case"minutes":dateObj.setMinutes((option=="down")?0:60);
dateObj.setSeconds(0);
dateObj.setMilliseconds(0);
break;
case"hours":dateObj.setHours((option=="down")?0:24);
dateObj.setMinutes(0);
dateObj.setSeconds(0);
dateObj.setMilliseconds(0);
break;
default:break;
}}return dateObj;
}function updateTooltip(gridpos,datapos,plot){var c=plot.plugins.cursor;
var s="";
var addbr=false;
if(c.showTooltipGridPosition){s=gridpos.x+", "+gridpos.y;
addbr=true;
}if(c.showTooltipUnitPosition){var g;
for(var i=0;
i<c.tooltipAxisGroups.length;
i++){g=c.tooltipAxisGroups[i];
if(addbr){s+="<br />";
}if(c.useAxesFormatters){var xf=plot.axes[g[0]]._ticks[0].formatter;
var yf=plot.axes[g[1]]._ticks[0].formatter;
var xfstr=plot.axes[g[0]]._ticks[0].formatString;
var yfstr=plot.axes[g[1]]._ticks[0].formatString;
s+=xf(xfstr,datapos[g[0]])+", "+yf(yfstr,datapos[g[1]]);
}else{s+=$.jqplot.sprintf(c.tooltipFormatString,datapos[g[0]],datapos[g[1]]);
}addbr=true;
}}if(c.showTooltipDataPosition){var series=plot.series;
var ret=getIntersectingPoints(plot,gridpos.x,gridpos.y);
var addbr=false;
for(var i=0;
i<series.length;
i++){if(series[i].show){var idx=series[i].index;
var label=series[i].label.toString();
var cellid=$.inArray(idx,ret.indices);
var sx=undefined;
var sy=undefined;
if(cellid!=-1){var data=ret.data[cellid].data;
if(c.useAxesFormatters){var xf=series[i]._xaxis._ticks[0].formatter;
var yf=series[i]._yaxis._ticks[0].formatter;
var xfstr=series[i]._xaxis._ticks[0].formatString;
var yfstr=series[i]._yaxis._ticks[0].formatString;
sx=xf(xfstr,data[0]);
sy=yf(yfstr,data[1]);
}else{sx=data[0];
sy=data[1];
}if(addbr){s+="<br />";
}s+=$.jqplot.sprintf(c.tooltipFormatString,label,sx,sy);
addbr=true;
}}}}c._tooltipElem.html(s);
}function moveLine(gridpos,plot){var c=plot.plugins.cursor;
var ctx=c.cursorCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
if(c.showVerticalLine){c.shapeRenderer.draw(ctx,[[gridpos.x,0],[gridpos.x,ctx.canvas.height]]);
}if(c.showHorizontalLine){c.shapeRenderer.draw(ctx,[[0,gridpos.y],[ctx.canvas.width,gridpos.y]]);
}var ret=getIntersectingPoints(plot,gridpos.x,gridpos.y);
if(c.showCursorLegend){var cells=$(plot.targetId+" td.jqplot-cursor-legend-label");
for(var i=0;
i<cells.length;
i++){var idx=$(cells[i]).data("seriesIndex");
var series=plot.series[idx];
var label=series.label.toString();
var cellid=$.inArray(idx,ret.indices);
var sx=undefined;
var sy=undefined;
if(cellid!=-1){var data=ret.data[cellid].data;
if(c.useAxesFormatters){var xf=series._xaxis._ticks[0].formatter;
var yf=series._yaxis._ticks[0].formatter;
var xfstr=series._xaxis._ticks[0].formatString;
var yfstr=series._yaxis._ticks[0].formatString;
sx=xf(xfstr,data[0]);
sy=yf(yfstr,data[1]);
}else{sx=data[0];
sy=data[1];
}}if(plot.legend.escapeHtml){$(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString,label,sx,sy));
}else{$(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString,label,sx,sy));
}}}ctx=null;
}function getIntersectingPoints(plot,x,y){var ret={indices:[],data:[]};
var s,i,d0,d,j,r,p;
var threshold;
var c=plot.plugins.cursor;
for(var i=0;
i<plot.series.length;
i++){s=plot.series[i];
r=s.renderer;
if(s.show){threshold=c.intersectionThreshold;
if(s.showMarker){threshold+=s.markerRenderer.size/2;
}for(var j=0;
j<s.gridData.length;
j++){p=s.gridData[j];
if(c.showVerticalLine){if(Math.abs(x-p[0])<=threshold){ret.indices.push(i);
ret.data.push({seriesIndex:i,pointIndex:j,gridData:p,data:s.data[j]});
}}}}}return ret;
}function moveTooltip(gridpos,plot){var c=plot.plugins.cursor;
var elem=c._tooltipElem;
switch(c.tooltipLocation){case"nw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"n":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"ne":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-c.tooltipOffset-elem.outerHeight(true);
break;
case"e":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"s":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"sw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
case"w":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:var x=gridpos.x+plot._gridPadding.left+c.tooltipOffset;
var y=gridpos.y+plot._gridPadding.top+c.tooltipOffset;
break;
}elem.css("left",x);
elem.css("top",y);
elem=null;
}function positionTooltip(plot){var grid=plot._gridPadding;
var c=plot.plugins.cursor;
var elem=c._tooltipElem;
switch(c.tooltipLocation){case"nw":var a=grid.left+c.tooltipOffset;
var b=grid.top+c.tooltipOffset;
elem.css("left",a);
elem.css("top",b);
break;
case"n":var a=(grid.left+(plot._plotDimensions.width-grid.right))/2-elem.outerWidth(true)/2;
var b=grid.top+c.tooltipOffset;
elem.css("left",a);
elem.css("top",b);
break;
case"ne":var a=grid.right+c.tooltipOffset;
var b=grid.top+c.tooltipOffset;
elem.css({right:a,top:b});
break;
case"e":var a=grid.right+c.tooltipOffset;
var b=(grid.top+(plot._plotDimensions.height-grid.bottom))/2-elem.outerHeight(true)/2;
elem.css({right:a,top:b});
break;
case"se":var a=grid.right+c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({right:a,bottom:b});
break;
case"s":var a=(grid.left+(plot._plotDimensions.width-grid.right))/2-elem.outerWidth(true)/2;
var b=grid.bottom+c.tooltipOffset;
elem.css({left:a,bottom:b});
break;
case"sw":var a=grid.left+c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({left:a,bottom:b});
break;
case"w":var a=grid.left+c.tooltipOffset;
var b=(grid.top+(plot._plotDimensions.height-grid.bottom))/2-elem.outerHeight(true)/2;
elem.css({left:a,top:b});
break;
default:var a=grid.right-c.tooltipOffset;
var b=grid.bottom+c.tooltipOffset;
elem.css({right:a,bottom:b});
break;
}elem=null;
}function handleClick(ev,gridpos,datapos,neighbor,plot){ev.preventDefault();
ev.stopImmediatePropagation();
var c=plot.plugins.cursor;
if(c.clickReset){c.resetZoom(plot,c);
}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}return false;
}function handleDblClick(ev,gridpos,datapos,neighbor,plot){ev.preventDefault();
ev.stopImmediatePropagation();
var c=plot.plugins.cursor;
if(c.dblClickReset){c.resetZoom(plot,c);
}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}return false;
}function handleMouseLeave(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
c.onGrid=false;
if(c.show){$(ev.target).css("cursor",c.previousCursor);
if(c.showTooltip&&!(c._zoom.zooming&&c.showTooltipOutsideZoom&&!c.constrainOutsideZoom)){c._tooltipElem.hide();
}if(c.zoom){c._zoom.gridpos=gridpos;
c._zoom.datapos=datapos;
}if(c.showVerticalLine||c.showHorizontalLine){var ctx=c.cursorCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}if(c.showCursorLegend){var cells=$(plot.targetId+" td.jqplot-cursor-legend-label");
for(var i=0;
i<cells.length;
i++){var idx=$(cells[i]).data("seriesIndex");
var series=plot.series[idx];
var label=series.label.toString();
if(plot.legend.escapeHtml){$(cells[i]).text($.jqplot.sprintf(c.cursorLegendFormatString,label,undefined,undefined));
}else{$(cells[i]).html($.jqplot.sprintf(c.cursorLegendFormatString,label,undefined,undefined));
}}}}}function handleMouseEnter(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
c.onGrid=true;
if(c.show){c.previousCursor=ev.target.style.cursor;
ev.target.style.cursor=c.style;
if(c.showTooltip){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}else{positionTooltip(plot);
}c._tooltipElem.show();
}if(c.showVerticalLine||c.showHorizontalLine){moveLine(gridpos,plot);
}}}function handleMouseMove(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
if(c.show){if(c.showTooltip){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}}if(c.showVerticalLine||c.showHorizontalLine){moveLine(gridpos,plot);
}}}function getEventPosition(ev){var plot=ev.data.plot;
var go=plot.eventCanvas._elem.offset();
var gridPos={x:ev.pageX-go.left,y:ev.pageY-go.top};
var dataPos={xaxis:null,yaxis:null,x2axis:null,y2axis:null,y3axis:null,y4axis:null,y5axis:null,y6axis:null,y7axis:null,y8axis:null,y9axis:null,yMidAxis:null};
var an=["xaxis","yaxis","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis"];
var ax=plot.axes;
var n,axis;
for(n=11;
n>0;
n--){axis=an[n-1];
if(ax[axis].show){dataPos[axis]=ax[axis].series_p2u(gridPos[axis.charAt(0)]);
}}return{offsets:go,gridPos:gridPos,dataPos:dataPos};
}function handleZoomMove(ev){var plot=ev.data.plot;
var c=plot.plugins.cursor;
if(c.show&&c.zoom&&c._zoom.started&&!c.zoomTarget){var ctx=c.zoomCanvas._ctx;
var positions=getEventPosition(ev);
var gridpos=positions.gridPos;
var datapos=positions.dataPos;
c._zoom.gridpos=gridpos;
c._zoom.datapos=datapos;
c._zoom.zooming=true;
var xpos=gridpos.x;
var ypos=gridpos.y;
var height=ctx.canvas.height;
var width=ctx.canvas.width;
if(c.showTooltip&&!c.onGrid&&c.showTooltipOutsideZoom){updateTooltip(gridpos,datapos,plot);
if(c.followMouse){moveTooltip(gridpos,plot);
}}if(c.constrainZoomTo=="x"){c._zoom.end=[xpos,height];
}else{if(c.constrainZoomTo=="y"){c._zoom.end=[width,ypos];
}else{c._zoom.end=[xpos,ypos];
}}var sel=window.getSelection;
if(document.selection&&document.selection.empty){document.selection.empty();
}else{if(sel&&!sel().isCollapsed){sel().collapse();
}}drawZoomBox.call(c);
ctx=null;
}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){var c=plot.plugins.cursor;
$(document).one("mouseup.jqplot_cursor",{plot:plot},handleMouseUp);
var axes=plot.axes;
if(document.onselectstart!=undefined){c._oldHandlers.onselectstart=document.onselectstart;
document.onselectstart=function(){return false;
};
}if(document.ondrag!=undefined){c._oldHandlers.ondrag=document.ondrag;
document.ondrag=function(){return false;
};
}if(document.onmousedown!=undefined){c._oldHandlers.onmousedown=document.onmousedown;
document.onmousedown=function(){return false;
};
}if(c.zoom){if(!c.zoomProxy){var ctx=c.zoomCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx=null;
}if(c.constrainZoomTo=="x"){c._zoom.start=[gridpos.x,0];
}else{if(c.constrainZoomTo=="y"){c._zoom.start=[0,gridpos.y];
}else{c._zoom.start=[gridpos.x,gridpos.y];
}}c._zoom.started=true;
for(var ax in datapos){c._zoom.axes.start[ax]=datapos[ax];
}$(document).bind("mousemove.jqplotCursor",{plot:plot},handleZoomMove);
}}function handleMouseUp(ev){var plot=ev.data.plot;
var c=plot.plugins.cursor;
if(c.zoom&&c._zoom.zooming&&!c.zoomTarget){var xpos=c._zoom.gridpos.x;
var ypos=c._zoom.gridpos.y;
var datapos=c._zoom.datapos;
var height=c.zoomCanvas._ctx.canvas.height;
var width=c.zoomCanvas._ctx.canvas.width;
var axes=plot.axes;
if(c.constrainOutsideZoom&&!c.onGrid){if(xpos<0){xpos=0;
}else{if(xpos>width){xpos=width;
}}if(ypos<0){ypos=0;
}else{if(ypos>height){ypos=height;
}}for(var axis in datapos){if(datapos[axis]){if(axis.charAt(0)=="x"){datapos[axis]=axes[axis].series_p2u(xpos);
}else{datapos[axis]=axes[axis].series_p2u(ypos);
}}}}if(c.constrainZoomTo=="x"){ypos=height;
}else{if(c.constrainZoomTo=="y"){xpos=width;
}}c._zoom.end=[xpos,ypos];
c._zoom.gridpos={x:xpos,y:ypos};
c.doZoom(c._zoom.gridpos,datapos,plot,c);
}c._zoom.started=false;
c._zoom.zooming=false;
$(document).unbind("mousemove.jqplotCursor",handleZoomMove);
if(document.onselectstart!=undefined&&c._oldHandlers.onselectstart!=null){document.onselectstart=c._oldHandlers.onselectstart;
c._oldHandlers.onselectstart=null;
}if(document.ondrag!=undefined&&c._oldHandlers.ondrag!=null){document.ondrag=c._oldHandlers.ondrag;
c._oldHandlers.ondrag=null;
}if(document.onmousedown!=undefined&&c._oldHandlers.onmousedown!=null){document.onmousedown=c._oldHandlers.onmousedown;
c._oldHandlers.onmousedown=null;
}}$.jqplot.CursorLegendRenderer=function(options){$.jqplot.TableLegendRenderer.call(this,options);
this.formatString="%s";
};
$.jqplot.CursorLegendRenderer.prototype=new $.jqplot.TableLegendRenderer();
$.jqplot.CursorLegendRenderer.prototype.constructor=$.jqplot.CursorLegendRenderer;
$.jqplot.CursorLegendRenderer.prototype.draw=function(){if(this._elem){this._elem.emptyForce();
this._elem=null;
}if(this.show){var series=this._series,s;
var elem=document.createElement("div");
this._elem=$(elem);
elem=null;
this._elem.addClass("jqplot-legend jqplot-cursor-legend");
this._elem.css("position","absolute");
var pad=false;
for(var i=0;
i<series.length;
i++){s=series[i];
if(s.show&&s.showLabel){var lt=$.jqplot.sprintf(this.formatString,s.label.toString());
if(lt){var color=s.color;
if(s._stack&&!s.fill){color="";
}addrow.call(this,lt,color,pad,i);
pad=true;
}for(var j=0;
j<$.jqplot.addLegendRowHooks.length;
j++){var item=$.jqplot.addLegendRowHooks[j].call(this,s);
if(item){addrow.call(this,item.label,item.color,pad);
pad=true;
}}}}series=s=null;
delete series;
delete s;
}function addrow(label,color,pad,idx){var rs=(pad)?this.rowSpacing:"0";
var tr=$('<tr class="jqplot-legend jqplot-cursor-legend"></tr>').appendTo(this._elem);
tr.data("seriesIndex",idx);
$('<td class="jqplot-legend jqplot-cursor-legend-swatch" style="padding-top:'+rs+';"><div style="border:1px solid #cccccc;padding:0.2em;"><div class="jqplot-cursor-legend-swatch" style="background-color:'+color+';"></div></div></td>').appendTo(tr);
var td=$('<td class="jqplot-legend jqplot-cursor-legend-label" style="vertical-align:middle;padding-top:'+rs+';"></td>');
td.appendTo(tr);
td.data("seriesIndex",idx);
if(this.escapeHtml){td.text(label);
}else{td.html(label);
}tr=null;
td=null;
}return this._elem;
};
})(jQuery);
function drawZoomBox(){var start=this._zoom.start;
var end=this._zoom.end;
var ctx=this.zoomCanvas._ctx;
var l,t,h,w;
if(end[0]>start[0]){l=start[0];
w=end[0]-start[0];
}else{l=end[0];
w=start[0]-end[0];
}if(end[1]>start[1]){t=start[1];
h=end[1]-start[1];
}else{t=end[1];
h=start[1]-end[1];
}ctx.fillStyle="rgba(0,0,0,0.2)";
ctx.strokeStyle="#999999";
ctx.lineWidth=1;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx.fillRect(0,0,ctx.canvas.width,ctx.canvas.height);
ctx.clearRect(l,t,w,h);
ctx.strokeRect(l,t,w,h);
ctx=null;
}(function($){$.jqplot.DateAxisRenderer=function(){$.jqplot.LinearAxisRenderer.call(this);
this.date=new $.jsDate();
};
var second=1000;
var minute=60*second;
var hour=60*minute;
var day=24*hour;
var week=7*day;
var month=30.4368499*day;
var year=365.242199*day;
var daysInMonths=[31,28,31,30,31,30,31,30,31,30,31,30];
var niceFormatStrings=["%M:%S.%#N","%M:%S.%#N","%M:%S.%#N","%M:%S","%M:%S","%M:%S","%M:%S","%H:%M:%S","%H:%M:%S","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%a %H:%M","%a %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%v","%v","%v","%v","%v","%v","%v"];
var niceIntervals=[0.1*second,0.2*second,0.5*second,second,2*second,5*second,10*second,15*second,30*second,minute,2*minute,5*minute,10*minute,15*minute,30*minute,hour,2*hour,4*hour,6*hour,8*hour,12*hour,day,2*day,3*day,4*day,5*day,week,2*week];
var niceMonthlyIntervals=[];
function bestDateInterval(min,max,titarget){var badness=Number.MAX_VALUE;
var temp,bestTi,bestfmt;
for(var i=0,l=niceIntervals.length;
i<l;
i++){temp=Math.abs(titarget-niceIntervals[i]);
if(temp<badness){badness=temp;
bestTi=niceIntervals[i];
bestfmt=niceFormatStrings[i];
}}return[bestTi,bestfmt];
}$.jqplot.DateAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.DateAxisRenderer.prototype.constructor=$.jqplot.DateAxisRenderer;
$.jqplot.DateTickFormatter=function(format,val){if(!format){format="%Y/%m/%d";
}return $.jsDate.strftime(val,format);
};
$.jqplot.DateTickFormatterSpecialPhys=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var df=MP_Util.GetDateFormatter();
var iDate2=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
var iDate4=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var curDtTm=new Date;
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){var nFormat="<span>"+iDate2+"</span><br/><span>&nbsp;</span>%H:%M";
}else{var nFormat="<span>%H:%M</span>";
}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterSpecial=function(format,val){var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span><span class='jqplot-elem-hideOnHover nowTime'>%H:%M</span>";
return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterXSpecial=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span>";
}else{if(siDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M<br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-hideOnHover'>%#m/%#d/%y</span>";
}else{nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterX2Special=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var df=MP_Util.GetDateFormatter();
var iDate2=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
var iDate4=df.format(iDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>"+iDate4+"&nbsp;%H:%M</span>";
}else{if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="<span class='jqplot-elem-showOnHover'>"+iDate4+"</span><span class='jqplot-elem-hideOnHover'>"+iDate2+"</span><br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-showOnHover'>&nbsp;</span>%H:%M";
}else{nFormat="<span class='jqplot-elem-showOnHover'>"+iDate4+"</span>&nbsp;<br class='jqplot-elem-hideOnHover'/>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateTickFormatterYSpecial=function(format,val){var iDate=$.jsDate.createDate(Math.abs(val));
var curDtTm=new Date();
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
var nFormat=format;
if(DAR_HELPERS.createdNow&&iDate.getTime()==curDtTm.getTime()){nFormat="<span class='jqplot-elem-hideOnHover'>&nbsp;</span><span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;%H:%M</span>";
}else{if(iDate.getMilliseconds()==0&&iDate.getSeconds()==0&&iDate.getMinutes()==0&&iDate.getHours()==0){nFormat="%#m/%#d/<span class='jqplot-elem-showOnHover'>%Y</span><span class='jqplot-elem-hideOnHover'>%y</span><br class='jqplot-elem-hideOnHover'/><span class='jqplot-elem-showOnHover'>&nbsp;</span>%H:%M";
}else{nFormat="<span class='jqplot-elem-showOnHover'>%#m/%#d/%Y&nbsp;</span>%H:%M";
}}return $.jsDate.strftime(val,nFormat);
};
$.jqplot.DateAxisRenderer.prototype.init=function(options){this.tickOptions.formatter=$.jqplot.DateTickFormatter;
this.tickInset=0;
this.drawBaseline=true;
this.baselineWidth=null;
this.baselineColor=null;
this.daTickInterval=null;
this._daTickInterval=null;
$.extend(true,this,options);
if(this.specialFormat&&this.specialFormatFlag!=null&&this.specialFormatFlag==3){this.tickOptions.formatter=$.jqplot.DateTickFormatterSpecialPhys;
}else{if(this.specialFormat&&this.specialFormatFlag!=null&&this.specialFormatFlag==1){this.tickOptions.formatter=$.jqplot.DateTickFormatterSpecial;
}else{if(this.specialFormat&&this.name.match("xaxis")!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterXSpecial;
}else{if(this.specialFormat&&this.name.match(/^x/)!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterX2Special;
}else{if(this.specialFormat&&this.name.match(/^y/)!=null){this.tickOptions.formatter=$.jqplot.DateTickFormatterYSpecial;
}else{this.tickOptions.formatter=$.jqplot.DateTickFormatter;
}}}}}var db=this._dataBounds,stats,sum,s,d,pd,sd,intv;
for(var i=0;
i<this._series.length;
i++){stats={intervals:[],frequencies:{},sortedIntervals:[],min:null,max:null,mean:null};
sum=0;
s=this._series[i];
d=s.data;
pd=s._plotData;
sd=s._stackData;
intv=0;
for(var j=0;
j<d.length;
j++){if(this.name=="xaxis"||this.name=="x2axis"){d[j][0]=new $.jsDate(d[j][0]).getTime();
pd[j][0]=new $.jsDate(d[j][0]).getTime();
sd[j][0]=new $.jsDate(d[j][0]).getTime();
if((d[j][0]!=null&&d[j][0]<db.min)||db.min==null){db.min=d[j][0];
}if((d[j][0]!=null&&d[j][0]>db.max)||db.max==null){db.max=d[j][0];
}if(j>0){intv=Math.abs(d[j][0]-d[j-1][0]);
stats.intervals.push(intv);
if(stats.frequencies.hasOwnProperty(intv)){stats.frequencies[intv]+=1;
}else{stats.frequencies[intv]=1;
}}sum+=intv;
}else{d[j][1]=new $.jsDate(d[j][1]).getTime();
pd[j][1]=new $.jsDate(d[j][1]).getTime();
sd[j][1]=new $.jsDate(d[j][1]).getTime();
if((d[j][1]!=null&&d[j][1]<db.min)||db.min==null){db.min=d[j][1];
}if((d[j][1]!=null&&d[j][1]>db.max)||db.max==null){db.max=d[j][1];
}if(j>0){intv=Math.abs(d[j][1]-d[j-1][1]);
stats.intervals.push(intv);
if(stats.frequencies.hasOwnProperty(intv)){stats.frequencies[intv]+=1;
}else{stats.frequencies[intv]=1;
}}}sum+=intv;
}if(s.renderer.bands){if(s.renderer.bands.hiData.length){var bd=s.renderer.bands.hiData;
for(var j=0,l=bd.length;
j<l;
j++){if(this.name==="xaxis"||this.name==="x2axis"){bd[j][0]=new $.jsDate(bd[j][0]).getTime();
if((bd[j][0]!=null&&bd[j][0]>db.max)||db.max==null){db.max=bd[j][0];
}}else{bd[j][1]=new $.jsDate(bd[j][1]).getTime();
if((bd[j][1]!=null&&bd[j][1]>db.max)||db.max==null){db.max=bd[j][1];
}}}}if(s.renderer.bands.lowData.length){var bd=s.renderer.bands.lowData;
for(var j=0,l=bd.length;
j<l;
j++){if(this.name==="xaxis"||this.name==="x2axis"){bd[j][0]=new $.jsDate(bd[j][0]).getTime();
if((bd[j][0]!=null&&bd[j][0]<db.min)||db.min==null){db.min=bd[j][0];
}}else{bd[j][1]=new $.jsDate(bd[j][1]).getTime();
if((bd[j][1]!=null&&bd[j][1]<db.min)||db.min==null){db.min=bd[j][1];
}}}}}var tempf=0,tempn=0;
for(var n in stats.frequencies){stats.sortedIntervals.push({interval:n,frequency:stats.frequencies[n]});
}stats.sortedIntervals.sort(function(a,b){return b.frequency-a.frequency;
});
stats.min=$.jqplot.arrayMin(stats.intervals);
stats.max=$.jqplot.arrayMax(stats.intervals);
stats.mean=sum/d.length;
this._intervalStats.push(stats);
stats=sum=s=d=pd=sd=null;
}db=null;
};
$.jqplot.DateAxisRenderer.prototype.reset=function(){this.min=this._options.min;
this.max=this._options.max;
this.tickInterval=this._options.tickInterval;
this.numberTicks=this._options.numberTicks;
this._autoFormatString="";
if(this._overrideFormatString&&this.tickOptions&&this.tickOptions.formatString){this.tickOptions.formatString="";
}this.daTickInterval=this._daTickInterval;
this.useDST=this._useDST;
this.specialFormat=this._specialFormat;
this.specialFormatFlag=this._specialFormatFlag;
};
$.jqplot.DateAxisRenderer.prototype.createTicks=function(){var ticks=this._ticks;
var userTicks=this.ticks;
var name=this.name;
var db=this._dataBounds;
var midnightExists=false;
var dim,interval;
var min,max;
var pos1,pos2;
var tt,i;
if(this.specialFormat){if(this.specialFormatFlag==null||(this.specialFormatFlag!=1&&this.specialFormatFlag!=3)){var minDtTm=$.jsDate.createDate(this.min);
var maxDtTm=$.jsDate.createDate(this.max);
DAR_HELPERS.createdNow=true;
var tickVals=DAR_HELPERS.DynamicRangeTickCalc(minDtTm.getTime(),maxDtTm.getTime());
this.numberTicks=tickVals.length;
userTicks=tickVals;
midnightExists=false;
for(var i=0;
i<userTicks.length;
i++){var tDate=$.jsDate.createDate(userTicks[i]);
if(tDate.getMilliseconds()==0&&tDate.getSeconds()==0&&tDate.getMinutes()==0&&tDate.getHours()==0){midnightExists=true;
}}this.min=tickVals[0];
this.max=tickVals[tickVals.length-1];
this.daTickInterval=[(this.max-this.min)/(this.numberTicks-1)/1000,"seconds"];
}else{if(this.specialFormatFlag==3){var threshold=30;
var insetMult=1;
var tickInterval=this.tickInterval;
min=((this.min!=null)?new $.jsDate(this.min).getTime():db.min);
max=((this.max!=null)?new $.jsDate(this.max).getTime():db.max);
var range=max-min;
if(this.tickOptions==null||!this.tickOptions.formatString){this._overrideFormatString=true;
}}else{if(this.specialFormatFlag==1){userTicks=[new Date().getTime()];
}}}if(this.specialFormatFlag==2){var tempTicks=[],cDiffOpt=null,cDiff=null;
for(var i=0;
i<userTicks.length;
i++){var t1Time=(userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i];
if(i==0){tempTicks.push(t1Time);
}else{var t2Time=(userTicks[i-1].constructor==Array)?userTicks[i-1][0]:userTicks[i-1];
cDiff=t1Time-t2Time;
var t1Date=$.jsDate.createDate(t1Time),t2Date=$.jsDate.createDate(t2Time);
eval(["t1Date.set",DAR_HELPERS.tickDiff[1],"(t1Date.get",DAR_HELPERS.tickDiff[1],"()-DAR_HELPERS.tickDiff[0]);"].join(""));
if(t1Date.getTime()==t2Date.getTime()){tempTicks.push(Math.round(t2Time+(cDiff/2)));
tempTicks.push(t1Time);
}else{if(DAR_HELPERS.tickDiff[0]==1&&DAR_HELPERS.tickDiff[1]=="Date"){t2Date.setHours(t2Date.getHours()+12);
}else{if(DAR_HELPERS.tickDiff[0]==1&&DAR_HELPERS.tickDiff[1]=="Month"){t2Date.setDate(t2Date.getDate()+15);
}else{eval(["t2Date.set",DAR_HELPERS.tickDiff[1],"(t2Date.get",DAR_HELPERS.tickDiff[1],"()+Math.round(DAR_HELPERS.tickDiff[0]/2));"].join(""));
}}var t2TempTime=t2Date.getTime();
if(t2TempTime>=t1Time){tempTicks.push(t1Time);
}else{tempTicks.push(t2TempTime);
tempTicks.push(t1Time);
}}}}userTicks=tempTicks;
this.numberTicks=userTicks.length;
}}if(userTicks.length){if(this.specialFormatFlag==3){for(i=0;
i<userTicks.length;
i++){var ut=userTicks[i];
var t=new this.tickRenderer(this.tickOptions);
if(ut.constructor==Array){t.value=new $.jsDate(ut[0]).getTime();
t.label=ut[1];
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}else{t.value=new $.jsDate(ut).getTime();
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}}}else{for(i=0;
i<userTicks.length;
i++){var t=new this.tickRenderer(this.tickOptions);
t.value=$.jsDate.createDate((userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i]).getTime();
if(t.value>this.max){continue;
}t.label=(userTicks[i].constructor==Array)?userTicks[i][1]:null;
if(this.specialFormat){if(this.specialFormatFlag!=null&&this.specialFormatFlag==2){if(i==0||i==(userTicks.length-1)){t.showLabel=false;
t.showGridline=false;
t.showMark=false;
}else{if((i%2)==0){t.showGridline=false;
t.showLabel=true;
t.showMark=false;
}else{t.showGridline=true;
t.showLabel=false;
t.showMark=true;
}}}else{if(userTicks.length>=2&&i==(userTicks.length-1)&&userTicks[userTicks.length-1]==this.max){var t1Date=$.jsDate.createDate((userTicks[i-1].constructor==Array)?userTicks[i-1][0]:userTicks[i-1]);
var t2Date=$.jsDate.createDate((userTicks[i].constructor==Array)?userTicks[i][0]:userTicks[i]);
eval(["t2Date.set",DAR_HELPERS.tickDiff[1],"(t2Date.get",DAR_HELPERS.tickDiff[1],"()-DAR_HELPERS.tickDiff[0]);"].join(""));
if(t1Date.getTime()!=t2Date.getTime()){t.showLabel=false;
t.showGridline=false;
t.showMark=false;
}}}}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(t.value,this.name);
this._ticks.push(t);
}}this.numberTicks=this._ticks.length;
this.min=this._ticks[0].value;
this.max=this._ticks[this.numberTicks-1].value;
this.daTickInterval=[(this.max-this.min)/(this.numberTicks-1)/1000,"seconds"];
}else{if(this.min==null&&this.max==null){var opts=$.extend(true,{},this.tickOptions,{name:this.name,value:null});
var nttarget,titarget;
if(!this.tickInterval&&!this.numberTicks){var tdim=Math.max(dim,threshold+1);
var spacingFactor=100;
if(this.tickRenderer===$.jqplot.CanvasAxisTickRenderer&&this.tickOptions.angle){spacingFactor=115-40*Math.abs(Math.sin(this.tickOptions.angle/180*Math.PI));
}nttarget=Math.ceil((tdim-threshold)/spacingFactor+1);
titarget=(max-min)/(nttarget-1);
}else{if(this.tickInterval){titarget=this.tickInterval;
}else{if(this.numberTicks){nttarget=this.numberTicks;
titarget=(max-min)/(nttarget-1);
}}}if(titarget<=19*day){var ret=bestDateInterval(min,max,titarget);
var tempti=ret[0];
this._autoFormatString=ret[1];
min=Math.floor(min/tempti)*tempti;
min=new $.jsDate(min);
min=min.getTime()+min.getUtcOffset();
nttarget=Math.ceil((max-min)/tempti)+1;
this.min=min;
this.max=min+(nttarget-1)*tempti;
if(this.max<max){this.max+=tempti;
nttarget+=1;
}this.tickInterval=tempti;
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){opts.value=this.min+i*tempti;
t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=this.tickInterval;
}else{if(titarget<=9*month){this._autoFormatString="%v";
var intv=Math.round(titarget/month);
if(intv<1){intv=1;
}else{if(intv>6){intv=6;
}}var mstart=new $.jsDate(min).setDate(1).setHours(0,0,0,0);
var tempmend=new $.jsDate(max);
var mend=new $.jsDate(max).setDate(1).setHours(0,0,0,0);
if(tempmend.getTime()!==mend.getTime()){mend=mend.add(1,"month");
}var nmonths=mend.diff(mstart,"month");
nttarget=Math.ceil(nmonths/intv)+1;
this.min=mstart.getTime();
this.max=mstart.clone().add((nttarget-1)*intv,"month").getTime();
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){if(i===0){opts.value=mstart.getTime();
}else{opts.value=mstart.add(intv,"month").getTime();
}t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=intv*month;
}else{this._autoFormatString="%v";
var intv=Math.round(titarget/year);
if(intv<1){intv=1;
}var mstart=new $.jsDate(min).setMonth(0,1).setHours(0,0,0,0);
var mend=new $.jsDate(max).add(1,"year").setMonth(0,1).setHours(0,0,0,0);
var nyears=mend.diff(mstart,"year");
nttarget=Math.ceil(nyears/intv)+1;
this.min=mstart.getTime();
this.max=mstart.clone().add((nttarget-1)*intv,"year").getTime();
this.numberTicks=nttarget;
for(var i=0;
i<nttarget;
i++){if(i===0){opts.value=mstart.getTime();
}else{opts.value=mstart.add(intv,"year").getTime();
}t=new this.tickRenderer(opts);
if(this._overrideFormatString&&this._autoFormatString!=""){t.formatString=this._autoFormatString;
}if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}this._ticks.push(t);
}insetMult=intv*year;
}}}else{if(name.match(/^x/)){dim=this._plotDimensions.width;
}else{dim=this._plotDimensions.height;
}if(this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null;
}if(this.tickInterval!=null){if(Number(this.tickInterval)){this.daTickInterval=[Number(this.tickInterval),"seconds"];
}else{if(typeof this.tickInterval=="string"){var parts=this.tickInterval.split(" ");
if(parts.length==1){this.daTickInterval=[1,parts[0]];
}else{if(parts.length==2){this.daTickInterval=[parts[0],parts[1]];
}}}}}min=((this.min!=null)?$.jsDate.createDate(this.min).getTime():db.min);
max=((this.max!=null)?$.jsDate.createDate(this.max).getTime():db.max);
if(min==max){var adj=24*60*60*500;
min-=adj;
max+=adj;
}var range=max-min;
var rmin,rmax;
rmin=(this.min!=null)?$.jsDate.createDate(this.min).getTime():min-range/2*(this.padMin-1);
rmax=(this.max!=null)?$.jsDate.createDate(this.max).getTime():max+range/2*(this.padMax-1);
this.min=rmin;
this.max=rmax;
range=this.max-this.min;
if(this.numberTicks==null){if(this.daTickInterval!=null){var max=$.jsDate.createDate(this.max);
var nc=new $.jsDate(max).diff(this.min,this.daTickInterval[1],true);
this.numberTicks=Math.ceil(nc/this.daTickInterval[0])+1;
var min=$.jsDate.createDate(this.min);
this.max=new $.jsDate(min).add((this.numberTicks-1)*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}else{if(dim>200){this.numberTicks=parseInt(3+(dim-200)/100,10);
}else{this.numberTicks=2;
}}}insetMult=range/(this.numberTicks-1)/1000;
if(this.daTickInterval==null){this.daTickInterval=[insetMult,"seconds"];
}if(this.specialFormatFlag==3){for(var i=0;
i<this.numberTicks;
i++){var min=new $.jsDate(this.min);
tt=min.add(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
var t=new this.tickRenderer(this.tickOptions);
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(tt,this.name);
this._ticks.push(t);
}}else{for(var i=0;
i<this.numberTicks;
i++){var min=$.jsDate.createDate(this.min);
if(this.useDST){tt=new $.jsDate(min).add(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}else{tt=new $.jsDate(min).addNoDST(i*this.daTickInterval[0],this.daTickInterval[1]).getTime();
}var t=new this.tickRenderer(this.tickOptions);
if(!this.showTicks){t.showLabel=false;
t.showMark=false;
}else{if(!this.showTickMarks){t.showMark=false;
}}t.setTick(tt,this.name);
this._ticks.push(t);
}}}}if(this._daTickInterval==null){this._daTickInterval=this.daTickInterval;
}};
})(jQuery);
var DAR_HELPERS=function(){return{createdNow:false,tickDiff:null,minuteCntPerTickSpecial:0,DynamicRangeTickCalc:function(iMin,iMax){var unitSize={second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,month:30*24*60*60*1000,year:365.2425*24*60*60*1000};
var minDtTm=$.jsDate.createDate(iMin);
var maxDtTm=$.jsDate.createDate(iMax);
var dtTmDiff=iMax-iMin;
var tickVals=[],curDtTm=new Date(),noNowTick=false;
var minuteCnt=DAR_HELPERS.minuteCntPerTickSpecial;
curDtTm.setMilliseconds(0);
curDtTm.setSeconds(0);
if(minuteCnt>0){DAR_HELPERS.tickDiff=[minuteCnt,"Minutes"];
if((maxDtTm.getMinutes()%minuteCnt)!=0||((maxDtTm.getMinutes()%minuteCnt)==0&&(maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setMinutes(maxDtTm.getMinutes()+(minuteCnt-(maxDtTm.getMinutes()%minuteCnt)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
tickVals.push(maxDtTm.getTime());
DAR_HELPERS.createdNow=false;
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMinutes(maxDtTm.getMinutes()-minuteCnt);
tickVals.push(maxDtTm.getTime());
}tickVals.reverse();
return tickVals;
}else{if(dtTmDiff<=(2*unitSize.second)){DAR_HELPERS.tickDiff=[250,"Milliseconds"];
if((maxDtTm.getMilliseconds()%250)!=0){maxDtTm.setMilliseconds(maxDtTm.getMilliseconds()+(250-(maxDtTm.getMilliseconds()%250)));
}tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMilliseconds(maxDtTm.getMilliseconds()-250);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.minute)+(15*unitSize.second))){DAR_HELPERS.tickDiff=[15,"Seconds"];
if((maxDtTm.getSeconds()%15)!=0||((maxDtTm.getSeconds()%15)==0&&maxDtTm.getMilliseconds()>0)){maxDtTm.setSeconds(maxDtTm.getSeconds()+(15-(maxDtTm.getSeconds()%15)));
}maxDtTm.setMilliseconds(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setSeconds(maxDtTm.getSeconds()-15);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.hour)+(15*unitSize.minute))){DAR_HELPERS.tickDiff=[15,"Minutes"];
if((maxDtTm.getMinutes()%15)!=0||((maxDtTm.getMinutes()%15)==0&&(maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setMinutes(maxDtTm.getMinutes()+(15-(maxDtTm.getMinutes()%15)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMinutes(maxDtTm.getMinutes()-15);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=(unitSize.day+(2*unitSize.hour))){DAR_HELPERS.tickDiff=[2,"Hours"];
if((maxDtTm.getHours()%2)!=0||((maxDtTm.getHours()%2)==0&&(maxDtTm.getMinutes()>0||maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setHours(maxDtTm.getHours()+(2-(maxDtTm.getHours()%2)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setHours(maxDtTm.getHours()-2);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.day)+(4*unitSize.hour))){DAR_HELPERS.tickDiff=[4,"Hours"];
if((maxDtTm.getHours()%4)!=0||((maxDtTm.getHours()%4)==0&&(maxDtTm.getMinutes()>0||maxDtTm.getSeconds()>0||maxDtTm.getMilliseconds()>0))){maxDtTm.setHours(maxDtTm.getHours()+(4-(maxDtTm.getHours()%4)));
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setHours(maxDtTm.getHours()-4);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=(15*unitSize.day)){DAR_HELPERS.tickDiff=[1,"Date"];
if(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0){maxDtTm.setDate(maxDtTm.getDate()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setDate(maxDtTm.getDate()-1);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff<=((2*unitSize.month)+(7*unitSize.day))){DAR_HELPERS.tickDiff=[7,"Date"];
if(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0){maxDtTm.setDate(maxDtTm.getDate()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setDate(maxDtTm.getDate()-7);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff>((2*unitSize.month)+(7*unitSize.day))&&dtTmDiff<=((12*unitSize.month))){DAR_HELPERS.tickDiff=[1,"Month"];
if(maxDtTm.getDate()>1||(maxDtTm.getDate()==1&&(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0))){maxDtTm.setMonth(maxDtTm.getMonth()+1);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
maxDtTm.setDate(1);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMonth(maxDtTm.getMonth()-1);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}else{if(dtTmDiff>((12*unitSize.month))){DAR_HELPERS.tickDiff=[12,"Month"];
if(maxDtTm.getDate()>12||(maxDtTm.getDate()==12&&(maxDtTm.getMilliseconds()>0||maxDtTm.getSeconds()>0||maxDtTm.getMinutes()>0||maxDtTm.getHours()>0))){maxDtTm.setMonth(maxDtTm.getMonth()+12);
}maxDtTm.setMilliseconds(0);
maxDtTm.setSeconds(0);
maxDtTm.setMinutes(0);
maxDtTm.setHours(0);
maxDtTm.setDate(12);
tickVals.push(maxDtTm.getTime());
while(maxDtTm.getTime()>minDtTm.getTime()){maxDtTm.setMonth(maxDtTm.getMonth()-12);
if(maxDtTm.getTime()==curDtTm.getTime()){noNowTick=true;
}else{if(!noNowTick&&!DAR_HELPERS.createdNow&&maxDtTm.getTime()<curDtTm.getTime()){DAR_HELPERS.createdNow=true;
tickVals.push(curDtTm.getTime());
}}tickVals.push(maxDtTm.getTime());
}}}}}}}}}}}tickVals.reverse();
if(tickVals[tickVals.length-1]>new Date().getTime()){tickVals[tickVals.length-1]=new Date().getTime();
}return tickVals;
}};
}();
(function($){$.jqplot.DonutRenderer=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.DonutRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.DonutRenderer.prototype.constructor=$.jqplot.DonutRenderer;
$.jqplot.DonutRenderer.prototype.init=function(options,plot){this.diameter=null;
this.innerDiameter=null;
this.thickness=null;
this.padding=20;
this.sliceMargin=0;
this.ringMargin=null;
this.fill=true;
this.shadowOffset=2;
this.shadowAlpha=0.07;
this.shadowDepth=5;
this.highlightMouseOver=true;
this.highlightMouseDown=false;
this.highlightColors=[];
this.dataLabels="percent";
this.showDataLabels=false;
this.dataLabelFormatString=null;
this.dataLabelThreshold=3;
this.dataLabelPositionFactor=0.4;
this.dataLabelNudge=0;
this.startAngle=0;
this.tickRenderer=$.jqplot.DonutTickRenderer;
this._drawData=true;
this._type="donut";
if(options.highlightMouseDown&&options.highlightMouseOver==null){options.highlightMouseOver=false;
}$.extend(true,this,options);
if(this.diameter!=null){this.diameter=this.diameter-this.sliceMargin;
}this._diameter=null;
this._innerDiameter=null;
this._radius=null;
this._innerRadius=null;
this._thickness=null;
this._previousSeries=[];
this._numberSeries=1;
this._sliceAngles=[];
this._highlightedPoint=null;
if(this.highlightColors.length==0){for(var i=0;
i<this.seriesColors.length;
i++){var rgba=$.jqplot.getColorComponents(this.seriesColors[i]);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var sum=newrgb[0]+newrgb[1]+newrgb[2];
for(var j=0;
j<3;
j++){newrgb[j]=(sum>570)?newrgb[j]*0.8:newrgb[j]+0.3*(255-newrgb[j]);
newrgb[j]=parseInt(newrgb[j],10);
}this.highlightColors.push("rgb("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+")");
}}plot.postParseOptionsHooks.addOnce(postParseOptions);
plot.postInitHooks.addOnce(postInit);
plot.eventListenerHooks.addOnce("jqplotMouseMove",handleMove);
plot.eventListenerHooks.addOnce("jqplotMouseDown",handleMouseDown);
plot.eventListenerHooks.addOnce("jqplotMouseUp",handleMouseUp);
plot.eventListenerHooks.addOnce("jqplotClick",handleClick);
plot.eventListenerHooks.addOnce("jqplotRightClick",handleRightClick);
plot.postDrawHooks.addOnce(postPlotDraw);
};
$.jqplot.DonutRenderer.prototype.setGridData=function(plot){var stack=[];
var td=[];
var sa=this.startAngle/180*Math.PI;
var tot=0;
this._drawData=false;
for(var i=0;
i<this.data.length;
i++){if(this.data[i][1]!=0){this._drawData=true;
}stack.push(this.data[i][1]);
td.push([this.data[i][0]]);
if(i>0){stack[i]+=stack[i-1];
}tot+=this.data[i][1];
}var fact=Math.PI*2/stack[stack.length-1];
for(var i=0;
i<stack.length;
i++){td[i][1]=stack[i]*fact;
td[i][2]=this.data[i][1]/tot;
}this.gridData=td;
};
$.jqplot.DonutRenderer.prototype.makeGridData=function(data,plot){var stack=[];
var td=[];
var tot=0;
var sa=this.startAngle/180*Math.PI;
this._drawData=false;
for(var i=0;
i<data.length;
i++){if(this.data[i][1]!=0){this._drawData=true;
}stack.push(data[i][1]);
td.push([data[i][0]]);
if(i>0){stack[i]+=stack[i-1];
}tot+=data[i][1];
}var fact=Math.PI*2/stack[stack.length-1];
for(var i=0;
i<stack.length;
i++){td[i][1]=stack[i]*fact;
td[i][2]=data[i][1]/tot;
}return td;
};
$.jqplot.DonutRenderer.prototype.drawSlice=function(ctx,ang1,ang2,color,isShadow){var r=this._diameter/2;
var ri=r-this._thickness;
var fill=this.fill;
ctx.save();
ctx.translate(this._center[0],this._center[1]);
if(isShadow){for(var i=0;
i<this.shadowDepth;
i++){ctx.save();
ctx.translate(this.shadowOffset*Math.cos(this.shadowAngle/180*Math.PI),this.shadowOffset*Math.sin(this.shadowAngle/180*Math.PI));
doDraw();
}}else{doDraw();
}function doDraw(){if(ang2>6.282+this.startAngle){ang2=6.282+this.startAngle;
if(ang1>ang2){ang1=6.281+this.startAngle;
}}if(ang1>=ang2){return;
}ctx.beginPath();
ctx.fillStyle=color;
ctx.strokeStyle=color;
ctx.arc(0,0,r,ang1,ang2,false);
ctx.lineTo(ri*Math.cos(ang2),ri*Math.sin(ang2));
ctx.arc(0,0,ri,ang2,ang1,true);
ctx.closePath();
if(fill){ctx.fill();
}else{ctx.stroke();
}}if(isShadow){for(var i=0;
i<this.shadowDepth;
i++){ctx.restore();
}}ctx.restore();
};
$.jqplot.DonutRenderer.prototype.draw=function(ctx,gd,options,plot){var i;
var opts=(options!=undefined)?options:{};
var offx=0;
var offy=0;
var trans=1;
if(options.legendInfo&&options.legendInfo.placement=="insideGrid"){var li=options.legendInfo;
switch(li.location){case"nw":offx=li.width+li.xoffset;
break;
case"w":offx=li.width+li.xoffset;
break;
case"sw":offx=li.width+li.xoffset;
break;
case"ne":offx=li.width+li.xoffset;
trans=-1;
break;
case"e":offx=li.width+li.xoffset;
trans=-1;
break;
case"se":offx=li.width+li.xoffset;
trans=-1;
break;
case"n":offy=li.height+li.yoffset;
break;
case"s":offy=li.height+li.yoffset;
trans=-1;
break;
default:break;
}}var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var cw=ctx.canvas.width;
var ch=ctx.canvas.height;
var w=cw-offx-2*this.padding;
var h=ch-offy-2*this.padding;
var mindim=Math.min(w,h);
var d=mindim;
var ringmargin=(this.ringMargin==null)?this.sliceMargin*2:this.ringMargin;
for(var i=0;
i<this._previousSeries.length;
i++){d-=2*this._previousSeries[i]._thickness+2*ringmargin;
}this._diameter=this.diameter||d;
if(this.innerDiameter!=null){var od=(this._numberSeries>1&&this.index>0)?this._previousSeries[0]._diameter:this._diameter;
this._thickness=this.thickness||(od-this.innerDiameter-2*ringmargin*this._numberSeries)/this._numberSeries/2;
}else{this._thickness=this.thickness||mindim/2/(this._numberSeries+1)*0.85;
}var r=this._radius=this._diameter/2;
this._innerRadius=this._radius-this._thickness;
var sa=this.startAngle/180*Math.PI;
this._center=[(cw-trans*offx)/2+trans*offx,(ch-trans*offy)/2+trans*offy];
if(this.shadow){var shadowColor="rgba(0,0,0,"+this.shadowAlpha+")";
for(var i=0;
i<gd.length;
i++){var ang1=(i==0)?sa:gd[i-1][1]+sa;
ang1+=this.sliceMargin/180*Math.PI;
this.renderer.drawSlice.call(this,ctx,ang1,gd[i][1]+sa,shadowColor,true);
}}for(var i=0;
i<gd.length;
i++){var ang1=(i==0)?sa:gd[i-1][1]+sa;
ang1+=this.sliceMargin/180*Math.PI;
var ang2=gd[i][1]+sa;
this._sliceAngles.push([ang1,ang2]);
this.renderer.drawSlice.call(this,ctx,ang1,ang2,this.seriesColors[i],false);
if(this.showDataLabels&&gd[i][2]*100>=this.dataLabelThreshold){var fstr,avgang=(ang1+ang2)/2,label;
if(this.dataLabels=="label"){fstr=this.dataLabelFormatString||"%s";
label=$.jqplot.sprintf(fstr,gd[i][0]);
}else{if(this.dataLabels=="value"){fstr=this.dataLabelFormatString||"%d";
label=$.jqplot.sprintf(fstr,this.data[i][1]);
}else{if(this.dataLabels=="percent"){fstr=this.dataLabelFormatString||"%d%%";
label=$.jqplot.sprintf(fstr,gd[i][2]*100);
}else{if(this.dataLabels.constructor==Array){fstr=this.dataLabelFormatString||"%s";
label=$.jqplot.sprintf(fstr,this.dataLabels[i]);
}}}}var fact=this._innerRadius+this._thickness*this.dataLabelPositionFactor+this.sliceMargin+this.dataLabelNudge;
var x=this._center[0]+Math.cos(avgang)*fact+this.canvas._offsets.left;
var y=this._center[1]+Math.sin(avgang)*fact+this.canvas._offsets.top;
var labelelem=$('<span class="jqplot-donut-series jqplot-data-label" style="position:absolute;">'+label+"</span>").insertBefore(plot.eventCanvas._elem);
x-=labelelem.width()/2;
y-=labelelem.height()/2;
x=Math.round(x);
y=Math.round(y);
labelelem.css({left:x,top:y});
}}};
$.jqplot.DonutAxisRenderer=function(){$.jqplot.LinearAxisRenderer.call(this);
};
$.jqplot.DonutAxisRenderer.prototype=new $.jqplot.LinearAxisRenderer();
$.jqplot.DonutAxisRenderer.prototype.constructor=$.jqplot.DonutAxisRenderer;
$.jqplot.DonutAxisRenderer.prototype.init=function(options){this.tickRenderer=$.jqplot.DonutTickRenderer;
$.extend(true,this,options);
this._dataBounds={min:0,max:100};
this.min=0;
this.max=100;
this.showTicks=false;
this.ticks=[];
this.showMark=false;
this.show=false;
};
$.jqplot.DonutLegendRenderer=function(){$.jqplot.TableLegendRenderer.call(this);
};
$.jqplot.DonutLegendRenderer.prototype=new $.jqplot.TableLegendRenderer();
$.jqplot.DonutLegendRenderer.prototype.constructor=$.jqplot.DonutLegendRenderer;
$.jqplot.DonutLegendRenderer.prototype.init=function(options){this.numberRows=null;
this.numberColumns=null;
$.extend(true,this,options);
};
$.jqplot.DonutLegendRenderer.prototype.draw=function(){var legend=this;
if(this.show){var series=this._series;
var ss="position:absolute;";
ss+=(this.background)?"background:"+this.background+";":"";
ss+=(this.border)?"border:"+this.border+";":"";
ss+=(this.fontSize)?"font-size:"+this.fontSize+";":"";
ss+=(this.fontFamily)?"font-family:"+this.fontFamily+";":"";
ss+=(this.textColor)?"color:"+this.textColor+";":"";
ss+=(this.marginTop!=null)?"margin-top:"+this.marginTop+";":"";
ss+=(this.marginBottom!=null)?"margin-bottom:"+this.marginBottom+";":"";
ss+=(this.marginLeft!=null)?"margin-left:"+this.marginLeft+";":"";
ss+=(this.marginRight!=null)?"margin-right:"+this.marginRight+";":"";
this._elem=$('<table class="jqplot-table-legend" style="'+ss+'"></table>');
var pad=false,reverse=false,nr,nc;
var s=series[0];
var colorGenerator=new $.jqplot.ColorGenerator(s.seriesColors);
if(s.show){var pd=s.data;
if(this.numberRows){nr=this.numberRows;
if(!this.numberColumns){nc=Math.ceil(pd.length/nr);
}else{nc=this.numberColumns;
}}else{if(this.numberColumns){nc=this.numberColumns;
nr=Math.ceil(pd.length/this.numberColumns);
}else{nr=pd.length;
nc=1;
}}var i,j,tr,td1,td2,lt,rs,color;
var idx=0;
for(i=0;
i<nr;
i++){if(reverse){tr=$('<tr class="jqplot-table-legend"></tr>').prependTo(this._elem);
}else{tr=$('<tr class="jqplot-table-legend"></tr>').appendTo(this._elem);
}for(j=0;
j<nc;
j++){if(idx<pd.length){lt=this.labels[idx]||pd[idx][0].toString();
color=colorGenerator.next();
if(!reverse){if(i>0){pad=true;
}else{pad=false;
}}else{if(i==nr-1){pad=false;
}else{pad=true;
}}rs=(pad)?this.rowSpacing:"0";
td1=$('<td class="jqplot-table-legend" style="text-align:center;padding-top:'+rs+';"><div><div class="jqplot-table-legend-swatch" style="border-color:'+color+';"></div></div></td>');
td2=$('<td class="jqplot-table-legend" style="padding-top:'+rs+';"></td>');
if(this.escapeHtml){td2.text(lt);
}else{td2.html(lt);
}if(reverse){td2.prependTo(tr);
td1.prependTo(tr);
}else{td1.appendTo(tr);
td2.appendTo(tr);
}pad=true;
}idx++;
}}}}return this._elem;
};
function preInit(target,data,options){options=options||{};
options.axesDefaults=options.axesDefaults||{};
options.legend=options.legend||{};
options.seriesDefaults=options.seriesDefaults||{};
var setopts=false;
if(options.seriesDefaults.renderer==$.jqplot.DonutRenderer){setopts=true;
}else{if(options.series){for(var i=0;
i<options.series.length;
i++){if(options.series[i].renderer==$.jqplot.DonutRenderer){setopts=true;
}}}}if(setopts){options.axesDefaults.renderer=$.jqplot.DonutAxisRenderer;
options.legend.renderer=$.jqplot.DonutLegendRenderer;
options.legend.preDraw=true;
options.seriesDefaults.pointLabels={show:false};
}}function postInit(target,data,options){for(var i=1;
i<this.series.length;
i++){if(!this.series[i]._previousSeries.length){for(var j=0;
j<i;
j++){if(this.series[i].renderer.constructor==$.jqplot.DonutRenderer&&this.series[j].renderer.constructor==$.jqplot.DonutRenderer){this.series[i]._previousSeries.push(this.series[j]);
}}}}for(i=0;
i<this.series.length;
i++){if(this.series[i].renderer.constructor==$.jqplot.DonutRenderer){this.series[i]._numberSeries=this.series.length;
if(this.series[i].highlightMouseOver){this.series[i].highlightMouseDown=false;
}}}}var postParseOptionsRun=false;
function postParseOptions(options){for(var i=0;
i<this.series.length;
i++){this.series[i].seriesColors=this.seriesColors;
this.series[i].colorGenerator=$.jqplot.colorGenerator;
}}function highlight(plot,sidx,pidx){var s=plot.series[sidx];
var canvas=plot.plugins.donutRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
s._highlightedPoint=pidx;
plot.plugins.donutRenderer.highlightedSeriesIndex=sidx;
s.renderer.drawSlice.call(s,canvas._ctx,s._sliceAngles[pidx][0],s._sliceAngles[pidx][1],s.highlightColors[pidx],false);
}function unhighlight(plot){var canvas=plot.plugins.donutRenderer.highlightCanvas;
canvas._ctx.clearRect(0,0,canvas._ctx.canvas.width,canvas._ctx.canvas.height);
for(var i=0;
i<plot.series.length;
i++){plot.series[i]._highlightedPoint=null;
}plot.plugins.donutRenderer.highlightedSeriesIndex=null;
plot.target.trigger("jqplotDataUnhighlight");
}function handleMove(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt1=jQuery.Event("jqplotDataMouseOver");
evt1.pageX=ev.pageX;
evt1.pageY=ev.pageY;
plot.target.trigger(evt1,ins);
if(plot.series[ins[0]].highlightMouseOver&&!(ins[0]==plot.plugins.donutRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,ins[0],ins[1]);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseDown(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
if(plot.series[ins[0]].highlightMouseDown&&!(ins[0]==plot.plugins.donutRenderer.highlightedSeriesIndex&&ins[1]==plot.series[ins[0]]._highlightedPoint)){var evt=jQuery.Event("jqplotDataHighlight");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
highlight(plot,ins[0],ins[1]);
}}else{if(neighbor==null){unhighlight(plot);
}}}function handleMouseUp(ev,gridpos,datapos,neighbor,plot){var idx=plot.plugins.donutRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}}function handleClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var evt=jQuery.Event("jqplotDataClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function handleRightClick(ev,gridpos,datapos,neighbor,plot){if(neighbor){var ins=[neighbor.seriesIndex,neighbor.pointIndex,neighbor.data];
var idx=plot.plugins.donutRenderer.highlightedSeriesIndex;
if(idx!=null&&plot.series[idx].highlightMouseDown){unhighlight(plot);
}var evt=jQuery.Event("jqplotDataRightClick");
evt.pageX=ev.pageX;
evt.pageY=ev.pageY;
plot.target.trigger(evt,ins);
}}function postPlotDraw(){if(this.plugins.donutRenderer&&this.plugins.donutRenderer.highlightCanvas){this.plugins.donutRenderer.highlightCanvas.resetCanvas();
this.plugins.donutRenderer.highlightCanvas=null;
}this.plugins.donutRenderer={highlightedSeriesIndex:null};
this.plugins.donutRenderer.highlightCanvas=new $.jqplot.GenericCanvas();
var labels=$(this.targetId+" .jqplot-data-label");
if(labels.length){$(labels[0]).before(this.plugins.donutRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-donutRenderer-highlight-canvas",this._plotDimensions,this));
}else{this.eventCanvas._elem.before(this.plugins.donutRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-donutRenderer-highlight-canvas",this._plotDimensions,this));
}var hctx=this.plugins.donutRenderer.highlightCanvas.setContext();
this.eventCanvas._elem.bind("mouseleave",{plot:this},function(ev){unhighlight(ev.data.plot);
});
}$.jqplot.preInitHooks.push(preInit);
$.jqplot.DonutTickRenderer=function(){$.jqplot.AxisTickRenderer.call(this);
};
$.jqplot.DonutTickRenderer.prototype=new $.jqplot.AxisTickRenderer();
$.jqplot.DonutTickRenderer.prototype.constructor=$.jqplot.DonutTickRenderer;
})(jQuery);
(function($){$.jqplot.eventListenerHooks.push(["jqplotMouseMove",handleMove]);
$.jqplot.Highlighter=function(options){this.show=$.jqplot.config.enablePlugins;
this.markerRenderer=new $.jqplot.MarkerRenderer({shadow:false});
this.showMarker=true;
this.lineWidthAdjust=2.5;
this.sizeAdjust=5;
this.showTooltip=true;
this.tooltipLocation="nw";
this.fadeTooltip=true;
this.tooltipFadeSpeed="fast";
this.tooltipOffset=2;
this.tooltipAxes="both";
this.tooltipSeparator=", ";
this.tooltipContentEditor=null;
this.useAxesFormatters=true;
this.tooltipFormatString="%.5P";
this.formatString=null;
this.yvalues=1;
this.bringSeriesToFront=false;
this._tooltipElem;
this.isHighlighting=false;
this.currentNeighbor=null;
$.extend(true,this,options);
};
var locations=["nw","n","ne","e","se","s","sw","w"];
var locationIndicies={nw:0,n:1,ne:2,e:3,se:4,s:5,sw:6,w:7};
var oppositeLocations=["se","s","sw","w","nw","n","ne","e"];
$.jqplot.Highlighter.init=function(target,data,opts){var options=opts||{};
this.plugins.highlighter=new $.jqplot.Highlighter(options.highlighter);
};
$.jqplot.Highlighter.parseOptions=function(defaults,options){this.showHighlight=true;
};
$.jqplot.Highlighter.postPlotDraw=function(){if(this.plugins.highlighter&&this.plugins.highlighter.highlightCanvas){this.plugins.highlighter.highlightCanvas.resetCanvas();
this.plugins.highlighter.highlightCanvas=null;
}if(this.plugins.highlighter&&this.plugins.highlighter._tooltipElem){this.plugins.highlighter._tooltipElem.emptyForce();
this.plugins.highlighter._tooltipElem=null;
}this.plugins.highlighter.highlightCanvas=new $.jqplot.GenericCanvas();
this.eventCanvas._elem.before(this.plugins.highlighter.highlightCanvas.createElement(this._gridPadding,"jqplot-highlight-canvas",this._plotDimensions,this));
this.plugins.highlighter.highlightCanvas.setContext();
var elem=document.createElement("div");
this.plugins.highlighter._tooltipElem=$(elem);
elem=null;
this.plugins.highlighter._tooltipElem.addClass("jqplot-highlighter-tooltip");
this.plugins.highlighter._tooltipElem.css({position:"absolute",display:"none"});
this.eventCanvas._elem.before(this.plugins.highlighter._tooltipElem);
};
$.jqplot.preInitHooks.push($.jqplot.Highlighter.init);
$.jqplot.preParseSeriesOptionsHooks.push($.jqplot.Highlighter.parseOptions);
$.jqplot.postDrawHooks.push($.jqplot.Highlighter.postPlotDraw);
function draw(plot,neighbor){var hl=plot.plugins.highlighter;
var s=plot.series[neighbor.seriesIndex];
var smr=s.markerRenderer;
var mr=hl.markerRenderer;
mr.style=smr.style;
mr.lineWidth=smr.lineWidth+hl.lineWidthAdjust;
mr.size=smr.size+hl.sizeAdjust;
var rgba=$.jqplot.getColorComponents(smr.color);
var newrgb=[rgba[0],rgba[1],rgba[2]];
var alpha=(rgba[3]>=0.6)?rgba[3]*0.6:rgba[3]*(2-rgba[3]);
mr.color="rgba("+newrgb[0]+","+newrgb[1]+","+newrgb[2]+","+alpha+")";
mr.init();
mr.draw(s.gridData[neighbor.pointIndex][0],s.gridData[neighbor.pointIndex][1],hl.highlightCanvas._ctx);
}function showTooltip(plot,series,neighbor){var hl=plot.plugins.highlighter;
var elem=hl._tooltipElem;
var serieshl=series.highlighter||{};
this.useYTickMarks=false;
this.useXTickMarks=false;
var opts=$.extend(true,{},hl,serieshl);
var data;
if(neighbor.data==undefined){var pointIndex=neighbor.pointIndex;
if(pointIndex>=series._plotData.length){pointIndex=pointIndex-series._plotData.length;
}data=series._plotData[pointIndex];
neighbor.data=series._plotData[pointIndex];
}else{data=neighbor.data;
}if(opts.useAxesFormatters){var xf=series._xaxis._ticks[0].formatter;
var yf=series._yaxis._ticks[0].formatter;
var xfstr=series._xaxis._ticks[0].formatString;
var yfstr=series._yaxis._ticks[0].formatString;
var str;
var xstr=xf(xfstr,neighbor.data[0]);
var ystrs=[];
if(hl.useXTickMarks&&series._xaxis._ticks[data[0]]){xstr=xf(xfstr,series._xaxis._ticks[data[0]].label);
}for(var i=1;
i<opts.yvalues+1;
i++){if(hl.useYTickMarks&&series._yaxis._ticks[data[1]]){ystrs.push(yf(yfstr,series._yaxis._ticks[data[1]].label));
}else{ystrs.push(yf(yfstr,data[i]));
}}if(typeof opts.formatString==="string"){switch(opts.tooltipAxes){case"both":case"xy":ystrs.unshift(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
case"yx":ystrs.push(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
case"x":str=$.jqplot.sprintf.apply($.jqplot.sprintf,[opts.formatString,xstr]);
break;
case"y":ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
default:ystrs.unshift(xstr);
ystrs.unshift(opts.formatString);
str=$.jqplot.sprintf.apply($.jqplot.sprintf,ystrs);
break;
}}else{switch(opts.tooltipAxes){case"both":case"xy":str=xstr;
for(var i=0;
i<ystrs.length;
i++){str+=opts.tooltipSeparator+ystrs[i];
}break;
case"yx":str="";
for(var i=0;
i<ystrs.length;
i++){str+=ystrs[i]+opts.tooltipSeparator;
}str+=xstr;
break;
case"x":str=xstr;
break;
case"y":str=ystrs.join(opts.tooltipSeparator);
break;
default:str=xstr;
for(var i=0;
i<ystrs.length;
i++){str+=opts.tooltipSeparator+ystrs[i];
}break;
}}}else{var str;
if(typeof opts.formatString==="string"){str=$.jqplot.sprintf.apply($.jqplot.sprintf,[opts.formatString].concat(neighbor.data));
}else{if(opts.tooltipAxes=="both"||opts.tooltipAxes=="xy"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0])+opts.tooltipSeparator+$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1]);
}else{if(opts.tooltipAxes=="yx"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1])+opts.tooltipSeparator+$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0]);
}else{if(opts.tooltipAxes=="x"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[0]);
}else{if(opts.tooltipAxes=="y"){str=$.jqplot.sprintf(opts.tooltipFormatString,neighbor.data[1]);
}}}}}}if($.isFunction(opts.tooltipContentEditor)){str=opts.tooltipContentEditor(str,neighbor.seriesIndex,neighbor.pointIndex,plot);
}str=str.replace(/%l/,series.label);
if(neighbor.data[2]!=undefined&&neighbor.data[2]){str=str.replace(/%1/,neighbor.data[2]);
}else{str=str.replace(/%1/,"");
}if(neighbor.data[3]!=undefined&&neighbor.data[3]){str=str.replace(/%2/,neighbor.data[3]);
}else{str=str.replace(/%2/,"");
}if(neighbor.data[4]!=undefined&&neighbor.data[4]){str=str.replace(/%3/,neighbor.data[4]);
}else{str=str.replace(/%3/,"");
}if(neighbor.data[5]!=undefined&&neighbor.data[5]){str=str.replace(/%4/,neighbor.data[5]);
}else{str=str.replace(/%4/,"");
}if(neighbor.data[8]!=undefined&&neighbor.data[8]){str=str.replace(/%5/,neighbor.data[8]);
}else{str=str.replace(/%5/,"");
}if(neighbor.data[7]!=undefined&&neighbor.data[7]){str=str.replace(/%6/,neighbor.data[7]);
}else{str=str.replace(/%6/,"");
}elem.html(str);
var gridpos={x:neighbor.gridData[0],y:neighbor.gridData[1]};
var ms=0;
var fact=0.707;
if(series.markerRenderer.show==true){ms=(series.markerRenderer.size+opts.sizeAdjust)/2;
}var loc=locations;
if(series.fillToZero&&series.fill&&neighbor.data[1]<0){loc=oppositeLocations;
}switch(loc[locationIndicies[opts.tooltipLocation]]){case"nw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
case"n":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-ms;
break;
case"ne":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
case"e":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+ms;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
case"se":var x=gridpos.x+plot._gridPadding.left+opts.tooltipOffset+fact*ms;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+fact*ms;
break;
case"s":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)/2;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+ms;
break;
case"sw":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top+opts.tooltipOffset+fact*ms;
break;
case"w":var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-ms;
var y=gridpos.y+plot._gridPadding.top-elem.outerHeight(true)/2;
break;
default:var x=gridpos.x+plot._gridPadding.left-elem.outerWidth(true)-opts.tooltipOffset-fact*ms;
var y=gridpos.y+plot._gridPadding.top-opts.tooltipOffset-elem.outerHeight(true)-fact*ms;
break;
}elem.css("left",x);
elem.css("top",y);
if(opts.fadeTooltip){elem.stop(true,true).fadeIn(opts.tooltipFadeSpeed);
}else{elem.show();
}elem=null;
}function handleMove(ev,gridpos,datapos,neighbor,plot){var hl=plot.plugins.highlighter;
var c=plot.plugins.cursor;
if(hl.show){if(neighbor==null&&hl.isHighlighting&&HIGHLIGHTER_HELPERS.isHighlighting){var ctx=hl.highlightCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
if(hl.fadeTooltip){hl._tooltipElem.fadeOut(hl.tooltipFadeSpeed);
}else{hl._tooltipElem.hide();
}if(hl.bringSeriesToFront){plot.restorePreviousSeriesOrder();
}hl.isHighlighting=false;
HIGHLIGHTER_HELPERS.isHighlighting=false;
hl.currentNeighbor=null;
ctx=null;
}else{if(neighbor!=null&&plot.series[neighbor.seriesIndex].showHighlight&&!hl.isHighlighting&&!HIGHLIGHTER_HELPERS.isHighlighting){hl.isHighlighting=true;
HIGHLIGHTER_HELPERS.isHighlighting=true;
hl.currentNeighbor=neighbor;
if(hl.showMarker){draw(plot,neighbor);
}if(hl.showTooltip&&(!c||!c._zoom.started)){showTooltip(plot,plot.series[neighbor.seriesIndex],neighbor);
}if(hl.bringSeriesToFront){plot.moveSeriesToFront(neighbor.seriesIndex);
}}else{if(neighbor!=null&&hl.isHighlighting&&HIGHLIGHTER_HELPERS.isHighlighting&&hl.currentNeighbor!=neighbor){if(plot.series[neighbor.seriesIndex].showHighlight){var ctx=hl.highlightCanvas._ctx;
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);
hl.isHighlighting=true;
HIGHLIGHTER_HELPERS.isHighlighting=true;
hl.currentNeighbor=neighbor;
if(hl.showMarker){draw(plot,neighbor);
}if(hl.showTooltip&&(!c||!c._zoom.started)){showTooltip(plot,plot.series[neighbor.seriesIndex],neighbor);
}if(hl.bringSeriesToFront){plot.moveSeriesToFront(neighbor.seriesIndex);
}}}}}}}})(jQuery);
var HIGHLIGHTER_HELPERS=function(){return{isHighlighting:false};
}();
(function($){$.jqplot.HLWhiskerRenderer=function(){$.jqplot.LineRenderer.call(this);
this.tickLength;
this.lowColor=null;
this.lowWidth=null;
this.hiColor=null;
this.hiWidth=null;
this.wickColor=null;
this.wickWidth=null;
this.enableNormalcyRange=null;
this.lineWidth;
};
$.jqplot.HLWhiskerRenderer.prototype=new $.jqplot.LineRenderer();
$.jqplot.HLWhiskerRenderer.prototype.constructor=$.jqplot.HLWhiskerRenderer;
$.jqplot.HLWhiskerRenderer.prototype.init=function(options,plot){options=options||{};
this.lineWidth=options.lineWidth||1.5;
this.lowColor=options.lowColor||"black";
this.lowWidth=options.lowWidth||1.5;
this.hiColor=options.hiColor||"black";
this.hiWidth=options.hiWidth||1.5;
this.wickColor=options.wickColor||"black";
this.wickWidth=options.wickWidth||1.5;
this.tickLength=options.tickLength||4;
this.enableNormalcyRange=options.enableNormalcyRange||false;
$.jqplot.LineRenderer.prototype.init.call(this,options);
this._type="hlwhisker";
var db=this._yaxis._dataBounds;
var d=this._plotData;
plot.postDrawHooks.addOnce($.jqplot.HLWhiskerRenderer.dataPointHover);
};
$.jqplot.HLWhiskerRenderer.prototype.draw=function(ctx,gd,options){var d=this.data;
var xmin=this._xaxis.min;
var xmax=this._xaxis.max;
var xminidx=0;
var xmaxidx=d.length;
var xp=this._xaxis.series_u2p;
var yp=this._yaxis.series_u2p;
var i,ops,b,h,w,a,points;
var o;
var r=this.renderer;
var opts=(options!=undefined)?options:{};
this.wickColor=(opts.wickColor!=undefined)?opts.wickColor:this.wickColor;
ctx.save();
if(this.show&&d.length){var x,hi,low;
for(var i=0;
i<d.length;
i++){if(d[i][0]<xmin){xminidx=i;
}else{if(d[i][0]<xmax){xmaxidx=i+1;
}}}var dwidth=this.gridData[xmaxidx-1][0]-this.gridData[xminidx][0];
var nvisiblePoints=xmaxidx-xminidx;
try{var dinterval=Math.abs(this._xaxis.series_u2p(parseInt(this._xaxis._intervalStats[0].sortedIntervals[0].interval))-this._xaxis.series_u2p(0));
}catch(e){var dinterval=dwidth/nvisiblePoints;
}if(typeof(this.tickLength)!="number"){this.tickLength=Math.min(10,dinterval/3.5);
}for(var i=xminidx;
i<xmaxidx;
i++){x=xp(d[i][0]);
low=yp(d[i][1]);
hi=yp(d[i][2]);
o={};
if(this.wickColor){opts.strokeStyle=this.wickColor;
}if(this.wickWidth){opts.lineWidth=this.wickWidth;
}r.shapeRenderer.draw(ctx,[[x,hi],[x,low]],opts);
if(this.hiColor){opts.strokeStyle=this.hiColor;
}if(this.enableNormalcyRange){opts.strokeStyle=d[i][4]||this.hiColor;
}if(this.hiWidth){opts.lineWidth=this.hiWidth;
}if(this.enableNormalcyRange){if(d[i][2]<this._yaxis._max){r.shapeRenderer.draw(ctx,[[x,hi],[x+this.tickLength,hi-this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,hi],[x-this.tickLength,hi-this.tickLength]],opts);
}else{r.shapeRenderer.draw(ctx,[[x+this.tickLength,this.tickLength],[x-this.tickLength,this.tickLength],[x,this.tickLength-this.tickLength]],$.extend(true,{fill:true,fillStyle:opts.strokeStyle},opts));
}}else{r.shapeRenderer.draw(ctx,[[x,hi],[x+this.tickLength,hi-this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,hi],[x-this.tickLength,hi-this.tickLength]],opts);
}if(this.lowColor){opts.strokeStyle=this.lowColor;
}if(this.enableNormalcyRange){opts.strokeStyle=d[i][3]||this.lowColor;
}if(this.lowWidth){opts.lineWidth=this.lowWidth;
}r.shapeRenderer.draw(ctx,[[x,low],[x+this.tickLength,low+this.tickLength]],opts);
r.shapeRenderer.draw(ctx,[[x,low],[x-this.tickLength,low+this.tickLength]],opts);
delete opts.strokeStyle;
delete opts.lineWidth;
}}ctx.restore();
};
$.jqplot.HLWhiskerRenderer.prototype.drawShadow=function(ctx,gd,options){};
$.jqplot.HLWhiskerRenderer.checkOptions=function(target,data,options){if(!options.highlighter){options.highlighter={showMarker:false,tooltipAxes:"y",yvalues:4,formatString:'<table class="jqplot-highlighter"><tr><td>date:</td><td>%s</td></tr><tr><td>open:</td><td>%s</td></tr><tr><td>hi:</td><td>%s</td></tr><tr><td>low:</td><td>%s</td></tr><tr><td>close:</td><td>%s</td></tr></table>'};
}};
$.jqplot.HLWhiskerRenderer.dataPointHover=function(target,data,options){var plot=this.data[0];
var markersLow=[];
var markersHigh=[];
var res;
for(var k=0;
k<plot.length;
k++){markersLow.push([plot[k][0],plot[k][1]]);
markersHigh.push([plot[k][0],plot[k][2]]);
}var res=this.series[0].renderer.makeGridData.call(this.series[0],markersLow.concat(markersHigh));
this.series[0].gridData=res;
};
})(jQuery);
(function($){$.jqplot.LineRendererWithIndex=function(){$.jqplot.LineRenderer.call(this);
};
$.jqplot.LineRendererWithIndex.prototype=new $.jqplot.LineRenderer();
$.jqplot.LineRendererWithIndex.constructor=$.jqplot.LineRendererWithIndex;
$.jqplot.LineRendererWithIndex.prototype.init=function(options){$.jqplot.LineRenderer.prototype.init.call(this,options);
};
$.jqplot.LineRendererWithIndex.prototype.draw=function(ctx,gd,options,plot){var i;
var opts=$.extend(true,{},options);
var shadow=(opts.shadow!=undefined)?opts.shadow:this.shadow;
var showLine=(opts.showLine!=undefined)?opts.showLine:this.showLine;
var fill=(opts.fill!=undefined)?opts.fill:this.fill;
var fillAndStroke=(opts.fillAndStroke!=undefined)?opts.fillAndStroke:this.fillAndStroke;
var xmin,ymin,xmax,ymax;
ctx.save();
if(gd.length){if(showLine){if(fill){if(this.fillToZero){var negativeColor=this.negativeColor;
if(!this.useNegativeColors){negativeColor=opts.fillStyle;
}var isnegative=false;
var posfs=opts.fillStyle;
if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var tempgd=[];
var pd=(this.renderer.smooth)?this.renderer._smoothedPlotData:this._plotData;
this._areaPoints=[];
var pyzero=this._yaxis.series_u2p(this.fillToValue);
var pxzero=this._xaxis.series_u2p(this.fillToValue);
opts.closePath=true;
if(this.fillAxis=="y"){tempgd.push([gd[0][0],pyzero]);
this._areaPoints.push([gd[0][0],pyzero]);
for(var i=0;
i<gd.length-1;
i++){tempgd.push(gd[i]);
this._areaPoints.push(gd[i]);
if(pd[i][1]*pd[i+1][1]<0){if(pd[i][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}var xintercept=gd[i][0]+(gd[i+1][0]-gd[i][0])*(pyzero-gd[i][1])/(gd[i+1][1]-gd[i][1]);
tempgd.push([xintercept,pyzero]);
this._areaPoints.push([xintercept,pyzero]);
if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
tempgd=[[xintercept,pyzero]];
}}if(pd[gd.length-1][1]<0){isnegative=true;
opts.fillStyle=negativeColor;
}else{isnegative=false;
opts.fillStyle=posfs;
}tempgd.push(gd[gd.length-1]);
this._areaPoints.push(gd[gd.length-1]);
tempgd.push([gd[gd.length-1][0],pyzero]);
this._areaPoints.push([gd[gd.length-1][0],pyzero]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,tempgd,opts);
}this.renderer.shapeRenderer.draw(ctx,tempgd,opts);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this._areaPoints=gd;
this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}else{if(fillAndStroke){var fasgd=gd.slice(0);
}if(this.index==0||!this._stack){var gridymin=ctx.canvas.height;
gd.unshift([gd[0][0],gridymin]);
var len=gd.length;
gd.push([gd[len-1][0],gridymin]);
}else{var prev=this._prevGridData;
for(var i=prev.length;
i>0;
i--){gd.push(prev[i-1]);
}}this._areaPoints=gd;
if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}if(fillAndStroke){var fasopts=$.extend(true,{},opts,{fill:false,closePath:false});
this.renderer.shapeRenderer.draw(ctx,fasgd,fasopts);
if(this.markerRenderer.show){if(this.renderer.smooth){fasgd=this.gridData;
}for(i=0;
i<fasgd.length;
i++){this.markerRenderer.draw(i,fasgd[i][0],fasgd[i][1],ctx,opts.markerOptions);
}}}}else{if(this.renderer.bands.show){var bdat;
var bopts=$.extend(true,{},opts);
if(this.renderer.bands.showLines){bdat=(this.renderer.smooth)?this.renderer._hiBandSmoothedData:this.renderer._hiBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,opts);
bdat=(this.renderer.smooth)?this.renderer._lowBandSmoothedData:this.renderer._lowBandGridData;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}if(this.renderer.bands.fill){if(this.renderer.smooth){bdat=this.renderer._hiBandSmoothedData.concat(this.renderer._lowBandSmoothedData.reverse());
}else{bdat=this.renderer._hiBandGridData.concat(this.renderer._lowBandGridData.reverse());
}this._areaPoints=bdat;
bopts.closePath=true;
bopts.fill=true;
bopts.fillStyle=this.renderer.bands.fillColor;
this.renderer.shapeRenderer.draw(ctx,bdat,bopts);
}}if(shadow){this.renderer.shadowRenderer.draw(ctx,gd,opts);
}this.renderer.shapeRenderer.draw(ctx,gd,opts);
}}var xmin=xmax=ymin=ymax=null;
for(i=0;
i<this._areaPoints.length;
i++){var p=this._areaPoints[i];
if(xmin>p[0]||xmin==null){xmin=p[0];
}if(ymax<p[1]||ymax==null){ymax=p[1];
}if(xmax<p[0]||xmax==null){xmax=p[0];
}if(ymin>p[1]||ymin==null){ymin=p[1];
}}if(this.type==="line"&&this.renderer.bands.show){ymax=this._yaxis.series_u2p(this.renderer.bands._min);
ymin=this._yaxis.series_u2p(this.renderer.bands._max);
}this._boundingBox=[[xmin,ymax],[xmax,ymin]];
if(this.markerRenderer.show&&!fill){if(this.renderer.smooth){gd=this.gridData;
}for(i=0;
i<gd.length;
i++){if(gd[i][0]!=null&&gd[i][1]!=null){this.markerRenderer.draw(i,gd[i][0],gd[i][1],ctx,opts.markerOptions);
}}}}ctx.restore();
};
})(jQuery);
(function($){$.jqplot.MarkerRenderer=function(options){this.show=true;
this.style="filledCircle";
this.lineWidth=2;
this.size=9;
this.color="#666666";
this.shadow=true;
this.shadowAngle=45;
this.shadowOffset=1;
this.shadowDepth=3;
this.shadowAlpha="0.07";
this.shadowRenderer=new $.jqplot.ShadowRenderer();
this.shapeRenderer=new $.jqplot.ShapeRenderer();
this.whiskerColor="#000000";
this.whiskerData=[];
this._whiskerData=[];
$.extend(true,this,options);
};
$.jqplot.MarkerRenderer.prototype.init=function(options){$.extend(true,this,options);
var sdopt={angle:this.shadowAngle,offset:this.shadowOffset,alpha:this.shadowAlpha,lineWidth:this.lineWidth,depth:this.shadowDepth,closePath:true};
if(this.style.indexOf("filled")!=-1){sdopt.fill=true;
}if(this.style.indexOf("ircle")!=-1){sdopt.isarc=true;
sdopt.closePath=false;
}this.shadowRenderer.init(sdopt);
var shopt={fill:false,isarc:false,strokeStyle:this.color,fillStyle:this.color,lineWidth:this.lineWidth,closePath:true};
if(this.style.indexOf("filled")!=-1){shopt.fill=true;
}if(this.style.indexOf("ircle")!=-1){shopt.isarc=true;
shopt.closePath=false;
}this.shapeRenderer.init(shopt);
};
$.jqplot.MarkerRenderer.prototype.drawLine=function(x1,y1,x2,y2,ctx){ctx.save();
ctx.beginPath();
ctx.moveTo(x1,y1);
ctx.lineTo(x2,y2);
ctx.strokeStyle=this.color;
ctx.stroke();
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawLineOpt=function(p1,p2,ctx,fill,options){var points=[p1,p2];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
};
$.jqplot.MarkerRenderer.prototype.drawUpVee=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/1/stretch;
var dy=this.size/1*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points=[[x+dx,y+dy],[x,y],[x-dx,y+dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points,{closePath:false});
}this.shapeRenderer.draw(ctx,points,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDownVee=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/1/stretch;
var dy=this.size/1*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points=[[x+dx,y-dy],[x,y],[x-dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points,{closePath:false});
}this.shapeRenderer.draw(ctx,points,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDiamond=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y],[x,y+dy],[x+dx,y],[x,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawStar=function(x,y,ctx,fill,options){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=0-(this.size/2*stretch);
var dyE=0-(this.size/1.5*stretch);
var points=[[x,y+dyE],[x+(dx/3),y+(dy/2)],[x+dx,y+(dy/2)],[x+(dx/2),y],[x+dx,y-dy],[x,y-(dy/2)],[x-dx,y-dy],[x-(dx/2),y],[x-dx,y+(dy/2)],[x-(dx/3),y+(dy/2)]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawRectangleDiag=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=null;
switch(direction){case"l":points=[[x,y+dy],[x+dx,y+(dy/2)],[x,y-dx],[x-dx,y-(dy/2)]];
break;
default:points=[[x,y+dy],[x+dx,y-(dy/2)],[x,y-dx],[x-dx,y+(dy/2)]];
break;
}if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawTriangle=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=null;
switch(direction){case"r":points=[[x+dx,y],[x-dx,y-dy],[x-dx,y+dx]];
break;
case"l":points=[[x-dx,y],[x+dx,y-dy],[x+dx,y+dx]];
break;
case"d":points=[[x,y+dy],[x-dx,y-dy],[x+dx,y-dx]];
break;
default:points=[[x,y-dy],[x-dx,y+dy],[x+dx,y+dx]];
break;
}if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawRectangle=function(x,y,ctx,fill,options,direction){var stretch=1.2;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
switch(direction){case"v":dx=this.size/4*stretch;
break;
default:dy=this.size/4*stretch;
break;
}var points=[[x-dx,y-dy],[x-dx,y+dy],[x+dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawHeart=function(x,y,ctx,fill,options){var stretch=1.5;
var dx=this.size/2*stretch;
var dy=0-(this.size/2*stretch);
var points=[[x,y+(dy/2)],[x+(dx/3),y+dy],[x+dx,y+dy],[x+dx,y],[x,y-dy],[x-dx,y],[x-dx,y+dy],[x-(dx/3),y+dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawPlus=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points1=[[x,y-dy],[x,y+dy]];
var points2=[[x+dx,y],[x-dx,y]];
var opts=$.extend(true,{},this.options,{closePath:false});
if(this.shadow){this.shadowRenderer.draw(ctx,points1,{closePath:false});
this.shadowRenderer.draw(ctx,points2,{closePath:false});
}this.shapeRenderer.draw(ctx,points1,opts);
this.shapeRenderer.draw(ctx,points2,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawX=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var opts=$.extend(true,{},this.options,{closePath:false});
var points1=[[x-dx,y-dy],[x+dx,y+dy]];
var points2=[[x-dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points1,{closePath:false});
this.shadowRenderer.draw(ctx,points2,{closePath:false});
}this.shapeRenderer.draw(ctx,points1,opts);
this.shapeRenderer.draw(ctx,points2,opts);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawDash=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y],[x+dx,y]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawSquare=function(x,y,ctx,fill,options){var stretch=1;
var dx=this.size/2*stretch;
var dy=this.size/2*stretch;
var points=[[x-dx,y-dy],[x-dx,y+dy],[x+dx,y+dy],[x+dx,y-dy]];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawCircle=function(x,y,ctx,fill,options){var radius=this.size/2;
var end=2*Math.PI;
var points=[x,y,radius,0,end,true];
if(this.shadow){this.shadowRenderer.draw(ctx,points);
}this.shapeRenderer.draw(ctx,points,options);
ctx.restore();
};
$.jqplot.MarkerRenderer.prototype.drawWhiskerLine=function(x,y,ctx,fill,options){var y1=y,y2=y,wLen=(this._whiskerData)?this._whiskerData.length:0;
for(var cnt=0;
cnt<wLen;
cnt++){if(this._whiskerData[cnt][0]==x){y1=this._whiskerData[cnt][1];
y2=this._whiskerData[cnt][2];
break;
}}var points=[];
if(y1!==y||y2!==y){ctx.save();
ctx.beginPath();
ctx.moveTo(x,y1);
ctx.lineTo(x,y2);
ctx.strokeStyle=this.whiskerColor;
ctx.stroke();
ctx.restore();
}};
$.jqplot.MarkerRenderer.prototype.draw=function(x,y,ctx,options){options=options||{};
this.drawWhiskerLine(x,y,ctx,false,options);
switch(this.style){case"upVee":this.drawUpVee(x,y,ctx,false,options);
break;
case"downVee":this.drawDownVee(x,y,ctx,false,options);
break;
case"diamond":this.drawDiamond(x,y,ctx,false,options);
break;
case"filledDiamond":this.drawDiamond(x,y,ctx,true,options);
break;
case"star":this.drawStar(x,y,ctx,false,options);
break;
case"filledStar":this.drawStar(x,y,ctx,true,options);
break;
case"rectDiagRight":this.drawRectangleDiag(x,y,ctx,false,options,"r");
break;
case"filledRectDiagRight":this.drawRectangleDiag(x,y,ctx,true,options,"r");
break;
case"rectDiagLeft":this.drawRectangleDiag(x,y,ctx,false,options,"l");
break;
case"filledRectDiagLeft":this.drawRectangleDiag(x,y,ctx,true,options,"l");
break;
case"triangleRight":this.drawTriangle(x,y,ctx,false,options,"r");
break;
case"filledTriangleRight":this.drawTriangle(x,y,ctx,true,options,"r");
break;
case"triangleLeft":this.drawTriangle(x,y,ctx,false,options,"l");
break;
case"filledTriangleLeft":this.drawTriangle(x,y,ctx,true,options,"l");
break;
case"triangleUp":this.drawTriangle(x,y,ctx,false,options,"u");
break;
case"filledTriangleUp":options={fill:true,isarc:false,strokeStyle:this.color,fillStyle:this.color,lineWidth:this.lineWidth,closePath:true};
this.drawTriangle(x,y,ctx,true,options,"u");
break;
case"triangleDown":this.drawTriangle(x,y,ctx,false,options,"d");
break;
case"filledTriangleDown":this.drawTriangle(x,y,ctx,true,options,"d");
break;
case"rectHorizontal":this.drawRectangle(x,y,ctx,false,options,"h");
break;
case"filledRectHorizontal":this.drawRectangle(x,y,ctx,true,options,"h");
break;
case"rectVertical":this.drawRectangle(x,y,ctx,false,options,"v");
break;
case"filledRectVertical":this.drawRectangle(x,y,ctx,true,options,"v");
break;
case"heart":this.drawHeart(x,y,ctx,false,options);
break;
case"filledHeart":this.drawHeart(x,y,ctx,true,options);
break;
case"circle":this.drawCircle(x,y,ctx,false,options);
break;
case"filledCircle":this.drawCircle(x,y,ctx,true,options);
break;
case"square":this.drawSquare(x,y,ctx,false,options);
break;
case"filledSquare":this.drawSquare(x,y,ctx,true,options);
break;
case"x":this.drawX(x,y,ctx,true,options);
break;
case"plus":this.drawPlus(x,y,ctx,true,options);
break;
case"dash":this.drawDash(x,y,ctx,true,options);
break;
case"line":this.drawLineOpt(x,y,ctx,false,options);
break;
default:this.drawDiamond(x,y,ctx,false,options);
break;
}};
})(jQuery);
(function($){$.jqplot.PointLabels=function(options){this.show=$.jqplot.config.enablePlugins;
this.location="n";
this.labelsFromSeries=false;
this.seriesLabelIndex=null;
this.labels=[];
this._labels=[];
this.stackedValue=false;
this.ypadding=6;
this.xpadding=6;
this.escapeHTML=true;
this.edgeTolerance=-5;
this.formatter=$.jqplot.DefaultTickFormatter;
this.formatString="";
this.hideZeros=false;
this._elems=[];
$.extend(true,this,options);
};
var locations=["nw","n","ne","e","se","s","sw","w"];
var locationIndicies={nw:0,n:1,ne:2,e:3,se:4,s:5,sw:6,w:7};
var oppositeLocations=["se","s","sw","w","nw","n","ne","e"];
$.jqplot.PointLabels.init=function(target,data,seriesDefaults,opts,plot){var options=$.extend(true,{},seriesDefaults,opts);
options.pointLabels=options.pointLabels||{};
if(this.renderer.constructor===$.jqplot.BarRenderer&&this.barDirection==="horizontal"&&!options.pointLabels.location){options.pointLabels.location="e";
}this.plugins.pointLabels=new $.jqplot.PointLabels(options.pointLabels);
this.plugins.pointLabels.setLabels.call(this);
};
$.jqplot.PointLabels.prototype.setLabels=function(){var p=this.plugins.pointLabels;
var labelIdx;
if(p.seriesLabelIndex!=null){labelIdx=p.seriesLabelIndex;
}else{if(this.renderer.constructor===$.jqplot.BarRenderer&&this.barDirection==="horizontal"){labelIdx=0;
}else{labelIdx=(this._plotData.length===0)?0:this._plotData[0].length-1;
}}p._labels=[];
if(p.labels.length===0||p.labelsFromSeries){if(p.stackedValue){if(this._plotData.length&&this._plotData[0].length){for(var i=0;
i<this._plotData.length;
i++){p._labels.push(this._plotData[i][labelIdx]);
}}}else{var d=this._plotData;
if(this.renderer.constructor===$.jqplot.BarRenderer&&this.waterfall){d=this._data;
}if(d.length&&d[0].length){for(var i=0;
i<d.length;
i++){p._labels.push(d[i][labelIdx]);
}}d=null;
}}else{if(p.labels.length){p._labels=p.labels;
}}};
$.jqplot.PointLabels.prototype.xOffset=function(elem,location,padding){location=location||this.location;
padding=padding||this.xpadding;
var offset;
switch(location){case"nw":offset=-elem.outerWidth(true)-this.xpadding;
break;
case"n":offset=-elem.outerWidth(true)/2;
break;
case"ne":offset=this.xpadding;
break;
case"e":offset=this.xpadding;
break;
case"se":offset=this.xpadding;
break;
case"s":offset=-elem.outerWidth(true)/2;
break;
case"sw":offset=-elem.outerWidth(true)-this.xpadding;
break;
case"w":offset=-elem.outerWidth(true)-this.xpadding;
break;
default:offset=-elem.outerWidth(true)-this.xpadding;
break;
}return offset;
};
$.jqplot.PointLabels.prototype.yOffset=function(elem,location,padding){location=location||this.location;
padding=padding||this.xpadding;
var offset;
switch(location){case"nw":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"n":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"ne":offset=-elem.outerHeight(true)-this.ypadding;
break;
case"e":offset=-elem.outerHeight(true)/2;
break;
case"se":offset=this.ypadding;
break;
case"s":offset=this.ypadding;
break;
case"sw":offset=this.ypadding;
break;
case"w":offset=-elem.outerHeight(true)/2;
break;
default:offset=-elem.outerHeight(true)-this.ypadding;
break;
}return offset;
};
$.jqplot.PointLabels.draw=function(sctx,options,plot){var p=this.plugins.pointLabels;
p.setLabels.call(this);
for(var i=0;
i<p._elems.length;
i++){p._elems[i].emptyForce();
}p._elems.splice(0,p._elems.length);
if(p.show){for(var i=0;
i<p.labels.length;
i++){var pd=this._plotData;
var xax=this._xaxis;
var yax=this._yaxis;
var label=p.labels[i];
if(p.hideZeros&&parseInt(p.labels[i],10)==0){label="";
}var elem=$('<div class="jqplot-point-label" style="position:absolute"></div>');
elem.insertAfter(sctx.canvas);
if(p.escapeHTML){elem.text(label);
}else{elem.html(label);
}var location=p.location;
if(this.waterfall&&parseInt(label,10)<0){location=oppositeLocations[locationIndicies[location]];
}var ell=xax.u2p(pd[i][0])+p.xOffset(elem,location);
var elt=yax.u2p(pd[i][1])+p.yOffset(elem,location);
elem.css("left",ell);
elem.css("top",elt);
var elr=ell+$(elem).width();
var elb=elt+$(elem).height();
var et=p.edgeTolerance;
var scl=$(sctx.canvas).position().left;
var sct=$(sctx.canvas).position().top;
var scr=sctx.canvas.width+scl;
var scb=sctx.canvas.height+sct;
if(ell-et<scl||elt-et<sct||elr+et>scr||elb+et>scb){$(elem).remove();
}}}};
$.jqplot.postSeriesInitHooks.push($.jqplot.PointLabels.init);
$.jqplot.postDrawSeriesHooks.push($.jqplot.PointLabels.draw);
})(jQuery);
(function($){$.jqplot.ImageMarkerRenderer=function(){$.jqplot.MarkerRenderer.call(this);
this.imageElement=null;
this.xOffset=null;
this.yOffset=null;
};
$.jqplot.ImageMarkerRenderer.prototype=new $.jqplot.MarkerRenderer();
$.jqplot.ImageMarkerRenderer.constructor=$.jqplot.ImageMarkerRenderer;
$.jqplot.ImageMarkerRenderer.prototype.init=function(options){options=options||{};
this.imageElement=options.imageElement;
this.xOffset=options.xOffset||0;
this.yOffset=options.yOffset||0;
$.jqplot.MarkerRenderer.prototype.init.call(this,options);
};
$.jqplot.ImageMarkerRenderer.prototype.draw=function(x,y,ctx,options){ctx.drawImage(this.imageElement,x+this.xOffset,y+this.yOffset);
ctx.restore();
return;
};
})(jQuery);
(function($){$.jqplot.IndividualImageMarkerRenderer=function(){$.jqplot.MarkerRenderer.call(this);
this.imageArray=null;
this.xOffset=null;
this.yOffset=null;
};
$.jqplot.IndividualImageMarkerRenderer.prototype=new $.jqplot.MarkerRenderer();
$.jqplot.IndividualImageMarkerRenderer.constructor=$.jqplot.IndividualImageMarkerRenderer;
$.jqplot.IndividualImageMarkerRenderer.prototype.init=function(options){options=options||{};
this.imageArray=options.imageArray||[];
this.xOffset=options.xOffset||0;
this.yOffset=options.yOffset||0;
$.jqplot.MarkerRenderer.prototype.init.call(this,options);
};
$.jqplot.IndividualImageMarkerRenderer.prototype.draw=function(i,x,y,ctx,options){if(this.imageArray[i]){ctx.drawImage(this.imageArray[i],x+this.xOffset,y+this.yOffset);
ctx.restore();
}return;
};
})(jQuery);
