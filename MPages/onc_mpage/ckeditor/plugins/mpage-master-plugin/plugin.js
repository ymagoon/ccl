(function(){CKEDITOR.plugins.add("mpage-master-plugin",{lang:"en,en-au,en-gb,de,fr,es,pt-br",init:function(editor){}});
})();
CKEDITOR.plugins.add("cerndyndocbasicstyles",{init:function(editor){logger.logWarning("MPages has overridden the cerndyndocbasicstyles plugin to do nothing.");
}});
CKEDITOR.plugins.add("cerndyndoccommon",{init:function(editor){logger.logWarning("MPages has overridden the cerndyndoccommon plugin to do nothing.");
}});
(function(){CKEDITOR.plugins.add("sourcearea",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"source,source-rtl",init:function(editor){if(editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE){return;
}var sourcearea=CKEDITOR.plugins.sourcearea;
editor.addMode("source",function(callback){var contentsSpace=editor.ui.space("contents"),textarea=contentsSpace.getDocument().createElement("textarea");
textarea.setStyles(CKEDITOR.tools.extend({width:CKEDITOR.env.ie7Compat?"99%":"100%",height:"100%",resize:"none",outline:"none","text-align":"left"},CKEDITOR.tools.cssVendorPrefix("tab-size",editor.config.sourceAreaTabSize||4)));
textarea.setAttribute("dir","ltr");
textarea.addClass("cke_source cke_reset cke_enable_context_menu");
editor.ui.space("contents").append(textarea);
var editable=editor.editable(new sourceEditable(editor,textarea));
editable.setData(editor.getData(1));
if(CKEDITOR.env.ie){editable.attachListener(editor,"resize",onResize,editable);
editable.attachListener(CKEDITOR.document.getWindow(),"resize",onResize,editable);
CKEDITOR.tools.setTimeout(onResize,0,editable);
}editor.fire("ariaWidget",this);
callback();
});
editor.addCommand("source",sourcearea.commands.source);
if(editor.ui.addButton){editor.ui.addButton("Source",{label:editor.lang.sourcearea.toolbar,command:"source",toolbar:"mode,10"});
}editor.on("mode",function(){editor.getCommand("source").setState(editor.mode=="source"?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF);
});
function onResize(){this.hide();
this.setStyle("height",this.getParent().$.clientHeight+"px");
this.setStyle("width",this.getParent().$.clientWidth+"px");
this.show();
}}});
var sourceEditable=CKEDITOR.tools.createClass({base:CKEDITOR.editable,proto:{setData:function(data){this.setValue(data);
this.editor.fire("dataReady");
},getData:function(){return this.getValue();
},insertHtml:function(){},insertElement:function(){},insertText:function(){},setReadOnly:function(isReadOnly){this[(isReadOnly?"set":"remove")+"Attribute"]("readOnly","readonly");
},detach:function(){sourceEditable.baseProto.detach.call(this);
this.clearCustomData();
this.remove();
}}});
})();
CKEDITOR.plugins.sourcearea={commands:{source:{modes:{wysiwyg:1,source:1},editorFocus:false,readOnly:1,exec:function(editor){if(editor.mode=="wysiwyg"){editor.fire("saveSnapshot");
}editor.getCommand("source").setState(CKEDITOR.TRISTATE_DISABLED);
editor.setMode(editor.mode=="source"?"wysiwyg":"source");
},canUndo:false}}};
(function(){var commands={toolbarFocus:{editorFocus:false,readOnly:1,exec:function(editor){var idBase=editor._.elementsPath.idBase;
var element=CKEDITOR.document.getById(idBase+"0");
element&&element.focus(CKEDITOR.env.ie||CKEDITOR.env.air);
}}};
var emptyHtml='<span class="cke_path_empty">&nbsp;</span>';
var extra="";
if(CKEDITOR.env.opera||(CKEDITOR.env.gecko&&CKEDITOR.env.mac)){extra+=' onkeypress="return false;"';
}if(CKEDITOR.env.gecko){extra+=' onblur="this.style.cssText = this.style.cssText;"';
}var pathItemTpl=CKEDITOR.addTemplate("pathItem",'<a id="{id}" href="{jsTitle}" tabindex="-1" class="cke_path_item" title="{label}"'+((CKEDITOR.env.gecko&&CKEDITOR.env.version<10900)?' onfocus="event.preventBubble();"':"")+extra+' hidefocus="true"  onkeydown="return CKEDITOR.tools.callFunction({keyDownFn},{index}, event );" onclick="CKEDITOR.tools.callFunction({clickFn},{index}); return false;" role="button" aria-label="{label}">{text}</a>');
CKEDITOR.plugins.add("elementspath",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",init:function(editor){editor.on("uiSpace",function(event){if(event.data.space=="bottom"){initElementsPath(editor,event.data);
}});
}});
function initElementsPath(editor,bottomSpaceData){var spaceId=editor.ui.spaceId("path");
var spaceElement;
var getSpaceElement=function(){if(!spaceElement){spaceElement=CKEDITOR.document.getById(spaceId);
}return spaceElement;
};
var idBase="cke_elementspath_"+CKEDITOR.tools.getNextNumber()+"_";
editor._.elementsPath={idBase:idBase,filters:[]};
bottomSpaceData.html+='<span id="'+spaceId+'_label" class="cke_voice_label">'+editor.lang.elementspath.eleLabel+'</span><span id="'+spaceId+'" class="cke_path" role="group" aria-labelledby="'+spaceId+'_label">'+emptyHtml+"</span>";
editor.on("uiReady",function(){var element=editor.ui.space("path");
element&&editor.focusManager.add(element,1);
});
function onClick(elementIndex){var element=editor._.elementsPath.list[elementIndex];
if(element.equals(editor.editable())){var range=editor.createRange();
range.selectNodeContents(element);
range.select();
}else{editor.getSelection().selectElement(element);
}editor.focus();
}var onClickHanlder=CKEDITOR.tools.addFunction(onClick);
var onKeyDownHandler=CKEDITOR.tools.addFunction(function(elementIndex,ev){var idBase=editor._.elementsPath.idBase,element;
ev=new CKEDITOR.dom.event(ev);
var rtl=editor.lang.dir=="rtl";
switch(ev.getKeystroke()){case rtl?39:37:case 9:element=CKEDITOR.document.getById(idBase+(elementIndex+1));
if(!element){element=CKEDITOR.document.getById(idBase+"0");
}element.focus();
return false;
case rtl?37:39:case CKEDITOR.SHIFT+9:element=CKEDITOR.document.getById(idBase+(elementIndex-1));
if(!element){element=CKEDITOR.document.getById(idBase+(editor._.elementsPath.list.length-1));
}element.focus();
return false;
case 27:editor.focus();
return false;
case 13:case 32:onClick(elementIndex);
return false;
}return true;
});
editor.on("selectionChange",function(ev){var env=CKEDITOR.env,editable=editor.editable(),selection=ev.data.selection,element=selection.getStartElement(),html=[],elementsList=editor._.elementsPath.list=[],filters=editor._.elementsPath.filters;
while(element){var ignore=0,name;
if(element.data("cke-display-name")){name=element.data("cke-display-name");
}else{if(element.data("cke-real-element-type")){name=element.data("cke-real-element-type");
}else{name=element.getName();
}}for(var i=0;
i<filters.length;
i++){var ret=filters[i](element,name);
if(ret===false){ignore=1;
break;
}name=ret||name;
}if(!ignore){var index=elementsList.push(element)-1,label=editor.lang.elementspath.eleTitle.replace(/%1/,name);
var text=name;
if(editor.config.elementsPath_showClassNames){var classList=element.$.className.split(/\s+/);
for(var i=0;
i<classList.length;
i++){if(classList[i]){text+="."+classList[i];
}}}var item=pathItemTpl.output({id:idBase+index,label:label,text:text,jsTitle:"javascript:void('"+name+"')",index:index,keyDownFn:onKeyDownHandler,clickFn:onClickHanlder});
html.unshift(item);
}if(element.equals(editable)){break;
}element=element.getParent();
}var space=getSpaceElement();
space.setHtml(html.join("")+emptyHtml);
editor.fire("elementsPathUpdate",{space:space});
});
function empty(){spaceElement&&spaceElement.setHtml(emptyHtml);
delete editor._.elementsPath.list;
}editor.on("readOnly",empty);
editor.on("contentDomUnload",empty);
editor.addCommand("elementsPathFocus",commands.toolbarFocus);
editor.setKeystroke(CKEDITOR.ALT+122,"elementsPathFocus");
}})();
CKEDITOR.plugins.add("basicstyles",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"bold,italic,underline,strike,subscript,superscript",init:function(editor){var order=0;
var addButtonCommand=function(buttonName,buttonLabel,commandName,styleDefiniton){if(!styleDefiniton){return;
}var style=new CKEDITOR.style(styleDefiniton),forms=contentForms[commandName];
forms.unshift(style);
editor.attachStyleStateChange(style,function(state){!editor.readOnly&&editor.getCommand(commandName).setState(state);
});
editor.addCommand(commandName,new CKEDITOR.styleCommand(style,{contentForms:forms}));
if(editor.ui.addButton){editor.ui.addButton(buttonName,{label:buttonLabel,command:commandName,toolbar:"basicstyles,"+(order+=10)});
}};
var contentForms={bold:["strong","b",["span",function(el){var fw=el.styles["font-weight"];
return fw=="bold"||+fw>=700;
}]],italic:["em","i",["span",function(el){return el.styles["font-style"]=="italic";
}]],underline:["u",["span",function(el){return el.styles["text-decoration"]=="underline";
}]],strike:["s","strike",["span",function(el){return el.styles["text-decoration"]=="line-through";
}]],subscript:["sub"],superscript:["sup"]},config=editor.config,lang=editor.lang.basicstyles;
addButtonCommand("Bold",lang.bold,"bold",config.coreStyles_bold);
addButtonCommand("Italic",lang.italic,"italic",config.coreStyles_italic);
addButtonCommand("Underline",lang.underline,"underline",config.coreStyles_underline);
addButtonCommand("Strike",lang.strike,"strike",config.coreStyles_strike);
addButtonCommand("Subscript",lang.subscript,"subscript",config.coreStyles_subscript);
addButtonCommand("Superscript",lang.superscript,"superscript",config.coreStyles_superscript);
editor.setKeystroke([[CKEDITOR.CTRL+66,"bold"],[CKEDITOR.CTRL+73,"italic"],[CKEDITOR.CTRL+85,"underline"]]);
}});
CKEDITOR.config.coreStyles_bold={element:"strong",overrides:"b"};
CKEDITOR.config.coreStyles_bold={element:"span",styles:{"font-weight":"bold"},overrides:["b","strong"]};
CKEDITOR.config.coreStyles_italic={element:"em",overrides:"i"};
CKEDITOR.config.coreStyles_italic={element:"span",styles:{"font-style":"italic"},overrides:"i"};
CKEDITOR.config.coreStyles_underline={element:"u"};
CKEDITOR.config.coreStyles_underline={element:"span",styles:{"text-decoration":"underline"},overrides:"u"};
CKEDITOR.config.coreStyles_strike={element:"s",overrides:"strike"};
CKEDITOR.config.coreStyles_strike={element:"span",styles:{"text-decoration":"line-through"},overrides:["s","strike","del"]};
CKEDITOR.config.coreStyles_subscript={element:"sub"};
CKEDITOR.config.coreStyles_superscript={element:"sup"};
"use strict";
(function(){CKEDITOR.plugins.add("clipboard",{requires:"dialog",lang:"en,en-au,en-gb,de,fr,es,pt-br",icons:"copy,copy-rtl,cut,cut-rtl,paste,paste-rtl",init:function(editor){var textificationFilter;
initClipboard(editor);
CKEDITOR.dialog.add("paste",CKEDITOR.getUrl(this.path+"dialogs/paste.js"));
if(CKEDITOR.ClipboardHelper){editor.on("paste",function(evt){var dataObj=evt.data;
var html=dataObj.dataValue||getClipboardContent();
if(html){dataObj.dataValue=html;
dataObj.pasteType=dataObj.type;
dataObj.type="html";
}},null,null,1);
}editor.on("paste",function(evt){var data=evt.data.dataValue,blockElements=CKEDITOR.dtd.$block;
if(data.indexOf("Apple-")>-1){data=data.replace(/<span class="Apple-converted-space">&nbsp;<\/span>/gi," ");
if(evt.data.type!="html"){data=data.replace(/<span class="Apple-tab-span"[^>]*>([^<]*)<\/span>/gi,function(all,spaces){return spaces.replace(/\t/g,"&nbsp;&nbsp; &nbsp;");
});
}if(data.indexOf('<br class="Apple-interchange-newline">')>-1){evt.data.startsWithEOL=1;
evt.data.preSniffing="html";
data=data.replace(/<br class="Apple-interchange-newline">/,"");
}data=data.replace(/(<[^>]+) class="Apple-[^"]*"/gi,"$1");
}if(data.match(/^<[^<]+cke_(editable|contents)/i)){var tmp,editable_wrapper,wrapper=new CKEDITOR.dom.element("div");
wrapper.setHtml(data);
while(wrapper.getChildCount()==1&&(tmp=wrapper.getFirst())&&tmp.type==CKEDITOR.NODE_ELEMENT&&(tmp.hasClass("cke_editable")||tmp.hasClass("cke_contents"))){wrapper=editable_wrapper=tmp;
}if(editable_wrapper){data=editable_wrapper.getHtml().replace(/<br>$/i,"");
}}if(CKEDITOR.env.ie){data=data.replace(/^&nbsp;(?: |\r\n)?<(\w+)/g,function(match,elementName){if(elementName.toLowerCase() in blockElements){evt.data.preSniffing="html";
return"<"+elementName;
}return match;
});
}else{if(CKEDITOR.env.webkit){data=data.replace(/<\/(\w+)><div><br><\/div>$/,function(match,elementName){if(elementName in blockElements){evt.data.endsWithEOL=1;
return"</"+elementName+">";
}return match;
});
}else{if(CKEDITOR.env.gecko){data=data.replace(/(\s)<br>$/,"$1");
}}}evt.data.dataValue=data;
},null,null,3);
editor.on("paste",function(evt){var dataObj=evt.data,type=dataObj.type,data=dataObj.dataValue,trueType,defaultType=editor.config.clipboard_defaultContentType||"html";
if(type=="html"||dataObj.preSniffing=="html"){trueType="html";
}else{trueType=recogniseContentType(data);
}if(trueType=="htmlifiedtext"){data=htmlifiedTextHtmlification(editor.config,data);
}else{if(type=="text"&&trueType=="html"){data=htmlTextification(editor.config,data,textificationFilter||(textificationFilter=getTextificationFilter(editor)));
}}if(dataObj.startsWithEOL){data='<br data-cke-eol="1">'+data;
}if(dataObj.endsWithEOL){data+='<br data-cke-eol="1">';
}if(type=="auto"){type=(trueType=="html"||defaultType=="html")?"html":"text";
}dataObj.type=type;
dataObj.dataValue=data;
delete dataObj.preSniffing;
delete dataObj.startsWithEOL;
delete dataObj.endsWithEOL;
},null,null,6);
editor.on("paste",function(evt){var data=evt.data;
editor.insertHtml(data.dataValue,data.type);
setTimeout(function(){editor.fire("afterPaste");
},0);
},null,null,1000);
editor.on("pasteDialog",function(evt){DocHandleError("clipboard/plugin.js - pasteDialog fired","DynDocCKEditor");
return;
setTimeout(function(){editor.openDialog("paste",evt.data);
},0);
});
}});
function preserveWhitespace(sHtmlFragment){var $fragment=$("<div>").html(sHtmlFragment);
var getTextNodes=function(element){var nodes=[];
DDCOMMON.domDfs(element,1,function(node){if(node.nodeType===Node.TEXT_NODE){nodes.push(node);
}});
return nodes;
};
var textNodes=getTextNodes($fragment[0]);
for(var node in textNodes){var text=textNodes[node].nodeValue;
if(text.charAt(0)==" "){text=text.replace(" ","\u00a0");
}if(text.length>1&&text.charAt(text.length-1)==" "){text=text.substring(0,text.length-1).concat("\u00a0");
}textNodes[node].nodeValue=text.replace(/([ ]{2,})/g,function(match){var spaces="";
for(var i=0;
i<match.length;
i++){if(i%2==0){spaces+="\u00a0";
}else{spaces+=" ";
}}return spaces;
});
}return $fragment.html();
}function getClipboardContent(){return(CKEDITOR.env.ie&&DDCOMMON.getIeVersionMajor()=="9")?CKEDITOR.ClipboardHelper.GetClipboard2(preserveWhitespace):CKEDITOR.ClipboardHelper.GetClipboard();
}function initClipboard(editor){var bookmarksBeforeContextMenu=null;
editor.on("instanceReady",function(){var insertFreeTextCmd=editor.getCommand(DDCMD_INSERTFREETEXT);
if(insertFreeTextCmd){insertFreeTextCmd.on("afterddinsertfreetext",setToolbarStates);
}var removeSectionCmd=editor.getCommand(DDCMD_REMOVEELEMENT);
if(removeSectionCmd){removeSectionCmd.on("afterddremovesection",setToolbarStates);
}});
var preventBeforePasteEvent=0,preventPasteEvent=0,inReadOnly=0,mainPasteEvent=CKEDITOR.env.ie?"beforepaste":"paste";
addListeners();
addButtonsCommands();
editor.getClipboardData=function(options,callback){var beforePasteNotCanceled=false,dataType="auto",dialogCommited=false;
if(!callback){callback=options;
options=null;
}editor.on("paste",onPaste,null,null,0);
editor.on("beforePaste",onBeforePaste,null,null,1000);
if(getClipboardDataDirectly()===false){editor.removeListener("paste",onPaste);
if(beforePasteNotCanceled&&editor.fire("pasteDialog",onDialogOpen)){editor.on("pasteDialogCommit",onDialogCommit);
editor.on("dialogHide",function(evt){evt.removeListener();
evt.data.removeListener("pasteDialogCommit",onDialogCommit);
setTimeout(function(){if(!dialogCommited){callback(null);
}},10);
});
}else{callback(null);
}}function onPaste(evt){evt.removeListener();
evt.cancel();
callback(evt.data);
}function onBeforePaste(evt){evt.removeListener();
beforePasteNotCanceled=true;
dataType=evt.data.type;
}function onDialogCommit(evt){evt.removeListener();
evt.cancel();
dialogCommited=true;
callback({type:dataType,dataValue:evt.data});
}function onDialogOpen(){this.customTitle=(options&&options.title);
}};
function addButtonsCommands(){addButtonCommand("Cut","cut",createCutCopyCmd("cut"),10,1);
addButtonCommand("Copy","copy",createCutCopyCmd("copy"),20,4);
addButtonCommand("Paste","paste",createPasteCmd(),30,8);
function addButtonCommand(buttonName,commandName,command,toolbarOrder,ctxMenuOrder){var lang=editor.lang.clipboard[commandName];
editor.addCommand(commandName,command);
editor.ui.addButton&&editor.ui.addButton(buttonName,{label:lang,command:commandName,toolbar:"clipboard,"+toolbarOrder});
if(editor.addMenuItems){editor.addMenuItem(commandName,{label:lang,command:commandName,group:"clipboard",order:ctxMenuOrder});
}}}function addListeners(){editor.on("key",onKey);
editor.on("contentDom",addListenersToEditable);
editor.on("selectionChange",function(evt){inReadOnly=evt.data.selection.getRanges()[0].checkReadOnly();
setToolbarStates();
});
if(editor.contextMenu){editor.contextMenu.addListener(function(element,selection){bookmarksBeforeContextMenu=selection.createBookmarks2();
var ranges=selection.getRanges();
inReadOnly=ranges.length?selection.getRanges()[0].checkReadOnly():false;
var states={cut:stateFromNamedCommand("Cut"),copy:stateFromNamedCommand("Copy"),paste:stateFromNamedCommand("Paste")};
if(editor.getCommand("pastetext")){states.pastetext=stateFromNamedCommand("PasteText");
}return states;
});
editor.contextMenu.onHide=CKEDITOR.tools.override(editor.contextMenu.onHide||(function(){}),function(fnOrig){return function(){var selection=editor.getSelection();
selection&&bookmarksBeforeContextMenu&&selection.selectBookmarks(bookmarksBeforeContextMenu);
bookmarksBeforeContextMenu=null;
if(fnOrig&&fnOrig.apply){fnOrig.apply(this,arguments);
}};
});
}}function addListenersToEditable(){var editable=editor.editable();
editable.on(mainPasteEvent,function(evt){if(CKEDITOR.env.ie&&preventBeforePasteEvent){return;
}pasteDataFromClipboard(evt);
});
CKEDITOR.env.ie&&editable.on("paste",function(evt){if(preventPasteEvent){return;
}preventPasteEventNow();
evt.data.preventDefault();
pasteDataFromClipboard(evt);
if(false&&!execIECommand("paste")){editor.openDialog("paste");
}});
if(CKEDITOR.env.ie){editable.on("contextmenu",preventBeforePasteEventNow,null,null,0);
editable.on("beforepaste",function(evt){if(evt.data&&!evt.data.$.ctrlKey){preventBeforePasteEventNow();
}},null,null,0);
}editable.on("beforecut",function(){!preventBeforePasteEvent&&fixCut(editor);
});
var mouseupTimeout;
editable.attachListener(CKEDITOR.env.ie?editable:editor.document.getDocumentElement(),"mouseup",function(){mouseupTimeout=setTimeout(function(){setToolbarStates();
},0);
});
editor.on("destroy",function(){clearTimeout(mouseupTimeout);
});
editable.on("keyup",setToolbarStates);
}function createCutCopyCmd(type){return{type:type,canUndo:type=="cut",startDisabled:true,editorFocus:false,exec:function(data){function tryToCutCopy(type){if(CKEDITOR.env.ie){return execIECommand(type);
}try{return editor.document.$.execCommand(type,false,null);
}catch(e){return false;
}}if(bookmarksBeforeContextMenu){var selection=editor.getSelection(true);
selection&&selection.selectBookmarks(bookmarksBeforeContextMenu);
bookmarksBeforeContextMenu=null;
}this.type=="cut"&&fixCut();
var success=tryToCutCopy(this.type);
if(!success){alert(editor.lang.clipboard[this.type+"Error"]);
}if(type==="cut"){setToolbarStates();
}return success;
}};
}function createPasteCmd(){return{canUndo:false,async:true,exec:function(editor,data){var fire=function(data,withBeforePaste){data&&firePasteEvents(data.type,data.dataValue,!!withBeforePaste);
editor.fire("afterCommandExec",{name:"paste",command:cmd,returnValue:!!data});
},cmd=this;
if(typeof data=="string"){fire({type:"auto",dataValue:data},1);
}else{editor.getClipboardData(fire);
}}};
}function preventPasteEventNow(){preventPasteEvent=1;
setTimeout(function(){preventPasteEvent=0;
},100);
}function preventBeforePasteEventNow(){preventBeforePasteEvent=1;
setTimeout(function(){preventBeforePasteEvent=0;
},10);
}function execIECommand(command){var doc=editor.document,body=doc.getBody(),enabled=false,onExec=function(){enabled=true;
};
body.on(command,onExec);
(CKEDITOR.env.version>7?doc.$:doc.$.selection.createRange())["execCommand"](command);
body.removeListener(command,onExec);
return enabled;
}function firePasteEvents(type,data,withBeforePaste){var eventData={type:type};
if(withBeforePaste){if(!editor.fire("beforePaste",eventData)){return false;
}}if(!data){return false;
}eventData.dataValue=data;
return editor.fire("paste",eventData);
}function fixCut(){if(!CKEDITOR.env.ie||CKEDITOR.env.quirks){return;
}var sel=editor.getSelection(),control,range,dummy;
if((sel.getType()==CKEDITOR.SELECTION_ELEMENT)&&(control=sel.getSelectedElement())){range=sel.getRanges()[0];
dummy=editor.document.createText("");
dummy.insertBefore(control);
range.setStartBefore(dummy);
range.setEndAfter(control);
sel.selectRanges([range]);
setTimeout(function(){if(control.getParent()){dummy.remove();
sel.selectElement(control);
}},0);
}var ranges=sel.getRanges();
if(null==ranges||0===ranges.length){return;
}var boundaryNodes=ranges[0].getBoundaryNodes();
if(ranges[0].endContainer.type===CKEDITOR.NODE_ELEMENT){var endContClassName=ranges[0].endContainer.$.className;
if(DDCOMMON.hasClassName(endContClassName,g_sCLASS_SECTION)||DDCOMMON.hasClassName(endContClassName,g_sCLASS_SUBSECTION)){var range=ranges[0];
var dummy=editor.document.createText("");
dummy.insertAfter(boundaryNodes.endNode);
range.setEndBefore(dummy);
sel.selectRanges([range]);
}}}function getClipboardDataByPastebin(evt,callback){var doc=editor.document,editable=editor.editable(),cancel=function(evt){evt.cancel();
},ff3x=CKEDITOR.env.gecko&&CKEDITOR.env.version<=10902;
var usePastebin=!CKEDITOR.ClipboardHelper;
if(doc.getById("cke_pastebin")){return;
}var sel=editor.getSelection();
var bms=sel.createBookmarks();
var pastebin=new CKEDITOR.dom.element(editable.is("body")&&!(CKEDITOR.env.ie||CKEDITOR.env.opera)?"body":"div",doc);
pastebin.setAttribute("id","cke_pastebin");
if(usePastebin){if(CKEDITOR.env.opera){pastebin.appendBogus();
}}var containerOffset=0,win=doc.getWindow();
if(ff3x){pastebin.insertAfter(bms[0].startNode);
pastebin.setStyle("display","inline");
}else{if(CKEDITOR.env.webkit){editable.append(pastebin);
pastebin.addClass("cke_editable");
containerOffset=(editable.is("body")?editable:CKEDITOR.dom.element.get(pastebin.$.offsetParent)).getDocumentPosition().y;
}else{editable.getAscendant(CKEDITOR.env.ie||CKEDITOR.env.opera?"body":"html",1).append(pastebin);
}pastebin.setStyles({position:"absolute",top:(win.getScrollPosition().y-containerOffset+10)+"px",width:"1px",height:Math.max(1,win.getViewPaneSize().height-20)+"px",overflow:"hidden",margin:0,padding:0});
}var isEditingHost=pastebin.getParent().isReadOnly();
if(isEditingHost){pastebin.setOpacity(0);
pastebin.setAttribute("contenteditable",true);
}else{pastebin.setStyle(editor.config.contentsLangDirection=="ltr"?"left":"right","-1000px");
}editor.on("selectionChange",cancel,null,null,0);
isEditingHost&&pastebin.focus();
var range=new CKEDITOR.dom.range(pastebin);
range.selectNodeContents(pastebin);
var selPastebin=range.select();
if(usePastebin){if(CKEDITOR.env.ie){var blurListener=editable.once("blur",function(evt){editor.lockSelection(selPastebin);
});
}}var scrollTop=CKEDITOR.document.getWindow().getScrollPosition().y;
var bSpellCheckWasEnabled=editor.isSpellCheckEnabled&&editor.isSpellCheckEnabled();
if(editor.disableSpellCheck){editor.disableSpellCheck();
}editor.fire("lockSnapshot");
setTimeout(function(){try{if(CKEDITOR.env.webkit||CKEDITOR.env.opera){CKEDITOR.document[CKEDITOR.env.webkit?"getBody":"getDocumentElement"]().$.scrollTop=scrollTop;
}blurListener&&blurListener.removeListener();
if(CKEDITOR.env.ie){editable.focus();
}sel.selectBookmarks(bms);
pastebin.remove();
if(usePastebin){var bogusSpan;
if(CKEDITOR.env.webkit&&(bogusSpan=pastebin.getFirst())&&(bogusSpan.is&&bogusSpan.hasClass("Apple-style-span"))){pastebin=bogusSpan;
}}editor.removeListener("selectionChange",cancel);
if(usePastebin){callback(pastebin.getHtml());
}else{try{var sText=getClipboardContent();
callback(sText);
}catch(e){DocHandleError("clipboard/plugin.js, GetClipboard failed:  "+(e.message||e),"DynDocCKEditor");
}}}finally{editor.fire("unlockSnapshot");
if(bSpellCheckWasEnabled&&editor.enableSpellCheck){editor.enableSpellCheck(true);
}}},0);
}function getClipboardDataDirectly(){if(CKEDITOR.env.ie){editor.focus();
preventPasteEventNow();
var focusManager=editor.focusManager;
focusManager.lock();
if(editor.editable().fire(mainPasteEvent)&&!execIECommand("paste")){focusManager.unlock();
return false;
}focusManager.unlock();
}else{try{if(editor.editable().fire(mainPasteEvent)&&!editor.document.$.execCommand("Paste",false,null)){throw 0;
}}catch(e){return false;
}}return true;
}function onKey(event){if(editor.mode!="wysiwyg"){return;
}switch(event.data.keyCode){case CKEDITOR.CTRL+86:case CKEDITOR.SHIFT+45:editor.fire("hotKeyPaste");
var editable=editor.editable();
preventPasteEventNow();
if(event.data.keyCode===CKEDITOR.SHIFT+45){var html=getClipboardContent();
if(html){var cancel=function(evt){evt.data.preventDefault();
};
editor.editable().on("paste",cancel,null,null,0);
setTimeout(function(){editor.editable().removeListener("paste",cancel);
},0);
firePasteEvents("html",html);
}}!CKEDITOR.env.ie&&editable.fire("beforepaste");
if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.version<10900){editable.fire("paste");
}return;
case CKEDITOR.CTRL+88:case CKEDITOR.SHIFT+46:editor.fire("saveSnapshot");
setTimeout(function(){editor.fire("saveSnapshot");
},0);
}}function pasteDataFromClipboard(evt){var eventData={type:"auto"};
var beforePasteNotCanceled=editor.fire("beforePaste",eventData);
getClipboardDataByPastebin(evt,function(data){data=data.replace(/<span[^>]+data-cke-bookmark[^<]*?<\/span>/ig,"");
beforePasteNotCanceled&&firePasteEvents(eventData.type,data,0,1);
});
}function setToolbarStates(){if(editor.mode!="wysiwyg"){return;
}var pasteState=stateFromNamedCommand("Paste");
editor.getCommand("cut").setState(stateFromNamedCommand("Cut"));
editor.getCommand("copy").setState(stateFromNamedCommand("Copy"));
editor.getCommand("paste").setState(pasteState);
editor.fire("pasteState",pasteState);
}function stateFromNamedCommand(command){var retval;
if(inReadOnly&&command in {Paste:1,Cut:1,PasteText:1}){return CKEDITOR.TRISTATE_DISABLED;
}if(command=="Paste"||command=="PasteText"){CKEDITOR.env.ie&&(preventBeforePasteEvent=1);
try{retval=editor.document.$.queryCommandEnabled("paste")||CKEDITOR.env.webkit;
}catch(er){}preventBeforePasteEvent=0;
}else{var sel=editor.getSelection(),ranges=sel.getRanges();
retval=sel.getType()!=CKEDITOR.SELECTION_NONE&&!(ranges.length==1&&ranges[0].collapsed);
}return retval?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED;
}}function recogniseContentType(data){if(CKEDITOR.env.webkit){if(!data.match(/^[^<]*$/g)&&!data.match(/^(<div><br( ?\/)?><\/div>|<div>[^<]*<\/div>)*$/gi)){return"html";
}}else{if(CKEDITOR.env.ie){if(!data.match(/^([^<]|<br( ?\/)?>)*$/gi)&&!data.match(/^(<p>([^<]|<br( ?\/)?>)*<\/p>|(\r\n))*$/gi)){return"html";
}}else{if(CKEDITOR.env.gecko||CKEDITOR.env.opera){if(!data.match(/^([^<]|<br( ?\/)?>)*$/gi)){return"html";
}}else{return"html";
}}}return"htmlifiedtext";
}function htmlifiedTextHtmlification(config,data){function repeatParagraphs(repeats){return CKEDITOR.tools.repeat("</p><p>",~~(repeats/2))+(repeats%2==1?"<br>":"");
}data=data.replace(/\s+/g," ").replace(/> +</g,"><").replace(/<br ?\/>/gi,"<br>");
data=data.replace(/<\/?[A-Z]+>/g,function(match){return match.toLowerCase();
});
if(data.match(/^[^<]$/)){return data;
}if(CKEDITOR.env.webkit&&data.indexOf("<div>")>-1){data=data.replace(/^(<div>(<br>|)<\/div>)(?!$|(<div>(<br>|)<\/div>))/g,"<br>").replace(/^(<div>(<br>|)<\/div>){2}(?!$)/g,"<div></div>");
if(data.match(/<div>(<br>|)<\/div>/)){data="<p>"+data.replace(/(<div>(<br>|)<\/div>)+/g,function(match){return repeatParagraphs(match.split("</div><div>").length+1);
})+"</p>";
}data=data.replace(/<\/div><div>/g,"<br>");
data=data.replace(/<\/?div>/g,"");
}if((CKEDITOR.env.gecko||CKEDITOR.env.opera)&&config.enterMode!=CKEDITOR.ENTER_BR){if(CKEDITOR.env.gecko){data=data.replace(/^<br><br>$/,"<br>");
}if(data.indexOf("<br><br>")>-1){data="<p>"+data.replace(/(<br>){2,}/g,function(match){return repeatParagraphs(match.length/4);
})+"</p>";
}}return switchEnterMode(config,data);
}function getTextificationFilter(editor){var filter=new CKEDITOR.htmlParser.filter();
var replaceWithParaIf={blockquote:1,dl:1,fieldset:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,ol:1,p:1,table:1,ul:1},stripInlineIf=CKEDITOR.tools.extend({br:0},CKEDITOR.dtd.$inline),allowedIf={p:1,br:1,"cke:br":1},knownIf=CKEDITOR.dtd,removeIf=CKEDITOR.tools.extend({area:1,basefont:1,embed:1,iframe:1,map:1,object:1,param:1},CKEDITOR.dtd.$nonBodyContent,CKEDITOR.dtd.$cdata);
var flattenTableCell=function(element){delete element.name;
element.add(new CKEDITOR.htmlParser.text(" "));
},squashHeader=function(element){var next=element,br,el;
while((next=next.next)&&next.name&&next.name.match(/^h\d$/)){br=new CKEDITOR.htmlParser.element("cke:br");
br.isEmpty=true;
element.add(br);
while((el=next.children.shift())){element.add(el);
}}};
filter.addRules({elements:{h1:squashHeader,h2:squashHeader,h3:squashHeader,h4:squashHeader,h5:squashHeader,h6:squashHeader,img:function(element){var alt=CKEDITOR.tools.trim(element.attributes.alt||""),txt=" ";
if(alt&&!alt.match(/(^http|\.(jpe?g|gif|png))/i)){txt=" ["+alt+"] ";
}return new CKEDITOR.htmlParser.text(txt);
},td:flattenTableCell,th:flattenTableCell,$:function(element){var initialName=element.name,br;
if(removeIf[initialName]){return false;
}delete element.attributes;
if(initialName=="br"){return element;
}if(replaceWithParaIf[initialName]){element.name="p";
}else{if(stripInlineIf[initialName]){delete element.name;
}else{if(knownIf[initialName]){br=new CKEDITOR.htmlParser.element("cke:br");
br.isEmpty=true;
if(CKEDITOR.dtd.$empty[initialName]){return br;
}element.add(br,0);
br=br.clone();
br.isEmpty=true;
element.add(br);
delete element.name;
}}}if(!allowedIf[element.name]){delete element.name;
}return element;
}}});
return filter;
}function htmlTextification(config,data,filter){var fragment=new CKEDITOR.htmlParser.fragment.fromHtml(data),writer=new CKEDITOR.htmlParser.basicWriter();
fragment.writeHtml(writer,filter);
data=writer.getHtml();
data=data.replace(/\s*(<\/?[a-z:]+ ?\/?>)\s*/g,"$1").replace(/(<cke:br \/>){2,}/g,"<cke:br />").replace(/(<cke:br \/>)(<\/?p>|<br \/>)/g,"$2").replace(/(<\/?p>|<br \/>)(<cke:br \/>)/g,"$1").replace(/<(cke:)?br( \/)?>/g,"<br>").replace(/<p><\/p>/g,"");
var nested=0;
data=data.replace(/<\/?p>/g,function(match){if(match=="<p>"){if(++nested>1){return"</p><p>";
}}else{if(--nested>0){return"</p><p>";
}}return match;
}).replace(/<p><\/p>/g,"");
return switchEnterMode(config,data);
}function switchEnterMode(config,data){if(config.enterMode==CKEDITOR.ENTER_BR){data=data.replace(/(<\/p><p>)+/g,function(match){return CKEDITOR.tools.repeat("<br>",match.length/7*2);
}).replace(/<\/?p>/g,"");
}else{if(config.enterMode==CKEDITOR.ENTER_DIV){data=data.replace(/<(\/)?p>/g,"<$1div>");
}}return data;
}})();
CKEDITOR.plugins.add("dialogui",{onLoad:function(){var initPrivateObject=function(elementDefinition){this._||(this._={});
this._["default"]=this._.initValue=elementDefinition["default"]||"";
this._.required=elementDefinition.required||false;
var args=[this._];
for(var i=1;
i<arguments.length;
i++){args.push(arguments[i]);
}args.push(true);
CKEDITOR.tools.extend.apply(CKEDITOR.tools,args);
return this._;
},textBuilder={build:function(dialog,elementDefinition,output){return new CKEDITOR.ui.dialog.textInput(dialog,elementDefinition,output);
}},commonBuilder={build:function(dialog,elementDefinition,output){return new CKEDITOR.ui.dialog[elementDefinition.type](dialog,elementDefinition,output);
}},containerBuilder={build:function(dialog,elementDefinition,output){var children=elementDefinition.children,child,childHtmlList=[],childObjList=[];
for(var i=0;
(i<children.length&&(child=children[i]));
i++){var childHtml=[];
childHtmlList.push(childHtml);
childObjList.push(CKEDITOR.dialog._.uiElementBuilders[child.type].build(dialog,child,childHtml));
}return new CKEDITOR.ui.dialog[elementDefinition.type](dialog,childObjList,childHtmlList,output,elementDefinition);
}},commonPrototype={isChanged:function(){return this.getValue()!=this.getInitValue();
},reset:function(noChangeEvent){this.setValue(this.getInitValue(),noChangeEvent);
},setInitValue:function(){this._.initValue=this.getValue();
},resetInitValue:function(){this._.initValue=this._["default"];
},getInitValue:function(){return this._.initValue;
}},commonEventProcessors=CKEDITOR.tools.extend({},CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors,{onChange:function(dialog,func){if(!this._.domOnChangeRegistered){dialog.on("load",function(){this.getInputElement().on("change",function(){if(!dialog.parts.dialog.isVisible()){return;
}this.fire("change",{value:this.getValue()});
},this);
},this);
this._.domOnChangeRegistered=true;
}this.on("change",func);
}},true),eventRegex=/^on([A-Z]\w+)/,cleanInnerDefinition=function(def){for(var i in def){if(eventRegex.test(i)||i=="title"||i=="type"){delete def[i];
}}return def;
};
CKEDITOR.tools.extend(CKEDITOR.ui.dialog,{labeledElement:function(dialog,elementDefinition,htmlList,contentHtml){if(arguments.length<4){return;
}var _=initPrivateObject.call(this,elementDefinition);
_.labelId=CKEDITOR.tools.getNextId()+"_label";
var children=this._.children=[];
var innerHTML=function(){var html=[],requiredClass=elementDefinition.required?" cke_required":"";
if(elementDefinition.labelLayout!="horizontal"){html.push('<label class="cke_dialog_ui_labeled_label'+requiredClass+'" ',' id="'+_.labelId+'"',(_.inputId?' for="'+_.inputId+'"':""),(elementDefinition.labelStyle?' style="'+elementDefinition.labelStyle+'"':"")+">",elementDefinition.label,"</label>",'<div class="cke_dialog_ui_labeled_content"'+(elementDefinition.controlStyle?' style="'+elementDefinition.controlStyle+'"':"")+' role="presentation">',contentHtml.call(this,dialog,elementDefinition),"</div>");
}else{var hboxDefinition={type:"hbox",widths:elementDefinition.widths,padding:0,children:[{type:"html",html:'<label class="cke_dialog_ui_labeled_label'+requiredClass+'" id="'+_.labelId+'" for="'+_.inputId+'"'+(elementDefinition.labelStyle?' style="'+elementDefinition.labelStyle+'"':"")+">"+CKEDITOR.tools.htmlEncode(elementDefinition.label)+"</span>"},{type:"html",html:'<span class="cke_dialog_ui_labeled_content"'+(elementDefinition.controlStyle?' style="'+elementDefinition.controlStyle+'"':"")+">"+contentHtml.call(this,dialog,elementDefinition)+"</span>"}]};
CKEDITOR.dialog._.uiElementBuilders.hbox.build(dialog,hboxDefinition,html);
}return html.join("");
};
CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition,htmlList,"div",null,{role:"presentation"},innerHTML);
},textInput:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}initPrivateObject.call(this,elementDefinition);
var domId=this._.inputId=CKEDITOR.tools.getNextId()+"_textInput",attributes={"class":"cke_dialog_ui_input_"+elementDefinition.type,id:domId,type:elementDefinition.type},i;
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}if(elementDefinition.maxLength){attributes.maxlength=elementDefinition.maxLength;
}if(elementDefinition.size){attributes.size=elementDefinition.size;
}if(elementDefinition.inputStyle){attributes.style=elementDefinition.inputStyle;
}var me=this,keyPressedOnMe=false;
dialog.on("load",function(){me.getInputElement().on("keydown",function(evt){if(evt.data.getKeystroke()==13){keyPressedOnMe=true;
}});
me.getInputElement().on("keyup",function(evt){if(evt.data.getKeystroke()==13&&keyPressedOnMe){dialog.getButton("ok")&&setTimeout(function(){dialog.getButton("ok").click();
},0);
keyPressedOnMe=false;
}},null,null,1000);
});
var innerHTML=function(){var html=['<div class="cke_dialog_ui_input_',elementDefinition.type,'" role="presentation"'];
if(elementDefinition.width){html.push('style="width:'+elementDefinition.width+'" ');
}html.push("><input ");
attributes["aria-labelledby"]=this._.labelId;
this._.required&&(attributes["aria-required"]=this._.required);
for(var i in attributes){html.push(i+'="'+attributes[i]+'" ');
}html.push(" /></div>");
return html.join("");
};
CKEDITOR.ui.dialog.labeledElement.call(this,dialog,elementDefinition,htmlList,innerHTML);
},textarea:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}initPrivateObject.call(this,elementDefinition);
var me=this,domId=this._.inputId=CKEDITOR.tools.getNextId()+"_textarea",attributes={};
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}attributes.rows=elementDefinition.rows||5;
attributes.cols=elementDefinition.cols||20;
attributes["class"]="cke_dialog_ui_input_textarea "+(elementDefinition["class"]||"");
if(typeof elementDefinition.inputStyle!="undefined"){attributes.style=elementDefinition.inputStyle;
}if(elementDefinition.dir){attributes.dir=elementDefinition.dir;
}var innerHTML=function(){attributes["aria-labelledby"]=this._.labelId;
this._.required&&(attributes["aria-required"]=this._.required);
var html=['<div class="cke_dialog_ui_input_textarea" role="presentation"><textarea id="',domId,'" '];
for(var i in attributes){html.push(i+'="'+CKEDITOR.tools.htmlEncode(attributes[i])+'" ');
}html.push(">",CKEDITOR.tools.htmlEncode(me._["default"]),"</textarea></div>");
return html.join("");
};
CKEDITOR.ui.dialog.labeledElement.call(this,dialog,elementDefinition,htmlList,innerHTML);
},checkbox:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}var _=initPrivateObject.call(this,elementDefinition,{"default":!!elementDefinition["default"]});
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}var innerHTML=function(){var myDefinition=CKEDITOR.tools.extend({},elementDefinition,{id:elementDefinition.id?elementDefinition.id+"_checkbox":CKEDITOR.tools.getNextId()+"_checkbox"},true),html=[];
var labelId=CKEDITOR.tools.getNextId()+"_label";
var attributes={"class":"cke_dialog_ui_checkbox_input",type:"checkbox","aria-labelledby":labelId};
cleanInnerDefinition(myDefinition);
if(elementDefinition["default"]){attributes.checked="checked";
}if(typeof myDefinition.inputStyle!="undefined"){myDefinition.style=myDefinition.inputStyle;
}_.checkbox=new CKEDITOR.ui.dialog.uiElement(dialog,myDefinition,html,"input",null,attributes);
html.push(' <label id="',labelId,'" for="',attributes.id,'"'+(elementDefinition.labelStyle?' style="'+elementDefinition.labelStyle+'"':"")+">",CKEDITOR.tools.htmlEncode(elementDefinition.label),"</label>");
return html.join("");
};
CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition,htmlList,"span",null,null,innerHTML);
},radio:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}initPrivateObject.call(this,elementDefinition);
if(!this._["default"]){this._["default"]=this._.initValue=elementDefinition.items[0][1];
}if(elementDefinition.validate){this.validate=elementDefinition.valdiate;
}var children=[],me=this;
var innerHTML=function(){var inputHtmlList=[],html=[],commonAttributes={"class":"cke_dialog_ui_radio_item","aria-labelledby":this._.labelId},commonName=elementDefinition.id?elementDefinition.id+"_radio":CKEDITOR.tools.getNextId()+"_radio";
for(var i=0;
i<elementDefinition.items.length;
i++){var item=elementDefinition.items[i],title=item[2]!==undefined?item[2]:item[0],value=item[1]!==undefined?item[1]:item[0],inputId=CKEDITOR.tools.getNextId()+"_radio_input",labelId=inputId+"_label",inputDefinition=CKEDITOR.tools.extend({},elementDefinition,{id:inputId,title:null,type:null},true),labelDefinition=CKEDITOR.tools.extend({},inputDefinition,{title:title},true),inputAttributes={type:"radio","class":"cke_dialog_ui_radio_input",name:commonName,value:value,"aria-labelledby":labelId},inputHtml=[];
if(me._["default"]==value){inputAttributes.checked="checked";
}cleanInnerDefinition(inputDefinition);
cleanInnerDefinition(labelDefinition);
if(typeof inputDefinition.inputStyle!="undefined"){inputDefinition.style=inputDefinition.inputStyle;
}children.push(new CKEDITOR.ui.dialog.uiElement(dialog,inputDefinition,inputHtml,"input",null,inputAttributes));
inputHtml.push(" ");
new CKEDITOR.ui.dialog.uiElement(dialog,labelDefinition,inputHtml,"label",null,{id:labelId,"for":inputAttributes.id},item[0]);
inputHtmlList.push(inputHtml.join(""));
}new CKEDITOR.ui.dialog.hbox(dialog,children,inputHtmlList,html);
return html.join("");
};
CKEDITOR.ui.dialog.labeledElement.call(this,dialog,elementDefinition,htmlList,innerHTML);
this._.children=children;
},button:function(dialog,elementDefinition,htmlList){if(!arguments.length){return;
}if(typeof elementDefinition=="function"){elementDefinition=elementDefinition(dialog.getParentEditor());
}initPrivateObject.call(this,elementDefinition,{disabled:elementDefinition.disabled||false});
CKEDITOR.event.implementOn(this);
var me=this;
dialog.on("load",function(eventInfo){var element=this.getElement();
(function(){element.on("click",me.click,me);
element.on("keydown",function(evt){if(evt.data.getKeystroke() in {32:1}){me.click();
evt.data.preventDefault();
}});
})();
element.unselectable();
},this);
var outerDefinition=CKEDITOR.tools.extend({},elementDefinition);
delete outerDefinition.style;
var labelId=CKEDITOR.tools.getNextId()+"_label";
CKEDITOR.ui.dialog.uiElement.call(this,dialog,outerDefinition,htmlList,"a",null,{style:elementDefinition.style,href:"javascript:void(0)",title:elementDefinition.label,hidefocus:"true","class":elementDefinition["class"],role:"button","aria-labelledby":labelId},'<span id="'+labelId+'" class="cke_dialog_ui_button">'+CKEDITOR.tools.htmlEncode(elementDefinition.label)+"</span>");
},select:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}var _=initPrivateObject.call(this,elementDefinition);
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}_.inputId=CKEDITOR.tools.getNextId()+"_select";
var innerHTML=function(){var myDefinition=CKEDITOR.tools.extend({},elementDefinition,{id:elementDefinition.id?elementDefinition.id+"_select":CKEDITOR.tools.getNextId()+"_select"},true),html=[],innerHTML=[],attributes={id:_.inputId,"class":"cke_dialog_ui_input_select","aria-labelledby":this._.labelId};
html.push('<div class="cke_dialog_ui_input_',elementDefinition.type,'" role="presentation"');
if(elementDefinition.width){html.push('style="width:'+elementDefinition.width+'" ');
}html.push(">");
if(elementDefinition.size!=undefined){attributes.size=elementDefinition.size;
}if(elementDefinition.multiple!=undefined){attributes.multiple=elementDefinition.multiple;
}cleanInnerDefinition(myDefinition);
for(var i=0,item;
i<elementDefinition.items.length&&(item=elementDefinition.items[i]);
i++){innerHTML.push('<option value="',CKEDITOR.tools.htmlEncode(item[1]!==undefined?item[1]:item[0]).replace(/"/g,"&quot;"),'" /> ',CKEDITOR.tools.htmlEncode(item[0]));
}if(typeof myDefinition.inputStyle!="undefined"){myDefinition.style=myDefinition.inputStyle;
}_.select=new CKEDITOR.ui.dialog.uiElement(dialog,myDefinition,html,"select",null,attributes,innerHTML.join(""));
html.push("</div>");
return html.join("");
};
CKEDITOR.ui.dialog.labeledElement.call(this,dialog,elementDefinition,htmlList,innerHTML);
},file:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}if(elementDefinition["default"]===undefined){elementDefinition["default"]="";
}var _=CKEDITOR.tools.extend(initPrivateObject.call(this,elementDefinition),{definition:elementDefinition,buttons:[]});
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}var innerHTML=function(){_.frameId=CKEDITOR.tools.getNextId()+"_fileInput";
var isCustomDomain=CKEDITOR.env.isCustomDomain();
var html=['<iframe frameborder="0" allowtransparency="0" class="cke_dialog_ui_input_file" role="presentation" id="',_.frameId,'" title="',elementDefinition.label,'" src="javascript:void('];
html.push(isCustomDomain?"(function(){document.open();document.domain='"+document.domain+"';document.close();})()":"0");
html.push(')"></iframe>');
return html.join("");
};
dialog.on("load",function(){var iframe=CKEDITOR.document.getById(_.frameId),contentDiv=iframe.getParent();
contentDiv.addClass("cke_dialog_ui_input_file");
});
CKEDITOR.ui.dialog.labeledElement.call(this,dialog,elementDefinition,htmlList,innerHTML);
},fileButton:function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}var _=initPrivateObject.call(this,elementDefinition),me=this;
if(elementDefinition.validate){this.validate=elementDefinition.validate;
}var myDefinition=CKEDITOR.tools.extend({},elementDefinition);
var onClick=myDefinition.onClick;
myDefinition.className=(myDefinition.className?myDefinition.className+" ":"")+"cke_dialog_ui_button";
myDefinition.onClick=function(evt){var target=elementDefinition["for"];
if(!onClick||onClick.call(this,evt)!==false){dialog.getContentElement(target[0],target[1]).submit();
this.disable();
}};
dialog.on("load",function(){dialog.getContentElement(elementDefinition["for"][0],elementDefinition["for"][1])._.buttons.push(me);
});
CKEDITOR.ui.dialog.button.call(this,dialog,myDefinition,htmlList);
},html:(function(){var myHtmlRe=/^\s*<[\w:]+\s+([^>]*)?>/,theirHtmlRe=/^(\s*<[\w:]+(?:\s+[^>]*)?)((?:.|\r|\n)+)$/,emptyTagRe=/\/$/;
return function(dialog,elementDefinition,htmlList){if(arguments.length<3){return;
}var myHtmlList=[],myHtml,theirHtml=elementDefinition.html,myMatch,theirMatch;
if(theirHtml.charAt(0)!="<"){theirHtml="<span>"+theirHtml+"</span>";
}var focus=elementDefinition.focus;
if(focus){var oldFocus=this.focus;
this.focus=function(){(typeof focus=="function"?focus:oldFocus).call(this);
this.fire("focus");
};
if(elementDefinition.isFocusable){var oldIsFocusable=this.isFocusable;
this.isFocusable=oldIsFocusable;
}this.keyboardFocusable=true;
}CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition,myHtmlList,"span",null,null,"");
myHtml=myHtmlList.join("");
myMatch=myHtml.match(myHtmlRe);
theirMatch=theirHtml.match(theirHtmlRe)||["","",""];
if(emptyTagRe.test(theirMatch[1])){theirMatch[1]=theirMatch[1].slice(0,-1);
theirMatch[2]="/"+theirMatch[2];
}htmlList.push([theirMatch[1]," ",myMatch[1]||"",theirMatch[2]].join(""));
};
})(),fieldset:function(dialog,childObjList,childHtmlList,htmlList,elementDefinition){var legendLabel=elementDefinition.label;
var innerHTML=function(){var html=[];
legendLabel&&html.push("<legend"+(elementDefinition.labelStyle?' style="'+elementDefinition.labelStyle+'"':"")+">"+legendLabel+"</legend>");
for(var i=0;
i<childHtmlList.length;
i++){html.push(childHtmlList[i]);
}return html.join("");
};
this._={children:childObjList};
CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition,htmlList,"fieldset",null,null,innerHTML);
}},true);
CKEDITOR.ui.dialog.html.prototype=new CKEDITOR.ui.dialog.uiElement;
CKEDITOR.ui.dialog.labeledElement.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{setLabel:function(label){var node=CKEDITOR.document.getById(this._.labelId);
if(node.getChildCount()<1){(new CKEDITOR.dom.text(label,CKEDITOR.document)).appendTo(node);
}else{node.getChild(0).$.nodeValue=label;
}return this;
},getLabel:function(){var node=CKEDITOR.document.getById(this._.labelId);
if(!node||node.getChildCount()<1){return"";
}else{return node.getChild(0).getText();
}},eventProcessors:commonEventProcessors},true);
CKEDITOR.ui.dialog.button.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{click:function(){if(!this._.disabled){return this.fire("click",{dialog:this._.dialog});
}return false;
},enable:function(){this._.disabled=false;
var element=this.getElement();
element&&element.removeClass("cke_disabled");
},disable:function(){this._.disabled=true;
this.getElement().addClass("cke_disabled");
},isVisible:function(){return this.getElement().getFirst().isVisible();
},isEnabled:function(){return !this._.disabled;
},eventProcessors:CKEDITOR.tools.extend({},CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors,{onClick:function(dialog,func){this.on("click",function(){func.apply(this,arguments);
});
}},true),accessKeyUp:function(){this.click();
},accessKeyDown:function(){this.focus();
},keyboardFocusable:true},true);
CKEDITOR.ui.dialog.textInput.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,{getInputElement:function(){return CKEDITOR.document.getById(this._.inputId);
},focus:function(){var me=this.selectParentTab();
setTimeout(function(){var element=me.getInputElement();
element&&element.$.focus();
},0);
},select:function(){var me=this.selectParentTab();
setTimeout(function(){var e=me.getInputElement();
if(e){e.$.focus();
e.$.select();
}},0);
},accessKeyUp:function(){this.select();
},setValue:function(value){!value&&(value="");
return CKEDITOR.ui.dialog.uiElement.prototype.setValue.apply(this,arguments);
},keyboardFocusable:true},commonPrototype,true);
CKEDITOR.ui.dialog.textarea.prototype=new CKEDITOR.ui.dialog.textInput();
CKEDITOR.ui.dialog.select.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,{getInputElement:function(){return this._.select.getElement();
},add:function(label,value,index){var option=new CKEDITOR.dom.element("option",this.getDialog().getParentEditor().document),selectElement=this.getInputElement().$;
option.$.text=label;
option.$.value=(value===undefined||value===null)?label:value;
if(index===undefined||index===null){if(CKEDITOR.env.ie){selectElement.add(option.$);
}else{selectElement.add(option.$,null);
}}else{selectElement.add(option.$,index);
}return this;
},remove:function(index){var selectElement=this.getInputElement().$;
selectElement.remove(index);
return this;
},clear:function(){var selectElement=this.getInputElement().$;
while(selectElement.length>0){selectElement.remove(0);
}return this;
},keyboardFocusable:true},commonPrototype,true);
CKEDITOR.ui.dialog.checkbox.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{getInputElement:function(){return this._.checkbox.getElement();
},setValue:function(checked,noChangeEvent){this.getInputElement().$.checked=checked;
!noChangeEvent&&this.fire("change",{value:checked});
},getValue:function(){return this.getInputElement().$.checked;
},accessKeyUp:function(){this.setValue(!this.getValue());
},eventProcessors:{onChange:function(dialog,func){if(!CKEDITOR.env.ie||(CKEDITOR.env.version>8)){return commonEventProcessors.onChange.apply(this,arguments);
}else{dialog.on("load",function(){var element=this._.checkbox.getElement();
element.on("propertychange",function(evt){evt=evt.data.$;
if(evt.propertyName=="checked"){this.fire("change",{value:element.$.checked});
}},this);
},this);
this.on("change",func);
}return null;
}},keyboardFocusable:true},commonPrototype,true);
CKEDITOR.ui.dialog.radio.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{setValue:function(value,noChangeEvent){var children=this._.children,item;
for(var i=0;
(i<children.length)&&(item=children[i]);
i++){item.getElement().$.checked=(item.getValue()==value);
}!noChangeEvent&&this.fire("change",{value:value});
},getValue:function(){var children=this._.children;
for(var i=0;
i<children.length;
i++){if(children[i].getElement().$.checked){return children[i].getValue();
}}return null;
},accessKeyUp:function(){var children=this._.children,i;
for(i=0;
i<children.length;
i++){if(children[i].getElement().$.checked){children[i].getElement().focus();
return;
}}children[0].getElement().focus();
},eventProcessors:{onChange:function(dialog,func){if(!CKEDITOR.env.ie){return commonEventProcessors.onChange.apply(this,arguments);
}else{dialog.on("load",function(){var children=this._.children,me=this;
for(var i=0;
i<children.length;
i++){var element=children[i].getElement();
element.on("propertychange",function(evt){evt=evt.data.$;
if(evt.propertyName=="checked"&&this.$.checked){me.fire("change",{value:this.getAttribute("value")});
}});
}},this);
this.on("change",func);
}return null;
}},keyboardFocusable:true},commonPrototype,true);
CKEDITOR.ui.dialog.file.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,commonPrototype,{getInputElement:function(){var frameDocument=CKEDITOR.document.getById(this._.frameId).getFrameDocument();
return frameDocument.$.forms.length>0?new CKEDITOR.dom.element(frameDocument.$.forms[0].elements[0]):this.getElement();
},submit:function(){this.getInputElement().getParent().$.submit();
return this;
},getAction:function(){return this.getInputElement().getParent().$.action;
},registerEvents:function(definition){var regex=/^on([A-Z]\w+)/,match;
var registerDomEvent=function(uiElement,dialog,eventName,func){uiElement.on("formLoaded",function(){uiElement.getInputElement().on(eventName,func,uiElement);
});
};
for(var i in definition){if(!(match=i.match(regex))){continue;
}if(this.eventProcessors[i]){this.eventProcessors[i].call(this,this._.dialog,definition[i]);
}else{registerDomEvent(this,this._.dialog,match[1].toLowerCase(),definition[i]);
}}return this;
},reset:function(){var _=this._,frameElement=CKEDITOR.document.getById(_.frameId),frameDocument=frameElement.getFrameDocument(),elementDefinition=_.definition,buttons=_.buttons,callNumber=this.formLoadedNumber,unloadNumber=this.formUnloadNumber,langDir=_.dialog._.editor.lang.dir,langCode=_.dialog._.editor.langCode;
if(!callNumber){callNumber=this.formLoadedNumber=CKEDITOR.tools.addFunction(function(){this.fire("formLoaded");
},this);
unloadNumber=this.formUnloadNumber=CKEDITOR.tools.addFunction(function(){this.getInputElement().clearCustomData();
},this);
this.getDialog()._.editor.on("destroy",function(){CKEDITOR.tools.removeFunction(callNumber);
CKEDITOR.tools.removeFunction(unloadNumber);
});
}function generateFormField(){frameDocument.$.open();
if(CKEDITOR.env.isCustomDomain()){frameDocument.$.domain=document.domain;
}var size="";
if(elementDefinition.size){size=elementDefinition.size-(CKEDITOR.env.ie?7:0);
}var inputId=_.frameId+"_input";
frameDocument.$.write(['<html dir="'+langDir+'" lang="'+langCode+'"><head><title></title></head><body style="margin: 0; overflow: hidden; background: transparent;">','<form enctype="multipart/form-data" method="POST" dir="'+langDir+'" lang="'+langCode+'" action="',CKEDITOR.tools.htmlEncode(elementDefinition.action),'">','<label id="',_.labelId,'" for="',inputId,'" style="display:none">',CKEDITOR.tools.htmlEncode(elementDefinition.label),"</label>",'<input id="',inputId,'" aria-labelledby="',_.labelId,'" type="file" name="',CKEDITOR.tools.htmlEncode(elementDefinition.id||"cke_upload"),'" size="',CKEDITOR.tools.htmlEncode(size>0?size:""),'" />',"</form>","</body></html>","<script>window.parent.CKEDITOR.tools.callFunction("+callNumber+");","window.onbeforeunload = function() {window.parent.CKEDITOR.tools.callFunction("+unloadNumber+")}<\/script>"].join(""));
frameDocument.$.close();
for(var i=0;
i<buttons.length;
i++){buttons[i].enable();
}}if(CKEDITOR.env.gecko){setTimeout(generateFormField,500);
}else{generateFormField();
}},getValue:function(){return this.getInputElement().$.value||"";
},setInitValue:function(){this._.initValue="";
},eventProcessors:{onChange:function(dialog,func){if(!this._.domOnChangeRegistered){this.on("formLoaded",function(){this.getInputElement().on("change",function(){this.fire("change",{value:this.getValue()});
},this);
},this);
this._.domOnChangeRegistered=true;
}this.on("change",func);
}},keyboardFocusable:true},true);
CKEDITOR.ui.dialog.fileButton.prototype=new CKEDITOR.ui.dialog.button;
CKEDITOR.ui.dialog.fieldset.prototype=CKEDITOR.tools.clone(CKEDITOR.ui.dialog.hbox.prototype);
CKEDITOR.dialog.addUIElement("text",textBuilder);
CKEDITOR.dialog.addUIElement("password",textBuilder);
CKEDITOR.dialog.addUIElement("textarea",commonBuilder);
CKEDITOR.dialog.addUIElement("checkbox",commonBuilder);
CKEDITOR.dialog.addUIElement("radio",commonBuilder);
CKEDITOR.dialog.addUIElement("button",commonBuilder);
CKEDITOR.dialog.addUIElement("select",commonBuilder);
CKEDITOR.dialog.addUIElement("file",commonBuilder);
CKEDITOR.dialog.addUIElement("fileButton",commonBuilder);
CKEDITOR.dialog.addUIElement("html",commonBuilder);
CKEDITOR.dialog.addUIElement("fieldset",containerBuilder);
}});
CKEDITOR.DIALOG_RESIZE_NONE=0;
CKEDITOR.DIALOG_RESIZE_WIDTH=1;
CKEDITOR.DIALOG_RESIZE_HEIGHT=2;
CKEDITOR.DIALOG_RESIZE_BOTH=3;
(function(){var cssLength=CKEDITOR.tools.cssLength;
function isTabVisible(tabId){return !!this._.tabs[tabId][0].$.offsetHeight;
}function getPreviousVisibleTab(){var tabId=this._.currentTabId,length=this._.tabIdList.length,tabIndex=CKEDITOR.tools.indexOf(this._.tabIdList,tabId)+length;
for(var i=tabIndex-1;
i>tabIndex-length;
i--){if(isTabVisible.call(this,this._.tabIdList[i%length])){return this._.tabIdList[i%length];
}}return null;
}function getNextVisibleTab(){var tabId=this._.currentTabId,length=this._.tabIdList.length,tabIndex=CKEDITOR.tools.indexOf(this._.tabIdList,tabId);
for(var i=tabIndex+1;
i<tabIndex+length;
i++){if(isTabVisible.call(this,this._.tabIdList[i%length])){return this._.tabIdList[i%length];
}}return null;
}function clearOrRecoverTextInputValue(container,isRecover){var inputs=container.$.getElementsByTagName("input");
for(var i=0,length=inputs.length;
i<length;
i++){var item=new CKEDITOR.dom.element(inputs[i]);
if(item.getAttribute("type").toLowerCase()=="text"){if(isRecover){item.setAttribute("value",item.getCustomData("fake_value")||"");
item.removeCustomData("fake_value");
}else{item.setCustomData("fake_value",item.getAttribute("value"));
item.setAttribute("value","");
}}}}function handleFieldValidated(isValid,msg){var input=this.getInputElement();
if(input){isValid?input.removeAttribute("aria-invalid"):input.setAttribute("aria-invalid",true);
}if(!isValid){if(this.select){this.select();
}else{this.focus();
}}msg&&alert(msg);
this.fire("validated",{valid:isValid,msg:msg});
}function resetField(){var input=this.getInputElement();
input&&input.removeAttribute("aria-invalid");
}var templateSource='<div class="cke cke_reset_all {editorId} {editorDialogClass}" dir="{langDir}" lang="{langCode}" role="application"><table class="cke_dialog '+CKEDITOR.env.cssClass+' cke_{langDir}" aria-labelledby="cke_dialog_title_{id}" style="position:absolute" role="dialog"><tr><td role="presentation"><div class="cke_dialog_body" role="presentation"><div id="cke_dialog_title_{id}" class="cke_dialog_title" role="presentation"></div><a id="cke_dialog_close_button_{id}" class="cke_dialog_close_button" href="javascript:void(0)" title="{closeTitle}" role="button"><span class="cke_label">X</span></a><div id="cke_dialog_tabs_{id}" class="cke_dialog_tabs" role="tablist"></div><table class="cke_dialog_contents" role="presentation"><tr><td id="cke_dialog_contents_{id}" class="cke_dialog_contents_body" role="presentation"></td></tr><tr><td id="cke_dialog_footer_{id}" class="cke_dialog_footer" role="presentation"></td></tr></table></div></td></tr></table></div>';
function buildDialog(editor){var element=CKEDITOR.dom.element.createFromHtml(CKEDITOR.addTemplate("dialog",templateSource).output({id:CKEDITOR.tools.getNextNumber(),editorId:editor.id,langDir:editor.lang.dir,langCode:editor.langCode,editorDialogClass:"cke_editor_"+editor.name.replace(/\./g,"\\.")+"_dialog",closeTitle:editor.lang.common.close}));
var body=element.getChild([0,0,0,0,0]),title=body.getChild(0),close=body.getChild(1);
if(CKEDITOR.env.ie&&!CKEDITOR.env.ie6Compat){var isCustomDomain=CKEDITOR.env.isCustomDomain(),src="javascript:void(function(){"+encodeURIComponent("document.open();"+(isCustomDomain?('document.domain="'+document.domain+'";'):"")+"document.close();")+"}())",iframe=CKEDITOR.dom.element.createFromHtml('<iframe frameBorder="0" class="cke_iframe_shim" src="'+src+'" tabIndex="-1"></iframe>');
iframe.appendTo(body.getParent());
}title.unselectable();
close.unselectable();
return{element:element,parts:{dialog:element.getChild(0),title:title,close:close,tabs:body.getChild(2),contents:body.getChild([3,0,0,0]),footer:body.getChild([3,0,1,0])}};
}CKEDITOR.dialog=function(editor,dialogName){var definition=CKEDITOR.dialog._.dialogDefinitions[dialogName],defaultDefinition=CKEDITOR.tools.clone(defaultDialogDefinition),buttonsOrder=editor.config.dialog_buttonsOrder||"OS",dir=editor.lang.dir,tabsToRemove={},i,processed,stopPropagation;
if((buttonsOrder=="OS"&&CKEDITOR.env.mac)||(buttonsOrder=="rtl"&&dir=="ltr")||(buttonsOrder=="ltr"&&dir=="rtl")){defaultDefinition.buttons.reverse();
}definition=CKEDITOR.tools.extend(definition(editor),defaultDefinition);
definition=CKEDITOR.tools.clone(definition);
definition=new definitionObject(this,definition);
var doc=CKEDITOR.document;
var themeBuilt=buildDialog(editor);
this._={editor:editor,element:themeBuilt.element,name:dialogName,contentSize:{width:0,height:0},size:{width:0,height:0},contents:{},buttons:{},accessKeyMap:{},tabs:{},tabIdList:[],currentTabId:null,currentTabIndex:null,pageCount:0,lastTab:null,tabBarMode:false,focusList:[],currentFocusIndex:0,hasFocus:false};
this.parts=themeBuilt.parts;
CKEDITOR.tools.setTimeout(function(){editor.fire("ariaWidget",this.parts.contents);
},0,this);
var startStyles={position:CKEDITOR.env.ie6Compat?"absolute":"fixed",top:0,visibility:"hidden"};
startStyles[dir=="rtl"?"right":"left"]=0;
this.parts.dialog.setStyles(startStyles);
CKEDITOR.event.call(this);
this.definition=definition=CKEDITOR.fire("dialogDefinition",{name:dialogName,definition:definition},editor).definition;
if(!("removeDialogTabs" in editor._)&&editor.config.removeDialogTabs){var removeContents=editor.config.removeDialogTabs.split(";");
for(i=0;
i<removeContents.length;
i++){var parts=removeContents[i].split(":");
if(parts.length==2){var removeDialogName=parts[0];
if(!tabsToRemove[removeDialogName]){tabsToRemove[removeDialogName]=[];
}tabsToRemove[removeDialogName].push(parts[1]);
}}editor._.removeDialogTabs=tabsToRemove;
}if(editor._.removeDialogTabs&&(tabsToRemove=editor._.removeDialogTabs[dialogName])){for(i=0;
i<tabsToRemove.length;
i++){definition.removeContents(tabsToRemove[i]);
}}if(definition.onLoad){this.on("load",definition.onLoad);
}if(definition.onShow){this.on("show",definition.onShow);
}if(definition.onHide){this.on("hide",definition.onHide);
}if(definition.onOk){this.on("ok",function(evt){editor.fire("saveSnapshot");
setTimeout(function(){editor.fire("saveSnapshot");
},0);
if(definition.onOk.call(this,evt)===false){evt.data.hide=false;
}});
}if(definition.onCancel){this.on("cancel",function(evt){if(definition.onCancel.call(this,evt)===false){evt.data.hide=false;
}});
}var me=this;
var iterContents=function(func){var contents=me._.contents,stop=false;
for(var i in contents){for(var j in contents[i]){stop=func.call(this,contents[i][j]);
if(stop){return;
}}}};
this.on("ok",function(evt){iterContents(function(item){if(item.validate){var retval=item.validate(this),invalid=typeof(retval)=="string"||retval===false;
if(invalid){evt.data.hide=false;
evt.stop();
}handleFieldValidated.call(item,!invalid,typeof retval=="string"?retval:undefined);
return invalid;
}});
},this,null,0);
this.on("cancel",function(evt){iterContents(function(item){if(item.isChanged()){if(!confirm(editor.lang.common.confirmCancel)){evt.data.hide=false;
}return true;
}});
},this,null,0);
this.parts.close.on("click",function(evt){if(this.fire("cancel",{hide:true}).hide!==false){this.hide();
}evt.data.preventDefault();
},this);
function setupFocus(){var focusList=me._.focusList;
focusList.sort(function(a,b){if(a.tabIndex!=b.tabIndex){return b.tabIndex-a.tabIndex;
}else{return a.focusIndex-b.focusIndex;
}});
var size=focusList.length;
for(var i=0;
i<size;
i++){focusList[i].focusIndex=i;
}}function changeFocus(offset){var focusList=me._.focusList;
offset=offset||0;
if(focusList.length<1){return;
}var current=me._.currentFocusIndex;
try{focusList[current].getInputElement().$.blur();
}catch(e){}var startIndex=(current+offset+focusList.length)%focusList.length,currentIndex=startIndex;
while(offset&&!focusList[currentIndex].isFocusable()){currentIndex=(currentIndex+offset+focusList.length)%focusList.length;
if(currentIndex==startIndex){break;
}}focusList[currentIndex].focus();
if(focusList[currentIndex].type=="text"){focusList[currentIndex].select();
}}this.changeFocus=changeFocus;
function keydownHandler(evt){if(me!=CKEDITOR.dialog._.currentTop){return;
}var keystroke=evt.data.getKeystroke(),rtl=editor.lang.dir=="rtl",button;
processed=stopPropagation=0;
if(keystroke==9||keystroke==CKEDITOR.SHIFT+9){var shiftPressed=(keystroke==CKEDITOR.SHIFT+9);
if(me._.tabBarMode){var nextId=shiftPressed?getPreviousVisibleTab.call(me):getNextVisibleTab.call(me);
me.selectPage(nextId);
me._.tabs[nextId][0].focus();
}else{changeFocus(shiftPressed?-1:1);
}processed=1;
}else{if(keystroke==CKEDITOR.ALT+121&&!me._.tabBarMode&&me.getPageCount()>1){me._.tabBarMode=true;
me._.tabs[me._.currentTabId][0].focus();
processed=1;
}else{if((keystroke==37||keystroke==39)&&me._.tabBarMode){nextId=(keystroke==(rtl?39:37)?getPreviousVisibleTab.call(me):getNextVisibleTab.call(me));
me.selectPage(nextId);
me._.tabs[nextId][0].focus();
processed=1;
}else{if((keystroke==13||keystroke==32)&&me._.tabBarMode){this.selectPage(this._.currentTabId);
this._.tabBarMode=false;
this._.currentFocusIndex=-1;
changeFocus(1);
processed=1;
}else{if(keystroke==13){var target=evt.data.getTarget();
if(!target.is("a","button","select","textarea")&&(!target.is("input")||target.$.type!="button")){button=this.getButton("ok");
button&&CKEDITOR.tools.setTimeout(button.click,0,button);
processed=1;
}stopPropagation=1;
}else{if(keystroke==27){button=this.getButton("cancel");
if(button){CKEDITOR.tools.setTimeout(button.click,0,button);
}else{if(this.fire("cancel",{hide:true}).hide!==false){this.hide();
}}stopPropagation=1;
}else{return;
}}}}}}keypressHandler(evt);
}function keypressHandler(evt){if(processed){evt.data.preventDefault(1);
}else{if(stopPropagation){evt.data.stopPropagation();
}}}var dialogElement=this._.element;
editor.focusManager.add(dialogElement,1);
this.on("show",function(){dialogElement.on("keydown",keydownHandler,this);
if(CKEDITOR.env.opera||CKEDITOR.env.gecko){dialogElement.on("keypress",keypressHandler,this);
}});
this.on("hide",function(){dialogElement.removeListener("keydown",keydownHandler);
if(CKEDITOR.env.opera||CKEDITOR.env.gecko){dialogElement.removeListener("keypress",keypressHandler);
}iterContents(function(item){resetField.apply(item);
});
});
this.on("iframeAdded",function(evt){var doc=new CKEDITOR.dom.document(evt.data.iframe.$.contentWindow.document);
doc.on("keydown",keydownHandler,this,null,0);
});
this.on("show",function(){setupFocus();
if(editor.config.dialog_startupFocusTab&&me._.pageCount>1){me._.tabBarMode=true;
me._.tabs[me._.currentTabId][0].focus();
}else{if(!this._.hasFocus){this._.currentFocusIndex=-1;
if(definition.onFocus){var initialFocus=definition.onFocus.call(this);
initialFocus&&initialFocus.focus();
}else{changeFocus(1);
}}}},this,null,4294967295);
if(CKEDITOR.env.ie6Compat){this.on("load",function(evt){var outer=this.getElement(),inner=outer.getFirst();
inner.remove();
inner.appendTo(outer);
},this);
}initDragAndDrop(this);
initResizeHandles(this);
(new CKEDITOR.dom.text(definition.title,CKEDITOR.document)).appendTo(this.parts.title);
for(i=0;
i<definition.contents.length;
i++){var page=definition.contents[i];
page&&this.addPage(page);
}this.parts.tabs.on("click",function(evt){var target=evt.data.getTarget();
if(target.hasClass("cke_dialog_tab")){var id=target.$.id;
this.selectPage(id.substring(4,id.lastIndexOf("_")));
if(this._.tabBarMode){this._.tabBarMode=false;
this._.currentFocusIndex=-1;
changeFocus(1);
}evt.data.preventDefault();
}},this);
var buttonsHtml=[],buttons=CKEDITOR.dialog._.uiElementBuilders.hbox.build(this,{type:"hbox",className:"cke_dialog_footer_buttons",widths:[],children:definition.buttons},buttonsHtml).getChild();
this.parts.footer.setHtml(buttonsHtml.join(""));
for(i=0;
i<buttons.length;
i++){this._.buttons[buttons[i].id]=buttons[i];
}};
function Focusable(dialog,element,index){this.element=element;
this.focusIndex=index;
this.tabIndex=0;
this.isFocusable=function(){return !element.getAttribute("disabled")&&element.isVisible();
};
this.focus=function(){dialog._.currentFocusIndex=this.focusIndex;
this.element.focus();
};
element.on("keydown",function(e){if(e.data.getKeystroke() in {32:1,13:1}){this.fire("click");
}});
element.on("focus",function(){this.fire("mouseover");
});
element.on("blur",function(){this.fire("mouseout");
});
}function resizeWithWindow(dialog){var win=CKEDITOR.document.getWindow();
function resizeHandler(){dialog.layout();
}win.on("resize",resizeHandler);
dialog.on("hide",function(){win.removeListener("resize",resizeHandler);
});
}CKEDITOR.dialog.prototype={destroy:function(){this.hide();
this._.element.remove();
},resize:(function(){return function(width,height){if(this._.contentSize&&this._.contentSize.width==width&&this._.contentSize.height==height){return;
}CKEDITOR.dialog.fire("resize",{dialog:this,width:width,height:height},this._.editor);
this.fire("resize",{width:width,height:height},this._.editor);
var contents=this.parts.contents;
contents.setStyles({width:width+"px",height:height+"px"});
if(this._.editor.lang.dir=="rtl"&&this._.position){this._.position.x=CKEDITOR.document.getWindow().getViewPaneSize().width-this._.contentSize.width-parseInt(this._.element.getFirst().getStyle("right"),10);
}this._.contentSize={width:width,height:height};
};
})(),getSize:function(){var element=this._.element.getFirst();
return{width:element.$.offsetWidth||0,height:element.$.offsetHeight||0};
},move:function(x,y,save){var element=this._.element.getFirst(),rtl=this._.editor.lang.dir=="rtl";
var isFixed=element.getComputedStyle("position")=="fixed";
if(CKEDITOR.env.ie){element.setStyle("zoom","100%");
}if(isFixed&&this._.position&&this._.position.x==x&&this._.position.y==y){return;
}this._.position={x:x,y:y};
if(!isFixed){var scrollPosition=CKEDITOR.document.getWindow().getScrollPosition();
x+=scrollPosition.x;
y+=scrollPosition.y;
}if(rtl){var dialogSize=this.getSize(),viewPaneSize=CKEDITOR.document.getWindow().getViewPaneSize();
x=viewPaneSize.width-dialogSize.width-x;
}var styles={top:(y>0?y:0)+"px"};
styles[rtl?"right":"left"]=(x>0?x:0)+"px";
element.setStyles(styles);
save&&(this._.moved=1);
},getPosition:function(){return CKEDITOR.tools.extend({},this._.position);
},show:function(){var element=this._.element;
var definition=this.definition;
if(!(element.getParent()&&element.getParent().equals(CKEDITOR.document.getBody()))){element.appendTo(CKEDITOR.document.getBody());
}else{element.setStyle("display","block");
}if(CKEDITOR.env.gecko&&CKEDITOR.env.version<10900){var dialogElement=this.parts.dialog;
dialogElement.setStyle("position","absolute");
setTimeout(function(){dialogElement.setStyle("position","fixed");
},0);
}this.resize(this._.contentSize&&this._.contentSize.width||definition.width||definition.minWidth,this._.contentSize&&this._.contentSize.height||definition.height||definition.minHeight);
this.reset();
this.selectPage(this.definition.contents[0].id);
if(CKEDITOR.dialog._.currentZIndex===null){CKEDITOR.dialog._.currentZIndex=this._.editor.config.baseFloatZIndex;
}this._.element.getFirst().setStyle("z-index",CKEDITOR.dialog._.currentZIndex+=10);
if(CKEDITOR.dialog._.currentTop===null){CKEDITOR.dialog._.currentTop=this;
this._.parentDialog=null;
showCover(this._.editor);
}else{this._.parentDialog=CKEDITOR.dialog._.currentTop;
var parentElement=this._.parentDialog.getElement().getFirst();
parentElement.$.style.zIndex-=Math.floor(this._.editor.config.baseFloatZIndex/2);
CKEDITOR.dialog._.currentTop=this;
}element.on("keydown",accessKeyDownHandler);
element.on(CKEDITOR.env.opera?"keypress":"keyup",accessKeyUpHandler);
this._.hasFocus=false;
CKEDITOR.tools.setTimeout(function(){this.layout();
resizeWithWindow(this);
this.parts.dialog.setStyle("visibility","");
this.fireOnce("load",{});
CKEDITOR.ui.fire("ready",this);
this.fire("show",{});
this._.editor.fire("dialogShow",this);
if(!this._.parentDialog){this._.editor.focusManager.lock();
}this.foreach(function(contentObj){contentObj.setInitValue&&contentObj.setInitValue();
});
},100,this);
},layout:function(){var el=this.parts.dialog;
var dialogSize=this.getSize();
var win=CKEDITOR.document.getWindow(),viewSize=win.getViewPaneSize();
var posX=(viewSize.width-dialogSize.width)/2,posY=(viewSize.height-dialogSize.height)/2;
if(!CKEDITOR.env.ie6Compat){if(dialogSize.height+(posY>0?posY:0)>viewSize.height||dialogSize.width+(posX>0?posX:0)>viewSize.width){el.setStyle("position","absolute");
}else{el.setStyle("position","fixed");
}}this.move(this._.moved?this._.position.x:posX,this._.moved?this._.position.y:posY);
},foreach:function(fn){for(var i in this._.contents){for(var j in this._.contents[i]){fn.call(this,this._.contents[i][j]);
}}return this;
},reset:(function(){var fn=function(widget){if(widget.reset){widget.reset(1);
}};
return function(){this.foreach(fn);
return this;
};
})(),setupContent:function(){var args=arguments;
this.foreach(function(widget){if(widget.setup){widget.setup.apply(widget,args);
}});
},commitContent:function(){var args=arguments;
this.foreach(function(widget){if(CKEDITOR.env.ie&&this._.currentFocusIndex==widget.focusIndex){widget.getInputElement().$.blur();
}if(widget.commit){widget.commit.apply(widget,args);
}});
},hide:function(){if(!this.parts.dialog.isVisible()){return;
}this.fire("hide",{});
this._.editor.fire("dialogHide",this);
this.selectPage(this._.tabIdList[0]);
var element=this._.element;
element.setStyle("display","none");
this.parts.dialog.setStyle("visibility","hidden");
unregisterAccessKey(this);
while(CKEDITOR.dialog._.currentTop!=this){CKEDITOR.dialog._.currentTop.hide();
}if(!this._.parentDialog){hideCover(this._.editor);
}else{var parentElement=this._.parentDialog.getElement().getFirst();
parentElement.setStyle("z-index",parseInt(parentElement.$.style.zIndex,10)+Math.floor(this._.editor.config.baseFloatZIndex/2));
}CKEDITOR.dialog._.currentTop=this._.parentDialog;
if(!this._.parentDialog){CKEDITOR.dialog._.currentZIndex=null;
element.removeListener("keydown",accessKeyDownHandler);
element.removeListener(CKEDITOR.env.opera?"keypress":"keyup",accessKeyUpHandler);
var editor=this._.editor;
editor.focus();
setTimeout(function(){editor.focusManager.unlock();
},0);
}else{CKEDITOR.dialog._.currentZIndex-=10;
}delete this._.parentDialog;
this.foreach(function(contentObj){contentObj.resetInitValue&&contentObj.resetInitValue();
});
},addPage:function(contents){if(contents.requiredContent&&!this._.editor.filter.check(contents.requiredContent)){return;
}var pageHtml=[],titleHtml=contents.label?' title="'+CKEDITOR.tools.htmlEncode(contents.label)+'"':"",elements=contents.elements,vbox=CKEDITOR.dialog._.uiElementBuilders.vbox.build(this,{type:"vbox",className:"cke_dialog_page_contents",children:contents.elements,expand:!!contents.expand,padding:contents.padding,style:contents.style||"width: 100%;"},pageHtml);
var contentMap=this._.contents[contents.id]={},cursor,children=vbox.getChild(),enabledFields=0;
while((cursor=children.shift())){if(!cursor.notAllowed&&cursor.type!="hbox"&&cursor.type!="vbox"){enabledFields++;
}contentMap[cursor.id]=cursor;
if(typeof(cursor.getChild)=="function"){children.push.apply(children,cursor.getChild());
}}if(!enabledFields){contents.hidden=true;
}var page=CKEDITOR.dom.element.createFromHtml(pageHtml.join(""));
page.setAttribute("role","tabpanel");
var env=CKEDITOR.env;
var tabId="cke_"+contents.id+"_"+CKEDITOR.tools.getNextNumber(),tab=CKEDITOR.dom.element.createFromHtml(['<a class="cke_dialog_tab"',(this._.pageCount>0?" cke_last":"cke_first"),titleHtml,(!!contents.hidden?' style="display:none"':""),' id="',tabId,'"',env.gecko&&env.version>=10900&&!env.hc?"":' href="javascript:void(0)"',' tabIndex="-1"',' hidefocus="true"',' role="tab">',contents.label,"</a>"].join(""));
page.setAttribute("aria-labelledby",tabId);
this._.tabs[contents.id]=[tab,page];
this._.tabIdList.push(contents.id);
!contents.hidden&&this._.pageCount++;
this._.lastTab=tab;
this.updateStyle();
page.setAttribute("name",contents.id);
page.appendTo(this.parts.contents);
tab.unselectable();
this.parts.tabs.append(tab);
if(contents.accessKey){registerAccessKey(this,this,"CTRL+"+contents.accessKey,tabAccessKeyDown,tabAccessKeyUp);
this._.accessKeyMap["CTRL+"+contents.accessKey]=contents.id;
}},selectPage:function(id){if(this._.currentTabId==id){return;
}if(this.fire("selectPage",{page:id,currentPage:this._.currentTabId})===true){return;
}for(var i in this._.tabs){var tab=this._.tabs[i][0],page=this._.tabs[i][1];
if(i!=id){tab.removeClass("cke_dialog_tab_selected");
page.hide();
}page.setAttribute("aria-hidden",i!=id);
}var selected=this._.tabs[id];
selected[0].addClass("cke_dialog_tab_selected");
if(CKEDITOR.env.ie6Compat||CKEDITOR.env.ie7Compat){clearOrRecoverTextInputValue(selected[1]);
selected[1].show();
setTimeout(function(){clearOrRecoverTextInputValue(selected[1],1);
},0);
}else{selected[1].show();
}this._.currentTabId=id;
this._.currentTabIndex=CKEDITOR.tools.indexOf(this._.tabIdList,id);
},updateStyle:function(){this.parts.dialog[(this._.pageCount===1?"add":"remove")+"Class"]("cke_single_page");
},hidePage:function(id){var tab=this._.tabs[id]&&this._.tabs[id][0];
if(!tab||this._.pageCount==1||!tab.isVisible()){return;
}else{if(id==this._.currentTabId){this.selectPage(getPreviousVisibleTab.call(this));
}}tab.hide();
this._.pageCount--;
this.updateStyle();
},showPage:function(id){var tab=this._.tabs[id]&&this._.tabs[id][0];
if(!tab){return;
}tab.show();
this._.pageCount++;
this.updateStyle();
},getElement:function(){return this._.element;
},getName:function(){return this._.name;
},getContentElement:function(pageId,elementId){var page=this._.contents[pageId];
return page&&page[elementId];
},getValueOf:function(pageId,elementId){return this.getContentElement(pageId,elementId).getValue();
},setValueOf:function(pageId,elementId,value){return this.getContentElement(pageId,elementId).setValue(value);
},getButton:function(id){return this._.buttons[id];
},click:function(id){return this._.buttons[id].click();
},disableButton:function(id){return this._.buttons[id].disable();
},enableButton:function(id){return this._.buttons[id].enable();
},getPageCount:function(){return this._.pageCount;
},getParentEditor:function(){return this._.editor;
},getSelectedElement:function(){return this.getParentEditor().getSelection().getSelectedElement();
},addFocusable:function(element,index){if(typeof index=="undefined"){index=this._.focusList.length;
this._.focusList.push(new Focusable(this,element,index));
}else{this._.focusList.splice(index,0,new Focusable(this,element,index));
for(var i=index+1;
i<this._.focusList.length;
i++){this._.focusList[i].focusIndex++;
}}}};
CKEDITOR.tools.extend(CKEDITOR.dialog,{add:function(name,dialogDefinition){if(!this._.dialogDefinitions[name]||typeof dialogDefinition=="function"){this._.dialogDefinitions[name]=dialogDefinition;
}},exists:function(name){return !!this._.dialogDefinitions[name];
},getCurrent:function(){return CKEDITOR.dialog._.currentTop;
},isTabEnabled:function(editor,dialogName,tabName){var cfg=editor.config.removeDialogTabs;
return !(cfg&&cfg.match(new RegExp("(?:^|;)"+dialogName+":"+tabName+"(?:$|;)","i")));
},okButton:(function(){var retval=function(editor,override){override=override||{};
return CKEDITOR.tools.extend({id:"ok",type:"button",label:editor.lang.common.ok,"class":"cke_dialog_ui_button_ok",onClick:function(evt){var dialog=evt.data.dialog;
if(dialog.fire("ok",{hide:true}).hide!==false){dialog.hide();
}}},override,true);
};
retval.type="button";
retval.override=function(override){return CKEDITOR.tools.extend(function(editor){return retval(editor,override);
},{type:"button"},true);
};
return retval;
})(),cancelButton:(function(){var retval=function(editor,override){override=override||{};
return CKEDITOR.tools.extend({id:"cancel",type:"button",label:editor.lang.common.cancel,"class":"cke_dialog_ui_button_cancel",onClick:function(evt){var dialog=evt.data.dialog;
if(dialog.fire("cancel",{hide:true}).hide!==false){dialog.hide();
}}},override,true);
};
retval.type="button";
retval.override=function(override){return CKEDITOR.tools.extend(function(editor){return retval(editor,override);
},{type:"button"},true);
};
return retval;
})(),addUIElement:function(typeName,builder){this._.uiElementBuilders[typeName]=builder;
}});
CKEDITOR.dialog._={uiElementBuilders:{},dialogDefinitions:{},currentTop:null,currentZIndex:null};
CKEDITOR.event.implementOn(CKEDITOR.dialog);
CKEDITOR.event.implementOn(CKEDITOR.dialog.prototype);
var defaultDialogDefinition={resizable:CKEDITOR.DIALOG_RESIZE_BOTH,minWidth:600,minHeight:400,buttons:[CKEDITOR.dialog.okButton,CKEDITOR.dialog.cancelButton]};
var getById=function(array,id,recurse){for(var i=0,item;
(item=array[i]);
i++){if(item.id==id){return item;
}if(recurse&&item[recurse]){var retval=getById(item[recurse],id,recurse);
if(retval){return retval;
}}}return null;
};
var addById=function(array,newItem,nextSiblingId,recurse,nullIfNotFound){if(nextSiblingId){for(var i=0,item;
(item=array[i]);
i++){if(item.id==nextSiblingId){array.splice(i,0,newItem);
return newItem;
}if(recurse&&item[recurse]){var retval=addById(item[recurse],newItem,nextSiblingId,recurse,true);
if(retval){return retval;
}}}if(nullIfNotFound){return null;
}}array.push(newItem);
return newItem;
};
var removeById=function(array,id,recurse){for(var i=0,item;
(item=array[i]);
i++){if(item.id==id){return array.splice(i,1);
}if(recurse&&item[recurse]){var retval=removeById(item[recurse],id,recurse);
if(retval){return retval;
}}}return null;
};
var definitionObject=function(dialog,dialogDefinition){this.dialog=dialog;
var contents=dialogDefinition.contents;
for(var i=0,content;
(content=contents[i]);
i++){contents[i]=content&&new contentObject(dialog,content);
}CKEDITOR.tools.extend(this,dialogDefinition);
};
definitionObject.prototype={getContents:function(id){return getById(this.contents,id);
},getButton:function(id){return getById(this.buttons,id);
},addContents:function(contentDefinition,nextSiblingId){return addById(this.contents,contentDefinition,nextSiblingId);
},addButton:function(buttonDefinition,nextSiblingId){return addById(this.buttons,buttonDefinition,nextSiblingId);
},removeContents:function(id){removeById(this.contents,id);
},removeButton:function(id){removeById(this.buttons,id);
}};
function contentObject(dialog,contentDefinition){this._={dialog:dialog};
CKEDITOR.tools.extend(this,contentDefinition);
}contentObject.prototype={get:function(id){return getById(this.elements,id,"children");
},add:function(elementDefinition,nextSiblingId){return addById(this.elements,elementDefinition,nextSiblingId,"children");
},remove:function(id){removeById(this.elements,id,"children");
}};
function initDragAndDrop(dialog){var lastCoords=null,abstractDialogCoords=null,element=dialog.getElement().getFirst(),editor=dialog.getParentEditor(),magnetDistance=editor.config.dialog_magnetDistance,margins=CKEDITOR.skin.margins||[0,0,0,0];
if(typeof magnetDistance=="undefined"){magnetDistance=20;
}function mouseMoveHandler(evt){var dialogSize=dialog.getSize(),viewPaneSize=CKEDITOR.document.getWindow().getViewPaneSize(),x=evt.data.$.screenX,y=evt.data.$.screenY,dx=x-lastCoords.x,dy=y-lastCoords.y,realX,realY;
lastCoords={x:x,y:y};
abstractDialogCoords.x+=dx;
abstractDialogCoords.y+=dy;
if(abstractDialogCoords.x+margins[3]<magnetDistance){realX=-margins[3];
}else{if(abstractDialogCoords.x-margins[1]>viewPaneSize.width-dialogSize.width-magnetDistance){realX=viewPaneSize.width-dialogSize.width+(editor.lang.dir=="rtl"?0:margins[1]);
}else{realX=abstractDialogCoords.x;
}}if(abstractDialogCoords.y+margins[0]<magnetDistance){realY=-margins[0];
}else{if(abstractDialogCoords.y-margins[2]>viewPaneSize.height-dialogSize.height-magnetDistance){realY=viewPaneSize.height-dialogSize.height+margins[2];
}else{realY=abstractDialogCoords.y;
}}dialog.move(realX,realY,1);
evt.data.preventDefault();
}function mouseUpHandler(evt){CKEDITOR.document.removeListener("mousemove",mouseMoveHandler);
CKEDITOR.document.removeListener("mouseup",mouseUpHandler);
if(CKEDITOR.env.ie6Compat){var coverDoc=currentCover.getChild(0).getFrameDocument();
coverDoc.removeListener("mousemove",mouseMoveHandler);
coverDoc.removeListener("mouseup",mouseUpHandler);
}}dialog.parts.title.on("mousedown",function(evt){lastCoords={x:evt.data.$.screenX,y:evt.data.$.screenY};
CKEDITOR.document.on("mousemove",mouseMoveHandler);
CKEDITOR.document.on("mouseup",mouseUpHandler);
abstractDialogCoords=dialog.getPosition();
if(CKEDITOR.env.ie6Compat){var coverDoc=currentCover.getChild(0).getFrameDocument();
coverDoc.on("mousemove",mouseMoveHandler);
coverDoc.on("mouseup",mouseUpHandler);
}evt.data.preventDefault();
},dialog);
}function initResizeHandles(dialog){var def=dialog.definition,resizable=def.resizable;
if(resizable==CKEDITOR.DIALOG_RESIZE_NONE){return;
}var editor=dialog.getParentEditor();
var wrapperWidth,wrapperHeight,viewSize,origin,startSize,dialogCover;
var mouseDownFn=CKEDITOR.tools.addFunction(function($event){startSize=dialog.getSize();
var content=dialog.parts.contents,iframeDialog=content.$.getElementsByTagName("iframe").length;
if(iframeDialog){dialogCover=CKEDITOR.dom.element.createFromHtml('<div class="cke_dialog_resize_cover" style="height: 100%; position: absolute; width: 100%;"></div>');
content.append(dialogCover);
}wrapperHeight=startSize.height-dialog.parts.contents.getSize("height",!(CKEDITOR.env.gecko||CKEDITOR.env.opera||CKEDITOR.env.ie&&CKEDITOR.env.quirks));
wrapperWidth=startSize.width-dialog.parts.contents.getSize("width",1);
origin={x:$event.screenX,y:$event.screenY};
viewSize=CKEDITOR.document.getWindow().getViewPaneSize();
CKEDITOR.document.on("mousemove",mouseMoveHandler);
CKEDITOR.document.on("mouseup",mouseUpHandler);
if(CKEDITOR.env.ie6Compat){var coverDoc=currentCover.getChild(0).getFrameDocument();
coverDoc.on("mousemove",mouseMoveHandler);
coverDoc.on("mouseup",mouseUpHandler);
}$event.preventDefault&&$event.preventDefault();
});
dialog.on("load",function(){var direction="";
if(resizable==CKEDITOR.DIALOG_RESIZE_WIDTH){direction=" cke_resizer_horizontal";
}else{if(resizable==CKEDITOR.DIALOG_RESIZE_HEIGHT){direction=" cke_resizer_vertical";
}}var resizer=CKEDITOR.dom.element.createFromHtml('<div class="cke_resizer'+direction+" cke_resizer_"+editor.lang.dir+'" title="'+CKEDITOR.tools.htmlEncode(editor.lang.common.resize)+'" onmousedown="CKEDITOR.tools.callFunction('+mouseDownFn+', event )">'+(editor.lang.dir=="ltr"?"\u25E2":"\u25E3")+"</div>");
dialog.parts.footer.append(resizer,1);
});
editor.on("destroy",function(){CKEDITOR.tools.removeFunction(mouseDownFn);
});
function mouseMoveHandler(evt){var rtl=editor.lang.dir=="rtl",dx=(evt.data.$.screenX-origin.x)*(rtl?-1:1),dy=evt.data.$.screenY-origin.y,width=startSize.width,height=startSize.height,internalWidth=width+dx*(dialog._.moved?1:2),internalHeight=height+dy*(dialog._.moved?1:2),element=dialog._.element.getFirst(),right=rtl&&element.getComputedStyle("right"),position=dialog.getPosition();
if(position.y+internalHeight>viewSize.height){internalHeight=viewSize.height-position.y;
}if((rtl?right:position.x)+internalWidth>viewSize.width){internalWidth=viewSize.width-(rtl?right:position.x);
}if((resizable==CKEDITOR.DIALOG_RESIZE_WIDTH||resizable==CKEDITOR.DIALOG_RESIZE_BOTH)){width=Math.max(def.minWidth||0,internalWidth-wrapperWidth);
}if(resizable==CKEDITOR.DIALOG_RESIZE_HEIGHT||resizable==CKEDITOR.DIALOG_RESIZE_BOTH){height=Math.max(def.minHeight||0,internalHeight-wrapperHeight);
}dialog.resize(width,height);
if(!dialog._.moved){dialog.layout();
}evt.data.preventDefault();
}function mouseUpHandler(){CKEDITOR.document.removeListener("mouseup",mouseUpHandler);
CKEDITOR.document.removeListener("mousemove",mouseMoveHandler);
if(dialogCover){dialogCover.remove();
dialogCover=null;
}if(CKEDITOR.env.ie6Compat){var coverDoc=currentCover.getChild(0).getFrameDocument();
coverDoc.removeListener("mouseup",mouseUpHandler);
coverDoc.removeListener("mousemove",mouseMoveHandler);
}}}var resizeCover;
var covers={},currentCover;
function cancelEvent(ev){ev.data.preventDefault(1);
}function showCover(editor){var win=CKEDITOR.document.getWindow();
var config=editor.config,backgroundColorStyle=config.dialog_backgroundCoverColor||"white",backgroundCoverOpacity=config.dialog_backgroundCoverOpacity,baseFloatZIndex=config.baseFloatZIndex,coverKey=CKEDITOR.tools.genKey(backgroundColorStyle,backgroundCoverOpacity,baseFloatZIndex),coverElement=covers[coverKey];
if(!coverElement){var html=['<div tabIndex="-1" style="position: ',(CKEDITOR.env.ie6Compat?"absolute":"fixed"),"; z-index: ",baseFloatZIndex,"; top: 0px; left: 0px; ",(!CKEDITOR.env.ie6Compat?"background-color: "+backgroundColorStyle:""),'" class="cke_dialog_background_cover">'];
if(CKEDITOR.env.ie6Compat){var isCustomDomain=CKEDITOR.env.isCustomDomain(),iframeHtml="<html><body style=\\'background-color:"+backgroundColorStyle+";\\'></body></html>";
html.push('<iframe hidefocus="true" frameborder="0" id="cke_dialog_background_iframe" src="javascript:');
html.push("void((function(){document.open();"+(isCustomDomain?"document.domain='"+document.domain+"';":"")+"document.write( '"+iframeHtml+"' );document.close();})())");
html.push('" style="position:absolute;left:0;top:0;width:100%;height: 100%;</iframe>');
}html.push("</div>");
coverElement=CKEDITOR.dom.element.createFromHtml(html.join(""));
coverElement.setOpacity(backgroundCoverOpacity!=undefined?backgroundCoverOpacity:0.5);
coverElement.on("keydown",cancelEvent);
coverElement.on("keypress",cancelEvent);
coverElement.on("keyup",cancelEvent);
coverElement.appendTo(CKEDITOR.document.getBody());
covers[coverKey]=coverElement;
}else{coverElement.show();
}editor.focusManager.add(coverElement);
currentCover=coverElement;
var resizeFunc=function(){var size=win.getViewPaneSize();
coverElement.setStyles({width:size.width+"px",height:size.height+"px"});
};
var scrollFunc=function(){var pos=win.getScrollPosition(),cursor=CKEDITOR.dialog._.currentTop;
coverElement.setStyles({left:pos.x+"px",top:pos.y+"px"});
if(cursor){do{var dialogPos=cursor.getPosition();
cursor.move(dialogPos.x,dialogPos.y);
}while((cursor=cursor._.parentDialog));
}};
resizeCover=resizeFunc;
win.on("resize",resizeFunc);
resizeFunc();
if(!(CKEDITOR.env.mac&&CKEDITOR.env.webkit)){coverElement.focus();
}if(CKEDITOR.env.ie6Compat){var myScrollHandler=function(){scrollFunc();
arguments.callee.prevScrollHandler.apply(this,arguments);
};
win.$.setTimeout(function(){myScrollHandler.prevScrollHandler=window.onscroll||function(){};
window.onscroll=myScrollHandler;
},0);
scrollFunc();
}}function hideCover(editor){if(!currentCover){return;
}editor.focusManager.remove(currentCover);
var win=CKEDITOR.document.getWindow();
currentCover.hide();
win.removeListener("resize",resizeCover);
if(CKEDITOR.env.ie6Compat){win.$.setTimeout(function(){var prevScrollHandler=window.onscroll&&window.onscroll.prevScrollHandler;
window.onscroll=prevScrollHandler||null;
},0);
}resizeCover=null;
}function removeCovers(){for(var coverId in covers){covers[coverId].remove();
}covers={};
}var accessKeyProcessors={};
var accessKeyDownHandler=function(evt){var ctrl=evt.data.$.ctrlKey||evt.data.$.metaKey,alt=evt.data.$.altKey,shift=evt.data.$.shiftKey,key=String.fromCharCode(evt.data.$.keyCode),keyProcessor=accessKeyProcessors[(ctrl?"CTRL+":"")+(alt?"ALT+":"")+(shift?"SHIFT+":"")+key];
if(!keyProcessor||!keyProcessor.length){return;
}keyProcessor=keyProcessor[keyProcessor.length-1];
keyProcessor.keydown&&keyProcessor.keydown.call(keyProcessor.uiElement,keyProcessor.dialog,keyProcessor.key);
evt.data.preventDefault();
};
var accessKeyUpHandler=function(evt){var ctrl=evt.data.$.ctrlKey||evt.data.$.metaKey,alt=evt.data.$.altKey,shift=evt.data.$.shiftKey,key=String.fromCharCode(evt.data.$.keyCode),keyProcessor=accessKeyProcessors[(ctrl?"CTRL+":"")+(alt?"ALT+":"")+(shift?"SHIFT+":"")+key];
if(!keyProcessor||!keyProcessor.length){return;
}keyProcessor=keyProcessor[keyProcessor.length-1];
if(keyProcessor.keyup){keyProcessor.keyup.call(keyProcessor.uiElement,keyProcessor.dialog,keyProcessor.key);
evt.data.preventDefault();
}};
var registerAccessKey=function(uiElement,dialog,key,downFunc,upFunc){var procList=accessKeyProcessors[key]||(accessKeyProcessors[key]=[]);
procList.push({uiElement:uiElement,dialog:dialog,key:key,keyup:upFunc||uiElement.accessKeyUp,keydown:downFunc||uiElement.accessKeyDown});
};
var unregisterAccessKey=function(obj){for(var i in accessKeyProcessors){var list=accessKeyProcessors[i];
for(var j=list.length-1;
j>=0;
j--){if(list[j].dialog==obj||list[j].uiElement==obj){list.splice(j,1);
}}if(list.length===0){delete accessKeyProcessors[i];
}}};
var tabAccessKeyUp=function(dialog,key){if(dialog._.accessKeyMap[key]){dialog.selectPage(dialog._.accessKeyMap[key]);
}};
var tabAccessKeyDown=function(dialog,key){};
(function(){CKEDITOR.ui.dialog={uiElement:function(dialog,elementDefinition,htmlList,nodeNameArg,stylesArg,attributesArg,contentsArg){if(arguments.length<4){return;
}var nodeName=(nodeNameArg.call?nodeNameArg(elementDefinition):nodeNameArg)||"div",html=["<",nodeName," "],styles=(stylesArg&&stylesArg.call?stylesArg(elementDefinition):stylesArg)||{},attributes=(attributesArg&&attributesArg.call?attributesArg(elementDefinition):attributesArg)||{},innerHTML=(contentsArg&&contentsArg.call?contentsArg.call(this,dialog,elementDefinition):contentsArg)||"",domId=this.domId=attributes.id||CKEDITOR.tools.getNextId()+"_uiElement",id=this.id=elementDefinition.id,i;
if(elementDefinition.requiredContent&&!dialog.getParentEditor().filter.check(elementDefinition.requiredContent)){styles.display="none";
this.notAllowed=true;
}attributes.id=domId;
var classes={};
if(elementDefinition.type){classes["cke_dialog_ui_"+elementDefinition.type]=1;
}if(elementDefinition.className){classes[elementDefinition.className]=1;
}if(elementDefinition.disabled){classes.cke_disabled=1;
}var attributeClasses=(attributes["class"]&&attributes["class"].split)?attributes["class"].split(" "):[];
for(i=0;
i<attributeClasses.length;
i++){if(attributeClasses[i]){classes[attributeClasses[i]]=1;
}}var finalClasses=[];
for(i in classes){finalClasses.push(i);
}attributes["class"]=finalClasses.join(" ");
if(elementDefinition.title){attributes.title=elementDefinition.title;
}var styleStr=(elementDefinition.style||"").split(";");
if(elementDefinition.align){var align=elementDefinition.align;
styles["margin-left"]=align=="left"?0:"auto";
styles["margin-right"]=align=="right"?0:"auto";
}for(i in styles){styleStr.push(i+":"+styles[i]);
}if(elementDefinition.hidden){styleStr.push("display:none");
}for(i=styleStr.length-1;
i>=0;
i--){if(styleStr[i]===""){styleStr.splice(i,1);
}}if(styleStr.length>0){attributes.style=(attributes.style?(attributes.style+"; "):"")+styleStr.join("; ");
}for(i in attributes){html.push(i+'="'+CKEDITOR.tools.htmlEncode(attributes[i])+'" ');
}html.push(">",innerHTML,"</",nodeName,">");
htmlList.push(html.join(""));
(this._||(this._={})).dialog=dialog;
if(typeof(elementDefinition.isChanged)=="boolean"){this.isChanged=function(){return elementDefinition.isChanged;
};
}if(typeof(elementDefinition.isChanged)=="function"){this.isChanged=elementDefinition.isChanged;
}if(typeof(elementDefinition.setValue)=="function"){this.setValue=CKEDITOR.tools.override(this.setValue,function(org){return function(val){org.call(this,elementDefinition.setValue.call(this,val));
};
});
}if(typeof(elementDefinition.getValue)=="function"){this.getValue=CKEDITOR.tools.override(this.getValue,function(org){return function(){return elementDefinition.getValue.call(this,org.call(this));
};
});
}CKEDITOR.event.implementOn(this);
this.registerEvents(elementDefinition);
if(this.accessKeyUp&&this.accessKeyDown&&elementDefinition.accessKey){registerAccessKey(this,dialog,"CTRL+"+elementDefinition.accessKey);
}var me=this;
dialog.on("load",function(){var input=me.getInputElement();
if(input){var focusClass=me.type in {checkbox:1,ratio:1}&&CKEDITOR.env.ie&&CKEDITOR.env.version<8?"cke_dialog_ui_focused":"";
input.on("focus",function(){dialog._.tabBarMode=false;
dialog._.hasFocus=true;
me.fire("focus");
focusClass&&this.addClass(focusClass);
});
input.on("blur",function(){me.fire("blur");
focusClass&&this.removeClass(focusClass);
});
}});
if(this.keyboardFocusable){this.tabIndex=elementDefinition.tabIndex||0;
this.focusIndex=dialog._.focusList.push(this)-1;
this.on("focus",function(){dialog._.currentFocusIndex=me.focusIndex;
});
}CKEDITOR.tools.extend(this,elementDefinition);
},hbox:function(dialog,childObjList,childHtmlList,htmlList,elementDefinition){if(arguments.length<4){return;
}this._||(this._={});
var children=this._.children=childObjList,widths=elementDefinition&&elementDefinition.widths||null,height=elementDefinition&&elementDefinition.height||null,styles={},i;
var innerHTML=function(){var html=['<tbody><tr class="cke_dialog_ui_hbox">'];
for(i=0;
i<childHtmlList.length;
i++){var className="cke_dialog_ui_hbox_child",styles=[];
if(i===0){className="cke_dialog_ui_hbox_first";
}if(i==childHtmlList.length-1){className="cke_dialog_ui_hbox_last";
}html.push('<td class="',className,'" role="presentation" ');
if(widths){if(widths[i]){styles.push("width:"+cssLength(widths[i]));
}}else{styles.push("width:"+Math.floor(100/childHtmlList.length)+"%");
}if(height){styles.push("height:"+cssLength(height));
}if(elementDefinition&&elementDefinition.padding!=undefined){styles.push("padding:"+cssLength(elementDefinition.padding));
}if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&children[i].align){styles.push("text-align:"+children[i].align);
}if(styles.length>0){html.push('style="'+styles.join("; ")+'" ');
}html.push(">",childHtmlList[i],"</td>");
}html.push("</tr></tbody>");
return html.join("");
};
var attribs={role:"presentation"};
elementDefinition&&elementDefinition.align&&(attribs.align=elementDefinition.align);
CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition||{type:"hbox"},htmlList,"table",styles,attribs,innerHTML);
},vbox:function(dialog,childObjList,childHtmlList,htmlList,elementDefinition){if(arguments.length<3){return;
}this._||(this._={});
var children=this._.children=childObjList,width=elementDefinition&&elementDefinition.width||null,heights=elementDefinition&&elementDefinition.heights||null;
var innerHTML=function(){var html=['<table role="presentation" cellspacing="0" border="0" '];
html.push('style="');
if(elementDefinition&&elementDefinition.expand){html.push("height:100%;");
}html.push("width:"+cssLength(width||"100%"),";");
if(CKEDITOR.env.webkit){html.push("float:none;");
}html.push('"');
html.push('align="',CKEDITOR.tools.htmlEncode((elementDefinition&&elementDefinition.align)||(dialog.getParentEditor().lang.dir=="ltr"?"left":"right")),'" ');
html.push("><tbody>");
for(var i=0;
i<childHtmlList.length;
i++){var styles=[];
html.push('<tr><td role="presentation" ');
if(width){styles.push("width:"+cssLength(width||"100%"));
}if(heights){styles.push("height:"+cssLength(heights[i]));
}else{if(elementDefinition&&elementDefinition.expand){styles.push("height:"+Math.floor(100/childHtmlList.length)+"%");
}}if(elementDefinition&&elementDefinition.padding!=undefined){styles.push("padding:"+cssLength(elementDefinition.padding));
}if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&children[i].align){styles.push("text-align:"+children[i].align);
}if(styles.length>0){html.push('style="',styles.join("; "),'" ');
}html.push(' class="cke_dialog_ui_vbox_child">',childHtmlList[i],"</td></tr>");
}html.push("</tbody></table>");
return html.join("");
};
CKEDITOR.ui.dialog.uiElement.call(this,dialog,elementDefinition||{type:"vbox"},htmlList,"div",null,{role:"presentation"},innerHTML);
}};
})();
CKEDITOR.ui.dialog.uiElement.prototype={getElement:function(){return CKEDITOR.document.getById(this.domId);
},getInputElement:function(){return this.getElement();
},getDialog:function(){return this._.dialog;
},setValue:function(value,noChangeEvent){this.getInputElement().setValue(value);
!noChangeEvent&&this.fire("change",{value:value});
return this;
},getValue:function(){return this.getInputElement().getValue();
},isChanged:function(){return false;
},selectParentTab:function(){var element=this.getInputElement(),cursor=element,tabId;
while((cursor=cursor.getParent())&&cursor.$.className.search("cke_dialog_page_contents")==-1){}if(!cursor){return this;
}tabId=cursor.getAttribute("name");
if(this._.dialog._.currentTabId!=tabId){this._.dialog.selectPage(tabId);
}return this;
},focus:function(){this.selectParentTab().getInputElement().focus();
return this;
},registerEvents:function(definition){var regex=/^on([A-Z]\w+)/,match;
var registerDomEvent=function(uiElement,dialog,eventName,func){dialog.on("load",function(){uiElement.getInputElement().on(eventName,func,uiElement);
});
};
for(var i in definition){if(!(match=i.match(regex))){continue;
}if(this.eventProcessors[i]){this.eventProcessors[i].call(this,this._.dialog,definition[i]);
}else{registerDomEvent(this,this._.dialog,match[1].toLowerCase(),definition[i]);
}}return this;
},eventProcessors:{onLoad:function(dialog,func){dialog.on("load",func,this);
},onShow:function(dialog,func){dialog.on("show",func,this);
},onHide:function(dialog,func){dialog.on("hide",func,this);
}},accessKeyDown:function(dialog,key){this.focus();
},accessKeyUp:function(dialog,key){},disable:function(){var element=this.getElement(),input=this.getInputElement();
input.setAttribute("disabled","true");
element.addClass("cke_disabled");
},enable:function(){var element=this.getElement(),input=this.getInputElement();
input.removeAttribute("disabled");
element.removeClass("cke_disabled");
},isEnabled:function(){return !this.getElement().hasClass("cke_disabled");
},isVisible:function(){return this.getInputElement().isVisible();
},isFocusable:function(){if(!this.isEnabled()||!this.isVisible()){return false;
}return true;
}};
CKEDITOR.ui.dialog.hbox.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{getChild:function(indices){if(arguments.length<1){return this._.children.concat();
}if(!indices.splice){indices=[indices];
}if(indices.length<2){return this._.children[indices[0]];
}else{return(this._.children[indices[0]]&&this._.children[indices[0]].getChild)?this._.children[indices[0]].getChild(indices.slice(1,indices.length)):null;
}}},true);
CKEDITOR.ui.dialog.vbox.prototype=new CKEDITOR.ui.dialog.hbox();
(function(){var commonBuilder={build:function(dialog,elementDefinition,output){var children=elementDefinition.children,child,childHtmlList=[],childObjList=[];
for(var i=0;
(i<children.length&&(child=children[i]));
i++){var childHtml=[];
childHtmlList.push(childHtml);
childObjList.push(CKEDITOR.dialog._.uiElementBuilders[child.type].build(dialog,child,childHtml));
}return new CKEDITOR.ui.dialog[elementDefinition.type](dialog,childObjList,childHtmlList,output,elementDefinition);
}};
CKEDITOR.dialog.addUIElement("hbox",commonBuilder);
CKEDITOR.dialog.addUIElement("vbox",commonBuilder);
})();
CKEDITOR.dialogCommand=function(dialogName,ext){this.dialogName=dialogName;
CKEDITOR.tools.extend(this,ext,true);
};
CKEDITOR.dialogCommand.prototype={exec:function(editor){CKEDITOR.env.opera?CKEDITOR.tools.setTimeout(function(){editor.openDialog(this.dialogName);
},0,this):editor.openDialog(this.dialogName);
},canUndo:false,editorFocus:1};
(function(){var notEmptyRegex=/^([a]|[^a])+$/,integerRegex=/^\d*$/,numberRegex=/^\d*(?:\.\d+)?$/,htmlLengthRegex=/^(((\d*(\.\d+))|(\d*))(px|\%)?)?$/,cssLengthRegex=/^(((\d*(\.\d+))|(\d*))(px|em|ex|in|cm|mm|pt|pc|\%)?)?$/i,inlineStyleRegex=/^(\s*[\w-]+\s*:\s*[^:;]+(?:;|$))*$/;
CKEDITOR.VALIDATE_OR=1;
CKEDITOR.VALIDATE_AND=2;
CKEDITOR.dialog.validate={functions:function(){var args=arguments;
return function(){var value=this&&this.getValue?this.getValue():args[0];
var msg=undefined,relation=CKEDITOR.VALIDATE_AND,functions=[],i;
for(i=0;
i<args.length;
i++){if(typeof(args[i])=="function"){functions.push(args[i]);
}else{break;
}}if(i<args.length&&typeof(args[i])=="string"){msg=args[i];
i++;
}if(i<args.length&&typeof(args[i])=="number"){relation=args[i];
}var passed=(relation==CKEDITOR.VALIDATE_AND?true:false);
for(i=0;
i<functions.length;
i++){if(relation==CKEDITOR.VALIDATE_AND){passed=passed&&functions[i](value);
}else{passed=passed||functions[i](value);
}}return !passed?msg:true;
};
},regex:function(regex,msg){return function(){var value=this&&this.getValue?this.getValue():arguments[0];
return !regex.test(value)?msg:true;
};
},notEmpty:function(msg){return this.regex(notEmptyRegex,msg);
},integer:function(msg){return this.regex(integerRegex,msg);
},number:function(msg){return this.regex(numberRegex,msg);
},cssLength:function(msg){return this.functions(function(val){return cssLengthRegex.test(CKEDITOR.tools.trim(val));
},msg);
},htmlLength:function(msg){return this.functions(function(val){return htmlLengthRegex.test(CKEDITOR.tools.trim(val));
},msg);
},inlineStyle:function(msg){return this.functions(function(val){return inlineStyleRegex.test(CKEDITOR.tools.trim(val));
},msg);
},equals:function(value,msg){return this.functions(function(val){return val==value;
},msg);
},notEqual:function(value,msg){return this.functions(function(val){return val!=value;
},msg);
}};
CKEDITOR.on("instanceDestroyed",function(evt){if(CKEDITOR.tools.isEmpty(CKEDITOR.instances)){var currentTopDialog;
while((currentTopDialog=CKEDITOR.dialog._.currentTop)){currentTopDialog.hide();
}removeCovers();
}var dialogs=evt.editor._.storedDialogs;
for(var name in dialogs){dialogs[name].destroy();
}});
})();
CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{openDialog:function(dialogName,callback){var dialog=null,dialogDefinitions=CKEDITOR.dialog._.dialogDefinitions[dialogName];
if(CKEDITOR.dialog._.currentTop===null){showCover(this);
}if(typeof dialogDefinitions=="function"){var storedDialogs=this._.storedDialogs||(this._.storedDialogs={});
dialog=storedDialogs[dialogName]||(storedDialogs[dialogName]=new CKEDITOR.dialog(this,dialogName));
callback&&callback.call(dialog,dialog);
dialog.show();
}else{if(dialogDefinitions=="failed"){hideCover(this);
throw new Error('[CKEDITOR.dialog.openDialog] Dialog "'+dialogName+'" failed when loading definition.');
}else{if(typeof dialogDefinitions=="string"){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(dialogDefinitions),function(){var dialogDefinition=CKEDITOR.dialog._.dialogDefinitions[dialogName];
if(typeof dialogDefinition!="function"){CKEDITOR.dialog._.dialogDefinitions[dialogName]="failed";
}this.openDialog(dialogName,callback);
},this,0,1);
}}}CKEDITOR.skin.loadPart("dialog");
return dialog;
}});
})();
CKEDITOR.plugins.add("dialog",{requires:"dialogui",init:function(editor){editor.on("contentDom",function(){var editable=editor.editable();
editable.attachListener(editable,"dblclick",function(evt){if(editor.readOnly){return false;
}var data={element:evt.data.getTarget()};
editor.fire("doubleclick",data);
data.dialog&&editor.openDialog(data.dialog);
return 1;
});
});
}});
(function(){var template='<a id="{id}" class="cke_button cke_button__{name} cke_button_{state} {cls}"'+(CKEDITOR.env.gecko&&CKEDITOR.env.version>=10900&&!CKEDITOR.env.hc?"":'" href="javascript:void(\'{titleJs}\')"')+' title="{title}" tabindex="-1" hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="{hasArrow}"';
if(CKEDITOR.env.opera||(CKEDITOR.env.gecko&&CKEDITOR.env.mac)){template+=' onkeypress="return false;"';
}if(CKEDITOR.env.gecko){template+=' onblur="this.style.cssText = this.style.cssText;"';
}template+=' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event);" onfocus="return CKEDITOR.tools.callFunction({focusFn},event);"  onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span class="cke_button_icon cke_button__{iconName}_icon" style="{style}"';
template+='>&nbsp;</span><span id="{id}_label" class="cke_button_label cke_button__{name}_label">{label}</span>{arrowHtml}</a>';
var templateArrow='<span class="cke_button_arrow">'+(CKEDITOR.env.hc?"&#9660;":"")+"</span>";
var btnArrowTpl=CKEDITOR.addTemplate("buttonArrow",templateArrow),btnTpl=CKEDITOR.addTemplate("button",template);
CKEDITOR.plugins.add("button",{beforeInit:function(editor){editor.ui.addHandler(CKEDITOR.UI_BUTTON,CKEDITOR.ui.button.handler);
}});
CKEDITOR.UI_BUTTON="button";
CKEDITOR.ui.button=function(definition){CKEDITOR.tools.extend(this,definition,{title:definition.label,click:definition.click||function(editor){editor.execCommand(definition.command);
}});
this._={};
};
CKEDITOR.ui.button.handler={create:function(definition){return new CKEDITOR.ui.button(definition);
}};
CKEDITOR.ui.button.prototype={render:function(editor,output){var env=CKEDITOR.env,id=this._.id=CKEDITOR.tools.getNextId(),stateName="",command=this.command,clickFn;
this._.editor=editor;
var instance={id:id,button:this,editor:editor,focus:function(){var element=CKEDITOR.document.getById(id);
element.focus();
},execute:function(){this.button.click(editor);
},attach:function(editor){this.button.attach(editor);
}};
var keydownFn=CKEDITOR.tools.addFunction(function(ev){if(instance.onkey){ev=new CKEDITOR.dom.event(ev);
return(instance.onkey(instance,ev.getKeystroke())!==false);
}});
var focusFn=CKEDITOR.tools.addFunction(function(ev){var retVal;
if(instance.onfocus){retVal=(instance.onfocus(instance,new CKEDITOR.dom.event(ev))!==false);
}if(CKEDITOR.env.gecko&&CKEDITOR.env.version<10900){ev.preventBubble();
}return retVal;
});
var selLocked=0;
var mousedownFn=CKEDITOR.tools.addFunction(function(){if(CKEDITOR.env.opera){var edt=editor.editable();
if(edt.isInline()&&edt.hasFocus){editor.lockSelection();
selLocked=1;
}}});
instance.clickFn=clickFn=CKEDITOR.tools.addFunction(function(){if(selLocked){editor.unlockSelection(1);
selLocked=0;
}instance.execute();
});
if(this.modes){var modeStates={};
function updateState(){var mode=editor.mode;
if(mode){var state=this.modes[mode]?modeStates[mode]!=undefined?modeStates[mode]:CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED;
this.setState(editor.readOnly&&!this.readOnly?CKEDITOR.TRISTATE_DISABLED:state);
}}editor.on("beforeModeUnload",function(){if(editor.mode&&this._.state!=CKEDITOR.TRISTATE_DISABLED){modeStates[editor.mode]=this._.state;
}},this);
editor.on("mode",updateState,this);
!this.readOnly&&editor.on("readOnly",updateState,this);
}else{if(command){command=editor.getCommand(command);
if(command){command.on("state",function(){this.setState(command.state);
},this);
stateName+=(command.state==CKEDITOR.TRISTATE_ON?"on":command.state==CKEDITOR.TRISTATE_DISABLED?"disabled":"off");
}}}if(this.directional){editor.on("contentDirChanged",function(evt){var el=CKEDITOR.document.getById(this._.id),icon=el.getFirst();
var pathDir=evt.data;
if(pathDir!=editor.lang.dir){el.addClass("cke_"+pathDir);
}else{el.removeClass("cke_ltr").removeClass("cke_rtl");
}icon.setAttribute("style",CKEDITOR.skin.getIconStyle(iconName,pathDir=="rtl",this.icon,this.iconOffset));
},this);
}if(!command){stateName+="off";
}var name=this.name||this.command,iconName=name;
if(this.icon&&!(/\./).test(this.icon)){iconName=this.icon;
this.icon=null;
}var params={id:id,name:name,iconName:iconName,label:this.label,cls:this.className||"",state:stateName,title:this.title,titleJs:env.gecko&&env.version>=10900&&!env.hc?"":(this.title||"").replace("'",""),hasArrow:this.hasArrow?"true":"false",keydownFn:keydownFn,mousedownFn:mousedownFn,focusFn:focusFn,clickFn:clickFn,style:CKEDITOR.skin.getIconStyle(iconName,(editor.lang.dir=="rtl"),this.icon,this.iconOffset),arrowHtml:this.hasArrow?btnArrowTpl.output():""};
btnTpl.output(params,output);
if(this.onRender){this.onRender();
}return instance;
},setState:function(state){if(this._.state==state){return false;
}this._.state=state;
var element=CKEDITOR.document.getById(this._.id);
if(element){element.setState(state,"cke_button");
state==CKEDITOR.TRISTATE_DISABLED?element.setAttribute("aria-disabled",true):element.removeAttribute("aria-disabled");
state==CKEDITOR.TRISTATE_ON?element.setAttribute("aria-pressed",true):element.removeAttribute("aria-pressed");
return true;
}else{return false;
}},toFeature:function(editor){if(this._.feature){return this._.feature;
}var feature=this;
if(!this.allowedContent&&!this.requiredContent&&this.command){feature=editor.getCommand(this.command)||feature;
}return this._.feature=feature;
}};
CKEDITOR.ui.prototype.addButton=function(name,definition){this.add(name,CKEDITOR.UI_BUTTON,definition);
};
})();
CKEDITOR.plugins.add("panelbutton",{requires:"button",onLoad:function(){function clickFn(editor){var _=this._;
if(_.state==CKEDITOR.TRISTATE_DISABLED){return;
}this.createPanel(editor);
if(_.on){_.panel.hide();
return;
}_.panel.showBlock(this._.id,this.document.getById(this._.id),4);
}CKEDITOR.ui.panelButton=CKEDITOR.tools.createClass({base:CKEDITOR.ui.button,$:function(definition){var panelDefinition=definition.panel||{};
delete definition.panel;
this.base(definition);
this.document=(panelDefinition.parent&&panelDefinition.parent.getDocument())||CKEDITOR.document;
panelDefinition.block={attributes:panelDefinition.attributes};
panelDefinition.toolbarRelated=true;
this.hasArrow=true;
this.click=clickFn;
this._={panelDefinition:panelDefinition};
},statics:{handler:{create:function(definition){return new CKEDITOR.ui.panelButton(definition);
}}},proto:{createPanel:function(editor){var _=this._;
if(_.panel){return;
}var panelDefinition=this._.panelDefinition,panelBlockDefinition=this._.panelDefinition.block,panelParentElement=panelDefinition.parent||CKEDITOR.document.getBody(),panel=this._.panel=new CKEDITOR.ui.floatPanel(editor,panelParentElement,panelDefinition),block=panel.addBlock(_.id,panelBlockDefinition),me=this;
panel.onShow=function(){if(me.className){this.element.addClass(me.className+"_panel");
}me.setState(CKEDITOR.TRISTATE_ON);
_.on=1;
me.editorFocus&&editor.focus();
if(me.onOpen){me.onOpen();
}};
panel.onHide=function(preventOnClose){if(me.className){this.element.getFirst().removeClass(me.className+"_panel");
}me.setState(me.modes&&me.modes[editor.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
_.on=0;
if(!preventOnClose&&me.onClose){me.onClose();
}};
panel.onEscape=function(){panel.hide(1);
me.document.getById(_.id).focus();
};
if(this.onBlock){this.onBlock(panel,block);
}block.onHide=function(){_.on=0;
me.setState(CKEDITOR.TRISTATE_OFF);
};
}}});
},beforeInit:function(editor){editor.ui.addHandler(CKEDITOR.UI_PANELBUTTON,CKEDITOR.ui.panelButton.handler);
}});
CKEDITOR.UI_PANELBUTTON="panelbutton";
(function(){CKEDITOR.plugins.add("panel",{beforeInit:function(editor){editor.ui.addHandler(CKEDITOR.UI_PANEL,CKEDITOR.ui.panel.handler);
}});
CKEDITOR.UI_PANEL="panel";
CKEDITOR.ui.panel=function(document,definition){if(definition){CKEDITOR.tools.extend(this,definition);
}CKEDITOR.tools.extend(this,{className:"",css:[]});
this.id=CKEDITOR.tools.getNextId();
this.document=document;
this.isFramed=this.forceIFrame||this.css.length;
this._={blocks:{}};
};
CKEDITOR.ui.panel.handler={create:function(definition){return new CKEDITOR.ui.panel(definition);
}};
var panelTpl=CKEDITOR.addTemplate("panel",'<div lang="{langCode}" id="{id}" dir={dir} class="cke cke_reset_all {editorId} cke_panel cke_panel {cls} cke_{dir}" style="z-index:{z-index}" role="presentation">{frame}</div>');
var frameTpl=CKEDITOR.addTemplate("panel-frame",'<iframe id="{id}" class="cke_panel_frame" role="application" frameborder="0" src="{src}"></iframe>');
var frameDocTpl=CKEDITOR.addTemplate("panel-frame-inner",'<!DOCTYPE html><html class="cke_panel_container {env}" dir="{dir}" lang="{langCode}"><head>{docmode}{css}</head><body class="cke_{dir}" style="margin:0;padding:0" onload="{onload}"></body></html>');
CKEDITOR.ui.panel.prototype={render:function(editor,output){this.getHolderElement=function(){var holder=this._.holder;
if(!holder){if(this.isFramed){var iframe=this.document.getById(this.id+"_frame"),parentDiv=iframe.getParent(),doc=iframe.getFrameDocument();
CKEDITOR.env.iOS&&parentDiv.setStyles({overflow:"scroll","-webkit-overflow-scrolling":"touch"});
var onLoad=CKEDITOR.tools.addFunction(CKEDITOR.tools.bind(function(ev){this.isLoaded=true;
if(this.onLoad){this.onLoad();
}},this));
var docMode="";
if(CKEDITOR.env.ie){docMode='<meta http-equiv="X-UA-Compatible" content="IE='+editor.document.$.documentMode+'" />';
}doc.write(frameDocTpl.output(CKEDITOR.tools.extend({docmode:docMode,css:CKEDITOR.tools.buildStyleHtml(this.css),onload:"window.parent.CKEDITOR.tools.callFunction("+onLoad+");"},data)));
var win=doc.getWindow();
win.$.CKEDITOR=CKEDITOR;
doc.on("key"+(CKEDITOR.env.opera?"press":"down"),function(evt){var keystroke=evt.data.getKeystroke(),dir=this.document.getById(this.id).getAttribute("dir");
if(this._.onKeyDown&&this._.onKeyDown(keystroke)===false){evt.data.preventDefault();
return;
}if(keystroke==27||keystroke==(dir=="rtl"?39:37)){if(this.onEscape&&this.onEscape(keystroke)===false){evt.data.preventDefault();
}}},this);
holder=doc.getBody();
holder.unselectable();
CKEDITOR.env.air&&CKEDITOR.tools.callFunction(onLoad);
}else{holder=this.document.getById(this.id);
}this._.holder=holder;
}return holder;
};
var data={editorId:editor.id,id:this.id,langCode:editor.langCode,dir:editor.lang.dir,cls:this.className,frame:"",env:CKEDITOR.env.cssClass,"z-index":editor.config.baseFloatZIndex+1};
if(this.isFramed){data.frame=frameTpl.output({id:this.id+"_frame",src:"javascript:void(document.open(),"+(CKEDITOR.env.isCustomDomain()?"document.domain='"+document.domain+"',":"")+'document.close())">'});
}var html=panelTpl.output(data);
if(output){output.push(html);
}return html;
},addBlock:function(name,block){block=this._.blocks[name]=block instanceof CKEDITOR.ui.panel.block?block:new CKEDITOR.ui.panel.block(this.getHolderElement(),block);
if(!this._.currentBlock){this.showBlock(name);
}return block;
},getBlock:function(name){return this._.blocks[name];
},showBlock:function(name){var blocks=this._.blocks,block=blocks[name],current=this._.currentBlock;
var holder=!this.forceIFrame||CKEDITOR.env.ie?this._.holder:this.document.getById(this.id+"_frame");
if(current){holder.removeAttributes(current.attributes);
current.hide();
}this._.currentBlock=block;
holder.setAttributes(block.attributes);
CKEDITOR.fire("ariaWidget",holder);
block._.focusIndex=-1;
this._.onKeyDown=block.onKeyDown&&CKEDITOR.tools.bind(block.onKeyDown,block);
block.show();
return block;
},destroy:function(){this.element&&this.element.remove();
}};
CKEDITOR.ui.panel.block=CKEDITOR.tools.createClass({$:function(blockHolder,blockDefinition){this.element=blockHolder.append(blockHolder.getDocument().createElement("div",{attributes:{tabIndex:-1,"class":"cke_panel_block",role:"presentation"},styles:{display:"none"}}));
if(blockDefinition){CKEDITOR.tools.extend(this,blockDefinition);
}if(!this.attributes.title){this.attributes.title=this.attributes["aria-label"];
}this.keys={};
this._.focusIndex=-1;
this.element.disableContextMenu();
},_:{markItem:function(index){if(index==-1){return;
}var links=this.element.getElementsByTag("a");
var item=links.getItem(this._.focusIndex=index);
if(CKEDITOR.env.webkit||CKEDITOR.env.opera){item.getDocument().getWindow().focus();
}item.focus();
this.onMark&&this.onMark(item);
}},proto:{show:function(){this.element.setStyle("display","");
},hide:function(){if(!this.onHide||this.onHide.call(this)!==true){this.element.setStyle("display","none");
}},onKeyDown:function(keystroke){var keyAction=this.keys[keystroke];
switch(keyAction){case"next":var index=this._.focusIndex,links=this.element.getElementsByTag("a"),link;
while((link=links.getItem(++index))){if(link.getAttribute("_cke_focus")&&link.$.offsetWidth){this._.focusIndex=index;
link.focus();
break;
}}return false;
case"prev":index=this._.focusIndex;
links=this.element.getElementsByTag("a");
while(index>0&&(link=links.getItem(--index))){if(link.getAttribute("_cke_focus")&&link.$.offsetWidth){this._.focusIndex=index;
link.focus();
break;
}}return false;
case"click":case"mouseup":index=this._.focusIndex;
link=index>=0&&this.element.getElementsByTag("a").getItem(index);
if(link){link.$[keyAction]?link.$[keyAction]():link.$["on"+keyAction]();
}return false;
}return true;
}}});
})();
CKEDITOR.plugins.add("floatpanel",{requires:"panel"});
(function(){var panels={};
function getPanel(editor,doc,parentElement,definition,level){var key=CKEDITOR.tools.genKey(doc.getUniqueId(),parentElement.getUniqueId(),editor.lang.dir,editor.uiColor||"",definition.css||"",level||""),panel=panels[key];
if(!panel){panel=panels[key]=new CKEDITOR.ui.panel(doc,definition);
panel.element=parentElement.append(CKEDITOR.dom.element.createFromHtml(panel.render(editor),doc));
panel.element.setStyles({display:"none",position:"absolute"});
}return panel;
}CKEDITOR.ui.floatPanel=CKEDITOR.tools.createClass({$:function(editor,parentElement,definition,level){definition.forceIFrame=1;
if(definition.toolbarRelated&&editor.elementMode==CKEDITOR.ELEMENT_MODE_INLINE){parentElement=CKEDITOR.document.getById("cke_"+editor.name);
}var doc=parentElement.getDocument(),panel=getPanel(editor,doc,parentElement,definition,level||0),element=panel.element,iframe=element.getFirst(),that=this;
element.disableContextMenu();
element.setAttribute("role","application");
this.element=element;
this._={editor:editor,panel:panel,parentElement:parentElement,definition:definition,document:doc,iframe:iframe,children:[],dir:editor.lang.dir};
editor.on("mode",hide);
function hide(){that.hide();
}},proto:{addBlock:function(name,block){return this._.panel.addBlock(name,block);
},addListBlock:function(name,multiSelect){return this._.panel.addListBlock(name,multiSelect);
},getBlock:function(name){return this._.panel.getBlock(name);
},showBlock:function(name,offsetParent,corner,offsetX,offsetY){var panel=this._.panel,block=panel.showBlock(name);
this.allowBlur(false);
var editable=this._.editor.editable();
this._.returnFocus=editable.hasFocus?editable:new CKEDITOR.dom.element(CKEDITOR.document.$.activeElement);
var element=this.element,iframe=this._.iframe,focused=CKEDITOR.env.ie?iframe:new CKEDITOR.dom.window(iframe.$.contentWindow),doc=element.getDocument(),positionedAncestor=this._.parentElement.getPositionedAncestor(),position=offsetParent.getDocumentPosition(doc),positionedAncestorPosition=positionedAncestor?positionedAncestor.getDocumentPosition(doc):{x:0,y:0},rtl=this._.dir=="rtl",left=position.x+(offsetX||0)-positionedAncestorPosition.x,top=position.y+(offsetY||0)-positionedAncestorPosition.y;
if(rtl&&(corner==1||corner==4)){left+=offsetParent.$.offsetWidth;
}else{if(!rtl&&(corner==2||corner==3)){left+=offsetParent.$.offsetWidth-1;
}}if(corner==3||corner==4){top+=offsetParent.$.offsetHeight-1;
}this._.panel._.offsetParentId=offsetParent.getId();
element.setStyles({top:top+"px",left:0,display:"","z-index":-1});
element.setOpacity(0);
element.getFirst().removeStyle("width");
this._.editor.focusManager.add(focused);
if(!this._.blurSet){CKEDITOR.event.useCapture=true;
focused.on("blur",function(ev){if(!this.allowBlur()||ev.data.getPhase()!=CKEDITOR.EVENT_PHASE_AT_TARGET){return;
}if(this.visible&&!this._.activeChild){delete this._.returnFocus;
this.hide();
}},this);
focused.on("focus",function(){this._.focused=true;
this.hideChild();
this.allowBlur(true);
},this);
CKEDITOR.event.useCapture=false;
this._.blurSet=1;
}panel.onEscape=CKEDITOR.tools.bind(function(keystroke){if(this.onEscape&&this.onEscape(keystroke)===false){return false;
}},this);
CKEDITOR.tools.setTimeout(function(){var panelLoad=CKEDITOR.tools.bind(function(){var target=element;
target.removeStyle("width");
if(block.autoSize){var panelDoc=block.element.getDocument();
var width=(CKEDITOR.env.webkit?block.element:panelDoc.getBody())["$"].scrollWidth;
if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&width>0){width+=(target.$.offsetWidth||0)-(target.$.clientWidth||0)+3;
}width+=10;
target.setStyle("width",width+"px");
var height=block.element.$.scrollHeight;
if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&height>0){height+=(target.$.offsetHeight||0)-(target.$.clientHeight||0)+3;
}target.setStyle("height",height+"px");
panel._.currentBlock.element.setStyle("display","none").removeStyle("display");
}else{target.removeStyle("height");
}if(rtl){left-=element.$.offsetWidth;
}element.setStyle("left",left+"px");
element.removeStyle("z-index");
var panelElement=panel.element,panelWindow=panelElement.getWindow(),rect=element.$.getBoundingClientRect(),viewportSize=panelWindow.getViewPaneSize();
var rectWidth=rect.width||rect.right-rect.left,rectHeight=rect.height||rect.bottom-rect.top;
var spaceAfter=rtl?rect.right:viewportSize.width-rect.left,spaceBefore=rtl?viewportSize.width-rect.right:rect.left;
if(rtl){if(spaceAfter<rectWidth){if(spaceBefore>rectWidth){left+=rectWidth;
}else{if(viewportSize.width>rectWidth){left=left-rect.left;
}else{left=left-rect.right+viewportSize.width;
}}}}else{if(spaceAfter<rectWidth){if(spaceBefore>rectWidth){left-=rectWidth;
}else{if(viewportSize.width>rectWidth){left=left-rect.right+viewportSize.width;
}else{left=left-rect.left;
}}}}var spaceBelow=viewportSize.height-rect.top,spaceAbove=rect.top;
if(spaceBelow<rectHeight){if(spaceAbove>rectHeight){top-=rectHeight;
}else{if(viewportSize.height>rectHeight){top=top-rect.bottom+viewportSize.height;
}else{top=top-rect.top;
}}}if(CKEDITOR.env.ie){var offsetParent=new CKEDITOR.dom.element(element.$.offsetParent),scrollParent=offsetParent;
if(scrollParent.getName()=="html"){scrollParent=scrollParent.getDocument().getBody();
}if(scrollParent.getComputedStyle("direction")=="rtl"){if(CKEDITOR.env.ie8Compat){left-=element.getDocument().getDocumentElement().$.scrollLeft*2;
}else{left-=(offsetParent.$.scrollWidth-offsetParent.$.clientWidth);
}}}var innerElement=element.getFirst(),activePanel;
if((activePanel=innerElement.getCustomData("activePanel"))){activePanel.onHide&&activePanel.onHide.call(this,1);
}innerElement.setCustomData("activePanel",this);
element.setStyles({top:top+"px",left:left+"px"});
element.setOpacity(1);
},this);
panel.isLoaded?panelLoad():panel.onLoad=panelLoad;
CKEDITOR.tools.setTimeout(function(){this.focus();
this.allowBlur(true);
this._.editor.fire("panelShow",this);
this.setDragOff();
},0,this);
},CKEDITOR.env.air?200:0,this);
this.visible=1;
if(this.onShow){this.onShow.call(this);
}},setDragOff:function(){var body=this.getFrameBody();
if(body&&!body.ondragstart){body.ondragstart=function(){return false;
};
}},getFrameBody:function(){var panel=this._;
if(panel&&panel.iframe&&panel.iframe.$){var frame=panel.iframe.$;
return frame.contentDocument||frame.contentWindow;
}},focus:function(){if(CKEDITOR.env.webkit){var active=CKEDITOR.document.getActive();
!active.equals(this._.iframe)&&active.$.blur();
}var focus=this._.lastFocused||this._.iframe.getFrameDocument().getWindow();
focus.focus();
},blur:function(){var doc=this._.iframe.getFrameDocument(),active=doc.getActive();
active.is("a")&&(this._.lastFocused=active);
},hide:function(returnFocus){if(this.visible&&(!this.onHide||this.onHide.call(this)!==true)){this.hideChild();
CKEDITOR.env.gecko&&this._.iframe.getFrameDocument().$.activeElement.blur();
this.element.setStyle("display","none");
this.visible=0;
this.element.getFirst().removeCustomData("activePanel");
var focusReturn=returnFocus&&this._.returnFocus;
if(focusReturn){if(CKEDITOR.env.webkit&&focusReturn.type){focusReturn.getWindow().$.focus();
}focusReturn.focus();
}delete this._.lastFocused;
this._.editor.fire("panelHide",this);
}},isVisible:function(){return this.element&&this.element.getStyle("display")!="none";
},allowBlur:function(allow){var panel=this._.panel;
if(allow!=undefined){panel.allowBlur=allow;
}return panel.allowBlur;
},showAsChild:function(panel,blockName,offsetParent,corner,offsetX,offsetY){if(this._.activeChild==panel&&panel._.panel._.offsetParentId==offsetParent.getId()){return;
}this.hideChild();
panel.onHide=CKEDITOR.tools.bind(function(){CKEDITOR.tools.setTimeout(function(){if(!this._.focused){this.hide();
}},0,this);
},this);
this._.activeChild=panel;
this._.focused=false;
panel.showBlock(blockName,offsetParent,corner,offsetX,offsetY);
this.blur();
if(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat){setTimeout(function(){panel.element.getChild(0).$.style.cssText+="";
},100);
}},hideChild:function(restoreFocus){var activeChild=this._.activeChild;
if(activeChild){delete activeChild.onHide;
delete this._.activeChild;
activeChild.hide();
restoreFocus&&this.focus();
}}}});
CKEDITOR.on("instanceDestroyed",function(){var isLastInstance=CKEDITOR.tools.isEmpty(CKEDITOR.instances);
for(var i in panels){var panel=panels[i];
if(isLastInstance){panel.destroy();
}else{panel.element.hide();
}}isLastInstance&&(panels={});
});
})();
CKEDITOR.plugins.add("colorbutton",{requires:"panelbutton,floatpanel",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"bgcolor,textcolor",init:function(editor){var config=editor.config,lang=editor.lang.colorbutton;
var clickFn;
if(!CKEDITOR.env.hc){addButton("TextColor","fore",lang.textColorTitle,10);
addButton("BGColor","back",lang.bgColorTitle,20);
}function addButton(name,type,title,order){var style=new CKEDITOR.style(config["colorButton_"+type+"Style"]),colorBoxId=CKEDITOR.tools.getNextId()+"_colorBox";
editor.ui.add(name,CKEDITOR.UI_PANELBUTTON,{label:title,title:title,modes:{wysiwyg:1},editorFocus:1,toolbar:"colors,"+order,allowedContent:style,requiredContent:style,panel:{css:CKEDITOR.skin.getPath("editor"),attributes:{role:"listbox","aria-label":lang.panelTitle}},onBlock:function(panel,block){block.autoSize=true;
block.element.addClass("cke_colorblock");
block.element.setHtml(renderColors(panel,type,colorBoxId));
block.element.getDocument().getBody().setStyle("overflow","hidden");
CKEDITOR.ui.fire("ready",this);
var keys=block.keys;
var rtl=editor.lang.dir=="rtl";
keys[rtl?37:39]="next";
keys[40]="next";
keys[9]="next";
keys[rtl?39:37]="prev";
keys[38]="prev";
keys[CKEDITOR.SHIFT+9]="prev";
keys[32]="click";
},onOpen:function(){var selection=editor.getSelection(),block=selection&&selection.getStartElement(),path=editor.elementPath(block),color;
if(!path){return;
}block=path.block||path.blockLimit||editor.document.getBody();
do{color=block&&block.getComputedStyle(type=="back"?"background-color":"color")||"transparent";
}while(type=="back"&&color=="transparent"&&block&&(block=block.getParent()));
if(!color||color=="transparent"){color="#ffffff";
}this._.panel._.iframe.getFrameDocument().getById(colorBoxId).setStyle("background-color",color);
this._.bms=selection.createBookmarks2();
return color;
},onClose:function(){if(this._.bms){editor.getSelection().selectBookmarks(this._.bms);
delete this._.bms;
}}});
}function renderColors(panel,type,colorBoxId){var output=[],colors=config.colorButton_colors.split(",");
var clickFn=CKEDITOR.tools.addFunction(function(color,type){if(color=="?"){var applyColorStyle=arguments.callee;
function onColorDialogClose(evt){this.removeListener("ok",onColorDialogClose);
this.removeListener("cancel",onColorDialogClose);
evt.name=="ok"&&applyColorStyle(this.getContentElement("picker","selectedColor").getValue(),type);
}editor.openDialog("colordialog",function(){this.on("ok",onColorDialogClose);
this.on("cancel",onColorDialogClose);
});
return;
}editor.focus();
panel.hide();
editor.fire("saveSnapshot");
editor.removeStyle(new CKEDITOR.style(config["colorButton_"+type+"Style"],{color:"inherit"}));
if(color){var colorStyle=config["colorButton_"+type+"Style"];
colorStyle.childRule=type=="back"?function(element){return isUnstylable(element);
}:function(element){return !(element.is("a")||element.getElementsByTag("a").count())||isUnstylable(element);
};
editor.applyStyle(new CKEDITOR.style(colorStyle,{color:color}));
}editor.fire("saveSnapshot");
});
output.push('<a class="cke_colorauto" _cke_focus=1 hidefocus=true title="',lang.auto,'" onclick="CKEDITOR.tools.callFunction(',clickFn,",null,'",type,"');return false;\" href=\"javascript:void('",lang.auto,'\')" role="option"><table role="presentation" cellspacing=0 cellpadding=0 width="100%"><tr><td><span class="cke_colorbox" id="',colorBoxId,'"></span></td><td colspan=7 align=center>',lang.auto,'</td></tr></table></a><table role="presentation" cellspacing=0 cellpadding=0 width="100%">');
for(var i=0;
i<colors.length;
i++){if((i%8)===0){output.push("</tr><tr>");
}var parts=colors[i].split("/"),colorName=parts[0],colorCode=parts[1]||colorName;
if(!parts[1]){colorName="#"+colorName.replace(/^(.)(.)(.)$/,"$1$1$2$2$3$3");
}var colorLabel=editor.lang.colorbutton.colors[colorCode]||colorCode;
output.push('<td><a class="cke_colorbox" _cke_focus=1 hidefocus=true title="',colorLabel,'" onclick="CKEDITOR.tools.callFunction(',clickFn,",'",colorName,"','",type,"'); return false;\" href=\"javascript:void('",colorLabel,'\')" role="option"><span class="cke_colorbox" style="background-color:#',colorCode,'"></span></a></td>');
}if(editor.plugins.colordialog&&config.colorButton_enableMore===undefined||config.colorButton_enableMore){output.push('</tr><tr><td colspan=8 align=center><a class="cke_colormore" _cke_focus=1 hidefocus=true title="',lang.more,'" onclick="CKEDITOR.tools.callFunction(',clickFn,",'?','",type,"');return false;\" href=\"javascript:void('",lang.more,"')\"",' role="option">',lang.more,"</a></td>");
}output.push("</tr></table>");
return output.join("");
}function isUnstylable(ele){return(ele.getAttribute("contentEditable")=="false")||ele.getAttribute("data-nostyle");
}}});
CKEDITOR.config.colorButton_colors="000,800000,8B4513,2F4F4F,008080,000080,4B0082,696969,B22222,A52A2A,DAA520,006400,40E0D0,0000CD,800080,808080,F00,FF8C00,FFD700,008000,0FF,00F,EE82EE,A9A9A9,FFA07A,FFA500,FFFF00,00FF00,AFEEEE,ADD8E6,DDA0DD,D3D3D3,FFF0F5,FAEBD7,FFFFE0,F0FFF0,F0FFFF,F0F8FF,E6E6FA,FFF";
CKEDITOR.config.colorButton_foreStyle={element:"span",styles:{color:"#(color)"},overrides:[{element:"font",attributes:{color:null}}]};
CKEDITOR.config.colorButton_backStyle={element:"span",styles:{"background-color":"#(color)"}};
CKEDITOR.plugins.colordialog={requires:"dialog",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",init:function(editor){editor.addCommand("colordialog",new CKEDITOR.dialogCommand("colordialog"));
CKEDITOR.dialog.add("colordialog",this.path+"dialogs/colordialog.js");
editor.getColorFromDialog=function(callback,scope){var onClose=function(evt){releaseHandlers(this);
var color=evt.name=="ok"?this.getValueOf("picker","selectedColor"):null;
callback.call(scope,color);
};
var releaseHandlers=function(dialog){dialog.removeListener("ok",onClose);
dialog.removeListener("cancel",onClose);
};
var bindToDialog=function(dialog){dialog.on("ok",onClose);
dialog.on("cancel",onClose);
};
editor.execCommand("colordialog");
if(editor._.storedDialogs&&editor._.storedDialogs.colordialog){bindToDialog(editor._.storedDialogs.colordialog);
}else{CKEDITOR.on("dialogDefinition",function(e){if(e.data.name!="colordialog"){return;
}var definition=e.data.definition;
e.removeListener();
definition.onLoad=CKEDITOR.tools.override(definition.onLoad,function(orginal){return function(){bindToDialog(this);
definition.onLoad=orginal;
if(typeof orginal=="function"){orginal.call(this);
}};
});
});
}};
}};
CKEDITOR.plugins.add("colordialog",CKEDITOR.plugins.colordialog);
CKEDITOR.plugins.add("menu",{requires:"floatpanel",beforeInit:function(editor){var groups=editor.config.menu_groups.split(","),groupsOrder=editor._.menuGroups={},menuItems=editor._.menuItems={};
for(var i=0;
i<groups.length;
i++){groupsOrder[groups[i]]=i+1;
}editor.addMenuGroup=function(name,order){groupsOrder[name]=order||100;
};
editor.addMenuItem=function(name,definition){if(groupsOrder[definition.group]){menuItems[name]=new CKEDITOR.menuItem(this,name,definition);
}};
editor.addMenuItems=function(definitions){for(var itemName in definitions){this.addMenuItem(itemName,definitions[itemName]);
}};
editor.getMenuItem=function(name){return menuItems[name];
};
editor.removeMenuItem=function(name){delete menuItems[name];
};
}});
(function(){var menuItemSource='<span class="cke_menuitem"><a id="{id}" class="cke_menubutton cke_menubutton__{name} cke_menubutton_{state} {cls}" href="{href}" title="{title}" tabindex="-1"_cke_focus=1 hidefocus="true" role="menuitem" aria-haspopup="{hasPopup}" aria-disabled="{disabled}"';
if(CKEDITOR.env.opera||(CKEDITOR.env.gecko&&CKEDITOR.env.mac)){menuItemSource+=' onkeypress="return false;"';
}if(CKEDITOR.env.gecko){menuItemSource+=' onblur="this.style.cssText = this.style.cssText;"';
}menuItemSource+=' onmouseover="CKEDITOR.tools.callFunction({hoverFn},{index});" onmouseout="CKEDITOR.tools.callFunction({moveOutFn},{index});" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},{index}); return false;">';
menuItemSource+='<span class="cke_menubutton_inner"><span class="cke_menubutton_icon"><span class="cke_button_icon cke_button__{iconName}_icon" style="{iconStyle}"></span></span><span class="cke_menubutton_label">{label}</span>{arrowHtml}</span></a></span>';
var menuArrowSource='<span class="cke_menuarrow"><span>{label}</span></span>';
var menuItemTpl=CKEDITOR.addTemplate("menuItem",menuItemSource),menuArrowTpl=CKEDITOR.addTemplate("menuArrow",menuArrowSource);
CKEDITOR.menu=CKEDITOR.tools.createClass({$:function(editor,definition){definition=this._.definition=definition||{};
this.id=CKEDITOR.tools.getNextId();
this.editor=editor;
this.items=[];
this._.listeners=[];
this._.level=definition.level||1;
var panelDefinition=CKEDITOR.tools.extend({},definition.panel,{css:[CKEDITOR.skin.getPath("editor"),"ckeditor/css/editor-common.css"],level:this._.level-1,block:{}});
var attrs=panelDefinition.block.attributes=(panelDefinition.attributes||{});
!attrs.role&&(attrs.role="menu");
this._.panelDefinition=panelDefinition;
},_:{onShow:function(){var selection=this.editor.getSelection(),start=selection&&selection.getStartElement(),path=this.editor.elementPath(),listeners=this._.listeners;
this.removeAll();
for(var i=0;
i<listeners.length;
i++){var listenerItems=listeners[i](start,selection,path);
if(listenerItems){for(var itemName in listenerItems){var item=this.editor.getMenuItem(itemName);
if(item&&(!item.command||this.editor.getCommand(item.command).state)){item.state=listenerItems[itemName];
this.add(item);
}}}}},onClick:function(item){this.hide();
if(item.onClick){item.onClick();
}else{if(item.command){this.editor.execCommand(item.command);
}}},onEscape:function(keystroke){var parent=this.parent;
if(parent){parent._.panel.hideChild(1);
}else{if(keystroke==27){this.hide(1);
}}return false;
},onHide:function(){this.onHide&&this.onHide();
CKEDITOR.tools.setTimeout(function(){delete this.editor._.bookmarksBeforeMenu;
delete this.editor._.scrollTopBeforeMenu;
},0,this);
this.removeAll();
},showSubMenu:function(index){var menu=this._.subMenu,item=this.items[index];
if(!item||!menu){return;
}var subItemDefs=item.getItems&&item.getItems();
if(!subItemDefs){this._.panel.hideChild(1);
return;
}if(menu){menu.removeAll();
}else{menu=this._.subMenu=new CKEDITOR.menu(this.editor,CKEDITOR.tools.extend({},this._.definition,{level:this._.level+1},true));
menu.parent=this;
menu._.onClick=CKEDITOR.tools.bind(this._.onClick,this);
}for(var subItemName in subItemDefs){var subItem=this.editor.getMenuItem(subItemName);
if(subItem){subItem.state=subItemDefs[subItemName];
menu.add(subItem);
}}var element=this._.panel.getBlock(this.id).element.getDocument().getById(this.id+String(index));
setTimeout(function(){menu.show(element,2);
},0);
}},proto:{add:function(item){if(!item.order){item.order=this.items.length;
}this.items.push(item);
},removeAll:function(){this.items=[];
},show:function(offsetParent,corner,offsetX,offsetY){if(!this.parent){this._.onShow();
if(!this.items.length){return;
}}corner=corner||(this.editor.lang.dir=="rtl"?2:1);
var items=this.items,editor=this.editor,panel=this._.panel,element=this._.element;
if(!panel){panel=this._.panel=new CKEDITOR.ui.floatPanel(this.editor,CKEDITOR.document.getBody(),this._.panelDefinition,this._.level);
panel.onEscape=CKEDITOR.tools.bind(function(keystroke){if(this._.onEscape(keystroke)===false){return false;
}},this);
panel.onShow=function(){var holder=panel._.panel.getHolderElement();
holder.getParent().addClass("cke cke_reset_all");
};
panel.onHide=CKEDITOR.tools.bind(function(){this._.onHide&&this._.onHide();
},this);
var block=panel.addBlock(this.id,this._.panelDefinition.block);
block.autoSize=true;
var keys=block.keys;
keys[40]="next";
keys[9]="next";
keys[38]="prev";
keys[CKEDITOR.SHIFT+9]="prev";
keys[(editor.lang.dir=="rtl"?37:39)]=CKEDITOR.env.ie?"mouseup":"click";
keys[32]=CKEDITOR.env.ie?"mouseup":"click";
CKEDITOR.env.ie&&(keys[13]="mouseup");
element=this._.element=block.element;
var elementDoc=element.getDocument();
elementDoc.getBody().setStyle("overflow","hidden");
elementDoc.getElementsByTag("html").getItem(0).setStyle("overflow","hidden");
this._.itemOverFn=CKEDITOR.tools.addFunction(function(index){clearTimeout(this._.showSubTimeout);
this._.showSubTimeout=CKEDITOR.tools.setTimeout(this._.showSubMenu,editor.config.menu_subMenuDelay||400,this,[index]);
},this);
this._.itemOutFn=CKEDITOR.tools.addFunction(function(index){clearTimeout(this._.showSubTimeout);
},this);
this._.itemClickFn=CKEDITOR.tools.addFunction(function(index){var item=this.items[index];
if(!item){return;
}if(item.state==CKEDITOR.TRISTATE_DISABLED){this.hide(1);
if(this.editor._.bookmarksBeforeMenu){var selection=this.editor.getSelection();
selection&&selection.selectBookmarks(this.editor._.bookmarksBeforeMenu);
this.editor.editable().$.scrollTop=this.editor._.scrollTopBeforeMenu;
delete this.editor._.bookmarksBeforeMenu;
delete this.editor._.scrollTopBeforeMenu;
}return;
}if(item.getItems){this._.showSubMenu(index);
}else{this._.onClick(item);
}},this);
}sortItems(items);
var path=editor.elementPath(),mixedDirCls=(path&&path.direction()!=editor.lang.dir)?" cke_mixed_dir_content":"";
var output=['<div class="cke_menu'+mixedDirCls+'" role="presentation">'];
var length=items.length,lastGroup=length&&items[0].group;
for(var i=0;
i<length;
i++){var item=items[i];
if(lastGroup!=item.group){output.push('<div class="cke_menuseparator" role="separator"></div>');
lastGroup=item.group;
}item.render(this,i,output);
}output.push("</div>");
element.setHtml(output.join(""));
CKEDITOR.ui.fire("ready",this);
if(this.parent){this.parent._.panel.showAsChild(panel,this.id,offsetParent,corner,offsetX,offsetY);
}else{panel.showBlock(this.id,offsetParent,corner,offsetX,offsetY);
}editor.fire("menuShow",[panel]);
},addListener:function(listenerFn){this._.listeners.push(listenerFn);
},removeListeners:function(){this._.listeners=[];
},hide:function(returnFocus){this._.onHide&&this._.onHide();
this._.panel&&this._.panel.hide(returnFocus);
},isVisible:function(){return this._.panel&&this._.panel.isVisible();
}}});
function sortItems(items){items.sort(function(itemA,itemB){if(itemA.group<itemB.group){return -1;
}else{if(itemA.group>itemB.group){return 1;
}}return itemA.order<itemB.order?-1:itemA.order>itemB.order?1:0;
});
}CKEDITOR.menuItem=CKEDITOR.tools.createClass({$:function(editor,name,definition){CKEDITOR.tools.extend(this,definition,{order:0,className:"cke_menubutton__"+name});
this.group=editor._.menuGroups[this.group];
this.editor=editor;
this.name=name;
},proto:{render:function(menu,index,output){var id=menu.id+String(index),state=(typeof this.state=="undefined")?CKEDITOR.TRISTATE_OFF:this.state;
var stateName=state==CKEDITOR.TRISTATE_ON?"on":state==CKEDITOR.TRISTATE_DISABLED?"disabled":"off";
var hasSubMenu=this.getItems;
var arrowLabel="&#"+(this.editor.lang.dir=="rtl"?"9668":"9658")+";";
var iconName=this.name;
if(this.icon&&!(/\./).test(this.icon)){iconName=this.icon;
}var params={id:id,name:this.name,iconName:iconName,label:this.label,cls:this.className||"",state:stateName,hasPopup:hasSubMenu?"true":"false",disabled:state==CKEDITOR.TRISTATE_DISABLED,title:this.label,href:"javascript:void('"+(this.label||"").replace("'")+"')",hoverFn:menu._.itemOverFn,moveOutFn:menu._.itemOutFn,clickFn:menu._.itemClickFn,index:index,iconStyle:CKEDITOR.skin.getIconStyle(iconName,(this.editor.lang.dir=="rtl"),iconName==this.icon?null:this.icon,this.iconOffset),arrowHtml:hasSubMenu?menuArrowTpl.output({label:arrowLabel}):""};
menuItemTpl.output(params,output);
}}});
})();
CKEDITOR.config.menu_groups="clipboard,form,tablecell,tablecellproperties,tablerow,tablecolumn,table,anchor,link,image,flash,checkbox,radio,textfield,hiddenfield,imagebutton,button,select,textarea,div";
CKEDITOR.plugins.add("contextmenu",{requires:"menu",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",onLoad:function(){CKEDITOR.plugins.contextMenu=CKEDITOR.tools.createClass({base:CKEDITOR.menu,$:function(editor){this.base.call(this,editor,{panel:{className:"cke_menu_panel",attributes:{"aria-label":editor.lang.contextmenu.options}}});
},proto:{addTarget:function(element,nativeContextMenuOnCtrl){if(CKEDITOR.env.opera&&!("oncontextmenu" in document.body)){var contextMenuOverrideButton;
element.on("mousedown",function(evt){evt=evt.data;
if(evt.$.button!=2){if(evt.getKeystroke()==CKEDITOR.CTRL+1){element.fire("contextmenu",evt);
}return;
}if(nativeContextMenuOnCtrl&&(CKEDITOR.env.mac?evt.$.metaKey:evt.$.ctrlKey)){return;
}var target=evt.getTarget();
if(!contextMenuOverrideButton){var ownerDoc=target.getDocument();
contextMenuOverrideButton=ownerDoc.createElement("input");
contextMenuOverrideButton.$.type="button";
ownerDoc.getBody().append(contextMenuOverrideButton);
}contextMenuOverrideButton.setAttribute("style","position:absolute;top:"+(evt.$.clientY-2)+"px;left:"+(evt.$.clientX-2)+"px;width:5px;height:5px;opacity:0.01");
});
element.on("mouseup",function(evt){if(contextMenuOverrideButton){contextMenuOverrideButton.remove();
contextMenuOverrideButton=undefined;
element.fire("contextmenu",evt.data);
}});
}element.on("contextmenu",function(event){var domEvent=event.data;
if(nativeContextMenuOnCtrl&&(CKEDITOR.env.webkit?holdCtrlKey:(CKEDITOR.env.mac?domEvent.$.metaKey:domEvent.$.ctrlKey))){return;
}domEvent.preventDefault();
var doc=domEvent.getTarget().getDocument(),offsetParent=domEvent.getTarget().getDocument().getDocumentElement(),fromFrame=!doc.equals(CKEDITOR.document),scroll=doc.getWindow().getScrollPosition(),offsetX=fromFrame?domEvent.$.clientX:domEvent.$.pageX||scroll.x+domEvent.$.clientX,offsetY=fromFrame?domEvent.$.clientY:domEvent.$.pageY||scroll.y+domEvent.$.clientY;
CKEDITOR.tools.setTimeout(function(){this.open(offsetParent,null,offsetX,offsetY);
},CKEDITOR.env.ie?200:0,this);
},this);
if(CKEDITOR.env.opera){element.on("keypress",function(evt){var domEvent=evt.data;
if(domEvent.$.keyCode===0){domEvent.preventDefault();
}});
}if(CKEDITOR.env.webkit){var holdCtrlKey,onKeyDown=function(event){holdCtrlKey=CKEDITOR.env.mac?event.data.$.metaKey:event.data.$.ctrlKey;
},resetOnKeyUp=function(){holdCtrlKey=0;
};
element.on("keydown",onKeyDown);
element.on("keyup",resetOnKeyUp);
element.on("contextmenu",resetOnKeyUp);
}},open:function(offsetParent,corner,offsetX,offsetY){this.editor.focus();
offsetParent=offsetParent||CKEDITOR.document.getDocumentElement();
this.editor.selectionChange(1);
this.show(offsetParent,corner,offsetX,offsetY);
var selection=this.editor.getSelection();
if(selection){this.editor._.bookmarksBeforeMenu=selection.createBookmarks2();
this.editor._.scrollTopBeforeMenu=this.editor.editable().$.scrollTop;
}}}});
},beforeInit:function(editor){var contextMenu=editor.contextMenu=new CKEDITOR.plugins.contextMenu(editor);
editor.on("contentDom",function(){contextMenu.addTarget(editor.editable(),editor.config.browserContextMenuOnCtrl!==false);
});
editor.addCommand("contextMenu",{exec:function(){editor.contextMenu.open(editor.document.getBody());
}});
editor.setKeystroke(CKEDITOR.SHIFT+121,"contextMenu");
editor.setKeystroke(CKEDITOR.CTRL+CKEDITOR.SHIFT+121,"contextMenu");
}});
(function(){var toolbox=function(){this.toolbars=[];
this.focusCommandExecuted=false;
};
toolbox.prototype.focus=function(){for(var t=0,toolbar;
toolbar=this.toolbars[t++];
){for(var i=0,item;
item=toolbar.items[i++];
){if(item.focus){item.focus();
return;
}}}};
var commands={toolbarFocus:{modes:{wysiwyg:1,source:1},readOnly:1,exec:function(editor){if(editor.toolbox){editor.toolbox.focusCommandExecuted=true;
if(CKEDITOR.env.ie||CKEDITOR.env.air){setTimeout(function(){editor.toolbox.focus();
},100);
}else{editor.toolbox.focus();
}}}}};
CKEDITOR.plugins.add("toolbar",{requires:"button",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",init:function(editor){var endFlag;
var itemKeystroke=function(item,keystroke){var next,toolbar;
var rtl=editor.lang.dir=="rtl",toolbarGroupCycling=editor.config.toolbarGroupCycling;
toolbarGroupCycling=toolbarGroupCycling===undefined||toolbarGroupCycling;
switch(keystroke){case 9:case CKEDITOR.SHIFT+9:while(!toolbar||!toolbar.items.length){toolbar=keystroke==9?((toolbar?toolbar.next:item.toolbar.next)||editor.toolbox.toolbars[0]):((toolbar?toolbar.previous:item.toolbar.previous)||editor.toolbox.toolbars[editor.toolbox.toolbars.length-1]);
if(toolbar.items.length){item=toolbar.items[endFlag?(toolbar.items.length-1):0];
while(item&&!item.focus){item=endFlag?item.previous:item.next;
if(!item){toolbar=0;
}}}}if(item){item.focus();
}return false;
case rtl?37:39:case 40:next=item;
do{next=next.next;
if(!next&&toolbarGroupCycling){next=item.toolbar.items[0];
}}while(next&&!next.focus);
if(next){next.focus();
}else{itemKeystroke(item,9);
}return false;
case rtl?39:37:case 38:next=item;
do{next=next.previous;
if(!next&&toolbarGroupCycling){next=item.toolbar.items[item.toolbar.items.length-1];
}}while(next&&!next.focus);
if(next){next.focus();
}else{endFlag=1;
itemKeystroke(item,CKEDITOR.SHIFT+9);
endFlag=0;
}return false;
case 27:editor.focus();
return false;
case 13:case 32:item.execute();
return false;
}return true;
};
editor.on("uiSpace",function(event){if(event.data.space!=editor.config.toolbarLocation){return;
}event.removeListener();
editor.toolbox=new toolbox();
var labelId=CKEDITOR.tools.getNextId();
var output=['<span id="',labelId,'" class="cke_voice_label">',editor.lang.toolbar.toolbars,"</span>",'<span id="'+editor.ui.spaceId("toolbox")+'" class="cke_toolbox" role="group" aria-labelledby="',labelId,'" onmousedown="return false;">'];
var expanded=editor.config.toolbarStartupExpanded!==false,groupStarted,pendingSeparator;
if(editor.config.toolbarCanCollapse&&editor.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE){output.push('<span class="cke_toolbox_main"'+(expanded?">":' style="display:none">'));
}var toolbars=editor.toolbox.toolbars,toolbar=getToolbarConfig(editor);
for(var r=0;
r<toolbar.length;
r++){var toolbarId,toolbarObj=0,toolbarName,row=toolbar[r],items;
if(!row){continue;
}if(groupStarted){output.push("</span>");
groupStarted=0;
pendingSeparator=0;
}if(row==="/"){output.push('<span class="cke_toolbar_break"></span>');
continue;
}items=row.items||row;
for(var i=0;
i<items.length;
i++){var item=items[i],canGroup;
if(item){if(item.type==CKEDITOR.UI_SEPARATOR){pendingSeparator=groupStarted&&item;
continue;
}canGroup=item.canGroup!==false;
if(!toolbarObj){toolbarId=CKEDITOR.tools.getNextId();
toolbarObj={id:toolbarId,items:[]};
toolbarName=row.name&&(editor.lang.toolbar.toolbarGroups[row.name]||row.name);
output.push('<span id="',toolbarId,'" class="cke_toolbar"',(toolbarName?' aria-labelledby="'+toolbarId+'_label"':""),' role="toolbar">');
toolbarName&&output.push('<span id="',toolbarId,'_label" class="cke_voice_label">',toolbarName,"</span>");
output.push('<span class="cke_toolbar_start"></span>');
var index=toolbars.push(toolbarObj)-1;
if(index>0){toolbarObj.previous=toolbars[index-1];
toolbarObj.previous.next=toolbarObj;
}}if(canGroup){if(!groupStarted){output.push('<span class="cke_toolgroup" role="presentation">');
groupStarted=1;
}}else{if(groupStarted){output.push("</span>");
groupStarted=0;
}}function addItem(item){var itemObj=item.render(editor,output);
index=toolbarObj.items.push(itemObj)-1;
if(index>0){itemObj.previous=toolbarObj.items[index-1];
itemObj.previous.next=itemObj;
}itemObj.toolbar=toolbarObj;
itemObj.onkey=itemKeystroke;
itemObj.onfocus=function(){if(!editor.toolbox.focusCommandExecuted){editor.focus();
}};
}if(pendingSeparator){addItem(pendingSeparator);
pendingSeparator=0;
}addItem(item);
}}if(groupStarted){output.push("</span>");
groupStarted=0;
pendingSeparator=0;
}if(toolbarObj){output.push('<span class="cke_toolbar_end"></span></span>');
}}if(editor.config.toolbarCanCollapse){output.push("</span>");
}if(editor.config.toolbarCanCollapse&&editor.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE){var collapserFn=CKEDITOR.tools.addFunction(function(){editor.execCommand("toolbarCollapse");
});
editor.on("destroy",function(){CKEDITOR.tools.removeFunction(collapserFn);
});
editor.addCommand("toolbarCollapse",{readOnly:1,exec:function(editor){var collapser=editor.ui.space("toolbar_collapser"),toolbox=collapser.getPrevious(),contents=editor.ui.space("contents"),toolboxContainer=toolbox.getParent(),contentHeight=parseInt(contents.$.style.height,10),previousHeight=toolboxContainer.$.offsetHeight,minClass="cke_toolbox_collapser_min",collapsed=collapser.hasClass(minClass);
if(!collapsed){toolbox.hide();
collapser.addClass(minClass);
collapser.setAttribute("title",editor.lang.toolbar.toolbarExpand);
}else{toolbox.show();
collapser.removeClass(minClass);
collapser.setAttribute("title",editor.lang.toolbar.toolbarCollapse);
}collapser.getFirst().setText(collapsed?"\u25B2":"\u25C0");
var dy=toolboxContainer.$.offsetHeight-previousHeight;
contents.setStyle("height",(contentHeight-dy)+"px");
editor.fire("resize");
},modes:{wysiwyg:1,source:1}});
editor.setKeystroke(CKEDITOR.ALT+(CKEDITOR.env.ie||CKEDITOR.env.webkit?189:109),"toolbarCollapse");
output.push('<a title="'+(expanded?editor.lang.toolbar.toolbarCollapse:editor.lang.toolbar.toolbarExpand)+'" id="'+editor.ui.spaceId("toolbar_collapser")+'" tabIndex="-1" class="cke_toolbox_collapser');
if(!expanded){output.push(" cke_toolbox_collapser_min");
}output.push('" onclick="CKEDITOR.tools.callFunction('+collapserFn+')">','<span class="cke_arrow">&#9650;</span>',"</a>");
}output.push("</span>");
event.data.html+=output.join("");
});
editor.on("destroy",function(){if(this.toolbox){var toolbars,index=0,i,items,instance;
toolbars=this.toolbox.toolbars;
for(;
index<toolbars.length;
index++){items=toolbars[index].items;
for(i=0;
i<items.length;
i++){instance=items[i];
if(instance.clickFn){CKEDITOR.tools.removeFunction(instance.clickFn);
}if(instance.keyDownFn){CKEDITOR.tools.removeFunction(instance.keyDownFn);
}}}}});
editor.on("uiReady",function(){var toolbox=editor.ui.space("toolbox");
toolbox&&editor.focusManager.add(toolbox,1);
});
editor.addCommand("toolbarFocus",commands.toolbarFocus);
editor.setKeystroke(CKEDITOR.ALT+121,"toolbarFocus");
editor.ui.add("-",CKEDITOR.UI_SEPARATOR,{});
editor.ui.addHandler(CKEDITOR.UI_SEPARATOR,{create:function(){return{render:function(editor,output){output.push('<span class="cke_toolbar_separator" role="separator"></span>');
return{};
}};
}});
}});
function getToolbarConfig(editor){var removeButtons=editor.config.removeButtons;
removeButtons=removeButtons&&removeButtons.split(",");
function buildToolbarConfig(){var lookup=getItemDefinedGroups();
var toolbar=CKEDITOR.tools.clone(editor.config.toolbarGroups)||getPrivateToolbarGroups(editor);
for(var i=0;
i<toolbar.length;
i++){var toolbarGroup=toolbar[i];
if(toolbarGroup=="/"){continue;
}else{if(typeof toolbarGroup=="string"){toolbarGroup=toolbar[i]={name:toolbarGroup};
}}var items,subGroups=toolbarGroup.groups;
if(subGroups){for(var j=0,sub;
j<subGroups.length;
j++){sub=subGroups[j];
items=lookup[sub];
items&&fillGroup(toolbarGroup,items);
}}items=lookup[toolbarGroup.name];
items&&fillGroup(toolbarGroup,items);
}return toolbar;
}function getItemDefinedGroups(){var groups={},itemName,item,itemToolbar,group,order;
for(itemName in editor.ui.items){item=editor.ui.items[itemName];
itemToolbar=item.toolbar||"others";
if(itemToolbar){itemToolbar=itemToolbar.split(",");
group=itemToolbar[0];
order=parseInt(itemToolbar[1]||-1,10);
groups[group]||(groups[group]=[]);
groups[group].push({name:itemName,order:order});
}}for(group in groups){groups[group]=groups[group].sort(function(a,b){return a.order==b.order?0:b.order<0?-1:a.order<0?1:a.order<b.order?-1:1;
});
}return groups;
}function fillGroup(toolbarGroup,uiItems){if(uiItems.length){if(toolbarGroup.items){toolbarGroup.items.push(editor.ui.create("-"));
}else{toolbarGroup.items=[];
}var item,name;
while((item=uiItems.shift())){name=typeof item=="string"?item:item.name;
if(!removeButtons||CKEDITOR.tools.indexOf(removeButtons,name)==-1){item=editor.ui.create(name);
if(!item){continue;
}if(!editor.addFeature(item)){continue;
}toolbarGroup.items.push(item);
}}}}function populateToolbarConfig(config){var toolbar=[],i,group,newGroup;
for(i=0;
i<config.length;
++i){group=config[i];
newGroup={};
if(group=="/"){toolbar.push(group);
}else{if(CKEDITOR.tools.isArray(group)){fillGroup(newGroup,CKEDITOR.tools.clone(group));
toolbar.push(newGroup);
}else{if(group.items){fillGroup(newGroup,CKEDITOR.tools.clone(group.items));
newGroup.name=group.name;
toolbar.push(newGroup);
}}}}return toolbar;
}var toolbar=editor.config.toolbar;
if(typeof toolbar=="string"){toolbar=editor.config["toolbar_"+toolbar];
}return(editor.toolbar=toolbar?populateToolbarConfig(toolbar):buildToolbarConfig());
}CKEDITOR.ui.prototype.addToolbarGroup=function(name,previous,subgroupOf){var toolbarGroups=getPrivateToolbarGroups(this.editor),atStart=previous===0,newGroup={name:name};
if(subgroupOf){subgroupOf=CKEDITOR.tools.search(toolbarGroups,function(group){return group.name==subgroupOf;
});
if(subgroupOf){!subgroupOf.groups&&(subgroupOf.groups=[]);
if(previous){previous=CKEDITOR.tools.indexOf(subgroupOf.groups,previous);
if(previous>=0){subgroupOf.groups.splice(previous+1,0,name);
return;
}}if(atStart){subgroupOf.groups.splice(0,0,name);
}else{subgroupOf.groups.push(name);
}return;
}else{previous=null;
}}if(previous){previous=CKEDITOR.tools.indexOf(toolbarGroups,function(group){return group.name==previous;
});
}if(atStart){toolbarGroups.splice(0,0,name);
}else{if(typeof previous=="number"){toolbarGroups.splice(previous+1,0,newGroup);
}else{toolbarGroups.push(name);
}}};
function getPrivateToolbarGroups(editor){return editor._.toolbarGroups||(editor._.toolbarGroups=[{name:"document",groups:["mode","document","doctools"]},{name:"clipboard",groups:["clipboard","undo"]},{name:"editing",groups:["find","selection","spellchecker"]},{name:"forms"},"/",{name:"basicstyles",groups:["basicstyles","cleanup"]},{name:"paragraph",groups:["list","indent","blocks","align"]},{name:"links"},{name:"insert"},"/",{name:"styles"},{name:"colors"},{name:"tools"},{name:"others"},{name:"about"}]);
}})();
CKEDITOR.UI_SEPARATOR="separator";
CKEDITOR.config.toolbarLocation="top";
(function(){CKEDITOR.plugins.add("enterkey",{requires:"indent",init:function(editor){editor.addCommand("enter",{modes:{wysiwyg:1},editorFocus:false,exec:function(editor){enter(editor);
}});
editor.addCommand("shiftEnter",{modes:{wysiwyg:1},editorFocus:false,exec:function(editor){shiftEnter(editor);
}});
editor.setKeystroke([[13,"enter"],[CKEDITOR.SHIFT+13,"shiftEnter"]]);
}});
var whitespaces=CKEDITOR.dom.walker.whitespaces(),bookmark=CKEDITOR.dom.walker.bookmark();
CKEDITOR.plugins.enterkey={enterBlock:function(editor,mode,range,forceMode){range=range||getRange(editor);
if(!range){return;
}var doc=range.document;
var atBlockStart=range.checkStartOfBlock(),atBlockEnd=range.checkEndOfBlock(),path=editor.elementPath(range.startContainer),block=path.block;
if(atBlockStart&&atBlockEnd){if(block&&(block.is("li")||block.getParent().is("li"))){editor.execCommand("outdent");
return;
}if(block&&block.getParent().is("blockquote")){block.breakParent(block.getParent());
if(!block.getPrevious().getFirst(CKEDITOR.dom.walker.invisible(1))){block.getPrevious().remove();
}if(!block.getNext().getFirst(CKEDITOR.dom.walker.invisible(1))){block.getNext().remove();
}range.moveToElementEditStart(block);
range.select();
return;
}}else{if(block&&block.is("pre")){if(!atBlockEnd){enterBr(editor,mode,range,forceMode);
return;
}}}var blockTag=(mode==CKEDITOR.ENTER_DIV?"div":"p");
var splitInfo=range.splitBlock(blockTag);
if(!splitInfo){return;
}var previousBlock=splitInfo.previousBlock,nextBlock=splitInfo.nextBlock;
var isStartOfBlock=splitInfo.wasStartOfBlock,isEndOfBlock=splitInfo.wasEndOfBlock;
var node;
if(nextBlock){node=nextBlock.getParent();
if(node.is("li")){nextBlock.breakParent(node);
nextBlock.move(nextBlock.getNext(),1);
}}else{if(previousBlock&&(node=previousBlock.getParent())&&node.is("li")){previousBlock.breakParent(node);
node=previousBlock.getNext();
range.moveToElementEditStart(node);
previousBlock.move(previousBlock.getPrevious());
}}if(!isStartOfBlock&&!isEndOfBlock){if(nextBlock.is("li")){var walkerRange=range.clone();
walkerRange.selectNodeContents(nextBlock);
var walker=new CKEDITOR.dom.walker(walkerRange);
walker.evaluator=function(node){return !(bookmark(node)||whitespaces(node)||node.type==CKEDITOR.NODE_ELEMENT&&node.getName() in CKEDITOR.dtd.$inline&&!(node.getName() in CKEDITOR.dtd.$empty));
};
node=walker.next();
if(node&&node.type==CKEDITOR.NODE_ELEMENT&&node.is("ul","ol")){(CKEDITOR.env.ie?doc.createText("\xa0"):doc.createElement("br")).insertBefore(node);
}}if(nextBlock){range.moveToElementEditStart(nextBlock);
}}else{var newBlock,newBlockDir;
if(previousBlock){if(previousBlock.is("li")||!(headerTagRegex.test(previousBlock.getName())||previousBlock.is("pre"))){newBlock=previousBlock.clone();
}}else{if(nextBlock){newBlock=nextBlock.clone();
}}if(!newBlock){if(node&&node.is("li")){newBlock=node;
}else{newBlock=doc.createElement(blockTag);
if(previousBlock&&(newBlockDir=previousBlock.getDirection())){newBlock.setAttribute("dir",newBlockDir);
}}}else{if(forceMode&&!newBlock.is("li")){newBlock.renameNode(blockTag);
}}var elementPath=splitInfo.elementPath;
if(elementPath){for(var i=0,len=elementPath.elements.length;
i<len;
i++){var element=elementPath.elements[i];
if(element.equals(elementPath.block)||element.equals(elementPath.blockLimit)){break;
}if(CKEDITOR.dtd.$removeEmpty[element.getName()]){element=element.clone();
newBlock.moveChildren(element);
newBlock.append(element);
}}}if(!CKEDITOR.env.ie){newBlock.appendBogus();
}if(!newBlock.getParent()){range.insertNode(newBlock);
}newBlock.is("li")&&newBlock.removeAttribute("value");
if(CKEDITOR.env.ie&&isStartOfBlock&&(!isEndOfBlock||!previousBlock.getChildCount())){range.moveToElementEditStart(isEndOfBlock?previousBlock:newBlock);
range.select();
}range.moveToElementEditStart(isStartOfBlock&&!isEndOfBlock?nextBlock:newBlock);
}range.select();
range.scrollIntoView();
},enterBr:function(editor,mode,range,forceMode){range=range||getRange(editor);
if(!range){return;
}var doc=range.document;
var blockTag=(mode==CKEDITOR.ENTER_DIV?"div":"p");
var isEndOfBlock=range.checkEndOfBlock();
var elementPath=new CKEDITOR.dom.elementPath(editor.getSelection().getStartElement());
var startBlock=elementPath.block,startBlockTag=startBlock&&elementPath.block.getName();
var isPre=false;
if(!forceMode&&startBlockTag=="li"){enterBlock(editor,mode,range,forceMode);
return;
}if(!forceMode&&isEndOfBlock&&headerTagRegex.test(startBlockTag)){var newBlock,newBlockDir;
if((newBlockDir=startBlock.getDirection())){newBlock=doc.createElement("div");
newBlock.setAttribute("dir",newBlockDir);
newBlock.insertAfter(startBlock);
range.setStart(newBlock,0);
}else{doc.createElement("br").insertAfter(startBlock);
if(CKEDITOR.env.gecko){doc.createText("").insertAfter(startBlock);
}range.setStartAt(startBlock.getNext(),CKEDITOR.env.ie?CKEDITOR.POSITION_BEFORE_START:CKEDITOR.POSITION_AFTER_START);
}}else{var lineBreak;
if(startBlockTag=="pre"&&CKEDITOR.env.ie&&CKEDITOR.env.version<8){lineBreak=doc.createText("\r");
}else{lineBreak=doc.createElement("br");
}range.deleteContents();
range.insertNode(lineBreak);
if(CKEDITOR.env.ie){range.setStartAt(lineBreak,CKEDITOR.POSITION_AFTER_END);
}else{doc.createText("\ufeff").insertAfter(lineBreak);
if(isEndOfBlock){lineBreak.getParent().appendBogus();
}lineBreak.getNext().$.nodeValue="";
range.setStartAt(lineBreak.getNext(),CKEDITOR.POSITION_AFTER_START);
}}range.collapse(true);
range.select();
range.scrollIntoView();
}};
var plugin=CKEDITOR.plugins.enterkey,enterBr=plugin.enterBr,enterBlock=plugin.enterBlock,headerTagRegex=/^h[1-6]$/;
function shiftEnter(editor){if(editor.mode!="wysiwyg"){return false;
}return enter(editor,editor.config.shiftEnterMode,1);
}function enter(editor,mode,forceMode){forceMode=editor.config.forceEnterMode||forceMode;
if(editor.mode!="wysiwyg"){return false;
}var ieselection=editor.document.$.selection.createRange();
if(ieselection.moveStart&&ieselection.parentElement().isContentEditable==false){return false;
}if(!mode){mode=editor.config.enterMode;
}var path=editor.elementPath();
if(!path.isContextFor("p")){mode=CKEDITOR.ENTER_BR;
forceMode=1;
}editor.fire("saveSnapshot");
if(mode==CKEDITOR.ENTER_BR){enterBr(editor,mode,null,forceMode);
}else{enterBlock(editor,mode,null,forceMode);
}editor.fire("saveSnapshot");
return true;
}function getRange(editor){var selection=editor.getSelection();
if(!selection){return null;
}var ranges=selection.getRanges(true);
for(var i=ranges.length-1;
i>0;
i--){ranges[i].deleteContents();
}return ranges[0];
}})();
CKEDITOR.plugins.add("listblock",{requires:"panel",onLoad:function(){var list=CKEDITOR.addTemplate("panel-list",'<ul role="presentation" class="cke_panel_list">{items}</ul>'),listItem=CKEDITOR.addTemplate("panel-list-item",'<li id="{id}" class="cke_panel_listItem" role=presentation><a id="{id}_option" _cke_focus=1 hidefocus=true title="{title}" href="javascript:void(\'{val}\')"  {onclick}="CKEDITOR.tools.callFunction({clickFn},\'{val}\'); return false;" role="option">{text}</a></li>'),listGroup=CKEDITOR.addTemplate("panel-list-group",'<h1 id="{id}" class="cke_panel_grouptitle" role="presentation" >{label}</h1>');
CKEDITOR.ui.panel.prototype.addListBlock=function(name,definition){return this.addBlock(name,new CKEDITOR.ui.listBlock(this.getHolderElement(),definition));
};
CKEDITOR.ui.listBlock=CKEDITOR.tools.createClass({base:CKEDITOR.ui.panel.block,$:function(blockHolder,blockDefinition){blockDefinition=blockDefinition||{};
var attribs=blockDefinition.attributes||(blockDefinition.attributes={});
(this.multiSelect=!!blockDefinition.multiSelect)&&(attribs["aria-multiselectable"]=true);
!attribs.role&&(attribs.role="listbox");
this.base.apply(this,arguments);
var keys=this.keys;
keys[40]="next";
keys[9]="next";
keys[38]="prev";
keys[CKEDITOR.SHIFT+9]="prev";
keys[32]=CKEDITOR.env.ie?"mouseup":"click";
CKEDITOR.env.ie&&(keys[13]="mouseup");
this._.pendingHtml=[];
this._.pendingList=[];
this._.items={};
this._.groups={};
},_:{close:function(){if(this._.started){var output=list.output({items:this._.pendingList.join("")});
this._.pendingList=[];
this._.pendingHtml.push(output);
delete this._.started;
}},getClick:function(){if(!this._.click){this._.click=CKEDITOR.tools.addFunction(function(value){var marked=this.toggle(value);
if(this.onClick){this.onClick(value,marked);
}},this);
}return this._.click;
}},proto:{add:function(value,html,title){var id=CKEDITOR.tools.getNextId();
if(!this._.started){this._.started=1;
this._.size=this._.size||0;
}this._.items[value]=id;
var data={id:id,val:value,onclick:CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick",clickFn:this._.getClick(),title:title||value,text:html||value};
this._.pendingList.push(listItem.output(data));
},startGroup:function(title){this._.close();
var id=CKEDITOR.tools.getNextId();
this._.groups[title]=id;
this._.pendingHtml.push(listGroup.output({id:id,label:title}));
},commit:function(){this._.close();
this.element.appendHtml(this._.pendingHtml.join(""));
delete this._.size;
this._.pendingHtml=[];
},toggle:function(value){var isMarked=this.isMarked(value);
if(isMarked){this.unmark(value);
}else{this.mark(value);
}return !isMarked;
},hideGroup:function(groupTitle){var group=this.element.getDocument().getById(this._.groups[groupTitle]),list=group&&group.getNext();
if(group){group.setStyle("display","none");
if(list&&list.getName()=="ul"){list.setStyle("display","none");
}}},hideItem:function(value){this.element.getDocument().getById(this._.items[value]).setStyle("display","none");
},showAll:function(){var items=this._.items,groups=this._.groups,doc=this.element.getDocument();
for(var value in items){doc.getById(items[value]).setStyle("display","");
}for(var title in groups){var group=doc.getById(groups[title]),list=group.getNext();
group.setStyle("display","");
if(list&&list.getName()=="ul"){list.setStyle("display","");
}}},mark:function(value){if(!this.multiSelect){this.unmarkAll();
}var itemId=this._.items[value],item=this.element.getDocument().getById(itemId);
item.addClass("cke_selected");
this.element.getDocument().getById(itemId+"_option").setAttribute("aria-selected",true);
this.onMark&&this.onMark(item);
},unmark:function(value){var doc=this.element.getDocument(),itemId=this._.items[value],item=doc.getById(itemId);
item.removeClass("cke_selected");
doc.getById(itemId+"_option").removeAttribute("aria-selected");
this.onUnmark&&this.onUnmark(item);
},unmarkAll:function(){var items=this._.items,doc=this.element.getDocument();
for(var value in items){var itemId=items[value];
doc.getById(itemId).removeClass("cke_selected");
doc.getById(itemId+"_option").removeAttribute("aria-selected");
}this.onUnmark&&this.onUnmark();
},isMarked:function(value){return this.element.getDocument().getById(this._.items[value]).hasClass("cke_selected");
},focus:function(value){this._.focusIndex=-1;
if(value){var selected=this.element.getDocument().getById(this._.items[value]).getFirst();
var links=this.element.getElementsByTag("a"),link,i=-1;
while((link=links.getItem(++i))){if(link.equals(selected)){this._.focusIndex=i;
break;
}}setTimeout(function(){selected.focus();
},0);
}}}});
}});
CKEDITOR.plugins.add("richcombo",{requires:"floatpanel,listblock,button",beforeInit:function(editor){editor.ui.addHandler(CKEDITOR.UI_RICHCOMBO,CKEDITOR.ui.richCombo.handler);
}});
(function(){var template='<span id="{id}" class="cke_combo cke_combo__{name} {cls}" role="presentation"><span id="{id}_label" class="cke_combo_label">{label}</span><a class="cke_combo_button" hidefocus=true title="{title}" tabindex="-1"'+(CKEDITOR.env.gecko&&CKEDITOR.env.version>=10900&&!CKEDITOR.env.hc?"":'" href="javascript:void(\'{titleJs}\')"')+' hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="true"';
if(CKEDITOR.env.opera||(CKEDITOR.env.gecko&&CKEDITOR.env.mac)){template+=' onkeypress="return false;"';
}if(CKEDITOR.env.gecko){template+=' onblur="this.style.cssText = this.style.cssText;"';
}template+=' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event,this);" onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);"  onfocus="return CKEDITOR.tools.callFunction({focusFn},event);" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span id="{id}_text" class="cke_combo_text cke_combo_inlinelabel">{label}</span><span class="cke_combo_open"><span class="cke_combo_arrow">'+(CKEDITOR.env.hc?"&#9660;":CKEDITOR.env.air?"&nbsp;":"")+"</span></span></a></span>";
var rcomboTpl=CKEDITOR.addTemplate("combo",template);
CKEDITOR.UI_RICHCOMBO="richcombo";
CKEDITOR.ui.richCombo=CKEDITOR.tools.createClass({$:function(definition){CKEDITOR.tools.extend(this,definition,{canGroup:false,title:definition.label,modes:{wysiwyg:1},editorFocus:1});
var panelDefinition=this.panel||{};
delete this.panel;
this.id=CKEDITOR.tools.getNextNumber();
this.document=(panelDefinition.parent&&panelDefinition.parent.getDocument())||CKEDITOR.document;
panelDefinition.className="cke_combopanel";
panelDefinition.block={multiSelect:panelDefinition.multiSelect,attributes:panelDefinition.attributes};
panelDefinition.toolbarRelated=true;
this._={panelDefinition:panelDefinition,items:{}};
},proto:{renderHtml:function(editor){var output=[];
this.render(editor,output);
return output.join("");
},render:function(editor,output){var env=CKEDITOR.env;
var id="cke_"+this.id;
var clickFn=CKEDITOR.tools.addFunction(function(el){if(selLocked){editor.unlockSelection(1);
selLocked=0;
}instance.execute(el);
},this);
var combo=this;
var instance={id:id,combo:this,focus:function(){var element=CKEDITOR.document.getById(id).getChild(1);
element.focus();
},execute:function(el){var _=combo._;
if(_.state==CKEDITOR.TRISTATE_DISABLED){return;
}combo.createPanel(editor);
if(_.on){_.panel.hide();
return;
}combo.commit();
var value=combo.getValue();
if(value){_.list.mark(value);
}else{_.list.unmarkAll();
}_.panel.showBlock(combo.id,new CKEDITOR.dom.element(el),4);
},clickFn:clickFn};
function updateState(){var state=this.modes[editor.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED;
this.setState(editor.readOnly&&!this.readOnly?CKEDITOR.TRISTATE_DISABLED:state);
this.setValue("");
}editor.on("mode",updateState,this);
!this.readOnly&&editor.on("readOnly",updateState,this);
var keyDownFn=CKEDITOR.tools.addFunction(function(ev,element){ev=new CKEDITOR.dom.event(ev);
var keystroke=ev.getKeystroke();
switch(keystroke){case 13:case 32:case 40:CKEDITOR.tools.callFunction(clickFn,element);
break;
default:instance.onkey(instance,keystroke);
}ev.preventDefault();
});
var focusFn=CKEDITOR.tools.addFunction(function(){instance.onfocus&&instance.onfocus();
});
var selLocked=0;
var mouseDownFn=CKEDITOR.tools.addFunction(function(){if(CKEDITOR.env.opera){var edt=editor.editable();
if(edt.isInline()&&edt.hasFocus){editor.lockSelection();
selLocked=1;
}}});
instance.keyDownFn=keyDownFn;
var params={id:id,name:this.name||this.command,label:this.label,title:this.title,cls:this.className||"",titleJs:env.gecko&&env.version>=10900&&!env.hc?"":(this.title||"").replace("'",""),keydownFn:keyDownFn,mousedownFn:mouseDownFn,focusFn:focusFn,clickFn:clickFn};
rcomboTpl.output(params,output);
if(this.onRender){this.onRender();
}return instance;
},createPanel:function(editor){if(this._.panel){return;
}var panelDefinition=this._.panelDefinition,panelBlockDefinition=this._.panelDefinition.block,panelParentElement=panelDefinition.parent||CKEDITOR.document.getBody(),namedPanelCls="cke_combopanel__"+this.name,panel=new CKEDITOR.ui.floatPanel(editor,panelParentElement,panelDefinition),list=panel.addListBlock(this.id,panelBlockDefinition),me=this;
panel.onShow=function(){this.element.addClass(namedPanelCls);
me.setState(CKEDITOR.TRISTATE_ON);
var sel=editor.getSelection();
if(sel&&!sel.isLocked&&sel.getRanges().length>0){var range=sel.getRanges()[0];
var start=range.startContainer.type===CKEDITOR.NODE_TEXT?range.startContainer.getParent().$:range.startContainer.$;
var footnoteRefNumElem=$(start).closest(".taggedtextnumber");
var footWrap=$(start).closest(".ddfontpropwrapper");
if(start!=null&&typeof start!="undefined"&&range.collapsed==true&&footnoteRefNumElem.length>0){DDCOMMON.moveRangeWhenAtBoundary(footnoteRefNumElem[0],editor);
}}me._.on=1;
me.editorFocus&&editor.focus();
me._.bms=editor.getSelection().createBookmarks2();
if(me.onOpen){me.onOpen();
}};
panel.onHide=function(preventOnClose){this.element.removeClass(namedPanelCls);
me.setState(me.modes&&me.modes[editor.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
me._.on=0;
if(!preventOnClose&&me.onClose){me.onClose();
}};
panel.onEscape=function(){panel.hide(1);
};
list.onClick=function(value,marked){if(me._.bms){editor.getSelection().selectBookmarks(me._.bms);
delete me._.bms;
}if(me.onClick){me.onClick.call(me,value,marked);
}panel.hide();
};
this._.panel=panel;
this._.list=list;
panel.getBlock(this.id).onHide=function(){me._.on=0;
me.setState(CKEDITOR.TRISTATE_OFF);
};
if(this.init){this.init();
}},setValue:function(value,text){this._.value=value;
var textElement=this.document.getById("cke_"+this.id+"_text");
if(textElement){if(!(value||text)){text=this.label;
textElement.addClass("cke_combo_inlinelabel");
}else{textElement.removeClass("cke_combo_inlinelabel");
}textElement.setText(typeof text!="undefined"?text:value);
}},getValue:function(){return this._.value||"";
},unmarkAll:function(){this._.list.unmarkAll();
},mark:function(value){this._.list.mark(value);
},hideItem:function(value){this._.list.hideItem(value);
},hideGroup:function(groupTitle){this._.list.hideGroup(groupTitle);
},showAll:function(){this._.list.showAll();
},add:function(value,html,text){this._.items[value]=text||value;
this._.list.add(value,html,text);
},startGroup:function(title){this._.list.startGroup(title);
},commit:function(){if(!this._.committed){this._.list.commit();
this._.committed=1;
CKEDITOR.ui.fire("ready",this);
}this._.committed=1;
},setState:function(state){if(this._.state==state){return;
}var el=this.document.getById("cke_"+this.id);
el.setState(state,"cke_combo");
state==CKEDITOR.TRISTATE_DISABLED?el.setAttribute("aria-disabled",true):el.removeAttribute("aria-disabled");
this._.state=state;
},enable:function(){if(this._.state==CKEDITOR.TRISTATE_DISABLED){this.setState(this._.lastState);
}},disable:function(){if(this._.state!=CKEDITOR.TRISTATE_DISABLED){this._.lastState=this._.state;
this.setState(CKEDITOR.TRISTATE_DISABLED);
}}},statics:{handler:{create:function(definition){return new CKEDITOR.ui.richCombo(definition);
}}}});
CKEDITOR.ui.prototype.addRichCombo=function(name,definition){this.add(name,CKEDITOR.UI_RICHCOMBO,definition);
};
})();
(function(){function addCombo(editor,comboName,styleType,lang,entries,defaultLabel,styleDefinition,order){var config=editor.config,style=new CKEDITOR.style(styleDefinition);
var names=entries.split(";"),values=[];
var styles={};
for(var i=0;
i<names.length;
i++){var parts=names[i];
if(parts){parts=parts.split("/");
var vars={},name=names[i]=parts[0];
vars[styleType]=values[i]=parts[1]||name;
styles[name]=new CKEDITOR.style(styleDefinition,vars);
styles[name]._.definition.name=name;
}else{names.splice(i--,1);
}}editor.ui.addRichCombo(comboName,{label:lang.label,title:lang.panelTitle,toolbar:"styles,"+order,allowedContent:style,requiredContent:style,panel:{css:[CKEDITOR.skin.getPath("editor")].concat(config.contentsCss),multiSelect:false,attributes:{"aria-label":lang.panelTitle}},init:function(){this.startGroup(lang.panelTitle);
for(var i=0;
i<names.length;
i++){var name=names[i];
this.add(name,styles[name].buildPreview(),name);
}},onClick:function(value){editor.focus();
editor.fire("saveSnapshot");
var style=styles[value];
editor.applyStyle(style);
editor.fire("saveSnapshot");
},onRender:function(){editor.on("selectionChange",function(ev){var currentValue=this.getValue();
var elementPath=ev.data.path,elements=elementPath.elements;
for(var i=0,element;
i<elements.length;
i++){element=elements[i];
for(var value in styles){if(styles[value].checkElementMatch(element,true)){if(value!=currentValue){this.setValue(value);
}return;
}}}this.setValue("",defaultLabel);
},this);
}});
}CKEDITOR.plugins.add("font",{requires:"richcombo",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",init:function(editor){var config=editor.config;
addCombo(editor,"Font","family",editor.lang.font,config.font_names,config.font_defaultLabel,config.font_style,30);
addCombo(editor,"FontSize","size",editor.lang.font.fontSize,config.fontSize_sizes,config.fontSize_defaultLabel,config.fontSize_style,40);
}});
})();
CKEDITOR.config.font_names="Arial/Arial, Helvetica, sans-serif;Comic Sans MS/Comic Sans MS, cursive;Courier New/Courier New, Courier, monospace;Georgia/Georgia, serif;Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;Tahoma/Tahoma, Geneva, sans-serif;Times New Roman/Times New Roman, Times, serif;Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;Verdana/Verdana, Geneva, sans-serif";
CKEDITOR.config.font_defaultLabel="";
CKEDITOR.config.font_style={element:"span",styles:{"font-family":"#(family)"},overrides:[{element:"font",attributes:{face:null}}]};
CKEDITOR.config.fontSize_sizes="8/8px;9/9px;10/10px;11/11px;12/12px;14/14px;16/16px;18/18px;20/20px;22/22px;24/24px;26/26px;28/28px;36/36px;48/48px;72/72px";
CKEDITOR.config.fontSize_defaultLabel="";
CKEDITOR.config.fontSize_style={element:"span",styles:{"font-size":"#(size)"},overrides:[{element:"font",attributes:{size:null}}]};
CKEDITOR.plugins.add("format",{requires:"richcombo",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",init:function(editor){if(editor.blockless){return;
}var config=editor.config,lang=editor.lang.format;
var tags=config.format_tags.split(";");
var styles={},stylesCount=0,allowedContent=[];
for(var i=0;
i<tags.length;
i++){var tag=tags[i];
var style=new CKEDITOR.style(config["format_"+tag]);
if(!editor.filter.customConfig||editor.filter.check(style)){stylesCount++;
styles[tag]=style;
styles[tag]._.enterMode=editor.config.enterMode;
allowedContent.push(style);
}}if(stylesCount===0){return;
}editor.ui.addRichCombo("Format",{label:lang.label,title:lang.panelTitle,toolbar:"styles,20",allowedContent:allowedContent,panel:{css:[CKEDITOR.skin.getPath("editor")].concat(config.contentsCss),multiSelect:false,attributes:{"aria-label":lang.panelTitle}},init:function(){this.startGroup(lang.panelTitle);
for(var tag in styles){var label=lang["tag_"+tag];
this.add(tag,styles[tag].buildPreview(label),label);
}},onClick:function(value){editor.focus();
editor.fire("saveSnapshot");
var style=styles[value],elementPath=editor.elementPath();
editor[style.checkActive(elementPath)?"removeStyle":"applyStyle"](style);
setTimeout(function(){editor.fire("saveSnapshot");
},0);
},onRender:function(){editor.on("selectionChange",function(ev){var currentTag=this.getValue(),elementPath=ev.data.path,isEnabled=!editor.readOnly&&elementPath.isContextFor("p");
this[isEnabled?"enable":"disable"]();
if(isEnabled){for(var tag in styles){if(styles[tag].checkActive(elementPath)){if(tag!=currentTag){this.setValue(tag,editor.lang.format["tag_"+tag]);
}return;
}}this.setValue("");
}},this);
}});
}});
CKEDITOR.config.format_tags="p;h1;h2;h3;h4;h5;h6;pre;address;div";
CKEDITOR.config.format_p={element:"p"};
CKEDITOR.config.format_div={element:"div"};
CKEDITOR.config.format_pre={element:"pre"};
CKEDITOR.config.format_address={element:"address"};
CKEDITOR.config.format_h1={element:"h1"};
CKEDITOR.config.format_h2={element:"h2"};
CKEDITOR.config.format_h3={element:"h3"};
CKEDITOR.config.format_h4={element:"h4"};
CKEDITOR.config.format_h5={element:"h5"};
CKEDITOR.config.format_h6={element:"h6"};
CKEDITOR.plugins.add("htmlwriter",{init:function(editor){var writer=new CKEDITOR.htmlWriter();
writer.forceSimpleAmpersand=editor.config.forceSimpleAmpersand;
writer.indentationChars=editor.config.dataIndentationChars||"\t";
editor.dataProcessor.writer=writer;
}});
CKEDITOR.htmlWriter=CKEDITOR.tools.createClass({base:CKEDITOR.htmlParser.basicWriter,$:function(){this.base();
this.indentationChars="\t";
this.selfClosingEnd=" />";
this.lineBreakChars="\n";
this.sortAttributes=1;
this._.indent=0;
this._.indentation="";
this._.inPre=0;
this._.rules={};
var dtd=CKEDITOR.dtd;
for(var e in CKEDITOR.tools.extend({},dtd.$nonBodyContent,dtd.$block,dtd.$listItem,dtd.$tableContent)){this.setRules(e,{indent:!dtd[e]["#"],breakBeforeOpen:1,breakBeforeClose:!dtd[e]["#"],breakAfterClose:1,needsSpace:(e in dtd.$block)&&!(e in {li:1,dt:1,dd:1})});
}this.setRules("br",{breakAfterOpen:1});
this.setRules("title",{indent:0,breakAfterOpen:0});
this.setRules("style",{indent:0,breakBeforeClose:1});
this.setRules("pre",{breakAfterOpen:1,indent:0});
},proto:{openTag:function(tagName,attributes){var rules=this._.rules[tagName];
if(this._.afterCloser&&rules&&rules.needsSpace&&this._.needsSpace){this._.output.push("\n");
}if(this._.indent){this.indentation();
}else{if(rules&&rules.breakBeforeOpen){this.lineBreak();
this.indentation();
}}this._.output.push("<",tagName);
this._.afterCloser=0;
},openTagClose:function(tagName,isSelfClose){var rules=this._.rules[tagName];
if(isSelfClose){this._.output.push(this.selfClosingEnd);
if(rules&&rules.breakAfterClose){this._.needsSpace=rules.needsSpace;
}}else{this._.output.push(">");
if(rules&&rules.indent){this._.indentation+=this.indentationChars;
}}if(rules&&rules.breakAfterOpen){this.lineBreak();
}tagName=="pre"&&(this._.inPre=1);
},attribute:function(attName,attValue){if(typeof attValue=="string"){this.forceSimpleAmpersand&&(attValue=attValue.replace(/&amp;/g,"&"));
attValue=CKEDITOR.tools.htmlEncodeAttr(attValue);
}this._.output.push(" ",attName,'="',attValue,'"');
},closeTag:function(tagName){var rules=this._.rules[tagName];
if(rules&&rules.indent){this._.indentation=this._.indentation.substr(this.indentationChars.length);
}if(this._.indent){this.indentation();
}else{if(rules&&rules.breakBeforeClose){this.lineBreak();
this.indentation();
}}this._.output.push("</",tagName,">");
tagName=="pre"&&(this._.inPre=0);
if(rules&&rules.breakAfterClose){this.lineBreak();
this._.needsSpace=rules.needsSpace;
}this._.afterCloser=1;
},text:function(text){if(this._.indent){this.indentation();
!this._.inPre&&(text=CKEDITOR.tools.ltrim(text));
}this._.output.push(text);
},comment:function(comment){if(this._.indent){this.indentation();
}this._.output.push("<!--",comment,"-->");
},lineBreak:function(){if(!this._.inPre&&this._.output.length>0){this._.output.push(this.lineBreakChars);
}this._.indent=1;
},indentation:function(){if(!this._.inPre&&this._.indentation){this._.output.push(this._.indentation);
}this._.indent=0;
},reset:function(){this._.output=[];
this._.indent=0;
this._.indentation="";
this._.afterCloser=0;
this._.inPre=0;
},setRules:function(tagName,rules){var currentRules=this._.rules[tagName];
if(currentRules){CKEDITOR.tools.extend(currentRules,rules,true);
}else{this._.rules[tagName]=rules;
}}}});
(function(){CKEDITOR.plugins.add("wysiwygarea",{init:function(editor){if(editor.config.fullPage){editor.addFeature({allowedContent:"html head title; style [media,type]; body (*)[id]; meta link [*]",requiredContent:"body"});
}editor.addMode("wysiwyg",function(callback){var iframe=CKEDITOR.document.createElement("iframe");
iframe.setStyles({width:"100%",height:"100%"});
iframe.addClass("cke_wysiwyg_frame cke_reset");
var contentSpace=editor.ui.space("contents");
contentSpace.append(iframe);
var src="document.open();"+(isCustomDomain?('document.domain="'+document.domain+'";'):"")+"document.close();";
src=CKEDITOR.env.air?"javascript:void(0)":CKEDITOR.env.ie?"javascript:void(function(){"+encodeURIComponent(src)+"}())":"";
var useOnloadEvent=CKEDITOR.env.ie||CKEDITOR.env.gecko;
if(useOnloadEvent){iframe.on("load",onLoad);
}var frameLabel=[editor.lang.editor,editor.name].join(","),frameDesc=editor.lang.common.editorHelp;
if(CKEDITOR.env.ie){frameLabel+=", "+frameDesc;
}var labelId=CKEDITOR.tools.getNextId(),desc=CKEDITOR.dom.element.createFromHtml('<span id="'+labelId+'" class="cke_voice_label">'+frameDesc+"</span>");
contentSpace.append(desc,1);
editor.on("beforeModeUnload",function(evt){evt.removeListener();
desc.remove();
});
iframe.setAttributes({frameBorder:0,"aria-describedby":labelId,title:frameLabel,src:src,tabIndex:editor.tabIndex,allowTransparency:"true"});
!useOnloadEvent&&onLoad();
if(CKEDITOR.env.webkit){var onResize=function(){contentSpace.setStyle("width","100%");
iframe.hide();
iframe.setSize("width",contentSpace.getSize("width"));
contentSpace.removeStyle("width");
iframe.show();
};
iframe.setCustomData("onResize",onResize);
CKEDITOR.document.getWindow().on("resize",onResize);
}editor.fire("ariaWidget",iframe);
function onLoad(evt){evt&&evt.removeListener();
editor.editable(new framedWysiwyg(editor,iframe.$.contentWindow.document.body));
editor.setData(editor.getData(1),callback);
}});
}});
var isCustomDomain=CKEDITOR.env.isCustomDomain();
function onDomReady(win){var editor=this.editor,doc=win.document,body=doc.body;
var script=doc.getElementById("cke_actscrpt");
script&&script.parentNode.removeChild(script);
script=doc.getElementById("cke_shimscrpt");
script&&script.parentNode.removeChild(script);
if(CKEDITOR.env.gecko){body.contentEditable=false;
if(CKEDITOR.env.version<20000){body.innerHTML=body.innerHTML.replace(/^.*<!-- cke-content-start -->/,"");
setTimeout(function(){var range=new CKEDITOR.dom.range(new CKEDITOR.dom.document(doc));
range.setStart(new CKEDITOR.dom.node(body),0);
editor.getSelection().selectRanges([range]);
},0);
}}body.contentEditable=true;
if(CKEDITOR.env.ie){body.hideFocus=true;
body.disabled=true;
body.removeAttribute("disabled");
}delete this._.isLoadingData;
this.$=body;
doc=new CKEDITOR.dom.document(doc);
this.setup();
if(CKEDITOR.env.ie){doc.getDocumentElement().addClass(doc.$.compatMode);
editor.config.enterMode!=CKEDITOR.ENTER_P&&doc.on("selectionchange",function(){if(null==editor.getSelection()){return;
}var body=doc.getBody(),sel=editor.getSelection(),range=sel&&sel.getRanges()[0];
if(range&&body.getHtml().match(/^<p>&nbsp;<\/p>$/i)&&range.startContainer.equals(body)){setTimeout(function(){range=editor.getSelection().getRanges()[0];
if(!range.startContainer.equals("body")){body.getFirst().remove(1);
range.moveToElementEditEnd(body);
range.select();
}},0);
}});
}CKEDITOR.env.gecko&&CKEDITOR.tools.setTimeout(activateEditing,0,this,editor);
try{editor.document.$.execCommand("2D-position",false,true);
}catch(e){}try{editor.document.$.execCommand("enableInlineTableEditing",false,!editor.config.disableNativeTableHandles);
}catch(e){}if(editor.config.disableObjectResizing){try{this.getDocument().$.execCommand("enableObjectResizing",false,false);
}catch(e){this.attachListener(this,CKEDITOR.env.ie?"resizestart":"resize",function(evt){evt.data.preventDefault();
});
}}if(CKEDITOR.env.gecko||CKEDITOR.env.ie&&editor.document.$.compatMode=="CSS1Compat"){this.attachListener(this,"keydown",function(evt){var keyCode=evt.data.getKeystroke();
if(keyCode==33||keyCode==34){if(CKEDITOR.env.ie){setTimeout(function(){editor.getSelection().scrollIntoView();
},0);
}else{if(editor.window.$.innerHeight>this.$.offsetHeight){var range=editor.createRange();
range[keyCode==33?"moveToElementEditStart":"moveToElementEditEnd"](this);
range.select();
evt.data.preventDefault();
}}}});
}if(CKEDITOR.env.ie){this.attachListener(doc,"blur",function(){try{doc.$.selection.empty();
}catch(er){}});
}var title=editor.document.getElementsByTag("title").getItem(0);
title.data("cke-title",editor.document.$.title);
if(CKEDITOR.env.ie){editor.document.$.title=this._.docTitle;
}CKEDITOR.tools.setTimeout(function(){editor.fire("contentDom");
if(this._.isPendingFocus){editor.focus();
this._.isPendingFocus=false;
}setTimeout(function(){editor.fire("dataReady");
},0);
if(CKEDITOR.env.ie){setTimeout(function(){if(editor.document){var $body=editor.document.$.body;
$body.runtimeStyle.marginBottom="0px";
$body.runtimeStyle.marginBottom="";
}},1000);
}},0,this);
}var framedWysiwyg=CKEDITOR.tools.createClass({$:function(editor){this.base.apply(this,arguments);
this._.frameLoadedHandler=CKEDITOR.tools.addFunction(function(win){CKEDITOR.tools.setTimeout(onDomReady,0,this,win);
},this);
this._.docTitle=this.getWindow().getFrame().getAttribute("title");
},base:CKEDITOR.editable,proto:{setData:function(data,isSnapshot){var editor=this.editor;
if(isSnapshot){this.setHtml(data);
}else{this._.isLoadingData=true;
editor._.dataStore={id:1};
var config=editor.config,fullPage=config.fullPage,docType=config.docType;
var headExtra=CKEDITOR.tools.buildStyleHtml(iframeCssFixes()).replace(/<style>/,'<style data-cke-temp="1">');
if(!fullPage){headExtra+=CKEDITOR.tools.buildStyleHtml(editor.config.contentsCss);
}var baseTag=config.baseHref?'<base href="'+config.baseHref+'" data-cke-temp="1" />':"";
if(fullPage){data=data.replace(/<!DOCTYPE[^>]*>/i,function(match){editor.docType=docType=match;
return"";
}).replace(/<\?xml\s[^\?]*\?>/i,function(match){editor.xmlDeclaration=match;
return"";
});
}if(editor.dataProcessor){data=editor.dataProcessor.toHtml(data);
}if(fullPage){if(!(/<body[\s|>]/).test(data)){data="<body>"+data;
}if(!(/<html[\s|>]/).test(data)){data="<html>"+data+"</html>";
}if(!(/<head[\s|>]/).test(data)){data=data.replace(/<html[^>]*>/,"$&<head><title></title></head>");
}else{if(!(/<title[\s|>]/).test(data)){data=data.replace(/<head[^>]*>/,"$&<title></title>");
}}baseTag&&(data=data.replace(/<head>/,"$&"+baseTag));
data=data.replace(/<\/head\s*>/,headExtra+"$&");
data=docType+data;
}else{data=config.docType+'<html dir="'+config.contentsLangDirection+'" lang="'+(config.contentsLanguage||editor.langCode)+'"><head><title>'+this._.docTitle+"</title>"+baseTag+headExtra+"</head><body"+(config.bodyId?' id="'+config.bodyId+'"':"")+(config.bodyClass?' class="'+config.bodyClass+'"':"")+">"+data+"</body></html>";
}if(CKEDITOR.env.gecko){data=data.replace(/<body/,'<body contenteditable="true" ');
if(CKEDITOR.env.version<20000){data=data.replace(/<body[^>]*>/,"$&<!-- cke-content-start -->");
}}var bootstrapCode='<script id="cke_actscrpt" type="text/javascript"'+(CKEDITOR.env.ie?' defer="defer" ':"")+">"+(isCustomDomain?('document.domain="'+document.domain+'";'):"")+"var wasLoaded=0;function onload(){if(!wasLoaded)window.parent.CKEDITOR.tools.callFunction("+this._.frameLoadedHandler+",window);wasLoaded=1;}"+(CKEDITOR.env.ie?"onload();":'document.addEventListener("DOMContentLoaded", onload, false );')+"<\/script>";
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){bootstrapCode+='<script id="cke_shimscrpt">(function(){var e="abbr,article,aside,audio,bdi,canvas,data,datalist,details,figcaption,figure,footer,header,hgroup,mark,meter,nav,output,progress,section,summary,time,video".split(","),i=e.length;while(i--){document.createElement(e[i])}})()<\/script>';
}data=data.replace(/(?=\s*<\/(:?head)>)/,bootstrapCode);
this.clearCustomData();
this.clearListeners();
editor.fire("contentDomUnload");
var doc=this.getDocument();
try{doc.write(data);
}catch(e){setTimeout(function(){doc.write(data);
},0);
}}},getData:function(isSnapshot){if(isSnapshot){return this.getHtml();
}else{var editor=this.editor,config=editor.config,fullPage=config.fullPage,docType=fullPage&&editor.docType,xmlDeclaration=fullPage&&editor.xmlDeclaration,doc=this.getDocument();
var data=fullPage?doc.getDocumentElement().getOuterHtml():doc.getBody().getHtml();
if(CKEDITOR.env.gecko){data=data.replace(/<br>(?=\s*(:?$|<\/body>))/,"");
}if(editor.dataProcessor){data=editor.dataProcessor.toDataFormat(data);
}if(xmlDeclaration){data=xmlDeclaration+"\n"+data;
}if(docType){data=docType+"\n"+data;
}return data;
}},focus:function(){if(this._.isLoadingData){this._.isPendingFocus=true;
}else{framedWysiwyg.baseProto.focus.call(this);
}},detach:function(){var editor=this.editor,doc=editor.document,iframe=editor.window.getFrame();
framedWysiwyg.baseProto.detach.call(this);
this.clearCustomData();
doc.getDocumentElement().clearCustomData();
iframe.clearCustomData();
CKEDITOR.tools.removeFunction(this._.frameLoadedHandler);
var onResize=iframe.removeCustomData("onResize");
onResize&&onResize.removeListener();
editor.fire("contentDomUnload");
iframe.remove();
}}});
function restoreDirty(editor){if(!editor.checkDirty()){setTimeout(function(){editor.resetDirty();
},0);
}}function activateEditing(editor){if(editor.readOnly){return;
}var win=editor.window,doc=editor.document,body=doc.getBody(),bodyFirstChild=body.getFirst(),bodyChildsNum=body.getChildren().count();
if(!bodyChildsNum||bodyChildsNum==1&&bodyFirstChild.type==CKEDITOR.NODE_ELEMENT&&bodyFirstChild.hasAttribute("_moz_editor_bogus_node")){restoreDirty(editor);
var hostDocument=CKEDITOR.document;
var hostDocumentElement=hostDocument.getDocumentElement();
var scrollTop=hostDocumentElement.$.scrollTop;
var scrollLeft=hostDocumentElement.$.scrollLeft;
var keyEventSimulate=doc.$.createEvent("KeyEvents");
keyEventSimulate.initKeyEvent("keypress",true,true,win.$,false,false,false,false,0,32);
doc.$.dispatchEvent(keyEventSimulate);
if(scrollTop!=hostDocumentElement.$.scrollTop||scrollLeft!=hostDocumentElement.$.scrollLeft){hostDocument.getWindow().$.scrollTo(scrollLeft,scrollTop);
}bodyChildsNum&&body.getFirst().remove();
doc.getBody().appendBogus();
var nativeRange=editor.createRange();
nativeRange.setStartAt(body,CKEDITOR.POSITION_AFTER_START);
nativeRange.select();
}}function iframeCssFixes(){var css=[];
if(CKEDITOR.document.$.documentMode>=8){css.push("html.CSS1Compat [contenteditable=false]{min-height:0 !important}");
var selectors=[];
for(var tag in CKEDITOR.dtd.$removeEmpty){selectors.push("html.CSS1Compat "+tag+"[contenteditable=false]");
}css.push(selectors.join(",")+"{display:inline-block}");
}else{if(CKEDITOR.env.gecko){css.push("html{height:100% !important}");
css.push("img:-moz-broken{-moz-force-broken-image-icon:1;min-width:24px;min-height:24px}");
}}css.push("html{cursor:text;*cursor:auto}");
css.push("img,input,textarea{cursor:default}");
return css.join("\n");
}})();
CKEDITOR.config.disableObjectResizing=false;
CKEDITOR.config.disableNativeTableHandles=true;
CKEDITOR.config.disableNativeSpellChecker=true;
CKEDITOR.config.contentsCss=CKEDITOR.basePath+"contents.css";
(function(){function getAlignment(element,useComputedState){useComputedState=useComputedState===undefined||useComputedState;
var align;
if(useComputedState){align=element.getComputedStyle("text-align");
}else{while(!element.hasAttribute||!(element.hasAttribute("align")||element.getStyle("text-align"))){var parent=element.getParent();
if(!parent){break;
}element=parent;
}align=element.getStyle("text-align")||element.getAttribute("align")||"";
}align&&(align=align.replace(/(?:-(?:moz|webkit)-)?(?:start|auto)/i,""));
!align&&useComputedState&&(align=element.getComputedStyle("direction")=="rtl"?"right":"left");
return align;
}function justifyCommand(editor,name,value){this.editor=editor;
this.name=name;
this.value=value;
this.context="p";
var classes=editor.config.justifyClasses;
if(classes){switch(value){case"left":this.cssClassName=classes[0];
break;
case"center":this.cssClassName=classes[1];
break;
case"right":this.cssClassName=classes[2];
break;
case"justify":this.cssClassName=classes[3];
break;
}this.cssClassRegex=new RegExp("(?:^|\\s+)(?:"+classes.join("|")+")(?=$|\\s)");
this.requiredContent="p("+this.cssClassName+")";
}else{this.requiredContent="p{text-align}";
}this.allowedContent={"caption div h1 h2 h3 h4 h5 h6 p pre td th li":{propertiesOnly:true,styles:this.cssClassName?null:"text-align",classes:this.cssClassName||null}};
}function onDirChanged(e){var editor=e.editor;
var range=editor.createRange();
range.setStartBefore(e.data.node);
range.setEndAfter(e.data.node);
var walker=new CKEDITOR.dom.walker(range),node;
while((node=walker.next())){if(node.type==CKEDITOR.NODE_ELEMENT){if(!node.equals(e.data.node)&&node.getDirection()){range.setStartAfter(node);
walker=new CKEDITOR.dom.walker(range);
continue;
}var classes=editor.config.justifyClasses;
if(classes){if(node.hasClass(classes[0])){node.removeClass(classes[0]);
node.addClass(classes[2]);
}else{if(node.hasClass(classes[2])){node.removeClass(classes[2]);
node.addClass(classes[0]);
}}}var style="text-align";
var align=node.getStyle(style);
if(align=="left"){node.setStyle(style,"right");
}else{if(align=="right"){node.setStyle(style,"left");
}}}}}justifyCommand.prototype={exec:function(editor){var selection=editor.getSelection(),enterMode=editor.config.enterMode;
if(!selection){return;
}var bookmarks=selection.createBookmarks(),ranges=selection.getRanges(true);
var cssClassName=this.cssClassName,iterator,block;
var useComputedState=editor.config.useComputedState;
useComputedState=useComputedState===undefined||useComputedState;
for(var i=ranges.length-1;
i>=0;
i--){iterator=ranges[i].createIterator();
iterator.enlargeBr=enterMode!=CKEDITOR.ENTER_BR;
while((block=iterator.getNextParagraph(enterMode==CKEDITOR.ENTER_P?"p":"div"))){block.removeAttribute("align");
block.removeStyle("text-align");
var className=cssClassName&&(block.$.className=CKEDITOR.tools.ltrim(block.$.className.replace(this.cssClassRegex,"")));
var apply=(this.state==CKEDITOR.TRISTATE_OFF)&&(!useComputedState||(getAlignment(block,true)!=this.value));
if(cssClassName){if(apply){block.addClass(cssClassName);
}else{if(!className){block.removeAttribute("class");
}}}else{if(apply){block.setStyle("text-align",this.value);
}}}}editor.focus();
editor.forceNextSelectionCheck();
selection.selectBookmarks(bookmarks);
},refresh:function(editor,path){var firstBlock=path.block||path.blockLimit;
this.setState(firstBlock.getName()!="body"&&getAlignment(firstBlock,this.editor.config.useComputedState)==this.value?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF);
}};
CKEDITOR.plugins.add("justify",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"justifyblock,justifycenter,justifyleft,justifyright",init:function(editor){if(editor.blockless){return;
}var left=new justifyCommand(editor,"justifyleft","left"),center=new justifyCommand(editor,"justifycenter","center"),right=new justifyCommand(editor,"justifyright","right"),justify=new justifyCommand(editor,"justifyblock","justify");
editor.addCommand("justifyleft",left);
editor.addCommand("justifycenter",center);
editor.addCommand("justifyright",right);
editor.addCommand("justifyblock",justify);
if(editor.ui.addButton){editor.ui.addButton("JustifyLeft",{label:editor.lang.justify.left,command:"justifyleft",toolbar:"align,10"});
editor.ui.addButton("JustifyCenter",{label:editor.lang.justify.center,command:"justifycenter",toolbar:"align,20"});
editor.ui.addButton("JustifyRight",{label:editor.lang.justify.right,command:"justifyright",toolbar:"align,30"});
editor.ui.addButton("JustifyBlock",{label:editor.lang.justify.block,command:"justifyblock",toolbar:"align,40"});
}editor.on("dirChanged",onDirChanged);
}});
})();
(function(){CKEDITOR.plugins.add("undo",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"redo,redo-rtl,undo,undo-rtl",init:function(editor){var undoManager=new UndoManager(editor);
var undoCommand=editor.addCommand("undo",{exec:function(){if(undoManager.undo()){editor.selectionChange();
this.fire("afterUndo");
}},state:CKEDITOR.TRISTATE_DISABLED,canUndo:false,editorFocus:true});
var redoCommand=editor.addCommand("redo",{exec:function(){if(undoManager.redo()){editor.selectionChange();
this.fire("afterRedo");
}},state:CKEDITOR.TRISTATE_DISABLED,canUndo:false,editorFocus:true});
editor.setKeystroke([[CKEDITOR.CTRL+90,"undo"],[CKEDITOR.CTRL+89,"redo"],[CKEDITOR.CTRL+CKEDITOR.SHIFT+90,"redo"]]);
undoManager.onChange=function(){undoCommand.setState(undoManager.undoable()?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
redoCommand.setState(undoManager.redoable()?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);
};
function recordCommand(event){if(undoManager.enabled&&event.data.command.canUndo!==false){undoManager.save();
}}editor.on("beforeCommandExec",recordCommand);
editor.on("afterCommandExec",recordCommand);
editor.on("saveSnapshot",function(evt){undoManager.save(evt.data&&evt.data.contentOnly,undefined,undefined,evt.data&&evt.data.userData);
});
editor.on("contentDom",function(){editor.editable().on("keydown",function(event){if(!event.data.$.ctrlKey&&!event.data.$.metaKey){undoManager.type(event);
}});
});
editor.on("beforeModeUnload",function(){editor.mode=="wysiwyg"&&undoManager.save(true);
});
editor.on("mode",function(){undoManager.enabled=editor.readOnly?false:editor.mode=="wysiwyg";
undoManager.onChange();
});
if(editor.ui.addButton){editor.ui.addButton("Undo",{label:editor.lang.undo.undo,command:"undo",toolbar:"undo,10"});
editor.ui.addButton("Redo",{label:editor.lang.undo.redo,command:"redo",toolbar:"undo,20"});
}editor.resetUndo=function(){undoManager.reset();
editor.fire("saveSnapshot");
};
editor.isOnBaseSnapshot=function(){return undoManager.index===0;
};
editor.on("updateSnapshot",function(evt){if(undoManager.currentImage){undoManager.update(evt.data&&evt.data.userData,evt.data&&evt.data.userDataMergeCallback);
}});
editor.on("lockSnapshot",undoManager.lock,undoManager);
editor.on("unlockSnapshot",undoManager.unlock,undoManager);
}});
CKEDITOR.plugins.undo={};
var Image=CKEDITOR.plugins.undo.Image=function(editor){this.editor=editor;
editor.fire("beforeUndoImage");
var contents=editor.getSnapshot(),selection=contents&&editor.getSelection();
CKEDITOR.env.ie&&contents&&(contents=contents.replace(/\s+data-cke-expando=".*?"/g,""));
this.contents=contents;
this.bookmarks=selection&&selection.createBookmarks2(true);
editor.fire("afterUndoImage");
};
var protectedAttrs=/\b(?:href|src|name)="[^"]*?"/gi;
Image.prototype={equals:function(otherImage,contentOnly){var thisContents=this.contents,otherContents=otherImage.contents;
if(CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)){thisContents=thisContents.replace(protectedAttrs,"");
otherContents=otherContents.replace(protectedAttrs,"");
}if(this!==otherImage&&(this.userData||otherImage.userData)){if(this.userData!==otherImage.userData){return false;
}}if(thisContents!=otherContents){return false;
}if(contentOnly){return true;
}var bookmarksA=this.bookmarks,bookmarksB=otherImage.bookmarks;
if(bookmarksA||bookmarksB){if(!bookmarksA||!bookmarksB||bookmarksA.length!=bookmarksB.length){return false;
}for(var i=0;
i<bookmarksA.length;
i++){var bookmarkA=bookmarksA[i],bookmarkB=bookmarksB[i];
if(bookmarkA.startOffset!=bookmarkB.startOffset||bookmarkA.endOffset!=bookmarkB.endOffset||!CKEDITOR.tools.arrayCompare(bookmarkA.start,bookmarkB.start)||!CKEDITOR.tools.arrayCompare(bookmarkA.end,bookmarkB.end)){return false;
}}}return true;
}};
function UndoManager(editor){this.editor=editor;
this.reset();
}var editingKeyCodes={8:1,46:1},modifierKeyCodes={16:1,17:1,18:1},navigationKeyCodes={37:1,38:1,39:1,40:1};
UndoManager.prototype={type:function(event){var keystroke=event&&event.data.getKey(),isModifierKey=keystroke in modifierKeyCodes,isEditingKey=keystroke in editingKeyCodes,wasEditingKey=this.lastKeystroke in editingKeyCodes,sameAsLastEditingKey=isEditingKey&&keystroke==this.lastKeystroke,isReset=keystroke in navigationKeyCodes,wasReset=this.lastKeystroke in navigationKeyCodes,isContent=(!isEditingKey&&!isReset),modifierSnapshot=(isEditingKey&&!sameAsLastEditingKey),startedTyping=!(isModifierKey||this.typing)||(isContent&&(wasEditingKey||wasReset));
if(startedTyping||modifierSnapshot){var beforeTypeImage=new Image(this.editor),beforeTypeCount=this.snapshots.length;
CKEDITOR.tools.setTimeout(function(){var currentSnapshot=this.editor.getSnapshot();
if(CKEDITOR.env.ie){currentSnapshot=currentSnapshot.replace(/\s+data-cke-expando=".*?"/g,"");
}if(beforeTypeImage.contents!=currentSnapshot&&beforeTypeCount==this.snapshots.length){this.typing=true;
if(!this.save(false,beforeTypeImage,false)){var droppedSnapshots=this.snapshots.splice(this.index+1,this.snapshots.length-this.index-1);
if(droppedSnapshots.length){this.editor.fire("snapshotsDropped",{droppedSnapshots:droppedSnapshots});
}}this.hasUndo=true;
this.hasRedo=false;
this.typesCount=1;
this.modifiersCount=1;
this.onChange();
}},0,this);
}this.lastKeystroke=keystroke;
if(isEditingKey){this.typesCount=0;
this.modifiersCount++;
if(this.modifiersCount>25){this.save(false,null,false);
this.modifiersCount=1;
}}else{if(!isReset){this.modifiersCount=0;
this.typesCount++;
if(this.typesCount>25){this.save(false,null,false);
this.typesCount=1;
}}}},reset:function(){this.lastKeystroke=0;
this.snapshots=[];
this.index=-1;
this.limit=this.editor.config.undoStackSize||20;
this.currentImage=null;
this.hasUndo=false;
this.hasRedo=false;
this.locked=null;
this.resetType();
},resetType:function(){this.typing=false;
delete this.lastKeystroke;
this.typesCount=0;
this.modifiersCount=0;
},fireChange:function(){this.hasUndo=!!this.getNextImage(true);
this.hasRedo=!!this.getNextImage(false);
this.resetType();
this.onChange();
},save:function(onContentOnly,image,autoFireChange,userData){if(this.locked){return false;
}var disallowDuplicates=!userData;
var snapshots=this.snapshots;
try{if(!image){image=new Image(this.editor);
}}catch(e){return false;
}if(image.contents===false){return false;
}if(disallowDuplicates&&this.currentImage){var truncatedImage=image.contents.replace(/\s*id\s*=_?[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/g,"");
truncatedImage=truncatedImage.replace(/\s*class\s*="[^"]*"/g,"");
truncatedImage=truncatedImage.replace(/\s*class\s*=[^\s>]*/g,"");
var truncatedCurImage=this.currentImage.contents.replace(/\s*id\s*=_?[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/g,"");
truncatedCurImage=truncatedCurImage.replace(/\s*class\s*="[^"]*"/g,"");
truncatedCurImage=truncatedCurImage.replace(/\s*class\s*=[^\s>]*/g,"");
if(truncatedImage==truncatedCurImage){return false;
}}image.userData=userData;
var droppedSnapshots=snapshots.splice(this.index+1,snapshots.length-this.index-1);
if(droppedSnapshots.length){this.editor.fire("snapshotsDropped",{droppedSnapshots:droppedSnapshots});
}if(snapshots.length==this.limit){var droppedSnapshot=snapshots.shift();
this.editor.fire("snapshotsDropped",{droppedSnapshots:[droppedSnapshot]});
}this.index=snapshots.push(image)-1;
this.currentImage=image;
if(autoFireChange!==false){this.fireChange();
}return true;
},restoreImage:function(image){var editor=this.editor,sel;
var direction=this.editor.redoing?1:-1;
editor.fire("beforeRestoreImage",{beforeImage:this.currentImage,afterImage:image,direction:direction});
if(image.bookmarks){editor.focus();
sel=editor.getSelection();
}this.locked=1;
this.editor.loadSnapshot(image.contents);
clearTimeout(this.selectBookmarksTimeout);
var tries=0;
var selectBookmarks=image.bookmarks?function(){sel.selectBookmarks(image.bookmarks);
if(CKEDITOR.env.version<8&&++tries<200){var range=sel.getRanges(false)[0];
var anc=range&&range.getCommonAncestor();
if(anc&&anc.isReadOnly()){this.selectBookmarksTimeout=setTimeout(selectBookmarks,0);
}else{CKEDITOR.tools.setTimeout(this.update,0,this);
}}}.bind(this):function(){};
selectBookmarks();
this.locked=0;
this.index=image.index;
this.update();
this.fireChange();
this.editor.fire("afterRestoreImage",{afterImage:image,direction:direction});
},getNextImage:function(isUndo){var snapshots=this.snapshots,currentImage=this.currentImage,image,i;
if(currentImage){if(isUndo){for(i=this.index-1;
i>=0;
i--){image=snapshots[i];
if(!currentImage.equals(image,true)){image.index=i;
return image;
}}}else{for(i=this.index+1;
i<snapshots.length;
i++){image=snapshots[i];
if(!currentImage.equals(image,true)){image.index=i;
return image;
}}}}return null;
},redoable:function(){return this.enabled&&this.hasRedo;
},undoable:function(){return this.enabled&&this.hasUndo;
},undo:function(){if(this.undoable()){this.editor.undoing=true;
this.editor.redoing=false;
try{this.save(true);
var image=this.getNextImage(true);
if(image){return this.restoreImage(image),true;
}}finally{this.editor.undoing=false;
}}return false;
},redo:function(){if(this.redoable()){this.editor.redoing=true;
this.editor.undoing=false;
try{this.save(true);
if(this.redoable()){var image=this.getNextImage(false);
if(image){return this.restoreImage(image),true;
}}}finally{this.editor.redoing=false;
}}return false;
},update:function(userData,userDataMergeCallback){if(!this.locked){this.currentImage=new Image(this.editor);
var oldImage=this.snapshots[this.index];
var updatedUserData=undefined;
if(userData&&oldImage&&oldImage.userData){if(userDataMergeCallback&&userDataMergeCallback.apply){updatedUserData=userDataMergeCallback(oldImage.userData,userData);
}else{updatedUserData=userData;
}}else{if(userData){updatedUserData=userData;
}else{if(oldImage&&oldImage.userData){updatedUserData=oldImage.userData;
}}}this.currentImage.userData=updatedUserData;
this.snapshots.splice(this.index,1,this.currentImage);
}},lock:function(){if(!this.locked){var snapBefore=this.editor.getSnapshot();
var matchedTip=this.currentImage&&snapBefore==this.currentImage.contents;
this.locked={update:matchedTip?snapBefore:null};
}},unlock:function(){if(this.locked){var update=this.locked.update,snap=this.editor.getSnapshot();
this.locked=null;
if(typeof update=="string"&&snap!=update){this.update();
}}}};
})();
CKEDITOR.plugins.add("cernundo",{init:function(editor){},handleBaseSnapshot:function(editor){var redo=editor.getCommand("redo");
if(!redo){return;
}var initialFreetext={};
$(".ddfreetext").each(function(_,ddfreetext){var id=$(ddfreetext).attr("id");
if(id){initialFreetext[id]=ddfreetext.innerHTML;
}});
var emrListener=editor.on(DDCMD_CONTENTHTMLLOADED,function(event){var $emr=$("#"+event.data.activityId);
var $ddfreetext=$emr.find(".ddfreetext");
$ddfreetext.each(function(_,ddfreetext){var id=$(ddfreetext).attr("id");
if(id){initialFreetext[id]=ddfreetext.innerHTML;
}});
},undefined,undefined,-1);
var refreshStateListener=editor.on("refreshStateChange",function(){if(editor.refreshState==="stable"){emrListener.removeListener();
refreshStateListener.removeListener();
}});
function areFreetextSameAsInitial(){var bSame=true;
$(".ddfreetext").each(function(_,ddfreetext){var id=$(ddfreetext).attr("id");
if(initialFreetext.hasOwnProperty(id)){if(ddfreetext.innerHTML!==initialFreetext[id]){bSame=false;
return false;
}}else{if(ddfreetext.innerHTML.length){bSame=false;
return false;
}}});
return bSame;
}editor.on("updateSnapshot",function(event){if(event.data&&event.data.force){return;
}if(redo.state!==CKEDITOR.TRISTATE_DISABLED){if(editor.isOnBaseSnapshot()){event.cancel();
}return;
}if(event.data&&event.data.userData){return;
}if(editor.isOnBaseSnapshot&&editor.isOnBaseSnapshot()){if(areFreetextSameAsInitial()){return;
}event.cancel();
editor.fire("saveSnapshot",event.data);
}},undefined,undefined,-1);
}});
CKEDITOR.plugins.add("onchange",{init:function(editor){var timer,theMutationObserver=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,observer;
function somethingChanged(){if(editor.readOnly){return;
}if(timer){return;
}timer=setTimeout(function(){timer=0;
editor.fire("change");
},editor.config.minimumChangeMilliseconds||100);
}editor.on("destroy",function(){if(timer){clearTimeout(timer);
}timer=null;
});
editor.on("saveSnapshot",function(evt){if(!evt.data||!evt.data.contentOnly){somethingChanged();
}});
var undoCmd=editor.getCommand("undo");
undoCmd&&undoCmd.on("afterUndo",somethingChanged);
var redoCmd=editor.getCommand("redo");
redoCmd&&redoCmd.on("afterRedo",somethingChanged);
editor.on("afterCommandExec",function(event){if(event.data.name=="source"){return;
}if(event.data.command.canUndo!==false){somethingChanged();
}});
if(theMutationObserver){observer=new theMutationObserver(function(mutations){somethingChanged();
});
if(window.console&&window.console.log){console.log("Detecting changes using MutationObservers");
}}editor.on("contentDom",function(){if(observer){setTimeout(function(){observer.observe(editor.document.getBody().$,{attributes:true,childList:true,characterData:true});
},100);
}editor.document.on("keydown",function(event){if(event.data.$.ctrlKey||event.data.$.metaKey){return;
}var keyCode=event.data.$.keyCode;
if(keyCode==8||keyCode==13||keyCode==32||(keyCode>=46&&keyCode<=90)||(keyCode>=96&&keyCode<=111)||(keyCode>=186&&keyCode<=222)||keyCode==229){somethingChanged();
}});
editor.document.on("drop",somethingChanged);
editor.document.getBody().on("drop",somethingChanged);
});
editor.on("mode",function(e){if(editor.mode!="source"){return;
}var textarea=(editor.textarea||editor._.editable);
textarea.on("keydown",function(event){if(!event.data.$.ctrlKey&&!event.data.$.metaKey){somethingChanged();
}});
textarea.on("drop",somethingChanged);
textarea.on("input",somethingChanged);
if(CKEDITOR.env.ie){textarea.on("cut",somethingChanged);
textarea.on("paste",somethingChanged);
}});
}});
CKEDITOR.plugins.add("divarea",{afterInit:function(editor){editor.addMode("wysiwyg",function(callback){var editingBlock=CKEDITOR.dom.element.createFromHtml('<div class="cke_wysiwyg_div cke_reset" hidefocus="true"></div>');
var contentSpace=editor.ui.space("contents");
contentSpace.append(editingBlock);
editingBlock=editor.editable(editingBlock);
editingBlock.detach=CKEDITOR.tools.override(editingBlock.detach,function(org){return function(){org.apply(this,arguments);
this.remove();
};
});
editor.setData(editor.getData(1),callback);
editor.fire("contentDom");
});
}});
(function(){CKEDITOR.plugins.add("xml",{});
CKEDITOR.xml=function(xmlObjectOrData){var baseXml=null;
if(typeof xmlObjectOrData=="object"){baseXml=xmlObjectOrData;
}else{var data=(xmlObjectOrData||"").replace(/&nbsp;/g,"\xA0");
if(window.DOMParser){baseXml=(new DOMParser()).parseFromString(data,"text/xml");
}else{if(window.ActiveXObject){try{baseXml=new ActiveXObject("MSXML2.DOMDocument");
}catch(e){try{baseXml=new ActiveXObject("Microsoft.XmlDom");
}catch(e){}}if(baseXml){baseXml.async=false;
baseXml.resolveExternals=false;
baseXml.validateOnParse=false;
baseXml.loadXML(data);
}}}}this.baseXml=baseXml;
};
CKEDITOR.xml.prototype={selectSingleNode:function(xpath,contextNode){var baseXml=this.baseXml;
if(contextNode||(contextNode=baseXml)){if(CKEDITOR.env.ie||contextNode.selectSingleNode){return contextNode.selectSingleNode(xpath);
}else{if(baseXml.evaluate){var result=baseXml.evaluate(xpath,contextNode,null,9,null);
return(result&&result.singleNodeValue)||null;
}}}return null;
},selectNodes:function(xpath,contextNode){var baseXml=this.baseXml,nodes=[];
if(contextNode||(contextNode=baseXml)){if(CKEDITOR.env.ie||contextNode.selectNodes){return contextNode.selectNodes(xpath);
}else{if(baseXml.evaluate){var result=baseXml.evaluate(xpath,contextNode,null,5,null);
if(result){var node;
while((node=result.iterateNext())){nodes.push(node);
}}}}}return nodes;
},getInnerXml:function(xpath,contextNode){var node=this.selectSingleNode(xpath,contextNode),xml=[];
if(node){node=node.firstChild;
while(node){if(node.xml){xml.push(node.xml);
}else{if(window.XMLSerializer){xml.push((new XMLSerializer()).serializeToString(node));
}}node=node.nextSibling;
}}return xml.length?xml.join(""):null;
}};
})();
CKEDITOR.plugins.add("menubutton",{requires:"button,menu",onLoad:function(){var clickFn=function(editor){var _=this._;
if(_.state===CKEDITOR.TRISTATE_DISABLED){return;
}_.previousState=_.state;
var menu=_.menu;
if(!menu){menu=_.menu=new CKEDITOR.menu(editor,{panel:{className:"cke_menu_panel",attributes:{"aria-label":editor.lang.common.options}}});
menu.onHide=CKEDITOR.tools.bind(function(){this.setState(this.modes&&this.modes[editor.mode]?_.previousState:CKEDITOR.TRISTATE_DISABLED);
},this);
if(this.onMenu){menu.addListener(this.onMenu);
}}if(_.on){menu.hide();
return;
}this.setState(CKEDITOR.TRISTATE_ON);
setTimeout(function(){menu.show(CKEDITOR.document.getById(_.id),4);
},0);
};
CKEDITOR.ui.menuButton=CKEDITOR.tools.createClass({base:CKEDITOR.ui.button,$:function(definition){var panelDefinition=definition.panel;
delete definition.panel;
this.base(definition);
this.hasArrow=true;
this.click=clickFn;
},statics:{handler:{create:function(definition){return new CKEDITOR.ui.menuButton(definition);
}}}});
},beforeInit:function(editor){editor.ui.addHandler(CKEDITOR.UI_MENUBUTTON,CKEDITOR.ui.menuButton.handler);
}});
CKEDITOR.UI_MENUBUTTON="menubutton";
CKEDITOR.plugins.add("uicolor",{requires:"dialog",lang:"bg,cs,cy,da,de,el,en,eo,et,fa,fi,fr,he,hr,it,ku,mk,nb,nl,no,pl,tr,ug,uk,vi,zh-cn",icons:"uicolor",init:function(editor){if(CKEDITOR.env.ie6Compat){return;
}editor.addCommand("uicolor",new CKEDITOR.dialogCommand("uicolor"));
editor.ui.addButton&&editor.ui.addButton("UIColor",{label:editor.lang.uicolor.title,command:"uicolor",toolbar:"tools,1"});
CKEDITOR.dialog.add("uicolor",this.path+"dialogs/uicolor.js");
if(typeof YAHOO==="undefined"){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("plugins/uicolor/yui/yui.js"));
CKEDITOR.document.appendStyleSheet(CKEDITOR.getUrl("plugins/uicolor/yui/assets/yui.css"));
}}});
if(typeof YAHOO=="undefined"||!YAHOO){var YAHOO={};
}YAHOO.namespace=function(){var A=arguments,E=null,C,B,D;
for(C=0;
C<A.length;
C=C+1){D=(""+A[C]).split(".");
E=YAHOO;
for(B=(D[0]=="YAHOO")?1:0;
B<D.length;
B=B+1){E[D[B]]=E[D[B]]||{};
E=E[D[B]];
}}return E;
};
YAHOO.log=function(D,A,C){var B=YAHOO.widget.Logger;
if(B&&B.log){return B.log(D,A,C);
}else{return false;
}};
YAHOO.register=function(A,E,D){var I=YAHOO.env.modules,B,H,G,F,C;
if(!I[A]){I[A]={versions:[],builds:[]};
}B=I[A];
H=D.version;
G=D.build;
F=YAHOO.env.listeners;
B.name=A;
B.version=H;
B.build=G;
B.versions.push(H);
B.builds.push(G);
B.mainClass=E;
for(C=0;
C<F.length;
C=C+1){F[C](B);
}if(E){E.VERSION=H;
E.BUILD=G;
}else{YAHOO.log("mainClass is undefined for module "+A,"warn");
}};
YAHOO.env=YAHOO.env||{modules:[],listeners:[]};
YAHOO.env.getVersion=function(A){return YAHOO.env.modules[A]||null;
};
YAHOO.env.ua=function(){var C={ie:0,opera:0,gecko:0,webkit:0,mobile:null,air:0,caja:0},B=navigator.userAgent,A;
if((/KHTML/).test(B)){C.webkit=1;
}A=B.match(/AppleWebKit\/([^\s]*)/);
if(A&&A[1]){C.webkit=parseFloat(A[1]);
if(/ Mobile\//.test(B)){C.mobile="Apple";
}else{A=B.match(/NokiaN[^\/]*/);
if(A){C.mobile=A[0];
}}A=B.match(/AdobeAIR\/([^\s]*)/);
if(A){C.air=A[0];
}}if(!C.webkit){A=B.match(/Opera[\s\/]([^\s]*)/);
if(A&&A[1]){C.opera=parseFloat(A[1]);
A=B.match(/Opera Mini[^;]*/);
if(A){C.mobile=A[0];
}}else{A=B.match(/MSIE\s([^;]*)/);
if(A&&A[1]){C.ie=parseFloat(A[1]);
}else{A=B.match(/Gecko\/([^\s]*)/);
if(A){C.gecko=1;
A=B.match(/rv:([^\s\)]*)/);
if(A&&A[1]){C.gecko=parseFloat(A[1]);
}}}}}A=B.match(/Caja\/([^\s]*)/);
if(A&&A[1]){C.caja=parseFloat(A[1]);
}return C;
}();
(function(){YAHOO.namespace("util","widget","example");
if("undefined"!==typeof YAHOO_config){var B=YAHOO_config.listener,A=YAHOO.env.listeners,D=true,C;
if(B){for(C=0;
C<A.length;
C=C+1){if(A[C]==B){D=false;
break;
}}if(D){A.push(B);
}}}})();
YAHOO.lang=YAHOO.lang||{};
(function(){var B=YAHOO.lang,F="[object Array]",C="[object Function]",A=Object.prototype,E=["toString","valueOf"],D={isArray:function(G){return A.toString.apply(G)===F;
},isBoolean:function(G){return typeof G==="boolean";
},isFunction:function(G){return A.toString.apply(G)===C;
},isNull:function(G){return G===null;
},isNumber:function(G){return typeof G==="number"&&isFinite(G);
},isObject:function(G){return(G&&(typeof G==="object"||B.isFunction(G)))||false;
},isString:function(G){return typeof G==="string";
},isUndefined:function(G){return typeof G==="undefined";
},_IEEnumFix:(YAHOO.env.ua.ie)?function(I,H){var G,K,J;
for(G=0;
G<E.length;
G=G+1){K=E[G];
J=H[K];
if(B.isFunction(J)&&J!=A[K]){I[K]=J;
}}}:function(){},extend:function(J,K,I){if(!K||!J){throw new Error("extend failed, please check that all dependencies are included.");
}var H=function(){},G;
H.prototype=K.prototype;
J.prototype=new H();
J.prototype.constructor=J;
J.superclass=K.prototype;
if(K.prototype.constructor==A.constructor){K.prototype.constructor=K;
}if(I){for(G in I){if(B.hasOwnProperty(I,G)){J.prototype[G]=I[G];
}}B._IEEnumFix(J.prototype,I);
}},augmentObject:function(K,J){if(!J||!K){throw new Error("Absorb failed, verify dependencies.");
}var G=arguments,I,L,H=G[2];
if(H&&H!==true){for(I=2;
I<G.length;
I=I+1){K[G[I]]=J[G[I]];
}}else{for(L in J){if(H||!(L in K)){K[L]=J[L];
}}B._IEEnumFix(K,J);
}},augmentProto:function(J,I){if(!I||!J){throw new Error("Augment failed, verify dependencies.");
}var G=[J.prototype,I.prototype],H;
for(H=2;
H<arguments.length;
H=H+1){G.push(arguments[H]);
}B.augmentObject.apply(this,G);
},dump:function(G,L){var I,K,N=[],O="{...}",H="f(){...}",M=", ",J=" => ";
if(!B.isObject(G)){return G+"";
}else{if(G instanceof Date||("nodeType" in G&&"tagName" in G)){return G;
}else{if(B.isFunction(G)){return H;
}}}L=(B.isNumber(L))?L:3;
if(B.isArray(G)){N.push("[");
for(I=0,K=G.length;
I<K;
I=I+1){if(B.isObject(G[I])){N.push((L>0)?B.dump(G[I],L-1):O);
}else{N.push(G[I]);
}N.push(M);
}if(N.length>1){N.pop();
}N.push("]");
}else{N.push("{");
for(I in G){if(B.hasOwnProperty(G,I)){N.push(I+J);
if(B.isObject(G[I])){N.push((L>0)?B.dump(G[I],L-1):O);
}else{N.push(G[I]);
}N.push(M);
}}if(N.length>1){N.pop();
}N.push("}");
}return N.join("");
},substitute:function(V,H,O){var L,K,J,R,S,U,Q=[],I,M="dump",P=" ",G="{",T="}",N;
for(;
;
){L=V.lastIndexOf(G);
if(L<0){break;
}K=V.indexOf(T,L);
if(L+1>=K){break;
}I=V.substring(L+1,K);
R=I;
U=null;
J=R.indexOf(P);
if(J>-1){U=R.substring(J+1);
R=R.substring(0,J);
}S=H[R];
if(O){S=O(R,S,U);
}if(B.isObject(S)){if(B.isArray(S)){S=B.dump(S,parseInt(U,10));
}else{U=U||"";
N=U.indexOf(M);
if(N>-1){U=U.substring(4);
}if(S.toString===A.toString||N>-1){S=B.dump(S,parseInt(U,10));
}else{S=S.toString();
}}}else{if(!B.isString(S)&&!B.isNumber(S)){S="~-"+Q.length+"-~";
Q[Q.length]=I;
}}V=V.substring(0,L)+S+V.substring(K+1);
}for(L=Q.length-1;
L>=0;
L=L-1){V=V.replace(new RegExp("~-"+L+"-~"),"{"+Q[L]+"}","g");
}return V;
},trim:function(G){try{return G.replace(/^\s+|\s+$/g,"");
}catch(H){return G;
}},merge:function(){var J={},H=arguments,G=H.length,I;
for(I=0;
I<G;
I=I+1){B.augmentObject(J,H[I],true);
}return J;
},later:function(N,H,O,J,K){N=N||0;
H=H||{};
var I=O,M=J,L,G;
if(B.isString(O)){I=H[O];
}if(!I){throw new TypeError("method undefined");
}if(!B.isArray(M)){M=[J];
}L=function(){I.apply(H,M);
};
G=(K)?setInterval(L,N):setTimeout(L,N);
return{interval:K,cancel:function(){if(this.interval){clearInterval(G);
}else{clearTimeout(G);
}}};
},isValue:function(G){return(B.isObject(G)||B.isString(G)||B.isNumber(G)||B.isBoolean(G));
}};
B.hasOwnProperty=(A.hasOwnProperty)?function(G,H){return G&&G.hasOwnProperty(H);
}:function(G,H){return !B.isUndefined(G[H])&&G.constructor.prototype[H]!==G[H];
};
D.augmentObject(B,D,true);
YAHOO.util.Lang=B;
B.augment=B.augmentProto;
YAHOO.augment=B.augmentProto;
YAHOO.extend=B.extend;
})();
YAHOO.register("yahoo",YAHOO,{version:"2.7.0",build:"1796"});
(function(){YAHOO.env._id_counter=YAHOO.env._id_counter||0;
var E=YAHOO.util,L=YAHOO.lang,m=YAHOO.env.ua,A=YAHOO.lang.trim,d={},h={},N=/^t(?:able|d|h)$/i,X=/color$/i,K=window.document,W=K.documentElement,e="ownerDocument",n="defaultView",v="documentElement",t="compatMode",b="offsetLeft",P="offsetTop",u="offsetParent",Z="parentNode",l="nodeType",C="tagName",O="scrollLeft",i="scrollTop",Q="getBoundingClientRect",w="getComputedStyle",a="currentStyle",M="CSS1Compat",c="BackCompat",g="class",F="className",J="",B=" ",s="(?:^|\\s)",k="(?= |$)",U="g",p="position",f="fixed",V="relative",j="left",o="top",r="medium",q="borderLeftWidth",R="borderTopWidth",D=m.opera,I=m.webkit,H=m.gecko,T=m.ie;
E.Dom={CUSTOM_ATTRIBUTES:(!W.hasAttribute)?{"for":"htmlFor","class":F}:{htmlFor:"for",className:g},get:function(y){var AA,Y,z,x,G;
if(y){if(y[l]||y.item){return y;
}if(typeof y==="string"){AA=y;
y=K.getElementById(y);
if(y&&y.id===AA){return y;
}else{if(y&&K.all){y=null;
Y=K.all[AA];
for(x=0,G=Y.length;
x<G;
++x){if(Y[x].id===AA){return Y[x];
}}}}return y;
}if(y.DOM_EVENTS){y=y.get("element");
}if("length" in y){z=[];
for(x=0,G=y.length;
x<G;
++x){z[z.length]=E.Dom.get(y[x]);
}return z;
}return y;
}return null;
},getComputedStyle:function(G,Y){if(window[w]){return G[e][n][w](G,null)[Y];
}else{if(G[a]){return E.Dom.IE_ComputedStyle.get(G,Y);
}}},getStyle:function(G,Y){return E.Dom.batch(G,E.Dom._getStyle,Y);
},_getStyle:function(){if(window[w]){return function(G,y){y=(y==="float")?y="cssFloat":E.Dom._toCamel(y);
var x=G.style[y],Y;
if(!x){Y=G[e][n][w](G,null);
if(Y){x=Y[y];
}}return x;
};
}else{if(W[a]){return function(G,y){var x;
switch(y){case"float":y="styleFloat";
default:y=E.Dom._toCamel(y);
x=G[a]?G[a][y]:null;
return(G.style[y]||x);
}};
}}}(),setStyle:function(G,Y,x){E.Dom.batch(G,E.Dom._setStyle,{prop:Y,val:x});
},_setStyle:function(){if(T){return function(Y,G){var x=E.Dom._toCamel(G.prop),y=G.val;
if(Y){switch(x){case"float":x="styleFloat";
default:Y.style[x]=y;
}}else{}};
}else{return function(Y,G){var x=E.Dom._toCamel(G.prop),y=G.val;
if(Y){if(x=="float"){x="cssFloat";
}Y.style[x]=y;
}else{}};
}}(),getXY:function(G){return E.Dom.batch(G,E.Dom._getXY);
},_canPosition:function(G){return(E.Dom._getStyle(G,"display")!=="none"&&E.Dom._inDoc(G));
},_getXY:function(){if(K[v][Q]){return function(y){var z,Y,AA,AF,AE,AD,AC,G,x,AB=Math.floor,AG=false;
if(E.Dom._canPosition(y)){AA=y[Q]();
AF=y[e];
z=E.Dom.getDocumentScrollLeft(AF);
Y=E.Dom.getDocumentScrollTop(AF);
AG=[AB(AA[j]),AB(AA[o])];
if(T&&m.ie<8){AE=2;
AD=2;
AC=AF[t];
G=S(AF[v],q);
x=S(AF[v],R);
if(m.ie===6){if(AC!==c){AE=0;
AD=0;
}}if((AC==c)){if(G!==r){AE=parseInt(G,10);
}if(x!==r){AD=parseInt(x,10);
}}AG[0]-=AE;
AG[1]-=AD;
}if((Y||z)){AG[0]+=z;
AG[1]+=Y;
}AG[0]=AB(AG[0]);
AG[1]=AB(AG[1]);
}else{}return AG;
};
}else{return function(y){var x,Y,AA,AB,AC,z=false,G=y;
if(E.Dom._canPosition(y)){z=[y[b],y[P]];
x=E.Dom.getDocumentScrollLeft(y[e]);
Y=E.Dom.getDocumentScrollTop(y[e]);
AC=((H||m.webkit>519)?true:false);
while((G=G[u])){z[0]+=G[b];
z[1]+=G[P];
if(AC){z=E.Dom._calcBorders(G,z);
}}if(E.Dom._getStyle(y,p)!==f){G=y;
while((G=G[Z])&&G[C]){AA=G[i];
AB=G[O];
if(H&&(E.Dom._getStyle(G,"overflow")!=="visible")){z=E.Dom._calcBorders(G,z);
}if(AA||AB){z[0]-=AB;
z[1]-=AA;
}}z[0]+=x;
z[1]+=Y;
}else{if(D){z[0]-=x;
z[1]-=Y;
}else{if(I||H){z[0]+=x;
z[1]+=Y;
}}}z[0]=Math.floor(z[0]);
z[1]=Math.floor(z[1]);
}else{}return z;
};
}}(),getX:function(G){var Y=function(x){return E.Dom.getXY(x)[0];
};
return E.Dom.batch(G,Y,E.Dom,true);
},getY:function(G){var Y=function(x){return E.Dom.getXY(x)[1];
};
return E.Dom.batch(G,Y,E.Dom,true);
},setXY:function(G,x,Y){E.Dom.batch(G,E.Dom._setXY,{pos:x,noRetry:Y});
},_setXY:function(G,z){var AA=E.Dom._getStyle(G,p),y=E.Dom.setStyle,AD=z.pos,Y=z.noRetry,AB=[parseInt(E.Dom.getComputedStyle(G,j),10),parseInt(E.Dom.getComputedStyle(G,o),10)],AC,x;
if(AA=="static"){AA=V;
y(G,p,AA);
}AC=E.Dom._getXY(G);
if(!AD||AC===false){return false;
}if(isNaN(AB[0])){AB[0]=(AA==V)?0:G[b];
}if(isNaN(AB[1])){AB[1]=(AA==V)?0:G[P];
}if(AD[0]!==null){y(G,j,AD[0]-AC[0]+AB[0]+"px");
}if(AD[1]!==null){y(G,o,AD[1]-AC[1]+AB[1]+"px");
}if(!Y){x=E.Dom._getXY(G);
if((AD[0]!==null&&x[0]!=AD[0])||(AD[1]!==null&&x[1]!=AD[1])){E.Dom._setXY(G,{pos:AD,noRetry:true});
}}},setX:function(Y,G){E.Dom.setXY(Y,[G,null]);
},setY:function(G,Y){E.Dom.setXY(G,[null,Y]);
},getRegion:function(G){var Y=function(x){var y=false;
if(E.Dom._canPosition(x)){y=E.Region.getRegion(x);
}else{}return y;
};
return E.Dom.batch(G,Y,E.Dom,true);
},getClientWidth:function(){return E.Dom.getViewportWidth();
},getClientHeight:function(){return E.Dom.getViewportHeight();
},getElementsByClassName:function(AB,AF,AC,AE,x,AD){AB=L.trim(AB);
AF=AF||"*";
AC=(AC)?E.Dom.get(AC):null||K;
if(!AC){return[];
}var Y=[],G=AC.getElementsByTagName(AF),z=E.Dom.hasClass;
for(var y=0,AA=G.length;
y<AA;
++y){if(z(G[y],AB)){Y[Y.length]=G[y];
}}if(AE){E.Dom.batch(Y,AE,x,AD);
}return Y;
},hasClass:function(Y,G){return E.Dom.batch(Y,E.Dom._hasClass,G);
},_hasClass:function(x,Y){var G=false,y;
if(x&&Y){y=E.Dom.getAttribute(x,F)||J;
if(Y.exec){G=Y.test(y);
}else{G=Y&&(B+y+B).indexOf(B+Y+B)>-1;
}}else{}return G;
},addClass:function(Y,G){return E.Dom.batch(Y,E.Dom._addClass,G);
},_addClass:function(x,Y){var G=false,y;
if(x&&Y){y=E.Dom.getAttribute(x,F)||J;
if(!E.Dom._hasClass(x,Y)){E.Dom.setAttribute(x,F,A(y+B+Y));
G=true;
}}else{}return G;
},removeClass:function(Y,G){return E.Dom.batch(Y,E.Dom._removeClass,G);
},_removeClass:function(y,x){var Y=false,AA,z,G;
if(y&&x){AA=E.Dom.getAttribute(y,F)||J;
E.Dom.setAttribute(y,F,AA.replace(E.Dom._getClassRegex(x),J));
z=E.Dom.getAttribute(y,F);
if(AA!==z){E.Dom.setAttribute(y,F,A(z));
Y=true;
if(E.Dom.getAttribute(y,F)===""){G=(y.hasAttribute&&y.hasAttribute(g))?g:F;
y.removeAttribute(G);
}}}else{}return Y;
},replaceClass:function(x,Y,G){return E.Dom.batch(x,E.Dom._replaceClass,{from:Y,to:G});
},_replaceClass:function(y,x){var Y,AB,AA,G=false,z;
if(y&&x){AB=x.from;
AA=x.to;
if(!AA){G=false;
}else{if(!AB){G=E.Dom._addClass(y,x.to);
}else{if(AB!==AA){z=E.Dom.getAttribute(y,F)||J;
Y=(B+z.replace(E.Dom._getClassRegex(AB),B+AA)).split(E.Dom._getClassRegex(AA));
Y.splice(1,0,B+AA);
E.Dom.setAttribute(y,F,A(Y.join(J)));
G=true;
}}}}else{}return G;
},generateId:function(G,x){x=x||"yui-gen";
var Y=function(y){if(y&&y.id){return y.id;
}var z=x+YAHOO.env._id_counter++;
if(y){if(y[e].getElementById(z)){return E.Dom.generateId(y,z+x);
}y.id=z;
}return z;
};
return E.Dom.batch(G,Y,E.Dom,true)||Y.apply(E.Dom,arguments);
},isAncestor:function(Y,x){Y=E.Dom.get(Y);
x=E.Dom.get(x);
var G=false;
if((Y&&x)&&(Y[l]&&x[l])){if(Y.contains&&Y!==x){G=Y.contains(x);
}else{if(Y.compareDocumentPosition){G=!!(Y.compareDocumentPosition(x)&16);
}}}else{}return G;
},inDocument:function(G,Y){return E.Dom._inDoc(E.Dom.get(G),Y);
},_inDoc:function(Y,x){var G=false;
if(Y&&Y[C]){x=x||Y[e];
G=E.Dom.isAncestor(x[v],Y);
}else{}return G;
},getElementsBy:function(Y,AF,AB,AD,y,AC,AE){AF=AF||"*";
AB=(AB)?E.Dom.get(AB):null||K;
if(!AB){return[];
}var x=[],G=AB.getElementsByTagName(AF);
for(var z=0,AA=G.length;
z<AA;
++z){if(Y(G[z])){if(AE){x=G[z];
break;
}else{x[x.length]=G[z];
}}}if(AD){E.Dom.batch(x,AD,y,AC);
}return x;
},getElementBy:function(x,G,Y){return E.Dom.getElementsBy(x,G,Y,null,null,null,true);
},batch:function(x,AB,AA,z){var y=[],Y=(z)?AA:window;
x=(x&&(x[C]||x.item))?x:E.Dom.get(x);
if(x&&AB){if(x[C]||x.length===undefined){return AB.call(Y,x,AA);
}for(var G=0;
G<x.length;
++G){y[y.length]=AB.call(Y,x[G],AA);
}}else{return false;
}return y;
},getDocumentHeight:function(){var Y=(K[t]!=M||I)?K.body.scrollHeight:W.scrollHeight,G=Math.max(Y,E.Dom.getViewportHeight());
return G;
},getDocumentWidth:function(){var Y=(K[t]!=M||I)?K.body.scrollWidth:W.scrollWidth,G=Math.max(Y,E.Dom.getViewportWidth());
return G;
},getViewportHeight:function(){var G=self.innerHeight,Y=K[t];
if((Y||T)&&!D){G=(Y==M)?W.clientHeight:K.body.clientHeight;
}return G;
},getViewportWidth:function(){var G=self.innerWidth,Y=K[t];
if(Y||T){G=(Y==M)?W.clientWidth:K.body.clientWidth;
}return G;
},getAncestorBy:function(G,Y){while((G=G[Z])){if(E.Dom._testElement(G,Y)){return G;
}}return null;
},getAncestorByClassName:function(Y,G){Y=E.Dom.get(Y);
if(!Y){return null;
}var x=function(y){return E.Dom.hasClass(y,G);
};
return E.Dom.getAncestorBy(Y,x);
},getAncestorByTagName:function(Y,G){Y=E.Dom.get(Y);
if(!Y){return null;
}var x=function(y){return y[C]&&y[C].toUpperCase()==G.toUpperCase();
};
return E.Dom.getAncestorBy(Y,x);
},getPreviousSiblingBy:function(G,Y){while(G){G=G.previousSibling;
if(E.Dom._testElement(G,Y)){return G;
}}return null;
},getPreviousSibling:function(G){G=E.Dom.get(G);
if(!G){return null;
}return E.Dom.getPreviousSiblingBy(G);
},getNextSiblingBy:function(G,Y){while(G){G=G.nextSibling;
if(E.Dom._testElement(G,Y)){return G;
}}return null;
},getNextSibling:function(G){G=E.Dom.get(G);
if(!G){return null;
}return E.Dom.getNextSiblingBy(G);
},getFirstChildBy:function(G,x){var Y=(E.Dom._testElement(G.firstChild,x))?G.firstChild:null;
return Y||E.Dom.getNextSiblingBy(G.firstChild,x);
},getFirstChild:function(G,Y){G=E.Dom.get(G);
if(!G){return null;
}return E.Dom.getFirstChildBy(G);
},getLastChildBy:function(G,x){if(!G){return null;
}var Y=(E.Dom._testElement(G.lastChild,x))?G.lastChild:null;
return Y||E.Dom.getPreviousSiblingBy(G.lastChild,x);
},getLastChild:function(G){G=E.Dom.get(G);
return E.Dom.getLastChildBy(G);
},getChildrenBy:function(Y,y){var x=E.Dom.getFirstChildBy(Y,y),G=x?[x]:[];
E.Dom.getNextSiblingBy(x,function(z){if(!y||y(z)){G[G.length]=z;
}return false;
});
return G;
},getChildren:function(G){G=E.Dom.get(G);
if(!G){}return E.Dom.getChildrenBy(G);
},getDocumentScrollLeft:function(G){G=G||K;
return Math.max(G[v].scrollLeft,G.body.scrollLeft);
},getDocumentScrollTop:function(G){G=G||K;
return Math.max(G[v].scrollTop,G.body.scrollTop);
},insertBefore:function(Y,G){Y=E.Dom.get(Y);
G=E.Dom.get(G);
if(!Y||!G||!G[Z]){return null;
}return G[Z].insertBefore(Y,G);
},insertAfter:function(Y,G){Y=E.Dom.get(Y);
G=E.Dom.get(G);
if(!Y||!G||!G[Z]){return null;
}if(G.nextSibling){return G[Z].insertBefore(Y,G.nextSibling);
}else{return G[Z].appendChild(Y);
}},getClientRegion:function(){var x=E.Dom.getDocumentScrollTop(),Y=E.Dom.getDocumentScrollLeft(),y=E.Dom.getViewportWidth()+Y,G=E.Dom.getViewportHeight()+x;
return new E.Region(x,y,G,Y);
},setAttribute:function(Y,G,x){G=E.Dom.CUSTOM_ATTRIBUTES[G]||G;
Y.setAttribute(G,x);
},getAttribute:function(Y,G){G=E.Dom.CUSTOM_ATTRIBUTES[G]||G;
return Y.getAttribute(G);
},_toCamel:function(Y){var x=d;
function G(y,z){return z.toUpperCase();
}return x[Y]||(x[Y]=Y.indexOf("-")===-1?Y:Y.replace(/-([a-z])/gi,G));
},_getClassRegex:function(Y){var G;
if(Y!==undefined){if(Y.exec){G=Y;
}else{G=h[Y];
if(!G){Y=Y.replace(E.Dom._patterns.CLASS_RE_TOKENS,"\\$1");
G=h[Y]=new RegExp(s+Y+k,U);
}}}return G;
},_patterns:{ROOT_TAG:/^body|html$/i,CLASS_RE_TOKENS:/([\.\(\)\^\$\*\+\?\|\[\]\{\}])/g},_testElement:function(G,Y){return G&&G[l]==1&&(!Y||Y(G));
},_calcBorders:function(x,y){var Y=parseInt(E.Dom[w](x,R),10)||0,G=parseInt(E.Dom[w](x,q),10)||0;
if(H){if(N.test(x[C])){Y=0;
G=0;
}}y[0]+=G;
y[1]+=Y;
return y;
}};
var S=E.Dom[w];
if(m.opera){E.Dom[w]=function(Y,G){var x=S(Y,G);
if(X.test(G)){x=E.Dom.Color.toRGB(x);
}return x;
};
}if(m.webkit){E.Dom[w]=function(Y,G){var x=S(Y,G);
if(x==="rgba(0, 0, 0, 0)"){x="transparent";
}return x;
};
}})();
YAHOO.util.Region=function(C,D,A,B){this.top=C;
this.y=C;
this[1]=C;
this.right=D;
this.bottom=A;
this.left=B;
this.x=B;
this[0]=B;
this.width=this.right-this.left;
this.height=this.bottom-this.top;
};
YAHOO.util.Region.prototype.contains=function(A){return(A.left>=this.left&&A.right<=this.right&&A.top>=this.top&&A.bottom<=this.bottom);
};
YAHOO.util.Region.prototype.getArea=function(){return((this.bottom-this.top)*(this.right-this.left));
};
YAHOO.util.Region.prototype.intersect=function(E){var C=Math.max(this.top,E.top),D=Math.min(this.right,E.right),A=Math.min(this.bottom,E.bottom),B=Math.max(this.left,E.left);
if(A>=C&&D>=B){return new YAHOO.util.Region(C,D,A,B);
}else{return null;
}};
YAHOO.util.Region.prototype.union=function(E){var C=Math.min(this.top,E.top),D=Math.max(this.right,E.right),A=Math.max(this.bottom,E.bottom),B=Math.min(this.left,E.left);
return new YAHOO.util.Region(C,D,A,B);
};
YAHOO.util.Region.prototype.toString=function(){return("Region {top: "+this.top+", right: "+this.right+", bottom: "+this.bottom+", left: "+this.left+", height: "+this.height+", width: "+this.width+"}");
};
YAHOO.util.Region.getRegion=function(D){var F=YAHOO.util.Dom.getXY(D),C=F[1],E=F[0]+D.offsetWidth,A=F[1]+D.offsetHeight,B=F[0];
return new YAHOO.util.Region(C,E,A,B);
};
YAHOO.util.Point=function(A,B){if(YAHOO.lang.isArray(A)){B=A[1];
A=A[0];
}YAHOO.util.Point.superclass.constructor.call(this,B,A,B,A);
};
YAHOO.extend(YAHOO.util.Point,YAHOO.util.Region);
(function(){var B=YAHOO.util,A="clientTop",F="clientLeft",J="parentNode",K="right",W="hasLayout",I="px",U="opacity",L="auto",D="borderLeftWidth",G="borderTopWidth",P="borderRightWidth",V="borderBottomWidth",S="visible",Q="transparent",N="height",E="width",H="style",T="currentStyle",R=/^width|height$/,O=/^(\d[.\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz|%){1}?/i,M={get:function(X,Z){var Y="",a=X[T][Z];
if(Z===U){Y=B.Dom.getStyle(X,U);
}else{if(!a||(a.indexOf&&a.indexOf(I)>-1)){Y=a;
}else{if(B.Dom.IE_COMPUTED[Z]){Y=B.Dom.IE_COMPUTED[Z](X,Z);
}else{if(O.test(a)){Y=B.Dom.IE.ComputedStyle.getPixel(X,Z);
}else{Y=a;
}}}}return Y;
},getOffset:function(Z,e){var b=Z[T][e],X=e.charAt(0).toUpperCase()+e.substr(1),c="offset"+X,Y="pixel"+X,a="",d;
if(b==L){d=Z[c];
if(d===undefined){a=0;
}a=d;
if(R.test(e)){Z[H][e]=d;
if(Z[c]>d){a=d-(Z[c]-d);
}Z[H][e]=L;
}}else{if(!Z[H][Y]&&!Z[H][e]){Z[H][e]=b;
}a=Z[H][Y];
}return a+I;
},getBorderWidth:function(X,Z){var Y=null;
if(!X[T][W]){X[H].zoom=1;
}switch(Z){case G:Y=X[A];
break;
case V:Y=X.offsetHeight-X.clientHeight-X[A];
break;
case D:Y=X[F];
break;
case P:Y=X.offsetWidth-X.clientWidth-X[F];
break;
}return Y+I;
},getPixel:function(Y,X){var a=null,b=Y[T][K],Z=Y[T][X];
Y[H][K]=Z;
a=Y[H].pixelRight;
Y[H][K]=b;
return a+I;
},getMargin:function(Y,X){var Z;
if(Y[T][X]==L){Z=0+I;
}else{Z=B.Dom.IE.ComputedStyle.getPixel(Y,X);
}return Z;
},getVisibility:function(Y,X){var Z;
while((Z=Y[T])&&Z[X]=="inherit"){Y=Y[J];
}return(Z)?Z[X]:S;
},getColor:function(Y,X){return B.Dom.Color.toRGB(Y[T][X])||Q;
},getBorderColor:function(Y,X){var Z=Y[T],a=Z[X]||Z.color;
return B.Dom.Color.toRGB(B.Dom.Color.toHex(a));
}},C={};
C.top=C.right=C.bottom=C.left=C[E]=C[N]=M.getOffset;
C.color=M.getColor;
C[G]=C[P]=C[V]=C[D]=M.getBorderWidth;
C.marginTop=C.marginRight=C.marginBottom=C.marginLeft=M.getMargin;
C.visibility=M.getVisibility;
C.borderColor=C.borderTopColor=C.borderRightColor=C.borderBottomColor=C.borderLeftColor=M.getBorderColor;
B.Dom.IE_COMPUTED=C;
B.Dom.IE_ComputedStyle=M;
})();
(function(){var C="toString",A=parseInt,B=RegExp,D=YAHOO.util;
D.Dom.Color={KEYWORDS:{black:"000",silver:"c0c0c0",gray:"808080",white:"fff",maroon:"800000",red:"f00",purple:"800080",fuchsia:"f0f",green:"008000",lime:"0f0",olive:"808000",yellow:"ff0",navy:"000080",blue:"00f",teal:"008080",aqua:"0ff"},re_RGB:/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i,re_hex:/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,re_hex3:/([0-9A-F])/gi,toRGB:function(E){if(!D.Dom.Color.re_RGB.test(E)){E=D.Dom.Color.toHex(E);
}if(D.Dom.Color.re_hex.exec(E)){E="rgb("+[A(B.$1,16),A(B.$2,16),A(B.$3,16)].join(", ")+")";
}return E;
},toHex:function(H){H=D.Dom.Color.KEYWORDS[H]||H;
if(D.Dom.Color.re_RGB.exec(H)){var G=(B.$1.length===1)?"0"+B.$1:Number(B.$1),F=(B.$2.length===1)?"0"+B.$2:Number(B.$2),E=(B.$3.length===1)?"0"+B.$3:Number(B.$3);
H=[G[C](16),F[C](16),E[C](16)].join("");
}if(H.length<6){H=H.replace(D.Dom.Color.re_hex3,"$1$1");
}if(H!=="transparent"&&H.indexOf("#")<0){H="#"+H;
}return H.toLowerCase();
}};
}());
YAHOO.register("dom",YAHOO.util.Dom,{version:"2.7.0",build:"1796"});
YAHOO.util.CustomEvent=function(D,C,B,A){this.type=D;
this.scope=C||window;
this.silent=B;
this.signature=A||YAHOO.util.CustomEvent.LIST;
this.subscribers=[];
if(!this.silent){}var E="_YUICEOnSubscribe";
if(D!==E){this.subscribeEvent=new YAHOO.util.CustomEvent(E,this,true);
}this.lastError=null;
};
YAHOO.util.CustomEvent.LIST=0;
YAHOO.util.CustomEvent.FLAT=1;
YAHOO.util.CustomEvent.prototype={subscribe:function(A,B,C){if(!A){throw new Error("Invalid callback for subscriber to '"+this.type+"'");
}if(this.subscribeEvent){this.subscribeEvent.fire(A,B,C);
}this.subscribers.push(new YAHOO.util.Subscriber(A,B,C));
},unsubscribe:function(D,F){if(!D){return this.unsubscribeAll();
}var E=false;
for(var B=0,A=this.subscribers.length;
B<A;
++B){var C=this.subscribers[B];
if(C&&C.contains(D,F)){this._delete(B);
E=true;
}}return E;
},fire:function(){this.lastError=null;
var K=[],E=this.subscribers.length;
if(!E&&this.silent){return true;
}var I=[].slice.call(arguments,0),G=true,D,J=false;
if(!this.silent){}var C=this.subscribers.slice(),A=YAHOO.util.Event.throwErrors;
for(D=0;
D<E;
++D){var M=C[D];
if(!M){J=true;
}else{if(!this.silent){}var L=M.getScope(this.scope);
if(this.signature==YAHOO.util.CustomEvent.FLAT){var B=null;
if(I.length>0){B=I[0];
}try{G=M.fn.call(L,B,M.obj);
}catch(F){this.lastError=F;
if(A){throw F;
}}}else{try{G=M.fn.call(L,this.type,I,M.obj);
}catch(H){this.lastError=H;
if(A){throw H;
}}}if(false===G){if(!this.silent){}break;
}}}return(G!==false);
},unsubscribeAll:function(){var A=this.subscribers.length,B;
for(B=A-1;
B>-1;
B--){this._delete(B);
}this.subscribers=[];
return A;
},_delete:function(A){var B=this.subscribers[A];
if(B){delete B.fn;
delete B.obj;
}this.subscribers.splice(A,1);
},toString:function(){return"CustomEvent: '"+this.type+"', context: "+this.scope;
}};
YAHOO.util.Subscriber=function(A,B,C){this.fn=A;
this.obj=YAHOO.lang.isUndefined(B)?null:B;
this.overrideContext=C;
};
YAHOO.util.Subscriber.prototype.getScope=function(A){if(this.overrideContext){if(this.overrideContext===true){return this.obj;
}else{return this.overrideContext;
}}return A;
};
YAHOO.util.Subscriber.prototype.contains=function(A,B){if(B){return(this.fn==A&&this.obj==B);
}else{return(this.fn==A);
}};
YAHOO.util.Subscriber.prototype.toString=function(){return"Subscriber { obj: "+this.obj+", overrideContext: "+(this.overrideContext||"no")+" }";
};
if(!YAHOO.util.Event){YAHOO.util.Event=function(){var H=false;
var I=[];
var J=[];
var G=[];
var E=[];
var C=0;
var F=[];
var B=[];
var A=0;
var D={63232:38,63233:40,63234:37,63235:39,63276:33,63277:34,25:9};
var K=YAHOO.env.ua.ie?"focusin":"focus";
var L=YAHOO.env.ua.ie?"focusout":"blur";
return{POLL_RETRYS:2000,POLL_INTERVAL:20,EL:0,TYPE:1,FN:2,WFN:3,UNLOAD_OBJ:3,ADJ_SCOPE:4,OBJ:5,OVERRIDE:6,lastError:null,isSafari:YAHOO.env.ua.webkit,webkit:YAHOO.env.ua.webkit,isIE:YAHOO.env.ua.ie,_interval:null,_dri:null,DOMReady:false,throwErrors:false,startInterval:function(){if(!this._interval){var M=this;
var N=function(){M._tryPreloadAttach();
};
this._interval=setInterval(N,this.POLL_INTERVAL);
}},onAvailable:function(S,O,Q,R,P){var M=(YAHOO.lang.isString(S))?[S]:S;
for(var N=0;
N<M.length;
N=N+1){F.push({id:M[N],fn:O,obj:Q,overrideContext:R,checkReady:P});
}C=this.POLL_RETRYS;
this.startInterval();
},onContentReady:function(P,M,N,O){this.onAvailable(P,M,N,O,true);
},onDOMReady:function(M,N,O){if(this.DOMReady){setTimeout(function(){var P=window;
if(O){if(O===true){P=N;
}else{P=O;
}}M.call(P,"DOMReady",[],N);
},0);
}else{this.DOMReadyEvent.subscribe(M,N,O);
}},_addListener:function(O,M,Y,S,W,b){if(!Y||!Y.call){return false;
}if(this._isValidCollection(O)){var Z=true;
for(var T=0,V=O.length;
T<V;
++T){Z=this.on(O[T],M,Y,S,W)&&Z;
}return Z;
}else{if(YAHOO.lang.isString(O)){var R=this.getEl(O);
if(R){O=R;
}else{this.onAvailable(O,function(){YAHOO.util.Event.on(O,M,Y,S,W);
});
return true;
}}}if(!O){return false;
}if("unload"==M&&S!==this){J[J.length]=[O,M,Y,S,W];
return true;
}var N=O;
if(W){if(W===true){N=S;
}else{N=W;
}}var P=function(c){return Y.call(N,YAHOO.util.Event.getEvent(c,O),S);
};
var a=[O,M,Y,P,N,S,W];
var U=I.length;
I[U]=a;
if(this.useLegacyEvent(O,M)){var Q=this.getLegacyIndex(O,M);
if(Q==-1||O!=G[Q][0]){Q=G.length;
B[O.id+M]=Q;
G[Q]=[O,M,O["on"+M]];
E[Q]=[];
O["on"+M]=function(c){YAHOO.util.Event.fireLegacyEvent(YAHOO.util.Event.getEvent(c),Q);
};
}E[Q].push(a);
}else{try{this._simpleAdd(O,M,P,b);
}catch(X){this.lastError=X;
this.removeListener(O,M,Y);
return false;
}}return true;
},addListener:function(N,Q,M,O,P){return this._addListener(N,Q,M,O,P,false);
},addFocusListener:function(N,M,O,P){return this._addListener(N,K,M,O,P,true);
},removeFocusListener:function(N,M){return this.removeListener(N,K,M);
},addBlurListener:function(N,M,O,P){return this._addListener(N,L,M,O,P,true);
},removeBlurListener:function(N,M){return this.removeListener(N,L,M);
},fireLegacyEvent:function(R,P){var T=true,M,V,U,N,S;
V=E[P].slice();
for(var O=0,Q=V.length;
O<Q;
++O){U=V[O];
if(U&&U[this.WFN]){N=U[this.ADJ_SCOPE];
S=U[this.WFN].call(N,R);
T=(T&&S);
}}M=G[P];
if(M&&M[2]){M[2](R);
}return T;
},getLegacyIndex:function(N,O){var M=this.generateId(N)+O;
if(typeof B[M]=="undefined"){return -1;
}else{return B[M];
}},useLegacyEvent:function(M,N){return(this.webkit&&this.webkit<419&&("click"==N||"dblclick"==N));
},removeListener:function(N,M,V){var Q,T,X;
if(typeof N=="string"){N=this.getEl(N);
}else{if(this._isValidCollection(N)){var W=true;
for(Q=N.length-1;
Q>-1;
Q--){W=(this.removeListener(N[Q],M,V)&&W);
}return W;
}}if(!V||!V.call){return this.purgeElement(N,false,M);
}if("unload"==M){for(Q=J.length-1;
Q>-1;
Q--){X=J[Q];
if(X&&X[0]==N&&X[1]==M&&X[2]==V){J.splice(Q,1);
return true;
}}return false;
}var R=null;
var S=arguments[3];
if("undefined"===typeof S){S=this._getCacheIndex(N,M,V);
}if(S>=0){R=I[S];
}if(!N||!R){return false;
}if(this.useLegacyEvent(N,M)){var P=this.getLegacyIndex(N,M);
var O=E[P];
if(O){for(Q=0,T=O.length;
Q<T;
++Q){X=O[Q];
if(X&&X[this.EL]==N&&X[this.TYPE]==M&&X[this.FN]==V){O.splice(Q,1);
break;
}}}}else{try{this._simpleRemove(N,M,R[this.WFN],false);
}catch(U){this.lastError=U;
return false;
}}delete I[S][this.WFN];
delete I[S][this.FN];
I.splice(S,1);
return true;
},getTarget:function(O,N){var M=O.target||O.srcElement;
return this.resolveTextNode(M);
},resolveTextNode:function(N){try{if(N&&3==N.nodeType){return N.parentNode;
}}catch(M){}return N;
},getPageX:function(N){var M=N.pageX;
if(!M&&0!==M){M=N.clientX||0;
if(this.isIE){M+=this._getScrollLeft();
}}return M;
},getPageY:function(M){var N=M.pageY;
if(!N&&0!==N){N=M.clientY||0;
if(this.isIE){N+=this._getScrollTop();
}}return N;
},getXY:function(M){return[this.getPageX(M),this.getPageY(M)];
},getRelatedTarget:function(N){var M=N.relatedTarget;
if(!M){if(N.type=="mouseout"){M=N.toElement;
}else{if(N.type=="mouseover"){M=N.fromElement;
}}}return this.resolveTextNode(M);
},getTime:function(O){if(!O.time){var N=new Date().getTime();
try{O.time=N;
}catch(M){this.lastError=M;
return N;
}}return O.time;
},stopEvent:function(M){this.stopPropagation(M);
this.preventDefault(M);
},stopPropagation:function(M){if(M.stopPropagation){M.stopPropagation();
}else{M.cancelBubble=true;
}},preventDefault:function(M){if(M.preventDefault){M.preventDefault();
}else{M.returnValue=false;
}},getEvent:function(O,M){var N=O||window.event;
if(!N){var P=this.getEvent.caller;
while(P){N=P.arguments[0];
if(N&&Event==N.constructor){break;
}P=P.caller;
}}return N;
},getCharCode:function(N){var M=N.keyCode||N.charCode||0;
if(YAHOO.env.ua.webkit&&(M in D)){M=D[M];
}return M;
},_getCacheIndex:function(Q,R,P){for(var O=0,N=I.length;
O<N;
O=O+1){var M=I[O];
if(M&&M[this.FN]==P&&M[this.EL]==Q&&M[this.TYPE]==R){return O;
}}return -1;
},generateId:function(M){var N=M.id;
if(!N){N="yuievtautoid-"+A;
++A;
M.id=N;
}return N;
},_isValidCollection:function(N){try{return(N&&typeof N!=="string"&&N.length&&!N.tagName&&!N.alert&&typeof N[0]!=="undefined");
}catch(M){return false;
}},elCache:{},getEl:function(M){return(typeof M==="string")?document.getElementById(M):M;
},clearCache:function(){},DOMReadyEvent:new YAHOO.util.CustomEvent("DOMReady",this),_load:function(N){if(!H){H=true;
var M=YAHOO.util.Event;
M._ready();
M._tryPreloadAttach();
}},_ready:function(N){var M=YAHOO.util.Event;
if(!M.DOMReady){M.DOMReady=true;
M.DOMReadyEvent.fire();
M._simpleRemove(document,"DOMContentLoaded",M._ready);
}},_tryPreloadAttach:function(){if(F.length===0){C=0;
if(this._interval){clearInterval(this._interval);
this._interval=null;
}return;
}if(this.locked){return;
}if(this.isIE){if(!this.DOMReady){this.startInterval();
return;
}}this.locked=true;
var S=!H;
if(!S){S=(C>0&&F.length>0);
}var R=[];
var T=function(V,W){var U=V;
if(W.overrideContext){if(W.overrideContext===true){U=W.obj;
}else{U=W.overrideContext;
}}W.fn.call(U,W.obj);
};
var N,M,Q,P,O=[];
for(N=0,M=F.length;
N<M;
N=N+1){Q=F[N];
if(Q){P=this.getEl(Q.id);
if(P){if(Q.checkReady){if(H||P.nextSibling||!S){O.push(Q);
F[N]=null;
}}else{T(P,Q);
F[N]=null;
}}else{R.push(Q);
}}}for(N=0,M=O.length;
N<M;
N=N+1){Q=O[N];
T(this.getEl(Q.id),Q);
}C--;
if(S){for(N=F.length-1;
N>-1;
N--){Q=F[N];
if(!Q||!Q.id){F.splice(N,1);
}}this.startInterval();
}else{if(this._interval){clearInterval(this._interval);
this._interval=null;
}}this.locked=false;
},purgeElement:function(Q,R,T){var O=(YAHOO.lang.isString(Q))?this.getEl(Q):Q;
var S=this.getListeners(O,T),P,M;
if(S){for(P=S.length-1;
P>-1;
P--){var N=S[P];
this.removeListener(O,N.type,N.fn);
}}if(R&&O&&O.childNodes){for(P=0,M=O.childNodes.length;
P<M;
++P){this.purgeElement(O.childNodes[P],R,T);
}}},getListeners:function(O,M){var R=[],N;
if(!M){N=[I,J];
}else{if(M==="unload"){N=[J];
}else{N=[I];
}}var T=(YAHOO.lang.isString(O))?this.getEl(O):O;
for(var Q=0;
Q<N.length;
Q=Q+1){var V=N[Q];
if(V){for(var S=0,U=V.length;
S<U;
++S){var P=V[S];
if(P&&P[this.EL]===T&&(!M||M===P[this.TYPE])){R.push({type:P[this.TYPE],fn:P[this.FN],obj:P[this.OBJ],adjust:P[this.OVERRIDE],scope:P[this.ADJ_SCOPE],index:S});
}}}}return(R.length)?R:null;
},_unload:function(T){var N=YAHOO.util.Event,Q,P,O,S,R,U=J.slice(),M;
for(Q=0,S=J.length;
Q<S;
++Q){O=U[Q];
if(O){M=window;
if(O[N.ADJ_SCOPE]){if(O[N.ADJ_SCOPE]===true){M=O[N.UNLOAD_OBJ];
}else{M=O[N.ADJ_SCOPE];
}}O[N.FN].call(M,N.getEvent(T,O[N.EL]),O[N.UNLOAD_OBJ]);
U[Q]=null;
}}O=null;
M=null;
J=null;
if(I){for(P=I.length-1;
P>-1;
P--){O=I[P];
if(O){N.removeListener(O[N.EL],O[N.TYPE],O[N.FN],P);
}}O=null;
}G=null;
N._simpleRemove(window,"unload",N._unload);
},_getScrollLeft:function(){return this._getScroll()[1];
},_getScrollTop:function(){return this._getScroll()[0];
},_getScroll:function(){var M=document.documentElement,N=document.body;
if(M&&(M.scrollTop||M.scrollLeft)){return[M.scrollTop,M.scrollLeft];
}else{if(N){return[N.scrollTop,N.scrollLeft];
}else{return[0,0];
}}},regCE:function(){},_simpleAdd:function(){if(window.addEventListener){return function(O,P,N,M){O.addEventListener(P,N,(M));
};
}else{if(window.attachEvent){return function(O,P,N,M){O.attachEvent("on"+P,N);
};
}else{return function(){};
}}}(),_simpleRemove:function(){if(window.removeEventListener){return function(O,P,N,M){O.removeEventListener(P,N,(M));
};
}else{if(window.detachEvent){return function(N,O,M){N.detachEvent("on"+O,M);
};
}else{return function(){};
}}}()};
}();
(function(){var EU=YAHOO.util.Event;
EU.on=EU.addListener;
EU.onFocus=EU.addFocusListener;
EU.onBlur=EU.addBlurListener;
if(EU.isIE){YAHOO.util.Event.onDOMReady(YAHOO.util.Event._tryPreloadAttach,YAHOO.util.Event,true);
var n=document.createElement("p");
EU._dri=setInterval(function(){try{n.doScroll("left");
clearInterval(EU._dri);
EU._dri=null;
EU._ready();
n=null;
}catch(ex){}},EU.POLL_INTERVAL);
}else{if(EU.webkit&&EU.webkit<525){EU._dri=setInterval(function(){var rs=document.readyState;
if("loaded"==rs||"complete"==rs){clearInterval(EU._dri);
EU._dri=null;
EU._ready();
}},EU.POLL_INTERVAL);
}else{EU._simpleAdd(document,"DOMContentLoaded",EU._ready);
}}EU._simpleAdd(window,"load",EU._load);
EU._simpleAdd(window,"unload",EU._unload);
EU._tryPreloadAttach();
})();
}YAHOO.util.EventProvider=function(){};
YAHOO.util.EventProvider.prototype={__yui_events:null,__yui_subscribers:null,subscribe:function(A,C,F,E){this.__yui_events=this.__yui_events||{};
var D=this.__yui_events[A];
if(D){D.subscribe(C,F,E);
}else{this.__yui_subscribers=this.__yui_subscribers||{};
var B=this.__yui_subscribers;
if(!B[A]){B[A]=[];
}B[A].push({fn:C,obj:F,overrideContext:E});
}},unsubscribe:function(C,E,G){this.__yui_events=this.__yui_events||{};
var A=this.__yui_events;
if(C){var F=A[C];
if(F){return F.unsubscribe(E,G);
}}else{var B=true;
for(var D in A){if(YAHOO.lang.hasOwnProperty(A,D)){B=B&&A[D].unsubscribe(E,G);
}}return B;
}return false;
},unsubscribeAll:function(A){return this.unsubscribe(A);
},createEvent:function(G,D){this.__yui_events=this.__yui_events||{};
var A=D||{};
var I=this.__yui_events;
if(I[G]){}else{var H=A.scope||this;
var E=(A.silent);
var B=new YAHOO.util.CustomEvent(G,H,E,YAHOO.util.CustomEvent.FLAT);
I[G]=B;
if(A.onSubscribeCallback){B.subscribeEvent.subscribe(A.onSubscribeCallback);
}this.__yui_subscribers=this.__yui_subscribers||{};
var F=this.__yui_subscribers[G];
if(F){for(var C=0;
C<F.length;
++C){B.subscribe(F[C].fn,F[C].obj,F[C].overrideContext);
}}}return I[G];
},fireEvent:function(E,D,A,C){this.__yui_events=this.__yui_events||{};
var G=this.__yui_events[E];
if(!G){return null;
}var B=[];
for(var F=1;
F<arguments.length;
++F){B.push(arguments[F]);
}return G.fire.apply(G,B);
},hasEvent:function(A){if(this.__yui_events){if(this.__yui_events[A]){return true;
}}return false;
}};
(function(){var A=YAHOO.util.Event,C=YAHOO.lang;
YAHOO.util.KeyListener=function(D,I,E,F){if(!D){}else{if(!I){}else{if(!E){}}}if(!F){F=YAHOO.util.KeyListener.KEYDOWN;
}var G=new YAHOO.util.CustomEvent("keyPressed");
this.enabledEvent=new YAHOO.util.CustomEvent("enabled");
this.disabledEvent=new YAHOO.util.CustomEvent("disabled");
if(C.isString(D)){D=document.getElementById(D);
}if(C.isFunction(E)){G.subscribe(E);
}else{G.subscribe(E.fn,E.scope,E.correctScope);
}function H(O,N){if(!I.shift){I.shift=false;
}if(!I.alt){I.alt=false;
}if(!I.ctrl){I.ctrl=false;
}if(O.shiftKey==I.shift&&O.altKey==I.alt&&O.ctrlKey==I.ctrl){var J,M=I.keys,L;
if(YAHOO.lang.isArray(M)){for(var K=0;
K<M.length;
K++){J=M[K];
L=A.getCharCode(O);
if(J==L){G.fire(L,O);
break;
}}}else{L=A.getCharCode(O);
if(M==L){G.fire(L,O);
}}}}this.enable=function(){if(!this.enabled){A.on(D,F,H);
this.enabledEvent.fire(I);
}this.enabled=true;
};
this.disable=function(){if(this.enabled){A.removeListener(D,F,H);
this.disabledEvent.fire(I);
}this.enabled=false;
};
this.toString=function(){return"KeyListener ["+I.keys+"] "+D.tagName+(D.id?"["+D.id+"]":"");
};
};
var B=YAHOO.util.KeyListener;
B.KEYDOWN="keydown";
B.KEYUP="keyup";
B.KEY={ALT:18,BACK_SPACE:8,CAPS_LOCK:20,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,META:224,NUM_LOCK:144,PAGE_DOWN:34,PAGE_UP:33,PAUSE:19,PRINTSCREEN:44,RIGHT:39,SCROLL_LOCK:145,SHIFT:16,SPACE:32,TAB:9,UP:38};
})();
YAHOO.register("event",YAHOO.util.Event,{version:"2.7.0",build:"1796"});
YAHOO.register("yahoo-dom-event",YAHOO,{version:"2.7.0",build:"1796"});
if(!YAHOO.util.DragDropMgr){YAHOO.util.DragDropMgr=function(){var A=YAHOO.util.Event,B=YAHOO.util.Dom;
return{useShim:false,_shimActive:false,_shimState:false,_debugShim:false,_createShim:function(){var C=document.createElement("div");
C.id="yui-ddm-shim";
if(document.body.firstChild){document.body.insertBefore(C,document.body.firstChild);
}else{document.body.appendChild(C);
}C.style.display="none";
C.style.backgroundColor="red";
C.style.position="absolute";
C.style.zIndex="99999";
B.setStyle(C,"opacity","0");
this._shim=C;
A.on(C,"mouseup",this.handleMouseUp,this,true);
A.on(C,"mousemove",this.handleMouseMove,this,true);
A.on(window,"scroll",this._sizeShim,this,true);
},_sizeShim:function(){if(this._shimActive){var C=this._shim;
C.style.height=B.getDocumentHeight()+"px";
C.style.width=B.getDocumentWidth()+"px";
C.style.top="0";
C.style.left="0";
}},_activateShim:function(){if(this.useShim){if(!this._shim){this._createShim();
}this._shimActive=true;
var C=this._shim,D="0";
if(this._debugShim){D=".5";
}B.setStyle(C,"opacity",D);
this._sizeShim();
C.style.display="block";
}},_deactivateShim:function(){this._shim.style.display="none";
this._shimActive=false;
},_shim:null,ids:{},handleIds:{},dragCurrent:null,dragOvers:{},deltaX:0,deltaY:0,preventDefault:true,stopPropagation:true,initialized:false,locked:false,interactionInfo:null,init:function(){this.initialized=true;
},POINT:0,INTERSECT:1,STRICT_INTERSECT:2,mode:0,_execOnAll:function(E,D){for(var F in this.ids){for(var C in this.ids[F]){var G=this.ids[F][C];
if(!this.isTypeOfDD(G)){continue;
}G[E].apply(G,D);
}}},_onLoad:function(){this.init();
A.on(document,"mouseup",this.handleMouseUp,this,true);
A.on(document,"mousemove",this.handleMouseMove,this,true);
A.on(window,"unload",this._onUnload,this,true);
A.on(window,"resize",this._onResize,this,true);
},_onResize:function(C){this._execOnAll("resetConstraints",[]);
},lock:function(){this.locked=true;
},unlock:function(){this.locked=false;
},isLocked:function(){return this.locked;
},locationCache:{},useCache:true,clickPixelThresh:3,clickTimeThresh:1000,dragThreshMet:false,clickTimeout:null,startX:0,startY:0,fromTimeout:false,regDragDrop:function(D,C){if(!this.initialized){this.init();
}if(!this.ids[C]){this.ids[C]={};
}this.ids[C][D.id]=D;
},removeDDFromGroup:function(E,C){if(!this.ids[C]){this.ids[C]={};
}var D=this.ids[C];
if(D&&D[E.id]){delete D[E.id];
}},_remove:function(E){for(var D in E.groups){if(D){var C=this.ids[D];
if(C&&C[E.id]){delete C[E.id];
}}}delete this.handleIds[E.id];
},regHandle:function(D,C){if(!this.handleIds[D]){this.handleIds[D]={};
}this.handleIds[D][C]=C;
},isDragDrop:function(C){return(this.getDDById(C))?true:false;
},getRelated:function(H,D){var G=[];
for(var F in H.groups){for(var E in this.ids[F]){var C=this.ids[F][E];
if(!this.isTypeOfDD(C)){continue;
}if(!D||C.isTarget){G[G.length]=C;
}}}return G;
},isLegalTarget:function(G,F){var D=this.getRelated(G,true);
for(var E=0,C=D.length;
E<C;
++E){if(D[E].id==F.id){return true;
}}return false;
},isTypeOfDD:function(C){return(C&&C.__ygDragDrop);
},isHandle:function(D,C){return(this.handleIds[D]&&this.handleIds[D][C]);
},getDDById:function(D){for(var C in this.ids){if(this.ids[C][D]){return this.ids[C][D];
}}return null;
},handleMouseDown:function(E,D){this.currentTarget=YAHOO.util.Event.getTarget(E);
this.dragCurrent=D;
var C=D.getEl();
this.startX=YAHOO.util.Event.getPageX(E);
this.startY=YAHOO.util.Event.getPageY(E);
this.deltaX=this.startX-C.offsetLeft;
this.deltaY=this.startY-C.offsetTop;
this.dragThreshMet=false;
this.clickTimeout=setTimeout(function(){var F=YAHOO.util.DDM;
F.startDrag(F.startX,F.startY);
F.fromTimeout=true;
},this.clickTimeThresh);
},startDrag:function(C,E){if(this.dragCurrent&&this.dragCurrent.useShim){this._shimState=this.useShim;
this.useShim=true;
}this._activateShim();
clearTimeout(this.clickTimeout);
var D=this.dragCurrent;
if(D&&D.events.b4StartDrag){D.b4StartDrag(C,E);
D.fireEvent("b4StartDragEvent",{x:C,y:E});
}if(D&&D.events.startDrag){D.startDrag(C,E);
D.fireEvent("startDragEvent",{x:C,y:E});
}this.dragThreshMet=true;
},handleMouseUp:function(C){if(this.dragCurrent){clearTimeout(this.clickTimeout);
if(this.dragThreshMet){if(this.fromTimeout){this.fromTimeout=false;
this.handleMouseMove(C);
}this.fromTimeout=false;
this.fireEvents(C,true);
}else{}this.stopDrag(C);
this.stopEvent(C);
}},stopEvent:function(C){if(this.stopPropagation){YAHOO.util.Event.stopPropagation(C);
}if(this.preventDefault){YAHOO.util.Event.preventDefault(C);
}},stopDrag:function(E,D){var C=this.dragCurrent;
if(C&&!D){if(this.dragThreshMet){if(C.events.b4EndDrag){C.b4EndDrag(E);
C.fireEvent("b4EndDragEvent",{e:E});
}if(C.events.endDrag){C.endDrag(E);
C.fireEvent("endDragEvent",{e:E});
}}if(C.events.mouseUp){C.onMouseUp(E);
C.fireEvent("mouseUpEvent",{e:E});
}}if(this._shimActive){this._deactivateShim();
if(this.dragCurrent&&this.dragCurrent.useShim){this.useShim=this._shimState;
this._shimState=false;
}}this.dragCurrent=null;
this.dragOvers={};
},handleMouseMove:function(F){var C=this.dragCurrent;
if(C){if(YAHOO.util.Event.isIE&&!F.button){this.stopEvent(F);
return this.handleMouseUp(F);
}else{if(F.clientX<0||F.clientY<0){}}if(!this.dragThreshMet){var E=Math.abs(this.startX-YAHOO.util.Event.getPageX(F));
var D=Math.abs(this.startY-YAHOO.util.Event.getPageY(F));
if(E>this.clickPixelThresh||D>this.clickPixelThresh){this.startDrag(this.startX,this.startY);
}}if(this.dragThreshMet){if(C&&C.events.b4Drag){C.b4Drag(F);
C.fireEvent("b4DragEvent",{e:F});
}if(C&&C.events.drag){C.onDrag(F);
C.fireEvent("dragEvent",{e:F});
}if(C){this.fireEvents(F,false);
}}this.stopEvent(F);
}},fireEvents:function(V,L){var a=this.dragCurrent;
if(!a||a.isLocked()||a.dragOnly){return;
}var N=YAHOO.util.Event.getPageX(V),M=YAHOO.util.Event.getPageY(V),P=new YAHOO.util.Point(N,M),K=a.getTargetCoord(P.x,P.y),F=a.getDragEl(),E=["out","over","drop","enter"],U=new YAHOO.util.Region(K.y,K.x+F.offsetWidth,K.y+F.offsetHeight,K.x),I=[],D={},Q=[],c={outEvts:[],overEvts:[],dropEvts:[],enterEvts:[]};
for(var S in this.dragOvers){var d=this.dragOvers[S];
if(!this.isTypeOfDD(d)){continue;
}if(!this.isOverTarget(P,d,this.mode,U)){c.outEvts.push(d);
}I[S]=true;
delete this.dragOvers[S];
}for(var R in a.groups){if("string"!=typeof R){continue;
}for(S in this.ids[R]){var G=this.ids[R][S];
if(!this.isTypeOfDD(G)){continue;
}if(G.isTarget&&!G.isLocked()&&G!=a){if(this.isOverTarget(P,G,this.mode,U)){D[R]=true;
if(L){c.dropEvts.push(G);
}else{if(!I[G.id]){c.enterEvts.push(G);
}else{c.overEvts.push(G);
}this.dragOvers[G.id]=G;
}}}}}this.interactionInfo={out:c.outEvts,enter:c.enterEvts,over:c.overEvts,drop:c.dropEvts,point:P,draggedRegion:U,sourceRegion:this.locationCache[a.id],validDrop:L};
for(var C in D){Q.push(C);
}if(L&&!c.dropEvts.length){this.interactionInfo.validDrop=false;
if(a.events.invalidDrop){a.onInvalidDrop(V);
a.fireEvent("invalidDropEvent",{e:V});
}}for(S=0;
S<E.length;
S++){var Y=null;
if(c[E[S]+"Evts"]){Y=c[E[S]+"Evts"];
}if(Y&&Y.length){var H=E[S].charAt(0).toUpperCase()+E[S].substr(1),X="onDrag"+H,J="b4Drag"+H,O="drag"+H+"Event",W="drag"+H;
if(this.mode){if(a.events[J]){a[J](V,Y,Q);
a.fireEvent(J+"Event",{event:V,info:Y,group:Q});
}if(a.events[W]){a[X](V,Y,Q);
a.fireEvent(O,{event:V,info:Y,group:Q});
}}else{for(var Z=0,T=Y.length;
Z<T;
++Z){if(a.events[J]){a[J](V,Y[Z].id,Q[0]);
a.fireEvent(J+"Event",{event:V,info:Y[Z].id,group:Q[0]});
}if(a.events[W]){a[X](V,Y[Z].id,Q[0]);
a.fireEvent(O,{event:V,info:Y[Z].id,group:Q[0]});
}}}}}},getBestMatch:function(E){var G=null;
var D=E.length;
if(D==1){G=E[0];
}else{for(var F=0;
F<D;
++F){var C=E[F];
if(this.mode==this.INTERSECT&&C.cursorIsOver){G=C;
break;
}else{if(!G||!G.overlap||(C.overlap&&G.overlap.getArea()<C.overlap.getArea())){G=C;
}}}}return G;
},refreshCache:function(D){var F=D||this.ids;
for(var C in F){if("string"!=typeof C){continue;
}for(var E in this.ids[C]){var G=this.ids[C][E];
if(this.isTypeOfDD(G)){var H=this.getLocation(G);
if(H){this.locationCache[G.id]=H;
}else{delete this.locationCache[G.id];
}}}}},verifyEl:function(D){try{if(D){var C=D.offsetParent;
if(C){return true;
}}}catch(E){}return false;
},getLocation:function(H){if(!this.isTypeOfDD(H)){return null;
}var F=H.getEl(),K,E,D,M,L,N,C,J,G;
try{K=YAHOO.util.Dom.getXY(F);
}catch(I){}if(!K){return null;
}E=K[0];
D=E+F.offsetWidth;
M=K[1];
L=M+F.offsetHeight;
N=M-H.padding[0];
C=D+H.padding[1];
J=L+H.padding[2];
G=E-H.padding[3];
return new YAHOO.util.Region(N,C,J,G);
},isOverTarget:function(K,C,E,F){var G=this.locationCache[C.id];
if(!G||!this.useCache){G=this.getLocation(C);
this.locationCache[C.id]=G;
}if(!G){return false;
}C.cursorIsOver=G.contains(K);
var J=this.dragCurrent;
if(!J||(!E&&!J.constrainX&&!J.constrainY)){return C.cursorIsOver;
}C.overlap=null;
if(!F){var H=J.getTargetCoord(K.x,K.y);
var D=J.getDragEl();
F=new YAHOO.util.Region(H.y,H.x+D.offsetWidth,H.y+D.offsetHeight,H.x);
}var I=F.intersect(G);
if(I){C.overlap=I;
return(E)?true:C.cursorIsOver;
}else{return false;
}},_onUnload:function(D,C){this.unregAll();
},unregAll:function(){if(this.dragCurrent){this.stopDrag();
this.dragCurrent=null;
}this._execOnAll("unreg",[]);
this.ids={};
},elementCache:{},getElWrapper:function(D){var C=this.elementCache[D];
if(!C||!C.el){C=this.elementCache[D]=new this.ElementWrapper(YAHOO.util.Dom.get(D));
}return C;
},getElement:function(C){return YAHOO.util.Dom.get(C);
},getCss:function(D){var C=YAHOO.util.Dom.get(D);
return(C)?C.style:null;
},ElementWrapper:function(C){this.el=C||null;
this.id=this.el&&C.id;
this.css=this.el&&C.style;
},getPosX:function(C){return YAHOO.util.Dom.getX(C);
},getPosY:function(C){return YAHOO.util.Dom.getY(C);
},swapNode:function(E,C){if(E.swapNode){E.swapNode(C);
}else{var F=C.parentNode;
var D=C.nextSibling;
if(D==E){F.insertBefore(E,C);
}else{if(C==E.nextSibling){F.insertBefore(C,E);
}else{E.parentNode.replaceChild(C,E);
F.insertBefore(E,D);
}}}},getScroll:function(){var E,C,F=document.documentElement,D=document.body;
if(F&&(F.scrollTop||F.scrollLeft)){E=F.scrollTop;
C=F.scrollLeft;
}else{if(D){E=D.scrollTop;
C=D.scrollLeft;
}else{}}return{top:E,left:C};
},getStyle:function(D,C){return YAHOO.util.Dom.getStyle(D,C);
},getScrollTop:function(){return this.getScroll().top;
},getScrollLeft:function(){return this.getScroll().left;
},moveToEl:function(C,E){var D=YAHOO.util.Dom.getXY(E);
YAHOO.util.Dom.setXY(C,D);
},getClientHeight:function(){return YAHOO.util.Dom.getViewportHeight();
},getClientWidth:function(){return YAHOO.util.Dom.getViewportWidth();
},numericSort:function(D,C){return(D-C);
},_timeoutCount:0,_addListeners:function(){var C=YAHOO.util.DDM;
if(YAHOO.util.Event&&document){C._onLoad();
}else{if(C._timeoutCount>2000){}else{setTimeout(C._addListeners,10);
if(document&&document.body){C._timeoutCount+=1;
}}}},handleWasClicked:function(C,E){if(this.isHandle(E,C.id)){return true;
}else{var D=C.parentNode;
while(D){if(this.isHandle(E,D.id)){return true;
}else{D=D.parentNode;
}}}return false;
}};
}();
YAHOO.util.DDM=YAHOO.util.DragDropMgr;
YAHOO.util.DDM._addListeners();
}(function(){var A=YAHOO.util.Event;
var B=YAHOO.util.Dom;
YAHOO.util.DragDrop=function(E,C,D){if(E){this.init(E,C,D);
}};
YAHOO.util.DragDrop.prototype={events:null,on:function(){this.subscribe.apply(this,arguments);
},id:null,config:null,dragElId:null,handleElId:null,invalidHandleTypes:null,invalidHandleIds:null,invalidHandleClasses:null,startPageX:0,startPageY:0,groups:null,locked:false,lock:function(){this.locked=true;
},unlock:function(){this.locked=false;
},isTarget:true,padding:null,dragOnly:false,useShim:false,_domRef:null,__ygDragDrop:true,constrainX:false,constrainY:false,minX:0,maxX:0,minY:0,maxY:0,deltaX:0,deltaY:0,maintainOffset:false,xTicks:null,yTicks:null,primaryButtonOnly:true,available:false,hasOuterHandles:false,cursorIsOver:false,overlap:null,b4StartDrag:function(C,D){},startDrag:function(C,D){},b4Drag:function(C){},onDrag:function(C){},onDragEnter:function(C,D){},b4DragOver:function(C){},onDragOver:function(C,D){},b4DragOut:function(C){},onDragOut:function(C,D){},b4DragDrop:function(C){},onDragDrop:function(C,D){},onInvalidDrop:function(C){},b4EndDrag:function(C){},endDrag:function(C){},b4MouseDown:function(C){},onMouseDown:function(C){},onMouseUp:function(C){},onAvailable:function(){},getEl:function(){if(!this._domRef){this._domRef=B.get(this.id);
}return this._domRef;
},getDragEl:function(){return B.get(this.dragElId);
},init:function(F,C,D){this.initTarget(F,C,D);
A.on(this._domRef||this.id,"mousedown",this.handleMouseDown,this,true);
for(var E in this.events){this.createEvent(E+"Event");
}},initTarget:function(E,C,D){this.config=D||{};
this.events={};
this.DDM=YAHOO.util.DDM;
this.groups={};
if(typeof E!=="string"){this._domRef=E;
E=B.generateId(E);
}this.id=E;
this.addToGroup((C)?C:"default");
this.handleElId=E;
A.onAvailable(E,this.handleOnAvailable,this,true);
this.setDragElId(E);
this.invalidHandleTypes={A:"A"};
this.invalidHandleIds={};
this.invalidHandleClasses=[];
this.applyConfig();
},applyConfig:function(){this.events={mouseDown:true,b4MouseDown:true,mouseUp:true,b4StartDrag:true,startDrag:true,b4EndDrag:true,endDrag:true,drag:true,b4Drag:true,invalidDrop:true,b4DragOut:true,dragOut:true,dragEnter:true,b4DragOver:true,dragOver:true,b4DragDrop:true,dragDrop:true};
if(this.config.events){for(var C in this.config.events){if(this.config.events[C]===false){this.events[C]=false;
}}}this.padding=this.config.padding||[0,0,0,0];
this.isTarget=(this.config.isTarget!==false);
this.maintainOffset=(this.config.maintainOffset);
this.primaryButtonOnly=(this.config.primaryButtonOnly!==false);
this.dragOnly=((this.config.dragOnly===true)?true:false);
this.useShim=((this.config.useShim===true)?true:false);
},handleOnAvailable:function(){this.available=true;
this.resetConstraints();
this.onAvailable();
},setPadding:function(E,C,F,D){if(!C&&0!==C){this.padding=[E,E,E,E];
}else{if(!F&&0!==F){this.padding=[E,C,E,C];
}else{this.padding=[E,C,F,D];
}}},setInitPosition:function(F,E){var G=this.getEl();
if(!this.DDM.verifyEl(G)){if(G&&G.style&&(G.style.display=="none")){}else{}return;
}var D=F||0;
var C=E||0;
var H=B.getXY(G);
this.initPageX=H[0]-D;
this.initPageY=H[1]-C;
this.lastPageX=H[0];
this.lastPageY=H[1];
this.setStartPosition(H);
},setStartPosition:function(D){var C=D||B.getXY(this.getEl());
this.deltaSetXY=null;
this.startPageX=C[0];
this.startPageY=C[1];
},addToGroup:function(C){this.groups[C]=true;
this.DDM.regDragDrop(this,C);
},removeFromGroup:function(C){if(this.groups[C]){delete this.groups[C];
}this.DDM.removeDDFromGroup(this,C);
},setDragElId:function(C){this.dragElId=C;
},setHandleElId:function(C){if(typeof C!=="string"){C=B.generateId(C);
}this.handleElId=C;
this.DDM.regHandle(this.id,C);
},setOuterHandleElId:function(C){if(typeof C!=="string"){C=B.generateId(C);
}A.on(C,"mousedown",this.handleMouseDown,this,true);
this.setHandleElId(C);
this.hasOuterHandles=true;
},unreg:function(){A.removeListener(this.id,"mousedown",this.handleMouseDown);
this._domRef=null;
this.DDM._remove(this);
},isLocked:function(){return(this.DDM.isLocked()||this.locked);
},handleMouseDown:function(J,I){var D=J.which||J.button;
if(this.primaryButtonOnly&&D>1){return;
}if(this.isLocked()){return;
}var C=this.b4MouseDown(J),F=true;
if(this.events.b4MouseDown){F=this.fireEvent("b4MouseDownEvent",J);
}var E=this.onMouseDown(J),H=true;
if(this.events.mouseDown){H=this.fireEvent("mouseDownEvent",J);
}if((C===false)||(E===false)||(F===false)||(H===false)){return;
}this.DDM.refreshCache(this.groups);
var G=new YAHOO.util.Point(A.getPageX(J),A.getPageY(J));
if(!this.hasOuterHandles&&!this.DDM.isOverTarget(G,this)){}else{if(this.clickValidator(J)){this.setStartPosition();
this.DDM.handleMouseDown(J,this);
this.DDM.stopEvent(J);
}else{}}},clickValidator:function(D){var C=YAHOO.util.Event.getTarget(D);
return(this.isValidHandleChild(C)&&(this.id==this.handleElId||this.DDM.handleWasClicked(C,this.id)));
},getTargetCoord:function(E,D){var C=E-this.deltaX;
var F=D-this.deltaY;
if(this.constrainX){if(C<this.minX){C=this.minX;
}if(C>this.maxX){C=this.maxX;
}}if(this.constrainY){if(F<this.minY){F=this.minY;
}if(F>this.maxY){F=this.maxY;
}}C=this.getTick(C,this.xTicks);
F=this.getTick(F,this.yTicks);
return{x:C,y:F};
},addInvalidHandleType:function(C){var D=C.toUpperCase();
this.invalidHandleTypes[D]=D;
},addInvalidHandleId:function(C){if(typeof C!=="string"){C=B.generateId(C);
}this.invalidHandleIds[C]=C;
},addInvalidHandleClass:function(C){this.invalidHandleClasses.push(C);
},removeInvalidHandleType:function(C){var D=C.toUpperCase();
delete this.invalidHandleTypes[D];
},removeInvalidHandleId:function(C){if(typeof C!=="string"){C=B.generateId(C);
}delete this.invalidHandleIds[C];
},removeInvalidHandleClass:function(D){for(var E=0,C=this.invalidHandleClasses.length;
E<C;
++E){if(this.invalidHandleClasses[E]==D){delete this.invalidHandleClasses[E];
}}},isValidHandleChild:function(F){var E=true;
var H;
try{H=F.nodeName.toUpperCase();
}catch(G){H=F.nodeName;
}E=E&&!this.invalidHandleTypes[H];
E=E&&!this.invalidHandleIds[F.id];
for(var D=0,C=this.invalidHandleClasses.length;
E&&D<C;
++D){E=!B.hasClass(F,this.invalidHandleClasses[D]);
}return E;
},setXTicks:function(F,C){this.xTicks=[];
this.xTickSize=C;
var E={};
for(var D=this.initPageX;
D>=this.minX;
D=D-C){if(!E[D]){this.xTicks[this.xTicks.length]=D;
E[D]=true;
}}for(D=this.initPageX;
D<=this.maxX;
D=D+C){if(!E[D]){this.xTicks[this.xTicks.length]=D;
E[D]=true;
}}this.xTicks.sort(this.DDM.numericSort);
},setYTicks:function(F,C){this.yTicks=[];
this.yTickSize=C;
var E={};
for(var D=this.initPageY;
D>=this.minY;
D=D-C){if(!E[D]){this.yTicks[this.yTicks.length]=D;
E[D]=true;
}}for(D=this.initPageY;
D<=this.maxY;
D=D+C){if(!E[D]){this.yTicks[this.yTicks.length]=D;
E[D]=true;
}}this.yTicks.sort(this.DDM.numericSort);
},setXConstraint:function(E,D,C){this.leftConstraint=parseInt(E,10);
this.rightConstraint=parseInt(D,10);
this.minX=this.initPageX-this.leftConstraint;
this.maxX=this.initPageX+this.rightConstraint;
if(C){this.setXTicks(this.initPageX,C);
}this.constrainX=true;
},clearConstraints:function(){this.constrainX=false;
this.constrainY=false;
this.clearTicks();
},clearTicks:function(){this.xTicks=null;
this.yTicks=null;
this.xTickSize=0;
this.yTickSize=0;
},setYConstraint:function(C,E,D){this.topConstraint=parseInt(C,10);
this.bottomConstraint=parseInt(E,10);
this.minY=this.initPageY-this.topConstraint;
this.maxY=this.initPageY+this.bottomConstraint;
if(D){this.setYTicks(this.initPageY,D);
}this.constrainY=true;
},resetConstraints:function(){if(this.initPageX||this.initPageX===0){var D=(this.maintainOffset)?this.lastPageX-this.initPageX:0;
var C=(this.maintainOffset)?this.lastPageY-this.initPageY:0;
this.setInitPosition(D,C);
}else{this.setInitPosition();
}if(this.constrainX){this.setXConstraint(this.leftConstraint,this.rightConstraint,this.xTickSize);
}if(this.constrainY){this.setYConstraint(this.topConstraint,this.bottomConstraint,this.yTickSize);
}},getTick:function(I,F){if(!F){return I;
}else{if(F[0]>=I){return F[0];
}else{for(var D=0,C=F.length;
D<C;
++D){var E=D+1;
if(F[E]&&F[E]>=I){var H=I-F[D];
var G=F[E]-I;
return(G>H)?F[D]:F[E];
}}return F[F.length-1];
}}},toString:function(){return("DragDrop "+this.id);
}};
YAHOO.augment(YAHOO.util.DragDrop,YAHOO.util.EventProvider);
})();
YAHOO.util.DD=function(C,A,B){if(C){this.init(C,A,B);
}};
YAHOO.extend(YAHOO.util.DD,YAHOO.util.DragDrop,{scroll:true,autoOffset:function(C,B){var A=C-this.startPageX;
var D=B-this.startPageY;
this.setDelta(A,D);
},setDelta:function(B,A){this.deltaX=B;
this.deltaY=A;
},setDragElPos:function(C,B){var A=this.getDragEl();
this.alignElWithMouse(A,C,B);
},alignElWithMouse:function(C,G,F){var E=this.getTargetCoord(G,F);
if(!this.deltaSetXY){var H=[E.x,E.y];
YAHOO.util.Dom.setXY(C,H);
var D=parseInt(YAHOO.util.Dom.getStyle(C,"left"),10);
var B=parseInt(YAHOO.util.Dom.getStyle(C,"top"),10);
this.deltaSetXY=[D-E.x,B-E.y];
}else{YAHOO.util.Dom.setStyle(C,"left",(E.x+this.deltaSetXY[0])+"px");
YAHOO.util.Dom.setStyle(C,"top",(E.y+this.deltaSetXY[1])+"px");
}this.cachePosition(E.x,E.y);
var A=this;
setTimeout(function(){A.autoScroll.call(A,E.x,E.y,C.offsetHeight,C.offsetWidth);
},0);
},cachePosition:function(B,A){if(B){this.lastPageX=B;
this.lastPageY=A;
}else{var C=YAHOO.util.Dom.getXY(this.getEl());
this.lastPageX=C[0];
this.lastPageY=C[1];
}},autoScroll:function(J,I,E,K){if(this.scroll){var L=this.DDM.getClientHeight();
var B=this.DDM.getClientWidth();
var N=this.DDM.getScrollTop();
var D=this.DDM.getScrollLeft();
var H=E+I;
var M=K+J;
var G=(L+N-I-this.deltaY);
var F=(B+D-J-this.deltaX);
var C=40;
var A=(document.all)?80:30;
if(H>L&&G<C){window.scrollTo(D,N+A);
}if(I<N&&N>0&&I-N<C){window.scrollTo(D,N-A);
}if(M>B&&F<C){window.scrollTo(D+A,N);
}if(J<D&&D>0&&J-D<C){window.scrollTo(D-A,N);
}}},applyConfig:function(){YAHOO.util.DD.superclass.applyConfig.call(this);
this.scroll=(this.config.scroll!==false);
},b4MouseDown:function(A){this.setStartPosition();
this.autoOffset(YAHOO.util.Event.getPageX(A),YAHOO.util.Event.getPageY(A));
},b4Drag:function(A){this.setDragElPos(YAHOO.util.Event.getPageX(A),YAHOO.util.Event.getPageY(A));
},toString:function(){return("DD "+this.id);
}});
YAHOO.util.DDProxy=function(C,A,B){if(C){this.init(C,A,B);
this.initFrame();
}};
YAHOO.util.DDProxy.dragElId="ygddfdiv";
YAHOO.extend(YAHOO.util.DDProxy,YAHOO.util.DD,{resizeFrame:true,centerFrame:false,createFrame:function(){var B=this,A=document.body;
if(!A||!A.firstChild){setTimeout(function(){B.createFrame();
},50);
return;
}var F=this.getDragEl(),E=YAHOO.util.Dom;
if(!F){F=document.createElement("div");
F.id=this.dragElId;
var D=F.style;
D.position="absolute";
D.visibility="hidden";
D.cursor="move";
D.border="2px solid #aaa";
D.zIndex=999;
D.height="25px";
D.width="25px";
var C=document.createElement("div");
E.setStyle(C,"height","100%");
E.setStyle(C,"width","100%");
E.setStyle(C,"background-color","#ccc");
E.setStyle(C,"opacity","0");
F.appendChild(C);
A.insertBefore(F,A.firstChild);
}},initFrame:function(){this.createFrame();
},applyConfig:function(){YAHOO.util.DDProxy.superclass.applyConfig.call(this);
this.resizeFrame=(this.config.resizeFrame!==false);
this.centerFrame=(this.config.centerFrame);
this.setDragElId(this.config.dragElId||YAHOO.util.DDProxy.dragElId);
},showFrame:function(E,D){var C=this.getEl();
var A=this.getDragEl();
var B=A.style;
this._resizeProxy();
if(this.centerFrame){this.setDelta(Math.round(parseInt(B.width,10)/2),Math.round(parseInt(B.height,10)/2));
}this.setDragElPos(E,D);
YAHOO.util.Dom.setStyle(A,"visibility","visible");
},_resizeProxy:function(){if(this.resizeFrame){var H=YAHOO.util.Dom;
var B=this.getEl();
var C=this.getDragEl();
var G=parseInt(H.getStyle(C,"borderTopWidth"),10);
var I=parseInt(H.getStyle(C,"borderRightWidth"),10);
var F=parseInt(H.getStyle(C,"borderBottomWidth"),10);
var D=parseInt(H.getStyle(C,"borderLeftWidth"),10);
if(isNaN(G)){G=0;
}if(isNaN(I)){I=0;
}if(isNaN(F)){F=0;
}if(isNaN(D)){D=0;
}var E=Math.max(0,B.offsetWidth-I-D);
var A=Math.max(0,B.offsetHeight-G-F);
H.setStyle(C,"width",E+"px");
H.setStyle(C,"height",A+"px");
}},b4MouseDown:function(B){this.setStartPosition();
var A=YAHOO.util.Event.getPageX(B);
var C=YAHOO.util.Event.getPageY(B);
this.autoOffset(A,C);
},b4StartDrag:function(A,B){this.showFrame(A,B);
},b4EndDrag:function(A){YAHOO.util.Dom.setStyle(this.getDragEl(),"visibility","hidden");
},endDrag:function(D){var C=YAHOO.util.Dom;
var B=this.getEl();
var A=this.getDragEl();
C.setStyle(A,"visibility","");
C.setStyle(B,"visibility","hidden");
YAHOO.util.DDM.moveToEl(B,A);
C.setStyle(A,"visibility","hidden");
C.setStyle(B,"visibility","");
},toString:function(){return("DDProxy "+this.id);
}});
YAHOO.util.DDTarget=function(C,A,B){if(C){this.initTarget(C,A,B);
}};
YAHOO.extend(YAHOO.util.DDTarget,YAHOO.util.DragDrop,{toString:function(){return("DDTarget "+this.id);
}});
YAHOO.register("dragdrop",YAHOO.util.DragDropMgr,{version:"2.7.0",build:"1796"});
(function(){var B=YAHOO.util.Dom.getXY,A=YAHOO.util.Event,D=Array.prototype.slice;
function C(G,E,F,H){C.ANIM_AVAIL=(!YAHOO.lang.isUndefined(YAHOO.util.Anim));
if(G){this.init(G,E,true);
this.initSlider(H);
this.initThumb(F);
}}YAHOO.lang.augmentObject(C,{getHorizSlider:function(F,G,I,H,E){return new C(F,F,new YAHOO.widget.SliderThumb(G,F,I,H,0,0,E),"horiz");
},getVertSlider:function(G,H,E,I,F){return new C(G,G,new YAHOO.widget.SliderThumb(H,G,0,0,E,I,F),"vert");
},getSliderRegion:function(G,H,J,I,E,K,F){return new C(G,G,new YAHOO.widget.SliderThumb(H,G,J,I,E,K,F),"region");
},SOURCE_UI_EVENT:1,SOURCE_SET_VALUE:2,SOURCE_KEY_EVENT:3,ANIM_AVAIL:false},true);
YAHOO.extend(C,YAHOO.util.DragDrop,{_mouseDown:false,dragOnly:true,initSlider:function(E){this.type=E;
this.createEvent("change",this);
this.createEvent("slideStart",this);
this.createEvent("slideEnd",this);
this.isTarget=false;
this.animate=C.ANIM_AVAIL;
this.backgroundEnabled=true;
this.tickPause=40;
this.enableKeys=true;
this.keyIncrement=20;
this.moveComplete=true;
this.animationDuration=0.2;
this.SOURCE_UI_EVENT=1;
this.SOURCE_SET_VALUE=2;
this.valueChangeSource=0;
this._silent=false;
this.lastOffset=[0,0];
},initThumb:function(F){var E=this;
this.thumb=F;
F.cacheBetweenDrags=true;
if(F._isHoriz&&F.xTicks&&F.xTicks.length){this.tickPause=Math.round(360/F.xTicks.length);
}else{if(F.yTicks&&F.yTicks.length){this.tickPause=Math.round(360/F.yTicks.length);
}}F.onAvailable=function(){return E.setStartSliderState();
};
F.onMouseDown=function(){E._mouseDown=true;
return E.focus();
};
F.startDrag=function(){E._slideStart();
};
F.onDrag=function(){E.fireEvents(true);
};
F.onMouseUp=function(){E.thumbMouseUp();
};
},onAvailable:function(){this._bindKeyEvents();
},_bindKeyEvents:function(){A.on(this.id,"keydown",this.handleKeyDown,this,true);
A.on(this.id,"keypress",this.handleKeyPress,this,true);
},handleKeyPress:function(F){if(this.enableKeys){var E=A.getCharCode(F);
switch(E){case 37:case 38:case 39:case 40:case 36:case 35:A.preventDefault(F);
break;
default:}}},handleKeyDown:function(J){if(this.enableKeys){var G=A.getCharCode(J),F=this.thumb,H=this.getXValue(),E=this.getYValue(),I=true;
switch(G){case 37:H-=this.keyIncrement;
break;
case 38:E-=this.keyIncrement;
break;
case 39:H+=this.keyIncrement;
break;
case 40:E+=this.keyIncrement;
break;
case 36:H=F.leftConstraint;
E=F.topConstraint;
break;
case 35:H=F.rightConstraint;
E=F.bottomConstraint;
break;
default:I=false;
}if(I){if(F._isRegion){this._setRegionValue(C.SOURCE_KEY_EVENT,H,E,true);
}else{this._setValue(C.SOURCE_KEY_EVENT,(F._isHoriz?H:E),true);
}A.stopEvent(J);
}}},setStartSliderState:function(){this.setThumbCenterPoint();
this.baselinePos=B(this.getEl());
this.thumb.startOffset=this.thumb.getOffsetFromParent(this.baselinePos);
if(this.thumb._isRegion){if(this.deferredSetRegionValue){this._setRegionValue.apply(this,this.deferredSetRegionValue);
this.deferredSetRegionValue=null;
}else{this.setRegionValue(0,0,true,true,true);
}}else{if(this.deferredSetValue){this._setValue.apply(this,this.deferredSetValue);
this.deferredSetValue=null;
}else{this.setValue(0,true,true,true);
}}},setThumbCenterPoint:function(){var E=this.thumb.getEl();
if(E){this.thumbCenterPoint={x:parseInt(E.offsetWidth/2,10),y:parseInt(E.offsetHeight/2,10)};
}},lock:function(){this.thumb.lock();
this.locked=true;
},unlock:function(){this.thumb.unlock();
this.locked=false;
},thumbMouseUp:function(){this._mouseDown=false;
if(!this.isLocked()&&!this.moveComplete){this.endMove();
}},onMouseUp:function(){this._mouseDown=false;
if(this.backgroundEnabled&&!this.isLocked()&&!this.moveComplete){this.endMove();
}},getThumb:function(){return this.thumb;
},focus:function(){this.valueChangeSource=C.SOURCE_UI_EVENT;
var E=this.getEl();
if(E.focus){try{E.focus();
}catch(F){}}this.verifyOffset();
return !this.isLocked();
},onChange:function(E,F){},onSlideStart:function(){},onSlideEnd:function(){},getValue:function(){return this.thumb.getValue();
},getXValue:function(){return this.thumb.getXValue();
},getYValue:function(){return this.thumb.getYValue();
},setValue:function(){var E=D.call(arguments);
E.unshift(C.SOURCE_SET_VALUE);
return this._setValue.apply(this,E);
},_setValue:function(I,L,G,H,E){var F=this.thumb,K,J;
if(!F.available){this.deferredSetValue=arguments;
return false;
}if(this.isLocked()&&!H){return false;
}if(isNaN(L)){return false;
}if(F._isRegion){return false;
}this._silent=E;
this.valueChangeSource=I||C.SOURCE_SET_VALUE;
F.lastOffset=[L,L];
this.verifyOffset(true);
this._slideStart();
if(F._isHoriz){K=F.initPageX+L+this.thumbCenterPoint.x;
this.moveThumb(K,F.initPageY,G);
}else{J=F.initPageY+L+this.thumbCenterPoint.y;
this.moveThumb(F.initPageX,J,G);
}return true;
},setRegionValue:function(){var E=D.call(arguments);
E.unshift(C.SOURCE_SET_VALUE);
return this._setRegionValue.apply(this,E);
},_setRegionValue:function(F,J,H,I,G,K){var L=this.thumb,E,M;
if(!L.available){this.deferredSetRegionValue=arguments;
return false;
}if(this.isLocked()&&!G){return false;
}if(isNaN(J)){return false;
}if(!L._isRegion){return false;
}this._silent=K;
this.valueChangeSource=F||C.SOURCE_SET_VALUE;
L.lastOffset=[J,H];
this.verifyOffset(true);
this._slideStart();
E=L.initPageX+J+this.thumbCenterPoint.x;
M=L.initPageY+H+this.thumbCenterPoint.y;
this.moveThumb(E,M,I);
return true;
},verifyOffset:function(F){var G=B(this.getEl()),E=this.thumb;
if(!this.thumbCenterPoint||!this.thumbCenterPoint.x){this.setThumbCenterPoint();
}if(G){if(G[0]!=this.baselinePos[0]||G[1]!=this.baselinePos[1]){this.setInitPosition();
this.baselinePos=G;
E.initPageX=this.initPageX+E.startOffset[0];
E.initPageY=this.initPageY+E.startOffset[1];
E.deltaSetXY=null;
this.resetThumbConstraints();
return false;
}}return true;
},moveThumb:function(K,J,I,G){var L=this.thumb,M=this,F,E,H;
if(!L.available){return;
}L.setDelta(this.thumbCenterPoint.x,this.thumbCenterPoint.y);
E=L.getTargetCoord(K,J);
F=[Math.round(E.x),Math.round(E.y)];
if(this.animate&&L._graduated&&!I){this.lock();
this.curCoord=B(this.thumb.getEl());
this.curCoord=[Math.round(this.curCoord[0]),Math.round(this.curCoord[1])];
setTimeout(function(){M.moveOneTick(F);
},this.tickPause);
}else{if(this.animate&&C.ANIM_AVAIL&&!I){this.lock();
H=new YAHOO.util.Motion(L.id,{points:{to:F}},this.animationDuration,YAHOO.util.Easing.easeOut);
H.onComplete.subscribe(function(){M.unlock();
if(!M._mouseDown){M.endMove();
}});
H.animate();
}else{L.setDragElPos(K,J);
if(!G&&!this._mouseDown){this.endMove();
}}}},_slideStart:function(){if(!this._sliding){if(!this._silent){this.onSlideStart();
this.fireEvent("slideStart");
}this._sliding=true;
}},_slideEnd:function(){if(this._sliding&&this.moveComplete){var E=this._silent;
this._sliding=false;
this._silent=false;
this.moveComplete=false;
if(!E){this.onSlideEnd();
this.fireEvent("slideEnd");
}}},moveOneTick:function(F){var H=this.thumb,G=this,I=null,E,J;
if(H._isRegion){I=this._getNextX(this.curCoord,F);
E=(I!==null)?I[0]:this.curCoord[0];
I=this._getNextY(this.curCoord,F);
J=(I!==null)?I[1]:this.curCoord[1];
I=E!==this.curCoord[0]||J!==this.curCoord[1]?[E,J]:null;
}else{if(H._isHoriz){I=this._getNextX(this.curCoord,F);
}else{I=this._getNextY(this.curCoord,F);
}}if(I){this.curCoord=I;
this.thumb.alignElWithMouse(H.getEl(),I[0]+this.thumbCenterPoint.x,I[1]+this.thumbCenterPoint.y);
if(!(I[0]==F[0]&&I[1]==F[1])){setTimeout(function(){G.moveOneTick(F);
},this.tickPause);
}else{this.unlock();
if(!this._mouseDown){this.endMove();
}}}else{this.unlock();
if(!this._mouseDown){this.endMove();
}}},_getNextX:function(E,F){var H=this.thumb,J,G=[],I=null;
if(E[0]>F[0]){J=H.tickSize-this.thumbCenterPoint.x;
G=H.getTargetCoord(E[0]-J,E[1]);
I=[G.x,G.y];
}else{if(E[0]<F[0]){J=H.tickSize+this.thumbCenterPoint.x;
G=H.getTargetCoord(E[0]+J,E[1]);
I=[G.x,G.y];
}else{}}return I;
},_getNextY:function(E,F){var H=this.thumb,J,G=[],I=null;
if(E[1]>F[1]){J=H.tickSize-this.thumbCenterPoint.y;
G=H.getTargetCoord(E[0],E[1]-J);
I=[G.x,G.y];
}else{if(E[1]<F[1]){J=H.tickSize+this.thumbCenterPoint.y;
G=H.getTargetCoord(E[0],E[1]+J);
I=[G.x,G.y];
}else{}}return I;
},b4MouseDown:function(E){if(!this.backgroundEnabled){return false;
}this.thumb.autoOffset();
this.resetThumbConstraints();
},onMouseDown:function(F){if(!this.backgroundEnabled||this.isLocked()){return false;
}this._mouseDown=true;
var E=A.getPageX(F),G=A.getPageY(F);
this.focus();
this._slideStart();
this.moveThumb(E,G);
},onDrag:function(F){if(this.backgroundEnabled&&!this.isLocked()){var E=A.getPageX(F),G=A.getPageY(F);
this.moveThumb(E,G,true,true);
this.fireEvents();
}},endMove:function(){this.unlock();
this.fireEvents();
this.moveComplete=true;
this._slideEnd();
},resetThumbConstraints:function(){var E=this.thumb;
E.setXConstraint(E.leftConstraint,E.rightConstraint,E.xTickSize);
E.setYConstraint(E.topConstraint,E.bottomConstraint,E.xTickSize);
},fireEvents:function(G){var F=this.thumb,I,H,E;
if(!G){F.cachePosition();
}if(!this.isLocked()){if(F._isRegion){I=F.getXValue();
H=F.getYValue();
if(I!=this.previousX||H!=this.previousY){if(!this._silent){this.onChange(I,H);
this.fireEvent("change",{x:I,y:H});
}}this.previousX=I;
this.previousY=H;
}else{E=F.getValue();
if(E!=this.previousVal){if(!this._silent){this.onChange(E);
this.fireEvent("change",E);
}}this.previousVal=E;
}}},toString:function(){return("Slider ("+this.type+") "+this.id);
}});
YAHOO.lang.augmentProto(C,YAHOO.util.EventProvider);
YAHOO.widget.Slider=C;
})();
YAHOO.widget.SliderThumb=function(G,B,E,D,A,F,C){if(G){YAHOO.widget.SliderThumb.superclass.constructor.call(this,G,B);
this.parentElId=B;
}this.isTarget=false;
this.tickSize=C;
this.maintainOffset=true;
this.initSlider(E,D,A,F,C);
this.scroll=false;
};
YAHOO.extend(YAHOO.widget.SliderThumb,YAHOO.util.DD,{startOffset:null,dragOnly:true,_isHoriz:false,_prevVal:0,_graduated:false,getOffsetFromParent0:function(C){var A=YAHOO.util.Dom.getXY(this.getEl()),B=C||YAHOO.util.Dom.getXY(this.parentElId);
return[(A[0]-B[0]),(A[1]-B[1])];
},getOffsetFromParent:function(H){var A=this.getEl(),E,I,F,B,K,D,C,J,G;
if(!this.deltaOffset){I=YAHOO.util.Dom.getXY(A);
F=H||YAHOO.util.Dom.getXY(this.parentElId);
E=[(I[0]-F[0]),(I[1]-F[1])];
B=parseInt(YAHOO.util.Dom.getStyle(A,"left"),10);
K=parseInt(YAHOO.util.Dom.getStyle(A,"top"),10);
D=B-E[0];
C=K-E[1];
if(isNaN(D)||isNaN(C)){}else{this.deltaOffset=[D,C];
}}else{J=parseInt(YAHOO.util.Dom.getStyle(A,"left"),10);
G=parseInt(YAHOO.util.Dom.getStyle(A,"top"),10);
E=[J+this.deltaOffset[0],G+this.deltaOffset[1]];
}return E;
},initSlider:function(D,C,A,E,B){this.initLeft=D;
this.initRight=C;
this.initUp=A;
this.initDown=E;
this.setXConstraint(D,C,B);
this.setYConstraint(A,E,B);
if(B&&B>1){this._graduated=true;
}this._isHoriz=(D||C);
this._isVert=(A||E);
this._isRegion=(this._isHoriz&&this._isVert);
},clearTicks:function(){YAHOO.widget.SliderThumb.superclass.clearTicks.call(this);
this.tickSize=0;
this._graduated=false;
},getValue:function(){return(this._isHoriz)?this.getXValue():this.getYValue();
},getXValue:function(){if(!this.available){return 0;
}var A=this.getOffsetFromParent();
if(YAHOO.lang.isNumber(A[0])){this.lastOffset=A;
return(A[0]-this.startOffset[0]);
}else{return(this.lastOffset[0]-this.startOffset[0]);
}},getYValue:function(){if(!this.available){return 0;
}var A=this.getOffsetFromParent();
if(YAHOO.lang.isNumber(A[1])){this.lastOffset=A;
return(A[1]-this.startOffset[1]);
}else{return(this.lastOffset[1]-this.startOffset[1]);
}},toString:function(){return"SliderThumb "+this.id;
},onChange:function(A,B){}});
(function(){var A=YAHOO.util.Event,B=YAHOO.widget;
function C(I,F,H,D){var G=this,J={min:false,max:false},E,K;
this.minSlider=I;
this.maxSlider=F;
this.activeSlider=I;
this.isHoriz=I.thumb._isHoriz;
E=this.minSlider.thumb.onMouseDown;
K=this.maxSlider.thumb.onMouseDown;
this.minSlider.thumb.onMouseDown=function(){G.activeSlider=G.minSlider;
E.apply(this,arguments);
};
this.maxSlider.thumb.onMouseDown=function(){G.activeSlider=G.maxSlider;
K.apply(this,arguments);
};
this.minSlider.thumb.onAvailable=function(){I.setStartSliderState();
J.min=true;
if(J.max){G.fireEvent("ready",G);
}};
this.maxSlider.thumb.onAvailable=function(){F.setStartSliderState();
J.max=true;
if(J.min){G.fireEvent("ready",G);
}};
I.onMouseDown=F.onMouseDown=function(L){return this.backgroundEnabled&&G._handleMouseDown(L);
};
I.onDrag=F.onDrag=function(L){G._handleDrag(L);
};
I.onMouseUp=F.onMouseUp=function(L){G._handleMouseUp(L);
};
I._bindKeyEvents=function(){G._bindKeyEvents(this);
};
F._bindKeyEvents=function(){};
I.subscribe("change",this._handleMinChange,I,this);
I.subscribe("slideStart",this._handleSlideStart,I,this);
I.subscribe("slideEnd",this._handleSlideEnd,I,this);
F.subscribe("change",this._handleMaxChange,F,this);
F.subscribe("slideStart",this._handleSlideStart,F,this);
F.subscribe("slideEnd",this._handleSlideEnd,F,this);
this.createEvent("ready",this);
this.createEvent("change",this);
this.createEvent("slideStart",this);
this.createEvent("slideEnd",this);
D=YAHOO.lang.isArray(D)?D:[0,H];
D[0]=Math.min(Math.max(parseInt(D[0],10)|0,0),H);
D[1]=Math.max(Math.min(parseInt(D[1],10)|0,H),0);
if(D[0]>D[1]){D.splice(0,2,D[1],D[0]);
}this.minVal=D[0];
this.maxVal=D[1];
this.minSlider.setValue(this.minVal,true,true,true);
this.maxSlider.setValue(this.maxVal,true,true,true);
}C.prototype={minVal:-1,maxVal:-1,minRange:0,_handleSlideStart:function(E,D){this.fireEvent("slideStart",D);
},_handleSlideEnd:function(E,D){this.fireEvent("slideEnd",D);
},_handleDrag:function(D){B.Slider.prototype.onDrag.call(this.activeSlider,D);
},_handleMinChange:function(){this.activeSlider=this.minSlider;
this.updateValue();
},_handleMaxChange:function(){this.activeSlider=this.maxSlider;
this.updateValue();
},_bindKeyEvents:function(D){A.on(D.id,"keydown",this._handleKeyDown,this,true);
A.on(D.id,"keypress",this._handleKeyPress,this,true);
},_handleKeyDown:function(D){this.activeSlider.handleKeyDown.apply(this.activeSlider,arguments);
},_handleKeyPress:function(D){this.activeSlider.handleKeyPress.apply(this.activeSlider,arguments);
},setValues:function(H,K,I,E,J){var F=this.minSlider,M=this.maxSlider,D=F.thumb,L=M.thumb,N=this,G={min:false,max:false};
if(D._isHoriz){D.setXConstraint(D.leftConstraint,L.rightConstraint,D.tickSize);
L.setXConstraint(D.leftConstraint,L.rightConstraint,L.tickSize);
}else{D.setYConstraint(D.topConstraint,L.bottomConstraint,D.tickSize);
L.setYConstraint(D.topConstraint,L.bottomConstraint,L.tickSize);
}this._oneTimeCallback(F,"slideEnd",function(){G.min=true;
if(G.max){N.updateValue(J);
setTimeout(function(){N._cleanEvent(F,"slideEnd");
N._cleanEvent(M,"slideEnd");
},0);
}});
this._oneTimeCallback(M,"slideEnd",function(){G.max=true;
if(G.min){N.updateValue(J);
setTimeout(function(){N._cleanEvent(F,"slideEnd");
N._cleanEvent(M,"slideEnd");
},0);
}});
F.setValue(H,I,E,false);
M.setValue(K,I,E,false);
},setMinValue:function(F,H,I,E){var G=this.minSlider,D=this;
this.activeSlider=G;
D=this;
this._oneTimeCallback(G,"slideEnd",function(){D.updateValue(E);
setTimeout(function(){D._cleanEvent(G,"slideEnd");
},0);
});
G.setValue(F,H,I);
},setMaxValue:function(D,H,I,F){var G=this.maxSlider,E=this;
this.activeSlider=G;
this._oneTimeCallback(G,"slideEnd",function(){E.updateValue(F);
setTimeout(function(){E._cleanEvent(G,"slideEnd");
},0);
});
G.setValue(D,H,I);
},updateValue:function(J){var E=this.minSlider.getValue(),K=this.maxSlider.getValue(),F=false,D,M,H,I,L,G;
if(E!=this.minVal||K!=this.maxVal){F=true;
D=this.minSlider.thumb;
M=this.maxSlider.thumb;
H=this.isHoriz?"x":"y";
G=this.minSlider.thumbCenterPoint[H]+this.maxSlider.thumbCenterPoint[H];
I=Math.max(K-G-this.minRange,0);
L=Math.min(-E-G-this.minRange,0);
if(this.isHoriz){I=Math.min(I,M.rightConstraint);
D.setXConstraint(D.leftConstraint,I,D.tickSize);
M.setXConstraint(L,M.rightConstraint,M.tickSize);
}else{I=Math.min(I,M.bottomConstraint);
D.setYConstraint(D.leftConstraint,I,D.tickSize);
M.setYConstraint(L,M.bottomConstraint,M.tickSize);
}}this.minVal=E;
this.maxVal=K;
if(F&&!J){this.fireEvent("change",this);
}},selectActiveSlider:function(H){var E=this.minSlider,D=this.maxSlider,J=E.isLocked()||!E.backgroundEnabled,G=D.isLocked()||!E.backgroundEnabled,F=YAHOO.util.Event,I;
if(J||G){this.activeSlider=J?D:E;
}else{if(this.isHoriz){I=F.getPageX(H)-E.thumb.initPageX-E.thumbCenterPoint.x;
}else{I=F.getPageY(H)-E.thumb.initPageY-E.thumbCenterPoint.y;
}this.activeSlider=I*2>D.getValue()+E.getValue()?D:E;
}},_handleMouseDown:function(D){if(!D._handled){D._handled=true;
this.selectActiveSlider(D);
return B.Slider.prototype.onMouseDown.call(this.activeSlider,D);
}else{return false;
}},_handleMouseUp:function(D){B.Slider.prototype.onMouseUp.apply(this.activeSlider,arguments);
},_oneTimeCallback:function(F,D,E){F.subscribe(D,function(){F.unsubscribe(D,arguments.callee);
E.apply({},[].slice.apply(arguments));
});
},_cleanEvent:function(K,E){var J,I,D,G,H,F;
if(K.__yui_events&&K.events[E]){for(I=K.__yui_events.length;
I>=0;
--I){if(K.__yui_events[I].type===E){J=K.__yui_events[I];
break;
}}if(J){H=J.subscribers;
F=[];
G=0;
for(I=0,D=H.length;
I<D;
++I){if(H[I]){F[G++]=H[I];
}}J.subscribers=F;
}}}};
YAHOO.lang.augmentProto(C,YAHOO.util.EventProvider);
B.Slider.getHorizDualSlider=function(H,J,K,G,F,D){var I=new B.SliderThumb(J,H,0,G,0,0,F),E=new B.SliderThumb(K,H,0,G,0,0,F);
return new C(new B.Slider(H,H,I,"horiz"),new B.Slider(H,H,E,"horiz"),G,D);
};
B.Slider.getVertDualSlider=function(H,J,K,G,F,D){var I=new B.SliderThumb(J,H,0,0,0,G,F),E=new B.SliderThumb(K,H,0,0,0,G,F);
return new B.DualSlider(new B.Slider(H,H,I,"vert"),new B.Slider(H,H,E,"vert"),G,D);
};
YAHOO.widget.DualSlider=C;
})();
YAHOO.register("slider",YAHOO.widget.Slider,{version:"2.7.0",build:"1796"});
YAHOO.util.Attribute=function(B,A){if(A){this.owner=A;
this.configure(B,true);
}};
YAHOO.util.Attribute.prototype={name:undefined,value:null,owner:null,readOnly:false,writeOnce:false,_initialConfig:null,_written:false,method:null,setter:null,getter:null,validator:null,getValue:function(){var A=this.value;
if(this.getter){A=this.getter.call(this.owner,this.name);
}return A;
},setValue:function(F,B){var E,A=this.owner,C=this.name;
var D={type:C,prevValue:this.getValue(),newValue:F};
if(this.readOnly||(this.writeOnce&&this._written)){return false;
}if(this.validator&&!this.validator.call(A,F)){return false;
}if(!B){E=A.fireBeforeChangeEvent(D);
if(E===false){return false;
}}if(this.setter){F=this.setter.call(A,F,this.name);
if(F===undefined){}}if(this.method){this.method.call(A,F,this.name);
}this.value=F;
this._written=true;
D.type=C;
if(!B){this.owner.fireChangeEvent(D);
}return true;
},configure:function(B,C){B=B||{};
if(C){this._written=false;
}this._initialConfig=this._initialConfig||{};
for(var A in B){if(B.hasOwnProperty(A)){this[A]=B[A];
if(C){this._initialConfig[A]=B[A];
}}}},resetValue:function(){return this.setValue(this._initialConfig.value);
},resetConfig:function(){this.configure(this._initialConfig,true);
},refresh:function(A){this.setValue(this.value,A);
}};
(function(){var A=YAHOO.util.Lang;
YAHOO.util.AttributeProvider=function(){};
YAHOO.util.AttributeProvider.prototype={_configs:null,get:function(C){this._configs=this._configs||{};
var B=this._configs[C];
if(!B||!this._configs.hasOwnProperty(C)){return null;
}return B.getValue();
},set:function(D,E,B){this._configs=this._configs||{};
var C=this._configs[D];
if(!C){return false;
}return C.setValue(E,B);
},getAttributeKeys:function(){this._configs=this._configs;
var C=[],B;
for(B in this._configs){if(A.hasOwnProperty(this._configs,B)&&!A.isUndefined(this._configs[B])){C[C.length]=B;
}}return C;
},setAttributes:function(D,B){for(var C in D){if(A.hasOwnProperty(D,C)){this.set(C,D[C],B);
}}},resetValue:function(C,B){this._configs=this._configs||{};
if(this._configs[C]){this.set(C,this._configs[C]._initialConfig.value,B);
return true;
}return false;
},refresh:function(E,C){this._configs=this._configs||{};
var F=this._configs;
E=((A.isString(E))?[E]:E)||this.getAttributeKeys();
for(var D=0,B=E.length;
D<B;
++D){if(F.hasOwnProperty(E[D])){this._configs[E[D]].refresh(C);
}}},register:function(B,C){this.setAttributeConfig(B,C);
},getAttributeConfig:function(C){this._configs=this._configs||{};
var B=this._configs[C]||{};
var D={};
for(C in B){if(A.hasOwnProperty(B,C)){D[C]=B[C];
}}return D;
},setAttributeConfig:function(B,C,D){this._configs=this._configs||{};
C=C||{};
if(!this._configs[B]){C.name=B;
this._configs[B]=this.createAttribute(C);
}else{this._configs[B].configure(C,D);
}},configureAttribute:function(B,C,D){this.setAttributeConfig(B,C,D);
},resetAttributeConfig:function(B){this._configs=this._configs||{};
this._configs[B].resetConfig();
},subscribe:function(B,C){this._events=this._events||{};
if(!(B in this._events)){this._events[B]=this.createEvent(B);
}YAHOO.util.EventProvider.prototype.subscribe.apply(this,arguments);
},on:function(){this.subscribe.apply(this,arguments);
},addListener:function(){this.subscribe.apply(this,arguments);
},fireBeforeChangeEvent:function(C){var B="before";
B+=C.type.charAt(0).toUpperCase()+C.type.substr(1)+"Change";
C.type=B;
return this.fireEvent(C.type,C);
},fireChangeEvent:function(B){B.type+="Change";
return this.fireEvent(B.type,B);
},createAttribute:function(B){return new YAHOO.util.Attribute(B,this);
}};
YAHOO.augment(YAHOO.util.AttributeProvider,YAHOO.util.EventProvider);
})();
(function(){var B=YAHOO.util.Dom,C=YAHOO.util.AttributeProvider;
var A=function(D,E){this.init.apply(this,arguments);
};
A.DOM_EVENTS={click:true,dblclick:true,keydown:true,keypress:true,keyup:true,mousedown:true,mousemove:true,mouseout:true,mouseover:true,mouseup:true,focus:true,blur:true,submit:true,change:true};
A.prototype={DOM_EVENTS:null,DEFAULT_HTML_SETTER:function(F,D){var E=this.get("element");
if(E){E[D]=F;
}},DEFAULT_HTML_GETTER:function(D){var E=this.get("element"),F;
if(E){F=E[D];
}return F;
},appendChild:function(D){D=D.get?D.get("element"):D;
return this.get("element").appendChild(D);
},getElementsByTagName:function(D){return this.get("element").getElementsByTagName(D);
},hasChildNodes:function(){return this.get("element").hasChildNodes();
},insertBefore:function(D,E){D=D.get?D.get("element"):D;
E=(E&&E.get)?E.get("element"):E;
return this.get("element").insertBefore(D,E);
},removeChild:function(D){D=D.get?D.get("element"):D;
return this.get("element").removeChild(D);
},replaceChild:function(D,E){D=D.get?D.get("element"):D;
E=E.get?E.get("element"):E;
return this.get("element").replaceChild(D,E);
},initAttributes:function(D){},addListener:function(H,G,I,F){var E=this.get("element")||this.get("id");
F=F||this;
var D=this;
if(!this._events[H]){if(E&&this.DOM_EVENTS[H]){YAHOO.util.Event.addListener(E,H,function(J){if(J.srcElement&&!J.target){J.target=J.srcElement;
}D.fireEvent(H,J);
},I,F);
}this.createEvent(H,this);
}return YAHOO.util.EventProvider.prototype.subscribe.apply(this,arguments);
},on:function(){return this.addListener.apply(this,arguments);
},subscribe:function(){return this.addListener.apply(this,arguments);
},removeListener:function(E,D){return this.unsubscribe.apply(this,arguments);
},addClass:function(D){B.addClass(this.get("element"),D);
},getElementsByClassName:function(E,D){return B.getElementsByClassName(E,D,this.get("element"));
},hasClass:function(D){return B.hasClass(this.get("element"),D);
},removeClass:function(D){return B.removeClass(this.get("element"),D);
},replaceClass:function(E,D){return B.replaceClass(this.get("element"),E,D);
},setStyle:function(E,D){return B.setStyle(this.get("element"),E,D);
},getStyle:function(D){return B.getStyle(this.get("element"),D);
},fireQueue:function(){var E=this._queue;
for(var F=0,D=E.length;
F<D;
++F){this[E[F][0]].apply(this,E[F][1]);
}},appendTo:function(E,F){E=(E.get)?E.get("element"):B.get(E);
this.fireEvent("beforeAppendTo",{type:"beforeAppendTo",target:E});
F=(F&&F.get)?F.get("element"):B.get(F);
var D=this.get("element");
if(!D){return false;
}if(!E){return false;
}if(D.parent!=E){if(F){E.insertBefore(D,F);
}else{E.appendChild(D);
}}this.fireEvent("appendTo",{type:"appendTo",target:E});
return D;
},get:function(D){var F=this._configs||{},E=F.element;
if(E&&!F[D]&&!YAHOO.lang.isUndefined(E.value[D])){this._setHTMLAttrConfig(D);
}return C.prototype.get.call(this,D);
},setAttributes:function(J,G){var E={},H=this._configOrder;
for(var I=0,D=H.length;
I<D;
++I){if(J[H[I]]!==undefined){E[H[I]]=true;
this.set(H[I],J[H[I]],G);
}}for(var F in J){if(J.hasOwnProperty(F)&&!E[F]){this.set(F,J[F],G);
}}},set:function(E,G,D){var F=this.get("element");
if(!F){this._queue[this._queue.length]=["set",arguments];
if(this._configs[E]){this._configs[E].value=G;
}return;
}if(!this._configs[E]&&!YAHOO.lang.isUndefined(F[E])){this._setHTMLAttrConfig(E);
}return C.prototype.set.apply(this,arguments);
},setAttributeConfig:function(D,E,F){this._configOrder.push(D);
C.prototype.setAttributeConfig.apply(this,arguments);
},createEvent:function(E,D){this._events[E]=true;
return C.prototype.createEvent.apply(this,arguments);
},init:function(E,D){this._initElement(E,D);
},destroy:function(){var D=this.get("element");
YAHOO.util.Event.purgeElement(D,true);
this.unsubscribeAll();
if(D&&D.parentNode){D.parentNode.removeChild(D);
}this._queue=[];
this._events={};
this._configs={};
this._configOrder=[];
},_initElement:function(F,E){this._queue=this._queue||[];
this._events=this._events||{};
this._configs=this._configs||{};
this._configOrder=[];
E=E||{};
E.element=E.element||F||null;
var H=false;
var D=A.DOM_EVENTS;
this.DOM_EVENTS=this.DOM_EVENTS||{};
for(var G in D){if(D.hasOwnProperty(G)){this.DOM_EVENTS[G]=D[G];
}}if(typeof E.element==="string"){this._setHTMLAttrConfig("id",{value:E.element});
}if(B.get(E.element)){H=true;
this._initHTMLElement(E);
this._initContent(E);
}YAHOO.util.Event.onAvailable(E.element,function(){if(!H){this._initHTMLElement(E);
}this.fireEvent("available",{type:"available",target:B.get(E.element)});
},this,true);
YAHOO.util.Event.onContentReady(E.element,function(){if(!H){this._initContent(E);
}this.fireEvent("contentReady",{type:"contentReady",target:B.get(E.element)});
},this,true);
},_initHTMLElement:function(D){this.setAttributeConfig("element",{value:B.get(D.element),readOnly:true});
},_initContent:function(D){this.initAttributes(D);
this.setAttributes(D,true);
this.fireQueue();
},_setHTMLAttrConfig:function(D,F){var E=this.get("element");
F=F||{};
F.name=D;
F.setter=F.setter||this.DEFAULT_HTML_SETTER;
F.getter=F.getter||this.DEFAULT_HTML_GETTER;
F.value=F.value||E[D];
this._configs[D]=new YAHOO.util.Attribute(F,this);
}};
YAHOO.augment(A,C);
YAHOO.util.Element=A;
})();
YAHOO.register("element",YAHOO.util.Element,{version:"2.7.0",build:"1796"});
YAHOO.util.Color=function(){var A="0",B=YAHOO.lang.isArray,C=YAHOO.lang.isNumber;
return{real2dec:function(D){return Math.min(255,Math.round(D*256));
},hsv2rgb:function(H,O,M){if(B(H)){return this.hsv2rgb.call(this,H[0],H[1],H[2]);
}var D,I,L,G=Math.floor((H/60)%6),J=(H/60)-G,F=M*(1-O),E=M*(1-J*O),N=M*(1-(1-J)*O),K;
switch(G){case 0:D=M;
I=N;
L=F;
break;
case 1:D=E;
I=M;
L=F;
break;
case 2:D=F;
I=M;
L=N;
break;
case 3:D=F;
I=E;
L=M;
break;
case 4:D=N;
I=F;
L=M;
break;
case 5:D=M;
I=F;
L=E;
break;
}K=this.real2dec;
return[K(D),K(I),K(L)];
},rgb2hsv:function(D,H,I){if(B(D)){return this.rgb2hsv.apply(this,D);
}D/=255;
H/=255;
I/=255;
var G,L,E=Math.min(Math.min(D,H),I),J=Math.max(Math.max(D,H),I),K=J-E,F;
switch(J){case E:G=0;
break;
case D:G=60*(H-I)/K;
if(H<I){G+=360;
}break;
case H:G=(60*(I-D)/K)+120;
break;
case I:G=(60*(D-H)/K)+240;
break;
}L=(J===0)?0:1-(E/J);
F=[Math.round(G),L,J];
return F;
},rgb2hex:function(F,E,D){if(B(F)){return this.rgb2hex.apply(this,F);
}var G=this.dec2hex;
return G(F)+G(E)+G(D);
},dec2hex:function(D){D=parseInt(D,10)|0;
D=(D>255||D<0)?0:D;
return(A+D.toString(16)).slice(-2).toUpperCase();
},hex2dec:function(D){return parseInt(D,16);
},hex2rgb:function(D){var E=this.hex2dec;
return[E(D.slice(0,2)),E(D.slice(2,4)),E(D.slice(4,6))];
},websafe:function(F,E,D){if(B(F)){return this.websafe.apply(this,F);
}var G=function(H){if(C(H)){H=Math.min(Math.max(0,H),255);
var I,J;
for(I=0;
I<256;
I=I+51){J=I+51;
if(H>=I&&H<=J){return(H-I>25)?J:I;
}}}return H;
};
return[G(F),G(E),G(D)];
}};
}();
(function(){var J=0,F=YAHOO.util,C=YAHOO.lang,D=YAHOO.widget.Slider,B=F.Color,E=F.Dom,I=F.Event,A=C.substitute,H="yui-picker";
function G(L,K){J=J+1;
K=K||{};
if(arguments.length===1&&!YAHOO.lang.isString(L)&&!L.nodeName){K=L;
L=K.element||null;
}if(!L&&!K.element){L=this._createHostElement(K);
}G.superclass.constructor.call(this,L,K);
this.initPicker();
}YAHOO.extend(G,YAHOO.util.Element,{ID:{R:H+"-r",R_HEX:H+"-rhex",G:H+"-g",G_HEX:H+"-ghex",B:H+"-b",B_HEX:H+"-bhex",H:H+"-h",S:H+"-s",V:H+"-v",PICKER_BG:H+"-bg",PICKER_THUMB:H+"-thumb",HUE_BG:H+"-hue-bg",HUE_THUMB:H+"-hue-thumb",HEX:H+"-hex",SWATCH:H+"-swatch",WEBSAFE_SWATCH:H+"-websafe-swatch",CONTROLS:H+"-controls",RGB_CONTROLS:H+"-rgb-controls",HSV_CONTROLS:H+"-hsv-controls",HEX_CONTROLS:H+"-hex-controls",HEX_SUMMARY:H+"-hex-summary",CONTROLS_LABEL:H+"-controls-label"},TXT:{ILLEGAL_HEX:"Illegal hex value entered",SHOW_CONTROLS:"Show color details",HIDE_CONTROLS:"Hide color details",CURRENT_COLOR:"Currently selected color: {rgb}",CLOSEST_WEBSAFE:"Closest websafe color: {rgb}. Click to select.",R:"R",G:"G",B:"B",H:"H",S:"S",V:"V",HEX:"#",DEG:"\u00B0",PERCENT:"%"},IMAGE:{PICKER_THUMB:"../../build/colorpicker/assets/picker_thumb.png",HUE_THUMB:"../../build/colorpicker/assets/hue_thumb.png"},DEFAULT:{PICKER_SIZE:180},OPT:{HUE:"hue",SATURATION:"saturation",VALUE:"value",RED:"red",GREEN:"green",BLUE:"blue",HSV:"hsv",RGB:"rgb",WEBSAFE:"websafe",HEX:"hex",PICKER_SIZE:"pickersize",SHOW_CONTROLS:"showcontrols",SHOW_RGB_CONTROLS:"showrgbcontrols",SHOW_HSV_CONTROLS:"showhsvcontrols",SHOW_HEX_CONTROLS:"showhexcontrols",SHOW_HEX_SUMMARY:"showhexsummary",SHOW_WEBSAFE:"showwebsafe",CONTAINER:"container",IDS:"ids",ELEMENTS:"elements",TXT:"txt",IMAGES:"images",ANIMATE:"animate"},skipAnim:true,_createHostElement:function(){var K=document.createElement("div");
if(this.CSS.BASE){K.className=this.CSS.BASE;
}return K;
},_updateHueSlider:function(){var K=this.get(this.OPT.PICKER_SIZE),L=this.get(this.OPT.HUE);
L=K-Math.round(L/360*K);
if(L===K){L=0;
}this.hueSlider.setValue(L,this.skipAnim);
},_updatePickerSlider:function(){var L=this.get(this.OPT.PICKER_SIZE),M=this.get(this.OPT.SATURATION),K=this.get(this.OPT.VALUE);
M=Math.round(M*L/100);
K=Math.round(L-(K*L/100));
this.pickerSlider.setRegionValue(M,K,this.skipAnim);
},_updateSliders:function(){this._updateHueSlider();
this._updatePickerSlider();
},setValue:function(L,K){K=(K)||false;
this.set(this.OPT.RGB,L,K);
this._updateSliders();
},hueSlider:null,pickerSlider:null,_getH:function(){var K=this.get(this.OPT.PICKER_SIZE),L=(K-this.hueSlider.getValue())/K;
L=Math.round(L*360);
return(L===360)?0:L;
},_getS:function(){return this.pickerSlider.getXValue()/this.get(this.OPT.PICKER_SIZE);
},_getV:function(){var K=this.get(this.OPT.PICKER_SIZE);
return(K-this.pickerSlider.getYValue())/K;
},_updateSwatch:function(){var M=this.get(this.OPT.RGB),O=this.get(this.OPT.WEBSAFE),N=this.getElement(this.ID.SWATCH),L=M.join(","),K=this.get(this.OPT.TXT);
E.setStyle(N,"background-color","rgb("+L+")");
N.title=A(K.CURRENT_COLOR,{rgb:"#"+this.get(this.OPT.HEX)});
N=this.getElement(this.ID.WEBSAFE_SWATCH);
L=O.join(",");
E.setStyle(N,"background-color","rgb("+L+")");
N.title=A(K.CLOSEST_WEBSAFE,{rgb:"#"+B.rgb2hex(O)});
},_getValuesFromSliders:function(){this.set(this.OPT.RGB,B.hsv2rgb(this._getH(),this._getS(),this._getV()));
},_updateFormFields:function(){this.getElement(this.ID.H).value=this.get(this.OPT.HUE);
this.getElement(this.ID.S).value=this.get(this.OPT.SATURATION);
this.getElement(this.ID.V).value=this.get(this.OPT.VALUE);
this.getElement(this.ID.R).value=this.get(this.OPT.RED);
this.getElement(this.ID.R_HEX).innerHTML=B.dec2hex(this.get(this.OPT.RED));
this.getElement(this.ID.G).value=this.get(this.OPT.GREEN);
this.getElement(this.ID.G_HEX).innerHTML=B.dec2hex(this.get(this.OPT.GREEN));
this.getElement(this.ID.B).value=this.get(this.OPT.BLUE);
this.getElement(this.ID.B_HEX).innerHTML=B.dec2hex(this.get(this.OPT.BLUE));
this.getElement(this.ID.HEX).value=this.get(this.OPT.HEX);
},_onHueSliderChange:function(N){var L=this._getH(),K=B.hsv2rgb(L,1,1),M="rgb("+K.join(",")+")";
this.set(this.OPT.HUE,L,true);
E.setStyle(this.getElement(this.ID.PICKER_BG),"background-color",M);
if(this.hueSlider.valueChangeSource!==D.SOURCE_SET_VALUE){this._getValuesFromSliders();
}this._updateFormFields();
this._updateSwatch();
},_onPickerSliderChange:function(M){var L=this._getS(),K=this._getV();
this.set(this.OPT.SATURATION,Math.round(L*100),true);
this.set(this.OPT.VALUE,Math.round(K*100),true);
if(this.pickerSlider.valueChangeSource!==D.SOURCE_SET_VALUE){this._getValuesFromSliders();
}this._updateFormFields();
this._updateSwatch();
},_getCommand:function(K){var L=I.getCharCode(K);
if(L===38){return 3;
}else{if(L===13){return 6;
}else{if(L===40){return 4;
}else{if(L>=48&&L<=57){return 1;
}else{if(L>=97&&L<=102){return 2;
}else{if(L>=65&&L<=70){return 2;
}else{if("8, 9, 13, 27, 37, 39".indexOf(L)>-1||K.ctrlKey||K.metaKey){return 5;
}else{return 0;
}}}}}}}},_useFieldValue:function(L,K,N){var M=K.value;
if(N!==this.OPT.HEX){M=parseInt(M,10);
}if(M!==this.get(N)){this.set(N,M);
}},_rgbFieldKeypress:function(M,K,O){var N=this._getCommand(M),L=(M.shiftKey)?10:1;
switch(N){case 6:this._useFieldValue.apply(this,arguments);
break;
case 3:this.set(O,Math.min(this.get(O)+L,255));
this._updateFormFields();
break;
case 4:this.set(O,Math.max(this.get(O)-L,0));
this._updateFormFields();
break;
default:}},_hexFieldKeypress:function(L,K,N){var M=this._getCommand(L);
if(M===6){this._useFieldValue.apply(this,arguments);
}},_hexOnly:function(L,K){var M=this._getCommand(L);
switch(M){case 6:case 5:case 1:break;
case 2:if(K!==true){break;
}default:I.stopEvent(L);
return false;
}},_numbersOnly:function(K){return this._hexOnly(K,true);
},getElement:function(K){return this.get(this.OPT.ELEMENTS)[this.get(this.OPT.IDS)[K]];
},_createElements:function(){var N,M,P,O,L,K=this.get(this.OPT.IDS),Q=this.get(this.OPT.TXT),S=this.get(this.OPT.IMAGES),R=function(U,V){var W=document.createElement(U);
if(V){C.augmentObject(W,V,true);
}return W;
},T=function(U,V){var W=C.merge({autocomplete:"off",value:"0",size:3,maxlength:3},V);
W.name=W.id;
return new R(U,W);
};
L=this.get("element");
N=new R("div",{id:K[this.ID.PICKER_BG],className:"yui-picker-bg",tabIndex:-1,hideFocus:true});
M=new R("div",{id:K[this.ID.PICKER_THUMB],className:"yui-picker-thumb"});
P=new R("img",{src:S.PICKER_THUMB});
M.appendChild(P);
N.appendChild(M);
L.appendChild(N);
N=new R("div",{id:K[this.ID.HUE_BG],className:"yui-picker-hue-bg",tabIndex:-1,hideFocus:true});
M=new R("div",{id:K[this.ID.HUE_THUMB],className:"yui-picker-hue-thumb"});
P=new R("img",{src:S.HUE_THUMB});
M.appendChild(P);
N.appendChild(M);
L.appendChild(N);
N=new R("div",{id:K[this.ID.CONTROLS],className:"yui-picker-controls"});
L.appendChild(N);
L=N;
N=new R("div",{className:"hd"});
M=new R("a",{id:K[this.ID.CONTROLS_LABEL],href:"#"});
N.appendChild(M);
L.appendChild(N);
N=new R("div",{className:"bd"});
L.appendChild(N);
L=N;
N=new R("ul",{id:K[this.ID.RGB_CONTROLS],className:"yui-picker-rgb-controls"});
M=new R("li");
M.appendChild(document.createTextNode(Q.R+" "));
O=new T("input",{id:K[this.ID.R],className:"yui-picker-r"});
M.appendChild(O);
N.appendChild(M);
M=new R("li");
M.appendChild(document.createTextNode(Q.G+" "));
O=new T("input",{id:K[this.ID.G],className:"yui-picker-g"});
M.appendChild(O);
N.appendChild(M);
M=new R("li");
M.appendChild(document.createTextNode(Q.B+" "));
O=new T("input",{id:K[this.ID.B],className:"yui-picker-b"});
M.appendChild(O);
N.appendChild(M);
L.appendChild(N);
N=new R("ul",{id:K[this.ID.HSV_CONTROLS],className:"yui-picker-hsv-controls"});
M=new R("li");
M.appendChild(document.createTextNode(Q.H+" "));
O=new T("input",{id:K[this.ID.H],className:"yui-picker-h"});
M.appendChild(O);
M.appendChild(document.createTextNode(" "+Q.DEG));
N.appendChild(M);
M=new R("li");
M.appendChild(document.createTextNode(Q.S+" "));
O=new T("input",{id:K[this.ID.S],className:"yui-picker-s"});
M.appendChild(O);
M.appendChild(document.createTextNode(" "+Q.PERCENT));
N.appendChild(M);
M=new R("li");
M.appendChild(document.createTextNode(Q.V+" "));
O=new T("input",{id:K[this.ID.V],className:"yui-picker-v"});
M.appendChild(O);
M.appendChild(document.createTextNode(" "+Q.PERCENT));
N.appendChild(M);
L.appendChild(N);
N=new R("ul",{id:K[this.ID.HEX_SUMMARY],className:"yui-picker-hex_summary"});
M=new R("li",{id:K[this.ID.R_HEX]});
N.appendChild(M);
M=new R("li",{id:K[this.ID.G_HEX]});
N.appendChild(M);
M=new R("li",{id:K[this.ID.B_HEX]});
N.appendChild(M);
L.appendChild(N);
N=new R("div",{id:K[this.ID.HEX_CONTROLS],className:"yui-picker-hex-controls"});
N.appendChild(document.createTextNode(Q.HEX+" "));
M=new T("input",{id:K[this.ID.HEX],className:"yui-picker-hex",size:6,maxlength:6});
N.appendChild(M);
L.appendChild(N);
L=this.get("element");
N=new R("div",{id:K[this.ID.SWATCH],className:"yui-picker-swatch"});
L.appendChild(N);
N=new R("div",{id:K[this.ID.WEBSAFE_SWATCH],className:"yui-picker-websafe-swatch"});
L.appendChild(N);
},_attachRGBHSV:function(L,K){I.on(this.getElement(L),"keydown",function(N,M){M._rgbFieldKeypress(N,this,K);
},this);
I.on(this.getElement(L),"keypress",this._numbersOnly,this,true);
I.on(this.getElement(L),"blur",function(N,M){M._useFieldValue(N,this,K);
},this);
},_updateRGB:function(){var K=[this.get(this.OPT.RED),this.get(this.OPT.GREEN),this.get(this.OPT.BLUE)];
this.set(this.OPT.RGB,K);
this._updateSliders();
},_initElements:function(){var O=this.OPT,N=this.get(O.IDS),L=this.get(O.ELEMENTS),K,M,P;
for(K in this.ID){if(C.hasOwnProperty(this.ID,K)){N[this.ID[K]]=N[K];
}}M=E.get(N[this.ID.PICKER_BG]);
if(!M){this._createElements();
}else{}for(K in N){if(C.hasOwnProperty(N,K)){M=E.get(N[K]);
P=E.generateId(M);
N[K]=P;
N[N[K]]=P;
L[P]=M;
}}},initPicker:function(){this._initSliders();
this._bindUI();
this.syncUI(true);
},_initSliders:function(){var K=this.ID,L=this.get(this.OPT.PICKER_SIZE);
this.hueSlider=D.getVertSlider(this.getElement(K.HUE_BG),this.getElement(K.HUE_THUMB),0,L);
this.pickerSlider=D.getSliderRegion(this.getElement(K.PICKER_BG),this.getElement(K.PICKER_THUMB),0,L,0,L);
this.set(this.OPT.ANIMATE,this.get(this.OPT.ANIMATE));
},_bindUI:function(){var K=this.ID,L=this.OPT;
this.hueSlider.subscribe("change",this._onHueSliderChange,this,true);
this.pickerSlider.subscribe("change",this._onPickerSliderChange,this,true);
I.on(this.getElement(K.WEBSAFE_SWATCH),"click",function(M){this.setValue(this.get(L.WEBSAFE));
},this,true);
I.on(this.getElement(K.CONTROLS_LABEL),"click",function(M){this.set(L.SHOW_CONTROLS,!this.get(L.SHOW_CONTROLS));
I.preventDefault(M);
},this,true);
this._attachRGBHSV(K.R,L.RED);
this._attachRGBHSV(K.G,L.GREEN);
this._attachRGBHSV(K.B,L.BLUE);
this._attachRGBHSV(K.H,L.HUE);
this._attachRGBHSV(K.S,L.SATURATION);
this._attachRGBHSV(K.V,L.VALUE);
I.on(this.getElement(K.HEX),"keydown",function(N,M){M._hexFieldKeypress(N,this,L.HEX);
},this);
I.on(this.getElement(this.ID.HEX),"keypress",this._hexOnly,this,true);
I.on(this.getElement(this.ID.HEX),"blur",function(N,M){M._useFieldValue(N,this,L.HEX);
},this);
},syncUI:function(K){this.skipAnim=K;
this._updateRGB();
this.skipAnim=false;
},_updateRGBFromHSV:function(){var L=[this.get(this.OPT.HUE),this.get(this.OPT.SATURATION)/100,this.get(this.OPT.VALUE)/100],K=B.hsv2rgb(L);
this.set(this.OPT.RGB,K);
this._updateSliders();
},_updateHex:function(){var N=this.get(this.OPT.HEX),K=N.length,O,M,L;
if(K===3){O=N.split("");
for(M=0;
M<K;
M=M+1){O[M]=O[M]+O[M];
}N=O.join("");
}if(N.length!==6){return false;
}L=B.hex2rgb(N);
this.setValue(L);
},_hideShowEl:function(M,K){var L=(C.isString(M)?this.getElement(M):M);
E.setStyle(L,"display",(K)?"":"none");
},initAttributes:function(K){K=K||{};
G.superclass.initAttributes.call(this,K);
this.setAttributeConfig(this.OPT.PICKER_SIZE,{value:K.size||this.DEFAULT.PICKER_SIZE});
this.setAttributeConfig(this.OPT.HUE,{value:K.hue||0,validator:C.isNumber});
this.setAttributeConfig(this.OPT.SATURATION,{value:K.saturation||0,validator:C.isNumber});
this.setAttributeConfig(this.OPT.VALUE,{value:C.isNumber(K.value)?K.value:100,validator:C.isNumber});
this.setAttributeConfig(this.OPT.RED,{value:C.isNumber(K.red)?K.red:255,validator:C.isNumber});
this.setAttributeConfig(this.OPT.GREEN,{value:C.isNumber(K.green)?K.green:255,validator:C.isNumber});
this.setAttributeConfig(this.OPT.BLUE,{value:C.isNumber(K.blue)?K.blue:255,validator:C.isNumber});
this.setAttributeConfig(this.OPT.HEX,{value:K.hex||"FFFFFF",validator:C.isString});
this.setAttributeConfig(this.OPT.RGB,{value:K.rgb||[255,255,255],method:function(O){this.set(this.OPT.RED,O[0],true);
this.set(this.OPT.GREEN,O[1],true);
this.set(this.OPT.BLUE,O[2],true);
var Q=B.websafe(O),P=B.rgb2hex(O),N=B.rgb2hsv(O);
this.set(this.OPT.WEBSAFE,Q,true);
this.set(this.OPT.HEX,P,true);
if(N[1]){this.set(this.OPT.HUE,N[0],true);
}this.set(this.OPT.SATURATION,Math.round(N[1]*100),true);
this.set(this.OPT.VALUE,Math.round(N[2]*100),true);
},readonly:true});
this.setAttributeConfig(this.OPT.CONTAINER,{value:null,method:function(N){if(N){N.showEvent.subscribe(function(){this.pickerSlider.focus();
},this,true);
}}});
this.setAttributeConfig(this.OPT.WEBSAFE,{value:K.websafe||[255,255,255]});
var M=K.ids||C.merge({},this.ID),L;
if(!K.ids&&J>1){for(L in M){if(C.hasOwnProperty(M,L)){M[L]=M[L]+J;
}}}this.setAttributeConfig(this.OPT.IDS,{value:M,writeonce:true});
this.setAttributeConfig(this.OPT.TXT,{value:K.txt||this.TXT,writeonce:true});
this.setAttributeConfig(this.OPT.IMAGES,{value:K.images||this.IMAGE,writeonce:true});
this.setAttributeConfig(this.OPT.ELEMENTS,{value:{},readonly:true});
this.setAttributeConfig(this.OPT.SHOW_CONTROLS,{value:C.isBoolean(K.showcontrols)?K.showcontrols:true,method:function(N){var O=E.getElementsByClassName("bd","div",this.getElement(this.ID.CONTROLS))[0];
this._hideShowEl(O,N);
this.getElement(this.ID.CONTROLS_LABEL).innerHTML=(N)?this.get(this.OPT.TXT).HIDE_CONTROLS:this.get(this.OPT.TXT).SHOW_CONTROLS;
}});
this.setAttributeConfig(this.OPT.SHOW_RGB_CONTROLS,{value:C.isBoolean(K.showrgbcontrols)?K.showrgbcontrols:true,method:function(N){this._hideShowEl(this.ID.RGB_CONTROLS,N);
}});
this.setAttributeConfig(this.OPT.SHOW_HSV_CONTROLS,{value:C.isBoolean(K.showhsvcontrols)?K.showhsvcontrols:false,method:function(N){this._hideShowEl(this.ID.HSV_CONTROLS,N);
if(N&&this.get(this.OPT.SHOW_HEX_SUMMARY)){this.set(this.OPT.SHOW_HEX_SUMMARY,false);
}}});
this.setAttributeConfig(this.OPT.SHOW_HEX_CONTROLS,{value:C.isBoolean(K.showhexcontrols)?K.showhexcontrols:false,method:function(N){this._hideShowEl(this.ID.HEX_CONTROLS,N);
}});
this.setAttributeConfig(this.OPT.SHOW_WEBSAFE,{value:C.isBoolean(K.showwebsafe)?K.showwebsafe:true,method:function(N){this._hideShowEl(this.ID.WEBSAFE_SWATCH,N);
}});
this.setAttributeConfig(this.OPT.SHOW_HEX_SUMMARY,{value:C.isBoolean(K.showhexsummary)?K.showhexsummary:true,method:function(N){this._hideShowEl(this.ID.HEX_SUMMARY,N);
if(N&&this.get(this.OPT.SHOW_HSV_CONTROLS)){this.set(this.OPT.SHOW_HSV_CONTROLS,false);
}}});
this.setAttributeConfig(this.OPT.ANIMATE,{value:C.isBoolean(K.animate)?K.animate:true,method:function(N){if(this.pickerSlider){this.pickerSlider.animate=N;
this.hueSlider.animate=N;
}}});
this.on(this.OPT.HUE+"Change",this._updateRGBFromHSV,this,true);
this.on(this.OPT.SATURATION+"Change",this._updateRGBFromHSV,this,true);
this.on(this.OPT.VALUE+"Change",this._updateRGBFromHSV,this,true);
this.on(this.OPT.RED+"Change",this._updateRGB,this,true);
this.on(this.OPT.GREEN+"Change",this._updateRGB,this,true);
this.on(this.OPT.BLUE+"Change",this._updateRGB,this,true);
this.on(this.OPT.HEX+"Change",this._updateHex,this,true);
this._initElements();
}});
YAHOO.widget.ColorPicker=G;
})();
YAHOO.register("colorpicker",YAHOO.widget.ColorPicker,{version:"2.7.0",build:"1796"});
(function(){var B=YAHOO.util;
var A=function(D,C,E,F){if(!D){}this.init(D,C,E,F);
};
A.NAME="Anim";
A.prototype={toString:function(){var C=this.getEl()||{};
var D=C.id||C.tagName;
return(this.constructor.NAME+": "+D);
},patterns:{noNegatives:/width|height|opacity|padding/i,offsetAttribute:/^((width|height)|(top|left))$/,defaultUnit:/width|height|top$|bottom$|left$|right$/i,offsetUnit:/\d+(em|%|en|ex|pt|in|cm|mm|pc)$/i},doMethod:function(C,E,D){return this.method(this.currentFrame,E,D-E,this.totalFrames);
},setAttribute:function(C,F,E){var D=this.getEl();
if(this.patterns.noNegatives.test(C)){F=(F>0)?F:0;
}if("style" in D){B.Dom.setStyle(D,C,F+E);
}else{if(C in D){D[C]=F;
}}},getAttribute:function(C){var E=this.getEl();
var G=B.Dom.getStyle(E,C);
if(G!=="auto"&&!this.patterns.offsetUnit.test(G)){return parseFloat(G);
}var D=this.patterns.offsetAttribute.exec(C)||[];
var H=!!(D[3]);
var F=!!(D[2]);
if("style" in E){if(F||(B.Dom.getStyle(E,"position")=="absolute"&&H)){G=E["offset"+D[0].charAt(0).toUpperCase()+D[0].substr(1)];
}else{G=0;
}}else{if(C in E){G=E[C];
}}return G;
},getDefaultUnit:function(C){if(this.patterns.defaultUnit.test(C)){return"px";
}return"";
},setRuntimeAttribute:function(D){var I;
var E;
var F=this.attributes;
this.runtimeAttributes[D]={};
var H=function(J){return(typeof J!=="undefined");
};
if(!H(F[D]["to"])&&!H(F[D]["by"])){return false;
}I=(H(F[D]["from"]))?F[D]["from"]:this.getAttribute(D);
if(H(F[D]["to"])){E=F[D]["to"];
}else{if(H(F[D]["by"])){if(I.constructor==Array){E=[];
for(var G=0,C=I.length;
G<C;
++G){E[G]=I[G]+F[D]["by"][G]*1;
}}else{E=I+F[D]["by"]*1;
}}}this.runtimeAttributes[D].start=I;
this.runtimeAttributes[D].end=E;
this.runtimeAttributes[D].unit=(H(F[D].unit))?F[D]["unit"]:this.getDefaultUnit(D);
return true;
},init:function(E,J,I,C){var D=false;
var F=null;
var H=0;
E=B.Dom.get(E);
this.attributes=J||{};
this.duration=!YAHOO.lang.isUndefined(I)?I:1;
this.method=C||B.Easing.easeNone;
this.useSeconds=true;
this.currentFrame=0;
this.totalFrames=B.AnimMgr.fps;
this.setEl=function(M){E=B.Dom.get(M);
};
this.getEl=function(){return E;
};
this.isAnimated=function(){return D;
};
this.getStartTime=function(){return F;
};
this.runtimeAttributes={};
this.animate=function(){if(this.isAnimated()){return false;
}this.currentFrame=0;
this.totalFrames=(this.useSeconds)?Math.ceil(B.AnimMgr.fps*this.duration):this.duration;
if(this.duration===0&&this.useSeconds){this.totalFrames=1;
}B.AnimMgr.registerElement(this);
return true;
};
this.stop=function(M){if(!this.isAnimated()){return false;
}if(M){this.currentFrame=this.totalFrames;
this._onTween.fire();
}B.AnimMgr.stop(this);
};
var L=function(){this.onStart.fire();
this.runtimeAttributes={};
for(var M in this.attributes){this.setRuntimeAttribute(M);
}D=true;
H=0;
F=new Date();
};
var K=function(){var O={duration:new Date()-this.getStartTime(),currentFrame:this.currentFrame};
O.toString=function(){return("duration: "+O.duration+", currentFrame: "+O.currentFrame);
};
this.onTween.fire(O);
var N=this.runtimeAttributes;
for(var M in N){this.setAttribute(M,this.doMethod(M,N[M].start,N[M].end),N[M].unit);
}H+=1;
};
var G=function(){var M=(new Date()-F)/1000;
var N={duration:M,frames:H,fps:H/M};
N.toString=function(){return("duration: "+N.duration+", frames: "+N.frames+", fps: "+N.fps);
};
D=false;
H=0;
this.onComplete.fire(N);
};
this._onStart=new B.CustomEvent("_start",this,true);
this.onStart=new B.CustomEvent("start",this);
this.onTween=new B.CustomEvent("tween",this);
this._onTween=new B.CustomEvent("_tween",this,true);
this.onComplete=new B.CustomEvent("complete",this);
this._onComplete=new B.CustomEvent("_complete",this,true);
this._onStart.subscribe(L);
this._onTween.subscribe(K);
this._onComplete.subscribe(G);
}};
B.Anim=A;
})();
YAHOO.util.AnimMgr=new function(){var C=null;
var B=[];
var A=0;
this.fps=1000;
this.delay=1;
this.registerElement=function(F){B[B.length]=F;
A+=1;
F._onStart.fire();
this.start();
};
this.unRegister=function(G,F){F=F||E(G);
if(!G.isAnimated()||F==-1){return false;
}G._onComplete.fire();
B.splice(F,1);
A-=1;
if(A<=0){this.stop();
}return true;
};
this.start=function(){if(C===null){C=setInterval(this.run,this.delay);
}};
this.stop=function(H){if(!H){clearInterval(C);
for(var G=0,F=B.length;
G<F;
++G){this.unRegister(B[0],0);
}B=[];
C=null;
A=0;
}else{this.unRegister(H);
}};
this.run=function(){for(var H=0,F=B.length;
H<F;
++H){var G=B[H];
if(!G||!G.isAnimated()){continue;
}if(G.currentFrame<G.totalFrames||G.totalFrames===null){G.currentFrame+=1;
if(G.useSeconds){D(G);
}G._onTween.fire();
}else{YAHOO.util.AnimMgr.stop(G,H);
}}};
var E=function(H){for(var G=0,F=B.length;
G<F;
++G){if(B[G]==H){return G;
}}return -1;
};
var D=function(G){var J=G.totalFrames;
var I=G.currentFrame;
var H=(G.currentFrame*G.duration*1000/G.totalFrames);
var F=(new Date()-G.getStartTime());
var K=0;
if(F<G.duration*1000){K=Math.round((F/H-1)*G.currentFrame);
}else{K=J-(I+1);
}if(K>0&&isFinite(K)){if(G.currentFrame+K>=J){K=J-(I+1);
}G.currentFrame+=K;
}};
};
YAHOO.util.Bezier=new function(){this.getPosition=function(E,D){var F=E.length;
var C=[];
for(var B=0;
B<F;
++B){C[B]=[E[B][0],E[B][1]];
}for(var A=1;
A<F;
++A){for(B=0;
B<F-A;
++B){C[B][0]=(1-D)*C[B][0]+D*C[parseInt(B+1,10)][0];
C[B][1]=(1-D)*C[B][1]+D*C[parseInt(B+1,10)][1];
}}return[C[0][0],C[0][1]];
};
};
(function(){var A=function(F,E,G,H){A.superclass.constructor.call(this,F,E,G,H);
};
A.NAME="ColorAnim";
A.DEFAULT_BGCOLOR="#fff";
var C=YAHOO.util;
YAHOO.extend(A,C.Anim);
var D=A.superclass;
var B=A.prototype;
B.patterns.color=/color$/i;
B.patterns.rgb=/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i;
B.patterns.hex=/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i;
B.patterns.hex3=/^#?([0-9A-F]{1})([0-9A-F]{1})([0-9A-F]{1})$/i;
B.patterns.transparent=/^transparent|rgba\(0, 0, 0, 0\)$/;
B.parseColor=function(E){if(E.length==3){return E;
}var F=this.patterns.hex.exec(E);
if(F&&F.length==4){return[parseInt(F[1],16),parseInt(F[2],16),parseInt(F[3],16)];
}F=this.patterns.rgb.exec(E);
if(F&&F.length==4){return[parseInt(F[1],10),parseInt(F[2],10),parseInt(F[3],10)];
}F=this.patterns.hex3.exec(E);
if(F&&F.length==4){return[parseInt(F[1]+F[1],16),parseInt(F[2]+F[2],16),parseInt(F[3]+F[3],16)];
}return null;
};
B.getAttribute=function(E){var G=this.getEl();
if(this.patterns.color.test(E)){var I=YAHOO.util.Dom.getStyle(G,E);
var H=this;
if(this.patterns.transparent.test(I)){var F=YAHOO.util.Dom.getAncestorBy(G,function(J){return !H.patterns.transparent.test(I);
});
if(F){I=C.Dom.getStyle(F,E);
}else{I=A.DEFAULT_BGCOLOR;
}}}else{I=D.getAttribute.call(this,E);
}return I;
};
B.doMethod=function(F,J,G){var I;
if(this.patterns.color.test(F)){I=[];
for(var H=0,E=J.length;
H<E;
++H){I[H]=D.doMethod.call(this,F,J[H],G[H]);
}I="rgb("+Math.floor(I[0])+","+Math.floor(I[1])+","+Math.floor(I[2])+")";
}else{I=D.doMethod.call(this,F,J,G);
}return I;
};
B.setRuntimeAttribute=function(F){D.setRuntimeAttribute.call(this,F);
if(this.patterns.color.test(F)){var H=this.attributes;
var J=this.parseColor(this.runtimeAttributes[F].start);
var G=this.parseColor(this.runtimeAttributes[F].end);
if(typeof H[F]["to"]==="undefined"&&typeof H[F]["by"]!=="undefined"){G=this.parseColor(H[F].by);
for(var I=0,E=J.length;
I<E;
++I){G[I]=J[I]+G[I];
}}this.runtimeAttributes[F].start=J;
this.runtimeAttributes[F].end=G;
}};
C.ColorAnim=A;
})();
YAHOO.util.Easing={easeNone:function(B,A,D,C){return D*B/C+A;
},easeIn:function(B,A,D,C){return D*(B/=C)*B+A;
},easeOut:function(B,A,D,C){return -D*(B/=C)*(B-2)+A;
},easeBoth:function(B,A,D,C){if((B/=C/2)<1){return D/2*B*B+A;
}return -D/2*((--B)*(B-2)-1)+A;
},easeInStrong:function(B,A,D,C){return D*(B/=C)*B*B*B+A;
},easeOutStrong:function(B,A,D,C){return -D*((B=B/C-1)*B*B*B-1)+A;
},easeBothStrong:function(B,A,D,C){if((B/=C/2)<1){return D/2*B*B*B*B+A;
}return -D/2*((B-=2)*B*B*B-2)+A;
},elasticIn:function(C,A,G,F,B,E){if(C==0){return A;
}if((C/=F)==1){return A+G;
}if(!E){E=F*0.3;
}if(!B||B<Math.abs(G)){B=G;
var D=E/4;
}else{var D=E/(2*Math.PI)*Math.asin(G/B);
}return -(B*Math.pow(2,10*(C-=1))*Math.sin((C*F-D)*(2*Math.PI)/E))+A;
},elasticOut:function(C,A,G,F,B,E){if(C==0){return A;
}if((C/=F)==1){return A+G;
}if(!E){E=F*0.3;
}if(!B||B<Math.abs(G)){B=G;
var D=E/4;
}else{var D=E/(2*Math.PI)*Math.asin(G/B);
}return B*Math.pow(2,-10*C)*Math.sin((C*F-D)*(2*Math.PI)/E)+G+A;
},elasticBoth:function(C,A,G,F,B,E){if(C==0){return A;
}if((C/=F/2)==2){return A+G;
}if(!E){E=F*(0.3*1.5);
}if(!B||B<Math.abs(G)){B=G;
var D=E/4;
}else{var D=E/(2*Math.PI)*Math.asin(G/B);
}if(C<1){return -0.5*(B*Math.pow(2,10*(C-=1))*Math.sin((C*F-D)*(2*Math.PI)/E))+A;
}return B*Math.pow(2,-10*(C-=1))*Math.sin((C*F-D)*(2*Math.PI)/E)*0.5+G+A;
},backIn:function(B,A,E,D,C){if(typeof C=="undefined"){C=1.70158;
}return E*(B/=D)*B*((C+1)*B-C)+A;
},backOut:function(B,A,E,D,C){if(typeof C=="undefined"){C=1.70158;
}return E*((B=B/D-1)*B*((C+1)*B+C)+1)+A;
},backBoth:function(B,A,E,D,C){if(typeof C=="undefined"){C=1.70158;
}if((B/=D/2)<1){return E/2*(B*B*(((C*=(1.525))+1)*B-C))+A;
}return E/2*((B-=2)*B*(((C*=(1.525))+1)*B+C)+2)+A;
},bounceIn:function(B,A,D,C){return D-YAHOO.util.Easing.bounceOut(C-B,0,D,C)+A;
},bounceOut:function(B,A,D,C){if((B/=C)<(1/2.75)){return D*(7.5625*B*B)+A;
}else{if(B<(2/2.75)){return D*(7.5625*(B-=(1.5/2.75))*B+0.75)+A;
}else{if(B<(2.5/2.75)){return D*(7.5625*(B-=(2.25/2.75))*B+0.9375)+A;
}}}return D*(7.5625*(B-=(2.625/2.75))*B+0.984375)+A;
},bounceBoth:function(B,A,D,C){if(B<C/2){return YAHOO.util.Easing.bounceIn(B*2,0,D,C)*0.5+A;
}return YAHOO.util.Easing.bounceOut(B*2-C,0,D,C)*0.5+D*0.5+A;
}};
(function(){var A=function(H,G,I,J){if(H){A.superclass.constructor.call(this,H,G,I,J);
}};
A.NAME="Motion";
var E=YAHOO.util;
YAHOO.extend(A,E.ColorAnim);
var F=A.superclass;
var C=A.prototype;
C.patterns.points=/^points$/i;
C.setAttribute=function(G,I,H){if(this.patterns.points.test(G)){H=H||"px";
F.setAttribute.call(this,"left",I[0],H);
F.setAttribute.call(this,"top",I[1],H);
}else{F.setAttribute.call(this,G,I,H);
}};
C.getAttribute=function(G){if(this.patterns.points.test(G)){var H=[F.getAttribute.call(this,"left"),F.getAttribute.call(this,"top")];
}else{H=F.getAttribute.call(this,G);
}return H;
};
C.doMethod=function(G,K,H){var J=null;
if(this.patterns.points.test(G)){var I=this.method(this.currentFrame,0,100,this.totalFrames)/100;
J=E.Bezier.getPosition(this.runtimeAttributes[G],I);
}else{J=F.doMethod.call(this,G,K,H);
}return J;
};
C.setRuntimeAttribute=function(P){if(this.patterns.points.test(P)){var H=this.getEl();
var J=this.attributes;
var G;
var L=J.points["control"]||[];
var I;
var M,O;
if(L.length>0&&!(L[0] instanceof Array)){L=[L];
}else{var K=[];
for(M=0,O=L.length;
M<O;
++M){K[M]=L[M];
}L=K;
}if(E.Dom.getStyle(H,"position")=="static"){E.Dom.setStyle(H,"position","relative");
}if(D(J.points["from"])){E.Dom.setXY(H,J.points["from"]);
}else{E.Dom.setXY(H,E.Dom.getXY(H));
}G=this.getAttribute("points");
if(D(J.points["to"])){I=B.call(this,J.points["to"],G);
var N=E.Dom.getXY(this.getEl());
for(M=0,O=L.length;
M<O;
++M){L[M]=B.call(this,L[M],G);
}}else{if(D(J.points["by"])){I=[G[0]+J.points["by"][0],G[1]+J.points["by"][1]];
for(M=0,O=L.length;
M<O;
++M){L[M]=[G[0]+L[M][0],G[1]+L[M][1]];
}}}this.runtimeAttributes[P]=[G];
if(L.length>0){this.runtimeAttributes[P]=this.runtimeAttributes[P].concat(L);
}this.runtimeAttributes[P][this.runtimeAttributes[P].length]=I;
}else{F.setRuntimeAttribute.call(this,P);
}};
var B=function(G,I){var H=E.Dom.getXY(this.getEl());
G=[G[0]-H[0]+I[0],G[1]-H[1]+I[1]];
return G;
};
var D=function(G){return(typeof G!=="undefined");
};
E.Motion=A;
})();
(function(){var D=function(F,E,G,H){if(F){D.superclass.constructor.call(this,F,E,G,H);
}};
D.NAME="Scroll";
var B=YAHOO.util;
YAHOO.extend(D,B.ColorAnim);
var C=D.superclass;
var A=D.prototype;
A.doMethod=function(E,H,F){var G=null;
if(E=="scroll"){G=[this.method(this.currentFrame,H[0],F[0]-H[0],this.totalFrames),this.method(this.currentFrame,H[1],F[1]-H[1],this.totalFrames)];
}else{G=C.doMethod.call(this,E,H,F);
}return G;
};
A.getAttribute=function(E){var G=null;
var F=this.getEl();
if(E=="scroll"){G=[F.scrollLeft,F.scrollTop];
}else{G=C.getAttribute.call(this,E);
}return G;
};
A.setAttribute=function(E,H,G){var F=this.getEl();
if(E=="scroll"){F.scrollLeft=H[0];
F.scrollTop=H[1];
}else{C.setAttribute.call(this,E,H,G);
}};
B.Scroll=D;
})();
YAHOO.register("animation",YAHOO.util.Anim,{version:"2.7.0",build:"1799"});
(function(){var htmlbase="nbsp,gt,lt,amp";
var entities="quot,iexcl,cent,pound,curren,yen,brvbar,sect,uml,copy,ordf,laquo,not,shy,reg,macr,deg,plusmn,sup2,sup3,acute,micro,para,middot,cedil,sup1,ordm,raquo,frac14,frac12,frac34,iquest,times,divide,fnof,bull,hellip,prime,Prime,oline,frasl,weierp,image,real,trade,alefsym,larr,uarr,rarr,darr,harr,crarr,lArr,uArr,rArr,dArr,hArr,forall,part,exist,empty,nabla,isin,notin,ni,prod,sum,minus,lowast,radic,prop,infin,ang,and,or,cap,cup,int,there4,sim,cong,asymp,ne,equiv,le,ge,sub,sup,nsub,sube,supe,oplus,otimes,perp,sdot,lceil,rceil,lfloor,rfloor,lang,rang,loz,spades,clubs,hearts,diams,circ,tilde,ensp,emsp,thinsp,zwnj,zwj,lrm,rlm,ndash,mdash,lsquo,rsquo,sbquo,ldquo,rdquo,bdquo,dagger,Dagger,permil,lsaquo,rsaquo,euro";
var latin="Agrave,Aacute,Acirc,Atilde,Auml,Aring,AElig,Ccedil,Egrave,Eacute,Ecirc,Euml,Igrave,Iacute,Icirc,Iuml,ETH,Ntilde,Ograve,Oacute,Ocirc,Otilde,Ouml,Oslash,Ugrave,Uacute,Ucirc,Uuml,Yacute,THORN,szlig,agrave,aacute,acirc,atilde,auml,aring,aelig,ccedil,egrave,eacute,ecirc,euml,igrave,iacute,icirc,iuml,eth,ntilde,ograve,oacute,ocirc,otilde,ouml,oslash,ugrave,uacute,ucirc,uuml,yacute,thorn,yuml,OElig,oelig,Scaron,scaron,Yuml";
var greek="Alpha,Beta,Gamma,Delta,Epsilon,Zeta,Eta,Theta,Iota,Kappa,Lambda,Mu,Nu,Xi,Omicron,Pi,Rho,Sigma,Tau,Upsilon,Phi,Chi,Psi,Omega,alpha,beta,gamma,delta,epsilon,zeta,eta,theta,iota,kappa,lambda,mu,nu,xi,omicron,pi,rho,sigmaf,sigma,tau,upsilon,phi,chi,psi,omega,thetasym,upsih,piv";
function buildTable(entities,reverse){var table={},regex=[];
var specialTable={nbsp:"\u00A0",shy:"\u00AD",gt:"\u003E",lt:"\u003C",amp:"\u0026",apos:"\u0027",quot:"\u0022"};
entities=entities.replace(/\b(nbsp|shy|gt|lt|amp|apos|quot)(?:,|$)/g,function(match,entity){var org=reverse?"&"+entity+";":specialTable[entity],result=reverse?specialTable[entity]:"&"+entity+";";
table[org]=result;
regex.push(org);
return"";
});
if(!reverse&&entities){entities=entities.split(",");
var div=document.createElement("div"),chars;
div.innerHTML="&"+entities.join(";&")+";";
chars=div.innerHTML;
div=null;
for(var i=0;
i<chars.length;
i++){var charAt=chars.charAt(i);
table[charAt]="&"+entities[i]+";";
regex.push(charAt);
}}table.regex=regex.join(reverse?"|":"");
return table;
}CKEDITOR.plugins.add("entities",{afterInit:function(editor){var config=editor.config;
var dataProcessor=editor.dataProcessor,htmlFilter=dataProcessor&&dataProcessor.htmlFilter;
if(htmlFilter){var selectedEntities=[];
if(config.basicEntities!==false){selectedEntities.push(htmlbase);
}if(config.entities){if(selectedEntities.length){selectedEntities.push(entities);
}if(config.entities_latin){selectedEntities.push(latin);
}if(config.entities_greek){selectedEntities.push(greek);
}if(config.entities_additional){selectedEntities.push(config.entities_additional);
}}var entitiesTable=buildTable(selectedEntities.join(","));
var entitiesRegex=entitiesTable.regex?"["+entitiesTable.regex+"]":"a^";
delete entitiesTable.regex;
if(config.entities&&config.entities_processNumerical){entitiesRegex="[^ -~]|"+entitiesRegex;
}entitiesRegex=new RegExp(entitiesRegex,"g");
function getEntity(character){return config.entities_processNumerical=="force"||!entitiesTable[character]?"&#"+character.charCodeAt(0)+";":entitiesTable[character];
}var baseEntitiesTable=buildTable([htmlbase,"shy"].join(","),true),baseEntitiesRegex=new RegExp(baseEntitiesTable.regex,"g");
function getChar(character){return baseEntitiesTable[character];
}htmlFilter.addRules({text:function(text){return text.replace(baseEntitiesRegex,getChar).replace(entitiesRegex,getEntity);
}});
}}});
})();
CKEDITOR.config.basicEntities=true;
CKEDITOR.config.entities=true;
CKEDITOR.config.entities_latin=true;
CKEDITOR.config.entities_greek=true;
CKEDITOR.config.entities_additional="#39";
CKEDITOR.plugins.add("popup");
CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{popup:function(url,width,height,options){width=width||"80%";
height=height||"70%";
if(typeof width=="string"&&width.length>1&&width.substr(width.length-1,1)=="%"){width=parseInt(window.screen.width*parseInt(width,10)/100,10);
}if(typeof height=="string"&&height.length>1&&height.substr(height.length-1,1)=="%"){height=parseInt(window.screen.height*parseInt(height,10)/100,10);
}if(width<640){width=640;
}if(height<420){height=420;
}var top=parseInt((window.screen.height-height)/2,10),left=parseInt((window.screen.width-width)/2,10);
options=(options||"location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes")+",width="+width+",height="+height+",top="+top+",left="+left;
var popupWindow=window.open("",null,options,true);
if(!popupWindow){return false;
}try{var ua=navigator.userAgent.toLowerCase();
if(ua.indexOf(" chrome/")==-1){popupWindow.moveTo(left,top);
popupWindow.resizeTo(width,height);
}popupWindow.focus();
popupWindow.location.href=url;
}catch(e){popupWindow=window.open(url,null,options,true);
}return true;
}});
(function(){var listNodeNames={ol:1,ul:1},isNotWhitespaces=CKEDITOR.dom.walker.whitespaces(true),isNotBookmark=CKEDITOR.dom.walker.bookmark(false,true);
function indentCommand(editor,name){this.name=name;
var useClasses=this.useIndentClasses=editor.config.indentClasses&&editor.config.indentClasses.length>0;
if(useClasses){this.classNameRegex=new RegExp("(?:^|\\s+)("+editor.config.indentClasses.join("|")+")(?=$|\\s)");
this.indentClassMap={};
for(var i=0;
i<editor.config.indentClasses.length;
i++){this.indentClassMap[editor.config.indentClasses[i]]=i+1;
}}this.startDisabled=name=="outdent";
this.allowedContent={"div h1 h2 h3 h4 h5 h6 ol p pre ul":{propertiesOnly:true,styles:!useClasses?"margin-left,margin-right":null,classes:useClasses?editor.config.indentClasses:null}};
this.requiredContent=["p"+(useClasses?"("+editor.config.indentClasses[0]+")":"{margin-left}"),"li"];
}function getIndentCssProperty(element,dir){return(dir||element.getComputedStyle("direction"))=="ltr"?"margin-left":"margin-right";
}function isListItem(node){return node.type==CKEDITOR.NODE_ELEMENT&&node.is("li");
}indentCommand.prototype={context:"p",refresh:function(editor,path){var list=path&&path.contains(listNodeNames),firstBlock=path.block||path.blockLimit;
if(list){this.setState(CKEDITOR.TRISTATE_OFF);
}else{if(!this.useIndentClasses&&this.name=="indent"){this.setState(CKEDITOR.TRISTATE_OFF);
}else{if(!firstBlock){this.setState(CKEDITOR.TRISTATE_DISABLED);
}else{if(this.useIndentClasses){var indentClass=firstBlock.$.className.match(this.classNameRegex),indentStep=0;
if(indentClass){indentClass=indentClass[1];
indentStep=this.indentClassMap[indentClass];
}if((this.name=="outdent"&&!indentStep)||(this.name=="indent"&&indentStep==editor.config.indentClasses.length)){this.setState(CKEDITOR.TRISTATE_DISABLED);
}else{this.setState(CKEDITOR.TRISTATE_OFF);
}}else{var indent=parseInt(firstBlock.getStyle(getIndentCssProperty(firstBlock)),10);
if(isNaN(indent)){indent=0;
}if(indent<=0){this.setState(CKEDITOR.TRISTATE_DISABLED);
}else{this.setState(CKEDITOR.TRISTATE_OFF);
}}}}}},exec:function(editor){var self=this,database={};
function indentList(listNode){var startContainer=range.startContainer,endContainer=range.endContainer;
while(startContainer&&!startContainer.getParent().equals(listNode)){startContainer=startContainer.getParent();
}while(endContainer&&!endContainer.getParent().equals(listNode)){endContainer=endContainer.getParent();
}if(!startContainer||!endContainer){return;
}var block=startContainer,itemsToMove=[],stopFlag=false;
while(!stopFlag){if(block.equals(endContainer)){stopFlag=true;
}itemsToMove.push(block);
block=block.getNext();
}if(itemsToMove.length<1){return;
}var listParents=listNode.getParents(true);
for(var i=0;
i<listParents.length;
i++){if(listParents[i].getName&&listNodeNames[listParents[i].getName()]){listNode=listParents[i];
break;
}}var indentOffset=self.name=="indent"?1:-1,startItem=itemsToMove[0],lastItem=itemsToMove[itemsToMove.length-1];
var listArray=CKEDITOR.plugins.list.listToArray(listNode,database);
var baseIndent=listArray[lastItem.getCustomData("listarray_index")].indent;
for(i=startItem.getCustomData("listarray_index");
i<=lastItem.getCustomData("listarray_index");
i++){listArray[i].indent+=indentOffset;
if(indentOffset>0){var listRoot=listArray[i].parent;
listArray[i].parent=new CKEDITOR.dom.element(listRoot.getName(),listRoot.getDocument());
}}for(i=lastItem.getCustomData("listarray_index")+1;
i<listArray.length&&listArray[i].indent>baseIndent;
i++){listArray[i].indent+=indentOffset;
}var newList=CKEDITOR.plugins.list.arrayToList(listArray,database,null,editor.config.enterMode,listNode.getDirection());
if(self.name=="outdent"){var parentLiElement;
if((parentLiElement=listNode.getParent())&&parentLiElement.is("li")){var children=newList.listNode.getChildren(),pendingLis=[],count=children.count(),child;
for(i=count-1;
i>=0;
i--){if((child=children.getItem(i))&&child.is&&child.is("li")){pendingLis.push(child);
}}}}if(newList){newList.listNode.replace(listNode);
}if(pendingLis&&pendingLis.length){for(i=0;
i<pendingLis.length;
i++){var li=pendingLis[i],followingList=li;
while((followingList=followingList.getNext())&&followingList.is&&followingList.getName() in listNodeNames){if(CKEDITOR.env.ie&&!li.getFirst(function(node){return isNotWhitespaces(node)&&isNotBookmark(node);
})){li.append(range.document.createText("\u00a0"));
}li.append(followingList);
}li.insertAfter(parentLiElement);
}}}function indentBlock(){var iterator=range.createIterator(),enterMode=editor.config.enterMode;
iterator.enforceRealBlocks=true;
iterator.enlargeBr=enterMode!=CKEDITOR.ENTER_BR;
var block;
while((block=iterator.getNextParagraph(enterMode==CKEDITOR.ENTER_P?"p":"div"))){indentElement(block);
}}function indentElement(element,dir){if(element.getCustomData("indent_processed")){return false;
}if(self.useIndentClasses){var indentClass=element.$.className.match(self.classNameRegex),indentStep=0;
if(indentClass){indentClass=indentClass[1];
indentStep=self.indentClassMap[indentClass];
}if(self.name=="outdent"){indentStep--;
}else{indentStep++;
}if(indentStep<0){return false;
}indentStep=Math.min(indentStep,editor.config.indentClasses.length);
indentStep=Math.max(indentStep,0);
element.$.className=CKEDITOR.tools.ltrim(element.$.className.replace(self.classNameRegex,""));
if(indentStep>0){element.addClass(editor.config.indentClasses[indentStep-1]);
}}else{var indentCssProperty=getIndentCssProperty(element,dir),currentOffset=parseInt(element.getStyle(indentCssProperty),10);
if(isNaN(currentOffset)){currentOffset=0;
}var indentOffset=editor.config.indentOffset||40;
currentOffset+=(self.name=="indent"?1:-1)*indentOffset;
if(currentOffset<0){return false;
}currentOffset=Math.max(currentOffset,0);
currentOffset=Math.ceil(currentOffset/indentOffset)*indentOffset;
element.setStyle(indentCssProperty,currentOffset?currentOffset+(editor.config.indentUnit||"px"):"");
if(element.getAttribute("style")===""){element.removeAttribute("style");
}}CKEDITOR.dom.element.setMarker(database,element,"indent_processed",1);
return true;
}var selection=editor.getSelection(),bookmarks=selection.createBookmarks(1),ranges=selection&&selection.getRanges(1),range;
var iterator=ranges.createIterator();
while((range=iterator.getNextRange())){var rangeRoot=range.getCommonAncestor(),nearestListBlock=rangeRoot;
while(nearestListBlock&&!(nearestListBlock.type==CKEDITOR.NODE_ELEMENT&&listNodeNames[nearestListBlock.getName()])){nearestListBlock=nearestListBlock.getParent();
}if(!nearestListBlock){var selectedNode=range.getEnclosedNode();
if(selectedNode&&selectedNode.type==CKEDITOR.NODE_ELEMENT&&selectedNode.getName() in listNodeNames){range.setStartAt(selectedNode,CKEDITOR.POSITION_AFTER_START);
range.setEndAt(selectedNode,CKEDITOR.POSITION_BEFORE_END);
nearestListBlock=selectedNode;
}}if(nearestListBlock&&range.startContainer.type==CKEDITOR.NODE_ELEMENT&&range.startContainer.getName() in listNodeNames){var walker=new CKEDITOR.dom.walker(range);
walker.evaluator=isListItem;
range.startContainer=walker.next();
}if(nearestListBlock&&range.endContainer.type==CKEDITOR.NODE_ELEMENT&&range.endContainer.getName() in listNodeNames){walker=new CKEDITOR.dom.walker(range);
walker.evaluator=isListItem;
range.endContainer=walker.previous();
}if(nearestListBlock){var firstListItem=nearestListBlock.getFirst(isListItem),hasMultipleItems=!!firstListItem.getNext(isListItem),rangeStart=range.startContainer,indentWholeList=firstListItem.equals(rangeStart)||firstListItem.contains(rangeStart);
if(!(indentWholeList&&(self.name=="indent"||self.useIndentClasses||parseInt(nearestListBlock.getStyle(getIndentCssProperty(nearestListBlock)),10))&&indentElement(nearestListBlock,!hasMultipleItems&&firstListItem.getDirection()))){indentList(nearestListBlock);
}}else{indentBlock();
}}CKEDITOR.dom.element.clearAllMarkers(database);
editor.forceNextSelectionCheck();
selection.selectBookmarks(bookmarks);
}};
CKEDITOR.plugins.add("indent",{requires:"list",lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"indent,indent-rtl,outdent,outdent-rtl",onLoad:function(){if(CKEDITOR.env.ie6Compat||CKEDITOR.env.ie7Compat){CKEDITOR.addCss(".cke_editable ul,.cke_editable ol{	margin-left: 0px;	padding-left: 40px;}");
}},init:function(editor){if(editor.blockless){return;
}var indent=editor.addCommand("indent",new indentCommand(editor,"indent")),outdent=editor.addCommand("outdent",new indentCommand(editor,"outdent"));
if(editor.ui.addButton){editor.ui.addButton("Indent",{label:editor.lang.indent.indent,command:"indent",directional:true,toolbar:"indent,20"});
editor.ui.addButton("Outdent",{label:editor.lang.indent.outdent,command:"outdent",directional:true,toolbar:"indent,10"});
}editor.on("dirChanged",function(e){var range=editor.createRange();
range.setStartBefore(e.data.node);
range.setEndAfter(e.data.node);
var walker=new CKEDITOR.dom.walker(range),node;
while((node=walker.next())){if(node.type==CKEDITOR.NODE_ELEMENT){if(!node.equals(e.data.node)&&node.getDirection()){range.setStartAfter(node);
walker=new CKEDITOR.dom.walker(range);
continue;
}var classes=editor.config.indentClasses;
if(classes){var suffix=(e.data.dir=="ltr")?["_rtl",""]:["","_rtl"];
for(var i=0;
i<classes.length;
i++){if(node.hasClass(classes[i]+suffix[0])){node.removeClass(classes[i]+suffix[0]);
node.addClass(classes[i]+suffix[1]);
}}}var marginLeft=node.getStyle("margin-right"),marginRight=node.getStyle("margin-left");
marginLeft?node.setStyle("margin-left",marginLeft):node.removeStyle("margin-left");
marginRight?node.setStyle("margin-right",marginRight):node.removeStyle("margin-right");
}}});
}});
})();
(function(){var listNodeNames={ol:1,ul:1},emptyTextRegex=/^[\n\r\t ]*$/;
var whitespaces=CKEDITOR.dom.walker.whitespaces(),bookmarks=CKEDITOR.dom.walker.bookmark(),nonEmpty=function(node){return !(whitespaces(node)||bookmarks(node));
},blockBogus=CKEDITOR.dom.walker.bogus();
function cleanUpDirection(element){var dir,parent,parentDir;
if((dir=element.getDirection())){parent=element.getParent();
while(parent&&!(parentDir=parent.getDirection())){parent=parent.getParent();
}if(dir==parentDir){element.removeAttribute("dir");
}}}function inheirtInlineStyles(parent,el){var style=parent.getAttribute("style");
style&&el.setAttribute("style",style.replace(/([^;])$/,"$1;")+(el.getAttribute("style")||""));
}CKEDITOR.plugins.list={listToArray:function(listNode,database,baseArray,baseIndentLevel,grandparentNode){if(!listNodeNames[listNode.getName()]){return[];
}if(!baseIndentLevel){baseIndentLevel=0;
}if(!baseArray){baseArray=[];
}for(var i=0,count=listNode.getChildCount();
i<count;
i++){var listItem=listNode.getChild(i);
if(listItem.type==CKEDITOR.NODE_ELEMENT&&listItem.getName() in CKEDITOR.dtd.$list){CKEDITOR.plugins.list.listToArray(listItem,database,baseArray,baseIndentLevel+1);
}if(listItem.$.nodeName.toLowerCase()!="li"){continue;
}var itemObj={parent:listNode,indent:baseIndentLevel,element:listItem,contents:[]};
if(!grandparentNode){itemObj.grandparent=listNode.getParent();
if(itemObj.grandparent&&itemObj.grandparent.$.nodeName.toLowerCase()=="li"){itemObj.grandparent=itemObj.grandparent.getParent();
}}else{itemObj.grandparent=grandparentNode;
}if(database){CKEDITOR.dom.element.setMarker(database,listItem,"listarray_index",baseArray.length);
}baseArray.push(itemObj);
for(var j=0,itemChildCount=listItem.getChildCount(),child;
j<itemChildCount;
j++){child=listItem.getChild(j);
if(child.type==CKEDITOR.NODE_ELEMENT&&listNodeNames[child.getName()]){CKEDITOR.plugins.list.listToArray(child,database,baseArray,baseIndentLevel+1,itemObj.grandparent);
}else{itemObj.contents.push(child);
}}}return baseArray;
},arrayToList:function(listArray,database,baseIndex,paragraphMode,dir){if(!baseIndex){baseIndex=0;
}if(!listArray||listArray.length<baseIndex+1){return null;
}var i,doc=listArray[baseIndex].parent.getDocument(),retval=new CKEDITOR.dom.documentFragment(doc),rootNode=null,currentIndex=baseIndex,indentLevel=Math.max(listArray[baseIndex].indent,0),currentListItem=null,orgDir,block,paragraphName=(paragraphMode==CKEDITOR.ENTER_P?"p":"div");
while(1){var item=listArray[currentIndex],itemGrandParent=item.grandparent;
orgDir=item.element.getDirection(1);
if(item.indent==indentLevel){if(!rootNode||listArray[currentIndex].parent.getName()!=rootNode.getName()){rootNode=listArray[currentIndex].parent.clone(false,1);
dir&&rootNode.setAttribute("dir",dir);
retval.append(rootNode);
}currentListItem=rootNode.append(item.element.clone(0,1));
if(orgDir!=rootNode.getDirection(1)){currentListItem.setAttribute("dir",orgDir);
}for(i=0;
i<item.contents.length;
i++){currentListItem.append(item.contents[i].clone(1,1));
}currentIndex++;
}else{if(item.indent==Math.max(indentLevel,0)+1){var currDir=listArray[currentIndex-1].element.getDirection(1),listData=CKEDITOR.plugins.list.arrayToList(listArray,null,currentIndex,paragraphMode,currDir!=orgDir?orgDir:null);
if(!currentListItem.getChildCount()&&CKEDITOR.env.ie&&!(doc.$.documentMode>7)){currentListItem.append(doc.createText("\xa0"));
}currentListItem.append(listData.listNode);
currentIndex=listData.nextIndex;
}else{if(item.indent==-1&&!baseIndex&&itemGrandParent){if(listNodeNames[itemGrandParent.getName()]){currentListItem=item.element.clone(false,true);
if(orgDir!=itemGrandParent.getDirection(1)){currentListItem.setAttribute("dir",orgDir);
}}else{currentListItem=new CKEDITOR.dom.documentFragment(doc);
}var dirLoose=itemGrandParent.getDirection(1)!=orgDir,li=item.element,className=li.getAttribute("class"),style=li.getAttribute("style");
var needsBlock=currentListItem.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT&&(paragraphMode!=CKEDITOR.ENTER_BR||dirLoose||style||className);
var child,count=item.contents.length;
for(i=0;
i<count;
i++){child=item.contents[i];
if(child.type==CKEDITOR.NODE_ELEMENT&&child.isBlockBoundary()){if(dirLoose&&!child.getDirection()){child.setAttribute("dir",orgDir);
}inheirtInlineStyles(li,child);
className&&child.addClass(className);
}else{if(needsBlock){if(!block){block=doc.createElement(paragraphName);
dirLoose&&block.setAttribute("dir",orgDir);
}style&&block.setAttribute("style",style);
className&&block.setAttribute("class",className);
block.append(child.clone(1,1));
}}currentListItem.append(block||child.clone(1,1));
}if(currentListItem.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT&&currentIndex!=listArray.length-1){var last=currentListItem.getLast();
if(last&&last.type==CKEDITOR.NODE_ELEMENT&&last.getAttribute("type")=="_moz"){last.remove();
}if(!(last=currentListItem.getLast(nonEmpty)&&last.type==CKEDITOR.NODE_ELEMENT&&last.getName() in CKEDITOR.dtd.$block)){currentListItem.append(doc.createElement("br"));
}}var currentListItemName=currentListItem.$.nodeName.toLowerCase();
if(!CKEDITOR.env.ie&&(currentListItemName=="div"||currentListItemName=="p")){currentListItem.appendBogus();
}retval.append(currentListItem);
rootNode=null;
currentIndex++;
}else{return null;
}}}block=null;
if(listArray.length<=currentIndex||Math.max(listArray[currentIndex].indent,0)<indentLevel){break;
}}if(database){var currentNode=retval.getFirst(),listRoot=listArray[0].parent;
while(currentNode){if(currentNode.type==CKEDITOR.NODE_ELEMENT){CKEDITOR.dom.element.clearMarkers(database,currentNode);
if(currentNode.getName() in CKEDITOR.dtd.$listItem){cleanUpDirection(currentNode);
}}currentNode=currentNode.getNextSourceNode();
}}return{listNode:retval,nextIndex:currentIndex};
}};
function changeListType(editor,groupObj,database,listsCreated){var listArray=CKEDITOR.plugins.list.listToArray(groupObj.root,database),selectedListItems=[];
for(var i=0;
i<groupObj.contents.length;
i++){var itemNode=groupObj.contents[i];
itemNode=itemNode.getAscendant("li",true);
if(!itemNode||itemNode.getCustomData("list_item_processed")){continue;
}selectedListItems.push(itemNode);
CKEDITOR.dom.element.setMarker(database,itemNode,"list_item_processed",true);
}var root=groupObj.root,doc=root.getDocument(),listNode,newListNode;
for(i=0;
i<selectedListItems.length;
i++){var listIndex=selectedListItems[i].getCustomData("listarray_index");
listNode=listArray[listIndex].parent;
if(!listNode.is(this.type)){newListNode=doc.createElement(this.type);
listNode.copyAttributes(newListNode,{start:1,type:1});
newListNode.removeStyle("list-style-type");
listArray[listIndex].parent=newListNode;
}}var newList=CKEDITOR.plugins.list.arrayToList(listArray,database,null,editor.config.enterMode);
var child,length=newList.listNode.getChildCount();
for(i=0;
i<length&&(child=newList.listNode.getChild(i));
i++){if(child.getName()==this.type){listsCreated.push(child);
}}newList.listNode.replace(groupObj.root);
}var headerTagRegex=/^h[1-6]$/;
function createList(editor,groupObj,listsCreated){var contents=groupObj.contents,doc=groupObj.root.getDocument(),listContents=[];
if(contents.length==1&&contents[0].equals(groupObj.root)){var divBlock=doc.createElement("div");
contents[0].moveChildren&&contents[0].moveChildren(divBlock);
contents[0].append(divBlock);
contents[0]=divBlock;
}var commonParent=groupObj.contents[0].getParent();
for(var i=0;
i<contents.length;
i++){commonParent=commonParent.getCommonAncestor(contents[i].getParent());
}var useComputedState=editor.config.useComputedState,listDir,explicitDirection;
useComputedState=useComputedState===undefined||useComputedState;
for(i=0;
i<contents.length;
i++){var contentNode=contents[i],parentNode;
while((parentNode=contentNode.getParent())){if(parentNode.equals(commonParent)){listContents.push(contentNode);
if(!explicitDirection&&contentNode.getDirection()){explicitDirection=1;
}var itemDir=contentNode.getDirection(useComputedState);
if(listDir!==null){if(listDir&&listDir!=itemDir){listDir=null;
}else{listDir=itemDir;
}}break;
}contentNode=parentNode;
}}if(listContents.length<1){return;
}var insertAnchor=listContents[listContents.length-1].getNext(),listNode=doc.createElement(this.type);
listsCreated.push(listNode);
var contentBlock,listItem;
while(listContents.length){contentBlock=listContents.shift();
listItem=doc.createElement("li");
if(contentBlock.is("pre")||headerTagRegex.test(contentBlock.getName())){contentBlock.appendTo(listItem);
}else{contentBlock.copyAttributes(listItem);
if(listDir&&contentBlock.getDirection()){listItem.removeStyle("direction");
listItem.removeAttribute("dir");
}contentBlock.moveChildren(listItem);
contentBlock.remove();
}listItem.appendTo(listNode);
}if(listDir&&explicitDirection){listNode.setAttribute("dir",listDir);
}if(insertAnchor){listNode.insertBefore(insertAnchor);
}else{listNode.appendTo(commonParent);
}}function removeList(editor,groupObj,database){var listArray=CKEDITOR.plugins.list.listToArray(groupObj.root,database),selectedListItems=[];
for(var i=0;
i<groupObj.contents.length;
i++){var itemNode=groupObj.contents[i];
itemNode=itemNode.getAscendant("li",true);
if(!itemNode||itemNode.getCustomData("list_item_processed")){continue;
}selectedListItems.push(itemNode);
CKEDITOR.dom.element.setMarker(database,itemNode,"list_item_processed",true);
}var lastListIndex=null;
for(i=0;
i<selectedListItems.length;
i++){var listIndex=selectedListItems[i].getCustomData("listarray_index");
listArray[listIndex].indent=-1;
lastListIndex=listIndex;
}for(i=lastListIndex+1;
i<listArray.length;
i++){if(listArray[i].indent>listArray[i-1].indent+1){var indentOffset=listArray[i-1].indent+1-listArray[i].indent;
var oldIndent=listArray[i].indent;
while(listArray[i]&&listArray[i].indent>=oldIndent){listArray[i].indent+=indentOffset;
i++;
}i--;
}}var newList=CKEDITOR.plugins.list.arrayToList(listArray,database,null,editor.config.enterMode,groupObj.root.getAttribute("dir"));
var docFragment=newList.listNode,boundaryNode,siblingNode;
function compensateBrs(isStart){if((boundaryNode=docFragment[isStart?"getFirst":"getLast"]())&&!(boundaryNode.is&&boundaryNode.isBlockBoundary())&&(siblingNode=groupObj.root[isStart?"getPrevious":"getNext"](CKEDITOR.dom.walker.invisible(true)))&&!(siblingNode.is&&siblingNode.isBlockBoundary({br:1}))){editor.document.createElement("br")[isStart?"insertBefore":"insertAfter"](boundaryNode);
}}compensateBrs(true);
compensateBrs();
docFragment.replace(groupObj.root);
}function listCommand(name,type){this.name=name;
this.type=type;
this.context=type;
this.allowedContent=type+" li";
this.requiredContent=type;
}var elementType=CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_ELEMENT);
function mergeChildren(from,into,refNode,forward){var child,itemDir;
while((child=from[forward?"getLast":"getFirst"](elementType))){if((itemDir=child.getDirection(1))!==into.getDirection(1)){child.setAttribute("dir",itemDir);
}child.remove();
refNode?child[forward?"insertBefore":"insertAfter"](refNode):into.append(child,forward);
}}listCommand.prototype={exec:function(editor){this.refresh(editor,editor.elementPath());
var doc=editor.document,config=editor.config,selection=editor.getSelection(),ranges=selection&&selection.getRanges(true);
if(this.state==CKEDITOR.TRISTATE_OFF){var editable=editor.editable();
if(!editable.getFirst(nonEmpty)){config.enterMode==CKEDITOR.ENTER_BR?editable.appendBogus():ranges[0].fixBlock(1,config.enterMode==CKEDITOR.ENTER_P?"p":"div");
selection.selectRanges(ranges);
}else{var range=ranges.length==1&&ranges[0],enclosedNode=range&&range.getEnclosedNode();
if(enclosedNode&&enclosedNode.is&&this.type==enclosedNode.getName()){this.setState(CKEDITOR.TRISTATE_ON);
}}}var bookmarks=selection.createBookmarks(true);
var listGroups=[],database={},rangeIterator=ranges.createIterator(),index=0;
while((range=rangeIterator.getNextRange())&&++index){var boundaryNodes=range.getBoundaryNodes(),startNode=boundaryNodes.startNode,endNode=boundaryNodes.endNode;
if(startNode.type==CKEDITOR.NODE_ELEMENT&&startNode.getName()=="td"){range.setStartAt(boundaryNodes.startNode,CKEDITOR.POSITION_AFTER_START);
}if(endNode.type==CKEDITOR.NODE_ELEMENT&&endNode.getName()=="td"){range.setEndAt(boundaryNodes.endNode,CKEDITOR.POSITION_BEFORE_END);
}var iterator=range.createIterator(),block;
iterator.forceBrBreak=(this.state==CKEDITOR.TRISTATE_OFF);
while((block=iterator.getNextParagraph())){if(block.getCustomData("list_block")){continue;
}else{CKEDITOR.dom.element.setMarker(database,block,"list_block",1);
}var path=editor.elementPath(block),pathElements=path.elements,pathElementsCount=pathElements.length,listNode=null,processedFlag=0,blockLimit=path.blockLimit,element;
for(var i=pathElementsCount-1;
i>=0&&(element=pathElements[i]);
i--){if(listNodeNames[element.getName()]&&blockLimit.contains(element)){blockLimit.removeCustomData("list_group_object_"+index);
var groupObj=element.getCustomData("list_group_object");
if(groupObj){groupObj.contents.push(block);
}else{groupObj={root:element,contents:[block]};
listGroups.push(groupObj);
CKEDITOR.dom.element.setMarker(database,element,"list_group_object",groupObj);
}processedFlag=1;
break;
}}if(processedFlag){continue;
}var root=blockLimit;
if(root.getCustomData("list_group_object_"+index)){root.getCustomData("list_group_object_"+index).contents.push(block);
}else{groupObj={root:root,contents:[block]};
CKEDITOR.dom.element.setMarker(database,root,"list_group_object_"+index,groupObj);
listGroups.push(groupObj);
}}}var listsCreated=[];
while(listGroups.length>0){groupObj=listGroups.shift();
if(this.state==CKEDITOR.TRISTATE_OFF){if(listNodeNames[groupObj.root.getName()]){changeListType.call(this,editor,groupObj,database,listsCreated);
}else{createList.call(this,editor,groupObj,listsCreated);
}}else{if(this.state==CKEDITOR.TRISTATE_ON&&listNodeNames[groupObj.root.getName()]){removeList.call(this,editor,groupObj,database);
}}}for(i=0;
i<listsCreated.length;
i++){mergeListSiblings(listsCreated[i]);
}CKEDITOR.dom.element.clearAllMarkers(database);
selection.selectBookmarks(bookmarks);
editor.focus();
},refresh:function(editor,path){var list=path.contains(listNodeNames,1),limit=path.blockLimit||path.root;
if(list&&limit.contains(list)){this.setState(list.is(this.type)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF);
}else{this.setState(CKEDITOR.TRISTATE_OFF);
}}};
var dtd=CKEDITOR.dtd;
var tailNbspRegex=/[\t\r\n ]*(?:&nbsp;|\xa0)$/;
function mergeListSiblings(listNode){var mergeSibling;
(mergeSibling=function(rtl){var sibling=listNode[rtl?"getPrevious":"getNext"](nonEmpty);
if(sibling&&sibling.type==CKEDITOR.NODE_ELEMENT&&sibling.is(listNode.getName())){mergeChildren(listNode,sibling,null,!rtl);
listNode.remove();
listNode=sibling;
}})();
mergeSibling(1);
}function indexOfFirstChildElement(element,tagNameList){var child,children=element.children,length=children.length;
for(var i=0;
i<length;
i++){child=children[i];
if(child.name&&(child.name in tagNameList)){return i;
}}return length;
}function isTextBlock(node){return node.type==CKEDITOR.NODE_ELEMENT&&(node.getName() in CKEDITOR.dtd.$block||node.getName() in CKEDITOR.dtd.$listItem)&&CKEDITOR.dtd[node.getName()]["#"];
}function joinNextLineToCursor(editor,cursor,nextCursor){editor.fire("saveSnapshot");
nextCursor.enlarge(CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS);
var frag=nextCursor.extractContents();
cursor.trim(false,true);
var bm=cursor.createBookmark();
var currentPath=new CKEDITOR.dom.elementPath(cursor.startContainer),pathBlock=currentPath.block,currentBlock=currentPath.lastElement.getAscendant("li",1)||pathBlock,nextPath=new CKEDITOR.dom.elementPath(nextCursor.startContainer),nextLi=nextPath.contains(CKEDITOR.dtd.$listItem),nextList=nextPath.contains(CKEDITOR.dtd.$list),last;
if(pathBlock){var bogus=pathBlock.getBogus();
bogus&&bogus.remove();
}else{if(nextList){last=nextList.getPrevious(nonEmpty);
if(last&&blockBogus(last)){last.remove();
}}}last=frag.getLast();
if(last&&last.type==CKEDITOR.NODE_ELEMENT&&last.is("br")){last.remove();
}var nextNode=cursor.startContainer.getChild(cursor.startOffset);
if(nextNode){frag.insertBefore(nextNode);
}else{cursor.startContainer.append(frag);
}if(nextLi){var sublist=getSubList(nextLi);
if(sublist){if(currentBlock.contains(nextLi)){mergeChildren(sublist,nextLi.getParent(),nextLi);
sublist.remove();
}else{currentBlock.append(sublist);
}}}var nextBlock,parent;
while(nextCursor.checkStartOfBlock()&&nextCursor.checkEndOfBlock()){nextPath=nextCursor.startPath();
nextBlock=nextPath.block;
if(nextBlock.is("li")){parent=nextBlock.getParent();
if(nextBlock.equals(parent.getLast(nonEmpty))&&nextBlock.equals(parent.getFirst(nonEmpty))){nextBlock=parent;
}}nextCursor.moveToPosition(nextBlock,CKEDITOR.POSITION_BEFORE_START);
nextBlock.remove();
}var walkerRng=nextCursor.clone(),editable=editor.editable();
walkerRng.setEndAt(editable,CKEDITOR.POSITION_BEFORE_END);
var walker=new CKEDITOR.dom.walker(walkerRng);
walker.evaluator=function(node){return nonEmpty(node)&&!blockBogus(node);
};
var next=walker.next();
if(next&&next.type==CKEDITOR.NODE_ELEMENT&&next.getName() in CKEDITOR.dtd.$list){mergeListSiblings(next);
}cursor.moveToBookmark(bm);
cursor.select();
editor.fire("saveSnapshot");
}function getSubList(li){var last=li.getLast(nonEmpty);
return last&&last.type==CKEDITOR.NODE_ELEMENT&&last.getName() in listNodeNames?last:null;
}CKEDITOR.plugins.add("list",{lang:"af,ar,bg,bn,bs,ca,cs,cy,da,de,el,en-au,en-ca,en-gb,en,eo,es,et,eu,fa,fi,fo,fr-ca,fr,gl,gu,he,hi,hr,hu,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,pl,pt-br,pt,ro,ru,sk,sl,sr-latn,sr,sv,th,tr,ug,uk,vi,zh-cn,zh",icons:"bulletedlist,bulletedlist-rtl,numberedlist,numberedlist-rtl",requires:"indent",init:function(editor){if(editor.blockless){return;
}editor.addCommand("numberedlist",new listCommand("numberedlist","ol"));
editor.addCommand("bulletedlist",new listCommand("bulletedlist","ul"));
if(editor.ui.addButton){editor.ui.addButton("NumberedList",{label:editor.lang.list.numberedlist,command:"numberedlist",directional:true,toolbar:"list,10"});
editor.ui.addButton("BulletedList",{label:editor.lang.list.bulletedlist,command:"bulletedlist",directional:true,toolbar:"list,20"});
}editor.on("key",function(evt){var key=evt.data.keyCode;
if(editor.mode=="wysiwyg"&&key in {8:1,46:1}){var sel=editor.getSelection(),range=sel.getRanges()[0];
if(!range){return;
}var path=range.startPath();
if(!range.collapsed){return;
}path=new CKEDITOR.dom.elementPath(range.startContainer);
var isBackspace=key==8;
var editable=editor.editable();
var walker=new CKEDITOR.dom.walker(range.clone());
walker.evaluator=function(node){return nonEmpty(node)&&!blockBogus(node);
};
walker.guard=function(node,isOut){return !(isOut&&node.type==CKEDITOR.NODE_ELEMENT&&node.is("table"));
};
var cursor=range.clone();
if(isBackspace){var previous,joinWith;
if((previous=path.contains(listNodeNames))&&range.checkBoundaryOfElement(previous,CKEDITOR.START)&&(previous=previous.getParent())&&previous.is("li")&&(previous=getSubList(previous))){joinWith=previous;
previous=previous.getPrevious(nonEmpty);
cursor.moveToPosition(previous&&blockBogus(previous)?previous:joinWith,CKEDITOR.POSITION_BEFORE_START);
}else{walker.range.setStartAt(editable,CKEDITOR.POSITION_AFTER_START);
walker.range.setEnd(range.startContainer,range.startOffset);
previous=walker.previous();
if(previous&&previous.type==CKEDITOR.NODE_ELEMENT&&(previous.getName() in listNodeNames||previous.is("li"))){if(!previous.is("li")){walker.range.selectNodeContents(previous);
walker.reset();
walker.evaluator=isTextBlock;
previous=walker.previous();
}joinWith=previous;
cursor.moveToElementEditEnd(joinWith);
}}if(joinWith){joinNextLineToCursor(editor,cursor,range);
evt.cancel();
}else{var list=path.contains(listNodeNames);
if(list&&range.checkBoundaryOfElement(list,CKEDITOR.START)){li=list.getFirst(nonEmpty);
if(range.checkBoundaryOfElement(li,CKEDITOR.START)){previous=list.getPrevious(nonEmpty);
if(getSubList(li)){if(previous){range.moveToElementEditEnd(previous);
range.select();
}evt.cancel();
}else{editor.execCommand("outdent");
evt.cancel();
}}}}}else{var next,nextLine,li=path.contains("li");
if(li){walker.range.setEndAt(editable,CKEDITOR.POSITION_BEFORE_END);
var last=li.getLast(nonEmpty);
var block=last&&isTextBlock(last)?last:li;
var isAtEnd=0;
next=walker.next();
if(next&&next.type==CKEDITOR.NODE_ELEMENT&&next.getName() in listNodeNames&&next.equals(last)){isAtEnd=1;
next=walker.next();
}else{if(range.checkBoundaryOfElement(block,CKEDITOR.END)){isAtEnd=1;
}}if(isAtEnd&&next){nextLine=range.clone();
nextLine.moveToElementEditStart(next);
joinNextLineToCursor(editor,cursor,nextLine);
evt.cancel();
}}else{walker.range.setEndAt(editable,CKEDITOR.POSITION_BEFORE_END);
next=walker.next();
if(next&&next.type==CKEDITOR.NODE_ELEMENT&&next.is(listNodeNames)){next=next.getFirst(nonEmpty);
if(path.block&&range.checkStartOfBlock()&&range.checkEndOfBlock()){path.block.remove();
range.moveToElementEditStart(next);
range.select();
evt.cancel();
}else{if(getSubList(next)){range.moveToElementEditStart(next);
range.select();
evt.cancel();
}else{nextLine=range.clone();
nextLine.moveToElementEditStart(next);
joinNextLineToCursor(editor,cursor,nextLine);
evt.cancel();
}}}}}setTimeout(function(){editor.selectionChange(1);
});
}});
}});
})();
(function(){var updateMaxHeight=function(editor,maxHeight){if(maxHeight){var contents=editor.ui.space("contents");
var editorContainer=editor.container;
var newMaxHeight=maxHeight;
if(editorContainer.$&&contents.$){var paddingHeight=$(editorContainer.$).outerHeight(true)-$(contents.$).outerHeight(true);
newMaxHeight=newMaxHeight-paddingHeight;
}if(newMaxHeight<0){newMaxHeight=0;
}contents.setStyles({"max-height":newMaxHeight+"px","overflow-y":"auto"});
}};
CKEDITOR.plugins.add("cerngrow",{init:function(editor){editor.on("instanceReady",function(){var editable=editor.editable();
var min=editor.config.cernGrow_minHeight;
var max=editor.config.cernGrow_maxHeight;
if(editable.isInline()){var contentsElement=editor.ui.space("contents");
contentsElement.setStyle("height","auto");
if(min){contentsElement.setStyle("min-height",min+"px");
}updateMaxHeight(editor,max);
editor.on("updateEditorMaxHeight",function(event){var editor=event.editor;
var maxHeight=(event.data&&event.data.maxHeight)||0;
if(editor&&maxHeight){editor.config.cernGrow_maxHeight=maxHeight;
updateMaxHeight(editor,maxHeight);
}});
}});
}});
})();
(function(){var pluginName="autosave";
var AUTOSAVE_IDLE_THRESHOLD=30*1000;
var getData=function(editorInstance){var contentData=null,placeholdertext=null,container=editorInstance.container.$,body=$(container).find(".cke_wysiwyg_div");
if(editorInstance.removePlaceHolderText){editorInstance.removePlaceHolderText();
}if(editorInstance.config.emitValidXhtml){contentData=editorInstance.getXhtml();
}else{contentData=editorInstance.getData();
}if(editorInstance.applyPlaceholderText){editorInstance.applyPlaceholderText();
}return contentData;
};
CKEDITOR.plugins.add(pluginName,{lang:["en","en_gb","de","fr","es"],init:function(editor){var savefunction=null;
var preSaveFunction=null;
var setDirtyFunction=null;
var resetDirtyFunction=null;
var canSaveFunction=function(){return true;
};
var saveButton=null;
var dirtyEventHandler=function(e){if(saveButton===null){return;
}if(editor.isEditorDirty()){if(saveButton.attr("disabled")!==undefined&&canSaveFunction()){saveButton.removeAttr("disabled");
if(setDirtyFunction){setDirtyFunction();
}}}else{if(saveButton.attr("disabled")===undefined){saveButton.attr("disabled","disabled");
if(resetDirtyFunction){resetDirtyFunction();
}}}};
if(editor.config.canSaveFunction){canSaveFunction=editor.config.canSaveFunction;
}if(editor.config.autosaveFunction){savefunction=editor.config.autosaveFunction;
}if(editor.config.setDirtyFunction){setDirtyFunction=editor.config.setDirtyFunction;
}if(editor.config.resetDirtyFunction){resetDirtyFunction=editor.config.resetDirtyFunction;
}preSaveFunction=editor.config.preSaveFunction||function(){};
editor.on("instanceReady",function(e){var editorInstance=e.editor,container=e.editor.container.$;
var lastActivityTime=0;
var timeoutId=0;
var pollingTimeout=null;
var editableContent=editorInstance.editable().$;
var POLL_INTERVAL=3000;
var placeHolderText=editorInstance.config.placeholderText;
function filterPlaceholder(ckeditorContent){return(ckeditorContent==='<span id="placeHolderText">'+placeHolderText+"</span>")?"<p></p>":ckeditorContent;
}var dataSinceLastActivity=filterPlaceholder(editableContent.innerHTML);
var activityHandler=function(e){if(lastActivityTime===0){timeoutId=window.setTimeout(autoSaveTimer,AUTOSAVE_IDLE_THRESHOLD*0.75);
}lastActivityTime=(new Date()).getTime();
};
var autoSaveTimer=function(e){if(lastActivityTime===0||!editorInstance.document){return;
}var hasSelectedText=false;
var isWithinEditor=false;
var isSafe=false;
try{var saveButtonEnabled=(saveButton.attr("disabled")===undefined);
if(CKEDITOR.env.ie){var currentDocument=editorInstance.document.$;
var currentSelection=currentDocument.selection.createRange();
var editingArea=editorInstance.plugins.divarea?editorInstance.ui.space("contents").$:editorInstance.document.$.body;
var editingAreaRange=null;
if(currentSelection!==null){editingAreaRange=currentDocument.body.createTextRange();
editingAreaRange.moveToElementText(editingArea);
isWithinEditor=editingAreaRange.inRange(currentSelection);
hasSelectedText=currentSelection.text!==null&&currentSelection.text!=="";
}isSafe=canSaveFunction()&&saveButtonEnabled&&!(!currentDocument.hasFocus()&&hasSelectedText&&isWithinEditor);
}else{isSafe=canSaveFunction();
}}catch(er){MP_Util.LogWarn("Assuming that it is not safe to auto save: "+er.message);
}if(isSafe&&(new Date()).getTime()-lastActivityTime>=AUTOSAVE_IDLE_THRESHOLD){lastActivityTime=0;
if(editorInstance.checkDirty()){editorInstance.save();
}}else{timeoutId=window.setTimeout(autoSaveTimer,1000);
}};
editorInstance.getAutosaveData=function(){return getData(editorInstance);
};
editorInstance.save=function(navCallBack){var contentData="";
preSaveFunction();
contentData=getData(editorInstance);
savefunction(contentData,function(callbackStatus){var currentContent="";
saveButton=$("#"+container.id+" button.autosave.save");
if(callbackStatus=="S"){currentContent=getData(editorInstance);
if(currentContent===contentData){saveButton.attr("disabled","disabled");
e.editor.resetDirty();
e.editor.saveEditorSnapshot();
if(resetDirtyFunction){resetDirtyFunction();
}}if(navCallBack){navCallBack("S");
}}else{if(navCallBack){navCallBack("F");
}}});
};
var editorTextArea=$(container).find(".cke_wysiwyg_div");
$(container).find(".cke_inner").append('<button class="autosave save" type="button" disabled="disabled" value="Save">'+(editor.lang.autosave.autosave.save_button)+"</button>");
saveButton=$("#"+container.id+" button.autosave.save");
$(saveButton).after('<div class="last-saved-text">&nbsp;</div>');
saveButton.click(function(){editorInstance.save();
});
editorTextArea.keyup(function(){window.setTimeout(dirtyEventHandler,0);
clearTimeout(pollingTimeout);
pollingTimeout=setTimeout(poll,POLL_INTERVAL);
});
editorTextArea.keyup(activityHandler);
editorInstance.on("spellCheckComplete",dirtyEventHandler);
editorInstance.on("saveSnapshot",activityHandler);
editorInstance.on("afterCommandExec",activityHandler);
editorInstance.on("destroy",function(){window.clearTimeout(timeoutId);
clearTimeout(pollingTimeout);
});
function checkActivity(){var ckeditorContent=filterPlaceholder(editableContent.innerHTML);
if(ckeditorContent.length!==dataSinceLastActivity.length||ckeditorContent!==dataSinceLastActivity){activityHandler();
dataSinceLastActivity=ckeditorContent;
}}function poll(){checkActivity();
dirtyEventHandler();
pollingTimeout=setTimeout(poll,POLL_INTERVAL);
}editorInstance.on("focus",function(){pollingTimeout=setTimeout(poll,POLL_INTERVAL);
});
editorInstance.on("blur",function(){checkActivity();
dirtyEventHandler();
clearTimeout(pollingTimeout);
});
});
editor.on("saveSnapshot",dirtyEventHandler);
editor.on("afterCommandExec",dirtyEventHandler);
}});
})();
function AutoTextPluginHelper(){var m_arrAbbreviationList=null;
var m_arrDelimiters=["\r","\n","\t"," "];
var m_nItemPosition=-1;
var m_nMaxWordLength=0;
var m_nScrollbarWidth=10;
var m_oDropMenu=null;
var m_sElementId=null;
var m_colorTextDefault=null;
var m_colorTextHighlighted=null;
var m_colorBackgroundDefault=null;
var m_colorBackgroundHighlighted=null;
var m_sFontFace="";
var m_nMinimumMenuSize=5;
var m_nMenuElementHeight=20;
var m_nScrollOffset=15;
var m_bIsPluginEnabled=false;
var m_fZoomRatio=null;
function addWord(oAutoTextHelper,sWord){var oWord=document.createElement("div");
oWord.style.cursor="default";
oWord.appendChild(document.createTextNode(sWord));
oWord.onclick=function(){oAutoTextHelper.onPopupClick(this);
};
oWord.ondblclick=function(){oAutoTextHelper.onPopupDblClick(this);
};
oWord.unselectable="on";
oWord.onselectstart=function(){return false;
};
m_oDropMenu.appendChild(oWord);
m_oDropMenu.style.fontFamily=m_sFontFace;
return oWord;
}function clearDropMenu(){while(m_oDropMenu.hasChildNodes()){m_oDropMenu.removeChild(m_oDropMenu.firstChild);
}m_oDropMenu.style.height="auto";
m_oDropMenu.style.width="auto";
}function getAutoTextWords(oAutoTextHelper){var rangeAbbreviation=oAutoTextHelper.getAbbreviationRange();
if(!rangeAbbreviation){return false;
}var sText=rangeAbbreviation.text;
if(DDCOMMON.isEmpty(sText)){return false;
}m_arrAbbreviationList=CKEDITOR.AutoTextHelper.GetAbbreviations(sText);
if(DDCOMMON.isEmpty(m_arrAbbreviationList)){setVisible(oAutoTextHelper,"hidden");
m_nItemPosition=-1;
return false;
}m_arrAbbreviationList=eval("("+m_arrAbbreviationList+")");
return true;
}function getElementText(oElement){if(null==oElement){return"";
}return oElement.innerText.replace(/&nbsp;/g," ");
}function getLeftText(sText,nCurPos){return sText.substring(getStartingPos(sText,nCurPos),nCurPos+1);
}function getStartingPos(sText,nIdx){var nLength=sText.length;
while(nIdx>=0&&nIdx<nLength){var ch=sText.charAt(nIdx);
if(DDCOMMON.contains(m_arrDelimiters,ch)){break;
}nIdx--;
}return nIdx;
}function insertText(oAutoTextHelper,sAbbreviation){if(!oAutoTextHelper||DDCOMMON.isEmpty(sAbbreviation)){return;
}var hTimerHandle=CKEDITOR.DocUtilsHelper.StartSLATimer(g_sDYNDOC_SLA_TIMER_USR_EXECUTE_AUTOTEXT_DOCUMENT);
var editor=oAutoTextHelper.m_oEditor;
try{editor.fire("saveSnapshot");
var bSpellCheckWasEnabled=editor.isSpellCheckEnabled&&editor.isSpellCheckEnabled();
if(editor.disableSpellCheck){editor.disableSpellCheck();
}var selectedRange=editor.document.$.selection.createRange();
var sHTMLText=CKEDITOR.AutoTextHelper.ExecuteAutoText(sAbbreviation);
if(selectedRange.moveStart){selectedRange.select();
}if(window.getSelection){var rangeAbbreviation=oAutoTextHelper.getAbbreviationRange2();
if(!rangeAbbreviation){throw"could not get abbreviation range";
}}else{var rangeAbbreviation=oAutoTextHelper.getAbbreviationRange();
if(null==rangeAbbreviation||!rangeAbbreviation.parentElement().isContentEditable){throw"could not get abbreviation range";
}if(sAbbreviation.indexOf(rangeAbbreviation.text)!==0||/\s/gi.test(rangeAbbreviation.text)){throw"range is invalid";
}}if(!DDCOMMON.isEmpty(sHTMLText)){if(window.getSelection){rangeAbbreviation.deleteContents();
}else{rangeAbbreviation.text="";
}var selection=editor.getSelection(true);
var ckerange=selection.getRanges()[0];
var autoTextNode=new CKEDITOR.dom.element("div");
autoTextNode.addClass("autotext_wrapper");
autoTextNode.setHtml(sHTMLText);
DDCOMMON.removeAllPreWrap(autoTextNode.$);
ckerange.insertNode(autoTextNode);
var childCount=autoTextNode.getChildCount();
if(childCount){var lastNode=autoTextNode.getChild(childCount-1);
ckerange.setStartAt(lastNode,CKEDITOR.POSITION_BEFORE_END);
ckerange.collapse(true);
selection.selectRanges([ckerange]);
}autoTextNode.remove(true);
}editor.fire("saveSnapshot");
}catch(e){var message=e.message||e;
DocHandleError("AutoTextPluginHelper::insertText:  "+message+" (Abbreviation:  "+sAbbreviation+")","DynDocCKEditor");
}finally{if(bSpellCheckWasEnabled&&editor.enableSpellCheck){editor.enableSpellCheck(true);
}CKEDITOR.DocUtilsHelper.StopSLATimer(g_sDYNDOC_SLA_TIMER_USR_EXECUTE_AUTOTEXT_DOCUMENT,hTimerHandle);
}}function setColor(nPosition,bgcolor,fgcolor){if(null==m_oDropMenu||m_oDropMenu.children.length<=0){return;
}if(nPosition>-1&&nPosition<=m_arrAbbreviationList.length-1){m_oDropMenu.children[nPosition].style.background=bgcolor;
m_oDropMenu.children[nPosition].style.color=fgcolor;
}}function setVisible(oAutoTextHelper,sFlag){if(!m_oDropMenu){return;
}if(sFlag==="hidden"&&m_oDropMenu.style.visibility===sFlag){return;
}m_oDropMenu.attributes.editorName.value=oAutoTextHelper.m_oEditor.name;
var selection=oAutoTextHelper.m_oEditor.getSelection();
if(!selection||!selection.getStartElement()){return;
}var display="";
var rangeParent=selection.getStartElement();
if(typeof rangeParent.$!=="undefined"){display=rangeParent.$.style.display;
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9&&display!=="none"){rangeParent.$.setActive();
}}if("hidden"===sFlag){if(null!=oAutoTextHelper.m_oAutoTextTimout){clearTimeout(oAutoTextHelper.m_oAutoTextTimout);
oAutoTextHelper.m_oAutoTextTimout=null;
}m_oDropMenu.style.visibility=sFlag;
return;
}else{if("visible"===sFlag){var iEditorOffsetTop=$(oAutoTextHelper.m_oEditor.editable().$).offset().top;
var iEditorHeight=oAutoTextHelper.m_oEditor.editable().$.clientHeight;
var oEditorRange=oAutoTextHelper.m_oEditor.document.$.selection.createRange();
if(!oEditorRange.moveStart){DocHandleError("setVisible - Range is not TextRange","DynDocCKEditor","","");
return;
}oEditorRange.moveStart("character",-1);
if(isCursorInEditableElement(oEditorRange,iEditorOffsetTop,iEditorHeight)){positionListBox(oAutoTextHelper,oEditorRange);
for(var i=0;
i<m_oDropMenu.childNodes.length;
i++){setColor(i,m_colorBackgroundDefault,m_colorTextDefault);
}m_oDropMenu.style.visibility=sFlag;
}else{m_oDropMenu.style.visibility="hidden";
}}}}function getCurrentWindowHeight(){return $(window).height()*m_fZoomRatio;
}function getCurrentWindowWidth(){return $(window).width()*m_fZoomRatio;
}function scrollBarRequired(iPopupHeight,iPadding){return(iPopupHeight+2*iPadding)>(getCurrentWindowHeight());
}function cursorIsAboveTopHalfOfViewport(iCursorTop,offsetTop){return iCursorTop>(offsetTop+getCurrentWindowHeight()/2);
}function listBoxExtendsBeyondViewportWidth(iCursorLeft,iPopupWidth,iPadding,offsetLeft){return(iCursorLeft+iPopupWidth*m_fZoomRatio+2*iPadding)>(offsetLeft+getCurrentWindowWidth());
}function positionListBoxAboveCursor(iCursorTop,iPopupHeight,iPadding){m_oDropMenu.style.top=((iCursorTop-iPopupHeight-iPadding)/m_fZoomRatio)+$(window).scrollTop()+"px";
}function positionListBoxBelowCursor(iCursorTop,iPadding,iCursorHeight){m_oDropMenu.style.top=(iCursorTop+iCursorHeight+iPadding)/m_fZoomRatio+$(window).scrollTop()+"px";
}function positionListBoxToRightOfCursor(iCursorLeft,iPadding){m_oDropMenu.style.left=iCursorLeft/m_fZoomRatio+iPadding+$(window).scrollLeft()+"px";
}function positionListBoxAdjacentToRightOfViewport(offsetLeft,iPopupWidth,iPadding){m_oDropMenu.style.left=offsetLeft-iPopupWidth-2*iPadding+getCurrentWindowWidth()/m_fZoomRatio+"px";
}function createListBoxScrollBar(iPadding){var bottomPaddingMultiplier=5;
var adjustedPadding=(iPadding*bottomPaddingMultiplier)*m_fZoomRatio;
var currWindowHeight=getCurrentWindowHeight();
$(m_oDropMenu).css({height:currWindowHeight/m_fZoomRatio-adjustedPadding+"px",width:m_nMaxWordLength+(2*iPadding+m_nScrollbarWidth)*m_fZoomRatio+"px",top:iPadding+($(window).scrollTop()*m_fZoomRatio)+"px","overflow-y":"scroll"});
}function placeListBoxNearTopOfViewport(iPadding){m_oDropMenu.style.top=$(window).scrollTop()+(iPadding*m_fZoomRatio)+"px";
}function placeListBoxNearBottomOfViewport(iViewportHeight,iPopupHeight,iPadding){m_oDropMenu.style.top=iViewportHeight-iPopupHeight-iPadding+"px";
}function spaceListBoxFromCursor(){var buffer=10;
m_oDropMenu.style.left=parseInt(m_oDropMenu.style.left,10)+buffer+$(window).scrollLeft()+"px";
}function isCursorInEditableElement(oEditorRange,editorOffsetTop,editorHeight){m_fZoomRatio=DDCOMMON.getZoomRatio();
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){var clientRect=oEditorRange.getBoundingClientRect();
var cursorMiddle=oEditorRange.offsetTop+((clientRect.bottom-clientRect.top)/2);
}else{var cursorMiddle=oEditorRange.offsetTop+oEditorRange.getBoundingClientRect().height/2;
}var viewableWindowHeight=getCurrentWindowHeight();
var editorOffsetTopWithScroll=(editorOffsetTop-$(window).scrollTop())*m_fZoomRatio;
var editorOffsetBottomWithScroll=editorOffsetTopWithScroll+editorHeight*m_fZoomRatio;
var minBottom=viewableWindowHeight<editorOffsetBottomWithScroll?viewableWindowHeight:editorOffsetBottomWithScroll;
return(cursorMiddle>editorOffsetTopWithScroll&&cursorMiddle<minBottom);
}function listBelowViewableEditor(popupBottom){return popupBottom>(getCurrentWindowHeight());
}function listAboveViewableEditor(cursorTop){return cursorTop<0;
}function isViewportScrollable(){return $("body").height()>$(window).height();
}function positionScrollableListBox(iCursorLeft){var transform=iCursorLeft/m_fZoomRatio-parseInt(m_oDropMenu.style.width,10)-20;
var scrollLeft=$(window).scrollLeft()*+m_fZoomRatio;
if(scrollLeft){if(transform<scrollLeft){m_oDropMenu.style.left=scrollLeft;
}}else{if(transform<0){m_oDropMenu.style.left="0px";
}else{m_oDropMenu.style.left=transform+"px";
}}}function positionListBox(oAutoTextHelper,oEditorRange){var iCursorTop=oEditorRange.offsetTop;
var iCursorLeft=oEditorRange.offsetLeft+10;
var iPadding=2;
var iPopupHeight=$(m_oDropMenu).outerHeight();
var iPopupWidth=$(m_oDropMenu).outerWidth();
var iframe=oAutoTextHelper.m_oEditor.getIframeElement&&oAutoTextHelper.m_oEditor.getIframeElement();
var offsetLeft=0;
var offsetTop=0;
if(iframe){var iframeOffset=$(iframe).offset();
offsetLeft=iframeOffset.left;
offsetTop=iframeOffset.top;
iCursorLeft+=iframeOffset.left;
iCursorTop+=iframeOffset.top;
}m_oDropMenu.style.height="auto";
m_oDropMenu.style.overflowY="hidden";
m_oDropMenu.style.overflowX="hidden";
var selection=oAutoTextHelper.m_oEditor.getSelection();
var iBoundingHeight=getBoundingHeight(selection)*m_fZoomRatio;
iPopupHeight*=m_fZoomRatio;
var bPositionAbove=cursorIsAboveTopHalfOfViewport(iCursorTop,offsetTop);
if(bPositionAbove){positionListBoxAboveCursor(iCursorTop,iPopupHeight,iPadding);
}else{positionListBoxBelowCursor(iCursorTop,iPadding,iBoundingHeight);
}var bPositionRight=!listBoxExtendsBeyondViewportWidth(iCursorLeft,iPopupWidth,iPadding,offsetLeft);
if(bPositionRight){positionListBoxToRightOfCursor(iCursorLeft,iPadding);
}else{positionListBoxAdjacentToRightOfViewport(offsetLeft,iPopupWidth,iPadding);
}if(scrollBarRequired(iPopupHeight,iPadding)){createListBoxScrollBar(iPadding);
placeListBoxNearTopOfViewport(iPadding);
if(bPositionRight){spaceListBoxFromCursor();
}else{positionScrollableListBox(iCursorLeft);
}}else{if(isViewportScrollable()){var iScrollPopupTop=iCursorTop-iPopupHeight-iPadding;
var iScrollPopupBottom=iCursorTop+iPopupHeight+iPadding+iBoundingHeight;
if(((bPositionAbove&&listAboveViewableEditor(iScrollPopupTop))||(!bPositionAbove&&listBelowViewableEditor(iScrollPopupBottom)))){if(!bPositionRight){var iLeftBuffer=getCurrentWindowWidth()-iCursorLeft-10;
m_oDropMenu.style.left=parseInt(m_oDropMenu.style.left,10)-iLeftBuffer+"px";
}placeListBoxNearTopOfViewport(iPadding);
spaceListBoxFromCursor();
}}else{var iNonScrollPopupTop=parseInt(m_oDropMenu.style.top,10)-offsetTop;
var iNonScrollPopupBottom=iNonScrollPopupTop+iPopupHeight;
if(bPositionAbove&&listAboveViewableEditor(iNonScrollPopupTop)){placeListBoxNearTopOfViewport(iPadding);
}else{if(!bPositionAbove&&listBelowViewableEditor(iNonScrollPopupBottom)){placeListBoxNearBottomOfViewport(getCurrentWindowHeight(),iPopupHeight,iPadding);
}}}}}function findStringWidth(string){var oDummy=$("<div>").text(string).css({position:"absolute","float":"left",border:"1px solid",whiteSpace:"nowrap",visibility:"hidden",padding:"2px 2px 2px 2px",fontSize:"10pt",fontFamily:m_sFontFace}).appendTo($("body"));
var width=oDummy.outerWidth();
oDummy.remove();
return width;
}function getBoundingHeight(selection){if(selection.getRanges().length>0){var currFont=selection.getStartElement().getComputedStyle("font-family");
var currFontSize=selection.getStartElement().getComputedStyle("font-size");
var currLineHeight=selection.getStartElement().getComputedStyle("line-height");
var dummyElement=$("<div>").text("M").css({visibility:"hidden","font-size":currFontSize,"font-family":currFont,"line-height":currLineHeight,position:"absolute",top:0,left:0}).appendTo($("body"));
var dummyElementClientHeight=parseInt(dummyElement[0].clientHeight,10);
dummyElement.remove();
var paddingBottom=parseInt(selection.getStartElement().getComputedStyle("padding-bottom"),10);
var paddingTop=parseInt(selection.getStartElement().getComputedStyle("padding-top"),10);
return dummyElementClientHeight-paddingBottom-paddingTop;
}else{return 0;
}}return{m_oEditor:null,m_oAutoTextTimout:null,syncPosition:function(){if(this.isPopupVisible()){this.evaluateAt();
}},evaluateAt:function(){if(m_oDropMenu.attributes.editorName.value!=this.m_oEditor.name){setVisible(this,"hidden");
m_nItemPosition=-1;
}var nPrevAbbreviations=0;
if(true==this.isPopupVisible()){nPrevAbbreviations=m_arrAbbreviationList.length;
}if(!getAutoTextWords(this)){setVisible(this,"hidden");
m_nItemPosition=-1;
return;
}var bTruncate=m_arrAbbreviationList.length>80;
if(bTruncate){m_arrAbbreviationList.length=80;
}var nNewAbbreviations=m_arrAbbreviationList.length;
m_nMaxWordLength=0;
var rangeAbbreviationRange=this.getAbbreviationRange();
if(rangeAbbreviationRange&&rangeAbbreviationRange.text.length>0){if(nNewAbbreviations>0){clearDropMenu();
for(var i=0;
i<nNewAbbreviations;
++i){var element=addWord(this,m_arrAbbreviationList[i]);
m_oDropMenu.appendChild(element);
var width=findStringWidth(m_arrAbbreviationList[i]);
if(width>m_nMaxWordLength){m_nMaxWordLength=width;
}}if(bTruncate){var MORE=this.m_oEditor.lang.cernautotext.ABBREVIATION_LIMIT_TEXT;
m_nMaxWordLength=Math.max(m_nMaxWordLength,findStringWidth(MORE));
$("<div>").text(MORE).css("font-style","italic").appendTo(m_oDropMenu);
}setVisible(this,"visible");
if(nPrevAbbreviations!=nNewAbbreviations||-1==m_nItemPosition){m_nItemPosition=0;
}setColor(m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
}else{setVisible(this,"hidden");
m_nItemPosition=-1;
}}else{setVisible(this,"hidden");
m_nItemPosition=-1;
}},evaluateAt2:function(){if(m_oDropMenu.attributes.editorName.value!=this.m_oEditor.name){setVisible(this,"hidden");
m_nItemPosition=-1;
}var nPrevAbbreviations=0;
if(true==this.isPopupVisible()){nPrevAbbreviations=m_arrAbbreviationList.length;
}var rangeAbbrevition=this.getAbbreviationRange2();
if(rangeAbbrevition){var sAbb=CKEDITOR.AutoTextHelper.GetAbbreviations(rangeAbbrevition.toString());
if(sAbb){var arrAbb=JSON.parse(sAbb);
m_arrAbbreviationList=arrAbb;
m_nMaxWordLength=0;
if(arrAbb.length){clearDropMenu();
var bTruncate=arrAbb.length>80;
if(bTruncate){arrAbb.length=80;
}var $container=$("<div>");
arrAbb.forEach(function(sAbb){var element=addWord(this,sAbb);
$container.append(element);
var width=findStringWidth(sAbb);
m_nMaxWordLength=Math.max(m_nMaxWordLength,width);
},this);
if(bTruncate){var MORE=this.m_oEditor.lang.cernautotext.ABBREVIATION_LIMIT_TEXT;
m_nMaxWordLength=Math.max(m_nMaxWordLength,findStringWidth(MORE));
$("<div>").text(MORE).css("font-style","italic").appendTo($container);
}$container.appendTo(m_oDropMenu);
$container[0].removeNode(false);
if(nPrevAbbreviations!=arrAbb.length||-1==m_nItemPosition){m_nItemPosition=0;
}}}}if(arrAbb&&arrAbb.length){setVisible(this,"visible");
setColor(m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
}else{setVisible(this,"hidden");
m_nItemPosition=-1;
}},saveFocusedElement:function(element){m_sElementId=element.id;
},getAbbreviationRange:function(){if(!m_sElementId){return null;
}var oElement=this.m_oEditor.document.$.getElementById(m_sElementId);
if(!oElement){return null;
}var oRange=this.m_oEditor.document.$.selection.createRange();
if(!oRange||typeof oRange.text==="undefined"||oRange.text.length>0){return null;
}var sElementText=getElementText(oElement);
var nCursorPosition=DDCOMMON.getCursorPosition(oElement,oRange);
var sTextLeft=CKEDITOR.tools.trim(getLeftText(sElementText,nCursorPosition));
for(var i=sTextLeft.length;
i>=1;
i--){var ch=sTextLeft.charAt(i);
if(DDCOMMON.contains(m_arrDelimiters,ch)){break;
}oRange.moveStart("character",-1);
}return oRange;
},getAbbreviationRange2:function(){var sel=getSelection();
if(sel.rangeCount===0){return null;
}var range=sel.getRangeAt(0);
var rangeAbbr=range.cloneRange();
var node=range.startContainer;
if(node.nodeType===Node.ELEMENT_NODE){if(range.startOffset===0){node=DDCOMMON.getPreviousInlineTextnode(node);
}else{node=range.startContainer.childNodes[range.startOffset-1];
}if(node){if(node.nodeType===Node.ELEMENT_NODE){node=DDCOMMON.getLastTextNode(node);
}else{if(node.nodeType===Node.TEXT_NODE){window.nothing;
}else{node=null;
}}}}if(!node){return null;
}var text="";
for(;
node&&DDCOMMON.isNodeEditable(node);
node=DDCOMMON.getPreviousInlineTextnode(node)){var t=node===range.startContainer?node.nodeValue.substring(0,range.startOffset):node.nodeValue;
var pos=DDCOMMON.searchLast(t,/\s/);
if(pos>=0){text=t.substring(pos+1)+text;
rangeAbbr.setStart(node,pos+1);
break;
}else{text=t+text;
rangeAbbr.setStartBefore(node);
}}return rangeAbbr;
},hideDropMenu:function(){if(this.isPluginEnabled()){setVisible(this,"hidden");
}},initAutoText:function(){m_bIsPluginEnabled=(1==CKEDITOR.AutoTextHelper.IsAutoTextEnabled());
if(!m_bIsPluginEnabled){return;
}m_colorTextDefault=DDCOLOR.getFontColorDefault();
m_colorTextHighlighted=DDCOLOR.getFontColorSelected();
m_colorBackgroundDefault=DDCOLOR.getDefaultBackgroundColor();
m_colorBackgroundHighlighted=DDCOLOR.getTextHighlightColor();
m_sFontFace=DDCOLOR.getDefaultFont();
m_oDropMenu=document.getElementById("dropmenudiv");
if(null==m_oDropMenu){m_oDropMenu=$("<div class='dropmenudiv' id='dropmenudiv' editorName=''>")[0];
document.body.appendChild(m_oDropMenu);
}m_oDropMenu.style.hideFocus=true;
m_oDropMenu.style.fontFamily=m_sFontFace;
m_oDropMenu.style.fontSize="13px";
m_oDropMenu.style.paddingLeft="2px";
m_oDropMenu.style.paddingTop="2px";
m_oDropMenu.style.paddingRight="2px";
m_oDropMenu.style.paddingBottom="2px";
m_oDropMenu.style.border="1px solid "+DDCOLOR.getDropdownBorder();
m_oDropMenu.style.width="auto";
m_oDropMenu.style.background=m_colorBackgroundDefault;
m_oDropMenu.style.position="absolute";
m_oDropMenu.style.zIndex=9999;
$(m_oDropMenu).mouseover(function(event){$(m_oDropMenu).data("isover",true);
}).mouseout(function(event){$(m_oDropMenu).data("isover",false);
});
setVisible(this,"hidden");
},isPopupVisible:function(){return("visible"===m_oDropMenu.style.visibility)?true:false;
},isMouseOverPopup:function(){return m_oDropMenu&&this.isPopupVisible()&&$(m_oDropMenu).data("isover");
},isPluginEnabled:function(){return m_bIsPluginEnabled;
},keyHandler:function(keyPress){if("visible"===m_oDropMenu.style.visibility){if(g_iDD_KEYCODE_KEYDOWN==keyPress){if(m_nItemPosition==m_arrAbbreviationList.length-1){setColor(m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
return;
}if(m_arrAbbreviationList.length>0&&m_nItemPosition<=m_arrAbbreviationList.length-1){if(m_nItemPosition>=0){setColor(m_nItemPosition,m_colorBackgroundDefault,m_colorTextDefault);
}m_nItemPosition++;
if(m_nItemPosition<=m_arrAbbreviationList.length-1){setColor(m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
}var nVisibleElementCnt=Math.round(m_oDropMenu.clientHeight/m_nMenuElementHeight);
if(m_nItemPosition>=nVisibleElementCnt-1){m_oDropMenu.scrollTop+=m_nScrollOffset;
}}}else{if(g_iDD_KEYCODE_KEYUP==keyPress){if(0==m_nItemPosition){setColor(m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
return;
}if(m_arrAbbreviationList.length>0&&m_nItemPosition>=0){if(m_nItemPosition>0){setColor(m_nItemPosition,m_colorBackgroundDefault,m_colorTextDefault);
setColor(--m_nItemPosition,m_colorBackgroundHighlighted,m_colorTextHighlighted);
}else{setColor(m_nItemPosition,m_colorBackgroundDefault,m_colorTextDefault);
m_nItemPosition--;
}var nVisibleElementCnt=Math.round(m_oDropMenu.clientHeight/m_nMenuElementHeight);
if(m_nItemPosition<=nVisibleElementCnt-1||nVisibleElementCnt<=m_nMinimumMenuSize){m_oDropMenu.scrollTop-=m_nScrollOffset;
}}}else{if(g_iDD_KEYCODE_ENTER==keyPress){if(m_nItemPosition<=-1||m_nItemPosition>=m_arrAbbreviationList.length){setVisible(this,"hidden");
return;
}if(typeof this.firstChild!="object"||this.firstChild!=m_oDropMenu.childNodes[m_nItemPosition].firstChild){this.firstChild=m_oDropMenu.childNodes[m_nItemPosition].firstChild;
}if(null!=this.firstChild){insertText(this,this.firstChild.nodeValue);
}m_nItemPosition=-1;
setVisible(this,"hidden");
}else{if(g_iDD_KEYCODE_SPACE==keyPress){setVisible(this,"hidden");
}}}}}},onClick:function(oEvent){this.saveFocusedElement(oEvent.data.$.srcElement);
this.evaluateAt();
this.keyHandler(oEvent.data.$.keyCode);
},onPopupDblClick:function(oElementClicked){this.m_oEditor.focus();
if(window.getSelection){this.reselectEditor();
}if(oElementClicked.firstChild){insertText(this,oElementClicked.firstChild.nodeValue);
this.m_oEditor.focus();
}setVisible(this,"hidden");
m_nItemPosition=-1;
},onPopupClick:function(oElementClicked){setColor(m_nItemPosition,m_colorBackgroundDefault,m_colorTextDefault);
for(var i=0;
i<m_oDropMenu.childNodes.length;
i++){if(m_oDropMenu.childNodes[i].firstChild.nodeValue==oElementClicked.firstChild.nodeValue){setColor(i,m_colorBackgroundHighlighted,m_colorTextHighlighted);
m_nItemPosition=i;
break;
}}this.m_oEditor.focus();
if(window.getSelection){this.reselectEditor();
}},reselectEditor:window.getSelection?function(){if(this.m_oEditor.getSelection().getRanges().length===0&&this.savedRange){if(typeof DynDocHelper!=="undefined"){DynDocHelper.ReportDebugMsg("onPopupDblClick - no selection, selecting saved range","DynDocCKEditor");
}var sel=getSelection();
sel.removeAllRanges();
try{sel.addRange(this.savedRange);
}catch(e){DocHandleError("onPopupDblClick - Error selecting saved range - "+(e.message||e),"DynDocCKEditor");
}}}:$.noop,showManageAutoTextDlg:function(){CKEDITOR.AutoTextHelper.ShowManageAutoTextDlg();
},selectionExists:function(){var oRange=this.m_oEditor.document.$.selection.createRange();
if(oRange&&oRange.moveStart&&oRange.text.length>0){this.hideDropMenu();
return true;
}return false;
},keyCodeHandledByPopup:function(nKeyCode){return(true==this.isPopupVisible()&&(g_iDD_KEYCODE_KEYDOWN==nKeyCode||g_iDD_KEYCODE_KEYUP==nKeyCode||g_iDD_KEYCODE_ENTER==nKeyCode))?true:false;
}};
}CKEDITOR.plugins.add("cernautotext",{lang:"en,en-au,en-gb,de,fr,es,pt-br",m_mapHelpers:[],beforeInit:function(editor){if(typeof DDCOMMON==="undefined"){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("js/dynDocCommonFunc.js"));
}if(typeof AutoTextPluginHelper==="undefined"){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("plugins/cernautotext/js/autotext.js"));
}var oHelper=new AutoTextPluginHelper();
if(window.getSelection){oHelper.evaluateAt=oHelper.evaluateAt2;
}this.m_mapHelpers[editor.name]=oHelper;
oHelper.m_oEditor=editor;
},init:function(editor){var oHelper=this.m_mapHelpers[editor.name];
var manageAutoTextCmd={canUndo:false,editorFocus:false,exec:function(editor){oHelper.showManageAutoTextDlg();
}};
oHelper.initAutoText();
editor.addCommand(DDCMD_HIDE_AUTOTEXT_MENU,{canUndo:false,editorFocus:false,exec:function(editor){return oHelper.hideDropMenu();
}});
editor.on("instanceReady",function(){if(CKEDITOR.env.ie&&CKEDITOR.env.version>=9){var updateSavedRange=function(){var sel=getSelection();
var range=sel.rangeCount&&sel.getRangeAt(0);
if(range&&DDCOMMON.isNodeEditable(range.startContainer)&&DDCOMMON.containsNode(editor.editable().$,range.startContainer)){oHelper.savedRange=range;
}};
editor.document.on("selectionchange",updateSavedRange);
editor.editable().on("keydown",CKEDITOR.tools.defer(updateSavedRange),null,null,-1);
}});
var commandName="cernautotext",command=editor.addCommand(commandName,manageAutoTextCmd);
editor.ui.add("ManageAutoText",CKEDITOR.UI_BUTTON,{label:editor.lang.cernautotext.MANAGE_AUTOTEXT,command:commandName,icon:CKEDITOR.getUrl("images/summview.gif")});
if(oHelper.isPluginEnabled()){editor.on("contentDom",function(){editor.document.getBody().on("scroll",oHelper.syncPosition,oHelper);
editor.editable().on("scroll",oHelper.syncPosition,oHelper);
var editorElement=editor.editable().$;
if(!editorElement.id){editorElement.id=CKEDITOR.DocUtilsHelper.GenerateGUID();
}editorElement=CKEDITOR.dom.element.get(editorElement);
editorElement.on("click",function(event){oHelper.onClick(event);
});
editorElement.on("mouseup",function(event){if(2==event.data.$.button){return oHelper.hideDropMenu();
}});
editorElement.on("keydown",function(event){if(oHelper.m_oAutoTextTimout){clearTimeout(oHelper.m_oAutoTextTimout);
oHelper.m_oAutoTextTimout=null;
}if(!event||!event.data||!event.data.$){return;
}var nKeyCode=event.data.$.keyCode;
if(g_iDD_KEYCODE_SPACE==nKeyCode||g_iDD_KEYCODE_TAB==nKeyCode||g_iDD_KEYCODE_ESC==nKeyCode){oHelper.hideDropMenu();
return;
}if(oHelper.keyCodeHandledByPopup(nKeyCode)){if(nKeyCode==g_iDD_KEYCODE_KEYDOWN||nKeyCode==g_iDD_KEYCODE_KEYUP){oHelper.keyHandler(nKeyCode);
}event.stop();
event.data.preventDefault(true);
}},null,null,1);
editorElement.on("keypress",function(event){var nKeyCode=event.data.$.keyCode;
if(oHelper.keyCodeHandledByPopup(nKeyCode)){event.stop();
event.data.preventDefault(true);
}},null,null,1);
editorElement.on("keyup",function(event){if(null!=oHelper.m_oAutoTextTimout){clearTimeout(oHelper.m_oAutoTextTimout);
oHelper.m_oAutoTextTimout=null;
}if(oHelper.selectionExists()){return;
}if(!event||!event.data||!event.data.$){return;
}var nKeyCode=event.data.$.keyCode;
var oSrcElem=event.data.$.srcElement;
var doKeyHandler=function(){oHelper.saveFocusedElement(oSrcElem);
oHelper.evaluateAt();
oHelper.keyHandler(nKeyCode);
};
switch(nKeyCode){case g_iDD_KEYCODE_F3:break;
case g_iDD_KEYCODE_SPACE:case g_iDD_KEYCODE_TAB:case g_iDD_KEYCODE_ESC:oHelper.hideDropMenu();
break;
case g_iDD_KEYCODE_ENTER:if(oHelper.isPopupVisible()){oHelper.keyHandler(nKeyCode);
event.stop();
event.data.preventDefault(true);
}break;
case g_iDD_KEYCODE_KEYDOWN:case g_iDD_KEYCODE_KEYUP:if(oHelper.isPopupVisible()){event.stop();
event.data.preventDefault(true);
}break;
default:if(oHelper.isPopupVisible()){doKeyHandler();
}else{oHelper.m_oAutoTextTimout=setTimeout(doKeyHandler,200);
}}},null,null,1);
});
editor.on("beforeCommandExec",function(event){if(DDCMD_SAVE==event.data.name||DDCMD_SAVECLOSE==event.data.name||DDCMD_SIGN==event.data.name||DDCMD_DQRRESULTS==event.data.name||DDCMD_INSERTFREETEXT==event.data.name||DDCMD_REMOVEELEMENT==event.data.name||DDCMD_REFRESHELEMENT==event.data.name||DDCMD_STRIKEELEMENT==event.data.name||DDCMD_NEXT_UNDERSCORE==event.data.name||DDCMD_PREV_UNDERSCORE==event.data.name){oHelper.hideDropMenu();
}});
editor.on("afterCommandExec",function(event){if(DDCMD_UNDO==event.data.name||DDCMD_REDO==event.data.name||DDCMD_PASTE==event.data.name||DDCMD_CUT==event.data.name){var curSelection=editor.getSelection();
if(!curSelection){oHelper.hideDropMenu();
return;
}var oElement=curSelection.getStartElement();
if(oElement){oHelper.saveFocusedElement(oElement.$);
oHelper.evaluateAt();
}}});
}}});
CKEDITOR.plugins.add("cerngetxhtml",{beforeInit:function(oEditor){var m_aFilters=[];
oEditor.registerXhtmlFilter=function(oFilter){m_aFilters.push(oFilter);
};
oEditor.executeXhtmlFilters=function(element){var doc=oEditor.document.$;
var detached=doc.createElement("div");
var html=element?element.innerHTML:oEditor.editable().getHtml();
detached.innerHTML=html;
for(var i=0;
i<m_aFilters.length;
i++){m_aFilters[i](detached);
}DDCOMMON.resetCaches();
return detached;
};
oEditor.getXhtml=function(){var detached=this.executeXhtmlFilters();
var sCleanedXHTML=oEditor.dataProcessor.toDataFormat(detached.innerHTML);
if(this.config.emitValidXhtml){sCleanedXHTML='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml" xmlns:dd="DynamicDocumentation">\n<head><title></title></head>\n<body>\n'+sCleanedXHTML+"\n</body></html>";
}return sCleanedXHTML;
};
var m_aDirtyFilters=[];
oEditor.registerDirtyFilter=function(callback){m_aDirtyFilters.push(callback);
};
oEditor.cleanContribution=function(contribution){var frag=contribution.ownerDocument.createDocumentFragment();
frag.appendChild(contribution.cloneNode(true));
for(var i=0;
i<m_aDirtyFilters.length;
i++){var filter=m_aDirtyFilters[i];
if(filter&&filter.apply){filter(frag);
}}return frag.firstChild;
};
oEditor.registerDirtyFilter(function(frag){var $uiDroppable=$(frag.firstChild).find(".ui-droppable");
$uiDroppable.removeAttrs(/^jQuery/);
$uiDroppable.removeClass("ui-droppable");
$(frag.firstChild).find(".ddsection").removeAttr("onremove");
});
oEditor.registerXhtmlFilter(function(detached){$(detached).find(".ddsection").removeAttr("onremove");
});
}});
(function(){function getBlockAncestor(node,ancestorLimit,includeSelf){if(node.type===CKEDITOR.NODE_TEXT){includeSelf=false;
}for(var current=includeSelf?node:node.getParent();
current&&current.type==CKEDITOR.NODE_ELEMENT&&current.$!==ancestorLimit.$;
current=current.getParent()){if(current.isBlockBoundary()){return current;
}}return null;
}function trimRangeWhitespace(range){CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
while(range.text.length&&CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.test(range.text.charAt(0))){range.moveStart("character",1);
}CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
while(range.text.length&&CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.test(range.text.charAt(range.text.length-1))){range.moveEnd("character",-1);
}}function getWordRangeAtCursor(subwordRange,ancestorLimit){var wordRange=subwordRange.duplicate();
var limitRange=wordRange.duplicate();
limitRange.moveToElementText(ancestorLimit);
while(wordRange.compareEndPoints("StartToStart",limitRange)>0){wordRange.moveStart("character",-1);
CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
if(CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.test(wordRange.text.charAt(0))){wordRange.moveStart("character",1);
break;
}}while(wordRange.compareEndPoints("EndToEnd",limitRange)<0){wordRange.moveEnd("character",1);
CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
if(CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.test(wordRange.text.charAt(wordRange.text.length-1))){wordRange.moveEnd("character",-1);
break;
}}return wordRange;
}function replaceMisspelledWord(range,text){range.text=text;
var rangeParent=range.parentElement();
var spellCheckSpan=DDCOMMON.hasClassName(rangeParent.className,g_sCLASS_SPELLCHECK)?rangeParent:$(rangeParent).closest(g_sCLASS_SPELLCHECK).get(0);
if(spellCheckSpan){spellCheckSpan.removeNode();
}return true;
}function handleEditorScroll(eventInfo){if(eventInfo.data.$.wheelDelta||eventInfo.data.$.detail){this.unlockEditorScroll();
return;
}if(this.scrollTop||this.scrollTop===0){var bToggleCssWasEnabled=true;
if(typeof DYNDOCToggleCSS!=="undefined"){bToggleCssWasEnabled=!DYNDOCToggleCSS.getDisablePlugin();
DYNDOCToggleCSS.setDisablePlugin(true);
}this.editor.editable().$.scrollTop=this.scrollTop;
if(bToggleCssWasEnabled&&typeof DYNDOCToggleCSS!=="undefined"){DYNDOCToggleCSS.setDisablePlugin(false);
}}}CKEDITOR.SpellChecker=CKEDITOR.tools.createClass({$:function(editor){this.editor=editor;
this.bEnabled=CKEDITOR.SpellChecker.bEnabled;
this.timeout=50;
this.restartSpellcheckTimer=null;
this.mapTraversals={};
this.misspelledSpanIds={};
this.bCleanupsEnabled=true;
this.currentCleanup=null;
this.aQueuedCleanups=[];
this.lastCleanup=0;
editor.on("contentDom",function(){var editable=editor.editable();
editable.on("blur",this.disableSpellCheck,this);
editable.on("focus",function(){if(!editor.undoing&&!editor.redoing){this.enableSpellCheck(true);
}},this);
editable.on("keydown",this.handleInputEvent,this);
editable.on("keyup",this.handleInputEvent,this);
editable.on("click",this.clickHandler,this);
editor.document.on("focusout",this.blurHandler,this);
if(editor.config.enterMode===CKEDITOR.ENTER_BR){var enter=editor.getCommand("enter");
enter&&enter.on("exec",this.handleEnterEvent,this);
}if(editor.config.shiftEnterMode===CKEDITOR.ENTER_BR){var shiftEnter=editor.getCommand("shiftEnter");
shiftEnter&&shiftEnter.on("exec",this.handleEnterEvent,this);
}editable.on("scroll",this.scrollHandler,this);
editor.document.getWindow().once("focus",this.enableSpellCheck,this);
},this);
editor.on("noteLoaded",this.enableSpellCheck,this);
editor.on("afterCommandExec",function(event){if(event.data.name=="cut"||event.data.name=="paste"){CKEDITOR.tools.setTimeout(this.spellCheckCurrentElement,0,this,[true]);
}},this);
editor.on("loadSnapshot",function(event){this.disableSpellCheck();
CKEDITOR.tools.setTimeout(function(){this.enableSpellCheck();
CKEDITOR.tools.setTimeout(this.spellCheckCurrentElement,0,this,[true]);
},250,this);
},this);
editor.on("paste",function(event){CKEDITOR.tools.setTimeout(this.spellCheckCurrentElement,0,this,[true]);
},this);
editor.on(DDCMD_CONTENTHTMLLOADED,function(event){var items=event.data&&event.data.items;
if(!items){return;
}for(var i=0;
i<items.length;
i++){var item=items[i];
var ckelement=CKEDITOR.dom.element.get(item);
if(!ckelement){continue;
}var ancestor=getBlockAncestor(ckelement,editor.editable(),true);
if(!ancestor){ancestor=editor.editable();
}this.startElementSpellcheck(ancestor);
}},this);
editor.registerDirtyFilter&&editor.registerDirtyFilter(function(frag){for(var id in this.misspelledSpanIds){var element=frag.getElementById?frag.getElementById(id):frag.querySelector("#"+id);
if(element){element.removeNode();
}else{delete this.misspelledSpanIds[id];
}}return;
var arrElements=$(frag.firstChild).find(".ddspellcheck");
while(arrElements&&arrElements.length>0){Array.prototype.pop.call(arrElements).removeNode();
}}.bind(this));
if(editor.contextMenu){editor.contextMenu.addListener(function(element,selection){if(!element){return;
}for(var cur=element.$;
cur&&cur!==this.editor.editable().$.parentNode;
cur=cur.parentNode){var id=$(cur).attr("id");
var traversal=this.mapTraversals[id];
if(traversal){traversal.cancel();
}}if(this.currentCleanup){for(var cur=element.$;
cur&&cur!==this.editor.editable().$.parentNode;
cur=cur.parentNode){if(cur===this.currentCleanup.element){this.interruptCleanup();
break;
}}}}.bind(this));
}editor.on("beforeDestroy",this.beforeDestroyHandler,this);
this.editor.disableSpellCheck=this.disableSpellCheck.bind(this);
this.editor.enableSpellCheck=this.enableSpellCheck.bind(this);
this.editor.isSpellCheckEnabled=function(){return this.bEnabled&&this.editor.undoing!==true&&this.editor.redoing!==true;
}.bind(this);
},proto:{lockEditorScroll:function(){this.scrollTop=this.editor.editable().$.scrollTop;
this.editor.editable().on("scroll",handleEditorScroll,this);
this.editor.editable().on("keydown",this.unlockEditorScroll,this);
},unlockEditorScroll:function(){this.editor.editable().removeListener("scroll",handleEditorScroll);
this.editor.editable().removeListener("keydown",this.unlockEditorScroll);
this.scrollTop=null;
},handleInputEvent:function(event,timeout){if(!CKEDITOR.SpellChecker.bEnabled||!this.bEnabled){return;
}if(this.restartSpellcheckTimer){return;
}if(typeof timeout==="undefined"){timeout=750;
}this.restartSpellcheckTimer=CKEDITOR.tools.setTimeout(this.spellCheckCurrentElement,timeout,this);
},clickHandler:function(event){this.handleInputEvent(event,500);
},blurHandler:function(event){if(!this.bEnabled){return;
}var element$=event.data.$.srcElement;
if(element$&&element$.isContentEditable){var element=CKEDITOR.dom.element.get(element$);
this.startElementSpellcheck(element);
}},handleEnterEvent:function(){CKEDITOR.tools.setTimeout(function(){var PROJECT_NAME=window.PROJECT_NAME||window.PROJECT||"DynDocCKEditor";
var range=this.editor.getSelection().getRanges()[0];
if(!range){return;
}var start=range.getBoundaryNodes().startNode;
if(start&&start.is&&start.is("br")){var br=start;
var $ddspellcheck=$(br.$).closest(".ddspellcheck");
if($ddspellcheck.length&&DDCOMMON.isNodeAtEnd(br.$,$ddspellcheck[0])){if(typeof DynDocHelper!=="undefined"){DynDocHelper.ReportDebugMsg("Moving <br> outside ddspellcheck",PROJECT_NAME);
}br.insertAfter(CKEDITOR.dom.element.get($ddspellcheck[0]));
range=this.editor.createRange();
range.moveToPosition(br,CKEDITOR.POSITION_AFTER_END);
range.select();
this.editor.fire("updateSnapshot");
}}},0,this);
},scrollHandler:function(event){this.lastScroll=new Date().getTime();
},beforeDestroyHandler:function(event){this.disableSpellCheck();
if(this.editor.document){this.editor.document.removeListener("focusout",this.blurHandler);
}},spellCheckCurrentElement:function(bSpellcheckWordAtCursor){this.restartSpellcheckTimer=null;
var selection=this.editor.getSelection();
if(!selection){return false;
}if(selection.getType()!==CKEDITOR.SELECTION_TEXT){return false;
}var ranges=selection.getRanges();
if(ranges.length===0){return false;
}var range=ranges[0];
if(!range){return false;
}if(!range.collapsed){return false;
}if(!DDCOMMON.isNodeEditable(range.startContainer.$)){return false;
}var element=range.startContainer;
var ancestor=getBlockAncestor(element,this.editor.editable(),true);
if(!ancestor||!ancestor.$.isContentEditable){ancestor=this.editor.editable();
}this.startElementSpellcheck(ancestor,bSpellcheckWordAtCursor);
return true;
},startElementSpellcheck:function(element,bSpellcheckWordAtCursor){if(!this.bEnabled){return;
}if(this.editor.mode!=="wysiwyg"){return;
}if(this.editor.contextMenu&&this.editor.contextMenu.isVisible()){return;
}if(typeof element==="string"){element=CKEDITOR.dom.element.get(element);
}if(!element){return;
}var selection=this.editor.getSelection();
if(!selection){return;
}var range=selection.getRanges()[0];
if(!range||!range.collapsed){return;
}var wasDirty=this.editor.checkDirty();
if(!element.getId()){element.$.id=this.createUniqueId();
this.editor.fire("updateSnapshot");
}if(!wasDirty&&this.editor.checkDirty()){this.editor.resetDirty();
}if(this.currentCleanup){this.interruptCleanup();
this.dequeueCleanup();
}var id=element.getId();
var traversal=this.mapTraversals[id];
if(traversal){traversal.cancel();
}CKEDITOR.tools.setTimeout(function(){if(!this.bEnabled){return;
}if(this.editor.mode!=="wysiwyg"){return;
}if(this.editor.contextMenu&&this.editor.contextMenu.isVisible()){return;
}if(this.isScrolling()){CKEDITOR.tools.setTimeout(this.startElementSpellcheck,400,this,[id,bSpellcheckWordAtCursor]);
return;
}this.spellCheckElement(id,bSpellcheckWordAtCursor);
try{this.checkSpans(id);
}catch(e){this.handleException(e,"check spans");
}},250,this);
},isScrolling:function(){return this.lastScroll&&new Date().getTime()-this.lastScroll<300;
},spellCheckElement:function(id,bSpellcheckWordAtCursor){var element=CKEDITOR.dom.element.get(id);
if(!element){return;
}var traversal=new DDCOMMON.AsynchronousDfs(element.$,function(node,evt){var wasDirty=this.editor.checkDirty();
if(!CKEDITOR.SpellChecker.bEnabled||!this.bEnabled){return evt.traversal.cancel();
}if(typeof node.parentNode==="unknown"||node.parentNode==null){return evt.traversal.cancel();
}if($(node).hasClass("ddspellcheck")){return evt.cancelSubtree();
}if(node.nodeType===Node.TEXT_NODE){if(node.nodeValue.length===0){return;
}if($.trim(node.nodeValue).length===0){return;
}if(!DDCOMMON.isNodeEditable(node)){return;
}if(node.previousSibling&&typeof node.previousSibling.parentNode==="unknown"||node.nextSibling&&typeof node.nextSibling.parentNode==="unknown"){DocHandleError("cernscayt - Sibling node is corrupt; skipping DOM subtree","DynDocCKEditor","","");
if(evt.traversal.direction<0&&node.parentNode.previousSibling&&typeof node.parentNode.previousSibling!=="unknown"){evt.skipTo(node.parentNode.previousSibling);
}else{if(evt.traversal.direction>0&&node.parentNode.nextSibling&&typeof node.parentNode.nextSibling!=="unknown"){evt.skipTo(node.parentNode.nextSibling);
}}return evt.cancelSubtree();
}if(this.isScrolling()){return evt.skipTo(node);
}try{var selection=this.editor.getSelection(true);
var range=selection&&selection.getRanges()[0];
if(range&&!range.collapsed){var boundaries=range.getBoundaryNodes();
var cursorNode=boundaries.startNode.$;
if(DDCOMMON.isAncestor(cursorNode,element.$)){evt.traversal.cancel();
CKEDITOR.tools.setTimeout(this.startElementSpellcheck,2000,this,[id,bSpellcheckWordAtCursor]);
return;
}}var bookmarks=null;
var maybeCreateBookmarks=range?function(node){if(bookmarks){return;
}var boundaries=range&&range.getBoundaryNodes();
var cursorNode=boundaries&&boundaries.startNode&&boundaries.startNode.$;
var wordContainers=CKEDITOR.SpellChecker.findWordPortions(node);
for(var i=0;
!bookmarks&&i<wordContainers.length;
i++){var portions=wordContainers[i].portions;
for(var j=0;
!bookmarks&&j<portions.length;
j++){var portion=portions[j];
if(cursorNode===portion.node||cursorNode===portion.node.previousSibling||cursorNode===portion.node.nextSibling){bookmarks=selection.createBookmarks(true);
}}}}:$.noop;
var bSomethingChanged=false;
maybeCreateBookmarks(node);
var bCheckPrevious=DDCOMMON.isBookmarkElement(node.previousSibling);
var bCheckNext=DDCOMMON.isBookmarkElement(node.nextSibling);
var result=this.spellCheckTextNode(node,bSpellcheckWordAtCursor);
if(result.somethingChanged){bSomethingChanged=result.somethingChanged;
}var endpoints=result.endpoints;
if(endpoints.length===2){var prev=endpoints[0]&&endpoints[0].previousSibling;
var next=endpoints[1]&&endpoints[1].nextSibling;
}if(bCheckPrevious&&prev&&prev.nodeType===Node.TEXT_NODE){maybeCreateBookmarks(prev);
result=this.spellCheckTextNode(prev);
if(result.somethingChanged){bSomethingChanged=result.somethingChanged;
}}if(bCheckNext&&next&&next.nodeType===Node.TEXT_NODE){maybeCreateBookmarks(next);
result=this.spellCheckTextNode(next);
if(result.somethingChanged){bSomethingChanged=result.somethingChanged;
}}if(bookmarks){this.lockEditorScroll();
try{selection.selectBookmarks(bookmarks);
}finally{CKEDITOR.tools.setTimeout(this.unlockEditorScroll,0,this);
}}if(bSomethingChanged){this.editor.fire("updateSnapshot");
}if(!wasDirty&&this.editor.checkDirty()){this.editor.resetDirty();
}}catch(e){this.handleException(e,"spellcheck");
}}}.bind(this),function(node){},function(node){return this.isScrolling()?400:node.nodeType===Node.TEXT_NODE?30:0;
}.bind(this),-1);
this.mapTraversals[id]=traversal;
traversal.start(this.queueCleanupElement.bind(this,element.$));
},spellCheckTextNode:function(txtnode,bSpellcheckWordAtCursor){var doc=txtnode.ownerDocument;
var createReplacement=function(text){var $misspelled=$("<span>",doc).text(text).addClass("ddspellcheck");
var id=this.createUniqueId(true);
$misspelled.attr("id",id);
this.misspelledSpanIds[id]=id;
return $misspelled[0];
}.bind(this);
var firstNode=txtnode;
var lastNode=txtnode;
var bSomethingChanged=false;
var aNodeSplits=[];
var iNextNodeSplitSubstringStart=0;
var bFoundCurrentNode=false;
var aWordContainers=CKEDITOR.SpellChecker.findWordPortions(txtnode);
for(var i=0;
i<aWordContainers.length;
i++){var wordContainer=aWordContainers[i];
if(wordContainer.portions.length===0){continue;
}var bReplaceNodes=true;
if(!bSpellcheckWordAtCursor){var lastPortion=wordContainer.portions[wordContainer.portions.length-1];
if(lastPortion&&lastPortion.endIndex<0||lastPortion.endIndex===lastPortion.node.nodeValue.length){var lastPortionNextNode=lastPortion.node;
do{lastPortionNextNode=DDCOMMON.getNextNode(lastPortionNextNode,DDCOMMON.makeConjunction(DDCOMMON.stopAtBr,DDCOMMON.stopAtBlock),DDCOMMON.stopAtBlock);
}while(lastPortionNextNode&&(DDCOMMON.isFillingChar(lastPortionNextNode)||lastPortionNextNode.nodeType===Node.TEXT_NODE&&lastPortionNextNode.nodeValue.length===0));
if(DDCOMMON.isBookmarkElement(lastPortionNextNode)){bReplaceNodes=false;
}}}var match=/^(['"]*)(.*?)['"]*$/.exec(wordContainer.word);
var sWordTrimmed=match?match[2]:wordContainer.word;
var correct=CKEDITOR.SpellChecker.checkSpelling(sWordTrimmed);
if(correct){continue;
}bSomethingChanged=true;
var wordPortions=wordContainer.portions;
for(var j=0;
j<wordPortions.length;
j++){var portion=wordPortions[j];
var portionNode=portion.node;
if(portionNode===txtnode){bFoundCurrentNode=true;
}if(!bReplaceNodes){continue;
}if(portionNode===txtnode){if(portion.startIndex>0){aNodeSplits.push(doc.createTextNode(portion.node.nodeValue.substring(iNextNodeSplitSubstringStart,portion.startIndex)));
}var replacementString=portion.endIndex>0?portion.node.nodeValue.substring(portion.startIndex,portion.endIndex):portion.node.nodeValue.substring(portion.startIndex);
aNodeSplits.push(createReplacement(replacementString));
iNextNodeSplitSubstringStart=portion.endIndex>=0?portion.endIndex:portion.node.nodeValue.length;
if(i===0&&j===0){firstNode=aNodeSplits[0];
}if(i===aWordContainers.length-1&&j===wordPortions.length-1){lastNode=aNodeSplits[aNodeSplits.length-1];
}}else{var parent=portionNode.parentNode;
if(bFoundCurrentNode&&portion.endIndex>0&&portion.endIndex<portion.node.nodeValue.length-1){var left=createReplacement(portion.node.nodeValue.substring(0,portion.endIndex));
var right=doc.createTextNode(portion.node.nodeValue.substring(portion.endIndex));
portion.node.parentNode.insertBefore(left,portion.node);
portion.node.parentNode.insertBefore(right,portion.node);
portion.node.parentNode.removeChild(portion.node);
if(i===aWordContainers.length-1&&j===wordPortions.length-1){lastNode=left;
}}else{if(!bFoundCurrentNode&&portion.startIndex>0){var left=doc.createTextNode(portion.node.nodeValue.substring(0,portion.startIndex));
var right=createReplacement(portion.node.nodeValue.substring(portion.startIndex));
portion.node.parentNode.insertBefore(left,portion.node);
portion.node.parentNode.insertBefore(right,portion.node);
portion.node.parentNode.removeChild(portion.node);
if(i===0&&j===0){firstNode=right;
}}else{var replacement=createReplacement(portion.node.nodeValue);
portion.node.parentNode.replaceChild(replacement,portion.node);
if(i===0&&j===0){firstNode=replacement;
}if(i===aWordContainers.length-1&&j===wordPortions.length-1){lastNode=replacement;
}}}var $nestingSpan=$(parent).closest(".ddspellcheck");
$nestingSpan.replaceWith($nestingSpan.contents());
}}}if(aNodeSplits.length){if(iNextNodeSplitSubstringStart<txtnode.nodeValue.length){aNodeSplits.push(doc.createTextNode(txtnode.nodeValue.substring(iNextNodeSplitSubstringStart)));
iNextNodeSplitSubstringStart=txtnode.nodeValue.length;
}for(var i=0;
i<aNodeSplits.length;
i++){txtnode.parentNode.insertBefore(aNodeSplits[i],txtnode);
}txtnode.parentNode.removeChild(txtnode);
}return{endpoints:[firstNode,lastNode],somethingChanged:bSomethingChanged};
},checkSpans:function(element){if(typeof element==="string"||element instanceof String){element=this.editor.document.$.getElementById(element);
if(!element||!element.ownerDocument.body.contains(element)){return;
}}var selection=null;
var bookmarks=null;
var bSomethingChanged=false;
var wasDirty=this.editor.checkDirty();
var removeElement=function(element){if(!element){return;
}if(!selection){selection=this.editor.getSelection();
}if(selection&&!bookmarks){bookmarks=selection.createBookmarks(true);
}var $element=$(element);
$element.replaceWith($element.contents());
bSomethingChanged=true;
}.bind(this);
var fixDom=function(){this.disableSpellCheck();
element.innerHTML=element.innerHTML;
var selection=this.editor.getSelection();
selection&&selection.reset();
setTimeout(function(){if(typeof element.parentNode!=="unknown"&&element.ownerDocument.body.contains(element)){this.enableSpellCheck(false);
this.spellCheckElement(element.id,false);
}}.bind(this),1);
}.bind(this);
$(element).find(".ddspellcheck").each(function(i,highlight){if(!this.ownerDocument.body.contains(this)){DocHandleError("cernscayt - checkSpans - ddspellcheck not contained in its document; skipping it","DynDocCKEditor","","");
return;
}var $nested=$(this).find(".ddspellcheck");
if($nested.length){DocHandleError("cernscayt - checkSpans - found nested ddspellcheck span","DynDocCKEditor","","");
}$nested.each(function(){removeElement(this);
});
CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
if(highlight.innerText.search(CKEDITOR.SpellChecker.RE_WORD_BOUNDARY)>=0){removeElement(highlight);
}else{var word=highlight.innerText;
var aOtherNodes=[];
var current=DDCOMMON.getFirstTextNode(highlight);
while(current){current=DDCOMMON.getPreviousInlineTextnode(current);
if(current&&typeof current.parentNode==="unknown"){DocHandleError("checkSpans - node is invalid; skipping","DynDocCKEditor");
fixDom();
return false;
}if(!current){break;
}if(current.nodeValue.length===0){continue;
}if(DDCOMMON.isFillingChar(current)){continue;
}var iLastBoundary=DDCOMMON.searchLast(current.nodeValue,CKEDITOR.SpellChecker.RE_WORD_BOUNDARY);
if(iLastBoundary>=current.nodeValue.length-1){break;
}aOtherNodes.push(current);
if(iLastBoundary<0){word=current.nodeValue+word;
}else{word=current.nodeValue.substring(iLastBoundary+1);
break;
}}current=DDCOMMON.getLastTextNode(highlight);
while(current){current=DDCOMMON.getNextInlineTextnode(current);
if(current&&typeof current.parentNode==="unknown"){DocHandleError("checkSpans - node is invalid; skipping","DynDocCKEditor");
fixDom();
return false;
}if(!current){break;
}if(current.nodeValue.length===0){continue;
}if(DDCOMMON.isFillingChar(current)){continue;
}CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
var iFirstBoundary=current.nodeValue.search(CKEDITOR.SpellChecker.RE_WORD_BOUNDARY);
if(iFirstBoundary===0){break;
}aOtherNodes.push(current);
if(iFirstBoundary<0){word+=current.nodeValue;
}else{word=current.nodeValue.substring(0,iFirstBoundary);
break;
}}var correct=CKEDITOR.SpellChecker.checkSpelling(word);
if(correct){removeElement(highlight);
for(var i=0;
i<aOtherNodes.length;
i++){var node=aOtherNodes[i];
removeElement($(node.parentNode).closest(".ddspellcheck")[0]);
}}else{for(var i=0;
i<aOtherNodes.length;
i++){var node=aOtherNodes[i];
if($(node.parentNode).closest(".ddspellcheck").length===0){removeElement(highlight);
break;
}}}}});
if(bookmarks){selection.selectBookmarks(bookmarks);
}if(bSomethingChanged){this.editor.fire("updateSnapshot");
}if(!wasDirty&&this.editor.checkDirty()){this.editor.resetDirty();
}},queueCleanupElement:function(element){if(!this.bCleanupsEnabled||!element){return;
}if(this.currentCleanup&&this.currentCleanup.element===element){return;
}var lastCleanup=this.aQueuedCleanups[this.aQueuedCleanups.length-1];
if(lastCleanup&&typeof lastCleanup.element.parentNode!=="unknown"&&element===lastCleanup.element){return;
}this.aQueuedCleanups.push({element:element});
if(!this.currentCleanup&&(this.editor.contextMenu==null||!this.editor.contextMenu.isVisible())){this.dequeueCleanup();
}},dequeueCleanup:function(){if(!CKEDITOR.SpellChecker.bEnabled||!this.bEnabled){return;
}if(!this.bCleanupsEnabled){return;
}if(this.currentCleanup){return;
}if(new Date().getTime()-this.lastCleanup<2000){CKEDITOR.tools.setTimeout(this.dequeueCleanup,2001,this);
return;
}if(this.isScrolling()){CKEDITOR.tools.setTimeout(this.dequeueCleanup,600,this);
return;
}var cleanup=this.aQueuedCleanups.shift();
if(!cleanup){return;
}try{this.doCleanup(cleanup);
}catch(e){this.handleException(e,"cleanup-dequeue");
}},doCleanup:function(cleanup){var cleanupTheCleanup=function(){this.currentCleanup=null;
this.lastCleanup=new Date().getTime();
this.dequeueCleanup();
}.bind(this);
if(cleanup.element==null||typeof cleanup.element.parentNode==="unknown"){console.log("Cleanup no good for invalid element");
cleanupTheCleanup();
return;
}if(!cleanup.element.ownerDocument.body.contains(cleanup.element)){cleanupTheCleanup();
return;
}this.currentCleanup=cleanup;
var selection=this.editor.getSelection(true);
var range=selection&&selection.getRanges()[0];
if(range&&!range.collapsed){this.interruptCleanup();
this.dequeueCleanup();
return;
}var boundaries=range&&range.getBoundaryNodes();
var cursorNode=boundaries&&boundaries.startNode&&boundaries.startNode.$;
if(selection&&(cursorNode===cleanup.element||DDCOMMON.isAncestor(cursorNode,cleanup.element))){var bookmarks=selection.createBookmarks(true);
}$(cleanup.element).find(".ddspellcheck .ddspellcheck").each(function(){var $this=$(this);
$this.replaceWith($this.contents());
});
if(bookmarks){this.lockEditorScroll();
try{selection.selectBookmarks(bookmarks);
}finally{CKEDITOR.tools.setTimeout(this.unlockEditorScroll,0,this);
}}var $spans=$(cleanup.element).find(".ddspellcheck");
var editor=this.editor;
var reallyDoCleanup=function(){var wasDirty=this.editor.checkDirty();
var span=Array.prototype.pop.call($spans);
if(span==null||typeof span.parentNode==="unknown"){return;
}if(!span.ownerDocument.body.contains(span)){return;
}if(span.previousSibling&&typeof span.previousSibling.parentNode==="unknown"||span.nextSibling&&typeof span.nextSibling.parentNode==="unknown"){throw new Error("Corrupt node at current spellcheck span");
}var selection=editor.getSelection(true);
var bookmarks=null;
var createBookmarks=selection?function(){if(bookmarks){return;
}if(selection){bookmarks=selection.createBookmarks(true);
}}:$.noop;
var range=selection&&selection.getRanges()[0];
if(range){var boundaries=range.getBoundaryNodes();
var cursorNode=boundaries&&boundaries.startNode&&boundaries.startNode.$;
if(cursorNode){if(cursorNode.previousSibling&&typeof cursorNode.previousSibling.parentNode==="unknown"||cursorNode.nextSibling&&typeof cursorNode.nextSibling.parentNode==="unknown"){throw new Error("Corrupt node at selection boundaries");
}}}if(cursorNode===span||DDCOMMON.isAncestor(cursorNode,span)){return;
}var bCheckPrevious=!(cursorNode===span.previousSibling||DDCOMMON.isAncestor(cursorNode,span.previousSibling));
var bCheckNext=!(cursorNode===span.nextSibling||DDCOMMON.isAncestor(cursorNode,span.nextSibling));
var $span=$(span);
var bSomethingChanged=false;
if(bCheckPrevious){var $prev=$(span.previousSibling);
if($prev.hasClass("ddspellcheck")){createBookmarks();
$span.prepend($prev.contents());
$prev.remove();
bSomethingChanged=true;
}}if(bCheckNext){var $next=$(span.nextSibling);
if($next.hasClass("ddspellcheck")){createBookmarks();
$span.append($next.contents());
$next.remove();
bSomethingChanged=true;
}}if(bookmarks){this.lockEditorScroll();
try{selection.selectBookmarks(bookmarks);
}finally{CKEDITOR.tools.setTimeout(this.unlockEditorScroll,0,this);
}}if(bSomethingChanged){editor.fire("updateSnapshot");
}if(!wasDirty&&this.editor.checkDirty()){this.editor.resetDirty();
}}.bind(this);
var delayNextCleanup=function(){cleanup.timeout=CKEDITOR.tools.setTimeout(function(){if(this.isScrolling()){this.interruptCleanup();
return;
}try{reallyDoCleanup();
if($spans.length){delayNextCleanup();
}else{cleanupTheCleanup();
}}catch(e){this.handleException(e,"cleanup");
}},100,this);
}.bind(this);
delayNextCleanup();
},interruptCleanup:function(){if(!this.currentCleanup){return;
}clearTimeout(this.currentCleanup.timeout);
this.aQueuedCleanups.unshift(this.currentCleanup);
this.currentCleanup=null;
this.lastCleanup=new Date().getTime();
},handleException:function(e,task){var message="cernscayt - Exception "+(task||"")+":  "+(e.message||e);
DocHandleError(message,"DynDocCKEditor");
var data=window.printStackTrace?"Stacktrace:\r\n"+printStackTrace().join("\r\n"):"";
CKEDITOR.DocUtilsHelper.LogException("DynDocCKEditor",message,"plugins/cernscayt/plugin.js","",data);
this.editor.disableSpellCheck();
var editorName=this.editor.name;
CKEDITOR.tools.setTimeout(function(){if(CKEDITOR.instances[editorName]===this.editor){this.editor.enableSpellCheck();
}},5000,this);
},enableSpellCheck:function(spellCheckCurrentElement){this.bEnabled=CKEDITOR.SpellChecker.bEnabled;
if(spellCheckCurrentElement){this.spellCheckCurrentElement();
}},disableSpellCheck:function(){this.bEnabled=false;
for(var id in this.mapTraversals){if(!this.mapTraversals.hasOwnProperty(id)){continue;
}var traversal=this.mapTraversals[id];
traversal&&traversal.cancel();
}this.interruptCleanup();
},createUniqueId:function(bTemporary){if(!bTemporary&&top.DocUtilsHelper){return top.DocUtilsHelper.GenerateGUID();
}if(!CKEDITOR.SpellChecker.nextUniqueNum){CKEDITOR.SpellChecker.nextUniqueNum=1;
}do{var num=CKEDITOR.SpellChecker.nextUniqueNum++;
var sId="scayt"+num;
}while(this.editor.document.$.getElementById(sId));
return sId;
}},statics:{RE_WORD_CHARACTER:/[a-zA-Z0-9\u2019\u00C0-\u02AF\u0386-\u04FF']/gm,RE_WORD_BOUNDARY:/[^a-zA-Z0-9\u2019\u00C0-\u02AF\u0386-\u04FF']/gm,RE_WORD_BOUNDARIES:/[^a-zA-Z0-9\u2019\u00C0-\u02AF\u0386-\u04FF']+/gm,bEnabled:true,checkSpelling:function(word){word=word.replace("\u2019","'");
var spelledCorrectly=CKEDITOR.SpellCheckHelper.CheckSpelling(word);
return spelledCorrectly;
},findWordPortions:function(txtnode){var wordContainers=[];
var lastIndex=-1;
do{var wordStart=DDCOMMON.searchFrom(txtnode.nodeValue,CKEDITOR.SpellChecker.RE_WORD_CHARACTER,lastIndex+1);
var wordEnd=DDCOMMON.searchFrom(txtnode.nodeValue,CKEDITOR.SpellChecker.RE_WORD_BOUNDARY,wordStart);
if(wordStart<0){break;
}var word=wordEnd>wordStart?txtnode.nodeValue.substring(wordStart,wordEnd):txtnode.nodeValue.substring(wordStart);
var wordPortions=[{node:txtnode,startIndex:wordStart,endIndex:wordEnd}];
wordContainers.push({word:word,portions:wordPortions});
lastIndex=wordEnd;
}while(lastIndex>=0);
if(wordContainers.length===0){return wordContainers;
}if(wordContainers[0].portions[0].startIndex===0){var current=wordContainers[0].portions[0].node;
var lastBoundary=-1;
do{current=DDCOMMON.getPreviousInlineTextnode(current);
if(!current){break;
}if(current.nodeValue.length===0){continue;
}lastBoundary=DDCOMMON.searchLast(current.nodeValue,CKEDITOR.SpellChecker.RE_WORD_BOUNDARY);
if(lastBoundary>=current.nodeValue.length-1){break;
}var portion;
wordContainers[0].portions.unshift(portion={node:current,startIndex:lastBoundary>=0?lastBoundary+1:0,endIndex:-1});
wordContainers[0].word=portion.node.nodeValue.substring(portion.startIndex)+wordContainers[0].word;
}while(current&&lastBoundary<0);
}var lastContainer=wordContainers[wordContainers.length-1];
var lastPortion=lastContainer.portions[lastContainer.portions.length-1];
if(lastPortion.endIndex>lastPortion.node.nodeValue.length-1||lastPortion.endIndex<0){var current=lastPortion.node;
var firstBoundary=-1;
do{current=DDCOMMON.getNextInlineTextnode(current);
if(!current){break;
}if(current.nodeValue.length===0){continue;
}CKEDITOR.SpellChecker.RE_WORD_BOUNDARY.lastIndex=0;
firstBoundary=current.nodeValue.search(CKEDITOR.SpellChecker.RE_WORD_BOUNDARY);
if(firstBoundary===0){break;
}var portion;
lastContainer.portions.push(portion={node:current,startIndex:0,endIndex:firstBoundary});
lastContainer.word+=portion.endIndex<0?portion.node.nodeValue.substring(portion.startIndex):portion.node.nodeValue.substring(portion.startIndex,portion.endIndex);
}while(current&&firstBoundary<0);
}return wordContainers;
},contextMenuHandler:function(editor,element,selection){if(selection==null||selection.getRanges().length==0){DocHandleError("SpellCheckPluginHelper::contextMenuHandler, selection has no ranges");
return null;
}if(selection.getRanges()[0].checkReadOnly()){return null;
}var range=editor.document.$.selection.createRange();
if(!range.moveStart){DocHandleError("contextMenuHandler - Range is not TextRange","DynDocCKEditor","","");
return null;
}trimRangeWhitespace(range);
var selectedElement=range.parentElement();
if(!selectedElement){return null;
}var $editableAncestor=$(selectedElement).closest("[contentEditable=true]");
if($editableAncestor.length===0){DocHandleError("contextMenuHandler - Cannot find contentEditable ancestor of misspelled word","DynDocCKEditor","","");
return null;
}var wordRange=getWordRangeAtCursor(range,$editableAncestor[0]);
var word=$.trim(wordRange.text);
CKEDITOR.SpellChecker.RE_WORD_CHARACTER.lastIndex=0;
if(!word||!CKEDITOR.SpellChecker.RE_WORD_CHARACTER.test(word)){return null;
}var wordTrimMatch=/^(['"]*)(.*?)['"]*$/.exec(word);
word=wordTrimMatch?wordTrimMatch[2]:word;
var spelledCorrectly=CKEDITOR.SpellChecker.checkSpelling(word);
if(spelledCorrectly){return null;
}var items_suggestion=CKEDITOR.SpellCheckHelper.GetSuggestedSpelling(word);
var suggestionsEnabledStatus=CKEDITOR.TRISTATE_OFF;
if(!items_suggestion||!items_suggestion.length){items_suggestion=editor.lang.cernscayt.noSpellingSuggestions;
suggestionsEnabledStatus=CKEDITOR.TRISTATE_DISABLED;
}items_suggestion=items_suggestion.split("\n");
var mainSuggestions={};
var maxSuggestions=editor.config.scayt_maxSuggestions;
if(typeof maxSuggestions!="number"){maxSuggestions=5;
}if(!maxSuggestions){maxSuggestions=items_suggestion.length;
}for(var i=0,l=items_suggestion.length;
i<l;
i+=1){var commandName="scayt_suggestion_"+i;
var exec=(function(sTextNew,oWordRange){return{editorFocus:false,exec:function(){if(sTextNew.length>0){if(replaceMisspelledWord(oWordRange,sTextNew)){oWordRange.select();
}this.canUndo=false;
}}};
})(items_suggestion[i],wordRange);
exec.canUndo=true;
exec.suggestedWord=items_suggestion[i];
if(i<maxSuggestions){CKEDITOR.SpellChecker.addButtonCommand(editor,items_suggestion[i],commandName,exec,"scayt_suggest",i+1);
mainSuggestions[commandName]=suggestionsEnabledStatus;
}}return mainSuggestions;
},addButtonCommand:function(editor,sLabel,sCmdName,oCommand,ctxMenuGroup,ctxMenuOrder){editor.addCommand(sCmdName,oCommand);
if(editor.addMenuItems){editor.addMenuItem(sCmdName,{label:sLabel,command:sCmdName,group:ctxMenuGroup,order:ctxMenuOrder});
}}}});
})();
CKEDITOR.plugins.add("cernscayt",{lang:"en,en-gb,de,fr,es,pt-br",checkers:{},init:function(editor){this.checkers[editor.name]=new CKEDITOR.SpellChecker(editor);
var dirtyFilter=function(frag){$(frag).find(".ddspellcheck").each(function(){var $spellcheck=$(this);
$spellcheck.replaceWith($spellcheck.contents());
});
$(frag).find('[id^="scayt"]').removeAttr("id");
};
if(editor.registerDirtyFilter){editor.registerDirtyFilter(function(frag){dirtyFilter(frag.firstChild);
});
}if(editor.registerXhtmlFilter){editor.registerXhtmlFilter(function(detached){dirtyFilter(detached);
});
}if(editor.contextMenu&&editor.addMenuItems){editor.addMenuGroup("scayt_suggest",-1);
editor.contextMenu.addListener(CKEDITOR.SpellChecker.contextMenuHandler.bind(this,editor));
}}});
F3Helper=function(){return{isFreeText:function(oElement){return true;
}};
}();
CKEDITOR.plugins.add("cernf3",{lang:"en,en-au,en-gb,de,fr,es,pt-br",init:function(editor){var ddf3={canUndo:false,editorFocus:false,exec:function(editor){var oInitialRange=editor.document.$.selection.createRange();
if(oInitialRange.parentElement&&oInitialRange.parentElement().ownerDocument!==editor.document.$){return;
}var iEndOfDocument=0;
var bEndFound=false;
while(iEndOfDocument<2){var oRangeToSearch=oInitialRange.duplicate();
if(bEndFound){oInitialRange.collapse(true);
oInitialRange.moveToElementText(editor.document.$.body);
oRangeToSearch=oInitialRange.duplicate();
bEndFound=false;
}else{oRangeToSearch.setEndPoint("StartToEnd",oInitialRange);
oInitialRange.moveToElementText(editor.document.$.body);
oRangeToSearch.setEndPoint("EndToEnd",oInitialRange);
}if(oRangeToSearch.findText("_")){var oRange2Parent=oRangeToSearch.parentElement();
var bIsFreeText=F3Helper.isFreeText(oRange2Parent);
if(bIsFreeText){oRangeToSearch.select();
return;
}else{oRangeToSearch.collapse(false);
oInitialRange=oRangeToSearch;
}}else{bEndFound=true;
iEndOfDocument++;
}}}};
var ddf3_back={canUndo:false,editorFocus:false,exec:function(editor){var oInitialRange=editor.document.$.selection.createRange();
var iStartOfDocument=0;
var bStartFound=false;
while(iStartOfDocument<2){var oRangeToSearch=oInitialRange.duplicate();
if(bStartFound){oInitialRange.collapse(false);
oInitialRange.moveToElementText(editor.document.$.body);
oRangeToSearch=oInitialRange.duplicate();
bStartFound=false;
}else{oRangeToSearch.setEndPoint("EndToStart",oInitialRange);
oInitialRange.moveToElementText(editor.document.$.body);
oRangeToSearch.setEndPoint("StartToStart",oInitialRange);
}if(oRangeToSearch.findText("_",-1,0)){var oRange2Parent=oRangeToSearch.parentElement();
var bIsFreeText=F3Helper.isFreeText(oRange2Parent);
if(true==bIsFreeText){oRangeToSearch.select();
return;
}else{oRangeToSearch.collapse(true);
oInitialRange=oRangeToSearch;
}}else{bStartFound=true;
iStartOfDocument++;
}}}};
DDCOMMON.addHotKeys(editor,editor.lang.cernf3.HotKeyArray);
editor.addCommand(DDCMD_PREV_UNDERSCORE,ddf3_back);
editor.addCommand(DDCMD_NEXT_UNDERSCORE,ddf3);
}});
F3Helper=function(){return{isFreeText:function(oElement){return oElement&&oElement.isContentEditable;
}};
}();
CKEDITOR.plugins.add("mpagesf3",{lang:"en,en-au,en-gb,de,fr,es,pt-br",init:function(editor){var ddf3={canUndo:false,editorFocus:true,exec:function(editor){var editingArea=editor.plugins.divarea?editor.ui.space("contents").$:editor.document.$.body;
var oInitialRange=editor.document.$.selection.createRange();
var editingAreaRange=oInitialRange.duplicate();
editingAreaRange.moveToElementText(editingArea);
var iEndOfDocument=0;
var bEndFound=false;
while(iEndOfDocument<2){var oRangeToSearch=editingAreaRange.duplicate();
if(bEndFound==true){oInitialRange.collapse(true);
oInitialRange.moveToElementText(editingArea);
oRangeToSearch=oInitialRange.duplicate();
bEndFound=false;
}else{if(oInitialRange.text=="_"){oRangeToSearch.setEndPoint("StartToEnd",oInitialRange);
}else{oRangeToSearch.setEndPoint("StartToStart",oInitialRange);
}}if(oRangeToSearch.findText("_")){if(!editingAreaRange.inRange(oRangeToSearch)){bEndFound=true;
iEndOfDocument++;
continue;
}var oRange2Parent=oRangeToSearch.parentElement();
var bIsFreeText=F3Helper.isFreeText(oRange2Parent);
if(true==bIsFreeText){oRangeToSearch.select();
return;
}else{oRangeToSearch.collapse(false);
oInitialRange=oRangeToSearch;
}}else{bEndFound=true;
iEndOfDocument++;
}}}};
var ddf3_back={canUndo:false,editorFocus:true,exec:function(editor){var editingArea=editor.plugins.divarea?editor.ui.space("contents").$:editor.document.$.body;
var oInitialRange=editor.document.$.selection.createRange();
var editingAreaRange=oInitialRange.duplicate();
editingAreaRange.moveToElementText(editingArea);
var iStartOfDocument=0;
var bStartFound=false;
while(iStartOfDocument<2){var oRangeToSearch=editingAreaRange.duplicate();
if(bStartFound==true){oInitialRange.collapse(false);
oInitialRange.moveToElementText(editingArea);
oRangeToSearch=oInitialRange.duplicate();
bStartFound=false;
}else{if(oInitialRange.text=="_"){oRangeToSearch.setEndPoint("EndToStart",oInitialRange);
}else{oRangeToSearch.setEndPoint("EndToEnd",oInitialRange);
}}if(oRangeToSearch.findText("_",-1,0)){if(!editingAreaRange.inRange(oRangeToSearch)){bStartFound=true;
iStartOfDocument++;
continue;
}var oRange2Parent=oRangeToSearch.parentElement();
var bIsFreeText=F3Helper.isFreeText(oRange2Parent);
if(true==bIsFreeText){oRangeToSearch.select();
return;
}else{oRangeToSearch.collapse(true);
oInitialRange=oRangeToSearch;
}}else{bStartFound=true;
iStartOfDocument++;
}}}};
DDCOMMON.addHotKeys(editor,editor.lang.mpagesf3.HotKeyArray);
editor.addCommand(DDCMD_PREV_UNDERSCORE,ddf3_back);
editor.addCommand(DDCMD_NEXT_UNDERSCORE,ddf3);
}});
CKEDITOR.plugins.add("cerndropdisable",{init:function(editor){editor.on("contentDom",function(){var editable=editor.editable();
editable.attachListener(editable,"drop",function(event){event.data.preventDefault();
});
});
}});
CKEDITOR.plugins.add("cernselectionfix",{init:function(editor){var parseStyles=function(configString){var mappings={};
var options=configString.split(";");
for(var i=0;
i<options.length;
i++){var parts=options[i].split("/");
var name=CKEDITOR.tools.trim(parts[0]);
if(name){var styles=(parts.length>=2?parts[1]:parts[0]).replace(/,\s*/,",").split(",");
for(var j=0;
j<styles.length;
j++){mappings[CKEDITOR.tools.trim(styles[j].toLowerCase())]=name;
}}}return mappings;
};
var fontMappings=parseStyles(editor.config.font_names);
var sizeMappings=parseStyles(editor.config.fontSize_sizes);
var getComputedFontFamily=function(element){for(var current=element;
current&&current.$&&current.$!==editor.editable().$;
current=current.getParent()){var sFontFamily=current.getComputedStyle("fontFamily");
var sFirstFont=/^([^,]+),?/.exec(sFontFamily)[1];
if(!sFirstFont){return null;
}sFirstFont=sFirstFont.toLowerCase();
if(sFirstFont==="inherit"){continue;
}else{break;
}}return sFirstFont;
};
editor.on("selectionChange",function(event){if(editor.mode!="wysiwyg"){return;
}var start=editor.getSelection().getStartElement();
(function(){var fontcombo=editor.ui.get("Font");
if(fontcombo&&!fontcombo.getValue()){var sFontFamily=getComputedFontFamily(start);
if(!sFontFamily){return;
}var sMappedFont=fontMappings[sFontFamily];
if(sMappedFont){fontcombo.setValue(sMappedFont);
}}})();
(function(){var fontsizecombo=editor.ui.get("FontSize");
if(fontsizecombo&&!fontsizecombo.getValue()){var sFontSize=start.getComputedStyle("fontSize");
var sMappedSize=sizeMappings[sFontSize.toLowerCase()];
if(sMappedSize){fontsizecombo.setValue(sMappedSize);
}}})();
},null,null,100);
}});
(function(){var UNSPLITTABLEs=[g_sCLASS_EMR_CONTENT,g_sCLASS_EMR_CONTENT_ITEM,g_sCLASS_SECTION_DISP,"blocktext",g_sCLASS_BLOCK_CN_TEMPLATE,g_sCLASS_BLOCK_SMART_TEMPLATE,g_sCLASS_BLOCK_TOKEN,g_sCLASS_DQR_CONTENT,"ddtagged","taggedtextnumber"];
var selector;
function getUnsplittablesSelector(){if(!selector){selector=DDCOMMON.createSelector(UNSPLITTABLEs);
}return selector;
}var HOOK_COMMANDS=["bold","italic","underline","strike"];
function watchCommand(editor,command){command.on("exec",function(){if(this.state!==CKEDITOR.TRISTATE_ON){return;
}var sel=editor.getSelection();
var range=sel.getRanges()[0];
if(!range||!range.collapsed){return;
}var style=command.style;
var handled=setSelectionUnformatted(editor,style);
if(handled){editor.fire("selectionChange",{selection:sel,path:editor.elementPath()});
return false;
}});
}function setSelectionUnformatted(editor,style){var sel=editor.getSelection();
var path=editor.elementPath();
for(var i=0;
path&&i<path.elements.length;
i++){var styleElement=path.elements[i];
var $styleElement=$(styleElement.$);
if($styleElement.css("display")!=="inline"){break;
}if(!style.checkElementRemovable(styleElement)){continue;
}var $unsplittables=$styleElement.find(getUnsplittablesSelector());
if($unsplittables.length){var bms=sel.createBookmarks();
for(var j=0;
j<$unsplittables.length;
j++){var unsplittable=CKEDITOR.dom.element.get($unsplittables[j]);
styleElement.addClass("cke-unformat-tmp");
removeStyleFromElement(editor,styleElement,style);
var leftRange=editor.createRange();
leftRange.setStartAt(styleElement,CKEDITOR.POSITION_AFTER_START);
leftRange.setEndBefore(unsplittable);
style.applyToRange(leftRange);
var rightRange=editor.createRange();
rightRange.setStartAfter(unsplittable);
rightRange.setEndAt(styleElement,CKEDITOR.POSITION_BEFORE_END);
style.applyToRange(rightRange);
styleAroundBookmark(editor,unsplittable,style,bms[0]);
styleElement.removeClass("cke-unformat-tmp");
}sel.selectBookmarks(bms);
return true;
}else{var range=sel.getRanges()[0];
if(!range){return false;
}var bms=sel.createBookmarks();
styleElement.addClass("cke-unformat-tmp");
removeStyleFromElement(editor,styleElement,style);
styleAroundBookmark(editor,styleElement,style,bms[0]);
styleElement.removeClass("cke-unformat-tmp");
sel.selectBookmarks(bms);
return true;
}}return false;
}function removeStyleFromElement(editor,styleElement,style){var styleRange=editor.createRange();
styleRange.setStartAt(styleElement,CKEDITOR.POSITION_BEFORE_START);
styleRange.setEndAt(styleElement,CKEDITOR.POSITION_AFTER_END);
style.removeFromRange(styleRange,editor);
}function styleAroundBookmark(editor,element,style,bookmark){var stickyNode=new CKEDITOR.dom.element("span");
stickyNode.setHtml("&nbsp;");
stickyNode.insertAfter(bookmark.startNode);
var leftRange=editor.createRange();
leftRange.setStartAt(element,CKEDITOR.POSITION_AFTER_START);
leftRange.setEndAt(bookmark.startNode,CKEDITOR.POSITION_BEFORE_START);
if(!leftRange.collapsed){style.applyToRange(leftRange);
}var rightRange=editor.createRange();
rightRange.setStartAt(stickyNode,CKEDITOR.POSITION_AFTER_END);
rightRange.setEndAt(element,CKEDITOR.POSITION_BEFORE_END);
var rangeStart=rightRange.getBoundaryNodes().startNode;
if(rangeStart&&rangeStart.is&&rangeStart.is("br")){rightRange.setStartAfter(rangeStart);
}if(!rightRange.collapsed){style.applyToRange(rightRange);
}stickyNode.remove();
}CKEDITOR.plugins.add("cernunformat",{init:function(editor){editor.on("instanceReady",function(){for(var i=0;
i<HOOK_COMMANDS.length;
i++){var command=editor.getCommand(HOOK_COMMANDS[i]);
if(command){watchCommand(editor,command);
}}});
}});
})();
CKEDITOR.plugins.add("cernbackspace",{init:function(editor){var isNodeEmpty=function(node){switch(node.nodeType){case 1:if($(node).is("br")){return false;
}for(var i=0;
i<node.childNodes.length;
i++){if(DDCOMMON.isBookmarkElement(node.childNodes[i])){continue;
}else{if(!isNodeEmpty(node.childNodes[i])){return false;
}}}return true;
case 3:return node.nodeValue.length===0;
default:return false;
}};
var shouldRemove=function(node){if($(node).hasClass("ddfreetext")||$(node).is("br")){return false;
}if(node.nodeType===1&&$(node).css("display")!=="inline"){return false;
}if(node===node.ownerDocument.body){return false;
}if(!DDCOMMON.isNodeEditable(node)){return false;
}return isNodeEmpty(node);
};
var removeEmpties=function(i,node){$(node).find(".ddremovablepadding").each(removeEmpties);
if(shouldRemove(node)){var $bkmark=$(node).find("[data-cke-bookmark]").detach();
$(node).after($bkmark);
node.parentNode.removeChild(node);
}};
if(typeof DocUtilsHelper!=="undefined"){DocUtilsHelper.DebugString("[DD] cernbackspace plugin is enabled");
}editor.on("contentDom",function(){var editable=editor.editable?editor.editable():editor.document;
editable.on("keydown",function(event){var KEYCODES={BACKSPACE:8,DELETE:46};
var keyCode=event.data.getKey();
if((keyCode===KEYCODES.BACKSPACE||keyCode===KEYCODES.DELETE)&&event.data.getKeystroke()<65536){var selection=editor.getSelection();
var range=selection&&selection.getRanges()[0];
if(!range){return;
}var ierange=editor.document.$.selection.createRange();
if(!ierange.moveStart){return;
}var rangeParent=ierange.parentElement();
if(rangeParent.isContentEditable==false){return;
}if(range.collapsed){if(keyCode===KEYCODES.DELETE){ierange.moveEnd("character",1);
}else{if(keyCode===KEYCODES.BACKSPACE){ierange.moveStart("character",-1);
}}if(ierange.text.length===1||(ierange.text.length===0&&/^<br[^>]*\/?[^>]*>$/i.test(ierange.htmlText))){}else{return;
}var extendedRange=ierange.duplicate();
extendedRange.moveStart("character",-1);
extendedRange.moveEnd("character",1);
if(extendedRange.text.indexOf(" ")<0&&extendedRange.text.indexOf("\u00A0")<0){return;
}ierange.select();
selection.reset();
try{range=selection.getRanges()[0];
if(range){console.log("Handling "+(keyCode===KEYCODES.DELETE?"delete":"backspace"));
range.deleteContents(true);
function removeEmptyAncestors(range){var ancestorNode=range.getCommonAncestor().$;
while(shouldRemove(ancestorNode)){var parent=ancestorNode.parentNode;
parent.removeChild(ancestorNode);
ancestorNode=parent;
}}removeEmptyAncestors(range);
ierange=editor.document.$.selection.createRange();
event.data.preventDefault(false);
}else{DocHandleError("cernbackspace - Unable to obtain range after selecting character","DynDocCKeditor","","");
}}finally{if(ierange.moveStart){ierange.collapse(true);
ierange.select();
selection.reset();
}}}else{console.log("Handling "+(keyCode===KEYCODES.DELETE?"delete":"backspace"));
range.deleteContents(true);
var bms=selection.createBookmarks();
var anc=range.getCommonAncestor();
var $freetext=$(anc.$).closest("[contentEditable=true]");
if($freetext.length>0){removeEmpties(0,$freetext[0]);
}selection.selectBookmarks(bms);
ierange=editor.document.$.selection.createRange();
if(ierange.moveStart){ierange.select();
selection.reset();
}event.data.preventDefault(false);
}}},this,null,0);
});
}});
DDJUSTIFYHANDLERS=function(){function getAlignment(element,useComputedState){useComputedState=useComputedState===undefined||useComputedState;
var align;
if(useComputedState){align=element.getComputedStyle("text-align");
}else{while(!element.hasAttribute||!(element.hasAttribute("align")||element.getStyle("text-align"))){var parent=element.getParent();
if(!parent){break;
}element=parent;
}align=element.getStyle("text-align")||element.getAttribute("align")||"";
}align&&(align=align.replace(/(?:-(?:moz|webkit)-)?(?:start|auto)/i,""));
!align&&useComputedState&&(align=element.getComputedStyle("direction")=="rtl"?"right":"left");
return align;
}function justifyCommand(editor,name,value){this.editor=editor;
this.name=name;
this.value=value;
this.context="p";
var classes=editor.config.justifyClasses;
if(classes){switch(value){case"left":this.cssClassName=classes[0];
break;
case"center":this.cssClassName=classes[1];
break;
case"right":this.cssClassName=classes[2];
break;
case"justify":this.cssClassName=classes[3];
break;
}this.cssClassRegex=new RegExp("(?:^|\\s+)(?:"+classes.join("|")+")(?=$|\\s)");
}}function onDirChanged(e){var editor=e.editor;
var range=editor.createRange();
range.setStartBefore(e.data.node);
range.setEndAfter(e.data.node);
var walker=new CKEDITOR.dom.walker(range);
var node;
while((node=walker.next())){if(node.type==CKEDITOR.NODE_ELEMENT){if(!node.equals(e.data.node)&&node.getDirection()){range.setStartAfter(node);
walker=new CKEDITOR.dom.walker(range);
continue;
}var classes=editor.config.justifyClasses;
if(classes){if(node.hasClass(classes[0])){node.removeClass(classes[0]);
node.addClass(classes[2]);
}else{if(node.hasClass(classes[2])){node.removeClass(classes[2]);
node.addClass(classes[0]);
}}}var style="text-align";
var align=node.getStyle(style);
if(align=="left"){node.setStyle(style,"right");
}else{if(align=="right"){node.setStyle(style,"left");
}}}}}function wrapfreetextelements(bookmarkitem,editor){if(!bookmarkitem){return;
}var oParentElement=bookmarkitem.getParent();
if(!oParentElement){return;
}var aElementsWithClassName=[];
var children=oParentElement.$.childNodes;
for(var i=0;
i<children.length;
i++){if((DDCOMMON.hasClassName(children[i].className,g_sCLASS_FREETEXT))&&(DDCOMMON.hasClassName(children[i].className,g_sCLASS_TEXT_WRAPPABLE)||bookmarkitem.$===children[i])){aElementsWithClassName.push(children[i]);
}}if($(aElementsWithClassName).length<=0){return;
}var bIsddRemovable=$(aElementsWithClassName).hasClass(g_sCLASS_REMOVABLE);
$(aElementsWithClassName).removeClass(g_sCLASS_FREETEXT);
$(aElementsWithClassName).removeClass(g_sCLASS_REMOVABLE);
$(aElementsWithClassName).removeClass(g_sCLASS_REFRESHABLE);
$(aElementsWithClassName).removeClass(g_sCLASS_TEXT_WRAPPABLE);
if(!DDCOMMON.hasClassName(oParentElement.$.className,g_sCLASS_FREETEXT)){if(typeof CKEDITOR.DocUtilsHelper==="undefined"||typeof CKEDITOR.DocUtilsHelper.GenerateGUID==="undefined"){return;
}var sGUID=CKEDITOR.DocUtilsHelper.GenerateGUID();
var sDiv=["<div class='",g_sCLASS_FREETEXT,"' dd:btnfloatingstyle='top-right' contentEditable='true' id='",sGUID,"' ",">"];
var newDiv=$("<div>",editor.document.$).addClass(g_sCLASS_FREETEXT).attr("dd:btnfloatingstyle","top-right").attr("contentEditable",true).attr("id",sGUID);
if(bIsddRemovable){$(newDiv).addClass(g_sCLASS_REMOVABLE);
}oParentElement.$.insertBefore(newDiv[0],bookmarkitem.$);
for(var i=0,count=$(aElementsWithClassName).length;
i<count;
i++){var childItem=aElementsWithClassName[i];
if(childItem){childItem.removeAttribute(g_sATTRIBUTE_BTN_FLOAT_STYLE);
childItem.removeAttribute("contentEditable",1);
childItem.removeAttribute("contenteditable",1);
$(newDiv).append($(childItem).clone());
$(childItem).remove();
}}}}justifyCommand.prototype={exec:function(editor){var selection=editor.getSelection();
var enterMode=editor.config.enterMode;
if(!selection){return;
}var bookmarks=selection.createBookmarks(true);
var ranges=selection.getRanges(true);
var cssClassName=this.cssClassName;
var iterator,block;
var bookmarkitem;
var useComputedState=editor.config.useComputedState;
useComputedState=useComputedState===undefined||useComputedState;
for(var i=ranges.length-1;
i>=0;
i--){iterator=ranges[i].createIterator();
iterator.enlargeBr=enterMode!=CKEDITOR.ENTER_BR;
while((block=iterator.getNextParagraph(enterMode==CKEDITOR.ENTER_P?"p":"div"))){if((block.$.nextSibling&&$(block.$.nextSibling).hasClass(g_sCLASS_TEXT_WRAPPABLE))||(block.$.previousSibling&&$(block.$.previousSibling).hasClass(g_sCLASS_TEXT_WRAPPABLE))){var attrArray=[];
for(var attr in block.$.attributes){if(attr.indexOf("class")===-1){attrArray.push(attr);
}}block.removeAttributes(attrArray);
}var className=cssClassName&&(block.$.className=CKEDITOR.tools.ltrim(block.$.className.replace(this.cssClassRegex,"")));
var apply=(this.state==CKEDITOR.TRISTATE_OFF)&&(!useComputedState||(getAlignment(block,true)!=this.value));
if(cssClassName){if(apply){block.addClass(cssClassName);
}else{if(!className){block.removeAttribute("class");
}}}else{if(apply){block.setStyle("text-align",this.value);
}}bookmarkitem=block;
}}wrapfreetextelements(bookmarkitem,editor);
editor.focus();
editor.forceNextSelectionCheck();
selection.selectBookmarks(bookmarks);
},refresh:function(editor,path){var firstBlock=path.block||path.blockLimit;
this.setState(firstBlock.getName()!="body"&&getAlignment(firstBlock,this.editor.config.useComputedState)==this.value?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF);
}};
return{m_oEditor:null,createJustifyCommand:function(oEditor,sCmd,sAlignType){return new justifyCommand(oEditor,sCmd,sAlignType);
},destroyHandler:function(){DDJUSTIFYHANDLERS.m_oEditor.removeListener("dirChanged",onDirChanged);
DDJUSTIFYHANDLERS.m_oEditor.removeListener("destroy",DDJUSTIFYHANDLERS.destroyHandler);
DDJUSTIFYHANDLERS.m_oEditor=null;
}};
}();
CKEDITOR.plugins.add("cerndyndocjustify",{lang:"en,en-gb,en-au,de,fr,es,pt-br",icons:"justifyblock,justifycenter,justifyleft,justifyright",requires:"cerndyndocbasicstyles,cerndyndoccommon",init:function(editor){if(editor.blockless){return;
}DDJUSTIFYHANDLERS.m_oEditor=editor;
editor.on("instanceReady",function(){if(editor.registerXhtmlFilter){editor.registerXhtmlFilter(function(){$(editor.editable().$).find("."+g_sCLASS_TEXT_WRAPPABLE).removeClass(g_sCLASS_TEXT_WRAPPABLE);
});
}});
var left=new DDJUSTIFYHANDLERS.createJustifyCommand(editor,DDCMD_JUSTIFYLEFT,"left");
var center=new DDJUSTIFYHANDLERS.createJustifyCommand(editor,DDCMD_JUSTIFYCENTER,"center");
var right=new DDJUSTIFYHANDLERS.createJustifyCommand(editor,DDCMD_JUSTIFYRIGHT,"right");
var justify=new DDJUSTIFYHANDLERS.createJustifyCommand(editor,DDCMD_JUSTIFYBLOCK,"justify");
editor.addCommand(DDCMD_JUSTIFYLEFT,left);
editor.addCommand(DDCMD_JUSTIFYCENTER,center);
editor.addCommand(DDCMD_JUSTIFYRIGHT,right);
editor.addCommand(DDCMD_JUSTIFYBLOCK,justify);
if(editor.ui.addButton){editor.ui.addButton("JustifyLeft",{label:editor.lang.cerndyndocjustify.left,command:DDCMD_JUSTIFYLEFT,toolbar:"align,10"});
editor.ui.addButton("JustifyCenter",{label:editor.lang.cerndyndocjustify.center,command:DDCMD_JUSTIFYCENTER,toolbar:"align,20"});
editor.ui.addButton("JustifyRight",{label:editor.lang.cerndyndocjustify.right,command:DDCMD_JUSTIFYRIGHT,toolbar:"align,30"});
editor.ui.addButton("JustifyBlock",{label:editor.lang.cerndyndocjustify.block,command:DDCMD_JUSTIFYBLOCK,toolbar:"align,40"});
}editor.on("dirChanged",DDJUSTIFYHANDLERS.onDirChanged);
}});
MouseOverStructure=function(){var m_sJSONClickedElement="";
function doWrap(oElement){var $element=$(oElement);
var $template=$("<span>").addClass("highlightable");
$element.contents().each(function(i,node){if(node.nodeType===Node.TEXT_NODE){if($.trim(node.nodeValue)){var $highlightable=$template.clone();
$highlightable.insertAfter(node);
$highlightable.append(node);
}}else{if(node.nodeType===Node.ELEMENT_NODE){doWrap(node);
}}});
}return{m_bEnablePlugin:CKEDITOR.MPAGES?true:false,getClickedElement:function(){return m_sJSONClickedElement;
},makeHighlightable:function(editor,oElement){if(null==editor||null==oElement||!this.m_bEnablePlugin){return;
}doWrap(oElement);
editor.fire("updateSnapshot");
},addHighlight:function(element){if(this.m_bEnablePlugin){$(element).closest("[dd\\:ocid], [dd\\:label]").addClass("highlighted");
}},removeHighlight:function(element){$(element).closest("[dd\\:ocid], [dd\\:label]").removeClass("highlighted");
},handleMouseClick:function(editor,oElement){if(null==editor||null==oElement||!this.m_bEnablePlugin){return;
}if(!($(oElement).hasClass("highlightable"))){oElement=$(oElement).closest(".highlightable")[0];
if(!oElement){return;
}}var jsonObj=[];
$(oElement).parents("[dd\\:ocid]").each(function(){jsonObj.push({label:null,ocid:$(this).attr("dd:ocid")});
});
$(oElement).parents("[dd\\:label]").each(function(){jsonObj.push({label:$(this).attr("dd:label"),ocid:null});
});
m_sJSONClickedElement=JSON.stringify(jsonObj.reverse());
editor.fire("structureElementClicked",m_sJSONClickedElement);
},enablePlugin:function(bFlag){this.m_bEnablePlugin=bFlag;
}};
}();
CKEDITOR.plugins.add("cernstructure",{init:function(editor){editor.on("updateStructuredContent",function(){MouseOverStructure.makeHighlightable(editor,$(editor.editable().$).find(".ddstructuredtext"));
});
editor.on("contentDom",function(event){$(editor.editable().$).on("mouseenter",".highlightable",function(event){MouseOverStructure.addHighlight(this);
editor.fire("updateSnapshot");
});
$(editor.editable().$).on("mouseleave",".highlightable",function(event){MouseOverStructure.removeHighlight(this);
editor.fire("updateSnapshot");
});
editor.editable().on("click",function(event){if(!event||!event.data||!event.data.$){return;
}MouseOverStructure.handleMouseClick(editor,event.data.$.srcElement);
});
},this);
editor.on("afterCommandExec",function(event){if(!event||!event.data){return;
}if(DDCMD_UNDO==event.data.name||DDCMD_REDO==event.data.name||DDCMD_LAYOUTDOCUMENT==event.data.name){MouseOverStructure.makeHighlightable(editor,$(editor.editable().$).find(".ddstructuredtext"));
}},this);
editor.on(DDCMD_CONTENTHTMLLOADED,function(event){var items=event.data&&event.data.items;
$(items).find(".ddstructuredtext").each(function(){MouseOverStructure.makeHighlightable(editor,this);
});
},this);
var dirtyFilter=function(frag){$(frag).find("span.highlightable").each(function(){var $highlightEl=$(this);
$highlightEl.replaceWith($highlightEl.contents());
});
$(frag).find(".highlighted").removeClass("highlighted");
};
if(editor.registerDirtyFilter){editor.registerDirtyFilter(function(frag){dirtyFilter(frag.firstChild);
});
}if(editor.registerXhtmlFilter){editor.registerXhtmlFilter(function(detached){dirtyFilter(detached);
});
}}});
g_sID_REMOVE_SECTION="ddRemoveSectionImage";
g_sID_INSERT_SECTION="ddInsertSectionImage";
g_sID_REMOVE_SUBSECTION="ddRemoveSubSectionImage";
g_sID_INSERT_SUBSECTION="ddInsertSubSectionImage";
g_sID_INSERT_FT_EMRITEM="ddInsertEmrImage";
g_sID_REMOVE_ELEMENT="ddRemoveElementImage";
g_sID_STRIKE_ELEMENT="ddStrikeElementImage";
g_sID_REFRESH_SECTION="ddRefreshSectionImage";
g_sID_REFRESH_SUBSECTION="ddRefreshSubSectionImage";
g_sDUMMY_IMG_ID="9999Xb7-c4db-4217-b96e-9999Xb7";
(function(){function FocusCache(editor){this.m_aFocusElementsCache=null;
this.m_editor=editor;
this.getFocusSection=function(){if(null==this.m_aFocusElementsCache||this.m_aFocusElementsCache.length<1){return null;
}return this.m_aFocusElementsCache[this.m_aFocusElementsCache.length-1];
};
this.getFocusSubsection=function(){if(null==this.m_aFocusElementsCache||this.m_aFocusElementsCache.length<2){return null;
}var oElement=this.m_aFocusElementsCache[this.m_aFocusElementsCache.length-2];
if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_SUBSECTION)){return oElement;
}return null;
};
this.clear=function(){if(null==this.m_aFocusElementsCache||this.m_aFocusElementsCache.length==0){return;
}$(this.m_aFocusElementsCache[0]).removeClass(g_sCLASS_ACTIONELEMENT);
while(this.m_aFocusElementsCache.length){var $element=$(this.m_aFocusElementsCache.pop());
$element.removeClass(g_sCLASS_INFOCUS);
}};
this.removeElement=function(oElement){if(null==oElement||null==this.m_aFocusElementsCache||this.m_aFocusElementsCache.length==0){return;
}var iArrayCnt=this.m_aFocusElementsCache.length;
if(oElement==this.m_aFocusElementsCache[iArrayCnt-1]){return this.clear();
}$(this.m_aFocusElementsCache[0]).removeClass(g_sCLASS_ACTIONELEMENT);
var bFound=false;
for(var i=0;
i<iArrayCnt;
i++){if(bFound&&isActionableElement(this.m_aFocusElementsCache[i])){this.m_aFocusElementsCache.splice(0,i);
return;
}$(oElement).removeClass(g_sCLASS_INFOCUS);
if(!bFound&&oElement==this.m_aFocusElementsCache[i]){bFound=true;
}}};
this.setElementsInFocus=function(oElement){this.clear();
if(null==oElement){return;
}if(this.m_aFocusElementsCache==null){this.m_aFocusElementsCache=[];
}var $e=$(oElement);
if(!$e.is(DDCOMMON.createSelector([g_sCLASS_FREETEXT,g_sCLASS_SECTION,g_sCLASS_SUBSECTION]))){$e.addClass(g_sCLASS_ACTIONELEMENT);
}var editableBaseElement=this.m_editor.editable().$;
for(;
$e.length&&$e[0]!==editableBaseElement&&!$e.hasClass(g_sCLASS_CONTRIBUTION);
$e=$e.parent()){$e.addClass(g_sCLASS_INFOCUS);
this.m_aFocusElementsCache.push($e[0]);
if($e.hasClass(g_sCLASS_SECTION)){break;
}}};
}DDENUM.ButtonSize={height:11,width:19};
DDENUM.ActionType={refresh:0,remove:1,insertFreeText:2,strikethrough:3};
function ActionImage(el){this.$=el;
this.id=el.id;
this.css=this.$.style;
this.setTop=function(iTop){this.css.posTop=iTop;
};
this.getTop=function(){return this.css.posTop;
};
this.setLeft=function(iLeft){this.css.posLeft=iLeft;
};
this.getLeft=function(){return this.css.posLeft;
};
this.setHeight=function(iHeight){this.css.height=iHeight;
};
this.getHeight=function(){return this.$.offsetHeight;
};
this.setWidth=function(iWidth){this.css.width=iWidth;
};
this.getWidth=function(){return this.$.offsetWidth;
};
this.setVisibility=function(sVisibility){this.css.visibility=sVisibility;
};
this.getVisibility=function(){return this.css.visibility;
};
this.getAttribute=function(attribute){return this.$.getAttribute(attribute);
};
this.setAttribute=function(attribute,value){return this.$.setAttribute(attribute,value);
};
this.getLinkedElement=function(){return this.$.linkedElement;
};
this.setLinkedElement=function(oElement){this.$.linkedElement=oElement;
};
this.setAltText=function(sAltText){this.setAttribute(g_sATTRIBUTE_ALT_TEXT,sAltText);
this.setAttribute("title",sAltText);
this.setAttribute("longDesc",sAltText);
};
this.hide=function(){this.setVisibility("hidden");
this.setLinkedElement(null);
};
if(!m_aActionImagesCache){m_aActionImagesCache=[];
}m_aActionImagesCache[this.id]=this;
}function OffsetPosition(iTop,iLeft,iHeight,iWidth){this.Top=iTop;
this.Left=iLeft;
this.Height=iHeight;
this.Width=iWidth;
}function isActionableElement(oElement){return $(oElement).is(".ddremovable,.ddsection,.ddsubsection");
}function calculateSectionImageTopAndLeft(oElement,bRefreshable,bRemovable){if(!oElement){return null;
}var oHeadingElement=DDCOMMON.getSectionDisplayElement(oElement);
if(oHeadingElement==null){return null;
}var oElementClientRects=oElement.getClientRects();
var oHeadingClientRects=oHeadingElement.getClientRects();
var eFloatingStyle=DDCOMMON.getButtonFloatingStyle(oElement);
if(eFloatingStyle==DDENUM.BtnFloatingStyle.topRight||oHeadingClientRects.length>1){var oImagePos=getImagePosAtTopRight(oElement);
if(bRemovable){oImagePos.Left-=(DDENUM.ButtonSize.width+3);
}if(bRefreshable){oImagePos.Left-=(DDENUM.ButtonSize.width+3);
}return oImagePos;
}else{var iLeftPosition=oHeadingClientRects[0].right+10;
var iWidth=DDENUM.ButtonSize.width;
if(bRemovable){iWidth+=(DDENUM.ButtonSize.width+3);
}if(bRefreshable){iWidth+=(DDENUM.ButtonSize.width+3);
}if(iLeftPosition+iWidth>oElementClientRects[0].right){iLeftPosition=oElementClientRects[0].right-iWidth-1;
}return new OffsetPosition(oHeadingClientRects[0].top+1,iLeftPosition,oElement.offsetHeight,oElement.offsetWidth);
}}function adjustSectionImagePositions(oElement){if(null==oElement){return;
}var oInsertImage=null;
var oRemoveImage=null;
var oRefreshImage=null;
if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_SECTION)){oRefreshImage=m_aActionImagesCache[g_sID_REFRESH_SECTION];
oInsertImage=m_aActionImagesCache[g_sID_INSERT_SECTION];
oRemoveImage=m_aActionImagesCache[g_sID_REMOVE_SECTION];
}else{if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_SUBSECTION)){oRefreshImage=m_aActionImagesCache[g_sID_REFRESH_SUBSECTION];
oInsertImage=m_aActionImagesCache[g_sID_INSERT_SUBSECTION];
oRemoveImage=m_aActionImagesCache[g_sID_REMOVE_SUBSECTION];
}else{return;
}}if(null!=oRefreshImage&&null==oRefreshImage.getLinkedElement()){oRefreshImage=null;
}if(null!=oInsertImage&&null==oInsertImage.getLinkedElement()){oInsertImage=null;
}if(null!=oRemoveImage&&null==oRemoveImage.getLinkedElement()){oRemoveImage=null;
}var imagePos=calculateSectionImageTopAndLeft(oElement,null!=oRefreshImage,null!=oRemoveImage);
if(null==imagePos){return;
}var iLeft=imagePos.Left;
if(null!=oRefreshImage){oRefreshImage.setVisibility("visible");
oRefreshImage.setTop(imagePos.Top);
oRefreshImage.setLeft(iLeft);
iLeft+=DDENUM.ButtonSize.width+3;
}if(null!=oInsertImage){oInsertImage.setVisibility("visible");
oInsertImage.setTop(imagePos.Top);
oInsertImage.setLeft(iLeft);
iLeft+=DDENUM.ButtonSize.width+3;
}if(null!=oRemoveImage){oRemoveImage.setVisibility("visible");
oRemoveImage.setTop(imagePos.Top);
oRemoveImage.setLeft(iLeft);
}}var m_aActionImagesCache={};
window.CernHoverHandler=function(editor){this.m_oEditor=editor;
var self=this;
this.m_focusCache=new FocusCache(editor);
this.m_oScrollTimer=null;
this.m_oMouseOnTimer=null;
this.m_bDisablePlugin=false;
this.m_iDisableCount=0;
this.m_iIsDocumentAuth=-1;
this.m_eCheckedReadOnly=0;
this.m_nIsStrikeThroughAllowed=-1;
this.m_bImagesEnabled=true;
if(!CernHoverHandler.EventHandlerMap){CernHoverHandler.EventHandlerMap={};
}CernHoverHandler.EventHandlerMap[editor.id]=this;
};
CernHoverHandler.getEditorEventHandler=function(editor){if(CernHoverHandler.EventHandlerMap){return CernHoverHandler.EventHandlerMap[editor.id];
}};
function getImagePosAtTopRight(oElement){if(!oElement){return null;
}var oElementClientRects=oElement.getClientRects();
var rightPos=oElementClientRects[0].right;
if(oElementClientRects.length>1){for(var i=1;
i<oElementClientRects.length&&oElementClientRects[i].top==oElementClientRects[0].top;
i++){rightPos=oElementClientRects[i].right;
}}return new OffsetPosition(oElementClientRects[0].top,rightPos-DDENUM.ButtonSize.width-3,oElement.offsetHeight,oElement.offsetWidth);
}function getImagePosFloatRight(oElement){if(null==oElement){return null;
}var oRectBefore=oElement.getClientRects();
var rectLast=oRectBefore[oRectBefore.length-1];
var leftPos=rectLast.right;
if(oElement.tagName.toUpperCase()==="TR"){return new OffsetPosition(rectLast.top,leftPos-8,oElement.offsetHeight,oElement.offsetWidth);
}if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_EMR_CONTENT_ITEM)==false){if(oRectBefore.length>2||(oRectBefore.length==2&&oRectBefore[0].left!=oRectBefore[0].right)){return getImagePosAtTopRight(oElement);
}}var sImage=["<img id='",g_sDUMMY_IMG_ID,"' style='visibility:hidden' />"];
var oDummyImage=oElement.document.createElement(sImage.join(""));
oDummyImage.style.width=DDENUM.ButtonSize.width;
oElement.appendChild(oDummyImage);
var oRectAfter=oElement.getClientRects();
if(oRectAfter.length>oRectBefore.length&&oRectAfter[oRectAfter.length-1].left<rectLast.right){leftPos-=DDENUM.ButtonSize.width;
}else{leftPos=oDummyImage.getClientRects()[0].left;
}oDummyImage.removeNode();
return new OffsetPosition(rectLast.top,leftPos,oElement.offsetHeight,oElement.offsetWidth);
}function removeChildHoverBorders(oElement){$(oElement).children().removeClass(g_sCLASS_SIBLING);
}function removeImages(sClassName){if(!m_aActionImagesCache){return;
}hideActionElementImage();
if(DDCOMMON.hasClassName(sClassName,g_sCLASS_SUBSECTION)||DDCOMMON.hasClassName(sClassName,g_sCLASS_SECTION)){var oActionImg=m_aActionImagesCache[g_sID_INSERT_SUBSECTION];
if(oActionImg!=null){removeChildHoverBorders(oActionImg.getLinkedElement());
oActionImg.hide();
}oActionImg=m_aActionImagesCache[g_sID_REMOVE_SUBSECTION];
if(oActionImg!=null){oActionImg.hide();
}oActionImg=m_aActionImagesCache[g_sID_REFRESH_SUBSECTION];
if(oActionImg!=null){oActionImg.hide();
}}if(DDCOMMON.hasClassName(sClassName,g_sCLASS_SECTION)){oActionImg=m_aActionImagesCache[g_sID_INSERT_SECTION];
if(oActionImg!=null){removeChildHoverBorders(oActionImg.getLinkedElement());
oActionImg.hide();
}oActionImg=m_aActionImagesCache[g_sID_REMOVE_SECTION];
if(oActionImg!=null){oActionImg.hide();
}var oActionImg=m_aActionImagesCache[g_sID_REFRESH_SECTION];
if(oActionImg!=null){oActionImg.hide();
}}var oActionImg=m_aActionImagesCache[g_sID_INSERT_FT_EMRITEM];
if(oActionImg){oActionImg.hide();
}}function hideActionElementImage(){if(!m_aActionImagesCache){return;
}$([g_sID_REMOVE_ELEMENT,g_sID_INSERT_FT_EMRITEM,g_sID_STRIKE_ELEMENT]).each(function(_,className){var oActionImg=m_aActionImagesCache[className];
if(oActionImg){$(oActionImg.getLinkedElement()).removeClass(g_sCLASS_ACTIONELEMENT);
oActionImg.hide();
}});
}function getImageSectionHeading(oImage){if(null==oImage){return null;
}var oSectionElement=oImage.getLinkedElement();
if(null!=oSectionElement){return DDCOMMON.getSectionDisplayElement(oSectionElement);
}else{return null;
}}function getMaximumAncestorTopOffset(oElement){var $element=$(oElement);
var offsetTop=0;
var offset=0;
while($element.length&&$element[0].nodeType===Node.ELEMENT_NODE){offsetTop=$element.offset().top;
if(offsetTop>offset){offset=offsetTop;
}$element=$element.parent();
}return offset;
}CernHoverHandler.prototype.createActionImageHTML=function(oElement,eActionType,iTop,iLeft,fOnClick){if(this.m_oEditor.document.$===document){if(iTop<getMaximumAncestorTopOffset($(this.m_oEditor.editable().$))){return;
}}var bIsSection=DDCOMMON.hasClassName(oElement.className,g_sCLASS_SECTION);
var bIsSubSection=DDCOMMON.hasClassName(oElement.className,g_sCLASS_SUBSECTION);
var sSrcPath="";
var sImageId="";
var sAltText="";
var sHoverUrl="";
switch(eActionType){case DDENUM.ActionType.insertFreeText:sSrcPath=CKEDITOR.getUrl("images/insert.png");
sHoverUrl=CKEDITOR.getUrl("images/insertRollover.png");
sImageId=bIsSection?g_sID_INSERT_SECTION:bIsSubSection?g_sID_INSERT_SUBSECTION:g_sID_INSERT_FT_EMRITEM;
sAltText=this.m_oEditor.lang.cernhover.insertFreeText;
break;
case DDENUM.ActionType.refresh:if(!bIsSection&&!bIsSubSection){return;
}sSrcPath=CKEDITOR.getUrl("images/refresh.png");
sHoverUrl=CKEDITOR.getUrl("images/refreshRollover.png");
sImageId=bIsSection?g_sID_REFRESH_SECTION:g_sID_REFRESH_SUBSECTION;
sAltText=bIsSection?this.m_oEditor.lang.cernhover.refreshSection:this.m_oEditor.lang.cernhover.refreshSubSection;
break;
case DDENUM.ActionType.remove:sSrcPath=CKEDITOR.getUrl("images/remove.png");
sHoverUrl=CKEDITOR.getUrl("images/removeRollover.png");
sImageId=bIsSection?g_sID_REMOVE_SECTION:bIsSubSection?g_sID_REMOVE_SUBSECTION:g_sID_REMOVE_ELEMENT;
sAltText=this.m_oEditor.lang.cernhover.removeFromNote;
break;
case DDENUM.ActionType.strikethrough:sSrcPath=CKEDITOR.getUrl("images/remove.png");
sHoverUrl=CKEDITOR.getUrl("images/removeRollover.png");
sImageId=g_sID_STRIKE_ELEMENT;
sAltText=this.m_oEditor.lang.cernhover.strikeItem;
break;
}var actionImage=(null==m_aActionImagesCache)?null:m_aActionImagesCache[sImageId];
if(null==actionImage){var imgElement=$("<img />",{"class":g_sCLASS_ACTION_IMAGE,id:sImageId,alt:sAltText,src:sSrcPath,css:{height:DDENUM.ButtonSize.height+"px",width:DDENUM.ButtonSize.width+"px",posTop:iTop+"px",posLeft:iLeft+"px"}});
imgElement.prop("linkedElement",oElement);
imgElement.on({mouseover:function(){this.src=sHoverUrl;
},mouseout:function(){this.src=sSrcPath;
},dragstart:function(){return false;
},onclick:fOnClick});
$("body").append(imgElement);
new ActionImage(imgElement[0]);
}else{actionImage.setLeft(iLeft);
actionImage.setTop(iTop);
actionImage.setVisibility("visible");
actionImage.setAltText(sAltText);
actionImage.setLinkedElement(oElement);
actionImage.$.onclick=fOnClick;
}if(typeof ModifyStructure!=="undefined"){ModifyStructure.handleMouseOver(oElement);
}};
function searchForFreeText(oParentElement){if(!oParentElement){return null;
}var lstFreeTextNodes=$(oParentElement).find('.ddemrcontent[dd\\:contenttype="DOC_COMP"] .ddcomponent .ddfreetext').not('.ddemrcontent[dd\\:contenttype!="DOC_COMP"] .ddfreetext');
if(0!=lstFreeTextNodes.length){return lstFreeTextNodes[0];
}lstFreeTextNodes=$(oParentElement).children(".ddfreetext");
if(0!=lstFreeTextNodes.length){return lstFreeTextNodes[0];
}return null;
}CernHoverHandler.prototype.insertFreeText=function(oElement){if(!oElement){return;
}var oFreeTextNode=searchForFreeText(oElement);
var oInsertedFreeTextNode=null;
if(!oFreeTextNode){if(typeof CKEDITOR.DocUtilsHelper!=="undefined"&&typeof CKEDITOR.DocUtilsHelper.GenerateGUID!=="undefined"){var $freetextDiv=$("<div></div>",{"class":g_sCLASS_FREETEXT+" "+g_sCLASS_REMOVABLE,id:CKEDITOR.DocUtilsHelper.GenerateGUID(),"dd:btnfloatingstyle":"top-right",contentEditable:"true"});
if($(oElement).hasClass(g_sCLASS_EMR_CONTENT_ITEM)){$freetextDiv.css("margin-left",".5em");
}var $ddComponents=$(oElement).find('.ddemrcontent[dd\\:contenttype="DOC_COMP"] .ddcomponent');
if($ddComponents.length>0){oInsertedFreeTextNode=$ddComponents[0].appendChild($freetextDiv[0]);
}else{oInsertedFreeTextNode=oElement.insertBefore($freetextDiv[0]);
}}oFreeTextNode=searchForFreeText(oElement);
}if(oFreeTextNode){setTimeout(function(){if(oFreeTextNode.ownerDocument.documentElement.contains(oFreeTextNode)){oFreeTextNode.focus();
if(!oInsertedFreeTextNode){DDCOMMON.putCursorAtEnd(oFreeTextNode);
}}},10);
}for(var index in this.m_focusCache.m_aFocusElementsCache){adjustSectionImagePositions(this.m_focusCache.m_aFocusElementsCache[index]);
}};
CernHoverHandler.prototype.insertSectionActionImages=function(oElement){var self=this;
if(null==oElement){return;
}var aRefreshableContent=DDCOMMON.getDescendentsByClassNames(oElement,[g_sCLASS_EMR_CONTENT,g_sCLASS_BLOCK_SMART_TEMPLATE,g_sCLASS_BLOCK_TOKEN]);
var bRefreshable=aRefreshableContent&&aRefreshableContent.length>0;
var bRemovable=DDCOMMON.isElementRemovable(oElement);
var imagePos=calculateSectionImageTopAndLeft(oElement,bRefreshable,bRemovable);
if(!imagePos){return;
}if(bRefreshable){var refreshSectImageOnClickEventHandler=function(){self.m_oEditor.fire("saveSnapshot");
self.m_oEditor.execCommand(DDCMD_REFRESHELEMENT,{element:event.srcElement.linkedElement});
if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){self.m_oEditor.editable().$.setActive();
}self.m_oEditor.editable().$.focus();
self.m_oEditor.fire("saveSnapshot");
};
self.createActionImageHTML(oElement,DDENUM.ActionType.refresh,imagePos.Top,imagePos.Left,refreshSectImageOnClickEventHandler);
imagePos.Left+=(DDENUM.ButtonSize.width+3);
}if($(oElement).hasClass(g_sCLASS_INSERT_FREETEXT)){var insertFreeTextImageOnClickEventHandler=function(){self.m_oEditor.execCommand(DDCMD_INSERTFREETEXT,event.srcElement.linkedElement);
};
self.createActionImageHTML(oElement,DDENUM.ActionType.insertFreeText,imagePos.Top,imagePos.Left,insertFreeTextImageOnClickEventHandler);
imagePos.Left+=(DDENUM.ButtonSize.width+3);
}if(bRemovable){var removeSectImageOnClickEventHandler=function(){self.m_oEditor.execCommand(DDCMD_REMOVEELEMENT,event.srcElement.linkedElement);
};
self.createActionImageHTML(oElement,DDENUM.ActionType.remove,imagePos.Top,imagePos.Left,removeSectImageOnClickEventHandler);
}};
CernHoverHandler.prototype.displayContentItemImage=function(oElement){var self=this;
if(null==oElement){return;
}if(this.m_bImagesEnabled==false){return;
}var oImagePos=null;
switch(DDCOMMON.getButtonFloatingStyle(oElement)){case DDENUM.BtnFloatingStyle.topRight:oImagePos=getImagePosAtTopRight(oElement);
break;
default:oImagePos={};
if(oElement.tagName.toUpperCase()=="TR"){oImagePos=getImagePosFloatRight(oElement);
}else{var elementRects=oElement.getClientRects();
var lastElementRect=elementRects.length?elementRects[elementRects.length-1]:null;
var $img=$("<img/>",self.m_oEditor.document.$).attr("width",DDENUM.ButtonSize.width).attr("height",DDENUM.ButtonSize.height).css("visibility","hidden");
var firstBlock=(function(){var children=$(oElement).children();
for(var i=0;
i<children.length;
i++){if($(children[i]).css("display")=="block"||children[i].tagName.toUpperCase()==="BR"){return children[i];
}}return null;
})();
if(firstBlock){$img.insertBefore(firstBlock);
}else{oElement.appendChild($img[0]);
}try{var offset=$img.offset();
oImagePos.Left=offset.left;
oImagePos.Top=offset.top;
var iPadding=3;
if($(oElement).css("display")==="inline"){iPadding=0;
}oImagePos.Left+=iPadding;
}finally{$img.remove();
}var scrollDiff=$(oElement).offset().top-lastElementRect.top;
if(lastElementRect&&oImagePos.Top+DDENUM.ButtonSize.height>(scrollDiff+lastElementRect.bottom)){oImagePos.Top=lastElementRect.top;
oImagePos.Left=lastElementRect.right-DDENUM.ButtonSize.width;
}}}if(1==this.isDocumentAuth()){var strikeContentItemImageOnClickEvntHndlr=function(){self.m_oEditor.execCommand(DDCMD_STRIKEELEMENT,event.srcElement.linkedElement);
try{if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){self.m_oEditor.editable().$.setActive();
}self.m_oEditor.editable().$.focus();
}catch(e){DocHandleError("strike - Exception when setting focus to the editor:  "+(e.message||e),"DynDocCKEditor");
}};
self.createActionImageHTML(oElement,DDENUM.ActionType.strikethrough,oImagePos.Top,oImagePos.Left,strikeContentItemImageOnClickEvntHndlr);
}else{var bIsInsertFreeText=DDCOMMON.hasClassName(oElement.className,g_sCLASS_INSERT_FREETEXT);
var bIsBlock=CKEDITOR.dtd.$block[oElement.tagName.toLowerCase()];
var bIsTr=oElement.tagName.toUpperCase()==="TR";
var bInsertFreeTextBtn=bIsInsertFreeText&&bIsBlock&&!bIsTr&&!DDCOMMON.hasClassName(oElement.className,g_sCLASS_FREETEXT);
var bRemoveElementBtn=DDCOMMON.hasClassName(oElement.className,g_sCLASS_REMOVABLE);
if(bInsertFreeTextBtn){var insertFreeTextImageOnClickEventHandler=function(){self.m_oEditor.execCommand(DDCMD_INSERTFREETEXT,event.srcElement.linkedElement);
};
self.createActionImageHTML(oElement,DDENUM.ActionType.insertFreeText,oImagePos.Top,oImagePos.Left,insertFreeTextImageOnClickEventHandler);
}if(bRemoveElementBtn){if(bInsertFreeTextBtn){oImagePos.Left+=(DDENUM.ButtonSize.width+3);
}var rmvContentItemImageOnClickEvntHndlr=function(){self.m_oEditor.execCommand(DDCMD_REMOVEELEMENT,event.srcElement.linkedElement);
};
self.createActionImageHTML(oElement,DDENUM.ActionType.remove,oImagePos.Top,oImagePos.Left,rmvContentItemImageOnClickEvntHndlr);
}}};
CernHoverHandler.prototype.clearFullDocOfClass=function(sClassNameToClear){var doc=this.m_oEditor.editable().$;
$(doc).find("."+sClassNameToClear).removeClass(sClassNameToClear);
};
CernHoverHandler.prototype.generateRemovableImage=function(oElement,oElementParent){var oRemovableElement;
var bIsAuth=(1==this.isDocumentAuth());
if(false==bIsAuth||1==this.m_nIsStrikeThroughAllowed){oRemovableElement=DDCOMMON.getParentByClass(oElement,g_sCLASS_REMOVABLE);
if(null!=oRemovableElement&&(oRemovableElement==oElementParent||DDCOMMON.hasClassName(oRemovableElement.className,g_sCLASS_SECTION)||DDCOMMON.hasClassName(oRemovableElement.className,g_sCLASS_SUBSECTION))){oRemovableElement=null;
}if(null==oRemovableElement){hideActionElementImage();
}else{if(DDCOMMON.hasClassName(oRemovableElement.className,g_sCLASS_FREETEXT)){if(false==bIsAuth){this.displayContentItemImage(oRemovableElement);
}else{var oContribution=DDCOMMON.getParentElementByClass(oRemovableElement,g_sCLASS_CONTRIBUTION);
if(null!=oContribution&&false==DDCOMMON.getAttributeBoolean(oContribution,g_sATTRIBUTE_ACTIVE)&&$.trim($(oRemovableElement).text()).length>0){this.displayContentItemImage(oRemovableElement);
}}}else{this.displayContentItemImage(oRemovableElement);
}}}return oRemovableElement;
};
CernHoverHandler.prototype.isStandaloneSection=function(){return this.m_oEditor.config.isStandaloneSection;
};
function isSectionOrSubsection(oElement){var isSectionOrSubsection=DDCOMMON.hasClassName(oElement.className,g_sCLASS_SECTION)||DDCOMMON.hasClassName(oElement.className,g_sCLASS_SUBSECTION);
return isSectionOrSubsection;
}CernHoverHandler.prototype.handleMultipleContentSections=function(oElementParent){var oElementCur=oElementParent.firstChild;
var isStandalone=this.isStandaloneSection();
var iFreeText=0;
var iEMRContent=0;
var iSubSections=0;
var inSectionOrSubsection=isSectionOrSubsection(oElementParent);
if(inSectionOrSubsection||isStandalone){while(oElementCur!=null){if(DDCOMMON.hasClassName(oElementCur.className,g_sCLASS_FREETEXT)){iFreeText=iFreeText+1;
}else{if(DDCOMMON.hasClassName(oElementCur.className,g_sCLASS_EMR_CONTENT)){iEMRContent=iEMRContent+1;
}else{if(DDCOMMON.hasClassName(oElementCur.className,g_sCLASS_SUBSECTION)){iSubSections=iSubSections+1;
}}}oElementCur=oElementCur.nextSibling;
}}oElementCur=oElementParent.firstChild;
while(oElementCur!=null){if(isSectionOrSubsection&&DDCOMMON.hasClassName(oElementCur.className,g_sCLASS_EMR_CONTENT)&&oElementCur.childNodes.length>0){if(iFreeText+iEMRContent+iSubSections>1){oElementCur.className=DDCOMMON.appendClassName(oElementCur.className,g_sCLASS_SIBLING);
}}oElementCur=oElementCur.nextSibling;
}};
CernHoverHandler.prototype.eventRequiresUpdate=function(oElement){var $element=$(oElement);
if($element.hasClass(g_sCLASS_ACTION_IMAGE)){return false;
}return true;
};
CernHoverHandler.prototype.onMouseOver=function(oElement){var requiresUpdate=this.eventRequiresUpdate(oElement);
if(requiresUpdate){var oParentElement=this.getParentSectionElement(oElement);
this.handleMouseOffSectionContent(oElement);
if(this.getDisablePlugin()){return;
}if(oParentElement){this.handleSectionImages(oElement,oParentElement);
this.removePreviousFocus(oElement,oParentElement);
this.handleMultipleContentSections(oParentElement);
var oRemovableElement=this.generateRemovableImage(oElement,oParentElement);
this.setNewFocus(oElement,oParentElement,oRemovableElement);
}}};
CernHoverHandler.prototype.onMouseOff=function(srcElement,targetElement){var requiresUpdate=this.eventRequiresUpdate(targetElement);
if(requiresUpdate){var srcParentElement=this.getParentSectionElement(srcElement);
if(targetElement){this.handleMouseOffSectionContent(targetElement);
}if(this.getDisablePlugin()){return;
}this.removePreviousFocus(srcElement,srcParentElement);
}};
CernHoverHandler.prototype.handleSectionImages=function(oElement,oElementParent){if(0==this.isDocumentAuth()){this.displaySectionImages(oElementParent);
}else{var oContribution=DDCOMMON.getParentElementByClass(oElement,g_sCLASS_CONTRIBUTION);
if(oContribution){if(true==DDCOMMON.getAttributeBoolean(oContribution,g_sATTRIBUTE_ACTIVE)){this.displaySectionImages(oElementParent);
}}}};
CernHoverHandler.prototype.displaySectionImages=function(oElement){if(null==oElement){return;
}var oFocusSection=this.m_focusCache.getFocusSection();
var oFocusSubsection=this.m_focusCache.getFocusSubsection();
if(oElement==oFocusSection){if(null!=oFocusSubsection){removeImages(oFocusSubsection.className);
}}var bUpdateParentSectionImage=false;
var oImageParentSection=null;
if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_SUBSECTION)){var oElementParentSection=DDCOMMON.getParentByClass(oElement,g_sCLASS_SECTION);
var oInsertImage=null==m_aActionImagesCache?null:m_aActionImagesCache[g_sID_INSERT_SECTION];
if(oElementParentSection&&oInsertImage){oImageParentSection=oInsertImage.getLinkedElement();
if(null==oImageParentSection||oImageParentSection.id!=oElementParentSection.id||oElementParentSection!=oFocusSection){bUpdateParentSectionImage=true;
}}else{if(oElementParentSection){bUpdateParentSectionImage=true;
}}}if(bUpdateParentSectionImage){removeImages(oElementParentSection.className);
if(this.m_bImagesEnabled){this.insertSectionActionImages(oElementParentSection);
}}else{removeImages(oElement.className);
}if(this.m_bImagesEnabled){this.insertSectionActionImages(oElement);
}};
CernHoverHandler.prototype.handleMouseOffSectionContent=function(oElement){var isStandaloneSection=this.isStandaloneSection();
var parentSectionElement=this.getParentSectionElement(oElement);
var inSection=false;
if(parentSectionElement){if(isStandaloneSection){inSection=(parentSectionElement!==oElement);
}else{inSection=true;
}}if(!inSection){this.clearFocus();
}};
CernHoverHandler.prototype.getParentSectionElement=function(oElement){var $element=$(oElement);
var isStandalone=this.isStandaloneSection();
var $oParentSection=null;
var oParentSection=null;
if(isStandalone){var $editable=$(this.m_oEditor.editable().$);
$oParentSection=$element.closest($editable);
}else{$oParentSection=$element.closest(DDCOMMON.createSelector([g_sCLASS_SUBSECTION,g_sCLASS_SECTION]));
}if($oParentSection.length){oParentSection=$oParentSection[0];
}return oParentSection;
};
CernHoverHandler.prototype.removePreviousFocus=function(oElement,oElementParent){var oFocusSection=this.m_focusCache.getFocusSection();
var oFocusSubsection=this.m_focusCache.getFocusSubsection();
if(oElementParent===oFocusSection){if(oFocusSubsection){removeChildHoverBorders(oFocusSubsection);
}}else{if(oElement!==oFocusSubsection){removeChildHoverBorders(oFocusSection);
}}};
CernHoverHandler.prototype.setNewFocus=function(oElement,oElementParent,oRemovableElement){var editor=this.m_oEditor;
var isStandalone=this.isStandaloneSection();
if(!editor){return;
}if(oRemovableElement){this.m_focusCache.setElementsInFocus(oRemovableElement);
}else{if(DDCOMMON.hasClassName(oElement.className,g_sCLASS_FREETEXT)){this.m_focusCache.setElementsInFocus(oElement);
}else{if(!isStandalone){this.m_focusCache.setElementsInFocus(oElementParent);
}}}};
CernHoverHandler.prototype.setDisablePlugin=function(bFlag){return this[bFlag?"disablePlugin":"enablePlugin"]();
};
CernHoverHandler.prototype.disablePlugin=function(){this.m_iDisableCount++;
return this.updateEnabledState();
};
CernHoverHandler.prototype.enablePlugin=function(){if(this.m_iDisableCount>0){this.m_iDisableCount--;
}return this.updateEnabledState();
};
CernHoverHandler.prototype.updateEnabledState=function(){this.m_bDisablePlugin=this.m_iDisableCount>0;
return !this.m_bDisablePlugin;
};
CernHoverHandler.prototype.getDisablePlugin=function(){switch(this.m_eCheckedReadOnly){case 0:var lFlag=false;
if(null!=DDCOMMON.m_oWin32Document){lFlag=DDCOMMON.m_oWin32Document.ReadOnly();
if(lFlag==true){this.m_eCheckedReadOnly=1;
return(this.m_bDisablePlugin||true);
}else{this.m_eCheckedReadOnly=2;
return(this.m_bDisablePlugin||false);
}}else{return false;
}case 1:return(this.m_bDisablePlugin||true);
case 2:return(this.m_bDisablePlugin||false);
}};
CernHoverHandler.prototype.isDocumentAuth=function(){if(-1==this.m_iIsDocumentAuth){if(!DDCOMMON.m_oWin32Document){return 0;
}if(DDCOMMON.m_oWin32Document.GetContributions().GetCount()>1){this.m_iIsDocumentAuth=1;
}else{this.m_iIsDocumentAuth=0;
}}return this.m_iIsDocumentAuth;
};
CernHoverHandler.prototype.debounceMouseEvent=function(oSourceElement,oTargetElement,callback){if(!callback||!event){return;
}var timeout=100;
if(this.m_oMouseOnTimer){clearTimeout(this.m_oMouseOnTimer);
}this.m_oMouseOnTimer=setTimeout(function(){callback(oSourceElement,oTargetElement);
},timeout);
};
CernHoverHandler.prototype.disableImages=function(){if(this.m_bImagesEnabled){this.m_bImagesEnabled=false;
removeImages(g_sCLASS_SECTION);
}};
CernHoverHandler.prototype.enableImages=function(){this.m_bImagesEnabled=true;
};
CernHoverHandler.prototype.clearFocus=function(){removeChildHoverBorders(this.m_focusCache.getFocusSection());
removeImages(g_sCLASS_SECTION);
this.m_focusCache.clear();
};
CernHoverHandler.prototype.adjustSectionImagePositions=function(){for(var index in this.m_focusCache.m_aFocusElementsCache){adjustSectionImagePositions(this.m_focusCache.m_aFocusElementsCache[index]);
}};
CernHoverHandler.prototype.removeElement=function(oElement){if(!oElement){return;
}var bIsSection=DDCOMMON.hasClassName(oElement.className,g_sCLASS_SECTION)||this.isStandaloneSection();
var isDirty=this.m_oEditor.checkDirty();
if(bIsSection){this.clearFocus();
}else{this.m_focusCache.removeElement(oElement);
removeImages(oElement.className);
}this.m_oEditor.fire("saveSnapshot");
var oElementToRemove=oElement;
var $oElement=$(oElement);
if(oElement.tagName.toUpperCase()===g_sTABLE_ROW_TAGNAME){var table=$oElement.closest(g_sTABLE_TAGNAME);
var aTrs=table.find(g_sTABLE_ROW_TAGNAME).filter(":visible");
var iTrCount=aTrs.length;
aTrs.each(function(){if(this===oElement){iTrCount--;
}else{if($(this).find(g_sTABLE_CELL_TAGNAME).length==0){iTrCount--;
}}});
if(iTrCount==0){table.remove();
oElementToRemove=null;
}}var $section=$(oElement).closest(".ddsection");
if(oElementToRemove){var previousParent=$oElement.parent()[0];
$oElement.remove();
this.m_oEditor.fire("elementRemoved",{previousParent:previousParent});
}if(!bIsSection){if($section.length&&$section.children().length===0&&$.trim($section.text())===""){$section.remove();
}}var selection=this.m_oEditor.getSelection();
selection&&selection.reset();
for(var index in this.m_focusCache.m_aFocusElementsCache){if(this.m_focusCache.m_aFocusElementsCache.hasOwnProperty(index)){adjustSectionImagePositions(this.m_focusCache.m_aFocusElementsCache[index]);
}}try{if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){this.m_oEditor.editable().$.setActive();
}this.m_oEditor.editable().$.focus();
}catch(e){DocHandleError("Exception when setting focus to the editor:  "+(e.message||e),"DynDocCkEditor");
}this.m_oEditor.fire("saveSnapshot");
};
CernHoverHandler.prototype.clearBordersAndFocusFullDoc=function(){this.clearFullDocOfClass(g_sCLASS_ACTIONELEMENT);
this.clearFullDocOfClass(g_sCLASS_INFOCUS);
this.m_focusCache.clear();
this.clearFullDocOfClass(g_sCLASS_SIBLING);
removeImages(g_sCLASS_SECTION);
};
CernHoverHandler.prototype.setCheckedReadOnly=function(){DocHandleError("CernHoverHandler::setCheckedReadOnly, This function was called.","DynDocCKEditor","","");
this.m_eCheckedReadOnly=0;
};
CernHoverHandler.prototype.setAllowStrike=function(iAllow){this.m_nIsStrikeThroughAllowed=iAllow;
};
CernHoverHandler.prototype.onTextScroll=function(){if(!this.m_bDisablePlugin){this.clearBordersAndFocusFullDoc();
}};
CernHoverHandler.unload=function(){window.onresize=null;
if(null!=m_aActionImagesCache){for(var i=0;
i<m_aActionImagesCache.length;
i++){var oImage=m_aActionImagesCache[i];
oImage.onclick=null;
oImage.ondragstart=null;
oImage.onmouseover=null;
oImage.onmouseout=null;
oImage.setLinkedElement(null);
}m_aActionImagesCache=null;
}};
CernHoverHandler.prototype.mouseOverHandler=function(event){var self=this;
if(!event||!event.data){return;
}var onMouseOver=function(oSrcElement,oTargetElement){self.onMouseOver(oSrcElement);
};
if(!this.getDisablePlugin()){this.debounceMouseEvent(event.data.$.srcElement,event.data.$.fromElement,onMouseOver);
}};
CernHoverHandler.prototype.mouseOutHandler=function(event){var self=this;
if(!event||!event.data){return;
}var onMouseOut=function(oSrcElement,oTargetElement){self.onMouseOff(oSrcElement,oTargetElement);
};
if(!this.getDisablePlugin()){this.debounceMouseEvent(event.data.$.srcElement,event.data.$.toElement,onMouseOut);
}};
CernHoverHandler.prototype.focusOutHandler=function(event){var self=this;
if(!event||!event.data){return;
}var onFocusOut=function(oSrcElement,oTargetElement){self.onMouseOff(oSrcElement,oTargetElement);
};
if(!this.getDisablePlugin()){this.debounceMouseEvent(event.data.$.srcElement,event.data.$.toElement,onFocusOut);
}};
CernHoverHandler.prototype.contentDomHandler=function(){var self=this;
var onScroll=function(event){self.onTextScroll(event);
};
var onMouseOver=function(event){self.mouseOverHandler(event);
};
var onMouseOut=function(event){self.mouseOutHandler(event);
};
var onFocusOut=function(event){self.focusOutHandler(event);
};
this.m_oEditor.editable().on("scroll",onScroll);
this.m_oEditor.editable().on("mouseover",onMouseOver);
this.m_oEditor.editable().on("mouseout",onMouseOut);
this.m_oEditor.editable().on("focusout",onFocusOut);
var editable=this.m_oEditor.editable();
this.m_bMouseDown=false;
editable.on("mousedown",function(event){if(event.data.$.offsetX>=editable.$.clientWidth){return;
}if(event.data.$.button&1){this.m_bMouseDown=true;
}},this);
editable.on("mousemove",function(){if(this.m_bMouseDown){this.disableImages();
}},this);
editable.on("mouseup",function(event){if(event.data.$.button&1){this.m_bMouseDown=false;
this.enableImages();
}},this);
};
CernHoverHandler.prototype.instanceReadyHandler=function(){var editor=this.m_oEditor;
editor.registerXhtmlFilter&&editor.registerXhtmlFilter(function(detached){var $detached=$(detached);
$detached.find("."+g_sDUMMY_IMG_ID).remove();
var $ddfreetext=$detached.find("."+g_sCLASS_FREETEXT);
$ddfreetext.each(function(){this.removeAttribute("contentEditable",1);
this.removeAttribute("contenteditable",1);
});
var selector=DDCOMMON.createSelector([g_sCLASS_EMR_CONTENT,g_sCLASS_BLOCK_CN_TEMPLATE,g_sCLASS_BLOCK_SMART_TEMPLATE,g_sCLASS_BLOCK_TOKEN]);
$detached.find(selector).removeAttr(g_sATTRIBUTE_INITIALIZING).removeAttr(g_sATTRIBUTE_REFRESHING).removeAttr(g_sATTRIBUTE_REFRESH_SMART_TEMPLATES).removeAttr(g_sATTRIBUTE_REFRESH_TOKENS).removeAttr(g_sATTRIBUTE_SILENTREFRESH);
$detached.find("."+g_sCLASS_INFOCUS).removeClass(g_sCLASS_INFOCUS);
$detached.find("."+g_sCLASS_SIBLING).removeClass(g_sCLASS_SIBLING);
$detached.find("."+g_sCLASS_ACTIONELEMENT).removeClass(g_sCLASS_ACTIONELEMENT);
});
var onUndoRedo=function(){editor.execCommand(DDCMD_REMOVEFLOATINGIMGS);
editor.focus();
};
var undoCmd=editor.getCommand("undo");
if(undoCmd){undoCmd.on("afterUndo",onUndoRedo);
}var redoCmd=editor.getCommand("redo");
if(redoCmd){redoCmd.on("afterRedo",onUndoRedo);
}};
})();
CKEDITOR.plugins.add("cernhover",{lang:"en,en-gb,de,fr,es,pt-br",requires:"divarea,cerngetxhtml",init:function(editor){if(typeof CernHoverHandler==="undefined"){CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("plugins/cernhover/js/HoverHandler.js"));
}var hoverHandler=new CernHoverHandler(editor);
var iPref=-1;
if(typeof CKEDITOR.PreferenceHelper!=="undefined"&&typeof CKEDITOR.PreferenceHelper.Preference!=="undefined"){iPref=!(CKEDITOR.PreferenceHelper.Preference("pvNotes.NoStrikeThrough"));
}hoverHandler.setAllowStrike(iPref);
editor.addCommand(DDCMD_INSERTFREETEXT,{editorFocus:false,canUndo:true,exec:function(editor,oElement){if(!hoverHandler.getDisablePlugin()){hoverHandler.insertFreeText(oElement);
}this.fire("afterddinsertfreetext");
}});
editor.addCommand(DDCMD_UPDATEIMGPOSITION,{editorFocus:false,canUndo:false,exec:function(editor){hoverHandler.adjustSectionImagePositions();
}});
editor.addCommand(DDCMD_REMOVEELEMENT,{editorFocus:false,canUndo:false,exec:function(editor,oElement){if(!hoverHandler.getDisablePlugin()){hoverHandler.removeElement(oElement);
}if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){editor.editable().$.setActive();
}editor.editable().$.focus();
editor.fire("afterddremovesection");
}});
editor.addCommand(DDCMD_REMOVEFLOATINGIMGS,{editorFocus:false,canUndo:false,exec:function(editor){hoverHandler.clearBordersAndFocusFullDoc();
}});
editor.addCommand("disableHover",{editorFocus:false,canUndo:false,exec:function(){hoverHandler.setDisablePlugin(true);
}});
editor.addCommand("enableHover",{editorFocus:false,canUndo:false,exec:function(){hoverHandler.setDisablePlugin(false);
}});
var onContentDom=function(){hoverHandler.contentDomHandler();
};
var instanceReadyHandler=function(){hoverHandler.instanceReadyHandler();
};
editor.on("contentDom",onContentDom);
editor.on("instanceReady",instanceReadyHandler);
editor.on("refreshingElement",function(){hoverHandler.clearBordersAndFocusFullDoc();
});
editor.on("beforeCommandExec",function(event){if(DDCMD_SAVE==event.data.name||DDCMD_SAVECLOSE==event.data.name||DDCMD_SIGN==event.data.name||DDCMD_DQR==event.data.name){editor.execCommand(DDCMD_REMOVEFLOATINGIMGS);
}});
editor.registerDirtyFilter&&editor.registerDirtyFilter(function(frag){$(frag.firstChild).find("."+g_sCLASS_INFOCUS).removeClass(g_sCLASS_INFOCUS);
$(frag.firstChild).find("."+g_sCLASS_SIBLING).removeClass(g_sCLASS_SIBLING);
$(frag.firstChild).find("."+g_sCLASS_ACTIONELEMENT).removeClass(g_sCLASS_ACTIONELEMENT);
});
}});
CKEDITOR.plugins.add("cerndirty",{requires:["cerngetxhtml"],init:function(editor){var m_cachedContentText=null;
var getSanitizedEditorHtml=function(){var editableContentEl=editor.editable().$;
var innerHtml=editor.cleanContribution(editableContentEl).innerHTML;
var xhtml=editor.dataProcessor.toDataFormat(innerHtml);
var sanitizedXhtml=xhtml.replace(/[\b\f\n\r\t]/gim,"");
return sanitizedXhtml;
};
editor.saveEditorSnapshot=function(){m_cachedContentText=getSanitizedEditorHtml();
};
editor.isEditorDirty=function(){var sanitizedHtml=getSanitizedEditorHtml();
if(sanitizedHtml===m_cachedContentText){return false;
}else{return true;
}};
}});
if(!window.PROJECT_NAME){window.PROJECT_NAME="DynDocCKEditor";
}(function(){function isDocComp(element){var $element=$(element);
return $element.attr(g_sATTRIBUTE_CONTENTTYPE)===g_sEMR_CONTENT_TYPE_DOC_COMP;
}function setRefreshingState(editor,newState){var beforeState=editor.refreshState;
editor.refreshState=newState;
if(beforeState!==editor.refreshState){editor.fire("refreshStateChange",{oldState:beforeState,newState:editor.refreshState});
}}CKEDITOR.plugins.add("cernrefresh",{init:function(editor){var plugin=this;
editor.pendingRefresh={};
editor.refreshState="stable";
editor.isElementRefreshing=function(element){return plugin.isElementRefreshing(this,element);
};
editor.addCommand(DDCMD_REFRESHELEMENT,{editorFocus:false,canUndo:false,exec:function(editor,data){var element=data.nodeType?data:data.element;
var $element=$(element);
var $elements=$element.is(".ddemrcontent")?$element:$element.find(".ddemrcontent:not(.ddemrcontent .ddemrcontent)");
var type=data.type||g_sATTRIBUTE_REFRESHING;
var refreshTemplates=typeof data.refreshTemplates==="undefined"?true:data.refreshTemplates;
$elements.sort(function(a,b){return isDocComp(a)?-1:isDocComp(b)?1:0;
});
var cancelAll=false;
$elements.each(function(_,element){var bSilent=!!data.silentRefresh;
var bKontinueRefresh=true;
var bRecursiveRefresh=false;
var data2=$.extend({},data,{activityId:$element.attr("id"),element:element,type:type,stopElementRefresh:function(){bKontinueRefresh=false;
},cancel:function(){cancelAll=true;
},enableRecursiveRefresh:function(){bRecursiveRefresh=true;
}});
editor.fire("preRefreshEmrContent",data2);
if(cancelAll){return false;
}if(bKontinueRefresh){return this.refreshEmrContent(editor,element,type,bSilent,bRecursiveRefresh,data.tagIds||[],data.activityCallback,data.success,data.fail);
}}.bind(this));
if(refreshTemplates&&!cancelAll){var $smartTemplates=$element.is(".blocksmarttemplate")?$element:$element.find(".blocksmarttemplate");
$smartTemplates.each(function(_,element){if(document.body.contains(element)){this.refreshSmartTemplate(editor,element,data.fail);
}}.bind(this));
if($element.is(".blockcntemplate")){this.loadStandardTemplate(editor,element);
}var $textTokens=$element.is(".blocktoken")?$element:$element.find(".blocktoken");
$textTokens.each(function(_,element){if(document.body.contains(element)){this.refreshTextToken(editor,element);
}}.bind(this));
}}.bind(this)});
editor.on("change",function(){for(var id in editor.pendingRefresh){if(!editor.pendingRefresh.hasOwnProperty(id)){continue;
}if(!document.getElementById(id)){this.removePending(editor,id);
}}},this);
editor.on("beforeSetEmrContent",function(event){var $placeholder=$("#"+event.data.activityId);
var $contentElement=$(event.data.contentElement);
if($placeholder.attr("dd:contenttype")==="DXORDERS"){DDCOMMON.LegacyContentFixers.fixBadDxOrders($contentElement[0]);
}});
var dirtyFilter=function(frag){$(frag).find(".ddemrcontent,.ddemrcontentitem,.blockcntemplate,.blocksmarttemplate,.blocktoken,.ddfreetext").each(function(){$(this).removeAttr("id");
$(this).removeAttr("dd:extractkey");
});
};
if(editor.registerDirtyFilter){editor.registerDirtyFilter(function(frag){dirtyFilter(frag.firstChild);
});
}},refreshEmrContent:function(editor,element,type,bSilent,bRecursiveRefresh,tagIds,activityCallback,successCallback,failCallback){var $element=$(element);
element=$element[0];
var sOldHtml=$element.html();
$element.attr("id",CKEDITOR.DocUtilsHelper.GenerateGUID());
if(activityCallback){activityCallback($element[0]);
}var sQueryByFilter=$element.attr("dd:querybyfilter");
var bQueryByFilter=typeof sQueryByFilter==="undefined"?true:DDCOMMON.stringToBoolean(sQueryByFilter);
var bQueryById=!bQueryByFilter;
this.setLoading(editor,element,type);
var req={patient_id:CKEDITOR.dPatientId,encounter_id:CKEDITOR.dNoteEncounterId||0,dd_ref_content_uuid:$element.attr(g_sATTRIBUTE_REFERENCEUUID),user_tz:CKEDITOR.lUserTimezone,workflow_id:CKEDITOR.dWorkflowId||0,workflow_component_concept:$element.attr(g_sATTRIBUTE_CONCEPT),ppr_Cd:CKEDITOR.dPPRCd,query_by_id_ind:bQueryById?1:0,tagged_ids:$.map(tagIds,function(id){return{id:id};
}),session_id:CKEDITOR.dSessionId,user_id:CKEDITOR.dUserId,chart_encounter_id:CKEDITOR.dChartEncounterId,refreshing_ind:tagIds.length?0:1,workflow_component_concept_cki:$element.attr(g_sATTRIBUTE_CONCEPT_CKI)};
req=DDCOMMON.valueifyObject(req);
CKEDITOR.DocUtilsHelper.CallCRMAsync(SERVICE_TASK,969501,JSON.stringify(req),{activityId:$element.attr("id"),oldHtml:sOldHtml,complete:function(reply,obj){reply=JSON.parse(reply);
if(DDCOMMON.isStepSuccessful(reply)){$.extend(obj,reply);
this.setEmrContent(editor,obj);
if(bRecursiveRefresh){$element.find(".blocksmarttemplate,.blocktoken,.ddemrcontent").each(function(){editor.execCommand(DDCMD_REFRESHELEMENT,{element:this});
});
}if(successCallback){successCallback(obj.activityId);
}}else{DocHandleError("Error while loading EMR content:  "+JSON.stringify(reply&&reply.status_data),PROJECT_NAME);
if(failCallback){failCallback(obj.activityId);
}editor.fire("refreshEmrFail",{activityId:obj.activityId});
this.setPlaceholderContent(editor,"#"+obj.activityId,obj.oldHtml||"");
}}.bind(this),callError:function(obj){if(failCallback){failCallback(obj.activityId);
}editor.fire("refreshEmrFail",{activityId:obj.activityId});
this.setPlaceholderContent(editor,"#"+obj.activityId,obj.oldHtml||"");
}.bind(this)});
},refreshTemplate:function(editor,element,failCallback){var $element=$(element);
$element.attr("id",CKEDITOR.DocUtilsHelper.GenerateGUID());
var sTemplateCki=$element.attr(g_sATTRIBUTE_TEMPLATE_CKI);
if(!sTemplateCki){return;
}var req={patient_id:CKEDITOR.dPatientId,encntr_id:CKEDITOR.dNoteEncounterId||0,template_cki:sTemplateCki,format_cd:CKEDITOR.DocUtilsHelper.GetCodeValueByMeaning(23,"HTML")};
req=DDCOMMON.valueifyObject(req);
this.setLoading(editor,element);
function handleError(obj){this.setPlaceholderContent(editor,"#"+obj.activityId,"");
if(failCallback){failCallback(obj.activityId);
}editor.fire("refreshTemplateFail",{activityId:obj.activityId});
}CKEDITOR.DocUtilsHelper.CallCRMAsync(SERVICE_TASK,969555,JSON.stringify(req),{activityId:$element.attr("id"),complete:function(reply,obj){reply=JSON.parse(reply);
if(DDCOMMON.isStepSuccessful(reply)){$.extend(obj,reply);
obj.template_text=CKEDITOR.DocUtilsHelper.CleanHtml(obj.template_text,1);
var $element=$("#"+obj.activityId);
if($element.length===0){DocHandleError("refreshTemplate on complete - element not found",PROJECT_NAME);
return;
}this.setPlaceholderContent(editor,$element,obj.template_text);
}else{handleError.call(this,obj);
DocHandleError("Error while loading template:  "+JSON.stringify(reply&&reply.status_data),PROJECT_NAME);
}}.bind(this),callError:handleError.bind(this)});
},refreshSmartTemplate:function(editor,element,failCallback){return this.refreshTemplate(editor,element,failCallback);
},loadStandardTemplate:function(editor,element){return this.refreshTemplate(editor,element);
},refreshTextToken:function(editor,element){var $element=$(element);
$element.attr("id",CKEDITOR.DocUtilsHelper.GenerateGUID());
var sToken=$element.attr(g_sATTRIBUTE_TOKEN);
if(!sToken){return;
}this.setLoading(editor,element);
CKEDITOR.DocUtilsHelper.RefreshTextToken(sToken,CKEDITOR.dPatientId,CKEDITOR.dChartEncounterId,{activityId:$element.attr("id"),complete:function(responseHtml,obj){var $element=$("#"+obj.activityId);
if($element.length===0){DocHandleError("refreshTextToken on complete - element not found",PROJECT_NAME);
return;
}this.setPlaceholderContent(editor,$element,CKEDITOR.DocUtilsHelper.CleanHtml(responseHtml,1));
}.bind(this)});
},setEmrContent:function(editor,content){var $tmp=$("<div>").html(content.html_text);
var $element=$("#"+content.activityId);
if($element.length===0){DocHandleError("setEmrContent - Cannot find element by content guid "+content.activityId,"DynDocCKEditor");
return;
}var bIsContent=$element.is(".ddemrcontent,.blockcntemplate,.blocksmarttemplate,.blocktoken");
if(!bIsContent){DocHandleError("setEmrContent - "+content.activityId+" section is not ddemrcontent, blockcntemplate, blocksmarttemplate, or blocktoken.","DynDocCKEditor");
return;
}if(DDCOMMON.getAttributeBoolean($element[0],g_sATTRIBUTE_REFRESHING)&&isDocComp($element[0])){var bIsSimpleEmrContent=$tmp.find(".ddemrcontentitem .ddemrcontentitem").length===0;
if(bIsSimpleEmrContent){var fEntityId=parseFloat($tmp.find(".ddemrcontentitem").attr("dd:entityid"));
if(fEntityId==0&&content.oldHtml){$tmp.html(content.oldHtml);
}}}if(DDCOMMON.getAttributeBoolean($element[0],g_sATTRIBUTE_INITIALIZING)&&$element.attr("dd:contenttype")==="DOC_COMP"){var $emrContent=$tmp.find(".ddemrcontent");
if($emrContent.length){var contentTypes=$emrContent.map(function(){return $(this).attr("dd:contenttype");
}).get().join();
if(typeof DocUtilsHelper!=="undefined"&&typeof DocUtilsHelper.LogCheckpoint2!=="undefined"){CKEDITOR.DocUtilsHelper.LogCheckpoint2(g_sDYNDOC_CKPT_DOC_COMP_REFRESH_WITH_EMRCONTENT,g_sDYNDOC_CKPT_SUBEVENT_CHECK,"DynDocResource","setEmrContent","concept_cki: "+$element.attr(g_sATTRIBUTE_CONCEPT_CKI),"content_type: "+contentTypes,"");
}}}var $old=$("<div>").html(content.oldHtml);
var $oldFreetexts=$old.find(".ddfreetext");
$oldFreetexts.each(function(){var $oldFreetext=$(this);
if($oldFreetext[0].getAttribute("dd:discardusertext")){if($oldFreetext[0].getAttribute("dd:discardusertext").toLowerCase()==="true"){return;
}}if($oldFreetext.closest(".ddcomponent,.ddemrcontentitem").is(".ddcomponent")||$element.attr("dd:contenttype")==="DOC_COMP"){return;
}if($.trim($oldFreetext.html())){var sEntityId;
var bMultipleEmrContentItems=false;
var $emrContentItem=$oldFreetext.closest(".ddemrcontentitem");
if($emrContentItem.length===1){sEntityId=$emrContentItem.attr(g_sATTRIBUTE_ENTITYID);
}else{sEntityId=$oldFreetext.prev(".ddemrcontentitem").attr(g_sATTRIBUTE_ENTITYID);
bMultipleEmrContentItems=true;
}if(sEntityId){var $newFreetexts=$tmp.find("[dd\\:entityid="+sEntityId+"] .ddfreetext");
if($newFreetexts.length===0){var $contentWithoutFreetext=$tmp.find("[dd\\:entityid="+sEntityId+"]");
if(bMultipleEmrContentItems){var $ddgrouper=$contentWithoutFreetext.closest(".ddgrouper");
if($ddgrouper.length){editor.execCommand(DDCMD_INSERTFREETEXT,$ddgrouper[0]);
$ddgrouper.find(".ddfreetext").html($oldFreetext.html());
}else{DocHandleError("setEmrContent - ddgrouper not found for ddemrcontentitem element","DynDocCKEditor");
}}else{editor.execCommand(DDCMD_INSERTFREETEXT,$contentWithoutFreetext[0]);
$contentWithoutFreetext.find(".ddfreetext").html($oldFreetext.html());
}}else{$newFreetexts.each(function(){var $newFreetext=$(this);
if($newFreetext[0].getAttribute("dd:refreshid")===$oldFreetext[0].getAttribute("dd:refreshid")){$newFreetext.html($oldFreetext.html());
}});
}}}});
editor.fire("beforeSetEmrContent",{activityId:content.activityId,contentElement:$tmp[0]});
this.setPlaceholderContent(editor,$element,$tmp.html());
if(content.extract_key){$element.attr(g_sATTRIBUTE_EXTRACTKEY,content.extract_key);
}$element.find(".ddemrcontentitem,.blockcntemplate,.blocksmarttemplate,.blocktoken,.ddfreetext").each(function(){if(!this.id){this.id=CKEDITOR.DocUtilsHelper.GenerateGUID();
}});
if(DDCOMMON.getAttributeBoolean($element[0],g_sATTRIBUTE_REFRESH_SMART_TEMPLATES)){}if(DDCOMMON.getAttributeBoolean($element[0],g_sATTRIBUTE_REFRESH_TOKENS)){}var $refreshDocComp=$(editor.editable().$).find(".refreshDocComp");
$refreshDocComp.removeClass("refreshDocComp");
editor.fire("updateSnapshot");
$refreshDocComp.addClass("refreshDocComp");
},setLoading:function(editor,element,type){var $img=$("<img>").attr({unselectable:"on",src:CKEDITOR.getUrl("images/loading.gif")});
var $element=$(element);
$element.empty().append($img);
$element.attr(type||g_sATTRIBUTE_REFRESHING,"true");
$element.parents("[contenteditable=true]").addBack("[contenteditable]").removeAttr("contenteditable");
editor.pendingRefresh[element.id]=1;
setRefreshingState(editor,"refreshing");
editor.fire("refreshingElement",{activityId:element.id});
},setPlaceholderContent:function(editor,element,html){var $element=$(element);
if($element.length===0){return;
}$element.html(html);
$element.find("title").remove();
DDCOMMON.removeAllPreWrap($element[0]);
DDCOMMON.removeCommentNodes($element[0]);
$element.html($element.html());
$element.removeAttr(g_sATTRIBUTE_INITIALIZING).removeAttr(g_sATTRIBUTE_REFRESHING);
this.removePending(editor,$element.attr("id"));
var $freetext=$element.closest(".ddfreetext");
if(!this.isElementRefreshing(editor,$freetext[0])){$freetext.attr("contentEditable","true");
}$element.find(".ddfreetext").addBack(".ddfreetext").attr("contentEditable","true").each(function(_,ddfreetext){$(ddfreetext).attr("id",CKEDITOR.DocUtilsHelper.GenerateGUID());
});
this.fireContentLoaded(editor,$element.attr("id"));
editor.fire("updateSnapshot");
},fireContentLoaded:function(editor,activityId){editor.fire(DDCMD_CONTENTHTMLLOADED,{activityGuids:[activityId],activityId:activityId,items:[document.getElementById(activityId)]});
},removePending:function(editor,id){delete editor.pendingRefresh[id];
if(Object.keys(editor.pendingRefresh).length===0){setRefreshingState(editor,"stable");
}},isElementRefreshing:function(editor,element){if(!element){return false;
}if(editor.pendingRefresh[element.id]){return true;
}for(var id in editor.pendingRefresh){if(!editor.pendingRefresh.hasOwnProperty(id)){continue;
}if($("#"+id).closest(element).length>0){return true;
}}return false;
}});
})();
CKEDITOR.plugins.add("mpagedirtyfilters",{requires:["cerngetxhtml"],init:function(editor){editor.addCommand(DDCMD_SANITIZECONTENT,{editorFocus:false,canUndo:false,exec:function(editor,oElement){DDCOMMON.removeAllPreWrap(oElement);
DDCOMMON.removeCommentNodes(oElement);
this.fire("ddaftersanitizecontent");
}});
var dirtyFilter=function(frag){$(frag).find(".ddfreetext").each(function(){$(this).removeAttr("contenteditable");
});
};
if(editor.registerDirtyFilter){editor.registerDirtyFilter(function(frag){dirtyFilter(frag.firstChild);
});
}}});
(function(){function zebraStripeTable($tableToStripe){var sStripeColor=$tableToStripe.attr("dd:zebrastripecolor");
var sHeaderColor=$tableToStripe.attr("dd:zebraheadercolor");
if(sStripeColor){$tableToStripe.children("tbody").children("tr").css("background-color","");
$tableToStripe.children("tbody").children("tr").find(".ddfreetext").css("background-color","");
$tableToStripe.children("tbody").children("tr:odd").css("background-color",sStripeColor);
$tableToStripe.children("tbody").children("tr:odd").find(".ddfreetext").css("background-color",sStripeColor);
}if(sHeaderColor){$tableToStripe.find("th").css("background-color",sHeaderColor);
}}CKEDITOR.plugins.add("cernzebrastripe",{init:function(editor){editor.on(DDCMD_CONTENTHTMLLOADED,function(evt){var $tablesToStripe=$(document.getElementById(evt.data.activityId)).find("table[dd\\:zebrastripecolor]");
$tablesToStripe.each(function(){var $tableToStripe=$(this);
zebraStripeTable($tableToStripe);
});
if($tablesToStripe.length>0){editor.fire("updateSnapshot",{force:true});
}});
editor.on("elementRemoved",function(evt){var $tableToStripe=$(evt.data.previousParent).closest("table");
zebraStripeTable($tableToStripe);
});
editor.on("paste",function(evt){if(evt.data.type==="html"){var $pasteData=$("<div>").html(evt.data.dataValue);
$pasteData.find("table[dd\\:zebrastripecolor]").each(function(){var $tableToStripe=$(this);
zebraStripeTable($tableToStripe);
});
evt.data.dataValue=$pasteData.html();
}},null,null,10);
editor.on("droppingTag",function(evt){var $tablesToStripe=evt.data.tagElement.children("table");
$tablesToStripe.each(function(){var $tableToStripe=$(this);
zebraStripeTable($tableToStripe);
});
});
editor.on("noteLoaded",function(evt){$("table[dd\\:zebrastripecolor]").each(function(){var $tableToStripe=$(this);
zebraStripeTable($tableToStripe);
});
});
}});
})();
