function thmo(evt,n){evt=evt||window.event;
var s=n.style,p=getPosition(evt),top=p.y+30,left=p.x+20;
n._ps=n.previousSibling;
n.thmo=true;
function hover(){if(n.thmo==true){document.body.appendChild(n);
s.display="block";
s.left=left+"px";
s.top=top+"px";
n.show=true;
}}n.timer=setTimeout(hover,500);
}function thmm(evt,n){if(!n.show){return;
}var s=n.style,p=getPosition(evt),vp=gvs(),so=gso(),left=p.x+20,top=p.y+20;
if(left+n.offsetWidth>vp[1]+so[1]){left=left-40-n.offsetWidth;
if(left<0){left=0;
}}if(top+n.offsetHeight>vp[0]+so[0]){if(top-40-n.offsetHeight<so[0]){if(left>0){top=10+so[0];
}}else{top=top-40-n.offsetHeight;
}}evt=evt||window.event;
s.top=top+"px";
s.left=left+"px";
}function thmt(evt,n){n.thmo=false;
if(!n._ps){n._ps=n.previousSibling;
}clearTimeout(n.timer);
evt=evt||window.event;
n.style.display="";
if(n._ps){Util.ia(n,n._ps);
}n.show=false;
}function ths(e,n){var priorBgColor=e.style.backgroundColor;
var priorBorderColor=e.style.borderColor;
if(n&&n.tagName=="DIV"){e.onmouseenter=function(evt){e.onmouseover=null;
e.onmouseout=null;
thmo(evt,n);
};
e.onmouseover=function(evt){e.style.backgroundColor="#FFFFCC";
e.style.borderColor="#CCCCCC";
thmo(evt,n);
};
e.onmousemove=function(evt){e.style.backgroundColor="#FFFFCC";
e.style.borderColor="#CCCCCC";
thmm(evt,n);
};
e.onmouseout=function(evt){e.style.backgroundColor=priorBgColor;
e.style.borderColor=priorBorderColor;
thmt(evt,n);
};
e.onmouseleave=function(evt){e.style.backgroundColor=priorBgColor;
e.style.borderColor=priorBorderColor;
e.onmouseover=null;
e.onmouseout=null;
thmt(evt,n);
};
Util.Style.acss(n,"hover");
}}function RadiationDoseComponentStyle(){this.initByNamespace("raddose");
}RadiationDoseComponentStyle.inherits(ComponentStyle);
function RadiationDoseComponent(criterion){this.setComponentLoadTimerName("USR:MPG.RADDOSE.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.RADDOSE.O1 - render component");
this.setStyles(new RadiationDoseComponentStyle());
this.setIncludeLineNumber(true);
this.setLookBackDropDown(true);
CERN_EventListener.addListener(this,EventListener.EVENT_CLINICAL_EVENT,this.InsertData,this);
this.modality1Params=[];
this.modality1Cd=0;
this.modality2Params=[];
this.modality2Cd=0;
this.modality3Params=[];
this.modality3Cd=0;
this.modality4Params=[];
this.modality4Cd=0;
this.modality5Params=[];
this.modality5Cd=0;
this.modality6Params=[];
this.modality6Cd=0;
this.modality7Params=[];
this.modality7Cd=0;
this.setCriterion(criterion);
}RadiationDoseComponent.prototype=new MPageComponent();
RadiationDoseComponent.prototype.constructor=MPageComponent;
RadiationDoseComponent.prototype.loadFilterMappings=function(){this.addFilterMappingObject("MODALITY_1_CD",{setFunction:this.SetModality1Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_1_PARAMS",{setFunction:this.SetModality1Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_2_CD",{setFunction:this.SetModality2Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_2_PARAMS",{setFunction:this.SetModality2Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_3_CD",{setFunction:this.SetModality3Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_3_PARAMS",{setFunction:this.SetModality3Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_4_CD",{setFunction:this.SetModality4Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_4_PARAMS",{setFunction:this.SetModality4Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_5_CD",{setFunction:this.SetModality5Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_5_PARAMS",{setFunction:this.SetModality5Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_6_CD",{setFunction:this.SetModality6Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_6_PARAMS",{setFunction:this.SetModality6Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_7_CD",{setFunction:this.SetModality7Cd,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("MODALITY_7_PARAMS",{setFunction:this.SetModality7Params,type:"ARRAY",field:"PARENT_ENTITY_ID"});
};
RadiationDoseComponent.prototype.SetModality1Params=function(modalityParams){this.modality1Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality1Cd=function(modalityCd){this.modality1Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality2Params=function(modalityParams){this.modality2Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality2Cd=function(modalityCd){this.modality2Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality3Params=function(modalityParams){this.modality3Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality3Cd=function(modalityCd){this.modality3Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality4Params=function(modalityParams){this.modality4Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality4Cd=function(modalityCd){this.modality4Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality5Params=function(modalityParams){this.modality5Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality5Cd=function(modalityCd){this.modality5Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality6Params=function(modalityParams){this.modality6Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality6Cd=function(modalityCd){this.modality6Cd=modalityCd;
};
RadiationDoseComponent.prototype.SetModality7Params=function(modalityParams){this.modality7Params=modalityParams;
};
RadiationDoseComponent.prototype.SetModality7Cd=function(modalityCd){this.modality7Cd=modalityCd;
};
RadiationDoseComponent.prototype.InsertData=function(){this.retrieveComponentData();
};
RadiationDoseComponent.prototype.retrieveComponentData=function(){var criterion=null;
var encntrOption="0.0";
var request=null;
var self=this;
var sendAr=null;
criterion=this.getCriterion();
encntrOption=(this.getScope()==2)?(criterion.encntr_id+".0"):"0.0";
sendAr=["^MINE^",criterion.person_id+".0",encntrOption,criterion.position_cd+".0",this.getLookbackUnits(),this.getLookbackUnitTypeFlag(),this.modality1Cd+".0",MP_Util.CreateParamArray(this.modality1Params,1),this.modality2Cd+".0",MP_Util.CreateParamArray(this.modality2Params,1),this.modality3Cd+".0",MP_Util.CreateParamArray(this.modality3Params,1),this.modality4Cd+".0",MP_Util.CreateParamArray(this.modality4Params,1),this.modality5Cd+".0",MP_Util.CreateParamArray(this.modality5Params,1),this.modality6Cd+".0",MP_Util.CreateParamArray(this.modality6Params,1),this.modality7Cd+".0",MP_Util.CreateParamArray(this.modality7Params,1),1];
request=new MP_Core.ScriptRequest(this,this.getComponentLoadTimerName());
request.setProgramName("MP_GET_RADDOSE_SUMMARY");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(this,request,function(reply){self.renderComponent(reply);
});
};
RadiationDoseComponent.prototype.renderComponent=function(reply){try{var component=this;
var recordData=reply.getResponse();
var raddoseHTML=[];
var codeArray=MP_Util.LoadCodeListJSON(recordData.CODES);
var personnelArray=MP_Util.LoadPersonelListJSON(recordData.PRSNL);
var no_results=" -- ";
var modalityArray=recordData.QUAL;
var modalityHeaderArray=recordData.MODALITY;
var countText=0;
var raddoseI18n=i18n.discernabu.raddose_o1;
var timerRenderComponent=MP_Util.CreateTimer(this.getComponentRenderTimerName(),this.getCriterion().category_mean);
try{if(recordData.STATUS_DATA.STATUS==="Z"){MP_Util.Doc.FinalizeComponent(MP_Util.HandleNoDataResponse(component.getStyles().getNameSpace(),""),component,countText);
return;
}else{if(recordData.STATUS_DATA.STATUS==="F"){MP_Util.Doc.FinalizeComponent(MP_Util.HandleErrorResponse(component.getStyles().getNameSpace(),""),component,"");
return;
}}raddoseHTML.push("<div class='",MP_Util.GetContentClass(component,recordData.LDATAROWCNT),"'>");
var viewPortWidth=window.innerWidth||document.body.clientWidth;
var facetColumnWidth=parseInt(viewPortWidth/(recordData.LMAXFACETSCNT+2));
facetColumnWidth=facetColumnWidth-10;
var orderableColumnWidth=((facetColumnWidth+facetColumnWidth))+"px";
facetColumnWidth=facetColumnWidth+"px";
var modalityQualIter=0;
var modalityQualSize=modalityArray.length;
var subsections=[];
var headerTables=[];
while(modalityQualIter<modalityQualSize){var rows=[];
var rowClass="odd";
var subsectionIndex=-1;
for(i=0,j=modalityHeaderArray.length;
i<j;
i++){if(modalityHeaderArray[i].DMODALITYCD===modalityArray[modalityQualIter].DMODALITYCD){var modalityHeader=modalityHeaderArray[i];
headerTables[i]=this.createTable(modalityHeader.FACETS_HEADERS,codeArray,facetColumnWidth,orderableColumnWidth);
subsections[i]=this.createSubSection();
subsectionIndex=i;
break;
}}if(subsectionIndex>=0){var modalityHeader=modalityHeaderArray[subsectionIndex];
var modalityObject=MP_Util.GetValueFromArray(modalityHeader.DMODALITYCD,codeArray);
for(var orderIter=0,ordersSize=modalityArray[modalityQualIter].ORDERS.length;
orderIter<ordersSize;
orderIter++){var order=modalityArray[modalityQualIter].ORDERS[orderIter];
var orderObject=MP_Util.GetValueFromArray(order.DORDERABLECD,codeArray);
for(var scanIter=0,scansSize=order.SCANS.length;
scanIter<scansSize;
scanIter++){var scan=order.SCANS[scanIter];
var personnel=MP_Util.GetValueFromArray(scan.DPERSONNELD,personnelArray);
var row=[];
var prsnlHvr=(personnel?personnel.fullName+" ":" ");
var dtHvr="";
if(scan.DTCREATEDDTTMO!==""){var dtTm=new Date();
dtTm.setISO8601(scan.DTCREATEDDTTMO);
dtHvr=MP_Util.DisplayDateByOption(component,dtTm);
}var hoverText="<div class='raddoseHover'><dl><dt><span>"+raddoseI18n.SCAN_PERSONNEL+"</span></dt><dd><span>"+prsnlHvr+"</span></dd><dt><span>"+raddoseI18n.SCAN_DTTM+"</span></dt><dd><span>"+dtHvr+"</span></dd><dt><span>"+raddoseI18n.DATA_SOURCE+"</span></dt><dd><span>"+(scan.NDICOMIND==1?"<span>"+raddoseI18n.DICOM+"</span>":"<span>"+raddoseI18n.MANUAL+"</span>")+"</span></dd><dt><span>"+raddoseI18n.ACCESSION+"</span></dt><dd><span>"+order.SACCESSION+"</span></dd></dl></div>";
if(scanIter===0){row.push(this.createTableCell(orderObject.display,hoverText,"",4,orderableColumnWidth));
}else{row.push(this.createTableCell("",hoverText,"",4,orderableColumnWidth));
}var facetSize=modalityHeader.FACETS_HEADERS.length;
var qualFacetsTrackIndex=0;
for(var facetIter=0;
facetIter<facetSize;
facetIter++){var headerFacet=modalityHeader.FACETS_HEADERS[facetIter];
var facetHeaderObject=MP_Util.GetValueFromArray(headerFacet.DFACETCD,codeArray);
if(facetHeaderObject&&facetHeaderObject.meaning==="BODYPART"){row.push(this.createTableCell(scan.SBODYPARTTXT,"","",4,facetColumnWidth));
}else{if(facetHeaderObject&&facetHeaderObject.meaning==="EFFECTDOSE"){row.push(this.createTableCell(scan.DEFFECTIVEDOSE,"",scan.SEFFECTIVEDOSEUOMTXT,3,facetColumnWidth));
}else{var qualFacetsIter=qualFacetsTrackIndex;
var found=false;
var facet;
while(qualFacetsIter<facetSize){facet=scan.FACETS[qualFacetsIter];
if(facet&&facet.DFACETCD===headerFacet.DFACETCD){found=true;
qualFacetsTrackIndex=qualFacetsIter;
break;
}qualFacetsIter++;
}if(found){var value=facet.VALUES[0];
if(facet.VALUES.length>1){row.push(this.createTableCell(raddoseI18n.MULTIPLE,"","",facet.LFACETTYPE,facetColumnWidth));
}else{if(value.DVALUE>0){row.push(this.createTableCell(value.DVALUE,"",value.SUNITOFMEASURETXT,facet.LFACETTYPE,facetColumnWidth));
}else{if(value.SVALUETEXT!==""){row.push(this.createTableCell(value.SVALUETEXT,"","",facet.LFACETTYPE,facetColumnWidth));
}else{row.push(this.createTableCell(no_results,"","",headerFacet.LFACETTYPE,facetColumnWidth));
}}}}else{row.push(this.createTableCell(no_results,"","",headerFacet.LFACETTYPE,facetColumnWidth));
}}}}if(rowClass==="odd"){rows.push(this.createTableRow(row.join(""),"odd"));
rowClass="even";
}else{rows.push(this.createTableRow(row.join(""),"even"));
rowClass="odd";
}}}var modalityOrderCnt=0;
modalityOrderCnt=modalityArray[modalityQualIter].ORDERS.length;
countText=countText+modalityOrderCnt;
headerTables[subsectionIndex]=headerTables[subsectionIndex].replace("{3}",rows.join(""));
headerTables[subsectionIndex]=headerTables[subsectionIndex].replace("{4}",this.createDoseTotalsRow(modalityArray[modalityQualIter],modalityObject));
subsections[subsectionIndex]=subsections[subsectionIndex].replace("{1}",modalityOrderCnt);
subsections[subsectionIndex]=subsections[subsectionIndex].replace("{2}",headerTables[subsectionIndex]);
subsections[subsectionIndex]=subsections[subsectionIndex].replace("{0}",modalityObject.display);
raddoseHTML.push(subsections[subsectionIndex]);
}modalityQualIter++;
}raddoseHTML.push("</div>");
component.applyTemplate("list-as-table");
var radDoseHTMLString=raddoseHTML.join("");
countText=MP_Util.CreateTitleText(component,countText);
MP_Util.Doc.FinalizeComponent(radDoseHTMLString,component,countText);
var raddoseTableRows=Util.Style.g("raddose-scan-row",component.getSectionContentNode(),"TR");
var hoverDivs=Util.Style.g("raddoseHover",component.getSectionContentNode(),"DIV");
for(var i=0,j=raddoseTableRows.length;
i<j;
i++){ths(raddoseTableRows[i],hoverDivs[i],component);
}}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}}catch(err){alert(err.description);
MP_Util.LogJSError(err,component,"raddose_O1.js","RenderRadiationDoseSummary");
}};
RadiationDoseComponent.prototype.createSubSection=function(){var subsec=["<div class='subsec'>","<h3 class ='sub-sec-hd'>","<span class='sub-sec-hd-tgl'>-</span><span class ='sub-sec-title'>{0} ({1})","</span>","</h3>","<div class='sub-sec-content'>","{2}","</div>","</div>"];
return subsec.join("");
};
RadiationDoseComponent.prototype.createTable=function(headerList,codeArray,facetColumnWidth,orderColumnWidth){var headerArray=[];
for(i=0,j=headerList.length;
i<j;
i++){var style="";
if(headerList[i].LFACETTYPE>=1&&headerList[i].LFACETTYPE<=3){style=" class='raddose-numericData' style='width:"+facetColumnWidth+"'";
}else{if(headerList[i].LFACETTYPE===4){style="class='raddose-stringData' style='width:"+facetColumnWidth+"'";
}}headerArray.push("<th ",style,">",MP_Util.GetValueFromArray(headerList[i].DFACETCD,codeArray).display,"</th>");
}var tableHeader=["<div class='content-hdr'><table class='raddose-table'>","<tr class='hdr'>","<th class='raddose-orderable' style='width:",orderColumnWidth,";'>","<span>",i18n.discernabu.raddose_o1.ORDERABLE,"</span></th>",headerArray.join(""),"</tr></table><div class='content-body'><table class='raddose-table'>{3}{4}</table></div></div>"];
return tableHeader.join("");
};
RadiationDoseComponent.prototype.createTableCell=function(cellContent,hover,uom,justify,width){var style="";
if(justify>=1&&justify<=3){style="class = 'raddose-numericData' style='width:"+width+"'";
}else{if(justify===4){style="class = 'raddose-stringData' style='width:"+width+"'";
}}var cellData=["<td ",style,">",hover,cellContent,(uom?"<span class='unit'>&nbsp;"+uom+"</span>":""),"</td>"];
return cellData.join("");
};
RadiationDoseComponent.prototype.createTableRow=function(cells,rowClass){var rowData=["<tr class='raddose-scan-row ",rowClass,"'>",cells,"</tr>"];
return rowData.join("");
};
RadiationDoseComponent.prototype.createDoseTotalsRow=function(modalityHeader,modalityObject){var doseTotalRow=[];
if(modalityObject&&modalityObject.meaning==="DOSE_CT"){var ctModality=modalityHeader;
doseTotalRow=["<tr><td colspan=13>","<span class='raddose-total'>",i18n.discernabu.raddose_o1.TOTAL_EFFECITIVE_DOSE,": <span class ='raddose-total-Result'>",ctModality.DTOTALEFFECTIVEDOSE,"</span>&nbsp;<span class='unit'>",ctModality.STOTALEFFECTIVEDOSEUOMTXT,"</span></span>"];
if(ctModality.DTOTALDLP){var dlprow=["<span class='raddose-total'>",i18n.discernabu.raddose_o1.TOTAL_DLP,": <span class ='raddose-total-Result'>",ctModality.DTOTALDLP,"</span>&nbsp;<span class='unit'>",ctModality.STOTALDLPUOMTXT,"</span></span>"];
doseTotalRow.push(dlprow.join(""));
}doseTotalRow.push("</td></tr>");
}return doseTotalRow.join("");
};
MP_Util.setObjectDefinitionMapping("RAD_DOSE",RadiationDoseComponent);
