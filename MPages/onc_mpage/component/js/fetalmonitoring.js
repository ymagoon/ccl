function FetalMonitoringComponentStyle(){this.initByNamespace("fm");
}FetalMonitoringComponentStyle.inherits(ComponentStyle);
function FetalMonitoringComponent(criterion){this.setCriterion(criterion);
this.setStyles(new FetalMonitoringComponentStyle());
this.setComponentLoadTimerName("USR:MPG.FetalMonitoringComponent.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.FetalMonitoringComponent.O1 - render component");
this.setResourceRequired(true);
FetalMonitoringComponent.method("InsertData",function(){CERN_FETAL_MONITORING_O1.GetFetalMonitoring(this);
});
FetalMonitoringComponent.method("HandleSuccess",function(recordData){CERN_FETAL_MONITORING_O1.RenderComponent(this,recordData);
});
FetalMonitoringComponent.method("RetrieveRequiredResources",function(){var patientGenderInfo=criterion.getPatientInfo().getSex();
var fmi18n=i18n.discernabu.fetalmonitoring_o1;
if(patientGenderInfo===null){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+fmi18n.GENDER_UNDEFINED+"</span></h3><span class='res-none'>"+fmi18n.GENDER_UNDEFINED+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,this,"(0)");
return;
}var pregInfoObj=null;
pregInfoObj=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoObj&&pregInfoObj.isResourceAvailable()){this.InsertData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}});
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.InsertData,this);
}FetalMonitoringComponent.inherits(MPageComponent);
var CERN_FETAL_MONITORING_O1=function(){return{GetFetalMonitoring:function(component){var criterion=component.getCriterion();
var fmi18n=i18n.discernabu.fetalmonitoring_o1;
var messageHTML="";
var pregInfoObj=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregnancyId=0;
var lookBackUnits=component.getLookbackUnits();
var lookBackUnitTypeFlag=component.getLookbackUnitTypeFlag();
var df=MP_Util.GetDateFormatter();
if(criterion.getPatientInfo().getSex().meaning!=="FEMALE"){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+fmi18n.NOT_FEMALE+"</span></h3><span class='res-none'>"+fmi18n.NOT_FEMALE+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
if(pregnancyId===-1){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+fmi18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+fmi18n.PREG_DATA_ERROR+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{if(!pregnancyId){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+fmi18n.NO_ACTIVE_PREG+"</span></h3><span class='res-none'>"+fmi18n.NO_ACTIVE_PREG+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,component,"(0)");
return;
}else{var sendAr=["^MINE^",criterion.person_id+".0",pregInfoObj.getLookBack(),lookBackUnits,lookBackUnitTypeFlag];
MP_Core.XMLCclRequestWrapper(component,"mp_get_fm_episodes",sendAr,true);
}}}}},RenderComponent:function(component,recordData){var df=MP_Util.GetDateFormatter();
var fmI18n=i18n.discernabu.fetalmonitoring_o1;
var fmArray=[];
var btnCnt=0;
var fmLen=recordData.EPISODES.length;
var compId=component.getComponentId();
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=pregInfoSR.getResourceData();
fmArray.push("<table><tr><td class='fm-indent'><input type='button' id='shwBtn",compId,"' class='show-button' disabled='true' value='",fmI18n.SHOW,"' ></td><td class='fm-disclaimer'>",fmI18n.SELECT_EPISODES,"</td></tr></table>");
fmArray.push("<dl class='fm-info-hdr'><dd class='fm-chk-hd'><span>&#160;</span></dd><dd class='fm-dt-hd'><span>",fmI18n.INITIAL,"</span></dd><dd class='fm-dt-hd'><span>",fmI18n.COMPLETE,"</span></dd><dd class='fm-res-hd'><span>",fmI18n.FETAL_EGA,"</span></dd><dd class='fm-res-hd'><span>",fmI18n.REASON_FOR_MONITORING,"</span></dd></dl>");
fmArray.push("<div class='",MP_Util.GetContentClass(component,fmLen),"'>");
var currentGestAge=pregInfoObj.getCalculatedEga();
var pregBeginDate=new Date();
pregBeginDate.setDate(pregBeginDate.getDate()-currentGestAge);
for(var i=0;
i<fmLen;
i++){var episode=recordData.EPISODES[i];
var initialDtDisplay=(episode.INITIAL_DT_TM)?df.formatISO8601(episode.INITIAL_DT_TM,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR):"--";
var completeDateDisplay=(episode.COMPLETE_DT_TM)?df.formatISO8601(episode.COMPLETE_DT_TM,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR):"--";
var fetalEGADisplay;
if(initialDtDisplay==="--"){fetalEGADisplay="--";
}else{var initialDt=new Date();
initialDt.setISO8601(episode.INITIAL_DT_TM);
var diffInDays=Math.ceil((initialDt.getTime()-pregBeginDate.getTime())/(1000*60*60*24));
var weeksDisp=Math.floor(diffInDays/7);
var daysDisp=diffInDays%7;
fetalEGADisplay=weeksDisp+" "+fmI18n.WEEKS+" "+daysDisp+" "+fmI18n.DAYS;
}fmArray.push("<dl class='fm-info'><dd class='fm-chk'><form name='cbform",i,"'><input type='checkbox' name='chk' id='",i,"' value='",episode.EPISODE_ID,"' class='fmCheck'></form></dd>","<dd class='fm-dt'><span>",initialDtDisplay,"</span></dd><dd class='fm-dt'><span>",completeDateDisplay,"</span></dd>","<dd class='fm-res'><span>",fetalEGADisplay,"</span></dd><dd class='fm-res'><span>",episode.REASON_FOR_MONITORING,"</dd></dl>");
}fmArray.push("</div>");
var countText=MP_Util.CreateTitleText(component,fmLen);
MP_Util.Doc.FinalizeComponent(fmArray.join(""),component,countText);
jQuery(".fmCheck").click(function(){if(this.id===""){return;
}var fmEpisodeList=Util.Style.g("fmCheck");
btnCnt=(fmEpisodeList[this.id].checked)?btnCnt+1:btnCnt-1;
document.getElementById("shwBtn"+compId).disabled=(btnCnt===0||btnCnt>3)?true:false;
});
jQuery(".show-button").click(function(){var episodeArray=[];
var fmList=Util.Style.g("fmCheck");
var formObject;
var selectedCnt=0;
for(var i=0,i1=fmList.length;
i<i1;
i++){if(fmList[i].checked){episodeArray[selectedCnt++]=fmList[i].value;
}}try{MP_Util.LogDiscernInfo(component,"PREGNANCY","fetalmonitoring.js","RenderComponent");
formObject=window.external.DiscernObjectFactory("PREGNANCY");
}catch(err){MP_Util.LogError(fmI18n.ERROR_CREATING_PREG_OBJ+err.name+" "+err.message);
return;
}if(!formObject){MP_Util.LogError(fmI18n.FAILED_TO_CREATE_PREG_OBJ);
return;
}var success=false;
try{success=formObject.LaunchFetalMonitoring(component.getCriterion().person_id,episodeArray);
if(!success){MP_Util.LogError(fmI18n.ERROR_CALLING_FM);
}}catch(err2){MP_Util.LogError(fmI18n.PREG_ACTION_FAILURE+" - "+err2.name+" - "+err2.message);
}formObject=null;
});
}};
}();
