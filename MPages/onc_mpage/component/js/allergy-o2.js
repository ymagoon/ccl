function AllergyComponentWFStyle(){this.initByNamespace("wf_al");
}AllergyComponentWFStyle.prototype=new ComponentStyle();
AllergyComponentWFStyle.prototype.constructor=ComponentStyle;
function AllergyComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new AllergyComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.ALLERGY.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.ALLERGY.O2 - render component");
this.setIncludeLineNumber(true);
this.setScope(1);
this.resultCount=0;
this.cancelStatusCd=0;
this.isCancelled=false;
this.pendingReactionList=[];
this.m_interopAllergies=[];
this.m_chartedAllergies=[];
this.m_interopCodesArr=[];
this.m_codesArray=[];
this.mandatoryItemsEntryList=[];
this.m_sidePanel=null;
this.m_showPanel=false;
this.m_sidePanelContainer=null;
this.m_clickedRow=null;
this.m_hiDataValid=false;
this.m_processedHiDataObject=[];
this.m_panelElementData={};
this.aliasType="";
this.aliasPool=0;
this.hiTestURI="";
this.hiLookUpKey="";
this.m_hiHasData=false;
this.m_hiData=null;
this.m_hiTotalResults=0;
this.m_hiCurrentPage=0;
this.m_hiPager=null;
this.pageIndex=0;
this.m_addSidePanelFlag=false;
this.m_actionabilityPriv=false;
this.m_viewOutsideRecordsPref=false;
this.displayHiDataInd=false;
this.m_allergyFreeTextStatusPriv=3;
this.m_markAsReviewedPriv=0;
this.mfaBannerHtml="";
}AllergyComponentWF.prototype=new MPageComponent();
AllergyComponentWF.prototype.constructor=MPageComponent;
AllergyComponentWF.prototype.openTab=function(){var criterion=this.getCriterion();
this.criterion=criterion;
var sParms="/PERSONID="+criterion.person_id+" /ENCNTRID="+criterion.encntr_id+" /FIRSTTAB=^"+this.getLink()+"+^";
APPLINK(0,criterion.executable,sParms);
};
AllergyComponentWF.prototype.setActionabilityPriv=function(value){this.m_actionabilityPriv=(value==1?true:false);
};
AllergyComponentWF.prototype.getActionabilityPriv=function(){return this.m_actionabilityPriv;
};
AllergyComponentWF.prototype.setMarkAsReviewedPriv=function(value){this.m_markAsReviewedPriv=value;
};
AllergyComponentWF.prototype.getMarkAsReviewedPriv=function(){return this.m_markAsReviewedPriv;
};
AllergyComponentWF.prototype.setAllergyFreeTextStatusPriv=function(status){this.m_allergyFreeTextStatusPriv=status;
};
AllergyComponentWF.prototype.getAllergyFreeTextStatusPriv=function(){return this.m_allergyFreeTextStatusPriv;
};
AllergyComponentWF.prototype.setOutsideRecordsPref=function(value){this.m_viewOutsideRecordsPref=value;
};
AllergyComponentWF.prototype.getOutsideRecordsPref=function(){return this.m_viewOutsideRecordsPref;
};
AllergyComponentWF.prototype.preProcessing=function(){var docI18n=i18n.discernabu.allergy_o2;
var criterion=this.getCriterion();
var mfaStatus=4;
var self=this;
var resourceName=criterion.category_mean+"pageLevelFilters";
var pageLevelFilters=MP_Resources.getSharedResource(resourceName);
if(pageLevelFilters&&pageLevelFilters.isResourceAvailable()){var plFilters=pageLevelFilters.getResourceData();
var plFiltersLen=plFilters.length;
if(plFiltersLen){for(var index=0;
index<plFiltersLen;
index++){var filterObj=plFilters[index];
switch(filterObj.F_MN){case"WF_HI_LOOKUP_KEY":this.setHILookupKey(filterObj.VALS[0].FTXT);
break;
case"WF_HI_ALIAS_TYPE":this.setAliasType(filterObj.VALS[0].FTXT);
break;
case"WF_HI_ALIAS_POOL_CD":this.setAliasPoolCd(filterObj.VALS[0].PE_ID);
break;
}}}}if(this.getExternalDataInd()){this.performMFA();
}};
AllergyComponentWF.prototype.performMFA=function(){var mfaData={};
var authStatus=new Mfa_Auth().RetrieveMfaAuthStatus();
if(authStatus.isResourceAvailable()){var authStatusData=authStatus.getResourceData();
if(authStatusData){mfaData=authStatusData;
if(mfaData.status!==0&&mfaData.status!==5){this.renderMfaBanner(mfaData);
this.setExternalDataInd(false);
}}}else{mfaData={status:4,message:i18n.discernabu.mfa_auth.MFA_ERROR_MESSAGE};
this.renderMfaBanner(mfaData);
this.setExternalDataInd(false);
}this.auditMfaEvent(mfaData.status);
};
AllergyComponentWF.prototype.auditMfaEvent=function(status){var criterion=this.getCriterion();
var providerID=criterion.provider_id+".0";
var dateFormatter=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var dateTime=new Date();
dateTime=dateFormatter.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
var mpEventAudit=new MP_EventAudit();
mpEventAudit.setAuditMode(0);
mpEventAudit.setAuditEventName("MPD_ALLERGIES_MFA_ATTEMPT");
mpEventAudit.setAuditEventType("SECURITY");
mpEventAudit.setAuditParticipantType("PERSON");
mpEventAudit.setAuditParticipantRoleCd("PROVIDER");
mpEventAudit.setAuditParticipantIDType("PROVIDER_NUMBER");
mpEventAudit.setAuditParticipantID(providerID);
mpEventAudit.setAuditParticipantName("STATUS="+status+";DATE="+dateTime);
mpEventAudit.addAuditEvent();
mpEventAudit.submit();
};
AllergyComponentWF.prototype.renderMfaBanner=function(mfaStatus){var docI18n=i18n.discernabu.allergy_o2;
var mfaBanner=new MPageUI.AlertBanner();
var mfaBannerHTML='<div id="mfa-banner-container">';
if(mfaStatus.status===2||mfaStatus.status===3){mfaBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.INFO);
}else{mfaBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
}mfaBanner.setPrimaryText(mfaStatus.message);
mfaBanner.setSecondaryText(docI18n.MFA_SECONDARY_ERROR_TXT);
mfaBannerHTML=mfaBannerHTML+mfaBanner.render();
mfaBannerHTML=mfaBannerHTML+"</div>";
this.mfaBannerHtml=mfaBannerHTML;
};
AllergyComponentWF.prototype.postProcessing=function(){MPageComponent.prototype.postProcessing.call(this);
if(this.resultCount===0){CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:0});
}};
AllergyComponentWF.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_PAT_ENTERED_ALLERGY",{setFunction:this.setPatientEnteredDataInd,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_ALLERGY_EXT_DATA_IND",{setFunction:this.setExternalDataInd,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_ALLERGY_EXT_DATA_TEST_URI",{setFunction:this.setHITestUri,type:"STRING",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_ALLERGY_ACTIONS",{setFunction:this.setActionabilityPriv,type:"BOOLEAN",field:"FREETEXT_DESC"});
};
AllergyComponentWF.prototype.buildReaction=function(reactionArray,alSeverity,removeRequestClass,modReactionArray){var reactions="<div>";
var reactionName;
var removeClass=removeRequestClass||"";
if(modReactionArray&&modReactionArray.length){reactionArray=this.buildReactionsForPatReqModify(reactionArray,modReactionArray);
if(!reactionArray.length){return"<span class='"+alSeverity+removeRequestClass+"'>--</span>";
}}var chartReactionsCnt=reactionArray.length;
if(chartReactionsCnt){for(var i=0;
i<chartReactionsCnt;
i++){if(i<chartReactionsCnt-1){reactionName=reactionArray[i].REACTION_NAME+", ";
}else{reactionName=reactionArray[i].REACTION_NAME;
}reactions+="<span class='"+alSeverity+removeClass+"'>"+reactionName+"</span>";
}}else{return"<span class='"+alSeverity+removeRequestClass+"'>--</span>";
}reactions+="</div>";
return reactions;
};
AllergyComponentWF.prototype.buildReactionsForPatReqModify=function(reactionArray,modReactionArray){var reaction=null;
var reactions=[];
var removedReaction=[];
var reactionsArrCopy=reactionArray.slice();
for(var i=0;
i<modReactionArray.length;
i++){reaction=modReactionArray[i];
var requestType=MP_Util.GetValueFromArray(reaction.STATUS,this.m_codesArray).meaning;
if(requestType==="ADD"){reactions.push(reaction);
}else{if(requestType==="REMOVE"){removedReaction.push(reaction);
}}}for(i=0;
i<removedReaction.length;
i++){for(var j=0;
j<reactionsArrCopy.length;
j++){if(reactionsArrCopy[j].REACTION_ID===removedReaction[i].REACTION_ID){reactionsArrCopy.splice(j,1);
}}}reactions=reactions.concat(reactionsArrCopy);
return reactions;
};
AllergyComponentWF.prototype.getComments=function(par,personnelArray){var comment="";
var recDate="";
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
for(var j=0,m=par.COMMENTS.length;
j<m;
j++){if(par.COMMENTS[j].COMMENT_ID===0&&this.displayHiDataInd){continue;
}if(personnelArray&&personnelArray.length){if(par.COMMENTS[j].RECORDED_DT_TM){recDate=df.formatISO8601(par.COMMENTS[j].RECORDED_DT_TM,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(j>0){comment+="<br />";
}if(par.COMMENTS[j].RECORDED_BY>0){var prsnlName=(par.COMMENTS[j].RECORDED_BY>0)?MP_Util.GetValueFromArray(par.COMMENTS[j].RECORDED_BY,personnelArray).fullName:"";
comment+=par.COMMENTS[j].COMMENT_TEXT+"<br />"+recDate+" - "+prsnlName+"<br />";
}else{comment+=par.COMMENTS[j].COMMENT_TEXT+"<br />"+recDate+"<br />";
}}}return comment;
};
AllergyComponentWF.prototype.getPatientComment=function(allergyResult){var patientComment="";
var commentsLen=allergyResult.COMMENTS.length;
for(var i=0;
i<commentsLen;
i++){var comment=allergyResult.COMMENTS[i];
if(comment.COMMENT_ID===0){patientComment=comment.COMMENT_TEXT;
break;
}}return patientComment;
};
AllergyComponentWF.prototype.processResultsForRender=function(results){var resultLength=results.ALLERGY.length;
var docI18n=i18n.discernabu.allergy_o2;
var jsSeverity,alSeverity,jsSeverityObj,onsetPrecision,reactionType,infoSource,comments="";
var datetimeFlag=0;
var onsetDate="--";
var allergyResult=null;
var interopResult=null;
var dateTime=null;
var removeRequestClass;
var status;
var category;
var allergyIndex=0;
var self=this;
var unverifiedImg;
var modReactionsArray=[];
var chartInfoSource="";
self.m_codesArray=MP_Util.LoadCodeListJSON(results.CODES);
self.setAllergyFreeTextStatusPriv(results.FREE_TEXT_ALLERGY_PREFERENCE);
var personnelArray=MP_Util.LoadPersonelListJSON(results.PRSNL);
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var isUnknownPrecCode=function(currentObj){if(!currentObj||currentObj.ONSET_PRECISION_CD===0){return false;
}return(MP_Util.GetValueFromArray(currentObj.ONSET_PRECISION_CD,self.m_codesArray).meaning==="UNKNOWN")?true:false;
};
for(resultLength;
resultLength--;
){modReactionsArray=[];
chartInfoSource="";
removeRequestClass="";
allergyResult=results.ALLERGY[resultLength];
jsSeverityObj=(allergyResult.SEVERITY_CD)?MP_Util.GetValueFromArray(allergyResult.SEVERITY_CD,self.m_codesArray):{meaning:"",display:"--"};
if(jsSeverityObj.meaning==="SEVERE"||jsSeverityObj.display.toUpperCase()==="ANAPHYLLAXIS"){jsSeverity="res-severe";
alSeverity="al-res-severe";
}else{jsSeverity="res-normal";
alSeverity="res-normal";
}interopResult=allergyResult.INTEROP;
if(interopResult&&interopResult.REQUEST_TYPE){var requestType=(interopResult.REQUEST_TYPE)?MP_Util.GetValueFromArray(interopResult.REQUEST_TYPE,self.m_codesArray).meaning:"--";
if(!this.displayHiDataInd){allergyResult.INTEROP_SUBMITTED_BY_CD=interopResult.SUBMITTED_BY_CD;
allergyResult.REQUEST=requestType;
allergyResult.ALLERGY_FREETEXT_STATUS=interopResult.ALLERGY_FREETEXT_STATUS;
allergyResult.ALLERGY_AUTHOR=interopResult.SUBMITTED_BY_NAME||"--";
allergyResult.PATIENT_COMMENT=self.getPatientComment(allergyResult);
var reqTxt=(requestType!=="UPDATE")?docI18n[requestType]:docI18n.MODIFY;
modReactionsArray=(requestType==="UPDATE"&&interopResult.MOD_REACTIONS.length)?interopResult.MOD_REACTIONS:[];
allergyResult.ALLERGY_REQUEST="<span class='"+alSeverity+"'>"+reqTxt+"</span>";
allergyResult.REQUEST_TEXT=reqTxt;
if(requestType==="REMOVE"){removeRequestClass=" pat-req-remove";
}chartInfoSource=MP_Util.GetValueFromArray(allergyResult.SOURCE_OF_INFO_CD,self.m_codesArray);
infoSource=MP_Util.GetValueFromArray(interopResult.SUBMITTED_BY_CD,self.m_codesArray);
if(interopResult.SUBMITTED_DT_TM){var interopDtTm=new Date();
interopDtTm.setISO8601(interopResult.SUBMITTED_DT_TM);
allergyResult.OUTSIDE_REQUESTS_DATE_TM=interopDtTm.format("mediumDate")+" "+interopDtTm.format("militaryTime");
}}else{if(requestType==="ADD"){continue;
}}}else{allergyResult.ALLERGY_REQUEST="<span class='"+alSeverity+"'>--</span>";
allergyResult.REQUEST_TEXT="";
infoSource=MP_Util.GetValueFromArray(allergyResult.SOURCE_OF_INFO_CD,self.m_codesArray);
if(allergyResult.ORIGINATING_SOURCE_CD){var originCode=MP_Util.GetValueFromArray(allergyResult.ORIGINATING_SOURCE_CD,self.m_codesArray);
allergyResult.ORIGINATING_SOURCE_TEXT=originCode?originCode.display:"--";
if(allergyResult.ORIGINATING_DT_TM){var originDtTm;
originDtTm=new Date();
originDtTm.setISO8601(allergyResult.ORIGINATING_DT_TM);
allergyResult.ORIGINATING_DT_TM_TEXT=originDtTm.format("mediumDate")+" "+originDtTm.format("militaryTime");
}else{allergyResult.ORIGINATING_DT_TM_TEXT="--";
}allergyResult.ORIGINATING_AUTHOR=allergyResult.ORIGINATING_SOURCE_NAME||"--";
}}unverifiedImg=(allergyResult.DIRECT_WRITTEN_IND)?"<span class='pat-req-icon'>&nbsp;</span>":"";
allergyResult.ALLERGY_NAME=unverifiedImg+"<span class='"+alSeverity+removeRequestClass+"'>"+allergyResult.NAME+"</span>";
onsetDate="--";
dateTime=new Date();
if(allergyResult.ONSET_DT_TM&&allergyResult.ONSET_DT_TM!==""&&allergyResult.ONSETDATE_FLAG){dateTime.setISO8601(allergyResult.ONSET_DT_TM);
datetimeFlag=allergyResult.ONSETDATE_FLAG;
}else{datetimeFlag=0;
}onsetPrecision=(allergyResult.ONSET_PRECISION_CD)?MP_Util.GetValueFromArray(allergyResult.ONSET_PRECISION_CD,self.m_codesArray).display:"";
switch(datetimeFlag){case 20:case 30:onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
break;
case 40:onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_MONTH_4YEAR_NO_DATE);
break;
case 50:onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_4YEAR);
break;
case 0:onsetDate="--";
break;
default:onsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
break;
}if(isUnknownPrecCode(allergyResult)){allergyResult.ALLERGY_DATE="<span class='"+alSeverity+removeRequestClass+"'>"+(onsetPrecision?onsetPrecision:"")+"</span>";
}else{allergyResult.ALLERGY_DATE="<span class='"+alSeverity+removeRequestClass+"'>"+(onsetPrecision?onsetPrecision+"&nbsp;":"")+onsetDate+"</span>";
}allergyResult.ALLERGY_SEVERITY="<span class='"+jsSeverity+removeRequestClass+"'>&nbsp;"+((jsSeverityObj.meaning!=="NOTENTERED")?jsSeverityObj.display:"--")+"&nbsp;</span>";
allergyResult.ALLERGY_REACTIONS=self.buildReaction(allergyResult.REACTIONS,alSeverity,removeRequestClass,modReactionsArray);
allergyResult.CHARTED_REACTIONS=self.buildReaction(allergyResult.REACTIONS,alSeverity,removeRequestClass,null);
reactionType=MP_Util.GetValueFromArray(allergyResult.REACTION_CLASS_CD,self.m_codesArray);
allergyResult.ALLERGY_REACTION_TYPE="<span class='"+alSeverity+removeRequestClass+"'>"+(reactionType?reactionType.display:"--")+"</span>";
status=MP_Util.GetValueFromArray(allergyResult.STATUS_CD,self.m_codesArray);
category=MP_Util.GetValueFromArray(allergyResult.SUBSTANCE_TYPE_CD,self.m_codesArray);
allergyResult.CHARTED_INFORMATION_SOURCE="<span class='"+alSeverity+removeRequestClass+"'>"+(chartInfoSource?chartInfoSource.display:"--")+"</span>";
allergyResult.ALLERGY_INFORMATION_SOURCE="<span class='"+alSeverity+removeRequestClass+"'>"+(infoSource?infoSource.display:"--")+"</span>";
allergyResult.STATUS="<span class='"+alSeverity+removeRequestClass+"'>"+(status?status.display:"--")+"</span>";
allergyResult.CATEGORY="<span class='"+alSeverity+removeRequestClass+"'>"+((category&&category.meaning!=="NOTENTERED")?category.display:"--")+"</span>";
comments=self.getComments(allergyResult,personnelArray);
allergyResult.ALLERGY_COMMENTS="<span class='"+alSeverity+removeRequestClass+"'>"+(comments?comments:"--")+"</span>";
allergyResult.ALLERGY_INDEX=allergyIndex;
allergyResult.NAME_TEXT=allergyResult.NAME;
allergyResult.ONSET_DATE=allergyResult.ONSET_DATE;
allergyResult.SEVERITY_TEXT=allergyResult.SORT_SEQ;
allergyResult.REACTION_TEXT=(allergyResult.REACTIONS.length!==0)?allergyResult.REACTIONS[0].REACTION_NAME:"--";
allergyResult.REACTION_TYPE_TEXT=(reactionType?reactionType.display:"--");
allergyResult.INFO_SOURCE_TEXT=(infoSource?infoSource.display:"--");
allergyResult.COMMENTS_TEXT="<span class='"+alSeverity+removeRequestClass+"'>"+(allergyResult.COMMENTS.length?allergyResult.COMMENTS[0].COMMENT_TEXT:"--")+"</span>";
allergyResult.SEVERITY_STYLE=jsSeverity;
if(interopResult&&interopResult.REQUEST_TYPE&&!this.displayHiDataInd){this.m_interopAllergies.push(allergyResult);
}else{this.m_chartedAllergies.push(allergyResult);
}this.sidePanelData.push(allergyResult);
allergyIndex++;
}};
AllergyComponentWF.prototype.processPrivExceptions=function(privileges){var temp_nomen=[];
var i=0;
var self=this;
var isMarkAsReviewed=function(targetObj){if(targetObj&&targetObj[2]&&targetObj[2].PRIVILEGE_NAME&&targetObj[2].PRIVILEGE_NAME==="REVALLERGY"){self.setMarkAsReviewedPriv(targetObj[2].DEFAULT_IND);
}};
this.nomen_granted=[];
var isViewExcepSet=function(targetObj){if(targetObj&&targetObj[0]&&targetObj[0].PRIVILEGE_NAME&&targetObj[0].PRIVILEGE_NAME==="VIEWALLERGY"){if(targetObj[0].EXCEPTIONS&&targetObj[0].EXCEPTIONS.length){return true;
}else{return false;
}}return false;
};
var isUpdateExcepSet=function(targetObj){if(targetObj&&targetObj[1]&&targetObj[1].PRIVILEGE_NAME&&targetObj[1].PRIVILEGE_NAME==="UPDTALLERGY"){self.update_priv_default=targetObj[1].DEFAULT_IND;
if(targetObj[1].EXCEPTIONS&&targetObj[1].EXCEPTIONS.length){return true;
}else{return false;
}}return false;
};
isMarkAsReviewed(privileges);
if(isViewExcepSet(privileges)){for(i=0;
i<privileges[0].EXCEPTIONS.length;
i++){temp_nomen.push({key:privileges[0].EXCEPTIONS[i].NOMEN_ID,value:privileges[0].EXCEPTIONS[i].GRANTED_IND});
}temp_nomen.sort(function(a,b){return a.key-b.key;
});
}if(isUpdateExcepSet(privileges)){for(i=0;
i<privileges[1].EXCEPTIONS.length;
i++){var index=this.binaryIndexOf.call(temp_nomen,privileges[1].EXCEPTIONS[i].NOMEN_ID);
if(index>-1){temp_nomen[index].value=temp_nomen[index].value&privileges[1].EXCEPTIONS[i].GRANTED_IND;
}else{temp_nomen.push({key:privileges[1].EXCEPTIONS[i].NOMEN_ID,value:privileges[1].EXCEPTIONS[i].GRANTED_IND});
}}temp_nomen.sort(function(a,b){return a.key-b.key;
});
}this.nomen_granted=temp_nomen;
};
AllergyComponentWF.prototype.retrieveComponentData=function(){var criterion=this.getCriterion();
var request=null;
var allergyScriptRequest=new ComponentScriptRequest();
var self=this;
var viewCatagoryMean=criterion.category_mean;
var loadTimer=new RTMSTimer(this.getComponentLoadTimerName(),viewCatagoryMean);
var renderTimer=new RTMSTimer(this.getComponentRenderTimerName(),viewCatagoryMean);
this.currentAllergyDetailsObj=null;
this.m_chartedAllergies=[];
this.m_interopAllergies=[];
var sendAr=[];
var programName="MP_GET_ALLERGIES_JSON";
this.setMemberVariables();
var millData=1;
var patientEnteredDataInd=this.getPatientEnteredDataInd();
var hiDataInd=this.getExternalDataInd();
var capTimer=new CapabilityTimer("CAP:MPG Allergies Load Patient Entered Data");
if(hiDataInd){this.aliasType=this.getAliasType();
this.aliasPool=this.getAliasPoolCd();
if($.trim(this.getHITestUri()).length){this.hiTestURI=this.getHITestUri();
}if($.trim(this.getHILookupKey()).length){this.hiLookUpKey=this.getHILookupKey();
}}if(patientEnteredDataInd){var viewOutsideRecordsCookie=MP_Util.GetCookieProperty(self.m_componentId,"VIEW_OUTSIDE_RECORDS");
if(viewOutsideRecordsCookie){this.setOutsideRecordsPref((viewOutsideRecordsCookie==="yes")?true:false);
}else{MP_Util.AddCookieProperty(self.m_componentId,"VIEW_OUTSIDE_RECORDS","yes");
MP_Util.WriteCookie();
this.setOutsideRecordsPref(true);
}}var viewOutsideRecordsPref=this.getOutsideRecordsPref();
if(patientEnteredDataInd&&hiDataInd&&viewOutsideRecordsPref){sendAr=["^MINE^",criterion.person_id+".0","0.0",0,criterion.provider_id+".0",criterion.ppr_cd+".0","^"+this.hiLookUpKey+"^","^"+this.aliasType+"^",this.aliasPool+".0","^"+this.hiTestURI+"^",this.pageIndex,millData,"1"];
capTimer.capture();
}else{if(patientEnteredDataInd&&viewOutsideRecordsPref){sendAr=["^MINE^",criterion.person_id+".0","0.0","0",criterion.provider_id+".0",criterion.ppr_cd+".0","^^","^^","0.0","^^","0","1","1"];
capTimer.capture();
}else{if(!patientEnteredDataInd&&hiDataInd){sendAr=["^MINE^",criterion.person_id+".0","0.0",0,criterion.provider_id+".0",criterion.ppr_cd+".0","^"+this.hiLookUpKey+"^","^"+this.aliasType+"^",this.aliasPool+".0","^"+this.hiTestURI+"^",this.pageIndex,millData];
}else{sendAr=["^MINE^",criterion.person_id+".0","0.0",0,criterion.provider_id+".0",criterion.ppr_cd+".0"];
programName="MP_GET_ALLERGIES";
}}}allergyScriptRequest.setProgramName(programName);
allergyScriptRequest.setParameterArray(sendAr);
allergyScriptRequest.setComponent(this);
allergyScriptRequest.setLoadTimer(loadTimer);
allergyScriptRequest.setRenderTimer(renderTimer);
allergyScriptRequest.setResponseHandler(function(scriptReply){if(scriptReply.getResponse().STATUS_DATA.STATUS!="F"){if(hiDataInd){self.checkHiData(scriptReply.m_responseData);
}self.renderComponent(scriptReply.m_responseData);
}else{self.finalizeComponent(MP_Util.HandleErrorResponse(self.getStyles().getNameSpace()),(self.isLineNumberIncluded()?"(0)":""));
}});
allergyScriptRequest.performRequest();
};
AllergyComponentWF.prototype.resetView=function(){if(this.m_showPanel){this.m_sidePanel.m_cornerCloseButton.trigger("click");
}this.allergyTable=null;
this.m_interopAllergies=[];
this.m_chartedAllergies=[];
this.sidePanelData=[];
$("#wf_al"+this.m_compId+"table").html("");
this.highlightSelectedRow(false,false);
this.m_showPanel=false;
this.m_clickedRow=null;
this.newNomenId=null;
this.allergyRequest=null;
};
AllergyComponentWF.prototype.createSegmentedControl=function(reply){var self=this;
var docI18n=i18n.discernabu.allergy_o2;
var enableHiSegment=this.m_hiHasData&&this.m_hiDataValid;
var segment=new MPageUI.SegmentedControl();
segment.addSegment({label:docI18n.PATIENT_REQUESTS,selected:!self.displayHiDataInd,onSelect:function(){self.resetView();
self.displayHiDataInd=false;
self.renderComponent(reply);
}});
segment.addSegment({label:docI18n.OUTSIDE_RECORDS,disabled:!enableHiSegment,selected:self.displayHiDataInd,onSelect:function(){self.resetView();
$("#wf_al"+self.m_compId+"sidePanel").remove();
self.displayHiDataInd=true;
self.renderComponent(reply);
}});
return segment;
};
AllergyComponentWF.prototype.renderComponent=function(reply){var numberResults=0;
var results=null;
var docI18n=i18n.discernabu.allergy_o2;
var self=this;
this.disableAllergySearch=false;
this.isSavingNomenclatureItem=false;
var actionabilityPriv=this.getActionabilityPriv();
var renderAllergy="";
var allergyTable=null;
var nkaBannerHTML=this.renderNKABanner(reply);
var allergyPrivsReplyObj="";
var initialLoadAllergiesList=[];
var reacTypeColumnCustomClass="allergy-o2-col";
var patReqColClass="";
var i=0;
var allergiesMarkup=[];
var secondarySortField="NAME_TEXT";
var sortBy="Severity";
var sortDirection=TableColumn.SORT.DESCENDING;
var secondarySortDirection=TableColumn.SORT.ASCENDING;
var segmentedControl=null;
var viewOutsideRecCheckedAttr="";
var patEnteredInd=this.getPatientEnteredDataInd();
var hiDataInd=this.getExternalDataInd();
var displayHiBanner=false;
var viewOutsideRecordsChecked=this.getOutsideRecordsPref();
this.m_compId=this.getComponentId();
this.sidePanelData=[];
this.allergyRequest=null;
this.scriptReply=reply;
this.processResultsForRender(reply);
results=reply.ALLERGY;
allergyPrivsReplyObj=reply.PRIVILEGES;
var segmentedControlHtml="";
var viewOutsideRecordsMarkup="";
if(viewOutsideRecordsChecked){displayHiBanner=false;
viewOutsideRecCheckedAttr="checked";
if(patEnteredInd){numberResults=(!this.displayHiDataInd)?this.getNonNomenAllergyCount(results):this.getNonNomenAllergyCount(this.m_chartedAllergies);
if(hiDataInd){segmentedControl=this.createSegmentedControl(reply);
segmentedControlHtml="<div class='al-seg-control-container'>"+segmentedControl.render()+"</div>";
}}}else{displayHiBanner=true;
numberResults=this.getNonNomenAllergyCount(this.m_chartedAllergies);
}this.resultCount=numberResults;
if(patEnteredInd){viewOutsideRecordsMarkup='<div class="view-pat-req-content"><label><input type="checkbox" '+viewOutsideRecCheckedAttr+' name="view-pat-req-chk" />'+docI18n.VIEW_OUTSIDE_RECORDS+"</label></div>";
}allergyTable=new ComponentTable();
allergyTable.setNamespace(this.getStyles().getId());
if(!this.displayHiDataInd&&patEnteredInd&&viewOutsideRecordsChecked){if(this.m_interopAllergies.length){secondarySortField="SEVERITY_TEXT";
sortBy="REQUEST"+this.m_compId;
sortDirection=TableColumn.SORT.ASCENDING;
secondarySortDirection=TableColumn.SORT.DESCENDING;
patReqColClass=" pat-req-col";
reacTypeColumnCustomClass="allergy-o2-sp-hide-col";
patientReqCount=this.m_interopAllergies.length;
var requestColumn=new TableColumn();
requestColumn.setColumnId("REQUEST"+this.m_compId);
requestColumn.setCustomClass("allergy-o2-col"+patReqColClass);
requestColumn.setColumnDisplay(i18n.REQUEST);
requestColumn.setPrimarySortField("REQUEST_TEXT",TableColumn.SORT.ASCENDING);
requestColumn.setIsSortable(true);
requestColumn.setRenderTemplate("${ALLERGY_REQUEST}");
requestColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
requestColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
allergyTable.addColumn(requestColumn);
}var patientRequestGroup=new TableGroup();
patientRequestGroup.setGroupId("GROUP_PATIENT_REQUEST");
patientRequestGroup.setDisplay("<span class='pat-req-icon table-grp-header'></span>"+docI18n.PATIENT_REQUESTS);
patientRequestGroup.setCanCollapse(false);
patientRequestGroup.setShowCount(true);
patientRequestGroup.bindData(this.m_interopAllergies);
var otherChartAllergies=new TableGroup();
otherChartAllergies.setGroupId("GROUP_OTHER_CHART_ALLERGIES");
otherChartAllergies.setDisplay(docI18n.OTHER_CHART_ALLERGIES);
otherChartAllergies.setCanCollapse(false);
otherChartAllergies.setShowCount(true);
otherChartAllergies.bindData(this.m_chartedAllergies);
allergyTable.addGroup(patientRequestGroup);
allergyTable.addGroup(otherChartAllergies);
}var indexColumn=new TableColumn();
indexColumn.setColumnId("INDEX");
indexColumn.setCustomClass("allergy-o2-hide-col");
indexColumn.setColumnDisplay("");
indexColumn.setRenderTemplate("${ALLERGY_INDEX}");
var nameColumn=new TableColumn();
nameColumn.setColumnId("NAME");
nameColumn.setCustomClass("allergy-o2-col"+patReqColClass);
nameColumn.setColumnDisplay(docI18n.SUBSTANCE);
nameColumn.setPrimarySortField("NAME_TEXT");
nameColumn.setIsSortable(true);
nameColumn.setRenderTemplate("${ALLERGY_NAME}");
if(secondarySortField==="SEVERITY_TEXT"){nameColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
}var reactionColumn=new TableColumn();
reactionColumn.setColumnId("Reaction");
reactionColumn.setCustomClass("allergy-o2-col"+patReqColClass);
reactionColumn.setColumnDisplay(docI18n.REACTION);
reactionColumn.setPrimarySortField("REACTION_TEXT");
reactionColumn.setIsSortable(true);
reactionColumn.setRenderTemplate("${ ALLERGY_REACTIONS}");
reactionColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){reactionColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var categoryColumn=new TableColumn();
categoryColumn.setColumnId("Category");
categoryColumn.setCustomClass("allergy-o2-col"+patReqColClass);
categoryColumn.setColumnDisplay(i18n.CATEGORY);
categoryColumn.setPrimarySortField("CATEGORY");
categoryColumn.setIsSortable(true);
categoryColumn.setRenderTemplate("${ CATEGORY }");
categoryColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){categoryColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var statusColumn=new TableColumn();
statusColumn.setColumnId("Status");
statusColumn.setCustomClass("allergy-o2-col"+patReqColClass);
statusColumn.setColumnDisplay(i18n.STATUS);
statusColumn.setPrimarySortField("STATUS");
statusColumn.setIsSortable(true);
statusColumn.setRenderTemplate("${ STATUS }");
statusColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){statusColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var severityColumn=new TableColumn();
severityColumn.setColumnId("Severity");
severityColumn.setCustomClass("allergy-o2-col"+patReqColClass);
severityColumn.setColumnDisplay(docI18n.SEVERITY);
severityColumn.setPrimarySortField("SEVERITY_TEXT");
severityColumn.setIsSortable(true);
severityColumn.setRenderTemplate("${ALLERGY_SEVERITY}");
severityColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){severityColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var reacTypeColumn=new TableColumn();
reacTypeColumn.setColumnId("ReactionType");
reacTypeColumn.setCustomClass("allergy-o2-sp-hide-col"+patReqColClass);
reacTypeColumn.setColumnDisplay(docI18n.REACTION_TYPE);
reacTypeColumn.setPrimarySortField("REACTION_TYPE_TEXT");
reacTypeColumn.setIsSortable(true);
reacTypeColumn.setRenderTemplate("${ ALLERGY_REACTION_TYPE }");
reacTypeColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){reacTypeColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var sourceColumn=new TableColumn();
sourceColumn.setColumnId("Source");
sourceColumn.setCustomClass("allergy-o2-sp-hide-col"+patReqColClass);
sourceColumn.setColumnDisplay(i18n.SOURCE);
sourceColumn.setPrimarySortField("INFO_SOURCE_TEXT");
sourceColumn.setIsSortable(true);
sourceColumn.setRenderTemplate("${ ALLERGY_INFORMATION_SOURCE }");
sourceColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){sourceColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}var commentColumn=new TableColumn();
commentColumn.setColumnId("Comments");
commentColumn.setCustomClass("allergy-o2-sp-hide-col"+patReqColClass);
commentColumn.setColumnDisplay(docI18n.COMMENTS);
commentColumn.setPrimarySortField("COMMENTS_TEXT");
commentColumn.setIsSortable(true);
commentColumn.setRenderTemplate("${ COMMENTS_TEXT }");
commentColumn.addSecondarySortField(secondarySortField,secondarySortDirection);
if(secondarySortField==="SEVERITY_TEXT"){commentColumn.addSecondarySortField("NAME_TEXT",TableColumn.SORT.ASCENDING);
}allergyTable.addColumn(indexColumn);
allergyTable.addColumn(nameColumn);
allergyTable.addColumn(reactionColumn);
allergyTable.addColumn(categoryColumn);
allergyTable.addColumn(statusColumn);
allergyTable.addColumn(severityColumn);
allergyTable.addColumn(reacTypeColumn);
allergyTable.addColumn(sourceColumn);
allergyTable.addColumn(commentColumn);
if((!patEnteredInd||(patEnteredInd&&!viewOutsideRecordsChecked))||(hiDataInd&&this.displayHiDataInd)){allergyTable.bindData(this.m_chartedAllergies);
}allergyTable.sortByColumnInDirection(sortBy,sortDirection);
this.setComponentTable(allergyTable);
this.allergyTable=allergyTable;
this.addCellClickExtension();
allergyTable.toggleColumnSort=function(columnId){ComponentTable.prototype.toggleColumnSort.call(this,columnId);
self.resetNKARows();
};
allergyTable.renderNoResults=function(){if(!this.displayHiDataInd&&patEnteredInd&&viewOutsideRecordsChecked){return ComponentTable.prototype.renderNoResults.call(this);
}else{ComponentTable.prototype.renderNoResults.call(this);
return"";
}};
var combinedAllergyTables="";
if((this.displayHiDataInd&&hiDataInd&&viewOutsideRecordsChecked)||(!patEnteredInd&&hiDataInd)){var timer=new CapabilityTimer("CAP:MPG Display HealtheIntent Data");
timer.capture();
allergiesMarkup.push('<div id = "al-wf-allergy-full'+this.m_compId+'" class="al-wf-allergy-full">');
var hiBannerMarkup="";
var hiDataMarkup="";
if(this.m_hiDataValid&&this.m_hiHasData){this.processHiResultsForRender(reply);
if(displayHiBanner){hiBannerMarkup=this.createHIAddDataControl();
}else{hiBannerMarkup="";
hiDataMarkup=this.showHiDataTable();
}this.displayHiDataInd=true;
allergiesMarkup.push('<div id="al-wf-banner-holder'+this.m_compId+'" class="al-wf-banner-holder">'+hiBannerMarkup+'</div><div id="al-wf-table-containers'+this.m_compId+'" class="al-wf-table-containers"><div class="al-wf-hi-container"><div id="al-wf-hi-table-container'+this.m_compId+'" class="al-wf-hi-table-container">'+hiDataMarkup+"</div>",'<div class="al-wf-hi-pager-container"></div>',"</div>",'<div class="al-wf-mill-table-container">');
}else{if(this.m_hiDataValid===false){hiBannerMarkup=(displayHiBanner)?this.createHIErrorDataControl():"";
allergiesMarkup.push('<div id="al-wf-banner-holder'+this.m_compId+'" class="al-wf-banner-holder">'+hiBannerMarkup+'</div><div class="al-wf-table-containers"><div class="al-wf-hi-container"><div id="al-wf-hi-table-container'+this.m_compId+'" class="al-wf-hi-table-container"></div></div><div class="al-wf-mill-table-container">');
}else{if(this.m_hiHasData===false){allergiesMarkup.push('<div class="al-wf-table-containers"><div class="al-wf-hi-container"></div><div class="al-wf-mill-table-container">');
}else{allergiesMarkup.push('<div class="al-wf-table-containers"><div class="al-wf-mill-table-container">');
}}}allergiesMarkup.push(allergyTable.render()+"</div></div></div>");
combinedAllergyTables=allergiesMarkup.join("");
}else{combinedAllergyTables=allergyTable.render();
}renderAllergy=nkaBannerHTML+"<div class='al-search-container'><div id='alSearchContainer"+this.m_compId+"'></div></div>"+viewOutsideRecordsMarkup+segmentedControlHtml+"</div><div class='al-search-padding'>&nbsp;</div>"+this.mfaBannerHtml+combinedAllergyTables;
CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:numberResults});
this.finalizeComponent(renderAllergy,MP_Util.CreateTitleText(this,numberResults));
if(segmentedControl){segmentedControl.attachEvents();
}this.m_tableBodyContainer=$("#wf_al"+this.m_compId+"tableBody");
this.bindNKAEvents(reply.NOMENCLATURE_ITEMS);
this.resetNKARows();
this.initializeSidePanel();
this.resizeComponent();
if(hiDataInd){var hiDataButton=document.getElementById("hiDataControlBtn"+this.m_compId);
$(hiDataButton).click(function(){$("#al-wf-hi-table-container"+self.m_compId).html(self.showHiDataTable());
self.allergyHiTable.finalize();
$("#wf_al"+self.m_compId+" .al-wf-hi-container").on("click",".result-info",function(event){self.onHiRowClick(event,this);
});
var pager=self.createHiPager();
if(pager){$("#wf_al"+self.m_compId+" .al-wf-hi-pager-container").append(pager.render());
pager.attachEvents();
}var timer=new CapabilityTimer("CAP:MPG Display HealtheIntent Data");
timer.capture();
if(self.m_clickedRow){$("#wf_al"+self.m_compId+"hitable").addClass("allergy-sp-hide-mode");
}else{if(self.m_showPanel){$("#wf_al"+self.m_compId+"hitable").addClass("allergy-sp-hide-mode");
}}if(self.allergyRequest){self.moveSidePanel();
$("#wf_alContent"+self.m_compId).css("height","");
}self.resizeComponent();
});
var $hiAddDataContainer=$("#al-wf-banner-holder"+this.m_compId).find("#hiAddDataContainer");
if(this.displayHiDataInd&&!$hiAddDataContainer.length){$("#wf_al"+self.m_compId+" .al-wf-hi-container").on("click",".result-info",function(event){self.onHiRowClick(event,this);
});
self.allergyHiTable.finalize();
var pager=self.createHiPager();
if(pager){$("#wf_al"+self.m_compId+" .al-wf-hi-pager-container").append(pager.render());
pager.attachEvents();
}}}this.processPrivExceptions(allergyPrivsReplyObj);
if(this.sidePanelData){for(i=0;
i<this.sidePanelData.length;
i++){initialLoadAllergiesList.push({key:this.sidePanelData[i].NOMENCLATURE_ID,value:0});
}this.nomen_granted=this.nomen_granted.concat(initialLoadAllergiesList);
this.nomen_granted.sort(function(a,b){return a.key-b.key;
});
}if(actionabilityPriv&&!this.disableAllergySearch){this.addAllergySearch();
}else{this.allergySearchElement=$("#alSearchContainer"+this.m_compId);
}if(patEnteredInd){$("#wf_alContent"+this.m_compId).find(".view-pat-req-content :checkbox").click(function(){var $this=$(this);
var isChecked;
if($this.is(":checked")){isChecked=true;
}else{isChecked=false;
}if(self.m_showPanel){self.m_sidePanel.m_cornerCloseButton.trigger("click");
}self.displayHiDataInd=false;
self.m_hiClickedRow=null;
self.m_tableContainer.removeClass("al-wf-side-panel-addition");
self.highlightSelectedRow(false,false);
self.m_showPanel=false;
self.m_clickedRow=null;
$("#wf_al"+self.m_compId+"table").removeClass("allergy-sp-hide-mode");
self.newNomenId=null;
self.allergyRequest=null;
self.allergySearchElement.attr("disabled",false);
self.setOutsideRecordsPref(isChecked);
MP_Util.AddCookieProperty(self.m_compId,"VIEW_OUTSIDE_RECORDS",(isChecked===true)?"yes":"no");
MP_Util.WriteCookie();
self.retrieveComponentData();
});
$("#wf_al"+self.m_compId+"sidePanelContainer").on("click",".al-outside-requests",function(event){if($(this).hasClass("closed")){$(this).removeClass("closed");
}else{$(this).addClass("closed");
}});
}var noOfRows=this.allergyTable.getRows().length;
var allRows=this.allergyTable.getRowMap();
var row=null;
var $rowElm=null;
if(!this.isCancelled){if(viewOutsideRecordsChecked&&patEnteredInd&&!this.displayHiDataInd){var otherChartAllergiesGrp=this.allergyTable.getGroupById("GROUP_OTHER_CHART_ALLERGIES");
noOfRows=otherChartAllergiesGrp.getRows().length;
allRows=otherChartAllergiesGrp.getRows();
for(i=0;
i<noOfRows;
i++){row=allRows[i];
if((self.newNomenId&&row.resultData.ALLERGY_ID===self.newNomenId)){self.m_sidePanel.m_cornerCloseButton.trigger("click");
$rowElm=this.m_tableBodyContainer.find("dl[id*="+row.getId()+"]");
self.m_clickedRow=$rowElm;
$rowElm.trigger("mouseup");
return;
}}}else{if(allRows){var allRowKeys=Object.keys(allRows);
for(i=0;
i<noOfRows;
i++){row=allRows[allRowKeys[i]];
if((self.newNomenId&&row.resultData.ALLERGY_ID===self.newNomenId)){self.m_sidePanel.m_cornerCloseButton.trigger("click");
$rowElm=this.m_tableBodyContainer.find("dl[id*="+row.getId()+"]");
self.m_clickedRow=$rowElm;
$rowElm.trigger("mouseup");
return;
}}}}}else{self.m_sidePanel.m_cornerCloseButton.trigger("click");
}};
AllergyComponentWF.prototype.buildOtherChartedAllergySidePanelContent=function(sidePanelRow,componentId){var allergyI18N=i18n.discernabu.allergy_o2;
var sidePanelActionsHtml="";
var allergyHTML="";
var sidePanelHTML="";
var directWrittenAllergyBanner="";
this.m_sidePanel.removeAlertBanner();
this.m_sidePanel.setContents(sidePanelHTML,"wf_alContent"+componentId);
sidePanelActionsHtml="<div id='allergySPAction"+componentId+"' class='al-sp-actions'>";
if(sidePanelRow.DIRECT_WRITTEN_IND){if(this.getMarkAsReviewedPriv()){sidePanelActionsHtml+="<div class='sp-button2 al-wf-mark-reviewed-button' id='allergyMarkReviewedButton"+componentId+"'>"+allergyI18N.MARK_AS_REVIEWED+"</div>";
}directWrittenAllergyBanner="<div class='al-directwrite-sp-banner'><span class='pat-req-icon'>&nbsp;</span><span class='al-directwrite-sp-banner-msg'>"+allergyI18N.ALLERGY_DIRECT_WRITTEN_FROM_CLIPBOARD+"</span></div>";
this.m_sidePanel.setAlertBannerAsHTML(directWrittenAllergyBanner);
}sidePanelActionsHtml+="<div class='sp-button2 al-wf-modify-button' id='allergyModifyButton"+componentId+"'>"+allergyI18N.MODIFY+"</div></div>";
this.m_sidePanel.setActionsAsHTML(sidePanelActionsHtml);
sidePanelHTML="<div id='sidePanelScrollContainer"+componentId+"'><div id='wf_al"+componentId+"sidePanelResultList' class='al-wf-side-panel-result-list'>";
allergyHTML+="<dl><dd><div class='al-wf-title-text'>"+allergyI18N.REACTION+"</div>"+sidePanelRow.ALLERGY_REACTIONS+"</dd><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl><dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.SEVERITY+"</div>"+sidePanelRow.ALLERGY_SEVERITY+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.REACTION_TYPE+"</div>"+sidePanelRow.ALLERGY_REACTION_TYPE+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.CATEGORY+"</div>"+sidePanelRow.CATEGORY+"</dd><br /><br /></dl><dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.STATUS+"</div>"+sidePanelRow.STATUS+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.SOURCE+"</div>"+sidePanelRow.ALLERGY_INFORMATION_SOURCE+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ONSET+"</div>"+sidePanelRow.ALLERGY_DATE+"</dd><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl><dl><dd><div class='al-wf-title-text'>"+allergyI18N.COMMENTS+"</div>"+sidePanelRow.ALLERGY_COMMENTS+"</dd></dl>";
if(sidePanelRow.ORIGINATING_SOURCE_CD){var originInfoHTML="<dl><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ORIGINATING_SOURCE+"</div><span class='res-normal'>"+sidePanelRow.ORIGINATING_SOURCE_TEXT+"</span></dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ORIGINATING_AUTHOR+"</div><span class='res-normal'>"+sidePanelRow.ORIGINATING_AUTHOR+"</span></dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.SUBMITTED_DATE_TIME+"</div><span class='res-normal'>"+sidePanelRow.ORIGINATING_DT_TM_TEXT+"</span></dd><dl>";
allergyHTML+=originInfoHTML;
}this.m_sidePanel.setApplyBodyContentsPadding(true);
sidePanelHTML+=allergyHTML+"</div></div></div>";
this.m_sidePanel.setContents(sidePanelHTML,"wf_alContent"+componentId);
var markAsReviewedBtn=$("#allergyMarkReviewedButton"+componentId);
var self=this;
markAsReviewedBtn.click(function(){var timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Mark As Reviewed");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="DIRECTWRITE";
self.populateAllergyReqForPatientRequest(sidePanelRow,"MARK_AS_REVIEWED");
});
};
AllergyComponentWF.prototype.createModificationList=function(sidePanelRow,componentId){var allergyI18N=i18n.discernabu.allergy_o2;
var modificationsMarkup="<div id='alModifications"+componentId+"' class='al-modifications'>";
modificationsMarkup+="<ul>";
if(sidePanelRow&&sidePanelRow.INTEROP&&sidePanelRow.INTEROP.MOD_REACTIONS.length){var reactionsCnt=sidePanelRow.INTEROP.MOD_REACTIONS.length;
for(var i=0;
i<reactionsCnt;
i++){var reaction=sidePanelRow.INTEROP.MOD_REACTIONS[i];
var modRow="";
var requestType=MP_Util.GetValueFromArray(reaction.STATUS,this.m_codesArray).meaning;
if(requestType==="ADD"){modRow="<li>"+allergyI18N.ADD+' "'+(reaction.REACTION_NAME||"--")+'"</li>';
}else{if(requestType==="REMOVE"){modRow="<li>"+allergyI18N.REMOVE+' "'+(reaction.REACTION_NAME||"--")+'"</li>';
}}modificationsMarkup+=modRow;
}}modificationsMarkup+="</ul>";
return modificationsMarkup;
};
AllergyComponentWF.prototype.findCodeByMeaning=function(results,meaning){var code=0;
for(var x=results.length;
x--;
){var result=results[x];
if(result.MEANING===meaning){code=result.CODE;
break;
}}return code;
};
AllergyComponentWF.prototype.processMandatoryFieldsForAddPatReq=function(sidePanelRow,patReqObj){var SOURCES_CODESET=12023;
var SEVERITY_CODESET=12022;
var ONSET_CODESET=25320;
var self=this;
function processCodeSetResults(severityResults){var severityNotEnteredCd=0;
var onsetNotEnteredCd=0;
severityNotEnteredCd=self.findCodeByMeaning(severityResults,"NOTENTERED");
if(severityNotEnteredCd){MP_Util.GetCodeSetAsync(ONSET_CODESET,function(onsetResults){onsetNotEnteredCd=self.findCodeByMeaning(onsetResults,"NOTENTERED");
if(onsetNotEnteredCd&&severityNotEnteredCd){sidePanelRow.SEVERITY_NOTENTERED_CD=severityNotEnteredCd;
self.populateAllergyReqForPatientRequest(sidePanelRow,"ADD");
}else{self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
}});
}else{self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
}}var sourceOfInfoObj=(sidePanelRow.INTEROP)?MP_Util.GetValueFromArray(sidePanelRow.INTEROP.SUBMITTED_BY_CD,self.m_codesArray):null;
if(sourceOfInfoObj){var sourceOfInfoMeaning=sourceOfInfoObj.meaning;
MP_Util.GetCodeSetAsync(SOURCES_CODESET,function(sourcesResults){var sourceCd=self.findCodeByMeaning(sourcesResults,sourceOfInfoMeaning);
if(sourceCd){sidePanelRow.SOURCE_OF_INFO_CD=sourceCd;
MP_Util.GetCodeSetAsync(SEVERITY_CODESET,processCodeSetResults);
}else{self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
}});
}else{self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
}};
AllergyComponentWF.prototype.createAllergyFreeTextBanner=function(status,patReqInd){var markup="";
var allergyI18N=i18n.discernabu.allergy_o2;
var banner=new MPageUI.AlertBanner();
switch(status){case 1:case 2:banner.setType(MPageUI.ALERT_OPTIONS.TYPE.WARNING);
banner.setPrimaryText(allergyI18N.FREE_TEXT_WARNING_BANNER_TEXT);
markup=banner.render();
break;
case 3:if(patReqInd){banner.setType(MPageUI.ALERT_OPTIONS.TYPE.INFO);
banner.setPrimaryText(allergyI18N.CANNOT_ADD_FREETXT_ALLERGY_BANNER);
markup=banner.render();
}break;
}return markup;
};
AllergyComponentWF.prototype.buildSidePanelContentForInteropAllergy=function(sidePanelRow,componentId,requestType){var allergyI18N=i18n.discernabu.allergy_o2;
var sidePanelActionsHtml="";
var sidePanelBodyHtml="";
var allergyHTML="";
var self=this;
var outsideReqSecTitle="";
var outsideReqSecDetails="";
var btnLabel="";
var dropDownOptionLbl="";
var btnMarkup="";
var rejectBtnMarkup="";
var lblBtnCallback=null;
var dropDownCallback=null;
var allergyFreeTxtBanner="";
var actionabilityBanner="";
var patReqObj={OUTSIDE_REQUESTS_SECTION:"",REQUEST_TYPE:requestType};
var timer;
var canAddFreeTxtAllergy=true;
this.m_sidePanel.setAlertBannerAsHTML("");
this.m_sidePanel.removeAlertBanner();
this.m_sidePanel.setContents("","wf_alContent"+componentId);
this.m_sidePanel.setApplyBodyContentsPadding(false);
this.currentAllergyDetailsObj=sidePanelRow;
var splitButton=null;
var removeButton=null;
var rejectButton=null;
switch(requestType){case"ADD":btnLabel=allergyI18N.ADD;
dropDownOptionLbl=allergyI18N.ADD_WITH_CHANGES;
outsideReqSecTitle=allergyI18N.ADDITION;
outsideReqSecDetails="<ul><li>"+allergyI18N.ADD+" "+sidePanelRow.ALLERGY_NAME+"<li>";
if(!sidePanelRow.NOMENCLATURE_ID){var freeTextStatus=self.getAllergyFreeTextStatusPriv();
allergyFreeTxtBanner=self.createAllergyFreeTextBanner(freeTextStatus,1);
if(freeTextStatus===3){canAddFreeTxtAllergy=false;
}}lblBtnCallback=function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Add");
timer.capture();
var notEnteredCd;
sidePanelRow.REQUEST_STATUS_MEANING="ACCEPTED";
self.processMandatoryFieldsForAddPatReq(sidePanelRow,patReqObj);
};
dropDownCallback=function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Add With Changes");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="ACCEPTED";
self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
};
break;
case"UPDATE":btnLabel=allergyI18N.ACCEPT;
dropDownOptionLbl=allergyI18N.ACCEPT_WITH_CHANGES;
outsideReqSecTitle=allergyI18N.MODIFICATIONS;
outsideReqSecDetails=self.createModificationList(sidePanelRow,componentId);
lblBtnCallback=function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Accept");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="ACCEPTED";
self.processAcceptedPatientRequest(sidePanelRow,patReqObj);
};
dropDownCallback=function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Accept With Changes");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="ACCEPTED";
self.modifyAllergyDetails(null,sidePanelRow,patReqObj);
};
break;
case"REMOVE":btnLabel=allergyI18N.REMOVE;
outsideReqSecTitle=allergyI18N.REMOVAL;
lblBtnCallback=function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Accept");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="ACCEPTED";
self.populateAllergyReqForPatientRequest(sidePanelRow,requestType);
};
outsideReqSecDetails="<ul><li>"+allergyI18N.REMOVE+" "+sidePanelRow.ALLERGY_NAME+"<li>";
break;
}if(sidePanelRow.IS_ALLERGY_MODIFIABLE){if(requestType!=="REMOVE"){if(self.getActionabilityPriv()){var duplicateAllergyInd=false;
if(this.isDuplicateAllergy(sidePanelRow.NAME)){this.validationErrorAction(3);
duplicateAllergyInd=true;
}var disableSplitButton=!canAddFreeTxtAllergy||duplicateAllergyInd;
splitButton=new MPageUI.SplitButton();
splitButton.setLabel(btnLabel);
splitButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
splitButton.setLabelButtonClickCallback(lblBtnCallback);
splitButton.getLabelButton().setDisabled(disableSplitButton);
splitButton.getDropdownButton().setDisabled(disableSplitButton);
splitButton.addOptions([{label:dropDownOptionLbl,onSelect:dropDownCallback}]);
btnMarkup=splitButton.render();
actionabilityBanner=self.renderActionabilityBanner();
}self.m_sidePanel.setAlertBannerAsHTML(allergyFreeTxtBanner+actionabilityBanner);
}else{removeButton=new MPageUI.Button();
removeButton.setLabel(allergyI18N.REMOVE);
removeButton.setOnClickCallback(lblBtnCallback);
removeButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
btnMarkup=removeButton.render();
}rejectButton=new MPageUI.Button();
rejectButton.setLabel(allergyI18N.REJECT_REQUEST);
rejectButton.setOnClickCallback(function(){timer=new CapabilityTimer("CAP:MPG Allergies Reconcile Patient Entered Data","Reject Request");
timer.capture();
sidePanelRow.REQUEST_STATUS_MEANING="REJECTED";
self.allergyRequest=new self.AllergyRequestJSON();
self.performAllergyRequest(self,sidePanelRow);
});
rejectButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
rejectBtnMarkup=rejectButton.render();
}sidePanelActionsHtml="<div id='allergySPAction"+componentId+"' class='al-sp-actions'><span class='al-split-btn'>"+btnMarkup+"</span><span class='al-reject-btn'>"+rejectBtnMarkup+"</span></div>";
this.m_sidePanel.setActionsAsHTML(sidePanelActionsHtml);
if(splitButton){splitButton.attachEvents();
}if(removeButton){removeButton.attachEvents();
}if(rejectButton){rejectButton.attachEvents();
}sidePanelBodyHtml="<div id='sidePanelScrollContainer"+componentId+"'><div id='wf_al"+componentId+"sidePanelResultList' class='al-wf-side-panel-result-list'>";
var outsideReqSection="<div class='al-outside-requests'><h3 class='al-expand-content'><span class='al-sec-toggle'>&nbsp;</span><span class='pat-req-icon'>&nbsp;</span><span>"+allergyI18N.OUTSIDE_REQUESTS+"</span><span class='outside-req-date'>"+(sidePanelRow.OUTSIDE_REQUESTS_DATE_TM||"--")+"</span></h3>";
outsideReqSection+="<dl class='al-sp-sec-container'><dd><div class='al-wf-title-text'>"+outsideReqSecTitle+"</div>"+outsideReqSecDetails+"</dd>";
if(requestType==="ADD"){outsideReqSection+="<dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.REACTION+"</div>"+sidePanelRow.ALLERGY_REACTIONS+"</dd></dl>";
outsideReqSection+="<dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.CATEGORY+"</div>"+sidePanelRow.CATEGORY+"</dd>";
outsideReqSection+="<dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.REACTION_TYPE+"</div>"+sidePanelRow.ALLERGY_REACTION_TYPE+"</dd></dl>";
}outsideReqSection+="<dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ORIGINATING_SOURCE+"</div>"+sidePanelRow.INFO_SOURCE_TEXT+"</dd>";
outsideReqSection+="<dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ORIGINATING_AUTHOR+"</div>"+sidePanelRow.ALLERGY_AUTHOR+"</dd></dl>";
outsideReqSection+="<dl><dd><div class='al-wf-title-text'>"+allergyI18N.PATIENT_COMMENT+"</div>"+(sidePanelRow.PATIENT_COMMENT||"--")+"</dd></dl></dl>";
outsideReqSection+="</div><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div>";
allergyHTML+=outsideReqSection;
if(requestType!=="ADD"){allergyHTML+="<dl><dd><div class='al-wf-title-text'>"+allergyI18N.REACTION+"</div>"+sidePanelRow.CHARTED_REACTIONS+"</dd><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl><dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.SEVERITY+"</div>"+sidePanelRow.ALLERGY_SEVERITY+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.REACTION_TYPE+"</div>"+sidePanelRow.ALLERGY_REACTION_TYPE+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.CATEGORY+"</div>"+sidePanelRow.CATEGORY+"</dd><br /><br /></dl><dl><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.STATUS+"</div>"+sidePanelRow.STATUS+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+i18n.SOURCE+"</div>"+sidePanelRow.CHARTED_INFORMATION_SOURCE+"</dd><dd class='side-panel-dd'><div class='al-wf-title-text'>"+allergyI18N.ONSET+"</div>"+sidePanelRow.ALLERGY_DATE+"</dd><div class = 'sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl><dl><dd><div class='al-wf-title-text'>"+allergyI18N.COMMENTS+"</div>"+sidePanelRow.ALLERGY_COMMENTS+"</dd></dl>";
}sidePanelBodyHtml+=allergyHTML+"</div></div></div>";
this.m_sidePanel.setContents(sidePanelBodyHtml,"wf_alContent"+componentId);
patReqObj.OUTSIDE_REQUESTS_SECTION=outsideReqSection;
};
AllergyComponentWF.prototype.addCellClickExtension=function(){var component=this;
var cellClickExtension=new TableCellClickCallbackExtension();
cellClickExtension.finalize=function(table){var self=this;
var namespace=table.getNamespace();
var resultData=null;
var columnId="";
var data={};
$("#"+namespace+"tableBody").on("mouseup","dl.result-info",function(event){resultData=ComponentTableDataRetriever.getResultFromTable(table,this);
data={RESULT_DATA:resultData,SOURCE:"TableCellClickCallbackExtension:ROW_CLICK"};
self.callback(event,data);
});
};
cellClickExtension.setCellClickCallback(function(event,data){component.onRowClick(event,data);
});
this.allergyTable.addExtension(cellClickExtension);
};
AllergyComponentWF.prototype.onRowClick=function(event,data){var targetClass="";
var target=event.target;
var patientReqRow=data.RESULT_DATA.REQUEST;
if(!target||this.allergyRequest||(data.RESULT_DATA.ALLERGY_CUSTOM_NAME==="NKA"&&!patientReqRow)||(data.RESULT_DATA.ALLERGY_CUSTOM_NAME==="NKMA"&&!patientReqRow)){return;
}targetClass=target.className;
this.setPanelContentsToClickedRow(event,data);
this.allergySearchElement.attr("disabled",false);
};
AllergyComponentWF.prototype.onHiRowClick=function(event,dataElement){if(this.allergyRequest){return;
}var length=dataElement.getAttribute("id").length;
var partialId="wf_al"+this.m_compId+"hi:row";
var index=dataElement.getAttribute("id").replace(partialId,"");
var dataObject=this.m_processedHiDataObject[index];
this.setHiPanelContentsToClickedRow(event,dataObject);
};
AllergyComponentWF.prototype.setHiPanelContentsToClickedRow=function(event,dataObj){var componentId=this.m_componentId;
var allergyI18N=i18n.discernabu.allergy_o2;
var criterion=this.criterion;
if(this.m_hiClickedRow&&event.currentTarget.id==this.m_hiClickedRow.id){this.m_sidePanel.m_cornerCloseButton.trigger("click");
this.m_hiClickedRow="";
return;
}if(this.m_clickedRow){this.m_sidePanel.m_cornerCloseButton.trigger("click");
this.m_clickedRow="";
}$("#wf_al"+componentId+"table").addClass("allergy-sp-hide-mode");
$("#wf_al"+componentId+"hitable").addClass("allergy-sp-hide-mode");
if(!this.m_showPanel){$("#wf_al"+componentId+" .al-wf-table-containers").addClass("al-wf-side-panel-addition");
this.m_sidePanelContainer.css("display","inline-block");
this.m_showPanel=true;
this.m_sidePanel.showPanel();
var bannerDivHeight=$("#al-wf-banner-holder"+componentId).length?($("#al-wf-banner-holder"+componentId).length+parseFloat($("#wf_al"+this.getComponentId()+" .al-wf-hi-container").css("margin-bottom"))):0;
$("#wf_al"+this.m_compId+"sidePanelContainer").css("margin-top",bannerDivHeight);
}this.m_sidePanel.setContents("<div><div>","wf_alContent"+componentId);
if(event){var currentRowSelected=event.currentTarget;
this.m_hiClickedRow=currentRowSelected;
this.highlightSelectedRow(currentRowSelected,false);
}this.m_sidePanel.setTitleText(dataObj.ALLERGY_NAME_SIDE_PANEL);
this.m_sidePanel.setSubtitleText(dataObj.AlLERGY_CODE);
this.m_sidePanel.setActionsAsHTML("");
var sidePanelHTML="<div id='sidePanelScrollContainer"+componentId+"'><div id='wf_al"+componentId+"sidePanelResultList' class='al-wf-side-panel-result-list'>";
var allergyHTML="";
var imgUrl=this.getCriterion().static_content+"/images/6965.png";
allergyHTML+="<dl><dd><span><img class ='al-wf-externalData' src='"+imgUrl+"'></span><div class='al-wf-panel-source al-wf-title-text'>"+allergyI18N.UNVERIFIED_RECORDS+"</div><br>"+dataObj.ALLERGY_SOURCE+"</dd><div class = 'sp-separator2'>&nbsp;</div></dl><br><dl><dd><div class='al-wf-title-text'>"+allergyI18N.REACTION_SEVERITY+"</div>"+dataObj.ALLERGY_REACTIONS_SEVERITY+"</dd><div class = 'sp-separator2'>&nbsp;</div></dl><br><dl><dd><div class='al-wf-title-text'>"+allergyI18N.ONSET_DATE+"</div>"+dataObj.ONSET_DATE_SIDE_PANEL+"</dd><div class = 'sp-separator2'>&nbsp;</div></dl><br><dl><dd><div class='al-wf-title-text'>"+allergyI18N.COMMENTS+"</div>"+dataObj.ALLERGY_COMMENTS_SIDE_PANEL+"</dd><div class = 'sp-separator2'>&nbsp;</div></dl><br>";
sidePanelHTML+=allergyHTML+"</div></div></div>";
this.m_sidePanel.setContents(sidePanelHTML,"wf_alContent"+componentId);
this.m_sidePanel.expandSidePanel();
this.moveSidePanel();
$("#wf_alContent"+this.m_compId).css("height","");
};
AllergyComponentWF.prototype.setPanelContentsToClickedRow=function(event,dataObj){var componentId=this.getComponentId();
var allergyI18N=i18n.discernabu.allergy_o2;
var criterion=this.getCriterion();
if(this.m_clickedRow&&event.currentTarget.id===this.m_clickedRow.id){this.m_sidePanel.m_cornerCloseButton.trigger("click");
return;
}if(this.displayHiDataInd&&this.m_hiClickedRow){this.m_sidePanel.m_cornerCloseButton.trigger("click");
this.m_hiClickedRow="";
}$("#wf_al"+this.m_compId+"table").addClass("allergy-sp-hide-mode");
if(this.displayHiDataInd){this.m_hiTableContainer.addClass("allergy-sp-hide-mode");
}if(!this.m_showPanel){if(this.displayHiDataInd){$("#wf_al"+this.m_compId+" .al-wf-table-containers").addClass("al-wf-side-panel-addition");
var bannerDivHeight=$("#al-wf-banner-holder"+componentId).length?($("#al-wf-banner-holder"+componentId).length+parseFloat($("#wf_al"+this.m_compId+" .al-wf-hi-container").css("margin-bottom"))):0;
$("#wf_al"+this.m_compId+"sidePanelContainer").css("margin-top",bannerDivHeight);
}else{$("#wf_al"+this.m_compId+"table").addClass("al-wf-side-panel-addition");
}this.m_sidePanelContainer.css("display","inline-block");
this.m_showPanel=true;
this.m_sidePanel.showPanel();
}if(event){var currentRowSelected=event.currentTarget;
this.m_clickedRow=currentRowSelected;
this.highlightSelectedRow(currentRowSelected,false);
}$("#sidePanel"+this.m_compId).find(".loading-screen").remove();
this.m_sidePanel.setTitleText(dataObj.RESULT_DATA.NAME);
var allergyResults=this.sidePanelData;
var resultLength=allergyResults.length;
var sidePanelRow=null;
sidePanelRow=allergyResults[dataObj.RESULT_DATA.ALLERGY_INDEX];
var requestType=(dataObj.RESULT_DATA.REQUEST)?dataObj.RESULT_DATA.REQUEST:"--";
if(!this.displayHiDataInd){switch(requestType){case"ADD":case"UPDATE":case"REMOVE":this.buildSidePanelContentForInteropAllergy(sidePanelRow,componentId,requestType);
break;
case"--":this.buildOtherChartedAllergySidePanelContent(sidePanelRow,componentId);
break;
}}else{this.buildOtherChartedAllergySidePanelContent(sidePanelRow,componentId);
}var self=this;
var modifyBtn=$("#allergyModifyButton"+componentId);
if(this.getActionabilityPriv()&&sidePanelRow.IS_ALLERGY_MODIFIABLE===1){modifyBtn.click(function(){self.modifyAllergyDetails(event,sidePanelRow);
});
}else{modifyBtn.removeClass("al-wf-modify-button").addClass("al-wf-no-edit-mode");
}if(this.m_showPanel){this.resizeSidePanel();
}if(this.displayHiDataInd){this.moveSidePanel();
$("#wf_alContent"+this.m_compId).css("height","");
}};
AllergyComponentWF.prototype.highlightSelectedRow=function(selRowObj,isInitialLoad){try{var compID=this.getComponentId();
var rowID="";
if(selRowObj){var rowParts=selRowObj.id.split(":");
for(var i=0;
i<rowParts.length;
i++){rowID+=rowParts[i];
if((i+1)!==rowParts.length){rowID+="\\:";
}}}var tableViewObj=$("#wf_al"+compID+"table");
var hiTableViewObj;
if(this.displayHiDataInd){hiTableViewObj=$("#wf_al"+compID+"hitable");
}var prevRow=tableViewObj.find(".selected");
if(!prevRow.length&&this.displayHiDataInd){prevRow=hiTableViewObj.find(".selected");
}if(prevRow.length){if(prevRow.hasClass("al-wf-selected-row selected")){prevRow.removeClass("al-wf-selected-row selected");
}}var newClass="al-wf"+(isInitialLoad?"-selected-row-init":"-selected-row")+" selected";
$("#"+rowID).addClass(newClass);
}catch(err){MP_Util.LogJSError(err,this,"allergy_o2.js","highlightSelectedRow");
}};
AllergyComponentWF.prototype.initializeSidePanel=function(){var self=this;
var compID=this.getComponentId();
var sidePanelContId="wf_al"+compID+"sidePanelContainer";
this.m_sidePanelContainer=$("#"+sidePanelContId);
this.m_sidePanelMinHeight="175px";
var windowPadding=70;
var maxViewHeight=($("#vwpBody").height()-windowPadding)+"px";
this.m_tableContainer=$("#wf_al"+compID+"table");
if(this.displayHiDataInd){this.m_hiTableContainer=$("#wf_al"+compID+"hitable");
}var tableHeight=$("#wf_al"+compID+"table").height();
var offsetHeight=$("#wf_alContent"+compID).height()-$("#wf_al"+compID+"table").height();
var allergyTabContent=$("#wf_alContent"+compID);
if(!this.m_sidePanelContainer.length){var allergySidePanelContainer="<div id='"+sidePanelContId+"' class='al-wf-side-panel'>&nbsp;</div>";
allergyTabContent.append(allergySidePanelContainer);
}var sidePanelHTML="<div id='sidePanelScrollContainer"+compID+"'><div id='wf_al"+compID+"sidePanelResultList' class='al-wf-side-panel-result-list'>";
this.m_sidePanel=new CompSidePanel(compID,sidePanelContId);
this.m_sidePanel.setExpandOption(this.m_sidePanel.expandOption.EXPAND_DOWN);
this.m_sidePanel.setOffsetHeight(offsetHeight);
this.m_sidePanel.setHeight($("#wf_al"+compID+"table").height()+"px");
this.m_sidePanel.setMinHeight(this.m_sidePanelMinHeight);
this.m_sidePanel.setMaxHeight(maxViewHeight);
this.m_sidePanel.renderPreBuiltSidePanel();
this.m_sidePanel.setActionsAsHTML("<div id='allergySPAction"+compID+"' class='al-sp-actions'><div class='sp-button2 al-wf-modify-button' id='allergyModifyButton"+compID+"'>"+i18n.discernabu.allergy_o2.MODIFY+"</div></div>");
this.m_sidePanel.setContents(sidePanelHTML,"wf_alContent"+compID);
this.m_sidePanel.showCornerCloseButton();
this.m_sidePanel.setCornerCloseFunction(function(){$("#saveFailErrorMessage"+self.m_compId).remove();
self.m_tableContainer.removeClass("al-wf-side-panel-addition");
self.highlightSelectedRow(false,false);
self.m_showPanel=false;
self.m_clickedRow=null;
$("#wf_al"+compID+"table").removeClass("allergy-sp-hide-mode");
self.newNomenId=null;
self.allergyRequest=null;
self.m_sidePanelContainer.css("display","none");
self.m_sidePanel.setAlertBannerAsHTML("");
self.currentAllergyDetailsObj=null;
self.m_sidePanel.removeAlertBanner();
if(self.displayHiDataInd){self.m_sidePanelContainer.css("display","none");
self.m_hiClickedRow=null;
$("#wf_al"+compID+"hitable").removeClass("allergy-sp-hide-mode");
$("#wf_al"+compID+" .al-wf-table-containers").removeClass("al-wf-side-panel-addition");
}});
this.m_sidePanelContainer=$("#"+sidePanelContId);
};
AllergyComponentWF.prototype.binaryIndexOf=function(searchElement){var minIndex=0;
var maxIndex=this.length-1;
var currentIndex;
var currentElement;
while(minIndex<=maxIndex){currentIndex=(minIndex+maxIndex)/2|0;
currentElement=this[currentIndex].key;
if(currentElement<searchElement){minIndex=currentIndex+1;
}else{if(currentElement>searchElement){maxIndex=currentIndex-1;
}else{return currentIndex;
}}}return -1;
};
AllergyComponentWF.prototype.suggestRemoveNomenSearchResult=function(nomenPrivObjList,id){var index=this.binaryIndexOf.call(nomenPrivObjList,id);
if(index>-1){if(nomenPrivObjList[index].value===0){return 0;
}if(nomenPrivObjList[index].value===1){return -1;
}}else{if(this.update_priv_default===0){return 0;
}}};
AllergyComponentWF.prototype.addAllergySearch=function(){var component=this;
var compId=component.getComponentId();
var allergyI18N=i18n.discernabu.allergy_o2;
var alSearchContainer=$("#alSearchContainer"+compId);
var alSearchBar=new MPageControls.NomenclatureSearch(alSearchContainer);
component.alSearchBar=alSearchBar;
var alSearchInputElement=alSearchContainer.find("input");
component.allergySearchElement=alSearchInputElement;
alSearchBar.setCaption(allergyI18N.ADD_ALLERGY);
alSearchBar.setCaptionClass("secondary-text");
alSearchBar.activateCaption();
alSearchBar.setSourceFlag(11);
alSearchBar.setDelay(500);
var nomenSearchItemTemplate=new TemplateEngine.TemplateFactory((function(){var template=TemplateEngine;
var div=template.tag("div");
return{nomenInfo:function(context){if(context.m_Data.ID===0){var inputString=context.m_Data.SOURCESTRING.match(/"(.*?)"/g)[0];
if(component.isDuplicateAllergy(inputString.replace(/\"/g,""))){return div({"class":"al-free-text-item disabled",id:context._elementId},context.m_Data.SOURCESTRING);
}return div({"class":"al-free-text-item",id:context._elementId},context.m_Data.SOURCESTRING);
}else{return div({id:context._elementId},context.m_Data.SOURCESTRING);
}}};
})());
alSearchBar.setListItemTemplate(nomenSearchItemTemplate.nomenInfo);
var origHandleReplyList=alSearchBar.handleReplyList;
alSearchBar.handleReplyList=function(replyList,reply,err){var customNomen=new MPageEntity.entities.Nomenclature();
var freeTextPref=component.getAllergyFreeTextStatusPriv();
var freeTextAllergies="";
if(component.nomen_granted&&component.nomen_granted.length>0){for(var i=0;
i<replyList.length;
){if(replyList[i]&&replyList[i].getData()){if(component.suggestRemoveNomenSearchResult(component.nomen_granted,replyList[i].getId())===0){replyList.splice(i,1);
}else{i++;
}}}}var searchString=$("#alSearchContainer"+component.m_compId).find("input").val();
if(freeTextPref!==3){if(component.validateSearchInput(searchString)){freeTextAllergies='"'+searchString+'"';
if(component.isDuplicateAllergy(searchString)){customNomen.setId(0);
customNomen.setSourceString(allergyI18N.DUPLICATE_ALLERGY_SEARCH_TEXT.replace("{0}",freeTextAllergies));
replyList.push(customNomen);
}else{customNomen.setId(0);
customNomen.setSourceString(allergyI18N.ADD_AS_FREE_TEXT.replace("{0}",freeTextAllergies));
replyList.push(customNomen);
}}}origHandleReplyList.call(this,replyList,reply,err);
MPageControls.NomenclatureSearch.prototype.setSuggestions.call(this,replyList);
this.getList().setSelectedIndex(0);
this.getList().highlight(0);
};
alSearchBar.getList().highlight=function(index){var rowToHighlight=this.getElement().find("#"+this.getIdByIndex(index));
if(!rowToHighlight.hasClass("disabled")){this.getElement().find("."+this.getHighlightClass()).removeClass(this.getHighlightClass());
rowToHighlight.addClass(this.getHighlightClass());
}};
alSearchBar.getList().setOnSelect(function(nomen){if(nomen.getId()===0){nomen.setSourceString(alSearchInputElement.val());
component.AllergyName=alSearchInputElement.val();
component.isFreeTextAllergy=true;
}if(!component.isDuplicateAllergy(nomen.getSourceString())){alSearchBar.activateCaption();
alSearchBar.close();
AllergyComponentWF.prototype.handleSelectedAllergy(component,nomen.getId(),nomen.getSourceString());
}});
component.alSearchBar=alSearchBar;
alSearchInputElement.click(function(){$("#alErrorMessage"+compId).remove();
var alSearchContent=alSearchInputElement.val();
if(!alSearchContent||alSearchContent===allergyI18N.ADD_ALLERGY){alSearchInputElement.val("");
alSearchInputElement.addClass("secondary-text");
}else{alSearchInputElement.removeClass("secondary-text");
}});
alSearchInputElement.bind("change focusout",function(){var alSearchContent=alSearchInputElement.val();
if(!alSearchContent||alSearchContent===allergyI18N.ADD_ALLERGY){alSearchInputElement.val(allergyI18N.ADD_ALLERGY);
alSearchInputElement.addClass("secondary-text");
}else{alSearchInputElement.removeClass("secondary-text");
}});
};
AllergyComponentWF.prototype.populateAllergyReqForPatientRequest=function(allergyResultObj,requestType){var allergyI18N=i18n.discernabu.allergy_o2;
try{var i=0;
var prsnlId=this.criterion.getPersonnelInfo().getPersonnelId()||0;
this.allergyRequest=new this.AllergyRequestJSON();
this.allergyRequest.PERSON_ID=this.criterion.person_id;
this.allergyRequest.ENCNTR_ID=this.criterion.encntr_id;
this.allergyRequest.ALLERGY_ID=allergyResultObj.ALLERGY_ID;
this.allergyRequest.ALLERGY_INSTANCE_ID=allergyResultObj.ALLERGY_INSTANCE_ID;
this.allergyRequest.SUBSTANCE_NOM_ID=allergyResultObj.NOMENCLATURE_ID;
this.allergyRequest.SUBSTANCE_TYPE_CD=allergyResultObj.SUBSTANCE_TYPE_CD;
this.allergyRequest.REACTION_CLASS_CD=allergyResultObj.REACTION_CLASS_CD;
this.allergyRequest.SEVERITY_CD=(requestType==="ADD")?allergyResultObj.SEVERITY_NOTENTERED_CD:allergyResultObj.SEVERITY_CD;
this.allergyRequest.SOURCE_OF_INFO_CD=allergyResultObj.SOURCE_OF_INFO_CD;
this.allergyRequest.REACTION_STATUS_CD=(allergyResultObj.REACTION_STATUS_CD||0);
this.allergyRequest.ONSET_DT_TM=allergyResultObj.ONSET_DT_TM;
this.allergyRequest.ONSET_PRECISION_CD=allergyResultObj.ONSET_PRECISION_CD;
this.allergyRequest.ONSET_PRECISION_FLAG=(allergyResultObj.ONSET_PRECISION_FLAG||0);
this.allergyRequest.SUBSTANCE_FTDESC=allergyResultObj.NAME;
if(requestType!=="REMOVE"){this.allergyRequest.ACTIVE_IND=1;
if(this.getMarkAsReviewedPriv()){this.allergyRequest.REVIEWED_DT_TM=new Date().toJSON();
this.allergyRequest.REVIEWED_TZ=this.criterion.client_tz;
this.allergyRequest.REVIEWED_PRSNL_ID=prsnlId;
}}else{this.allergyRequest.ACTIVE_IND=0;
this.allergyRequest.CANCEL_DT_TM=new Date().toJSON();
this.allergyRequest.CANCEL_PRSNL_ID=prsnlId;
var reactionStatusCdObj=MP_Util.GetCodeValueByMeaning("CANCELED",12025);
this.allergyRequest.REACTION_STATUS_CD=(reactionStatusCdObj)?reactionStatusCdObj.codeValue:0;
var patientReqCodeObj=MP_Util.GetCodeByMeaning(this.m_codesArray,"PATIENTREQ");
if(patientReqCodeObj){this.allergyRequest.CANCEL_REASON_CD=patientReqCodeObj.codeValue;
}else{throw"Error: populateAllergyReqForPatientRequest() while performing MP_Util.GetCodeByMeaning for 'PATIENTREQ'";
}}var allergyReactionsLen=0;
var reactionData=null;
var reactionObj=null;
if(requestType==="UPDATE"&&allergyResultObj.INTEROP){allergyReactionsLen=allergyResultObj.INTEROP.MOD_REACTIONS.length;
reactionData=allergyResultObj.INTEROP.MOD_REACTIONS;
}else{allergyReactionsLen=allergyResultObj.REACTIONS.length;
reactionData=allergyResultObj.REACTIONS;
}this.allergyRequest.REACTION_CNT=allergyReactionsLen;
for(i=0;
i<allergyReactionsLen;
i++){reactionObj=new this.ReactionRequestJSON();
reactionObj.REACTION_ID=reactionData[i].REACTION_ID;
reactionObj.ALLERGY_ID=allergyResultObj.ALLERGY_ID;
reactionObj.REACTION_NOM_ID=reactionData[i].REACTION_NOM_ID;
reactionObj.REACTION_FTDESC=(reactionData[i].REACTION_NAME)?reactionData[i].REACTION_NAME:"";
var action=(reactionData[i].STATUS)?MP_Util.GetValueFromArray(reactionData[i].STATUS,this.m_codesArray).meaning:"";
if(action==="REMOVE"){reactionObj.ACTIVE_IND=0;
}else{reactionObj.ACTIVE_IND=1;
}this.allergyRequest.REACTION.push(reactionObj);
}if(requestType==="UPDATE"&&allergyResultObj.INTEROP){var chartReactionsLen=allergyResultObj.REACTIONS.length;
var chartReactionData=allergyResultObj.REACTIONS;
for(i=0;
i<chartReactionsLen;
i++){var chartedReaction=chartReactionData[i];
var reactionRemovedInd=false;
for(var j=0;
j<this.allergyRequest.REACTION_CNT;
j++){var reqReaction=this.allergyRequest.REACTION[j];
if(chartedReaction.REACTION_ID===reqReaction.REACTION_ID&&reqReaction.ACTIVE_IND===0){reactionRemovedInd=true;
}}if(!reactionRemovedInd){reactionObj=new this.ReactionRequestJSON();
reactionObj.REACTION_ID=chartedReaction.REACTION_ID;
reactionObj.ALLERGY_ID=allergyResultObj.ALLERGY_ID;
reactionObj.REACTION_NOM_ID=chartedReaction.REACTION_NOM_ID;
reactionObj.REACTION_FTDESC=(chartedReaction.REACTION_NAME)?chartedReaction.REACTION_NAME:"";
reactionObj.ACTIVE_IND=1;
this.allergyRequest.REACTION.push(reactionObj);
}}this.allergyRequest.REACTION_CNT=this.allergyRequest.REACTION.length;
}var allergyCommentsLen=allergyResultObj.COMMENTS.length;
this.allergyRequest.ALLERGY_COMMENT_CNT=allergyCommentsLen;
for(i=0;
i<allergyCommentsLen;
i++){var commentObj=new this.CommentRequestJSON();
commentObj.ALLERGY_COMMENT_ID=allergyResultObj.COMMENTS[i].COMMENT_ID;
commentObj.ALLERGY_ID=allergyResultObj.ALLERGY_ID;
commentObj.ALLERGY_COMMENT=allergyResultObj.COMMENTS[i].COMMENT_TEXT;
commentObj.COMMENT_DT_TM=new Date().toJSON();
commentObj.COMMENT_PRSNL_ID=this.criterion.getPersonnelInfo().getPersonnelId()||0;
this.allergyRequest.ALLERGY_COMMENT.push(commentObj);
}this.performAllergyRequest(this,allergyResultObj);
}catch(err){if($("#sidePanelHeader"+this.m_compId).find("#saveFailErrorMessage"+this.m_compId).length===0){errorMessageHTML="<div id='saveFailErrorMessage"+this.m_compId+"' class='al-save-error-message'><div class='error-container inline-message'><span class='error-text message-info-text'>"+allergyI18N.ERROR_PERFORMING_ACTION+"</span></div></div>";
$("#sidePanelHeader"+this.m_compId).prepend(errorMessageHTML);
}logger.logWarning(err);
}};
AllergyComponentWF.prototype.setSourceOfInfoCd=function(currentAllergyDetailsObj,sourcesResults){var currentInteropData=currentAllergyDetailsObj.INTEROP;
var sourceOfInfoObj=(currentInteropData&&currentInteropData.SUBMITTED_BY_CD>0)?MP_Util.GetValueFromArray(currentInteropData.SUBMITTED_BY_CD,this.m_codesArray):null;
currentAllergyDetailsObj.SOURCE_OF_INFO_CD=(sourceOfInfoObj)?this.findCodeByMeaning(sourcesResults,sourceOfInfoObj.meaning):0;
};
AllergyComponentWF.prototype.processAcceptedPatientRequest=function(currentAllergyDetailsObj,patReqObj){var self=this;
var SOURCES_CODESET=12023;
try{MP_Util.GetCodeSetAsync(SOURCES_CODESET,function(sourcesResults){self.setSourceOfInfoCd(currentAllergyDetailsObj,sourcesResults);
if(currentAllergyDetailsObj.SOURCE_OF_INFO_CD>0){self.populateAllergyReqForPatientRequest(currentAllergyDetailsObj,"UPDATE");
}else{self.modifyAllergyDetails(null,currentAllergyDetailsObj,patReqObj);
}});
}catch(err){logger.logJSError(err,this,"allergy_o2.js","processAcceptedPatientRequest");
}};
AllergyComponentWF.prototype.modifyAllergyDetails=function(event,currentAllergyDetailsObj,patReqObj){try{this.alSearchBar.disable();
this.m_sidePanel.showCornerCloseButton();
this.alSearchBar.activateCaption();
this.m_sidePanel.setAlertBannerAsHTML("");
var allergyI18N=i18n.discernabu.allergy_o2;
var self=this;
var modifyReactionDetailsHTML="";
var modifyDetailsOptionsHTML="";
var modifyDateControlHTML="";
var modifyCommentsTextAreaHTML="";
var actionHolderSP=$("#allergySPAction"+this.m_compId);
var scrollContainerElem=$("#sidePanelScrollContainer"+this.m_compId);
var resultListElem="";
var cancelBtnAction="";
var saveBtnAction="";
var reactionNomenSearchBar="";
var optionsRenderedCnt=0;
var removeReactionElem="";
var allergyFreeTxtBanner="";
this.allergyRequest=new this.AllergyRequestJSON();
this.pendingReactionList=[];
this.mandatoryItemsEntryList=[];
this.reactionsDuplicateList=[];
this.currentAllergyDetailsObj=currentAllergyDetailsObj;
this.allowEnablingSaveButton=false;
this.allergyRequest.PERSON_ID=this.criterion.person_id;
this.allergyRequest.ENCNTR_ID=this.criterion.encntr_id;
this.allergyRequest.ALLERGY_ID=currentAllergyDetailsObj.ALLERGY_ID;
this.allergyRequest.ALLERGY_INSTANCE_ID=currentAllergyDetailsObj.ALLERGY_INSTANCE_ID;
this.allergyRequest.SUBSTANCE_NOM_ID=currentAllergyDetailsObj.NOMENCLATURE_ID;
var actionabilityBanner=this.renderActionabilityBanner();
this.m_sidePanel.setActionsAsHTML("<div id='allergySPAction"+this.m_compId+"' class='al-sp-actions al-wf-edit-mode'><div class='sp-button2 al-wf-cancel-button' id='allergyCancelButton"+this.m_compId+"'>"+i18n.CANCEL+"</div><div class='sp-button2 al-wf-save-button' id='allergySaveButton"+this.m_compId+"'>"+i18n.SAVE+"</div></div>");
scrollContainerElem.html("");
scrollContainerElem.append("<div id='wf_al"+this.m_compId+"sidePanelResultList' class='al-wf-side-panel-result-list'></div>");
resultListElem=$("#wf_al"+this.m_compId+"sidePanelResultList");
if(patReqObj){$("sidePanelBodyContents"+this.m_compId).prepend(patReqObj.OUTSIDE_REQUESTS_SECTION);
}$("#sidePanel"+this.m_compId).find(".loading-screen").remove();
CERN_EventListener.removeListener(null,"optionsRendered"+this.m_compId,null,null);
cancelBtnAction=$("#allergyCancelButton"+this.m_compId);
cancelBtnAction.click(function(){var data={RESULT_DATA:currentAllergyDetailsObj};
$("#saveFailErrorMessage"+self.m_compId).remove();
actionHolderSP.removeClass("al-wf-edit-mode");
self.m_showPanel=false;
self.m_clickedRow=null;
self.alSearchBar.enable();
self.m_sidePanel.showCornerCloseButton();
self.setPanelContentsToClickedRow(event,data);
self.allergyRequest=null;
self.m_sidePanel.setAlertBannerAsHTML("");
self.m_sidePanel.removeAlertBanner();
});
saveBtnAction=$("#allergySaveButton"+this.m_compId);
this.disableAllergySaveButton(saveBtnAction);
saveBtnAction.click(function(){if(!saveBtnAction.prop("disabled")){if(currentAllergyDetailsObj.NOMENCLATURE_ID===0){var sidePanelHeader=$("#allergyModifyName"+self.m_compId);
var origAllergyName=sidePanelHeader.val();
self.allergyRequest.SUBSTANCE_FTDESC=origAllergyName;
}self.saveModifiedAllergy(self,currentAllergyDetailsObj);
}});
MP_Util.LoadSpinner("sidePanel"+this.m_compId);
if(!(currentAllergyDetailsObj.NOMENCLATURE_ID)){var sidePanelHeader=$("#sidePanelHeaderText"+this.m_compId);
var origAllergyName=sidePanelHeader.text();
sidePanelHeader.empty();
sidePanelHeader.append('<input id="allergyModifyName'+this.m_compId+'" value="'+origAllergyName+'"/>');
if(patReqObj){this.isInputFieldValid();
}$("#allergyModifyName"+this.m_compId).keyup(function(event){self.enableSaveOnValidFields();
});
var freeTextStatus=this.getAllergyFreeTextStatusPriv();
allergyFreeTxtBanner=this.createAllergyFreeTextBanner(freeTextStatus);
}this.m_sidePanel.setAlertBannerAsHTML(allergyFreeTxtBanner+actionabilityBanner);
var reactionLen=0;
var reactionData=null;
var patReqReactionsArr=[];
var reactionsModClass="";
var commentsModClass="";
var patReqCommentText;
if(patReqObj){var i=0;
var commentsLen=currentAllergyDetailsObj.COMMENTS.length;
if(commentsLen){for(i=0;
i<commentsLen;
i++){if(currentAllergyDetailsObj.COMMENTS[i].COMMENT_ID===0){patReqCommentText=currentAllergyDetailsObj.COMMENTS[i].COMMENT_TEXT;
commentsModClass=(patReqObj.REQUEST_TYPE==="UPDATE")?"<span class='pat-req-mod-icon'>&nbsp;</span>":"";
break;
}}}if(patReqObj.REQUEST_TYPE==="UPDATE"){reactionLen=currentAllergyDetailsObj.INTEROP.MOD_REACTIONS.length;
var chartReactionsArrCopy=currentAllergyDetailsObj.REACTIONS.slice();
for(i=0;
i<reactionLen;
i++){var reactionItem=currentAllergyDetailsObj.INTEROP.MOD_REACTIONS[i];
var action=(reactionItem.STATUS)?MP_Util.GetValueFromArray(reactionItem.STATUS,this.m_codesArray).meaning:"";
if(action==="ADD"){patReqReactionsArr.push(reactionItem);
}else{if(action==="REMOVE"){var removeReaction=new this.ReactionRequestJSON();
removeReaction.REACTION_ID=reactionItem.REACTION_ID;
removeReaction.ALLERGY_ID=this.allergyRequest.ALLERGY_ID;
removeReaction.REACTION_NOM_ID=reactionItem.REACTION_NOM_ID;
removeReaction.ACTIVE_IND=0;
this.allergyRequest.REACTION.push(removeReaction);
this.allergyRequest.REACTION_CNT++;
for(var j=0;
j<chartReactionsArrCopy.length;
j++){if(chartReactionsArrCopy[j].REACTION_ID===reactionItem.REACTION_ID){chartReactionsArrCopy.splice(j,1);
}}}}}reactionData=patReqReactionsArr.concat(chartReactionsArrCopy);
reactionLen=reactionData.length;
}else{reactionLen=currentAllergyDetailsObj.REACTIONS.length;
reactionData=currentAllergyDetailsObj.REACTIONS;
}}else{reactionLen=currentAllergyDetailsObj.REACTIONS.length;
reactionData=currentAllergyDetailsObj.REACTIONS;
}if(reactionLen){reactionsModClass=(patReqObj)?"<span class='pat-req-mod-icon'>&nbsp;</span>":"";
modifyReactionDetailsHTML+="<dl><dt><div class='al-wf-title-text'>"+reactionsModClass+allergyI18N.REACTION+"</div><textarea class='al-wf-side-panel-dummy-search' id='dummySearchContainer"+this.m_compId+"'/><div class='al-wf-side-panel-reaction' id='allergyReactionSearchContainer"+this.m_compId+"'></div><br /><div id='allergyReactionList"+this.m_compId+"'>";
for(var j=0;
j<reactionLen;
j++){modifyReactionDetailsHTML+=this.buildReactionModify(reactionData[j]);
if(j<reactionLen-1){modifyReactionDetailsHTML+="<div class='sp-separator2 al-wf-side-panel-reactions'>&nbsp;</div></div>";
}else{modifyReactionDetailsHTML+="</div>";
}}modifyReactionDetailsHTML+="</div></dt><div class='sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl>";
}else{modifyReactionDetailsHTML+="<dl><dt><div class='al-wf-title-text'>"+allergyI18N.REACTION+"</div><div class='al-wf-side-panel-reaction' id='allergyReactionSearchContainer"+this.m_compId+"'></div><br /><div id='allergyReactionList"+this.m_compId+"' class="+currentAllergyDetailsObj.SEVERITY_STYLE+"></div></dt><div class='sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl>";
}resultListElem.append(modifyReactionDetailsHTML);
CERN_EventListener.addListener(self,"optionsRendered"+self.m_compId,function(){optionsRenderedCnt++;
if(optionsRenderedCnt===7){$("#sidePanel"+self.m_compId).find(".loading-screen").remove();
}});
modifyDetailsOptionsHTML+="<dl class='al-wf-side-panel-options-list'><dd id='allergyResultListSeverity"+this.m_compId+"'></dd><dd id='allergyResultListReactionType"+this.m_compId+"'></dd><dd id='allergyResultListCategory"+this.m_compId+"'></dd></dl><dl class='al-wf-side-panel-options-list'><dd id='allergyResultListStatus"+this.m_compId+"'></dd><dd id='allergyResultListReason"+this.m_compId+"'></dd><dd id='allergyResultListSource"+this.m_compId+"'></dd></dl>";
modifyDateControlHTML+="<dl><dd id='allergyResultListDateControl"+this.m_compId+"'><div class='al-wf-title-text'>"+allergyI18N.ONSET+"</div></dd></dl>";
modifyCommentsTextAreaHTML+="<dl><div class='sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div><dd id='allergyResultListComments"+this.m_compId+"' class='al-wf-side-panel-comments'><div class='al-wf-title-text'>"+commentsModClass+allergyI18N.COMMENTS+"</div><div class='al-wf-side-panel-text-comment'><textarea class='al-wf-side-panel-text-input' id='allergyCommentsTextInput"+this.m_compId+"'>"+(patReqCommentText||"")+"</textarea></div></dd></dl>";
resultListElem.append(modifyDetailsOptionsHTML+modifyDateControlHTML+modifyCommentsTextAreaHTML);
this.getAllSourceCodes(currentAllergyDetailsObj);
this.m_sidePanel.setContents(scrollContainerElem,"wf_alContent"+this.m_compId);
if(this.displayHiDataInd){this.moveSidePanel();
$("#wf_alContent"+this.m_compId).css("height","");
}$("#dummySearchContainer"+this.m_compId).addClass("al-wf-remove-reaction");
this.prepareReactionSearch(currentAllergyDetailsObj);
removeReactionElem=$("#allergyReactionList"+this.m_compId);
this.processRemoveReactions(this,removeReactionElem);
this.renderAllergyDateControl(currentAllergyDetailsObj);
$("#allergyCommentsTextInput"+this.m_compId).keyup(function(event){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
}catch(err){logger.logJSError(err,this,"allergy_o2.js","modifyAllergyDetails");
}};
AllergyComponentWF.prototype.enableSaveOnValidFields=function(){var ftAllergyNameTextBox=$("#allergyModifyName"+this.m_compId);
var saveBtn=$("#allergySaveButton"+this.m_compId);
var inputText=ftAllergyNameTextBox.val();
if(ftAllergyNameTextBox.length===0){this.enableAllergySaveButton(this,saveBtn);
}else{if(this.isInputFieldValid()){if(this.allowEnablingSaveButton){this.enableAllergySaveButton(this,saveBtn);
}else{this.disableAllergySaveButton(saveBtn);
}}}};
AllergyComponentWF.prototype.isDuplicateAllergy=function(allergyName){var viewOutsideRecordsPref=this.getOutsideRecordsPref();
var patEnteredInd=this.getPatientEnteredDataInd();
var allergiesList=[];
allergiesList=(viewOutsideRecordsPref&&patEnteredInd)?this.m_chartedAllergies:this.scriptReply.ALLERGY;
for(var i=0;
i<allergiesList.length;
i++){var currentAllergy=allergiesList[i];
if(allergyName.toUpperCase()===currentAllergy.NAME.toUpperCase()){return true;
}}return false;
};
AllergyComponentWF.prototype.isInputFieldValid=function(){var ftAllergyNameTextBox=$("#allergyModifyName"+this.m_compId);
var inputText=ftAllergyNameTextBox.val();
if(!ftAllergyNameTextBox.length){ftAllergyNameTextBox=$("#sidePanelHeaderText"+this.m_compId);
inputText=ftAllergyNameTextBox.text();
}var saveBtn=$("#allergySaveButton"+this.m_compId);
inputText=inputText.replace(/^\s+|\s+$/g,"");
if(inputText===""){this.validationErrorAction(1);
return false;
}else{if(!(this.validateSearchInput(inputText))){this.validationErrorAction(2);
return false;
}else{if(inputText!==this.currentAllergyDetailsObj.NAME&&this.isDuplicateAllergy(inputText)){this.validationErrorAction(3);
return false;
}else{if(this.isDuplicateAllergy(inputText)&&this.currentAllergyDetailsObj.REQUEST_TEXT){this.validationErrorAction(3);
return false;
}else{this.validationSuccessAction();
return true;
}}}}};
AllergyComponentWF.prototype.validationErrorAction=function(typeOfError){var ftAllergyNameTextBox=$("#allergyModifyName"+this.m_compId);
var sidePanelHeaderText=$("#sidePanelHeaderText"+this.m_compId);
var saveBtn=$("#allergySaveButton"+this.m_compId);
var allergyI18n=i18n.discernabu.allergy_o2;
var errorMessage="";
var errorMessgeHTML="";
var errorMessageContainer=$("#sidePanelErrorMessage"+this.m_compId);
switch(typeOfError){case 1:ftAllergyNameTextBox.removeClass("al-wf-side-panel-free-text-input-error");
errorMessageContainer.remove();
this.disableAllergySaveButton(saveBtn);
break;
case 2:errorMessage=allergyI18n.ERROR_MESSAGE_INVALID_CHARS;
errorMessageContainer.remove();
errorMessgeHTML=this.renderErrorMessage(errorMessage);
ftAllergyNameTextBox.addClass("al-wf-side-panel-free-text-input-error");
sidePanelHeaderText.append(errorMessgeHTML);
this.disableAllergySaveButton(saveBtn);
break;
case 3:errorMessage=allergyI18n.ERROR_MESSAGE_DUPLICATE_ALLERGY;
errorMessageContainer.remove();
errorMessgeHTML=this.renderErrorMessage(errorMessage);
ftAllergyNameTextBox.addClass("al-wf-side-panel-free-text-input-error");
sidePanelHeaderText.append(errorMessgeHTML);
this.disableAllergySaveButton(saveBtn);
break;
}};
AllergyComponentWF.prototype.renderErrorMessage=function(errorMessage){var errorMessageHTML="";
errorMessageHTML="<div id='sidePanelErrorMessage"+this.m_compId;
errorMessageHTML+="' class='al-wf-side-panel-error-msg-text'>";
errorMessageHTML+=errorMessage+"</div>";
return errorMessageHTML;
};
AllergyComponentWF.prototype.validationSuccessAction=function(){var errorMessage=$("#sidePanelErrorMessage"+this.m_compId);
var sidePanelHeaderText=$("#sidePanelHeaderText"+this.m_compId);
var ftAllergyNameTextBox=$("#allergyModifyName"+this.m_compId);
var saveBtn=$("#allergySaveButton"+this.m_compId);
ftAllergyNameTextBox.removeClass("al-wf-side-panel-free-text-input-error");
errorMessage.remove();
this.enableAllergySaveButton(this,saveBtn);
};
AllergyComponentWF.prototype.disableAllergySaveButton=function(btnId){if(btnId&&!$(btnId).prop("disabled")){btnId.addClass("disabled").prop("disabled",true);
}};
AllergyComponentWF.prototype.enableAllergySaveButton=function(component,btnId){if(btnId&&$(btnId).prop("disabled")&&component.mandatoryItemsEntryList.length===0){btnId.removeClass("disabled").prop("disabled",false);
if($("#sidePanelHeader"+component.m_compId).find("#saveFailErrorMessage"+component.m_compId).length){$("#saveFailErrorMessage"+component.m_compId).remove();
}}};
AllergyComponentWF.prototype.getAllSourceCodes=function(rowDataObj){try{var allergyI18N=i18n.discernabu.allergy_o2;
var self=this;
var allergyResultListSeverityElem=$("#allergyResultListSeverity"+this.m_compId);
var allergyResultListReactionTypeElem=$("#allergyResultListReactionType"+this.m_compId);
var allergyResultListCategoryElem=$("#allergyResultListCategory"+this.m_compId);
var allergyResultListStatusElem=$("#allergyResultListStatus"+this.m_compId);
var allergyResultListSourceElem=$("#allergyResultListSource"+this.m_compId);
var allergyResultListReasonElem=$("#allergyResultListReason"+this.m_compId);
var onSelectMandatory=function(optionIdElem){var optionId="#"+optionIdElem+self.m_compId;
var dropDownIndexVal=self.mandatoryItemsEntryList.indexOf(optionId);
$(optionId).removeClass("required-field-input");
$(optionId+" option[value='0']").remove();
if(dropDownIndexVal>-1){self.mandatoryItemsEntryList.splice(dropDownIndexVal,1);
}};
var pushIfNotExist=function(optionIdElem){if(optionIdElem){var optionId="#"+optionIdElem+self.m_compId;
if(self.mandatoryItemsEntryList.indexOf(optionId)===-1){self.mandatoryItemsEntryList.push(optionId);
}}};
var categoryCB=function(result){if(result){var optionHTML="<option value='0'></option>";
var selectedOption=null;
var isMandatory=true;
var self=this;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}else{isMandatory=false;
}}}if(isMandatory){allergyResultListCategoryElem.append("<span class='required-field-label'>*</span><span class='al-wf-title-text'>"+allergyI18N.CATEGORY+"</span><select class='al-wf-side-panel-select required-field-input' id='categoryOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
pushIfNotExist("categoryOptSelect");
}else{allergyResultListCategoryElem.append("<span class='al-wf-title-text'>"+allergyI18N.CATEGORY+"</span><select class='al-wf-side-panel-select' id='categoryOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
}CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
selectedOption=$("#categoryOptSelect"+this.m_compId);
if(rowDataObj&&rowDataObj.SUBSTANCE_TYPE_CD){if(this.allergyRequest){this.allergyRequest.SUBSTANCE_TYPE_CD=parseFloat(rowDataObj.SUBSTANCE_TYPE_CD);
}if(isMandatory){onSelectMandatory("categoryOptSelect");
}selectedOption.val(rowDataObj.SUBSTANCE_TYPE_CD);
}$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#categoryOptSelect"+this.m_compId,function(){if(isMandatory){onSelectMandatory("categoryOptSelect");
}selectedOption.blur();
if(self.allergyRequest){self.allergyRequest.SUBSTANCE_TYPE_CD=parseFloat(selectedOption.val());
}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
}};
var reactionTypeCB=function(result){if(result){var optionHTML="<option value='0'></option>";
var selectedOption="";
var isMandatory=true;
var self=this;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}else{isMandatory=false;
}}}if(isMandatory){allergyResultListReactionTypeElem.append("<span class='required-field-label'>*</span><span class='al-wf-title-text'>"+allergyI18N.REACTION_TYPE+"</span><select class='al-wf-side-panel-select required-field-input' id='reactionTypeOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
pushIfNotExist("reactionTypeOptSelect");
}else{allergyResultListReactionTypeElem.append("<span class='al-wf-title-text'>"+allergyI18N.REACTION_TYPE+"</span><select class='al-wf-side-panel-select' id='reactionTypeOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
}CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
selectedOption=$("#reactionTypeOptSelect"+this.m_compId);
if(rowDataObj&&rowDataObj.REACTION_CLASS_CD){if(this.allergyRequest){this.allergyRequest.REACTION_CLASS_CD=parseFloat(rowDataObj.REACTION_CLASS_CD);
}if(isMandatory){onSelectMandatory("reactionTypeOptSelect");
}selectedOption.val(rowDataObj.REACTION_CLASS_CD);
}$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#reactionTypeOptSelect"+this.m_compId,function(){selectedOption.blur();
if(isMandatory){onSelectMandatory("reactionTypeOptSelect");
}if(self.allergyRequest){self.allergyRequest.REACTION_CLASS_CD=parseFloat(selectedOption.val());
}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
}};
var severityCB=function(result){if(result){var optionHTML="<option value='0'></option>";
var selectedOption="";
var isMandatory=true;
var self=this;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}else{isMandatory=false;
}}}if(isMandatory){allergyResultListSeverityElem.append("<span class='required-field-label'>*</span><span class='al-wf-title-text'>"+allergyI18N.SEVERITY+"</span><select class='al-wf-side-panel-select required-field-input' id='severityOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
pushIfNotExist("severityOptSelect");
}else{allergyResultListSeverityElem.append("<span class='al-wf-title-text'>"+allergyI18N.SEVERITY+"</span><select class='al-wf-side-panel-select' id='severityOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
}CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
selectedOption=$("#severityOptSelect"+this.m_compId);
if(rowDataObj&&rowDataObj.SEVERITY_CD){if(this.allergyRequest){this.allergyRequest.SEVERITY_CD=parseFloat(rowDataObj.SEVERITY_CD);
}if(isMandatory){onSelectMandatory("severityOptSelect");
}selectedOption.val(rowDataObj.SEVERITY_CD);
}$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#severityOptSelect"+this.m_compId,function(){selectedOption.blur();
if(isMandatory){onSelectMandatory("severityOptSelect");
}if(self.allergyRequest){self.allergyRequest.SEVERITY_CD=parseFloat(selectedOption.val());
}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
}};
var sourceCB=function(result){if(result){var optionHTML="<option value='0'></option>";
var selectedOption="";
var isMandatory=true;
var self=this;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}else{isMandatory=false;
}}}if(isMandatory){allergyResultListSourceElem.append("<span class='required-field-label'>*</span><span class='al-wf-title-text'>"+i18n.SOURCE+"</span><select class='al-wf-side-panel-select required-field-input' id='sourceOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
pushIfNotExist("sourceOptSelect");
}else{allergyResultListSourceElem.append("<span class='al-wf-title-text'>"+i18n.SOURCE+"</span><select class='al-wf-side-panel-select' id='sourceOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
}CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
selectedOption=$("#sourceOptSelect"+this.m_compId);
if(rowDataObj&&rowDataObj.INTEROP&&rowDataObj.INTEROP.EXT_DATA_ID>0){self.setSourceOfInfoCd(rowDataObj,result);
}if(rowDataObj&&rowDataObj.SOURCE_OF_INFO_CD){if(this.allergyRequest){this.allergyRequest.SOURCE_OF_INFO_CD=parseFloat(rowDataObj.SOURCE_OF_INFO_CD);
}if(isMandatory){onSelectMandatory("sourceOptSelect");
}selectedOption.val(rowDataObj.SOURCE_OF_INFO_CD);
}$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#sourceOptSelect"+this.m_compId,function(){selectedOption.blur();
if(isMandatory){onSelectMandatory("sourceOptSelect");
}if(self.allergyRequest){self.allergyRequest.SOURCE_OF_INFO_CD=parseFloat(selectedOption.val());
}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
}};
var statusCB=function(result){if(result){var optionHTML="";
var selectedOption="";
var reasonSelectedOption="";
var self=this;
this.isCancelled=false;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING==="CANCELED"){this.cancelStatusCd=result[i].CODE;
}if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}}}allergyResultListStatusElem.append("<span class='al-wf-title-text'>"+i18n.STATUS+"</span><select class='al-wf-side-panel-select' id='statusOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
selectedOption=$("#statusOptSelect"+this.m_compId);
$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#statusOptSelect"+this.m_compId,function(){selectedOption.blur();
if(self.allergyRequest){self.allergyRequest.REACTION_STATUS_CD=parseFloat(selectedOption.val());
}if(self.cancelStatusCd){if(parseInt(selectedOption.val(),10)===self.cancelStatusCd){self.isCancelled=true;
}else{self.isCancelled=false;
}CERN_EventListener.fireEvent(null,self,"allergyStatusEvent"+self.m_compId,null);
}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
if(rowDataObj&&rowDataObj.STATUS_CD){if(this.allergyRequest){this.allergyRequest.REACTION_STATUS_CD=parseFloat(rowDataObj.STATUS_CD);
}selectedOption.val(rowDataObj.STATUS_CD);
}}};
var reasonCB=function(result){if(result){var optionHTML="<option value='0'></option>";
var selectedOption="";
var isMandatory=true;
var self=this;
result.sort(MP_Util.SortBySequence);
var len=result.length;
for(var i=0;
i<len;
i++){if(result.hasOwnProperty(i)){if(result[i].MEANING!=="NOTENTERED"){optionHTML+="<option value='"+result[i].CODE+"'>"+result[i].DISPLAY+"</option>";
}else{isMandatory=false;
}}}allergyResultListReasonElem.append("<span class='al-wf-title-text'>"+i18n.REASON+"</span><select class='al-wf-side-panel-select' id='reasonOptSelect"+this.m_compId+"'>"+optionHTML+"</select>");
CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
CERN_EventListener.addListener(self,"allergyStatusEvent"+self.m_compId,function(){var reasonOptSelectElem=$("#reasonOptSelect"+self.m_compId);
if(self.isCancelled&&isMandatory){self.disableAllergySaveButton($("#allergySaveButton"+self.m_compId));
allergyResultListReasonElem.html("");
allergyResultListReasonElem.append("<span class='required-field-label'>*</span><span class='al-wf-title-text'>"+i18n.REASON+"</span><select class='al-wf-side-panel-select required-field-input' id='reasonOptSelect"+self.m_compId+"'>"+optionHTML+"</select>");
pushIfNotExist("reasonOptSelect");
reasonOptSelectElem.prop("disabled",false);
}else{if(self.isCancelled){reasonOptSelectElem.prop("disabled",false);
}else{if(!self.isCancelled||!isMandatory){allergyResultListReasonElem.html("");
allergyResultListReasonElem.append("<span class='al-wf-title-text'>"+i18n.REASON+"</span><select class='al-wf-side-panel-select' id='reasonOptSelect"+self.m_compId+"'>"+optionHTML+"</select>");
$("#reasonOptSelect"+self.m_compId).prop("disabled",true);
var dropDownIndexVal=self.mandatoryItemsEntryList.indexOf("#reasonOptSelect"+self.m_compId);
if(dropDownIndexVal>-1){self.mandatoryItemsEntryList.splice(dropDownIndexVal,1);
}}}}});
selectedOption=$("#reasonOptSelect"+this.m_compId);
selectedOption.prop("disabled",true);
$("#wf_al"+this.m_compId+"sidePanelContainer").on("change","#reasonOptSelect"+this.m_compId,function(){var reasonSelectElem=$("#reasonOptSelect"+self.m_compId);
reasonSelectElem.blur();
if(self.allergyRequest&&self.isCancelled){self.allergyRequest.CANCEL_REASON_CD=parseFloat(reasonSelectElem.val());
if(isMandatory){onSelectMandatory("reasonOptSelect");
}}self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
});
self.allergyRequest.CANCEL_DT_TM=new Date().toJSON();
self.allergyRequest.CANCEL_PRSNL_ID=self.criterion.getPersonnelInfo().getPersonnelId();
}};
var codeSetList={12020:MP_Util.GetCodeSetAsync(12020,categoryCB.bind(self)),12021:MP_Util.GetCodeSetAsync(12021,reactionTypeCB.bind(self)),12022:MP_Util.GetCodeSetAsync(12022,severityCB.bind(self)),12023:MP_Util.GetCodeSetAsync(12023,sourceCB.bind(self)),12025:MP_Util.GetCodeSetAsync(12025,statusCB.bind(self)),14004:MP_Util.GetCodeSetAsync(14004,reasonCB.bind(self))};
var keyList=Object.keys(codeSetList);
for(var i=0;
i<keyList.length;
i++){var x=codeSetList[keyList[i]];
}}catch(err){logger.logJSError(err,this,"allergy_o2.js","getAllSourceCodes");
}};
AllergyComponentWF.prototype.renderAllergyDateControl=function(rowDataObj){try{var allergyI18N=i18n.discernabu.allergy_o2;
var self=this;
var allergyDetailsDateContainer=$("#allergyResultListDateControl"+this.m_compId);
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
this.initialPrecisionCode=null;
this.initialPrecisionDate=null;
this.initialPrecisionAge=null;
this.initialPrecisionDateFormat=null;
this.onsetDateSelector=new DateSelector();
this.dateTimeFlagObj={"0":20,"1":30,"2":40,"3":50,"-1":0};
this.onsetDateSelector.retrieveRequiredResources(function(){this.onsetDateSelector.setUniqueId("allergyDateSelector"+this.m_compId);
this.onsetDateSelector.setCriterion(this.criterion);
this.onsetDateSelector.setFuzzyFlag(true);
var dateControlHTML=this.onsetDateSelector.renderDateControl();
var selectedDate=null;
allergyDetailsDateContainer.append(dateControlHTML);
this.onsetDateSelector.finalizeActions();
CERN_EventListener.addListener(self,"selectedDateAvailable"+self.onsetDateSelector.getUniqueId(),function(){var dateTimePrecisionVal1=null;
var dateTimePrecisionVal2=null;
self.allowEnablingSaveButton=false;
var today=new Date();
if(self.allergyRequest){selectedDate=self.onsetDateSelector.getSelectedDate();
if(selectedDate>today){self.disableAllergySaveButton($("#allergySaveButton"+self.m_compId));
}else{if(!self.initialPrecisionDate){self.initialPrecisionDate=self.onsetDateSelector.getSelectedDate();
}if(selectedDate&&selectedDate.toString()!==self.initialPrecisionDate.toString()){switch(self.onsetDateSelector.getSelectedDateFlag().toString()){case"2":dateTimePrecisionVal1=new Date(self.initialPrecisionDate.toString()).format("mm/yyyy");
dateTimePrecisionVal2=new Date(selectedDate.toString()).format("mm/yyyy");
break;
case"3":dateTimePrecisionVal1=new Date(self.initialPrecisionDate.toString()).format("yyyy");
dateTimePrecisionVal2=new Date(selectedDate.toString()).format("yyyy");
break;
}if(dateTimePrecisionVal1!==dateTimePrecisionVal2||!dateTimePrecisionVal1){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
}self.allergyRequest.ONSET_DT_TM=new Date(selectedDate).toJSON();
self.allergyRequest.ONSET_PRECISION_FLAG=self.dateTimeFlagObj[self.onsetDateSelector.getSelectedDateFlag().toString()];
self.allergyRequest.ONSET_PRECISION_CD=self.onsetDateSelector.getSelectedDatePrecisionCode();
}if(selectedDate){self.allergyRequest.ONSET_DT_TM=new Date(selectedDate).toJSON();
self.allergyRequest.ONSET_PRECISION_FLAG=self.dateTimeFlagObj[self.onsetDateSelector.getSelectedDateFlag().toString()];
self.allergyRequest.ONSET_PRECISION_CD=self.onsetDateSelector.getSelectedDatePrecisionCode();
}}}});
CERN_EventListener.addListener(self,"selectedDateFormatAvailable"+self.onsetDateSelector.getUniqueId(),function(){if(self.initialPrecisionDateFormat===null){self.initialPrecisionDateFormat=self.onsetDateSelector.getSelectedDateFlag();
}if(self.initialPrecisionDateFormat!==null&&self.initialPrecisionDateFormat!==self.onsetDateSelector.getSelectedDateFlag()){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
}self.allergyRequest.ONSET_PRECISION_FLAG=self.dateTimeFlagObj[self.onsetDateSelector.getSelectedDateFlag().toString()];
});
CERN_EventListener.addListener(self,"selectedPrecisionCodeAvailable"+self.onsetDateSelector.getUniqueId(),function(){if(self.initialPrecisionCode===null){self.initialPrecisionCode=self.onsetDateSelector.getSelectedDatePrecisionCode();
}if(self.initialPrecisionCode!==null&&self.initialPrecisionCode!==self.onsetDateSelector.getSelectedDatePrecisionCode()){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
}self.allergyRequest.ONSET_PRECISION_CD=self.onsetDateSelector.getSelectedDatePrecisionCode()||10.001;
});
CERN_EventListener.addListener(self,"selectedAgeUnitAvailable"+self.onsetDateSelector.getUniqueId(),function(){if(allergyDetailsDateContainer.find("input")&&allergyDetailsDateContainer.find("input").val()){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
}});
allergyDetailsDateContainer.on("keyup","input",function(){if($(this).val().length){if($(this).val().substring(0,1)!=="*"){self.allowEnablingSaveButton=true;
self.enableSaveOnValidFields();
}}else{self.onsetDateSelector.setSelectedDate(null);
self.disableAllergySaveButton($("#allergySaveButton"+self.m_compId));
}});
CERN_EventListener.fireEvent(null,this,"optionsRendered"+this.m_compId,null);
if(rowDataObj&&rowDataObj.ONSET_DT_TM){var selectedDateStr="";
var dateTime=new Date();
dateTime.setISO8601(rowDataObj.ONSET_DT_TM);
if(dateTime){this.onsetDateSelector.setSelectedDate(new Date(rowDataObj.ONSET_DT_TM));
switch(rowDataObj.ONSETDATE_FLAG){case 20:this.onsetDateSelector.setSelectedDateFlag(0);
break;
case 30:this.onsetDateSelector.setSelectedDateFlag(1);
break;
case 40:this.onsetDateSelector.setSelectedDateFlag(2);
break;
case 50:this.onsetDateSelector.setSelectedDateFlag(3);
break;
default:this.onsetDateSelector.setSelectedDateFlag(-1);
break;
}selectedDateStr=dateTime.format(dateFormat.masks.shortdate4yr);
this.onsetDateSelector.datePickerControl.datepicker("setDate",selectedDateStr);
}this.onsetDateSelector.dateDisplayInput.removeClass("secondary-text");
if(rowDataObj.ONSET_PRECISION_CD===11.000999){this.onsetDateSelector.setSelectedDatePrecisionCode(0);
}else{this.onsetDateSelector.setSelectedDatePrecisionCode(rowDataObj.ONSET_PRECISION_CD);
}}else{self.initialPrecisionDateFormat=self.onsetDateSelector.getSelectedDateFlag();
self.initialPrecisionCode=self.onsetDateSelector.getSelectedDatePrecisionCode();
self.initialPrecisionDate=self.onsetDateSelector.getSelectedDate();
}this.m_sidePanel.expandSidePanel();
}.bind(this));
}catch(err){logger.logJSError(err,this,"allergy_o2.js","renderAllergyDateControl");
}};
AllergyComponentWF.prototype.buildReactionModify=function(reaction){try{var reactionListHtml="";
if(reaction){var uniqId=(reaction.REACTION_ID)?"r_"+reaction.REACTION_ID:"n_"+this.pendingReactionList.length;
reactionListHtml+="<div id='reactionItem_"+reaction.REACTION_NOM_ID+"' data-id='"+uniqId+"' class='al-wf-side-panel-reaction-list'><span class ='res-normal'>"+reaction.REACTION_NAME+"</span><div class='al-wf-side-panel-remove-icon'></div>";
if(this.allergyRequest&&reaction.REACTION_ID){var reactionIndexObject=new this.ReactionRequestJSON();
reactionIndexObject.REACTION_ID=reaction.REACTION_ID;
reactionIndexObject.ALLERGY_ID=this.allergyRequest.ALLERGY_ID;
reactionIndexObject.REACTION_NOM_ID=reaction.REACTION_NOM_ID;
reactionIndexObject.ACTIVE_IND=1;
this.allergyRequest.REACTION.push(reactionIndexObject);
this.allergyRequest.REACTION_CNT++;
}else{if(reaction.REACTION_ID===0){var pendingListLen=this.pendingReactionList.length;
var pendingReaction=new this.ReactionRequestJSON();
pendingReaction.ALLERGY_ID=this.allergyRequest.ALLERGY_ID;
pendingReaction.REACTION_NOM_ID=reaction.REACTION_NOM_ID;
pendingReaction.REACTION_FTDESC=(reaction.REACTION_NOM_ID===0)?reaction.REACTION_NAME:"";
pendingReaction.ACTIVE_IND=1;
this.pendingReactionList[pendingListLen]={REACTION:pendingReaction,INDEX:this.pendingReactionList.length};
}}if(reaction.REACTION_NOM_ID){this.reactionsDuplicateList.push(reaction.REACTION_NOM_ID);
}}return reactionListHtml;
}catch(err){logger.logJSError(err,this,"allergy_o2.js","buildReactionModify");
}};
AllergyComponentWF.prototype.AllergyRequestJSON=function(){this.ALLERGY_INSTANCE_ID=0;
this.ALLERGY_ID=0;
this.PERSON_ID=0;
this.ENCNTR_ID=0;
this.SUBSTANCE_NOM_ID=0;
this.SUBSTANCE_TYPE_CD=0;
this.REACTION_CLASS_CD=0;
this.SEVERITY_CD=0;
this.SOURCE_OF_INFO_CD=0;
this.REACTION_STATUS_CD=0;
this.SUBSTANCE_FTDESC="";
this.CANCEL_REASON_CD=0;
this.CANCEL_DT_TM="";
this.CANCEL_PRSNL_ID=0;
this.ONSET_DT_TM="";
this.ONSET_PRECISION_CD=0;
this.ONSET_PRECISION_FLAG=0;
this.REACTION_CNT=0;
this.REACTION=[];
this.ALLERGY_COMMENT_CNT=0;
this.ALLERGY_COMMENT=[];
this.ACTIVE_IND=1;
};
AllergyComponentWF.prototype.validateSearchInput=function(searchString){if(/^[a-zA-Z0-9-\' ]*$/.test(searchString)===false){return false;
}return true;
};
AllergyComponentWF.prototype.ReactionRequestJSON=function(){return{REACTION_ID:0,ALLERGY_ID:0,REACTION_NOM_ID:0,REACTION_FTDESC:"",ACTIVE_IND:1};
};
AllergyComponentWF.prototype.CommentRequestJSON=function(){return{ALLERGY_COMMENT_ID:0,ALLERGY_ID:0,COMMENT_DT_TM:0,ALLERGY_COMMENT:"",ACTIVE_IND:1};
};
AllergyComponentWF.prototype.performAllergyRequest=function(component,rowDataObj){var self=this;
var saveAllergyTimerObj=null;
try{saveAllergyTimerObj=new RTMSTimer("USR:MPG.ALLERGY_O2-SAVE_ALLERGY_ACTIONABILITY",component.criterion.category_mean);
if(saveAllergyTimerObj){saveAllergyTimerObj.addMetaData("rtms.legacy.metadata.1","Save Allergy");
saveAllergyTimerObj.start();
}MP_Util.LoadSpinner("sidePanel"+this.m_compId);
var allergyI18N=i18n.discernabu.allergy_o2;
var requestJSONStr="";
var errorMessageHTML="";
if(rowDataObj&&rowDataObj.REQUEST_STATUS_MEANING){if(!self.m_interopCodesArr.length){self.m_interopCodesArr=MP_Util.GetCodeSet(4003508,false);
}var criterion=self.getCriterion();
this.allergyRequest.interop={ext_data_info_id:rowDataObj.INTEROP.EXT_DATA_ID,status_code:MP_Util.GetCodeByMeaning(self.m_interopCodesArr,rowDataObj.REQUEST_STATUS_MEANING).codeValue,personnel_id:criterion.provider_id,encntr_id:criterion.encntr_id};
}requestJSONStr='{"REQUESTIN":{"ALLERGY_CNT":1,"ALLERGY":['+MP_Util.enhancedStringify(self.allergyRequest,0,0,true,["status_code"])+"]}}";
var allergyScriptRequest=new ScriptRequest();
allergyScriptRequest.setProgramName("mp_upd_allergy");
allergyScriptRequest.setDataBlob(requestJSONStr);
allergyScriptRequest.setParameterArray(["^MINE^","^^"]);
allergyScriptRequest.setResponseHandler(function(scriptReply){try{if(!component.isSavingNomenclatureItem){$("#sidePanel"+component.m_compId).find(".loading-screen").remove();
if(saveAllergyTimerObj){saveAllergyTimerObj.stop();
}}if(scriptReply.getResponse().STATUS_DATA.STATUS==="S"){component.m_sidePanel.m_cornerCloseButton.show();
component.alSearchBar.enable();
if(rowDataObj&&rowDataObj.REQUEST_STATUS_MEANING==="REJECTED"&&rowDataObj.REQUEST==="ADD"){var patReqTblGrp=self.allergyTable.getGroupById("GROUP_PATIENT_REQUEST");
var row=patReqTblGrp.getRowById(self.m_clickedRow.id.split(":")[2]);
var indexRow=$.inArray(row,patReqTblGrp.rows);
if(indexRow!==-1){patReqTblGrp.rows.splice(indexRow,1);
}self.allergyTable.refresh();
self.m_sidePanel.m_cornerCloseButton.trigger("click");
CERN_EventListener.fireEvent(self,self,EventListener.EVENT_COUNT_UPDATE,{count:self.resultCount-1});
}else{if(rowDataObj&&rowDataObj.REQUEST_STATUS_MEANING!=="REJECTED"){component.newNomenId=scriptReply.getResponse().ALLERGY[0].ALLERGY_ID;
}else{if(!rowDataObj){component.newNomenId=scriptReply.getResponse().ALLERGY[0].ALLERGY_ID;
}else{component.newNomenId=0;
}}component.retrieveComponentData();
}}else{throw new Error("Non-success from MP_UPD_ALLERGY");
}}catch(err){component.createSidePanelErrorBanner(rowDataObj);
}});
allergyScriptRequest.performRequest();
}catch(err){if(saveAllergyTimerObj){saveAllergyTimerObj.fail();
saveAllergyTimerObj=null;
}logger.logJSError(err,this,"allergy_o2.js","performAllergyRequest");
}};
AllergyComponentWF.prototype.createSidePanelErrorBanner=function(rowDataObj){var allergyI18N=i18n.discernabu.allergy_o2;
var errorMsg=allergyI18N.UNABLE_TO_SAVE_ALLERGY;
if(rowDataObj&&rowDataObj.REQUEST_STATUS_MEANING){errorMsg=allergyI18N.ERROR_PERFORMING_ACTION;
}if(!this.isSavingNomenclatureItem){if($("#sidePanelHeader"+this.m_compId).find("#saveFailErrorMessage"+this.m_compId).length===0){errorMessageHTML="<div id='saveFailErrorMessage"+this.m_compId+"' class='al-save-error-message'><div class='error-container inline-message'><span class='error-text message-info-text'>"+errorMsg+"</span></div></div>";
$("#sidePanelHeader"+this.m_compId).prepend(errorMessageHTML);
}}else{var errorBanner=new MPageUI.AlertBanner();
errorBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
errorBanner.setPrimaryText(errorMsg);
errorMessageHTML=errorBanner.render();
$("#nkaBannerContainer"+this.m_compId).prepend(errorMessageHTML);
}};
AllergyComponentWF.prototype.saveModifiedAllergy=function(component,rowDataObj){if(!this.isSavingNomenclatureItem){var commentVal=$("#allergyCommentsTextInput"+this.m_compId).val().trim();
if(this.allergyRequest){if(commentVal){this.allergyRequest.ALLERGY_COMMENT_CNT++;
this.allergyRequest.ALLERGY_COMMENT[0]=new this.CommentRequestJSON();
if(rowDataObj){this.allergyRequest.ALLERGY_COMMENT[0].ALLERGY_ID=rowDataObj.ALLERGY_ID?rowDataObj.ALLERGY_ID:0;
}else{this.allergyRequest.ALLERGY_COMMENT[0].ALLERGY_ID=0;
}this.allergyRequest.ALLERGY_COMMENT[0].ALLERGY_COMMENT=commentVal.replace(/\r\n|\r|\n/g,"<br />");
this.allergyRequest.ALLERGY_COMMENT[0].COMMENT_DT_TM=new Date().toJSON();
this.allergyRequest.ALLERGY_COMMENT[0].COMMENT_PRSNL_ID=this.criterion.getPersonnelInfo().getPersonnelId()||0;
}if(!this.isCancelled){this.allergyRequest.CANCEL_REASON_CD=0;
this.allergyRequest.CANCEL_DT_TM="";
this.allergyRequest.CANCEL_PRSNL_ID=0;
}if(this.pendingReactionList){var pendingListLen=this.pendingReactionList.length;
for(var i=0;
i<pendingListLen;
i++){this.allergyRequest.REACTION_CNT++;
this.allergyRequest.REACTION.push(this.pendingReactionList[i].REACTION);
}}if(this.allergyRequest.ONSET_PRECISION_CD===0&&this.allergyRequest.ONSET_DT_TM){this.allergyRequest.ONSET_PRECISION_CD=10.001;
}if(rowDataObj){if(this.getPatientEnteredDataInd()&&this.getOutsideRecordsPref()&&rowDataObj.DIRECT_WRITTEN_IND&&this.getMarkAsReviewedPriv()){this.allergyRequest.REVIEWED_DT_TM=new Date().toJSON();
this.allergyRequest.REVIEWED_TZ=this.criterion.client_tz;
this.allergyRequest.REVIEWED_PRSNL_ID=this.criterion.getPersonnelInfo().getPersonnelId()||0;
}}}this.disableAllergySaveButton($("#allergySaveButton"+this.m_compId));
}this.performAllergyRequest(component,rowDataObj);
};
AllergyComponentWF.prototype.prepareReactionSearch=function(rowObj){try{var self=this;
var allergyI18N=i18n.discernabu.allergy_o2;
var rctnSearchContainer=$("#allergyReactionSearchContainer"+this.m_compId);
var nomenSearchInputElement="";
var origHandleReplyList=null;
if(rctnSearchContainer.length){rctnSearchContainer.addClass("al-wf-edit-reaction");
this.reacSearchBar=new MPageControls.NomenclatureSearch(rctnSearchContainer);
nomenSearchInputElement=rctnSearchContainer.find("input");
this.reacSearchBar.setCaption(allergyI18N.ADD_REACTION);
this.reacSearchBar.setCaptionClass("secondary-text");
this.reacSearchBar.activateCaption();
this.reacSearchBar.setSourceFlag(12);
this.reacSearchBar.setDelay(500);
var nomenSearchItemTemplate=new TemplateEngine.TemplateFactory((function(){var template=TemplateEngine;
var div=template.tag("div");
return{nomenInfo:function(context){if(context.m_Data.ID===0){return div({"class":"al-free-text-item",id:context._elementId},context.m_Data.SOURCESTRING);
}else{return div({id:context._elementId},context.m_Data.SOURCESTRING);
}}};
})());
this.reacSearchBar.setListItemTemplate(nomenSearchItemTemplate.nomenInfo);
origHandleReplyList=this.reacSearchBar.handleReplyList;
this.reacSearchBar.handleReplyList=function(replyList,reply,err){var customNomen=new MPageEntity.entities.Nomenclature();
if(self.reactionsDuplicateList&&self.reactionsDuplicateList.length>0){for(var i=0;
i<replyList.length;
){if(replyList[i]&&replyList[i].getData()){if(self.reactionsDuplicateList.indexOf(replyList[i].getId())>-1){replyList.splice(i,1);
}else{i++;
}}}}var freeTextReactions=$("#allergyReactionSearchContainer"+self.m_compId).find("input").val();
if(self.validateSearchInput(freeTextReactions)){freeTextReactions='"'+freeTextReactions+'"';
customNomen.setId(0);
customNomen.setSourceString(allergyI18N.ADD_AS_FREE_TEXT.replace("{0}",freeTextReactions));
replyList.push(customNomen);
}origHandleReplyList.call(this,replyList,reply,err);
MPageControls.NomenclatureSearch.prototype.setSuggestions.call(this,replyList);
this.getList().setSelectedIndex(0);
this.getList().highlight(0);
};
this.reacSearchBar.getList().setOnSelect(function(nomen){if(nomen.getId()===0){nomen.setSourceString(nomenSearchInputElement.val());
self.AllergyName=nomenSearchInputElement.val();
}self.reacSearchBar.activateCaption();
self.reacSearchBar.close();
if(rowObj){AllergyComponentWF.prototype.handleSelectedReaction(self,nomen.getId(),nomen.getSourceString(),rowObj);
}else{AllergyComponentWF.prototype.handleSelectedReaction(self,nomen.getId(),nomen.getSourceString());
}});
nomenSearchInputElement.click(function(){$("#alErrorMessage"+self.m_compId).remove();
var alSearchContent=nomenSearchInputElement.val();
if(!alSearchContent||alSearchContent===allergyI18N.ADD_REACTION){nomenSearchInputElement.val("");
nomenSearchInputElement.addClass("secondary-text");
}else{nomenSearchInputElement.removeClass("secondary-text");
}});
nomenSearchInputElement.bind("change focusout",function(){var alSearchContent=nomenSearchInputElement.val();
if(!alSearchContent||alSearchContent===allergyI18N.ADD_REACTION){nomenSearchInputElement.val(allergyI18N.ADD_REACTION);
nomenSearchInputElement.addClass("secondary-text");
}else{nomenSearchInputElement.removeClass("secondary-text");
}});
}}catch(err){logger.logJSError(err,this,"allergy_o2.js","prepareReactionSearch");
}};
AllergyComponentWF.prototype.handleSelectedReaction=function(component,nomenclatureID,reactionName,rowObj){if(reactionName){var newReactionObj=new component.ReactionRequestJSON();
var newReactionHtml="";
newReactionObj.REACTION_NOM_ID=nomenclatureID;
newReactionObj.REACTION_NAME=reactionName;
if(nomenclatureID===0){newReactionObj.REACTION_FTDESC=reactionName;
}if(rowObj){newReactionObj.ALLERGY_ID=rowObj.ALLERGY_ID;
newReactionHtml=component.buildReactionModify(newReactionObj)+"<div class='sp-separator2 al-wf-side-panel-reactions'>&nbsp;</div></div>";
}else{newReactionObj.ALLERGY_ID=0;
newReactionHtml=component.buildReactionModify(newReactionObj)+"<div class='sp-separator2 al-wf-side-panel-reactions'>&nbsp;</div></div>";
}$("#allergyReactionList"+component.m_compId).prepend(newReactionHtml);
component.m_sidePanel.expandSidePanel();
component.allowEnablingSaveButton=true;
component.enableSaveOnValidFields();
}component.reacSearchBar.activateCaption();
};
AllergyComponentWF.prototype.processRemoveReactions=function(component,removeReactionElem){var getIndex=function(reactionObj,reactionData){return $.map(reactionObj,function(object,index){if(object.REACTION_ID&&object.REACTION_ID===parseFloat(reactionData[1])){return index;
}else{if(object.INDEX===parseInt(reactionData[1],10)){return index;
}}});
};
removeReactionElem.on("click",function(event){var reactionIndex=-1;
var newReactionObject="";
var temp_dupe_index=-1;
if(event.target.className==="al-wf-side-panel-remove-icon"){var parentElem=event.target.parentElement;
if(parentElem){var reactionData="";
$(parentElem).addClass("al-wf-remove-reaction").removeClass("al-wf-side-panel-reaction-list");
if(event.target.parentElement.getAttribute("data-id")){reactionData=event.target.parentElement.getAttribute("data-id").split("_");
if(reactionData[0]==="r"){if(component.allergyRequest){reactionIndex=getIndex(component.allergyRequest.REACTION,reactionData);
if(reactionIndex>-1){component.allergyRequest.REACTION[reactionIndex].ACTIVE_IND=0;
temp_dupe_index=component.reactionsDuplicateList.indexOf(component.allergyRequest.REACTION[reactionIndex].REACTION_NOM_ID);
if(temp_dupe_index>-1){component.reactionsDuplicateList.splice(temp_dupe_index,1);
}}}}else{if(reactionData[0]==="n"){newReactionObject=component.pendingReactionList;
if(newReactionObject){var pendingReactionNomnId=0;
reactionIndex=getIndex(newReactionObject,reactionData);
if(reactionIndex>-1){pendingReactionNomnId=newReactionObject[reactionIndex].REACTION.REACTION_NOM_ID;
component.pendingReactionList.splice(reactionIndex,1);
}if(pendingReactionNomnId>0){temp_dupe_index=component.reactionsDuplicateList.indexOf(pendingReactionNomnId);
if(temp_dupe_index>-1){component.reactionsDuplicateList.splice(temp_dupe_index,1);
}}}}}}}}component.allowEnablingSaveButton=true;
component.enableSaveOnValidFields();
component.m_sidePanel.expandSidePanel();
});
};
MP_Util.setObjectDefinitionMapping("WF_ALLERGY",AllergyComponentWF);
AllergyComponentWF.prototype.handleSelectedAllergy=function(component,nomenclatureID,allergyName){var self=component;
var compId=component.m_compId;
var newRowObj=null;
var actionabilityBanner="";
var allergyFreeTxtBanner="";
self.m_sidePanel.setAlertBannerAsHTML("");
component.m_tableContainer.find("selected").removeClass("selected");
var rowDetailsObject=[{ALLERGY_NAME:allergyName,ALLERGY_SEVERITY:"",ALLERGY_REACTIONS:"",ALLERGY_REACTION_TYPE:"",ALLERGY_INFORMATION_SOURCE:"",COMMENTS_TEXT:""}];
if(!self.displayHiDataInd&&self.getPatientEnteredDataInd()&&self.getOutsideRecordsPref()){var grp=component.allergyTable.getGroupById("GROUP_OTHER_CHART_ALLERGIES");
newRow=new TableRow();
newRow.setId("newAllergyRow");
newRow.setResultData(rowDetailsObject[0]);
newRowObj=newRow;
}else{if(!component.allergyTable.getRows().length){component.allergyTable.renderHeader();
component.allergyTable.bindData(rowDetailsObject);
component.setComponentTable(component.allergyTable);
component.allergyTable.refresh();
component.allergyTable.finalize();
newRowObj=$("#wf_al"+compId+"\\:row0");
}else{newRow=new TableRow();
newRow.setId("newAllergyRow");
newRow.setResultData(rowDetailsObject[0]);
component.allergyTable.addRow(newRow);
component.allergyTable.refresh();
newRowObj=$("#wf_al"+compId+"\\:newAllergyRow");
}}if(newRowObj){component.moveRowToTop(newRowObj);
component.addCellClickExtension();
if(!self.m_showPanel){$("#wf_al"+compId+"table").addClass("allergy-sp-hide-mode");
self.m_tableContainer.addClass("al-wf-side-panel-addition");
self.m_sidePanelContainer.css("display","inline-block");
self.m_showPanel=true;
self.m_sidePanel.showPanel();
}self.m_sidePanel.setTitleText(allergyName);
if(!(nomenclatureID)){var freeTextStatus=self.getAllergyFreeTextStatusPriv();
allergyFreeTxtBanner=self.createAllergyFreeTextBanner(freeTextStatus);
}actionabilityBanner=self.renderActionabilityBanner();
self.m_sidePanel.setAlertBannerAsHTML(allergyFreeTxtBanner+actionabilityBanner);
self.addNewAllergyDetails(allergyName,nomenclatureID);
component.alSearchBar.activateCaption();
}};
AllergyComponentWF.prototype.createHIAddDataControl=function(){var imgUrl=this.getCriterion().static_content+"/images/6965.png";
var hiDataContainer=['<div id="hiAddDataContainer" class="al-wf-hi-ext-label al-wf-hi-banner-container">','<div class="al-wf-banner-image">','<img class="al-wf-externalData" src="',imgUrl,'">',"</div>",'<div class="al-wf-hi-data-label">',i18n.discernabu.allergy_o2.VIEW_UNVERIFIED_RECORDS,"</div>",'<div class="al-wf-outsiderecords-button al-wf-pull-right">','<button class="al-wf-hi-ext-btn " id="hiDataControlBtn',this.getComponentId(),'">',i18n.discernabu.allergy_o2.VIEW_OUTSIDE_RECORDS,"</button>","</div>","</div>"];
return hiDataContainer.join("");
};
AllergyComponentWF.prototype.createHIErrorDataControl=function(){var imgUrl=this.getCriterion().static_content+"/images/6965.png";
var hiDataContainer=['<div class="al-wf-hi-ext-label al-wf-hi-banner-container">','<div class="al-wf-banner-image">','<img class="al-wf-externalData" src="',imgUrl,'">',"</div>",'<div class="al-wf-hi-error-data-label">',i18n.discernabu.allergy_o2.EXTERNAL_DATA_LABEL_ERR,"</div>","</div>"];
return hiDataContainer.join("");
};
AllergyComponentWF.prototype.showHiDataTable=function(){if(this.m_processedHiDataObject){var imgUrl=this.getCriterion().static_content+"/images/6965.png";
var docI18n=i18n.discernabu.allergy_o2;
var hiData=this.m_processedHiDataObject;
this.allergyHiTable=new ComponentTable();
var self=this;
var compId=self.getComponentId();
this.hiNameSpace=this.getStyles().getId()+"hi";
this.allergyHiTable.setNamespace(this.getStyles().getId()+"hi");
var hiDataContainer=['<div id="hiOpenDataContainer" class="al-wf-hi-open-label al-wf-hi-banner-container">','<div class="al-wf-banner-image">','<img class="al-wf-externalData" src="',imgUrl,'">',"</div>",'<div class="al-wf-hi-data-label">',docI18n.UNVERIFIED_RECORDS,"</div>","</div>",'<div id="al-wf-ext-data-loading" class="al-wf-loading"></div>'].join("");
$("#al-wf-banner-holder"+compId).html(hiDataContainer);
var nameColumn=new TableColumn();
nameColumn.setColumnId("HI_NAME");
nameColumn.setCustomClass("allergy-o2-col");
nameColumn.setColumnDisplay(docI18n.NAME);
nameColumn.setPrimarySortField("SORT_ALL_NAME");
nameColumn.setIsSortable(true);
nameColumn.setRenderTemplate("${ALLERGY_NAME}");
var severityColumn=new TableColumn();
severityColumn.setColumnId("HI_Severity");
severityColumn.setCustomClass("allergy-o2-col");
severityColumn.setColumnDisplay(docI18n.SEVERITY);
severityColumn.setPrimarySortField("SORT_ALL_SEVERITYT");
severityColumn.setIsSortable(true);
severityColumn.setRenderTemplate("${ALLERGY_SEVERITY}");
severityColumn.addSecondarySortField("SORT_ALL_NAME",TableColumn.SORT.ASCENDING);
var reactionColumn=new TableColumn();
reactionColumn.setColumnId("HI_Reaction");
reactionColumn.setCustomClass("allergy-o2-col");
reactionColumn.setColumnDisplay(docI18n.REACTION);
reactionColumn.setPrimarySortField("SORT_ALL_REACTIONS");
reactionColumn.setIsSortable(true);
reactionColumn.setRenderTemplate("${ ALLERGY_REACTIONS}");
reactionColumn.addSecondarySortField("SORT_ALL_NAME",TableColumn.SORT.ASCENDING);
var onsetColumn=new TableColumn();
onsetColumn.setColumnId("HI_Source");
onsetColumn.setCustomClass("allergy-o2-sp-hide-col");
onsetColumn.setColumnDisplay(i18n.ONSET);
onsetColumn.setPrimarySortField("SORT_ALL_DATE");
onsetColumn.setIsSortable(true);
onsetColumn.setRenderTemplate("${ ONSET_DATE }");
onsetColumn.addSecondarySortField("SORT_ALL_NAME",TableColumn.SORT.ASCENDING);
var commentColumn=new TableColumn();
commentColumn.setColumnId("HI_Comments");
commentColumn.setCustomClass("allergy-o2-sp-hide-col");
commentColumn.setColumnDisplay(docI18n.COMMENTS);
commentColumn.setPrimarySortField("SORT_ALL_COMMENTS");
commentColumn.setIsSortable(true);
commentColumn.setRenderTemplate("${ ALLERGY_COMMENTS }");
commentColumn.addSecondarySortField("SORT_ALL_NAME",TableColumn.SORT.ASCENDING);
this.allergyHiTable.addColumn(nameColumn);
this.allergyHiTable.addColumn(severityColumn);
this.allergyHiTable.addColumn(reactionColumn);
this.allergyHiTable.addColumn(onsetColumn);
this.allergyHiTable.addColumn(commentColumn);
this.allergyHiTable.bindData(this.m_processedHiDataObject);
this.allergyHiTable.sortByColumnInDirection("HI_Severity",TableColumn.SORT.DESCENDING);
var hiTable=this.allergyHiTable.render();
var hiContent="<div id='al-wf-hi-table-show' class='al-wf-hi-table-rendered'>"+hiTable+"</div>";
return hiContent;
}};
AllergyComponentWF.prototype.createHiPager=function(){var pager=null;
if(this.m_hiData&&this.m_hiData!==""&&this.m_hiTotalResults){var docI18n=i18n.discernabu.allergy_o2;
var totalPages=0;
var self=this;
totalPages=Math.ceil((this.m_hiData.total_results/20));
pager=new MPageUI.Pager();
pager.setCurrentPageLabelPattern("${currentPage} / ${numberPages}").setPreviousLabel(docI18n.PREV).setNextLabel(docI18n.NEXT).setNumberPages(totalPages).setOnPageChangeCallback(function(){self.handlePagerClick(arguments[0].currentPage);
});
this.m_hiPager=pager;
}return pager;
};
AllergyComponentWF.prototype.handlePagerClick=function(currentPage){function getHiData(component){var self=component;
var criterion=self.getCriterion();
var compId=self.getComponentId();
var sendAr=["^MINE^",criterion.person_id+".0",0,0,criterion.provider_id+".0",criterion.ppr_cd+".0","^"+self.hiLookUpKey+"^","^"+self.aliasType+"^",self.aliasPool+".0","^"+self.hiTestURI+"^",self.pageIndex,0];
var request=null;
var allergiesRequest=new ScriptRequest();
allergiesRequest.setProgramName("MP_GET_ALLERGIES_JSON");
allergiesRequest.setParameterArray(sendAr);
allergiesRequest.setResponseHandler(function(scriptReply){if(scriptReply.getResponse().STATUS_DATA.STATUS!="F"){self.checkHiData(scriptReply.m_responseData);
if(self.m_hiDataValid&&self.m_hiHasData){self.processHiResultsForRender(scriptReply.m_responseData);
self.allergyHiTable.clearData();
if(self.m_processedHiDataObject){self.allergyHiTable.bindData(self.m_processedHiDataObject);
var tableRender=self.allergyHiTable.render();
$("#wf_al"+compId+" #al-wf-hi-table-show").find(".loading-screen").remove();
$("#wf_al"+compId+" .al-wf-hi-table-rendered").html(tableRender);
self.allergyHiTable.finalize();
if(self.m_hiClickedRow){var firstRowId=null;
firstRowId=$("#wf_al"+compId+"hitableBody dl:first-child")&&$("#wf_al"+compId+"hitableBody dl:first-child").attr("id");
if(self.m_hiClickedRow.id===firstRowId){self.m_hiClickedRow="";
$("#wf_al"+compId+"hitable").addClass("allergy-sp-hide-mode");
$("#wf_al"+compId+"hitableBody dl:first-child").click();
self.resizeComponent();
}else{$("#wf_al"+compId+"hitable").addClass("allergy-sp-hide-mode");
$("#wf_al"+compId+"hitableBody dl:first-child").click();
self.resizeComponent();
}}else{if(self.m_clickedRow){$("#wf_al"+compId+"hitable").addClass("allergy-sp-hide-mode");
self.resizeComponent();
}else{self.resizeComponent();
}}}}else{if(self.m_hiDataValid===false){$("#wf_al"+compId+" #al-wf-hi-table-show").find(".loading-screen").remove();
$("#wf_al"+compId+" .al-wf-hi-table-rendered").html(MP_Util.HandleErrorResponse("",i18n.discernabu.allergy_o2.ERROR_EXTERNAL_DATA));
self.resizeComponent();
}}}else{$("#wf_al"+compId+" #al-wf-hi-table-show").find(".loading-screen").remove();
$("#wf_al"+compId+" .al-wf-hi-table-rendered").html(MP_Util.HandleErrorResponse("",i18n.discernabu.allergy_o2.ERROR_EXTERNAL_DATA));
self.resizeComponent();
}});
allergiesRequest.performRequest();
}var tableDiv="wf_al"+this.getComponentId()+"hitable";
if(this.m_hiCurrentPage<currentPage){MP_Util.LoadSpinner(tableDiv);
this.pageIndex=this.pageIndex+20;
this.m_hiCurrentPage=currentPage;
this.m_processedHiDataObject=[];
getHiData(this);
}else{MP_Util.LoadSpinner(tableDiv);
this.pageIndex=this.pageIndex-20;
this.m_processedHiDataObject=[];
this.m_hiCurrentPage=currentPage;
getHiData(this);
}};
AllergyComponentWF.prototype.processHiResultsForRender=function(reply){if(reply.HTTPREPLY&&reply.HTTPREPLY.BODY.length){var hiData=JSON.parse(reply.HTTPREPLY.BODY);
this.m_hiData=hiData;
var groups=hiData.groups;
var jsSeverity;
var len=groups.length;
for(var i=len;
i--;
){var currentGroup=groups[i];
jsSeverity="res-normal";
var reactions=currentGroup.most_recent_allergy.reactions;
var reactionLength=reactions.length;
var allergyReactions="";
var reactionSeverityList="";
var comments="--";
var commentList=currentGroup.most_recent_allergy.comments;
var commentLength=commentList.length;
var sidePanelComments=[];
var dateTime;
var allergyCode="--";
for(reactionLength;
reactionLength--;
){var severityDisplay=(reactions[reactionLength].severity_code!==null)?reactions[reactionLength].severity_code.display:"--";
var reactionDisplay=(reactions[reactionLength].reaction_code!==null)?reactions[reactionLength].reaction_code.display:"--";
if(reactionLength===0){allergyReactions+=reactionDisplay;
reactionSeverityList+=reactionDisplay+"("+severityDisplay+")";
}else{allergyReactions+=reactionDisplay+", ";
reactionSeverityList+=reactionDisplay+"("+severityDisplay+"), ";
}if(severityDisplay.toUpperCase()==="SEVERE"||severityDisplay.toUpperCase()==="ANAPHYLLAXIS"){jsSeverity="res-severe";
}}var displayDate=null;
for(commentLength;
commentLength--;
){dateTime=commentList[commentLength].datetime;
var latestDate=new Date(dateTime);
if(!displayDate||displayDate<latestDate){displayDate=latestDate;
comments=commentList[commentLength].text;
}if(commentLength===0){sidePanelComments.push(commentList[commentLength].text);
}else{sidePanelComments.push(commentList[commentLength].text+", ");
}}var sourceType=currentGroup.most_recent_allergy.source.type?currentGroup.most_recent_allergy.source.type:"--";
var sourceDescription=currentGroup.most_recent_allergy.source.partition_description+"("+sourceType+")";
var currentOnsetDate="--";
dateTime=new Date();
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
if(currentGroup.most_recent_allergy.onset_date&&currentGroup.most_recent_allergy.onset_date!==""){dateTime.setISO8601(currentGroup.most_recent_allergy.onset_date);
currentOnsetDate=df.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
}if(currentGroup.most_recent_allergy&&currentGroup.most_recent_allergy.code&&currentGroup.most_recent_allergy.code.id){allergyCode=(currentGroup.most_recent_allergy.code.id.length>0)?currentGroup.most_recent_allergy.code.id:"--";
}var allergyHiName=(currentGroup.name.length>0)?currentGroup.name:"--";
var obj={};
obj.ALLERGY_NAME="<span class ="+jsSeverity+">"+allergyHiName+"("+allergyCode+")</span>";
obj.ALLERGY_NAME_SIDE_PANEL=allergyHiName;
obj.AlLERGY_CODE=(currentGroup.most_recent_allergy.code.id.length>0)?currentGroup.most_recent_allergy.code.id:"--";
obj.ALLERGY_SEVERITY="<span class="+jsSeverity+">--</span>";
obj.ALLERGY_REACTIONS="<span class ="+jsSeverity+">"+((allergyReactions.length>0)?allergyReactions:"--")+"</span>";
obj.ONSET_DATE="<span class ="+jsSeverity+">"+currentOnsetDate+"</span>";
obj.ONSET_DATE_SIDE_PANEL=currentOnsetDate;
obj.ALLERGY_COMMENTS="<span class ="+jsSeverity+">"+comments+"</span>";
obj.ALLERGY_COMMENTS_SIDE_PANEL=(sidePanelComments.length>0)?sidePanelComments.join(""):"--";
obj.ALLERGY_REACTIONS_SEVERITY=(reactionSeverityList.length>0)?reactionSeverityList:"--";
obj.ALLERGY_SOURCE=(sourceDescription.length>0)?sourceDescription:"--";
obj.SORT_ALL_NAME=allergyHiName;
obj.SORT_ALL_SEVERITY="";
obj.SORT_ALL_REACTIONS=((allergyReactions.length>0)?allergyReactions:"--");
obj.SORT_ALL_DATE=currentOnsetDate;
obj.SORT_ALL_COMMENTS=comments;
this.m_processedHiDataObject[i]=obj;
}}};
AllergyComponentWF.prototype.checkHiData=function(reply){try{var hiStatus=reply.STATUS_DATA.SUBEVENTSTATUS[0].OPERATIONSTATUS;
if(hiStatus==="S"&&reply.HTTPREPLY){var hiData=JSON.parse(reply.HTTPREPLY.BODY);
if(hiData.total_results>0){this.m_hiDataValid=true;
this.m_hiHasData=true;
this.m_hiTotalResults=hiData.more_results;
}else{this.m_hiDataValid=true;
this.m_hiHasData=false;
}}else{this.m_hiDataValid=false;
this.m_hiHasData=false;
}}catch(err){this.m_hiDataValid=false;
this.m_hiHasData=false;
MP_Util.LogJSError(err,this,"allergy_o2.js","checkHiData");
}};
AllergyComponentWF.prototype.moveRowToTop=function(newRowObj,isNKARow){if(newRowObj){if(newRowObj instanceof TableRow){var tableRows=this.allergyTable.getRows();
if(this.getPatientEnteredDataInd()&&this.getOutsideRecordsPref()&&!this.displayHiDataInd){tableRows=this.allergyTable.getGroupById("GROUP_OTHER_CHART_ALLERGIES").getRows();
}var idx=$.inArray(newRowObj,tableRows);
if(idx!==-1){tableRows.splice(idx,1);
}tableRows.unshift(newRowObj);
this.allergyTable.refresh();
}else{this.m_tableBodyContainer.children(0).prepend(newRowObj);
this.fixZebraStripes();
}if(!isNKARow){var prevRow=this.m_tableBodyContainer.find(".selected");
if(prevRow.length){if(prevRow.hasClass("al-wf-selected-row selected")){prevRow.removeClass("al-wf-selected-row selected");
}}if(newRowObj instanceof jQuery){newRowObj.addClass("al-wf-selected-row selected");
}else{this.m_tableBodyContainer.find("dl[id*=newAllergyRow]").addClass("al-wf-selected-row selected");
}this.m_tableBodyContainer.scrollTop(0);
}}};
AllergyComponentWF.prototype.fixZebraStripes=function(){var tableBodyArr=this.m_tableBodyContainer.children(0).children();
for(var i=0;
i<tableBodyArr.length;
i++){tableBodyArr[i].className="result-info "+((i%2===0)?"odd":"even");
}};
AllergyComponentWF.prototype.addNewAllergyDetails=function(allergyName,nomenclatureID){try{CERN_EventListener.removeListener(null,"nomenclatureData"+this.m_compId,null,null);
this.alSearchBar.disable();
this.m_sidePanel.m_cornerCloseButton.hide();
this.alSearchBar.activateCaption();
var allergyI18N=i18n.discernabu.allergy_o2;
var self=this;
var modifyReactionDetailsHTML="";
var modifyDetailsOptionsHTML="";
var modifyDateControlHTML="";
var modifyCommentsTextAreaHTML="";
var actionHolderSP=$("#allergySPAction"+this.m_compId);
var scrollContainerElem=$("#sidePanelScrollContainer"+this.m_compId);
var resultListElem="";
var cancelBtnAction="";
var saveBtnAction="";
var nomenDataCnt=0;
var reactionNomenSearchBar="";
var optionsRenderedCnt=0;
var removeReactionItem="";
this.allergyRequest=new this.AllergyRequestJSON();
this.pendingReactionList=[];
this.mandatoryItemsEntryList=[];
this.reactionsDuplicateList=[];
this.allergyRequest.PERSON_ID=this.criterion.person_id;
this.allergyRequest.ENCNTR_ID=this.criterion.encntr_id;
this.allergyRequest.ALLERGY_ID=0;
this.allergyRequest.ALLERGY_INSTANCE_ID=0;
this.allergyRequest.SUBSTANCE_NOM_ID=nomenclatureID;
if(this.isFreeTextAllergy){this.allergyRequest.SUBSTANCE_FTDESC=allergyName;
}CERN_EventListener.addListener(self,"nomenclatureData"+self.m_compId,function(){nomenDataCnt++;
if(nomenDataCnt===3){var substanceCD=MP_Util.GetCodeByMeaning(self.nomenSubstanceCodes,"DRUG").codeValue;
var reactionTypeCD=MP_Util.GetCodeByMeaning(self.nomenReactionType,"ALLERGY").codeValue;
var reactionStatusCD=MP_Util.GetCodeByMeaning(self.nomenReactionStatus,"ACTIVE").codeValue;
self.allergyRequest.SUBSTANCE_TYPE_CD=substanceCD;
self.allergyRequest.REACTION_CLASS_CD=reactionTypeCD;
self.allergyRequest.STATUS_CD=reactionStatusCD;
if(allergyName==="NKMA"){self.allergyRequest.SUB_CONCEPT_CKI="CERNER!NKMA";
}self.performAllergyRequest(self);
return;
}});
if(allergyName==="NKA"||allergyName==="NKMA"){self.isSavingNomenclatureItem=true;
this.getNomenclatureDetails();
}if(!this.isSavingNomenclatureItem){this.m_sidePanel.setActionsAsHTML("<div id='allergySPAction"+this.m_compId+"' class='al-sp-actions al-wf-edit-mode'><div class='sp-button2 al-wf-cancel-button' id='allergyCancelButton"+this.m_compId+"'>"+i18n.CANCEL+"</div><div class='sp-button2 al-wf-save-button' id='allergySaveButton"+this.m_compId+"'>"+i18n.SAVE+"</div></div>");
scrollContainerElem.html("");
scrollContainerElem.append("<div id='wf_al"+this.m_compId+"sidePanelResultList' class='al-wf-side-panel-result-list'></div>");
resultListElem=$("#wf_al"+this.m_compId+"sidePanelResultList");
$("#sidePanel"+this.m_compId).find(".loading-screen").remove();
CERN_EventListener.removeListener(null,"optionsRendered"+this.m_compId,null,null);
cancelBtnAction=$("#allergyCancelButton"+this.m_compId);
cancelBtnAction.click(function(){if(!self.displayHiDataInd&&self.getPatientEnteredDataInd()&&self.getOutsideRecordsPref()){var group=self.allergyTable.getGroupById("GROUP_OTHER_CHART_ALLERGIES");
group.rows.shift();
}else{self.allergyTable.getRows().pop();
}if(self.displayHiDataInd){self.m_addSidePanelFlag=false;
}self.allergyTable.refresh();
self.addCellClickExtension();
self.m_sidePanel.m_cornerCloseButton.show();
self.alSearchBar.enable();
self.m_sidePanel.m_cornerCloseButton.trigger("click");
});
saveBtnAction=$("#allergySaveButton"+this.m_compId);
this.disableAllergySaveButton(saveBtnAction);
saveBtnAction.click(function(){if(!saveBtnAction.prop("disabled")){self.saveModifiedAllergy(self);
}});
MP_Util.LoadSpinner("sidePanel"+this.m_compId);
modifyReactionDetailsHTML+="<dl><dt><div class='al-wf-title-text'>"+allergyI18N.REACTION+"</div><div class='al-wf-side-panel-reaction' id='allergyReactionSearchContainer"+this.m_compId+"'></div><br /><div id='allergyReactionList"+this.m_compId+"'></div></dt><div class='sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div></dl>";
resultListElem.append(modifyReactionDetailsHTML);
CERN_EventListener.addListener(self,"optionsRendered"+self.m_compId,function(){optionsRenderedCnt++;
if(optionsRenderedCnt===7){$("#sidePanel"+self.m_compId).find(".loading-screen").remove();
}});
modifyDetailsOptionsHTML+="<dl class='al-wf-side-panel-options-list'><dd id='allergyResultListSeverity"+this.m_compId+"'></dd><dd id='allergyResultListReactionType"+this.m_compId+"'></dd><dd id='allergyResultListCategory"+this.m_compId+"'></dd></dl><dl class='al-wf-side-panel-options-list'><dd id='allergyResultListStatus"+this.m_compId+"'></dd><dd id='allergyResultListReason"+this.m_compId+"'></dd><dd id='allergyResultListSource"+this.m_compId+"'></dd></dl>";
modifyDateControlHTML+="<dl><dd id='allergyResultListDateControl"+this.m_compId+"'><div class='al-wf-title-text'>"+allergyI18N.ONSET+"</div></dd></dl>";
modifyCommentsTextAreaHTML+="<dl><div class='sp-separator2 al-wf-side-panel-selector-spacing'>&nbsp;</div><dd id='allergyResultListComments"+this.m_compId+"' class='al-wf-side-panel-comments'><div class='al-wf-title-text'>"+allergyI18N.COMMENTS+"</div><div class='al-wf-side-panel-text-comment'><textarea class='al-wf-side-panel-text-input' id='allergyCommentsTextInput"+this.m_compId+"'/></div></dd></dl>";
resultListElem.append(modifyDetailsOptionsHTML+modifyDateControlHTML+modifyCommentsTextAreaHTML);
this.getAllSourceCodes();
this.m_sidePanel.setContents(scrollContainerElem,"wf_alContent"+this.m_compId);
$("#dummySearchContainer"+this.m_compId).addClass("al-wf-remove-reaction");
this.prepareReactionSearch();
removeReactionElem=$("#allergyReactionList"+this.m_compId);
this.processRemoveReactions(this,removeReactionElem);
this.renderAllergyDateControl();
$("#allergyCommentsTextInput"+this.m_compId).keyup(function(event){self.enableAllergySaveButton(self,saveBtnAction);
});
}}catch(err){logger.logJSError(err,this,"allergy_o2.js","addNewAllergyDetails");
}};
AllergyComponentWF.prototype.bindNKAEvents=function(nomenclatureItems){var self=this;
var componentId=this.m_compId;
var nkaBtn=$("#documentNKABtn"+componentId);
var nkmaBtn=$("#documentNKMABtn"+componentId);
var nomenObj={};
var nomenItemsLength=nomenclatureItems.length;
for(var i=0;
i<nomenItemsLength;
i++){var nomenItem=nomenclatureItems[i];
if(nomenItem.CUSTOM_IDENTIFIER==="NKA"){nomenObj.nka=nomenItem;
}else{if(nomenItem.CUSTOM_IDENTIFIER==="NKMA"){nomenObj.nkma=nomenItem;
}}}nkaBtn.click(function(){self.nka=nomenObj.nka;
self.addNewAllergyDetails(nomenObj.nka.CUSTOM_IDENTIFIER,nomenObj.nka.NOMEN_ID);
});
nkmaBtn.click(function(){self.nkma=nomenObj.nkma;
self.addNewAllergyDetails(nomenObj.nkma.CUSTOM_IDENTIFIER,nomenObj.nkma.NOMEN_ID);
});
};
AllergyComponentWF.prototype.renderActionabilityBanner=function(){var componentId=this.getComponentId();
var docI18n=i18n.discernabu.allergy_o2;
var warningBanner=new MPageUI.AlertBanner();
warningBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.INFO);
warningBanner.setPrimaryText(docI18n.ACTIONABILITY_BANNER);
return warningBanner.render();
};
AllergyComponentWF.prototype.renderNKABanner=function(reply){var componentId=this.getComponentId();
var docI18n=i18n.discernabu.allergy_o2;
var bannerHTML="<div id='nkaBannerContainer"+componentId+"'>";
var privsItemsLength=(reply.PRIVILEGES)?reply.PRIVILEGES.length:0;
for(var i=0;
i<privsItemsLength;
i++){var currentPriv=reply.PRIVILEGES[i];
if(currentPriv.PRIVILEGE_NAME==="VIEWALLERGY"){if(currentPriv.EXCEPTIONS.length>0||currentPriv.DEFAULT_IND===0){var warningBanner=new MPageUI.AlertBanner();
warningBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.WARNING);
warningBanner.setPrimaryText(docI18n.INSUFFICIENT_PRIVS_ALERT_PRIMARY);
warningBanner.setSecondaryText(docI18n.INSUFFICIENT_PRIVS_ALERT_SECONDARY);
bannerHTML=bannerHTML+warningBanner.render();
break;
}}if(currentPriv.PRIVILEGE_NAME==="UPDTALLERGY"){if(currentPriv.EXCEPTIONS.length===0&&currentPriv.DEFAULT_IND===0){this.disableAllergySearch=true;
}if(!reply.ALLERGY.length){var errorBanner=new MPageUI.AlertBanner();
errorBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
errorBanner.setPrimaryText(docI18n.NO_ALLERGIES_FOUND_ALERT_PRIMARY);
if(currentPriv.EXCEPTIONS.length===0&&currentPriv.DEFAULT_IND===0){bannerHTML=bannerHTML+errorBanner.render();
break;
}else{errorBanner.setSecondaryText(docI18n.NO_ALLERGIES_FOUND_ALERT_SECONDARY);
bannerHTML=bannerHTML+errorBanner.render();
break;
}}}}if(this.getActionabilityPriv()){bannerHTML=bannerHTML+"</div>"+this.renderNKALinks(reply);
}else{bannerHTML=bannerHTML+"</div>";
}return bannerHTML;
};
AllergyComponentWF.prototype.renderNKALinks=function(reply){var componentId=this.getComponentId();
var linksHTML="<div id='nkaLinksContainer"+componentId+"' class = 'al-wf-nkaContainer'>";
var linkNKA="";
var linkNKMA="";
var isNKA=false;
var isNKMA=false;
var nomenclatureIdObj={};
var docI18n=i18n.discernabu.allergy_o2;
var nomenItemsLength=(reply.NOMENCLATURE_ITEMS)?reply.NOMENCLATURE_ITEMS.length:0;
for(var i=0;
i<nomenItemsLength;
i++){var nomItem=reply.NOMENCLATURE_ITEMS[i];
if(nomItem.CUSTOM_IDENTIFIER==="NKA"){linkNKA="<a id='documentNKABtn"+componentId+"'>"+docI18n.NO_KNOWN_ALLERGIES+"</a>";
isNKA=true;
nomenclatureIdObj.nka=nomItem;
}if(nomItem.CUSTOM_IDENTIFIER==="NKMA"){linkNKMA="<a id='documentNKMABtn"+componentId+"'>"+docI18n.NO_KNOWN_MEDICATION_ALLERGIES+"</a>";
nomenclatureIdObj.nkma=nomItem;
isNKMA=true;
}}if(isNKA&&isNKMA){return linksHTML+linkNKA+" | "+linkNKMA;
}else{if(isNKA){return linksHTML+linkNKA;
}else{return linksHTML+linkNKMA;
}}};
AllergyComponentWF.prototype.resetNKARows=function(){var compId=this.m_compId;
var isNKA=false;
var nkaRow=null;
var otherChartAllergiesGrp=null;
var rows=null;
var rowCnt=0;
if(this.getPatientEnteredDataInd()&&this.getOutsideRecordsPref()&&!this.displayHiDataInd){otherChartAllergiesGrp=this.allergyTable.getGroupById("GROUP_OTHER_CHART_ALLERGIES");
rows=otherChartAllergiesGrp.getRows();
rowCnt=rows.length;
}else{rows=this.allergyTable.getRows();
rowCnt=rows.length;
}for(var i=0;
i<rowCnt;
i++){var allergy=rows[i];
var allergyData=allergy.getResultData();
if(allergyData.ALLERGY_CUSTOM_NAME){if(allergyData.ALLERGY_CUSTOM_NAME==="NKA"){nkaRow=allergy;
isNKA=true;
this.moveRowToTop(nkaRow,true);
}else{if(allergyData.ALLERGY_CUSTOM_NAME==="NKMA"&&!(isNKA)){nkaRow=allergy;
this.moveRowToTop(nkaRow,true);
}}}}};
AllergyComponentWF.prototype.resizeSidePanel=function(){var windowPadding=70;
var tableHeight=$("#wf_al"+this.m_compId+"table").height();
var offsetHeight=$("#wf_alContent"+this.m_compId).height()-tableHeight;
var maxViewHeight=($("#vwpBody").height()-windowPadding)+"px";
this.m_sidePanel.collapseSidePanel();
this.m_sidePanel.setOffsetHeight(offsetHeight);
this.m_sidePanel.setHeight(tableHeight+"px");
this.m_sidePanel.setMinHeight(tableHeight+"px");
this.m_sidePanel.setMaxHeight(maxViewHeight);
this.m_sidePanel.expandSidePanel();
};
AllergyComponentWF.prototype.resizeComponent=function(){MPageComponent.prototype.resizeComponent.call(this,null);
if(this.m_showPanel&&!this.displayHiDataInd){this.resizeSidePanel();
}if(this.displayHiDataInd){var calcHeight="";
var compHeight=0;
var compDOMObj=null;
var compType=this.getStyles().getComponentType();
var container=null;
var contentBodyHeight=0;
var contentBodyObj=null;
var miscHeight=20;
var viewHeight=0;
var sidePanelMiscHeight=5;
if(this.allergyRequest){this.moveSidePanel();
$("#wf_alContent"+this.m_compId).css("height","");
}container=$("#vwpBody");
if(!container.length){return;
}viewHeight=container.height();
compDOMObj=$("#"+this.getStyles().getId());
if(!compDOMObj.length){return;
}contentBodyObj=compDOMObj.find(".content-body");
if(contentBodyObj.length){compHeight=compDOMObj.height();
contentBodyObj.each(function(){contentBodyHeight=contentBodyHeight+$(this).height();
});
calcHeight=(viewHeight-(compHeight-contentBodyHeight+miscHeight));
this.calcDynamicSize(contentBodyObj,calcHeight);
}if(this.getComponentTable()){this.getComponentTable().updateAfterResize();
}if(this.allergyHiTable){this.allergyHiTable.updateAfterResize();
}}};
AllergyComponentWF.prototype.calcDynamicSize=function(contentBodyObj,viewHeight){if(contentBodyObj.length===1){contentBodyObj.css("max-height",viewHeight).css("overflow-y","auto");
return;
}var equalHeight=viewHeight/contentBodyObj.length;
var smallDivs=[];
var largeDivs=[];
contentBodyObj.each(function(){$(this).css("max-height","");
if($(this).height()<=equalHeight){smallDivs.push($(this));
}else{largeDivs.push($(this));
}});
if(smallDivs.length){if(!largeDivs.length){var smallDivsHeight=viewHeight/smallDivs.length;
for(var i=0;
i<smallDivs.length;
i++){smallDivs[i].css("max-height",smallDivsHeight).css("overflow-y","auto");
}}else{for(var i=0;
i<smallDivs.length;
i++){var divHeight=smallDivs[i].height();
smallDivs[i].css("max-height",divHeight).css("overflow-y","auto");
viewHeight=viewHeight-divHeight;
}}}if(largeDivs.length){var largeDivHeight=viewHeight/largeDivs.length;
for(var i=0;
i<largeDivs.length;
i++){largeDivs[i].css("max-height",largeDivHeight).css("overflow-y","auto");
}}};
AllergyComponentWF.prototype.setMemberVariables=function(){this.aliasType="";
this.aliasPool=0;
this.hiTestURI="";
this.hiLookUpKey="";
this.m_hiHasData=false;
this.m_hiData=null;
this.m_hiTotalResults=0;
this.m_hiCurrentPage=0;
this.m_hiPager=null;
this.pageIndex=0;
this.m_addSidePanelFlag=false;
this.m_hiDataValid=false;
this.m_processedHiDataObject=[];
this.m_sidePanel=null;
this.m_showPanel=false;
this.m_sidePanelContainer=null;
this.m_clickedRow=null;
this.m_hiClickedRow=null;
if(this.allergyRequest){this.allergyRequest=null;
$("#wf_alContent"+this.m_compId).css("height","");
}};
AllergyComponentWF.prototype.moveSidePanel=function(){var sidePanel="wf_al"+this.m_compId+"sidePanelContainer";
var sidePanelDiv=document.getElementById(sidePanel);
if(sidePanelDiv.parentNode){sidePanelDiv.parentNode.removeChild(sidePanelDiv);
}var allergyDiv="al-wf-allergy-full"+this.m_compId;
document.getElementById(allergyDiv).appendChild(sidePanelDiv);
};
AllergyComponentWF.prototype.getNonNomenAllergyCount=function(results){var nonNomenResultCount=0;
var resultCnt=results.length;
for(var i=0;
i<resultCnt;
i++){var allergy=results[i];
if(allergy.ALLERGY_CUSTOM_NAME!=="NKA"&&allergy.ALLERGY_CUSTOM_NAME!=="NKMA"){nonNomenResultCount++;
}}return nonNomenResultCount;
};
AllergyComponentWF.prototype.getNomenclatureDetails=function(){var substanceCodesCB=function(result){this.nomenSubstanceCodes=MP_Util.LoadCodeListJSON(result);
CERN_EventListener.fireEvent(null,this,"nomenclatureData"+this.m_compId,null);
};
var reactionTypeCB=function(result){this.nomenReactionType=MP_Util.LoadCodeListJSON(result);
CERN_EventListener.fireEvent(null,this,"nomenclatureData"+this.m_compId,null);
};
var reactionStatusCB=function(result){this.nomenReactionStatus=MP_Util.LoadCodeListJSON(result);
CERN_EventListener.fireEvent(null,this,"nomenclatureData"+this.m_compId,null);
};
MP_Util.GetCodeSetAsync(12020,substanceCodesCB.bind(this));
MP_Util.GetCodeSetAsync(12021,reactionTypeCB.bind(this));
MP_Util.GetCodeSetAsync(12025,reactionStatusCB.bind(this));
};
