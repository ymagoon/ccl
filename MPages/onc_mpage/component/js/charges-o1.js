function ChargesO1ComponentStyle(){this.initByNamespace("charges");
}ChargesO1ComponentStyle.prototype=new ComponentStyle();
ChargesO1ComponentStyle.prototype.constructor=ComponentStyle;
function ChargesO1Component(criterion){this.setCriterion(criterion);
this.setStyles(new ChargesO1ComponentStyle());
this.setComponentLoadTimerName("USR:MPG_CHARGES.O1_load_component");
this.setComponentRenderTimerName("ENG:MPG.CHARGES.O1 - render component");
this.setIncludeLineNumber(true);
this.setScope(1);
this.setAlwaysExpanded(true);
this.resultsCount=0;
this.conditionsRetrievedStatus="";
this.conditionsScriptCalled=false;
this.chargesTable=null;
this.historyTable=null;
this.conditionHandler=null;
this.selectedServiceDate=null;
this.rollingHistoryArray=null;
this.m_rollingHistoryTable=null;
this.m_encounterStartDate=new Date();
this.m_encounterTypeCd=null;
this.m_fullHistoryModal=null;
this.m_chargeHistoryMap=null;
this.m_locationMenuId=null;
this.m_locationJSON=null;
this.m_userFullName="";
this.m_defaultLocationSettings=null;
this.m_ICDCodes=null;
this.cptCodesMap=null;
this.associatedConditionsObj=null;
this.unassociatedConditionsObj=null;
this.conditionsArr=null;
this.chargeHistory=null;
this.currentEncounterType=null;
this.selectedCodeObj=null;
this.cptCode="";
this.lastSelectedRow="";
this.chargingJSON="";
this.cptCodes="";
this.bedrockVisitTypes=[];
this.m_visitTypeDefinitions=null;
this.tierGroups=null;
this.chargesSidePaneObj=null;
this.MIN_SP_HEIGHT=275;
this.setResourceRequired(true);
this.m_myNote=null;
this.m_myNotes=null;
this.m_selectdeNoteEventId=0;
this.m_myNotesTable=null;
this.m_myNoteDialog=null;
this.m_visitTypeObj=null;
this.m_levelOfService=null;
this.m_recNcode="";
this.m_selectedModifier=0;
this.m_isnCodeServerRunning=false;
this.m_suggestedDiagnoses=null;
this.m_patientLocations=null;
this.m_modifiedProviderId=0;
this.m_modifiedLocationId=0;
this.m_organizationId=0;
this.m_isAddNoteEnabled=true;
this.m_selectedVisitCPTRange=null;
this.m_isShowChargeHistoryClicked=false;
this.m_popupObj=null;
this.m_locationPopupObj=null;
this.m_providerPopupObj=null;
this.m_specialtyList=null;
this.m_viewSpecialtyPref=false;
this.m_assignedSpecialty="";
this.m_phyIndicator=null;
this.m_nonPhyEnabled=false;
this.m_prsnlList=[];
this.m_isCPTSubmitted=false;
}ChargesO1Component.prototype=new MPageComponent();
ChargesO1Component.prototype.constructor=MPageComponent;
ChargesO1Component.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_CH_TIERS",{setFunction:this.setTierGroups,type:"NUMBER",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_CH_ENABLE_ADD_NOTE",{setFunction:this.setAddNoteEnabled,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_CH_PHY_IND",{setFunction:this.setNonPhyEnabled,type:"BOOLEAN",field:"FREETEXT_DESC"});
};
ChargesO1Component.prototype.setPhysicianIndicator=function(indicator){if(typeof indicator!=="number"){throw new Error("Invalid Physician indicator passed to 'setPhysicianIndicator'");
}this.m_phyIndicator=indicator;
};
ChargesO1Component.prototype.getPhysicianIndicator=function(){return this.m_phyIndicator;
};
ChargesO1Component.prototype.setNonPhyEnabled=function(enabler){if(typeof enabler!=="boolean"){throw new Error("Invalid type passed to 'setNonPhyEnabled'");
}this.m_nonPhyEnabled=!enabler;
};
ChargesO1Component.prototype.isNonPhyEnabled=function(){return this.m_nonPhyEnabled;
};
ChargesO1Component.prototype.setShowChargeHistoryClicked=function(showChargeHistoryClicked){this.m_isShowChargeHistoryClicked=showChargeHistoryClicked;
};
ChargesO1Component.prototype.isShowChargeHistoryClicked=function(){return this.m_isShowChargeHistoryClicked;
};
ChargesO1Component.prototype.setAddNoteEnabled=function(enableAddNote){this.m_isAddNoteEnabled=enableAddNote;
};
ChargesO1Component.prototype.isAddNoteEnabled=function(){return this.m_isAddNoteEnabled;
};
ChargesO1Component.prototype.isLaunchedFromDocumentation=function(){return(!this.m_isAddNoteEnabled);
};
ChargesO1Component.prototype.setModifiedLocationId=function(locationId){if(typeof locationId!=="number"){throw new Error("Invalid locationId passed to 'setModifiedLocationId'");
}this.m_modifiedLocationId=locationId;
};
ChargesO1Component.prototype.getModifiedLocationId=function(){return this.m_modifiedLocationId;
};
ChargesO1Component.prototype.setPatientLocations=function(patientLocations){if(typeof patientLocations==="undefined"){throw new Error("Patient locations do not exist");
}this.m_patientLocations=patientLocations;
};
ChargesO1Component.prototype.getPatientLocations=function(){return this.m_patientLocations;
};
ChargesO1Component.prototype.setSpecialtyPref=function(value){this.m_viewSpecialtyPref=value;
};
ChargesO1Component.prototype.getSpecialtyPref=function(){return this.m_viewSpecialtyPref;
};
ChargesO1Component.prototype.setModifiedProviderId=function(providerId){if(typeof providerId!=="number"){throw new Error("Invalid providerId passed to 'setModifiedProviderId'");
}this.m_modifiedProviderId=providerId;
};
ChargesO1Component.prototype.getModifiedProviderId=function(){return this.m_modifiedProviderId;
};
ChargesO1Component.prototype.setOrganizationId=function(organizationId){if(typeof organizationId!=="number"){throw new Error("Invalid organizationId passed to 'setOrganizationId'");
}this.m_organizationId=organizationId;
};
ChargesO1Component.prototype.getOrganizationId=function(){return this.m_organizationId;
};
ChargesO1Component.prototype.setTierGroups=function(tierGroups){this.tierGroups=tierGroups;
};
ChargesO1Component.prototype.getTierGroups=function(){return this.tierGroups;
};
ChargesO1Component.prototype.retrieveComponentData=function(){this.fetchHistoricalCharges(7,null);
};
ChargesO1Component.prototype.refreshComponent=function(){this.setModifiedLocationId(0);
this.setLocationPopupObj(null);
this.setModifiedProviderId(0);
this.setProviderPopupObj(null);
this.m_chargeHistoryMap=[];
this.historyTable=null;
this.conditionsScriptWasCalled(false);
MPageComponent.prototype.refreshComponent.call(this);
};
ChargesO1Component.prototype.renderComponent=function(replyObj){var compId=this.getComponentId();
var compNS=this.getStyles().getNameSpace();
var timerRenderComponent=null;
this.grabTableCPTCodes();
var chargeHTML="";
var that=this;
var origChargeJSON=replyObj;
this.setChargingJSON(origChargeJSON);
var initialCPTInstruction="";
var chargeTable=this.generateChargeTable([]);
this.setChargesTable(chargeTable);
try{timerRenderComponent=MP_Util.CreateTimer(this.getComponentRenderTimerName());
this.finalizeComponent(this.buildComponentBaseHTML());
this.updateCPTInstructions((initialCPTInstruction)?initialCPTInstruction+" criteria required":"");
this.addChargesSidePanel();
this.attachListeners();
this.bindSidePaneActions();
this.bindChargeSubmitAction();
this.bindNewChargeAction();
if(this.isnCodeServerRunning()){this.addSpecialtyAssignEventHandler();
}$("#"+compId).children(".sec-hd").find(".sec-total").text("");
if(this.isLaunchedFromDocumentation()&&this.isnCodeServerRunning()){document.getElementById("mainCompMenu"+compNS+compId).style.display="inline-block";
document.getElementById("mainCompMenu"+compNS+compId).classList.add("opts-menu-empty");
this.addSpecialtyWhenLaunchedFromDocumentation();
}this.postProcessing();
}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}MP_Util.LogJSError(this,err,"charges-o1.js","renderComponent");
throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}};
ChargesO1Component.prototype.addClickExpandCollapse=function(){var self=this;
self.chargesSidePaneObj.expandSidePanel=function(){if(!this.m_sidePanelObj.hasClass("sp-focusin")){this.m_expCollapseBarObj.removeClass("hidden");
this.m_parentContainer.css({position:"absolute"});
this.m_sidePanelObj.addClass("sp-focusin");
this.m_expCollapseIconObj.addClass("sp-collapse").removeClass("sp-expand");
}this.m_previousMinHeight=this.m_minHeight;
var heightVal=parseInt(this.m_height,10);
var minHeightVal=parseInt(this.m_minHeight,10);
if(heightVal>minHeightVal){this.setMinHeight(this.m_height);
}this.m_scrollContainer.css("max-height","");
var titleHeight=null;
var seperatorHeightInSP=parseInt($("div.charges-o1-rp-mod-root-cont > div.sp-separator").outerHeight(true))+($("#sidePanelContents"+self.getComponentId()+" > div.sp-separator2").outerHeight()?$("#sidePanelContents"+self.getComponentId()+" > div.sp-separator2").outerHeight(true):0);
var middleSectionHeight=seperatorHeightInSP+($("#"+self.getComponentId()+"RPEditableSection").height()?$("#"+self.getComponentId()+"RPEditableSection").height():0)+($(".charges-o1-sp-middle-section").height()?$(".charges-o1-sp-middle-section").height():0)+($(".charges-o1-alert-message").outerHeight(true)?$(".charges-o1-alert-message").outerHeight(true)+25:0);
var bodyContentHeight=this.m_sidePanelBodyContents[0].offsetHeight;
titleHeight=(this.m_sidePanelContents.height()-bodyContentHeight)+middleSectionHeight;
this.m_sidePanelObj.css({height:"auto"});
var bannerHeight=$(".charges-o1-specialty-banner-color:visible").height();
if($(".charges-o1-specialty-banner-color:visible").length){bannerHeight=bannerHeight+26;
}else{bannerHeight=bannerHeight+10;
}if($(".charges-o1-submit-fail-banner:visible").length||$(".charges-o1-retrieve-fail-banner:visible").length){bannerHeight=bannerHeight+55;
}var scrollMaxHeight=(this.m_sidePanelObj.height()-titleHeight)-bannerHeight;
this.m_scrollContainer.css("max-height",scrollMaxHeight+"px");
scrollMaxHeight=this.m_scrollContainer.height()>scrollMaxHeight?Math.ceil(scrollMaxHeight):Math.floor(scrollMaxHeight);
var heightOfScroll=130;
var scrollContainerHeight=400;
if($("#"+self.getComponentId()+"chargesScrollContainer > div:last").hasClass("charges-o1-pp-init")){$("#"+self.getComponentId()+"chargesScrollContainer").addClass("sp-add-scroll");
var heightOfChargesScrollContainer=$("#sidePanel"+self.getComponentId()).height()-($("#"+self.getComponentId()+"RPEditableSection").height()+$("#sidePanelHeader"+self.getComponentId()).height()+(parseInt($(".sp-separator").css("margin-top"),10)*3+5));
$("#"+self.getComponentId()+"chargesScrollContainer").height(heightOfChargesScrollContainer);
}else{if((scrollMaxHeight+$("#"+self.getComponentId()+"nCodeWarn").height())<heightOfScroll){$("#sidePanelScrollContainer"+self.getComponentId()).removeClass("sp-add-scroll");
$("#"+self.getComponentId()+"chargesScrollContainer").addClass("sp-add-scroll");
if($("#"+self.getComponentId()+"chargesScrollContainer").outerHeight(true)>scrollContainerHeight){var heightOfChargesScrollContainer=$("#sidePanel"+self.getComponentId()).height()-($("#"+self.getComponentId()+"RPEditableSection").height()+$("#sidePanelHeader"+self.getComponentId()).height()+(parseInt($(".sp-separator").css("margin-top"),10)*3+5));
$("#"+self.getComponentId()+"chargesScrollContainer").height(heightOfChargesScrollContainer);
}else{$("#"+self.getComponentId()+"chargesScrollContainer").css("height","auto");
}}else{if(scrollMaxHeight===this.m_scrollContainer.height()){this.m_scrollContainer.addClass("sp-add-scroll");
$("#"+self.getComponentId()+"chargesScrollContainer").css("height","auto");
$("#"+self.getComponentId()+"chargesScrollContainer").hasClass("sp-add-scroll")?$("#"+self.getComponentId()+"chargesScrollContainer").removeClass("sp-add-scroll"):"";
}}}if($(".charges-o1-specialty-banner-color:visible").length||$(".charges-o1-submit-fail-banner:visible").length||$(".charges-o1-retrieve-fail-banner:visible").length){var heightOfChargesScrollContainer=$("#sidePanel"+self.getComponentId()).height()-$(".charges-o1-specialty-banner-color:visible").height()-($("#"+self.getComponentId()+"RPEditableSection").height()+$("#sidePanelHeader"+self.getComponentId()).height()+(parseInt($(".sp-separator").css("margin-top"),10)*3+5));
$("#sidePanelScrollContainer"+self.getComponentId()).removeClass("sp-add-scroll");
$("#"+self.getComponentId()+"chargesScrollContainer").height(heightOfChargesScrollContainer);
$("#sidePanel"+self.getComponentId()).height($("#sidePanel"+self.getComponentId()).height()-30);
}if(this.m_onExpandFunc){this.m_onExpandFunc();
}};
self.chargesSidePaneObj.collapseSidePanel=function(){if(this.m_expCollapseIconObj.hasClass("sp-collapse")){this.m_compBodyObj.css("height","auto");
}$("#"+self.getComponentId()+"chargesScrollContainer").css("height","auto");
SidePanel.prototype.collapseSidePanel.call(this,null);
};
};
ChargesO1Component.prototype.bindChargeSubmitAction=function(){var self=this;
var compID=this.getComponentId();
$("#sidePanelActionBar"+compID).click(function(event){var jqSrcElement=$(event.target);
var type=event.type;
if(type==="click"&&jqSrcElement.prop("id")===compID+"RPSubmitBtn"&&!jqSrcElement.is(":disabled")){var dropChargeTimer=MP_Util.CreateTimer("CAP:MPG Charges-o1_drop_charge");
if(dropChargeTimer){dropChargeTimer.Start();
dropChargeTimer.Stop();
}self.dropCharge();
}});
};
ChargesO1Component.prototype.bindNewChargeAction=function(){var self=this;
var compID=this.getComponentId();
$("#sidePanelActionBar"+compID).click(function(event){var jqSrcElement=$(event.target);
var type=event.type;
if(type==="click"&&jqSrcElement.prop("id")===compID+"RPNewBtn"){self.renderDefaultPPInitialView();
self.resizeComponentBody();
self.chargesSidePaneObj.expandSidePanel();
self.m_isCPTSubmitted=false;
}});
};
ChargesO1Component.prototype.getICDCodes=function(){if(!this.m_ICDCodes){this.m_ICDCodes=[];
}return this.m_ICDCodes;
};
ChargesO1Component.prototype.setICDCodes=function(codes){if(!(codes instanceof Array)){throw new Error("ICD Codes are not of Array type");
}this.m_ICDCodes=codes;
};
ChargesO1Component.prototype.isICDCode=function(code){var icdCodes=this.getICDCodes();
var iLen=icdCodes.length;
var i;
for(i=0;
i<iLen;
i++){if(icdCodes[i]===code){return true;
}}return false;
};
ChargesO1Component.prototype.getDefaultLocationSettings=function(){return this.m_defaultLocationSettings;
};
ChargesO1Component.prototype.setDefaultLocationSettings=function(locCD,locDISP){var settings={};
if(typeof locCD!=="number"||locCD<=0){throw new Error("Invalid locCD passed to 'setDefaultLocationSettings'");
}if(typeof locDISP!=="string"||!locDISP.length){throw new Error("Invalid locDISP passed to 'setDefaultLocationSettings'");
}settings.LOCATION_CD=locCD;
settings.LOCATION_DISPLAY=locDISP;
this.m_defaultLocationSettings=settings;
};
ChargesO1Component.prototype.getUserFullName=function(){return this.m_userFullName;
};
ChargesO1Component.prototype.setUserFullName=function(name){if(typeof name!=="string"){throw new Error("Invalid User Full Name passed into 'setUserFullName'");
}this.m_userFullName=name;
};
ChargesO1Component.prototype.getFullHistoryModal=function(){return this.m_fullHistoryModal;
};
ChargesO1Component.prototype.setFullHistoryModal=function(modal){if(!ModalDialog.prototype.isPrototypeOf(modal)){throw new Error("The full History modal dialog object is not type of ModalDialog");
}this.m_fullHistoryModal=modal;
};
ChargesO1Component.prototype.getChargeHistoryMap=function(){if(!this.m_chargeHistoryMap){this.m_chargeHistoryMap={};
}return this.m_chargeHistoryMap;
};
ChargesO1Component.prototype.setChargeHistoryMap=function(map){if(map===null){throw new Error("The charges history map is null");
}this.m_chargeHistoryMap=map;
};
ChargesO1Component.prototype.getLocationMenuId=function(){return this.m_locationMenuId;
};
ChargesO1Component.prototype.setLocationMenuId=function(id){if(id===null||typeof id!=="string"){throw new Error("The Location id provided is either null or not of type String");
}this.m_locationMenuId=id;
};
ChargesO1Component.prototype.getLocationJSON=function(){return this.m_locationJSON;
};
ChargesO1Component.prototype.setLocationJSON=function(locJSON){if(locJSON===null||typeof locJSON!=="string"){throw new Error("The location JSON provided is either null or not type String");
}this.m_locationJSON=locJSON;
};
ChargesO1Component.prototype.getCPTCodesMap=function(){if(!this.cptCodesMap){this.cptCodesMap={};
}return this.cptCodesMap;
};
ChargesO1Component.prototype.getChargeHistoryArray=function(){if(!this.chargeHistory){this.chargeHistory=[];
}return this.chargeHistory;
};
ChargesO1Component.prototype.setChargeHistoryArray=function(obj){if(!(obj instanceof Array)){throw new Error("Charge History array is not of Array type");
}this.chargeHistory=obj;
};
ChargesO1Component.prototype.getRollingHistoryArray=function(){if(!this.rollingHistoryArray){this.rollingHistoryArray=[];
}return this.rollingHistoryArray;
};
ChargesO1Component.prototype.setRollingHistoryArray=function(array){if(!(array instanceof Array)){throw new Error("Rolling history array is not of Array type");
}this.rollingHistoryArray=array;
};
ChargesO1Component.prototype.getAssociatedConditionsObj=function(){if(!this.associatedConditionsObj){this.associatedConditionsObj=new this.ConditionsContainer();
}return this.associatedConditionsObj;
};
ChargesO1Component.prototype.getUnassociatedConditionsObj=function(){if(!this.unassociatedConditionsObj){this.unassociatedConditionsObj=new this.ConditionsContainer();
}return this.unassociatedConditionsObj;
};
ChargesO1Component.prototype.wasConditionsScriptCalled=function(){return this.conditionsScriptCalled;
};
ChargesO1Component.prototype.conditionsScriptWasCalled=function(flag){if(typeof flag!=="boolean"){throw new Error(" The condition script flag provided is not a boolean");
}this.conditionsScriptCalled=flag;
};
ChargesO1Component.prototype.getConditionsRetrievedStatus=function(){return this.conditionsRetrievedStatus;
};
ChargesO1Component.prototype.setConditionsRetrievedFlag=function(status){if(typeof status==="undefined"){throw new Error("The status of the Condition retrieval is undefined");
}this.conditionsRetrievedStatus=status;
};
ChargesO1Component.prototype.getConditionArray=function(){if(!this.conditionsArr){this.conditionsArr=[];
}return this.conditionsArr;
};
ChargesO1Component.prototype.setConditionArray=function(cArray){if(!cArray){this.conditionsArr=[];
}else{this.conditionsArr=cArray;
}};
ChargesO1Component.prototype.getServiceDate=function(){if(!this.selectedServiceDate){this.selectedServiceDate=new Date();
}return this.selectedServiceDate;
};
ChargesO1Component.prototype.setServiceDate=function(date){if(typeof date==="undefined"){throw new Error("Service Date is undefined");
}this.selectedServiceDate=date;
};
ChargesO1Component.prototype.setChargesTable=function(table){if(!ComponentTable.prototype.isPrototypeOf(table)){throw new Error("The Charges table object is not type of ComponentTable");
}this.chargesTable=table;
};
ChargesO1Component.prototype.setHistoryTable=function(table){if(!ComponentTable.prototype.isPrototypeOf(table)){throw new Error("The History table object is not type of ComponentTable");
}this.historyTable=table;
};
ChargesO1Component.prototype.getHistoryTable=function(){return this.historyTable;
};
ChargesO1Component.prototype.getChargesTable=function(){return this.chargesTable;
};
ChargesO1Component.prototype.isDiagnosisSelected=function(){return !this.getAssociatedConditionsObj().isEmpty();
};
ChargesO1Component.prototype.getEncntrTypeCd=function(){return this.m_encounterTypeCd;
};
ChargesO1Component.prototype.setEncntrTypeCd=function(encounterTypeCd){if(typeof encounterTypeCd!=="number"){throw new Error("Invalid encounter type code passed into 'setEncntrTypeCd'");
}this.m_encounterTypeCd=encounterTypeCd;
};
ChargesO1Component.prototype.getVisitTypeDefinitions=function(){return this.m_visitTypeDefinitions;
};
ChargesO1Component.prototype.setVisitTypeDefinitions=function(visitTypeDefinitions){this.m_visitTypeDefinitions=visitTypeDefinitions;
};
ChargesO1Component.prototype.getSpecialtyList=function(){return this.m_specialtyList;
};
ChargesO1Component.prototype.setSpecialtyList=function(specialtyList){this.m_specialtyList=specialtyList;
};
ChargesO1Component.prototype.getAssignedSpecialty=function(){return this.m_assignedSpecialty;
};
ChargesO1Component.prototype.setAssignedSpecialty=function(assignedSpecialty){if(typeof assignedSpecialty!=="string"){throw new Error("Invalid assignedSpecialty object passed");
}this.m_assignedSpecialty=assignedSpecialty;
};
ChargesO1Component.prototype.getCurrentCPTCode=function(){return this.cptCode;
};
ChargesO1Component.prototype.setCurrentCPTCode=function(code){if(typeof code==="undefined"){throw new Error("The CPT code passed is undefined");
}this.cptCode=code;
};
ChargesO1Component.prototype.getSelectedCodeObj=function(){return this.selectedCodeObj;
};
ChargesO1Component.prototype.setSelectedCodeObj=function(obj){if(typeof obj==="undefined"){throw new Error("The CPT code passed is undefined");
}this.selectedCodeObj=obj;
};
ChargesO1Component.prototype.setChargingJSON=function(input){if(typeof input==="undefined"){throw new Error("The input json passed is undefined");
}this.chargingJSON=input;
};
ChargesO1Component.prototype.getChargingJSON=function(){return this.chargingJSON;
};
ChargesO1Component.prototype.setCPTCodes=function(reply){if(typeof reply==="undefined"){throw new Error("The reply object passed is undefined");
}this.cptCodes=reply.getResponse().CPTINFO;
};
ChargesO1Component.getCPTCodes=function(){return this.cptCodes;
};
ChargesO1Component.prototype.getSelectedNoteEventId=function(){return this.m_selectdeNoteEventId;
};
ChargesO1Component.prototype.setSelectedNoteEventId=function(selectedNoteEventId){if(typeof selectedNoteEventId!=="number"||isNaN(selectedNoteEventId)){this.m_selectdeNoteEventId=0;
throw new Error("Invalid event id  into 'selectedNoteEventId'");
}this.m_selectdeNoteEventId=selectedNoteEventId;
};
ChargesO1Component.prototype.setIsnCodeServerRunning=function(isRunning){this.m_isnCodeServerRunning=isRunning;
};
ChargesO1Component.prototype.isnCodeServerRunning=function(){return this.m_isnCodeServerRunning;
};
ChargesO1Component.prototype.getSuggestedDiagnoses=function(){return this.m_suggestedDiagnoses;
};
ChargesO1Component.prototype.setSuggestedDiagnoses=function(diagnosesList){if(typeof diagnosesList==="undefined"){throw new Error("The diagnosesList passed is undefined");
}this.m_suggestedDiagnoses=diagnosesList;
};
ChargesO1Component.prototype.setSelectedVisitCPTRange=function(range){if(typeof range!=="object"){throw new Error("Invalid CPT range object");
}this.m_selectedVisitCPTRange=range;
};
ChargesO1Component.prototype.getSelectedVisitCPTRange=function(){return this.m_selectedVisitCPTRange;
};
ChargesO1Component.prototype.setPopupObj=function(popupObj){if(popupObj==="undefined"){throw new Error("Invalid pop up Object in Charges");
}this.m_popupObj=popupObj;
};
ChargesO1Component.prototype.getPopupObj=function(){return this.m_popupObj;
};
ChargesO1Component.prototype.setLocationPopupObj=function(popupObj){if(popupObj==="undefined"){throw new Error("Invalid pop up Object in Charges");
}this.m_locationPopupObj=popupObj;
};
ChargesO1Component.prototype.getLocationPopupObj=function(){return this.m_locationPopupObj;
};
ChargesO1Component.prototype.setProviderPopupObj=function(popupObj){if(popupObj==="undefined"){throw new Error("Invalid pop up Object in Charges");
}this.m_providerPopupObj=popupObj;
};
ChargesO1Component.prototype.getProviderPopupObj=function(){return this.m_providerPopupObj;
};
ChargesO1Component.prototype.preProcessing=function(){MPageComponent.prototype.preProcessing.call(this);
var self=this;
var userPrefs=this.getPreferencesObj();
if(userPrefs){var compMenu=this.getMenu();
var compID=this.getComponentId();
var menuId="specialty"+compID;
if(compMenu){var compMenuSpec=new MenuSelection(menuId);
compMenuSpec.setLabel(userPrefs);
compMenuSpec.setIsSelected(true);
compMenu.addMenuItem(compMenuSpec);
self.setAssignedSpecialty(userPrefs);
compMenuSpec.setClickFunction(function(clickEvent){clickEvent.id=menuId;
compMenu.removeMenuItem(compMenuSpec);
if(!compMenu.m_menuItemArr.length){$("#"+compMenu.getAnchorElementId()).addClass("opts-menu-empty");
}self.setAssignedSpecialty("");
self.setPreferencesObj(null);
self.savePreferences(true);
self.retrieveComponentData();
});
}}};
ChargesO1Component.prototype.postProcessing=function(){MPageComponent.prototype.postProcessing.call(this);
var compMenu=this.getMenu();
if(!this.isnCodeServerRunning()){if(compMenu&&compMenu.m_menuItemArr&&compMenu.m_menuItemArr.length){$("#"+compMenu.getAnchorElementId()).addClass("opts-menu-empty").unbind("click");
}}if(this.isnCodeServerRunning()){if(compMenu&&compMenu.m_menuItemArr&&compMenu.m_menuItemArr.length){if($("#"+compMenu.getAnchorElementId()).hasClass("opts-menu-empty")){$("#"+compMenu.getAnchorElementId()).removeClass("opts-menu-empty").click(function(){MP_MenuManager.showMenu(compMenu.getAnchorElementId());
});
}}}};
ChargesO1Component.prototype.RetrieveRequiredResources=function(){var criterion=this.getCriterion();
if(criterion.encntr_id===0){var errMsg="No encounters available for this patient";
this.finalizeComponent(MP_Util.HandleErrorResponse("charges",errMsg),"");
}else{this.retrieveComponentData();
}};
ChargesO1Component.prototype.resizeHistoryTable=function(){var compID=this.getComponentId();
var historyTable=this.getHistoryTable();
var jqHistoryModalBody;
var jqHistoryTable;
var modalBodyHeight;
var historyTableHdrHeight;
var marginHeight;
jqHistoryModalBody=$("#"+compID+"FullHistoryModalbody");
if(jqHistoryModalBody.length&&historyTable){modalBodyHeight=jqHistoryModalBody.height();
jqHistoryTable=$("#"+compID+"Historytable");
marginHeight=jqHistoryTable.outerHeight(true)-jqHistoryTable.height();
historyTableHdrHeight=jqHistoryTable.find(".content-hdr").outerHeight(true);
jqHistoryTable.find(".content-body").css({"max-height":(modalBodyHeight-(historyTableHdrHeight+marginHeight))+"px","overflow-y":"auto","box-sizing":"border-box"});
historyTable.updateAfterResize();
}};
ChargesO1Component.prototype.resizeComponentBody=function(){if(!this.chargesSidePaneObj){return;
}var i;
var compID=this.getComponentId();
var leftContainer=$("#"+compID+"ContentContainer");
var leftContentHeight=0;
var sidePaneContainerHeight=parseInt(this.chargesSidePaneObj.getHeight().replace(/px$/,""));
var cptTableFiller=$("#"+compID+"CPTTableFiller");
cptTableFiller.css({display:"none",height:"0px"});
leftContentHeight+=leftContainer.outerHeight(true);
if(leftContentHeight<=this.MIN_SP_HEIGHT){cptTableFiller.height(this.MIN_SP_HEIGHT-leftContentHeight);
if(sidePaneContainerHeight>=this.MIN_SP_HEIGHT){this.chargesSidePaneObj.resizePanel();
}this.chargesSidePaneObj.setHeight(this.MIN_SP_HEIGHT+"px");
}else{if(leftContentHeight>this.MIN_SP_HEIGHT){this.chargesSidePaneObj.resizePanel();
this.chargesSidePaneObj.setHeight(leftContentHeight+"px");
}}cptTableFiller.css("display","block");
if(!this.m_isCPTSubmitted){this.chargesSidePaneObj.expandSidePanel();
}};
ChargesO1Component.prototype.resizeComponent=function(){var compID=this.getComponentId();
var calcHeight="";
var compHeight=0;
var compDOMObj=null;
var viewContainer=null;
var leftContainerChildren;
var leftContentHeight=0;
var contentBodyObj=null;
var contentBodyHeight=0;
var leftContentBodyObj=null;
var miscHeight=20;
var viewHeight=0;
var totalChildrensInLC;
var parsedcalcHeight=0;
var parsedMinHeight=0;
viewContainer=$("#vwpBody");
if(!viewContainer.length){return;
}viewHeight=viewContainer.height();
compDOMObj=$("#"+this.getStyles().getId());
if(!compDOMObj.length){return;
}contentBodyObj=compDOMObj.find("#"+compID+"Container");
leftContentBodyObj=compDOMObj.find("#"+compID+"ContentContainer");
if(contentBodyObj.length){compHeight=compDOMObj.height();
contentBodyHeight+=contentBodyObj.outerHeight(true);
calcHeight=(viewHeight-(compHeight-contentBodyHeight+miscHeight))+"px";
leftContentBodyObj.css("max-height",calcHeight).css("overflow-y","auto");
leftContentBodyHeight=leftContentBodyObj.outerHeight(true);
parsedcalcHeight=parseInt(calcHeight.replace(/px$/,""));
parseSidePaneHeight=parseInt(this.chargesSidePaneObj.getHeight().replace(/px$/,""));
}this.resizeHistoryTable();
};
ChargesO1Component.prototype.onRowClick=function(event,data){var compID=this.getComponentId();
var self=this;
var selRow=$(event.currentTarget);
var rowId=this.getRowId(selRow);
var visitType=$("#"+compID+"ChargeTypeDropDown option:selected").attr("cdf_meaning");
self.setVisitTypeCDFMeaning(visitType);
self.setModifiedLocationId(0);
self.setLocationPopupObj(null);
self.setModifiedProviderId(0);
self.setProviderPopupObj(null);
if(!selRow.length||data.RESULT_DATA===null){return;
}if(this.m_isCPTSubmitted){this.m_isCPTSubmitted=false;
}if(rowId==this.lastSelectedRow){this.removeSelRowBgColor();
this.lastSelectedRow=null;
this.setSelectedCodeObj(null);
this.setCurrentCPTCode(null);
this.renderDefaultPPInitialView();
this.resizeComponentBody();
}else{this.updateInfo(selRow);
this.setSelectedCodeObj(data.RESULT_DATA);
this.setCurrentCPTCode(data.RESULT_DATA.CPT||"");
if(!this.wasConditionsScriptCalled()){this.fetchConditions(function(){self.setLevelOfServiceFromCPTCode(parseInt(self.getCurrentCPTCode()));
self.renderDefaultPPInteractiveView();
self.getNcodeRecommendations();
self.resizeComponentBody();
});
}else{if(this.getConditionsRetrievedStatus()){self.setLevelOfServiceFromCPTCode(parseInt(self.getCurrentCPTCode()));
self.renderDefaultPPInteractiveView();
self.getNcodeRecommendations();
self.resizeComponentBody();
}}}};
ChargesO1Component.prototype.attachListeners=function(){var compID=this.getComponentId();
var userPrefs=this.getPreferencesObj();
var that=this;
var dropDownId=compID+"ChargeTypeDropDown";
$("#"+dropDownId).change(function(){var dropDownValue=$(this).val();
that.refreshChargeTable(dropDownValue);
});
$("#"+compID+"addNote").click(function(){that.openMyNotes();
});
if(that.isnCodeServerRunning()){if(!userPrefs){$("#"+compID+"SpecialtyBanner").show();
}else{$("#"+compID+"SpecialtyBanner").hide();
}}else{$("#"+compID+"SpecialtyBanner").hide();
}$("#ChargeSpecialtyDropDown").on("change",function(){var specialtyDropDownId=document.getElementById("ChargeSpecialtyDropDown");
if(specialtyDropDownId&&specialtyDropDownId.selectedIndex>0){document.getElementById("specialtyAssignBtn"+compID).disabled=false;
if($("#specialtyAssignBtn"+compID).hasClass("charges-o1-specialty-assign-btn-disable")){$("#specialtyAssignBtn"+compID).removeClass("charges-o1-specialty-assign-btn-disable");
$("#specialtyAssignBtn"+compID).addClass("charges-o1-specialty-assign-button");
}$("#specialtyAssignBtn"+compID).focus();
}else{if(specialtyDropDownId&&specialtyDropDownId.selectedIndex===0){document.getElementById("specialtyAssignBtn"+compID).disabled=true;
if($("#specialtyAssignBtn"+compID).hasClass("charges-o1-specialty-assign-button")){$("#specialtyAssignBtn"+compID).removeClass("charges-o1-specialty-assign-button");
$("#specialtyAssignBtn"+compID).addClass("charges-o1-specialty-assign-btn-disable");
}}}});
if(document.getElementById("specialtyAssignBtn"+compID)){document.getElementById("specialtyAssignBtn"+compID).disabled=true;
}};
ChargesO1Component.prototype.toggleButtons=function(){var compID=this.getComponentId();
if(this.isDiagnosisSelected()&&this.getCurrentCPTCode()){$("#"+compID+"RPSubmitBtn").removeClass("disabled");
}};
ChargesO1Component.prototype.grabTableCPTCodes=function(){var json=this.getJSON();
var charges=json.CHARGES;
var cLen=charges.length;
var i;
var cpts=this.getCPTCodesMap();
for(i=0;
i<cLen;
i++){var info=charges[i].CPT_INFO;
var j;
var iLen=info.length;
for(j=0;
j<iLen;
j++){var obj=info[j];
cpts[obj.CPT]={indexCharge:i,indexItem:j};
}}};
ChargesO1Component.prototype.refreshChargeTable=function(chargeValue){var compID=this.getComponentId();
var self=this;
var tempTable=this.getChargesTable();
var chargeJSON=this.getChargingJSON();
var hasSub=false;
var charges=chargeJSON.CHARGES[chargeValue];
var info=charges.CPT_INFO;
var need=charges.NEED;
var cptRange={};
if(info){cptRange={start:charges.CPT_INFO[0].CPT,end:charges.CPT_INFO[charges.CPT_INFO.length-1].CPT};
}this.setSelectedVisitCPTRange(cptRange);
$("#"+compID+"DefaultCPTtable").remove();
if(info&&info.length){var tmp=info[0];
hasSub=(!!tmp.Sub_Category);
}tempTable.clearGroups();
tempTable.bindData(info);
if(hasSub){tempTable.quickGroup("Sub_Category","<span>${Sub_Category}</span>",false);
}this.updateCPTInstructions((need)?need+" criteria required":"");
if(!($("#"+this.getStyles().getNameSpace()+compID+"table").length)){$("#"+compID+"VisitTypeDefaultOption").remove();
$("#"+compID+"CPTTableContainer").html(tempTable.render());
tempTable.finalize();
$("#"+this.getStyles().getNameSpace()+compID+"tableBody").on("mouseup",".result-info",function(event){var resData=ComponentTableDataRetriever.getResultFromTable(self.getChargesTable(),this);
var d={RESULT_DATA:resData,SOURCE:"ROW_CLICK"};
self.onRowClick(event,d);
});
}else{tempTable.refresh();
}this.resizeComponentBody();
};
ChargesO1Component.prototype.convertDateToMMDDYYYY=function(dttm){if(!dttm){return;
}var dateStr;
var df=MP_Util.GetDateFormatter();
dateStr=df.format(dttm,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
return dateStr;
};
ChargesO1Component.prototype.getDateForCCL=function(dt){if(!dt){return;
}var strDate="";
strDate+=((dt.getMonth()+1)<10)?"0"+(dt.getMonth()+1):""+(dt.getMonth()+1);
strDate+=(dt.getDate()<10)?"0"+dt.getDate():""+dt.getDate();
strDate+=dt.getFullYear();
return strDate;
};
ChargesO1Component.prototype.convertToRollingHistoryDateFormat=function(dttm){if(!dttm){return;
}var dd=dttm.getDate();
var mmm=dttm.getMonth();
switch(mmm){case 0:mmm=i18n.discernabu.charges_o1.JAN;
break;
case 1:mmm=i18n.discernabu.charges_o1.FEB;
break;
case 2:mmm=i18n.discernabu.charges_o1.MAR;
break;
case 3:mmm=i18n.discernabu.charges_o1.APR;
break;
case 4:mmm=i18n.discernabu.charges_o1.MAY;
break;
case 5:mmm=i18n.discernabu.charges_o1.JUNE;
break;
case 6:mmm=i18n.discernabu.charges_o1.JULY;
break;
case 7:mmm=i18n.discernabu.charges_o1.AUG;
break;
case 8:mmm=i18n.discernabu.charges_o1.SEP;
break;
case 9:mmm=i18n.discernabu.charges_o1.OCT;
break;
case 10:mmm=i18n.discernabu.charges_o1.NOV;
break;
case 11:mmm=i18n.discernabu.charges_o1.DEC;
break;
default:mmm=i18n.discernabu.charges_o1.MONTH;
}return mmm+" "+dd;
};
ChargesO1Component.prototype.getDateString=function(dt){if(!dt){return"";
}var dd=dt.getDate();
var yyyy=dt.getFullYear();
var mm=dt.getMonth();
switch(mm){case 0:mm="January";
break;
case 1:mm="February";
break;
case 2:mm="March";
break;
case 3:mm="April";
break;
case 4:mm="May";
break;
case 5:mm="June";
break;
case 6:mm="July";
break;
case 7:mm="August";
break;
case 8:mm="September";
break;
case 9:mm="October";
break;
case 10:mm="November";
break;
case 11:mm="December";
break;
default:mm="Month";
}return(mm+" "+dd+", "+yyyy);
};
ChargesO1Component.prototype.refreshEditableSection=function(){$("#"+this.getComponentId()+"RPEditableSection").html(this.buildPPEditableSectionHTML());
};
ChargesO1Component.prototype.refreshDiagnosesSection=function(){$("#"+this.getComponentId()+"RPDiagnosesSection").html(this.buildPPDiagnosesSectionHTML());
};
ChargesO1Component.prototype.renderHistoricalPPView=function(historicalItem){var compID=this.getComponentId();
var htmlAction=[];
htmlAction.push("<div class='charges-o1-rp-btn-cont'>");
htmlAction.push("<input id='"+compID+"RPNewBtn' type='button' class='charges-o1-rp-button' value='"+i18n.discernabu.charges_o1.NEW_CHARGE+"' />");
htmlAction.push("</div>");
if(!historicalItem){return;
}this.chargesSidePaneObj.setActionsAsHTML(htmlAction.join(""));
this.chargesSidePaneObj.setContents(this.buildPPHistoricalViewHTML(historicalItem),"chargesContent"+compID);
};
ChargesO1Component.prototype.renderDefaultPPInteractiveView=function(){var compID=this.getComponentId();
var html="";
var compDOMObj=$("#"+this.getStyles().getId());
var leftContentBodyObj=compDOMObj.find("#"+compID+"ContentContainer");
var leftContentHeight=$(leftContentBodyObj).outerHeight(true);
var htmlAction=[];
htmlAction.push("<div class='sp-action-holder'>");
htmlAction.push("<div class='sp-button2 disabled' id='"+compID+"RPSubmitBtn' >"+i18n.discernabu.charges_o1.SUBMIT+"</div>");
htmlAction.push("</div>");
this.chargesSidePaneObj.setActionsAsHTML(htmlAction.join(""));
this.getAssociatedConditionsObj().clearConditions();
this.populateUnassociatedConditionsArray();
html+=this.buildPPInteractiveViewHTML();
this.chargesSidePaneObj.setContents(html,"chargesContent"+compID);
this.bindUseThisNcodeAction();
this.toggleButtons();
this.setSelectedModifier(0);
this.setPopupObj(null);
this.addModifier();
this.bindModifierPopupClick();
};
ChargesO1Component.prototype.bindModifierPopupClick=function(){var self=this;
var compId=self.getComponentId();
var $modifierValue=$("#"+compId+"modifierValue");
var popupTimerObj=null;
var popupObject=self.getPopupObj();
$modifierValue.on("click",function(){popupObject.toggle();
popupObject.setBodyContent(self.getModifiersContent());
var modiersMenuItemDOM=$("#modifiersMenuItems"+compId);
modiersMenuItemDOM.unbind("click");
modiersMenuItemDOM.on("click",".charges-o1-modifier-menu-item",function(event){var curSelectedModifier=$(this).data("modifier-value");
var lastSelectedModifier=self.getSelectedModifier();
self.setSelectedModifier((curSelectedModifier==lastSelectedModifier)?0:curSelectedModifier);
if(popupObject.isOpen()){popupObject.hide();
}});
modiersMenuItemDOM.unbind("mouseleave");
modiersMenuItemDOM.on("mouseleave",function(event){if(popupObject.isOpen()){popupObject.hide();
}});
modiersMenuItemDOM.unbind("mouseenter");
modiersMenuItemDOM.on("mouseenter",function(event){if(popupTimerObj!==null){window.clearTimeout(popupTimerObj);
}});
function hidePopup(){if(self.getPopupObj()&&self.getPopupObj().isOpen()){popupObject.hide();
}}popupTimerObj=setTimeout(hidePopup,4000);
});
};
ChargesO1Component.prototype.renderDefaultPPInitialView=function(){var compID=this.getComponentId();
var compNS=this.getStyles().getNameSpace();
var html="";
var htmlAction=[];
htmlAction.push("<div class='sp-action-holder'>");
htmlAction.push("<div class='sp-button2 disabled' id='"+compID+"RPSubmitBtn' >"+i18n.discernabu.charges_o1.SUBMIT+"</div>");
htmlAction.push("</div>");
this.setCurrentCPTCode(null);
this.lastSelectedRow=null;
$("#"+this.getStyles().getId()).find(".charges-o1-row-selected").removeClass("charges-o1-row-selected selected");
html+=this.buildPPInitialViewlHTML();
this.chargesSidePaneObj.setActionsAsHTML(htmlAction.join(""));
this.chargesSidePaneObj.setContents(html,"chargesContent"+compID);
this.setSelectedModifier(0);
this.setPopupObj(null);
};
ChargesO1Component.prototype.loadSpinner=function(resultContainerID){if(resultContainerID&&typeof resultContainerID==="string"){var resultContainer=$("#"+resultContainerID);
var contentHeight=resultContainer.outerHeight();
var loadingIconTop=0;
resultContainer.append("<div class='loading-screen' style='height: "+contentHeight+"px; top: "+loadingIconTop+"px; '><div class='loading-spinner'>&nbsp;</div></div>");
}};
ChargesO1Component.prototype.fetchConditions=function(callback){var compID=this.getComponentId();
var self=this;
this.conditionsScriptWasCalled(true);
this.loadSpinner(compID+"Container");
this.cclGetConditions(function(reply){self.processConditions(reply);
self.clearSpinner(compID+"Container");
callback.apply(self);
self.chargesSidePaneObj.expandSidePanel();
});
};
ChargesO1Component.prototype.handleRollingHistoryCellClick=function(hasHistoricalCPT,historyObj){this.setServiceDate(historyObj.DATE_OBJ);
this.setModifiedLocationId(0);
this.setLocationPopupObj(null);
this.setModifiedProviderId(0);
this.setProviderPopupObj(null);
if(hasHistoricalCPT){this.removeSelRowBgColor();
this.lastSelectedRow=null;
this.setSelectedCodeObj(null);
this.setCurrentCPTCode(null);
this.renderHistoricalPPView(historyObj);
this.chargesSidePaneObj.collapseSidePanel();
}else{this.renderDefaultPPInitialView();
this.resizeComponentBody();
}};
ChargesO1Component.prototype.createHistoryTable=function(inputJSON){var compID=this.getComponentId();
var historyTable=new ComponentTable();
historyTable.setNamespace(compID+"History");
historyTable.setCustomClass("charges-o1-table charges-o1-history-table");
historyTable.setZebraStripe(true);
var svcDateHist=new TableColumn();
svcDateHist.setColumnId("svcDateHist");
svcDateHist.setCustomClass("charges-o1-fh-svc-date-col");
svcDateHist.setColumnDisplay(i18n.discernabu.charges_o1.SERVICE_DATE);
svcDateHist.setRenderTemplate("<span>${SVC_DATE} </span>");
svcDateHist.setIsSortable(true);
svcDateHist.setPrimarySortField("SERVICE_DATE");
var physHist=new TableColumn();
physHist.setColumnId("physHistory");
physHist.setCustomClass("charges-o1-fh-physician-col");
physHist.setColumnDisplay(i18n.discernabu.charges_o1.PROVIDER);
physHist.setRenderTemplate("<span>${PHYSICIAN_NAME} </span>");
physHist.setIsSortable(true);
physHist.setPrimarySortField("PHYSICIAN_NAME");
physHist.addSecondarySortField("SERVICE_DATE",TableColumn.SORT.DESCENDING);
var cptHist=new TableColumn();
cptHist.setColumnId("cptHistory");
cptHist.setCustomClass("charges-o1-fh-cpt-col");
cptHist.setColumnDisplay(i18n.discernabu.charges_o1.CPT_CODE);
cptHist.setRenderTemplate("<span>${CPT_CODE} </span>");
cptHist.setIsSortable(true);
cptHist.setPrimarySortField("CPT_CODE");
cptHist.addSecondarySortField("SERVICE_DATE",TableColumn.SORT.DESCENDING);
var priDiagHist=new TableColumn();
priDiagHist.setColumnId("priDiagHist");
priDiagHist.setCustomClass("charges-o1-fh-diag-col");
priDiagHist.setColumnDisplay(i18n.discernabu.charges_o1.PRIMARY_DIAGNOSIS);
priDiagHist.setRenderTemplate("<span>${PRIMARY_DIAG_STRING}</span>");
priDiagHist.setIsSortable(true);
priDiagHist.setPrimarySortField("PRIMARY_DIAG_STRING");
priDiagHist.addSecondarySortField("SERVICE_DATE",TableColumn.SORT.DESCENDING);
historyTable.addColumn(svcDateHist);
historyTable.addColumn(physHist);
historyTable.addColumn(cptHist);
historyTable.addColumn(priDiagHist);
historyTable.bindData(inputJSON);
historyTable.sortByColumnInDirection("svcDateHist",TableColumn.SORT.DESCENDING);
return historyTable;
};
ChargesO1Component.prototype.addChargesSidePanel=function(){var compID=this.getComponentId();
var panelID=compID+"SidePaneContainer";
var chargesSPObj=new CompSidePanel(compID,panelID);
chargesSPObj.setExpandOption(chargesSPObj.expandOption.EXPAND_DOWN);
chargesSPObj.renderPreBuiltSidePanel();
$("#sidePanelHeaderText"+compID).addClass("hidden");
$("#sidePanelActionBar"+compID).addClass("charges-o1-ation-bar");
chargesSPObj.setApplyBodyContentsPadding(true);
chargesSPObj.setContents(this.buildPPInitialViewlHTML(),"chargesContent"+compID);
chargesSPObj.setMaxHeight(this.MIN_SP_HEIGHT+"px");
this.chargesSidePaneObj=chargesSPObj;
this.addClickExpandCollapse();
};
ChargesO1Component.prototype.generateChargeTable=function(inputJSON){var chargeTableHTML="";
var that=this;
var chargeTable=new ComponentTable();
chargeTable.setNamespace(this.getStyles().getId());
chargeTable.setZebraStripe(true);
var chargeCPT=new TableColumn();
chargeCPT.setColumnId("chargeCPT");
chargeCPT.setCustomClass("charges-o1-column charges-o1-trans");
chargeCPT.setColumnDisplay(i18n.discernabu.charges_o1.CPT_CODE);
chargeCPT.setRenderTemplate("<span>${CPT} </span>");
var chargeHistory=new TableColumn();
chargeHistory.setColumnId("chargeHistory");
chargeHistory.setCustomClass("charges-o1-column charges-o1-trans");
chargeHistory.setColumnDisplay(i18n.discernabu.charges_o1.HISTORY);
chargeHistory.setRenderTemplate("<span>${HISTORY} </span>");
var chargeExam=new TableColumn();
chargeExam.setColumnId("chargeExam");
chargeExam.setCustomClass("charges-o1-column charges-o1-trans");
chargeExam.setColumnDisplay(i18n.discernabu.charges_o1.EXAM);
chargeExam.setRenderTemplate("<span>${EXAM} </span>");
var chargeDecision=new TableColumn();
chargeDecision.setColumnId("chargeDecision");
chargeDecision.setCustomClass("charges-o1-column charges-o1-trans");
chargeDecision.setColumnDisplay(i18n.discernabu.charges_o1.DECISION_MAKING);
chargeDecision.setRenderTemplate("<span>${DECISION_MAKING} </span>");
chargeTable.addColumn(chargeCPT);
chargeTable.addColumn(chargeHistory);
chargeTable.addColumn(chargeExam);
chargeTable.addColumn(chargeDecision);
chargeTable.bindData(inputJSON);
return chargeTable;
};
ChargesO1Component.prototype.getJSON=function(){var visitTypeDefnitionArr=this.getVisitTypeDefinitions();
var visitTypeDefnitionArrLen=visitTypeDefnitionArr.length;
var allowedVisits={CHARGES:[]};
for(var index=0;
index<visitTypeDefnitionArrLen;
index++){if(visitTypeDefnitionArr[index].ENC_TYPE===this.getEncntrTypeCd()||!visitTypeDefnitionArr[index].ENC_TYPE){allowedVisits.CHARGES.push(visitTypeDefnitionArr[index]);
}}return allowedVisits;
};
ChargesO1Component.prototype.updateSidePaneInvalidCPTAlert=function(showAlert){var jqWarnSection=$("#"+this.getComponentId()+"PPWarningSection");
var html="";
if(!showAlert){jqWarnSection.html(html);
return;
}html+="<div class='charges-o1-pp-error-section'>";
html+="<span class='charges-o1-alert-icon'></span>";
html+="<span class='charges-o1-alert-message'>";
html+="<span class='charges-o1-error-primary'>"+i18n.discernabu.charges_o1.CPT_CODE_ERROR_MESSAGE_PRIMARY+"</span>";
html+=i18n.discernabu.charges_o1.CPT_CODE_ERROR_MESSAGE;
html+="</span>";
html+="</div>";
jqWarnSection.html(html);
};
ChargesO1Component.prototype.updateSidePanePrimaryDiagnosisAlert=function(){var compID=this.getComponentId();
var associatedConditionsContainer=this.getAssociatedConditionsObj();
var condition;
var showDiagnosisWarning=false;
var html="";
if(associatedConditionsContainer.getLength()){condition=associatedConditionsContainer.getConditionIndexOf(0);
showDiagnosisWarning=this.isPrimaryForOtherUser(condition);
}if(!showDiagnosisWarning){$("#"+compID+"PPWarningSection").html("");
this.chargesSidePaneObj.collapseSidePanel();
this.chargesSidePaneObj.expandSidePanel();
return;
}html+="<div class='charges-o1-pp-warning-section'>";
html+="<span class='charges-o1-alert-icon'></span>";
html+="<span class='charges-o1-alert-message'>";
html+="&lt;"+i18n.discernabu.charges_o1.DIAGNOSIS_ALREADY_APPLIED+"&gt;";
html+="<a id='"+compID+"PriDiagShowHistory' class='charges-o1-show-history-link'>"+i18n.discernabu.charges_o1.SHOW_CHARGE_HISTORY+"</a>";
html+="</span>";
html+="</div>";
$("#"+compID+"PPWarningSection").html(html);
this.chargesSidePaneObj.collapseSidePanel();
this.chargesSidePaneObj.expandSidePanel();
};
ChargesO1Component.prototype.isPrimaryForOtherUser=function(obj){var chargeHistoryMap;
var serviceDate;
var dateFormatter=MP_Util.GetDateFormatter();
var serviceDateKey="";
var curDiagNomenId=0;
var charges=null;
var cLen=0;
var condition;
var diagnoses=null;
var diagnosis;
var dLen=0;
var providerID=this.getCriterion().provider_id;
var i;
var j;
if(!obj||!obj.CONDITION){return;
}condition=obj.CONDITION;
diagnoses=condition.DIAGNOSES;
if(!(diagnoses&&diagnoses.length)){return false;
}diagnosis=diagnoses[0];
curDiagNomenId=diagnosis.TARGET_NOMENCLATURE_ID;
serviceDate=this.getServiceDate();
if(!serviceDate){return;
}serviceDateKey=dateFormatter.format(serviceDate,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
chargeHistoryMap=this.getChargeHistoryMap();
if(!chargeHistoryMap||!chargeHistoryMap[serviceDateKey]){return;
}charges=chargeHistoryMap[serviceDateKey]||[];
for(i=0,cLen=charges.length;
i<cLen;
i++){var charge=charges[i];
if(providerID===charge.VERIFY_PHYS_ID){continue;
}diagnoses=charge.DIAGNOSES||[];
for(j=0,dLen=diagnoses.length;
j<dLen;
j++){var chargeDiagnosis=diagnoses[j];
if(chargeDiagnosis.INDEX!==1){continue;
}if(chargeDiagnosis.NOMEN_ID===curDiagNomenId){return true;
}}}return false;
};
ChargesO1Component.prototype.makeDiagnosisPrimary=function(jqElement){var id=jqElement.prop("id");
var isAssociated=jqElement.hasClass("charges-o1-rp-diag-assigned");
var associatedConditions=this.getAssociatedConditionsObj();
var unassociatedConditions=this.getUnassociatedConditionsObj();
var condition=null;
if(!isAssociated){condition=unassociatedConditions.removeConditionByHTMLId(id);
}else{condition=associatedConditions.removeConditionByHTMLId(id);
}if(!condition){return;
}associatedConditions.insertConditionAt(condition,0);
return condition;
};
ChargesO1Component.prototype.associateDiagnosis=function(jqElement){var id=jqElement.prop("id");
var associatedConditions=this.getAssociatedConditionsObj();
var unassociatedConditions=this.getUnassociatedConditionsObj();
var obj=unassociatedConditions.removeConditionByHTMLId(id);
associatedConditions.addCondition(obj);
associatedConditions.sortByPriority();
this.updateSidePanePrimaryDiagnosisAlert();
this.refreshDiagnosesSection();
this.toggleButtons();
};
ChargesO1Component.prototype.unassociateDiagnosis=function(jqElement){var id=jqElement.prop("id");
var associatedConditions=this.getAssociatedConditionsObj();
var unassociatedConditions=this.getUnassociatedConditionsObj();
var obj=associatedConditions.removeConditionByHTMLId(id);
unassociatedConditions.addCondition(obj);
unassociatedConditions.sortByIndex();
this.updateSidePanePrimaryDiagnosisAlert();
this.refreshDiagnosesSection();
this.toggleButtons();
};
ChargesO1Component.prototype.populateUnassociatedConditionsArray=function(){var conditions=this.getConditionArray();
if(!conditions){return;
}var unassociatedConditions=this.getUnassociatedConditionsObj();
unassociatedConditions.clearConditions();
var i;
var iLen=conditions.length;
for(i=0;
i<iLen;
i++){var condition=conditions[i];
var obj={};
obj.PRIORITY=0;
obj.HTML_ID=this.getComponentId()+"DiagRow"+i;
obj.INDEX=i;
obj.NOMEN_ID=condition.NOMENCLATURE_ID;
obj.TARGET_NOMENCLATURE_ID=condition.DIAGNOSES[0].TARGET_NOMENCLATURE_ID;
obj.CONDITION=condition;
unassociatedConditions.addCondition(obj);
}};
ChargesO1Component.prototype.convertHistoryMapToArray=function(){function calculateDaysDelta(pastDate,futureDate){return Math.floor((Date.parse(futureDate)-Date.parse(pastDate))/MS_IN_DAY);
}function getDateKey(dateObj){return dateFormatter.format(dateObj,fullDate4Year);
}var chargeHistoryMap=this.getChargeHistoryMap();
var chargeHistoryArray=[];
var dateFormatter=MP_Util.GetDateFormatter();
var fullDate4Year=mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR;
var MS_IN_DAY=86400000;
var workingDate;
var dateKey;
var startDate;
var endDate;
var numOfDays=0;
var i;
startDate=this.m_encounterStartDate;
endDate=new Date();
endDate.setHours(12,0,0,0);
numOfDays=calculateDaysDelta(startDate,endDate);
for(i=0;
i<=numOfDays;
i++){workingDate=new Date(Date.parse(startDate)+(i*MS_IN_DAY));
dateKey=getDateKey(workingDate);
if(!chargeHistoryMap[dateKey]){continue;
}var chMaplength=chargeHistoryMap[dateKey].length;
for(var chMapIndex=0;
chMapIndex<chMaplength;
chMapIndex++){if(!chargeHistoryMap[dateKey][chMapIndex].PHYSICIAN_NAME){var personnel=MP_Util.GetValueFromArray(chargeHistoryMap[dateKey][chMapIndex].VERIFY_PHYS_ID,this.m_prsnlList);
chargeHistoryMap[dateKey][chMapIndex].PHYSICIAN_NAME=personnel?personnel.fullName:"";
}}$.merge(chargeHistoryArray,chargeHistoryMap[dateKey]);
}if(dateKey!==getDateKey(new Date())){$.merge(chargeHistoryArray,chargeHistoryMap[getDateKey(new Date())]);
}return chargeHistoryArray;
};
ChargesO1Component.prototype.createHistoryModal=function(){var self=this;
var modalID=self.getComponentId()+"FullHistoryModal";
var modalDialog=new ModalDialog(modalID);
modalDialog.setHeaderTitle(i18n.discernabu.charges_o1.CHARGE_HISTORY);
modalDialog.setLeftMarginPercentage(20);
modalDialog.setRightMarginPercentage(20);
modalDialog.setHeaderCloseFunction(function(){MP_ModalDialog.closeModalDialog(modalID);
self.setShowChargeHistoryClicked(false);
});
MP_ModalDialog.addModalDialogObject(modalDialog);
return modalDialog;
};
ChargesO1Component.prototype.handleShowFullHistory=function(){var compID=this.getComponentId();
var chargeHistoryTable=this.getHistoryTable();
var modalDialog=this.getFullHistoryModal();
var html="";
if(!chargeHistoryTable){chargeHistoryTable=this.createHistoryTable(this.convertHistoryMapToArray());
}this.setHistoryTable(chargeHistoryTable);
html+="<div class='wf charges-o1-modal'>";
html+=chargeHistoryTable.render();
html+="</div>";
this.clearSpinner(compID+"FullHistoryModalbody");
modalDialog.setBodyHTML(html);
chargeHistoryTable.finalize();
this.resizeHistoryTable();
};
ChargesO1Component.prototype.processConditions=function(reply){var status=reply.getStatus();
this.setConditionsRetrievedFlag(status);
var response=reply.getResponse();
var data;
var conditionsJSON;
var conditionList=[];
var diagnosesList;
var diagnosis;
var dLen;
var j;
data=response.DATA;
if(!data){return;
}conditionsJSON=data.THIS_VISIT||[];
var cLen=conditionsJSON.length;
var i;
for(i=0;
i<cLen;
i++){diagnosesList=conditionsJSON[i].DIAGNOSES;
dLen=diagnosesList.length;
for(j=0;
j<dLen;
j++){diagnosis=diagnosesList[j];
if(this.isICDCode(diagnosis.TARGET_VOCAB_CD)){conditionsJSON[i].DIAGNOSES=[diagnosis];
conditionList.push(conditionsJSON[i]);
break;
}}}this.setConditionArray(conditionList);
};
ChargesO1Component.prototype.ConditionsContainer=function(){var conditionArray=null;
var removeConditionByField=function(value,field){var cArray=this.getConditions();
var counter;
var cLen=cArray.length;
var index=-1;
var obj=null;
if(cLen===0||(typeof cArray[0][field]==="undefined"||cArray[0][field]===null)){return;
}for(counter=0;
counter<cLen;
counter++){obj=cArray[counter];
if(index!==-1){obj.PRIORITY--;
}if(obj[field]===value){index=counter;
}}if(index===-1){return null;
}obj=cArray[index];
cArray.splice(index,1);
return obj;
};
var sortByField=function(field){var cArray=this.getConditions();
if(cArray.length<=1){return;
}var val=cArray[0][field];
if(val==="undefined"||val===null){return;
}cArray.sort(function(a,b){return a[field]-b[field];
});
};
return{getConditions:function(){if(!conditionArray){conditionArray=[];
}return conditionArray;
},getConditionIndexOf:function(index){var cArray=this.getConditions();
var cLen=cArray.length;
if(index<0||index>=cLen){return null;
}return cArray[index];
},isEmpty:function(){return(this.getLength()===0);
},getLength:function(){return this.getConditions().length;
},insertConditionAt:function(condition,indx){if(!condition){return;
}var conditions=this.getConditions();
var cLen=conditions.length;
var i;
if(indx>cLen){indx=cLen;
}condition.PRIORITY=indx+1;
for(i=indx;
i<cLen;
i++){conditions[i].PRIORITY+=1;
}conditions.splice(indx,0,condition);
},addCondition:function(condition){if(!condition){return;
}condition.PRIORITY=this.getConditions().length+1;
this.getConditions().push(condition);
},clearConditions:function(){conditionArray=[];
},removeConditionByHTMLId:function(value){return removeConditionByField.apply(this,[value,"HTML_ID"]);
},removeConditionByNomenId:function(value){return removeConditionByField.apply(this,[value,"NOMEN_ID"]);
},removeConditionByTargetNomenId:function(value){return removeConditionByField.apply(this,[value,"TARGET_NOMENCLATURE_ID"]);
},sortByIndex:function(){sortByField.apply(this,["INDEX"]);
},sortByPriority:function(){sortByField.apply(this,["PRIORITY"]);
}};
};
ChargesO1Component.prototype.isCPTCodeInTable=function(code){var cptCodes=this.getCPTCodesMap();
if(!cptCodes||cptCodes[code]===null||typeof cptCodes[code]==="undefined"){return false;
}return true;
};
ChargesO1Component.prototype.getRowIdByIndexObj=function(obj){var chargesObj=this.getJSON();
var cIndex=obj.indexCharge;
var iIndex=obj.indexItem;
var item=chargesObj.CHARGES[cIndex].CPT_INFO[iIndex];
var rowId="";
rowId+=this.getChargesTable().getNamespace()+"\\:";
if(item.Sub_Category){rowId+=item.Sub_Category.replace(/[\s]/ig,"_").replace(/[\W]/ig,"").toUpperCase()+"\\:";
}rowId+="row"+iIndex;
return rowId;
};
ChargesO1Component.prototype.cptInputTyping=function(jqElement,code){function numericFilter(jqInput){jqInput.val(jqInput.val().replace(/[^0-9]/ig,""));
}if(!jqElement.is("input")){return;
}numericFilter(jqElement);
if(code==32||code==13){if(!this.wasConditionsScriptCalled()){this.fetchConditions(function(){jqElement.blur();
});
this.bindUseThisNcodeAction();
}else{if(this.getConditionsRetrievedStatus()){jqElement.blur();
}}}};
ChargesO1Component.prototype.cptInputSubmit=function(jqElement){var compID=this.getComponentId();
if($("#"+compID+"modifierValue").html()==="&nbsp;"){this.setModifiedLocationId(0);
this.setLocationPopupObj(null);
this.setModifiedProviderId(0);
this.setProviderPopupObj(null);
}if(!this.getConditionsRetrievedStatus()){this.fetchConditions(function(){jqElement.blur();
});
return;
}jqElement.val(jqElement.val().replace(/[^0-9]/ig,""));
var inputText=jqElement.val();
var iLen=inputText.length;
jqElement.removeClass("charges-o1-focus");
if(iLen===5&&this.isCPTCodeInTable(inputText)){var indexObj=this.getCPTCodesMap()[inputText];
$("#"+compID+"ChargeTypeDropDown").val(indexObj.indexCharge);
this.refreshChargeTable(indexObj.indexCharge);
$("#"+this.getRowIdByIndexObj(indexObj)).addClass("charges-o1-row-selected selected");
this.lastSelectedRow=indexObj.indexItem;
this.setCurrentCPTCode(inputText);
this.renderDefaultPPInteractiveView();
this.updateSidePaneInvalidCPTAlert(false);
var visitType=$("#"+this.getComponentId()+"ChargeTypeDropDown option:selected").attr("cdf_meaning");
this.setVisitTypeCDFMeaning(visitType);
this.setLevelOfServiceFromCPTCode(parseInt(this.getCurrentCPTCode()));
this.getNcodeRecommendations();
this.toggleButtons();
this.bindUseThisNcodeAction();
}else{this.setModifiedLocationId(0);
this.setLocationPopupObj(null);
this.setModifiedProviderId(0);
this.setProviderPopupObj(null);
this.lastSelectedRow=null;
this.setCurrentCPTCode(null);
$("#"+compID).find(".charges-o1-row-selected").removeClass("charges-o1-row-selected selected");
this.renderDefaultPPInitialView();
this.updateSidePaneInvalidCPTAlert(true);
this.toggleButtons();
}this.chargesSidePaneObj.expandSidePanel();
};
ChargesO1Component.prototype.updateCPTInstructions=function(text){var html="";
if(text){html+="<div class='charges-o1-instruction-lbl-container'>";
html+="<span class='charges-o1-instruction-line-left'>&nbsp;</span>";
html+="<span class='charges-o1-instruction-line-lbl'>"+text+"</span>";
html+="<span class='charges-o1-instruction-line-right'>&nbsp;</span>";
html+="</div>";
}else{html+="&nbsp;";
}$("#"+this.getComponentId()+"CPTTableInstructions").find(".charges-o1-cpt-table-header-instructions").html(html);
};
ChargesO1Component.prototype.getRowId=function(rowObj){var rowId="";
var identifiers=$(rowObj).attr("id").split(":");
identifiers.splice(0,1);
rowId=identifiers.join(":");
return rowId;
};
ChargesO1Component.prototype.updateSelRowBgColor=function(selRowObj){this.removeSelRowBgColor();
$(selRowObj).addClass("charges-o1-row-selected");
};
ChargesO1Component.prototype.removeSelRowBgColor=function(){var tableViewObj=$("#charges"+this.getComponentId()+"table");
var prevRow=tableViewObj.find(".charges-o1-row-selected");
prevRow.removeClass("charges-o1-row-selected");
prevRow.removeClass("charges-o1-row-selected-init");
};
ChargesO1Component.prototype.updateInfo=function(selRow){var rowId=this.getRowId(selRow);
this.updateSelRowBgColor(selRow);
this.lastSelectedRow=rowId;
};
ChargesO1Component.prototype.renderCPTInput=function(jqElement){var compID=this.getComponentId();
var text=jqElement.text();
text=text.replace(/[^0-9]/ig,"");
html="<input id='"+compID+"CPTInput' class='charges-o1-focus' type='text' maxLength='5' size='5' value='"+text+"' />";
jqElement.closest(".charges-o1-rp-cpt-val-cont").html(html);
$("#"+compID+"CPTInput").focus();
};
ChargesO1Component.prototype.bindSidePaneActions=function(){var compID=this.getComponentId();
var self=this;
function routeTask(event){if(!event){return;
}var jqSrcElement=$(event.target);
var jqTarget=$(event.currentTarget);
var type=event.type;
var code=event.keyCode;
if(type==="click"&&jqSrcElement.prop("id")===compID+"RPModifyBtn"&&!jqSrcElement.is(":disabled")){}else{if(type==="change"&&jqTarget.hasClass("charges-o1-rp-diag-unassigned")){self.associateDiagnosis(jqTarget);
}else{if(type==="change"&&jqTarget.hasClass("charges-o1-rp-diag-assigned")){self.unassociateDiagnosis(jqTarget);
if(self.getAssociatedConditionsObj().getLength()===0){$("#"+compID+"RPSubmitBtn").addClass("disabled");
}}else{if(type==="click"&&jqSrcElement.hasClass("charges-o1-rp-cpt-val")){self.renderCPTInput(jqSrcElement);
}else{if(type==="keyup"&&jqTarget.prop("id")===compID+"CPTInput"){self.cptInputTyping(jqTarget,code);
}else{if(type==="focusout"&&jqTarget.prop("id")===compID+"CPTInput"){self.cptInputSubmit(jqTarget);
}else{if(type==="click"&&jqTarget.prop("id")===compID+"ToggleHistoricalTable"){self.setShowChargeHistoryClicked(true);
var modalDialog=self.getFullHistoryModal();
if(!modalDialog){modalDialog=self.createHistoryModal();
self.setFullHistoryModal(modalDialog);
}MP_ModalDialog.showModalDialog(modalDialog.getId());
$("#"+modalDialog.getBodyElementId()).addClass("charges-o1-history-modal-body");
self.loadSpinner(modalDialog.getBodyElementId());
self.fetchFullChargeHistory();
}else{if(type==="click"&&jqSrcElement.hasClass("charges-o1-diag-secondary")){self.makeDiagnosisPrimary(jqSrcElement.parent().parent());
self.refreshDiagnosesSection();
self.updateSidePanePrimaryDiagnosisAlert();
self.toggleButtons();
}else{if(type==="click"&&jqSrcElement.hasClass("charges-o1-show-history-link")){var modalDialog=self.getFullHistoryModal();
if(!modalDialog){modalDialog=self.createHistoryModal();
self.setFullHistoryModal(modalDialog);
}MP_ModalDialog.showModalDialog(modalDialog.getId());
$("#"+modalDialog.getBodyElementId()).addClass("charges-o1-history-modal-body");
self.loadSpinner(modalDialog.getBodyElementId());
self.fetchFullChargeHistory();
}}}}}}}}}}var jqPP=$("#"+compID+"SidePaneContainer");
jqPP.on("click",".charges-o1-rp-mod-root-cont",function(event){routeTask(event);
});
jqPP.on("blur","input",function(event){routeTask(event);
});
jqPP.on("keyup","input",function(event){routeTask(event);
});
jqPP.on("change",".charges-o1-rp-diag-unassigned",function(event){routeTask(event);
});
jqPP.on("change",".charges-o1-rp-diag-assigned",function(event){routeTask(event);
});
jqPP.on("click","#"+compID+"modifierValue",function(event){routeTask(event);
});
var jqHistoryContainer=$("#"+compID+"HistoryContainer");
jqHistoryContainer.on("click","#"+compID+"ToggleHistoricalTable",function(event){routeTask(event);
});
jqPP.on("click","#"+compID+"providerName",function(){self.modifyProvider();
});
jqPP.on("click","#"+compID+"locationName",function(){self.modifyLocation();
});
};
ChargesO1Component.prototype.getSelectedModifier=function(){return this.m_selectedModifier;
};
ChargesO1Component.prototype.setSelectedModifier=function(selectedModifier){var self=this;
var $modifierValue=$("#"+this.getComponentId()+"modifierValue");
if(typeof selectedModifier==="undefined"||selectedModifier===null){this.m_selectedModifier=0;
$modifierValue.html("--");
throw new Error("Invalid selectedModifier passed to 'setSelectedModifier'");
}this.m_selectedModifier=selectedModifier;
$modifierValue.html((selectedModifier===0)?self.getCurrentCPTCode()===null?"&nbsp;":"--":selectedModifier);
};
ChargesO1Component.prototype.addModifier=function(){var self=this;
var compId=self.getComponentId();
var modifiersPopup=null;
var chargesi18n=i18n.discernabu.charges_o1;
var chargesAddModifierTimer=new CapabilityTimer("CAP:MPG_Charges-o1_Add_Modifier",self.getCriterion().category_mean);
if(chargesAddModifierTimer){chargesAddModifierTimer.capture();
}modifiersPopup=new MPageUI.Popup();
self.setPopupObj(modifiersPopup);
modifiersPopup.setHeader(chargesi18n.ADD_MODIFIER);
modifiersPopup.setAnchorId(compId+"modifierValue");
modifiersPopup.setWidth(MPageUI.POPUP_OPTIONS.WIDTH.MEDIUM);
modifiersPopup.setPosition(MPageUI.POPUP_OPTIONS.POSITION.BOTTOM_RIGHT);
modifiersPopup.setBodyContent(self.getModifiersContent());
};
ChargesO1Component.prototype.getModifiersContent=function(){var self=this;
var compId=self.getComponentId();
var modifiersMenuHtml="";
var chargesi18n=i18n.discernabu.charges_o1;
var lastSelectedModifier=self.getSelectedModifier();
var modifiersArray=[{VALUE:24,DESCRIPTION:chargesi18n.UNRELATED_E_M_SERVICE_MODIFIER},{VALUE:25,DESCRIPTION:chargesi18n.SIGNIFICANT_MODIFIER},{VALUE:57,DESCRIPTION:chargesi18n.DECISION_FOR_SURGERY_MODIFIER},{VALUE:"GC",DESCRIPTION:"GC- "+chargesi18n.RESIDENT_INVOLVEMENT},{VALUE:"AI",DESCRIPTION:"AI- "+chargesi18n.ADMITTING_SERVICE}];
modifiersMenuHtml="<div id='modifiersMenuItems"+compId+"'>";
for(var index=0;
index<modifiersArray.length;
index++){var modifier=modifiersArray[index];
var modifierValue=modifier.VALUE;
var selectedClass=(lastSelectedModifier==modifierValue)?"selected":"";
modifiersMenuHtml+="<div class='charges-o1-modifier-menu-item' data-modifier-value ='"+modifierValue+"'><span class='charges-o1-modifier-menu-selection "+selectedClass+"'>&nbsp;</span><span class='charges-o1-modifier-description'>"+modifier.DESCRIPTION+"</span></div>";
}modifiersMenuHtml+="</div>";
return modifiersMenuHtml;
};
ChargesO1Component.prototype.modifyProvider=function(){var component=this;
var compId=component.getComponentId();
var providersMenuId=compId+"providersMenu";
var providersMenu=component.getProviderPopupObj();
var chargesi18n=i18n.discernabu.charges_o1;
var timeControl=null;
var chargesModifyProviderTimer=new CapabilityTimer("CAP:MPG_Charges-o1_Modify_Provider",component.getCriterion().category_mean);
if(chargesModifyProviderTimer){chargesModifyProviderTimer.capture();
}if(!providersMenu){providersMenu=new MPageUI.Popup();
component.setProviderPopupObj(providersMenu);
providersMenu.setAnchorId(compId+"providerName");
providersMenu.setPosition(MPageUI.POPUP_OPTIONS.POSITION.BOTTOM_RIGHT);
providersMenu.setHeader(chargesi18n.MODIFY_PROVIDER);
providersMenu.setWidth(242);
}providersMenu.setBodyContent("<div id='providersMenuItems"+compId+"' class='section charges-o1-providers-menu'><div id='autosearch-"+compId+"' class='charges-o1-search'>"+MP_Util.CreateAutoSuggestBoxHtml(component)+"</div></div>");
providersMenu.show();
timeControl=setTimeout(function(){if(component.getProviderPopupObj()&&component.getProviderPopupObj().isOpen()){component.getProviderPopupObj().hide();
}},4000);
$("#providersMenuItems"+compId).unbind("mouseenter");
$("#providersMenuItems"+compId).on("mouseenter",function(){if(component.getProviderPopupObj()&&component.getProviderPopupObj().isOpen()){clearInterval(timeControl);
}});
$("#providersMenuItems"+compId).unbind("mouseleave");
$("#providersMenuItems"+compId).on("mouseleave",function(){if(component.getProviderPopupObj()&&component.getProviderPopupObj().isOpen()){component.getProviderPopupObj().hide();
}});
MP_Util.AddAutoSuggestControl(component,component.searchProviders,component.handleSelection,component.createSuggestionLine);
if(component.getProviderPopupObj().isOpen()){$(".charges-o1-search .search-box").focus();
}};
ChargesO1Component.prototype.searchProviders=function(callback,textBox,component){try{var compID=component.getComponentId();
var compNS=component.getStyles().getNameSpace();
var criterion=component.getCriterion();
var searchText=textBox.value.replace(/(^\s+|\s+$)/g,"");
var organizationId=this.component.getOrganizationId();
if(searchText.length<3){return;
}var splittedName=searchText.split(",");
var lastName=splittedName[0];
var firstName=splittedName.length>1?splittedName[1]:"";
var request=new ScriptRequest();
request.setName("Charges Providers Request");
request.setProgramName("MP_GET_CHARGES_PERSONAL_INFO");
request.setParameterArray(["^MINE^",criterion.provider_id+".00","^"+lastName+"^","^"+firstName+"^",5,1,organizationId+".00"]);
request.setAsyncIndicator(true);
request.setResponseHandler(function(scriptReply){if(scriptReply.getStatus()==="S"){var recordData=scriptReply.getResponse();
callback.autosuggest(recordData.PRSNL);
}});
request.performRequest();
}catch(err){MP_Util.LogJSError(err,component,"charges-o1.js","searchProviders");
}};
ChargesO1Component.prototype.handleSelection=function(suggestionObj,textBox,component){if(!suggestionObj){return;
}var providerName=suggestionObj.NAME_FULL_FORMATTED;
var providerId=suggestionObj.PERSON_ID;
var self=this;
if(providerName&&providerId){this.component.setModifiedProviderId(providerId);
$("#"+this.component.getComponentId()+"providerName").html(providerName);
setTimeout(function(){self.component.getProviderPopupObj().hide();
},200);
}};
ChargesO1Component.prototype.createSuggestionLine=function(suggestionObj,searchVal){return this.component.highlightValue(suggestionObj.NAME_FULL_FORMATTED,searchVal);
};
ChargesO1Component.prototype.highlightValue=function(inString,term){return"<strong >"+inString.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)("+term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi,"\\$1").split(" ").join("|")+")(?![^<>]*>)(?![^&;]+;)","gi"),"</strong><strong class='charges-o1-highlight'>$1</strong><strong>")+"</strong>";
};
ChargesO1Component.prototype.modifyLocation=function(){var self=this;
var compId=self.getComponentId();
var locationMenuId=compId+"locationName";
var locationMenu=self.getLocationPopupObj();
var chargesi18n=i18n.discernabu.charges_o1;
var chargesModifyLocationTimer=new CapabilityTimer("CAP:MPG_Charges-o1_Modify_Location",self.getCriterion().category_mean);
if(chargesModifyLocationTimer){chargesModifyLocationTimer.capture();
}if(!locationMenu){locationMenu=new MPageUI.Popup();
self.setLocationPopupObj(locationMenu);
locationMenu.setAnchorId(locationMenuId);
locationMenu.setPosition(MPageUI.POPUP_OPTIONS.POSITION.BOTTOM_RIGHT);
locationMenu.setHeader(chargesi18n.MODIFY_LOCATION);
locationMenu.setWidth(MPageUI.POPUP_OPTIONS.WIDTH.SMALL);
}var locationPopupContent=self.getLocationContent();
locationMenu.setBodyContent(locationPopupContent);
locationMenu.toggle();
$("#locationMenuItems"+compId).unbind("click");
$("#locationMenuItems"+compId).on("click",".charges-o1-location-menu-item",function(event){var currentSelectedLocationId=$(this).data("location-value");
var currentSelectedLocationDesc=$(this).data("location-description");
var previousSelectedLocationId=0;
if(self.getModifiedLocationId()){previousSelectedLocationId=self.getModifiedLocationId();
}else{if(self.getDefaultLocationSettings()){previousSelectedLocationId=self.getDefaultLocationSettings().LOCATION_CD;
}}if(currentSelectedLocationId&&currentSelectedLocationDesc){var $locationValue=$("#"+compId+"locationName");
if(previousSelectedLocationId===currentSelectedLocationId){self.setModifiedLocationId(-1);
$locationValue.html("--");
}else{self.setModifiedLocationId(currentSelectedLocationId);
$locationValue.html(currentSelectedLocationDesc);
}}locationMenu.toggle();
});
var timeControl=setTimeout(function(){if(self.getLocationPopupObj()&&self.getLocationPopupObj().isOpen()){self.getLocationPopupObj().hide();
}},4000);
$("#locationMenuItems"+compId).unbind("mouseenter");
$("#locationMenuItems"+compId).on("mouseenter",function(){if(self.getLocationPopupObj()&&self.getLocationPopupObj().isOpen()){clearInterval(timeControl);
}});
$("#locationMenuItems"+compId).unbind("mouseleave");
$("#locationMenuItems"+compId).on("mouseleave",function(){if(self.getLocationPopupObj()&&self.getLocationPopupObj().isOpen()){self.getLocationPopupObj().hide();
}});
};
ChargesO1Component.prototype.getLocationContent=function(){var self=this;
var compId=self.getComponentId();
var locationMenuHtml="";
var patientLocationsArray=self.getPatientLocations();
var patientLocationsArrayLength=(patientLocationsArray&&patientLocationsArray.length)?patientLocationsArray.length:0;
var previousSelectedLocationId=0;
if(self.getModifiedLocationId()){previousSelectedLocationId=self.getModifiedLocationId();
}else{if(self.getDefaultLocationSettings()){previousSelectedLocationId=self.getDefaultLocationSettings().LOCATION_CD;
}}locationMenuHtml="<div id='locationMenuItems"+compId+"' class='charges-o1-location-menu-main-div'>";
for(var index=0;
index<patientLocationsArrayLength;
index++){var locationId=patientLocationsArray[index].LOCATION_ID;
var locationDisplay=(patientLocationsArray[index].LOCATION_DISPLAY).replace(/(^\s+|\s+$)/g,"");
locationDisplay=locationDisplay.replace(/'/g,"&#39;");
var selectedClass=(previousSelectedLocationId===locationId)?"selected":"";
if(locationId&&locationDisplay){locationMenuHtml+="<div class='charges-o1-location-menu-item' data-location-value ='"+locationId+"' data-location-description ='"+locationDisplay+"'><span class='charges-o1-location-menu-selection "+selectedClass+"'>&nbsp;</span><span class='charges-o1-location-description'>"+locationDisplay+"</span></div>";
}}locationMenuHtml+="</div>";
return locationMenuHtml;
};
ChargesO1Component.prototype.fetchFullChargeHistory=function(){var self=this;
var MS_IN_DAY=86400000;
var dateFormatter=MP_Util.GetDateFormatter();
var fullDate4Year=mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR;
var chargeHistoryMap=this.getChargeHistoryMap();
var dateKey;
var currentDate=new Date();
var encntrStartDate=this.m_encounterStartDate;
var workingDate=null;
var cclStartDate=null;
var cclEndDate=null;
function showFullHistory(){self.handleShowFullHistory();
}if(!encntrStartDate){this.cclGetChargesHistory(showFullHistory);
return;
}workingDate=new Date(encntrStartDate);
workingDate.setHours(12,0,0,0);
currentDate.setHours(12,0,0,0);
while(workingDate<=currentDate){dateKey=dateFormatter.format(workingDate,fullDate4Year);
if(!chargeHistoryMap[dateKey]){cclStartDate=new Date(workingDate);
break;
}workingDate=new Date(Date.parse(workingDate)+MS_IN_DAY);
}if(!cclStartDate){showFullHistory();
return;
}workingDate=new Date(currentDate);
workingDate.setHours(12,0,0,0);
while(workingDate>=encntrStartDate){dateKey=dateFormatter.format(workingDate,fullDate4Year);
if(!chargeHistoryMap[dateKey]){cclEndDate=new Date(workingDate);
break;
}workingDate=new Date(Date.parse(workingDate)-MS_IN_DAY);
}this.cclGetChargesHistory(showFullHistory,cclStartDate,cclEndDate);
};
ChargesO1Component.prototype.fetchSpecificDayHistoricalCharges=function(selectedDate,noteID){var self=this;
var compID=this.getComponentId();
function updateRollingHistory(){var rollingHistoryArray=self.getRollingHistoryArray();
var rhaLen=rollingHistoryArray.length;
var pastDate=rollingHistoryArray[rhaLen-1].DATE_OBJ;
var futureDate=rollingHistoryArray[0].DATE_OBJ;
var rollingHistoryList=self.retrieveHistoryItems(pastDate,futureDate);
var rollingHistoryTable=self.buildRollingHistoryTable(rollingHistoryList,selectedDate);
var jqRollingHistoryCont=$("#"+self.getComponentId()+"RollingHistoryContainer");
if(jqRollingHistoryCont.length>0){jqRollingHistoryCont.html(rollingHistoryTable.buildTable());
rollingHistoryTable.finalizeTable();
}self.clearSpinner(compID+"Container");
self.updateAssociatedNote(noteID);
}if(!selectedDate){throw new Error("No date passed into 'fetchSpecificDayHistoricalCharges'");
}this.cclGetChargesHistory(updateRollingHistory,selectedDate,selectedDate);
};
ChargesO1Component.prototype.clearSpinner=function(resultContainerID){if(resultContainerID&&typeof resultContainerID==="string"){$("#"+resultContainerID).children(".loading-screen").remove();
}};
ChargesO1Component.prototype.fetchRecentNDaysHistoricalCharges=function(numOfDays){var self=this;
var compID=this.getComponentId();
var MS_IN_DAY=86400000;
var currentDate=new Date();
var cclStartDate=null;
var cclEndDate=null;
currentDate.setHours(12,0,0,0);
cclEndDate=new Date(currentDate);
cclStartDate=new Date(Date.parse(currentDate)-((numOfDays-1)*MS_IN_DAY));
self.loadSpinner(compID+"Container");
this.cclScriptInit(renderComponentBody,cclStartDate,cclEndDate);
function renderComponentBody(){self.renderComponent(self.getJSON());
var rollingHistoryList=self.retrieveHistoryItems(cclStartDate,cclEndDate);
self.setRollingHistoryArray(rollingHistoryList);
var rollingHistoryTable=self.buildRollingHistoryTable(rollingHistoryList);
var jqRollingHistoryCont=$("#"+self.getComponentId()+"RollingHistoryContainer");
if(jqRollingHistoryCont.length>0){jqRollingHistoryCont.html(rollingHistoryTable.buildTable());
rollingHistoryTable.finalizeTable();
}self.resizeComponentBody();
self.clearSpinner(compID+"Container");
}};
ChargesO1Component.prototype.fetchRelevantHistoricalCharges=function(numOfDays,selectedDate){var self=this;
var compID=this.getComponentId();
var MS_IN_DAY=86400000;
var dateFormatter=MP_Util.GetDateFormatter();
var fullDate4Year=mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR;
var chargeHistoryMap=this.getChargeHistoryMap();
var dateKey;
var currentDate=new Date();
var encntrStartDate=this.m_encounterStartDate;
var workingDate=null;
var cclStartDate=null;
var cclEndDate=null;
var tableStartDate=null;
var tableEndDate=null;
var numPastDays=0;
var numFutureDays=0;
var i;
currentDate.setHours(12,0,0,0);
function calculateDaysDelta(pastDate,futureDate){return Math.floor((futureDate-pastDate)/MS_IN_DAY);
}function setDatesBasedOnEmptyContig(numPastDays,numFutureDays,dateObj){var i;
cclStartDate=null;
cclEndDate=null;
tableStartDate=new Date(Date.parse(dateObj)+(-1*numPastDays*MS_IN_DAY));
for(i=(-1*numPastDays);
i<=numFutureDays;
i++){workingDate=new Date(Date.parse(dateObj)+(i*MS_IN_DAY));
dateKey=dateFormatter.format(workingDate,fullDate4Year);
if(!chargeHistoryMap[dateKey]){cclStartDate=new Date(workingDate);
break;
}}tableEndDate=new Date(Date.parse(dateObj)+(numFutureDays*MS_IN_DAY));
if(!cclStartDate){return;
}for(i=numFutureDays;
i>=(-1*numPastDays);
i--){workingDate=new Date(Date.parse(dateObj)+(i*MS_IN_DAY));
dateKey=dateFormatter.format(workingDate,fullDate4Year);
if(!chargeHistoryMap[dateKey]){cclEndDate=new Date(workingDate);
break;
}}}numPastDays=calculateDaysDelta(encntrStartDate,selectedDate);
numFutureDays=calculateDaysDelta(selectedDate,currentDate);
if((numPastDays+numFutureDays)<=(numOfDays-1)){setDatesBasedOnEmptyContig(numPastDays,numFutureDays,selectedDate);
}else{if(numPastDays>=3&&numFutureDays>=3){setDatesBasedOnEmptyContig(3,3,selectedDate);
}else{if(numPastDays>=(numOfDays-1)){setDatesBasedOnEmptyContig((numOfDays-1),0,selectedDate);
}else{setDatesBasedOnEmptyContig(numPastDays,(numOfDays-1)-numPastDays,selectedDate);
}}}self.loadSpinner(compID+"Container");
if(cclStartDate){this.cclGetChargesHistory(updateRollingHistory,cclStartDate,cclEndDate);
}else{updateRollingHistory();
}function updateRollingHistory(){var rollingHistoryList=self.retrieveHistoryItems(tableStartDate,tableEndDate);
self.setRollingHistoryArray(rollingHistoryList);
var rollingHistoryTable=self.buildRollingHistoryTable(rollingHistoryList,selectedDate);
var jqRollingHistoryCont=$("#"+self.getComponentId()+"RollingHistoryContainer");
if(jqRollingHistoryCont.length>0){jqRollingHistoryCont.html(rollingHistoryTable.buildTable());
rollingHistoryTable.finalizeTable();
}self.clearSpinner(compID+"Container");
}};
ChargesO1Component.prototype.fetchHistoricalCharges=function(numOfDays,selectedDate){try{if(!numOfDays&&!selectedDate){this.fetchFullChargeHistory();
}else{if(numOfDays&&!selectedDate){this.fetchRecentNDaysHistoricalCharges(numOfDays);
}else{numOfDays=numOfDays||7;
this.fetchRelevantHistoricalCharges(numOfDays,selectedDate);
}}}catch(error){throw (error);
}};
ChargesO1Component.prototype.primeChargeHistoryMapByDateRange=function(startDate,endDate){var chargeHistoryMap=this.getChargeHistoryMap();
var MS_IN_DAY=86400000;
var dateTime=null;
var dateKey="";
var dateFormatter=MP_Util.GetDateFormatter();
var fullDate4Year=mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR;
var numOfDays=0;
var i;
function calculateDaysDelta(pastDate,futureDate){return Math.floor((Date.parse(futureDate)-Date.parse(pastDate))/MS_IN_DAY);
}if(!startDate||!endDate){return;
}if(startDate>endDate){return;
}numOfDays=calculateDaysDelta(startDate,endDate);
for(i=0;
i<=numOfDays;
i++){dateTime=new Date(Date.parse(startDate)+(i*MS_IN_DAY));
dateKey=dateFormatter.format(dateTime,fullDate4Year);
chargeHistoryMap[dateKey]=[];
}};
ChargesO1Component.prototype.processHistoricalCharges=function(charges,startDate,endDate){var compID=this.getComponentId();
var chargeHistoryMap=this.getChargeHistoryMap();
var dateStr="";
var dateTime=new Date();
var dateFormatter=MP_Util.GetDateFormatter();
var chargesLen=charges.length;
var diagnoses;
var diagnosesLen;
var i;
var j;
if(!startDate){startDate=this.m_encounterStartDate;
}if(!endDate){endDate=new Date();
endDate.setHours(12,0,0,0);
}charges.reverse();
this.primeChargeHistoryMapByDateRange(startDate,endDate);
for(i=0;
i<chargesLen;
i++){var charge=charges[i];
charge.SVC_DATE="";
charge.PRIMARY_DIAG_STRING="";
charge.DOCUMENT="";
if(charge.DOC_NAME){charge.DOCUMENT=charge.DOC_NAME;
}diagnoses=charge.DIAGNOSES;
diagnosesLen=(diagnoses?diagnoses.length:0);
for(j=0;
j<diagnosesLen;
j++){var diagnosis=diagnoses[j];
if(diagnosis.INDEX===1){charge.PRIMARY_DIAG_STRING=diagnosis.ALIAS;
break;
}}if(charge.SERVICE_DATE){dateTime.setISO8601(charge.SERVICE_DATE);
dateStr=dateFormatter.format(dateTime,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR);
charge.SVC_DATE=dateStr;
chargeHistoryMap[dateStr].push(charge);
}}};
ChargesO1Component.prototype.cclGetChargesHistory=function(callback,startDate,endDate){var self=this;
var criterion=this.getCriterion();
var sendAr=[];
var request=new MP_Core.ScriptRequest(this,"Charges O1 Component - Get Charge History");
var tierGroup=this.getTierGroups();
var tierGroupCd=tierGroup?tierGroup:"0";
var compID=self.getComponentId();
sendAr.push("^MINE^",criterion.person_id+".0",criterion.encntr_id+".0",1);
if(startDate&&endDate){sendAr.push("^"+self.formatDateForCCL(startDate)+"^","^"+self.formatDateForCCL(endDate)+"^");
}else{sendAr.push("^^","^^");
}sendAr.push(tierGroupCd+".0");
request.setProgramName("MP_GET_CHARGES_WRAPPER");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(null,request,function(reply){var status;
var response;
try{status=reply.getStatus();
response=reply.getResponse();
if(status==="F"){if(self.isShowChargeHistoryClicked()){self.clearSpinner(compID+"FullHistoryModalbody");
var historyModalDialog=self.getFullHistoryModal();
historyModalDialog.setBodyHTML(self.createChargeRetrieveFailBanner());
return;
}else{$("#"+compID+"SubmitErrorBanner").hide();
$("#"+compID+"RetrieveErrorBanner").show();
}}else{$("#"+compID+"SubmitErrorBanner").hide();
$("#"+compID+"RetrieveErrorBanner").hide();
self.appendToPRSNLList(MP_Util.LoadPersonelListJSON(response.PRSNL));
}}catch(err){throw (err);
}var charges=response.CHARGES;
if(!charges){return;
}self.processHistoricalCharges(charges,startDate,endDate);
if(typeof callback==="function"){callback.apply(self,[charges,startDate,endDate]);
}});
};
ChargesO1Component.prototype.appendToPRSNLList=function(newList){if(!this.m_prsnlList.length){this.m_prsnlList=newList;
return;
}var pListIndex;
for(pListIndex=0;
pListIndex<this.m_prsnlList.length;
pListIndex++){var newListIndex;
for(newListIndex=0;
newListIndex<newList.length;
newListIndex++){if(this.m_prsnlList[pListIndex].value.id===newList[newListIndex].value.id){newList.splice(newListIndex--,1);
}}}$.merge(this.m_prsnlList,newList);
};
ChargesO1Component.prototype.cclScriptInit=function(callback,startDate,endDate){var self=this;
var criterion=this.getCriterion();
var sendAr=[];
var request=new MP_Core.ScriptRequest(this,this.getComponentLoadTimerName());
var tierGroup=this.getTierGroups();
var tierGroupCd=tierGroup?tierGroup:"0";
if(!startDate||!endDate){throw new Error("No start/end dates passed into cclScriptInit");
}sendAr.push("^MINE^",criterion.person_id+".0",criterion.encntr_id+".0","^"+self.formatDateForCCL(startDate)+"^","^"+self.formatDateForCCL(endDate)+"^",criterion.provider_id+".0",tierGroupCd+".0",criterion.position_cd+".0",criterion.facility_cd+".0");
request.setProgramName("MP_CHARGES_INIT");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(null,request,function(reply){var hasSuccess=false;
var status;
var response;
try{status=reply.getStatus();
response=reply.getResponse();
if(status==="F"){self.finalizeComponent(MP_Util.HandleErrorResponse(self.getStyles().getNameSpace(),"Failed to retrieve historical charges."),"");
}else{hasSuccess=true;
}}catch(err){throw (err);
}if(!hasSuccess){return;
}self.setEncntrTypeCd(response.ENCNTR_TYPE);
self.appendToPRSNLList(MP_Util.LoadPersonelListJSON(response.PRSNL));
var charges=response.CHARGES;
if(!charges){return;
}var admitDate=response.ADMIT_DT_TM;
if(admitDate){self.m_encounterStartDate=new Date();
self.m_encounterStartDate.setISO8601(admitDate);
self.m_encounterStartDate.setHours(12,0,0,0);
}else{self.m_encounterStartDate.setHours(12,0,0,0);
}if(response.DEFAULT_LOC_CD&&response.DEFAULT_LOC_DISP){self.setDefaultLocationSettings(response.DEFAULT_LOC_CD,response.DEFAULT_LOC_DISP);
}if(response.ORGANIZATION_ID){self.setOrganizationId(response.ORGANIZATION_ID);
}var userName=response.CURRENT_USER;
self.setUserFullName(userName);
var phy_ind=response.PHYSICIAN_IND;
self.setPhysicianIndicator(phy_ind);
var icdCodes=self.getICDCodes();
if(response.ICD9_CD){icdCodes.push(response.ICD9_CD);
}if(response.ICD10_CD){icdCodes.push(response.ICD10_CD);
}if(response.ICD10PCS_CD){icdCodes.push(response.ICD10PCS_CD);
}self.setVisitTypeDefinitions(response.VISIT_TYPES);
self.processHistoricalCharges(charges,startDate,endDate);
self.setPatientLocations(response.PATIENT_LOCATIONS);
self.m_myNote=self.getAssociatedNote(response);
self.m_myNotes=response.NOTES;
self.setSpecialtyList(response.SPECIALTY_LIST);
self.setIsnCodeServerRunning(response.IS_NCODE_SERVICE_AVAILABLE?true:false);
if(typeof callback==="function"){callback.apply(self,[charges,startDate,endDate]);
}});
};
ChargesO1Component.prototype.getAssociatedNote=function(response){var notesLength=response.NOTES.length;
var noNote={HAS_NOTE:1,EVENT_ID:0,EVENT_CD:0,EVENT_CD_DISP:0,CHARGED_IND:0,RESULT_STATUS_CD_DISP:"",SUBJECT:"--",UPDATE_DATE:""};
if(response.MY_NOTE.CHARGED_IND===0){return response.MY_NOTE;
}else{response.NOTES.sort(function(a,b){var d1=new Date();
var d2=new Date();
d1.setISO8601(a.UPDATE_DATE);
d2.setISO8601(b.UPDATE_DATE);
if(d1<d2){return 1;
}else{if(d1>d2){return -1;
}else{return 0;
}}});
for(var i=0;
i<notesLength;
i++){var note=response.NOTES[i];
if(note.CHARGED_IND===0){note.HAS_NOTE=1;
return note;
}}}return noNote;
};
ChargesO1Component.prototype.cclGetConditions=function(callback){if(typeof callback!=="function"){return;
}var self=this;
var criterion=this.getCriterion();
var sendAr=[];
sendAr.push("^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",criterion.ppr_cd+".0",criterion.position_cd+".0","^"+criterion.category_mean+"^");
var request=new MP_Core.ScriptRequest(self,"ENG:ChargesO1Component - MP_GET_CONDITIONS");
request.setProgramName("MP_GET_CONDITIONS");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XmlStandardRequest(null,request,function(reply){callback.apply(self,[reply]);
});
};
ChargesO1Component.prototype.dropCharge=function(){var self=this;
var criterion=this.getCriterion();
var compID=this.getComponentId();
var code=this.getCurrentCPTCode();
if(!code){return;
}var aConditions=this.getAssociatedConditionsObj();
var aLen=aConditions.getLength();
var i;
if(!aLen){return;
}var dxListJSON="";
dxListJSON+="{'DX_ITEMS':";
dxListJSON+="{'dxList':[";
for(i=0;
i<aLen;
i++){var condition=aConditions.getConditionIndexOf(i).CONDITION;
if(!(condition.DIAGNOSES&&condition.DIAGNOSES.length)){throw new Error("Runtime Error: Undefined diagnosis encountered in 'dropCharge' method");
}var diagnosis=condition.DIAGNOSES[0];
if(!diagnosis){throw new Error("Runtime Error: Undefined diagnosis encountered in 'dropCharge' method");
}var descNomId=diagnosis.TARGET_NOMENCLATURE_ID;
if(i>0){dxListJSON+=",";
}dxListJSON+="{'alias':'"+descNomId+"','value':"+descNomId+".0}";
}dxListJSON+="]}}";
var dateStr=(this.getServiceDate())?this.getDateForCCL(this.getServiceDate()):this.getDateForCCL(new Date());
var perfLocCd=0;
if(this.getModifiedLocationId()>0){perfLocCd=this.getModifiedLocationId();
}else{if(this.getModifiedLocationId()===-1){perfLocCd=0;
}else{if(this.getDefaultLocationSettings()&&this.getDefaultLocationSettings().LOCATION_CD){perfLocCd=this.getDefaultLocationSettings().LOCATION_CD;
}}}var providerId=this.getModifiedProviderId()||criterion.provider_id;
var sendAr=["^MINE^",criterion.person_id+".0",criterion.encntr_id+".0",providerId+".0","^"+dateStr+"^","^DISCERN ABU^","^"+dxListJSON+"^","^"+code+"^","^CPT^",perfLocCd+".0","^"+(this.getSelectedModifier()||"")+"^",(this.m_selectdeNoteEventId+".0"),criterion.provider_id+".0"];
var request=new MP_Core.ScriptRequest(this,"ChargesO1 - Submit Charge");
request.setProgramName("MP_SUBMIT_CHARGES_BY_CODE");
request.setParameters(sendAr);
request.setAsync(true);
this.loadSpinner(compID+"Container");
MP_Core.XmlStandardRequest(null,request,function(reply){self.clearSpinner(compID+"Container");
if(reply.getStatus()!=="S"){$("#"+compID+"RetrieveErrorBanner").hide();
$("#"+compID+"SubmitErrorBanner").show();
return;
}else{if(self.isLaunchedFromDocumentation()){window.open("","_parent","");
window.close();
}$("#"+compID+"RetrieveErrorBanner").hide();
$("#"+compID+"SubmitErrorBanner").hide();
self.loadSpinner(compID+"Container");
setTimeout(function(){self.fetchSpecificDayHistoricalCharges(self.getServiceDate(),self.m_selectdeNoteEventId);
},2000);
}});
};
ChargesO1Component.prototype.handleDatepickerSelection=function(inst){var selectedDate=new Date();
var rollingHistoryTable=this.m_rollingHistoryTable;
var tableMap=rollingHistoryTable.getColumnMap();
var key=null;
var historyItem;
selectedDate.setYear(inst.selectedYear);
selectedDate.setMonth(inst.selectedMonth);
selectedDate.setDate(inst.selectedDay);
selectedDate.setHours(12,0,0,0);
this.setServiceDate(selectedDate);
for(key in tableMap){historyItem=null;
if(tableMap.hasOwnProperty(key)){historyItem=tableMap[key];
}else{key=null;
continue;
}if(Date.parse(historyItem.DATE_OBJ)===Date.parse(selectedDate)){break;
}key=null;
}if(key){$("#"+key).click();
}else{this.fetchHistoricalCharges(7,selectedDate);
}};
ChargesO1Component.prototype.buildRollingHistoryTable=function(rollingHistoryList,selectedDate){function calculateDaysDelta(pastDate,futureDate){var MS_IN_DAY=86400000;
return Math.floor((futureDate-pastDate)/MS_IN_DAY);
}function getSelectedDateIndex(){var rhLen=rollingHistoryList.length;
var i=0;
if(!selectedDate){return i;
}for(i=0;
i<rhLen;
i++){if(Date.parse(selectedDate)===Date.parse(rollingHistoryList[i].DATE_OBJ)){break;
}}return i;
}var self=this;
var encntrStartDate=this.m_encounterStartDate;
var currentDate=new Date();
var rollingHistoryTable=this.m_rollingHistoryTable||new this.RollingTable(this);
var standardCol=new this.RollingColumn();
var blankCol=new this.RollingColumn();
var datePickerOpts={};
currentDate.setHours(12,0,0,0);
datePickerOpts.showOn="both";
datePickerOpts.buttonImageOnly=true;
datePickerOpts.buttonImage=this.getCriterion().static_content+"/images/4974.png";
datePickerOpts.buttonText="Calendar";
datePickerOpts.defaultDate=null;
datePickerOpts.maxDate=0;
datePickerOpts.minDate=encntrStartDate;
datePickerOpts.onClose=function(dateStr,inst){self.handleDatepickerSelection(inst);
};
standardCol.setColumnCSS("charges-o1-rolling-history-col");
standardCol.setHeaderCSS("charges-o1-rolling-history-hdr");
standardCol.setBodyCSS("charges-o1-rolling-history-val");
standardCol.setHeaderField("RH_DATE");
standardCol.setBodyField("CPT_CODE");
standardCol.setHoverFunc(this.buildRollingHistoryHover);
standardCol.setClickFunc(this.handleRollingHistoryCellClick);
blankCol.setColumnCSS("charges-o1-rolling-history-blank-col");
rollingHistoryTable.setId(this.getComponentId()+"RollingHistoryTable");
rollingHistoryTable.setCSS("charges-o1-rolling-history-cont");
rollingHistoryTable.setNumOfColumnsToDisplay(7);
rollingHistoryTable.setColumnTemplate(standardCol);
rollingHistoryTable.setBlankColumnTemplate(blankCol);
rollingHistoryTable.setIsDatepickerEnabled(calculateDaysDelta(encntrStartDate,currentDate)>7);
rollingHistoryTable.setDatepickerOptions(datePickerOpts);
rollingHistoryTable.setActiveIndex(getSelectedDateIndex());
rollingHistoryTable.bindData(rollingHistoryList);
this.m_rollingHistoryTable=rollingHistoryTable;
return rollingHistoryTable;
};
ChargesO1Component.prototype.retrieveHistoryItems=function(startDate,endDate){var MS_IN_DAY=86400000;
var dateFormatter=MP_Util.GetDateFormatter();
var fullDate4Year=mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR;
var encntrStartDate=this.m_encounterStartDate;
var chargeHistoryMap=this.getChargeHistoryMap();
var dateKey;
var rhDate="";
var prsnlID=this.getCriterion().provider_id;
var workingDate=null;
var currentDate=new Date();
var numOfDays=0;
var dateBucketCharges=null;
var bucketLen;
var historicalItem=null;
var rollingHistoryList=[];
var charge;
var i;
var j;
var isDSTStart=false;
var isDSTEnd=false;
var MS_IN_HOUR=3600000;
function calculateDaysDelta(pastDate,futureDate){var msInDays=futureDate-pastDate;
if(msInDays===-MS_IN_HOUR){isDSTStart=true;
}else{if(msInDays===MS_IN_HOUR){isDSTEnd=true;
}}if(isDSTStart){msInDays=msInDays+MS_IN_HOUR;
}else{if(isDSTEnd){msInDays=msInDays-MS_IN_HOUR;
}}return Math.floor(msInDays/MS_IN_DAY);
}currentDate.setHours(12,0,0,0);
numOfDays=calculateDaysDelta(startDate,endDate);
startDate.setHours(12,0,0,0);
for(i=numOfDays;
i>=0;
i--){workingDate=new Date(Date.parse(startDate)+(i*MS_IN_DAY));
if(workingDate>=encntrStartDate){dateKey=dateFormatter.format(workingDate,fullDate4Year);
rhDate=(!calculateDaysDelta(workingDate,currentDate))?i18n.discernabu.charges_o1.TODAY:this.convertToRollingHistoryDateFormat(workingDate);
historicalItem={SVC_DATE:dateKey,CPT_CODE:"--",DATE_OBJ:workingDate,RH_DATE:rhDate,BUCKET:[],DOCUMENT:""};
dateBucketCharges=chargeHistoryMap[dateKey];
if(dateBucketCharges&&dateBucketCharges.length){historicalItem.BUCKET=dateBucketCharges;
historicalItem.BUCKET.sort(function(a,b){var d1=new Date();
var d2=new Date();
d1.setISO8601(a.UPDATE_DATE);
d2.setISO8601(b.UPDATE_DATE);
if(d1<d2){return 1;
}else{if(d1>d2){return -1;
}else{return 0;
}}});
for(j=0,bucketLen=dateBucketCharges.length;
j<bucketLen;
j++){charge=dateBucketCharges[j];
if(charge.VERIFY_PHYS_ID===prsnlID&&(this.getPhysicianIndicator()||this.isNonPhyEnabled())){historicalItem.DIAGNOSES=charge.DIAGNOSES;
historicalItem.CPT_CODE=charge.CPT_CODE;
historicalItem.DOCUMENT=charge.DOC_NAME;
break;
}}}rollingHistoryList.push(historicalItem);
}}return rollingHistoryList;
};
ChargesO1Component.prototype.buildAssociatedDiagnosisRow=function(obj){var html="";
if(!obj){return html;
}var condition=obj.CONDITION;
var diagnoses=condition.DIAGNOSES;
if(!(diagnoses&&diagnoses.length)){return"";
}var diagnosis=diagnoses[0];
var suggestHtml=diagnosis.IS_SUGGESTED?("<span class='charges-o1-suggested-label'>("+i18n.discernabu.charges_o1.SUGGESTED+")</span>"):"";
html+="<div id='"+obj.HTML_ID+"' class='charges-o1-rp-diag-assigned'>";
html+="<label class='charges-o1-diag-lbl'>";
html+="<input type='checkbox' class='charges-o1-rp-diag-chkbx' checked />";
html+="<span class='charges-o1-diag-span'>"+diagnosis.TARGET_CODE+" "+(condition.ANNOTATED_DISPLAY||condition.DISPLAY)+suggestHtml+"</span>";
html+="</label>";
html+="<div class='charges-o1-diag-action-col'>";
if(obj.PRIORITY===1){html+="<span class='charges-o1-diag-primary'>"+i18n.discernabu.charges_o1.PRIMARY+"</span>";
}else{html+="<span class='charges-o1-diag-secondary'>"+i18n.discernabu.charges_o1.MAKE_PRIMARY+"</span>";
}html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildUnassociatedDiagnosisRow=function(obj){var html="";
if(!obj){return html;
}var compID=this.getComponentId();
var condition=obj.CONDITION;
var diagnoses=condition.DIAGNOSES;
if(!(diagnoses&&diagnoses.length)){return"";
}var diagnosis=diagnoses[0];
var suggestHtml=diagnosis.IS_SUGGESTED?("<span class='charges-o1-suggested-label'>("+i18n.discernabu.charges_o1.SUGGESTED+")</span>"):"";
html+="<div id='"+obj.HTML_ID+"' class='charges-o1-rp-diag-unassigned'>";
html+="<label class='charges-o1-rp-lbl charges-o1-diag-lbl'>";
html+="<input type='checkbox' class='charges-o1-rp-diag-chkbx' /><span class='charges-o1-diag-span'>"+diagnosis.TARGET_CODE+" "+(condition.ANNOTATED_DISPLAY||condition.DISPLAY)+suggestHtml+"</span>";
html+="</label>";
html+="<div class='charges-o1-diag-action-col'>";
html+="<span class='charges-o1-diag-secondary'>"+i18n.discernabu.charges_o1.MAKE_PRIMARY+"</span>";
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildAssociatedDiagnosesHTML=function(){var html="";
var compID=this.getComponentId();
var associatedConditions=this.getAssociatedConditionsObj().getConditions();
var unAssociatedConditions=this.getUnassociatedConditionsObj().getConditions();
var i;
var iLen=associatedConditions.length;
var jLen=unAssociatedConditions.length;
html+="<div class='charges-o1-rp-assoc-diag-section'>";
html+="<div class='charges-o1-rp-lbl'>"+i18n.discernabu.charges_o1.DIAGNOSES+"</div>";
if(iLen===0&&jLen===0){html+="<div>"+i18n.discernabu.charges_o1.NO_DIAGNOSIS_DOCUMENTED+"</div>";
}else{if(iLen===0&&jLen!==0){html+="<div>"+i18n.discernabu.charges_o1.NO_DIAGNOSIS_ASSOCIATED+"</div>";
}}html+="<div id='"+compID+"RPAssocDiagList' class='charges-o1-rp-assoc-diag-list'>";
for(i=0;
i<iLen;
i++){html+=this.buildAssociatedDiagnosisRow(associatedConditions[i]);
}html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildUnassociatedDiagnosesHTML=function(){var compID=this.getComponentId();
var conditions=this.getUnassociatedConditionsObj().getConditions();
var html="";
var i;
var iLen=conditions.length;
html+="<div class='charges-o1-rp-unassoc-diag-section'>";
html+="<div id='"+compID+"RPUnassocDiagList' class='charges-o1-rp-unassoc-diag-list'>";
for(i=0;
i<iLen;
i++){html+=this.buildUnassociatedDiagnosisRow(conditions[i]);
}html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPDiagnosesSectionHTML=function(){var html="";
html+=this.buildAssociatedDiagnosesHTML();
var unAssociatedConditions=this.getUnassociatedConditionsObj().getConditions();
if(unAssociatedConditions.length!==0){html+="<div class='sp-separator'></div>";
html+=this.buildUnassociatedDiagnosesHTML();
}return html;
};
ChargesO1Component.prototype.buildPPEditableSectionHTML=function(){var compID=this.getComponentId();
var html="";
var cptClass="";
var useThis="";
var recNcodeHtml="";
var nCodeWarn="";
var supported="";
var cptCode=this.getCurrentCPTCode();
if(!cptCode){cptCode=i18n.discernabu.charges_o1.ENTER_CODE;
cptClass=" charges-o1-secondary-text";
nCodeWarn="";
useThis="";
supported="";
}useThis="<div id='"+compID+"recNcodeUseThis' class='charges-o1-rp-recncd'><a id='"+compID+"useThisAnchor'></a></div>";
recNcodeHtml="<div class='supported-block'><div id='"+compID+"recommededNcode' class='charges-o1-rp-ncode-val"+cptClass+"'>&nbsp;</div>"+useThis+"</div>";
supported="<div id='"+compID+"recNcodeSupp'>&nbsp;</div>";
html+="<div class='charges-o1-pp-padded-section'>";
html+="<div class='charges-o1-rp-upper-section'>";
html+="<div class='charges-o1-rp-cpt-cont'>";
html+="<div class='charges-o1-rp-cpt-val-cont'>";
html+="<div id='"+compID+"RPCPTVal' class='charges-o1-rp-cpt-val"+cptClass+"'>"+cptCode+"</div>";
html+="</div>";
html+="<div>";
html+="<div id='"+compID+"selectedCPT' class='charges-o1-selected-cpt'>"+i18n.discernabu.charges_o1.SELECTED_CPT+"</div>";
html+="</div>";
html+="</div>";
html+="<div id='"+compID+"recNcodeSuppBox' class='charges-o1-rec-supp'>";
html+=recNcodeHtml;
html+=supported;
html+="</div>";
html+="</div>";
html+="<div id='"+compID+"nCodeWarn' class='charges-o1-ncode-warn'>"+nCodeWarn+"</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPCPTInstructionSectionHTML=function(){var compID=this.getComponentId();
var staticLocation=this.getCriterion().static_content;
var html="";
html+="<div id='"+compID+"PPInstructionSection' class='charges-o1-pp-init charges-o1-pp-padded-section'>";
html+="<div class='charges-o1-no-data-img-cont'>";
html+="<span class='charges-o1-no-data-img'></span>";
html+="</div>";
html+=i18n.discernabu.charges_o1.SELECT_A_CPT_CODE_PART_1+",<br />"+i18n.discernabu.charges_o1.SELECT_A_CPT_CODE_PART_2+",<br />"+i18n.discernabu.charges_o1.SELECT_A_CPT_CODE_PART_3;
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPSubmitStatusSectionHTML=function(){var compID=this.getComponentId();
var staticLocation=this.getCriterion().static_content;
var html="";
html+="<div class='charge-default-font charges-o1-pp-init charges-o1-pp-padded-section'>";
html+="<div>";
html+="<span class='charges-o1-success-img'></span>";
html+="</div>";
html+="<div>"+this.getCurrentCPTCode()+"</div>";
html+="<div class='charge-reg-pane-font'>";
html+=i18n.discernabu.charges_o1.SUCCESSFULLY_SUBMITTED+"<br />"+this.getDateString(this.getServiceDate());
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPInteractiveViewHTML=function(){var compID=this.getComponentId();
var html="";
html+="<div id='"+compID+"RPDispRoot' class='charges-o1-rp-mod-root-cont'>";
html+="<div id='"+compID+"RPEditableSection'>";
html+=this.buildPPEditableSectionHTML();
html+="</div>";
html+="<div id='"+compID+"PPWarningSection'>";
html+="</div>";
html+="<div class='sp-separator'></div>";
html+="<div id='"+this.getComponentId()+"chargesScrollContainer' class='charges-o1-scroll-container'>";
html+=this.buildPPMiddleSectionHTML(true);
html+="<div class='sp-separator'></div>";
html+="<div id='sidePanelScrollContainer"+compID+"'>";
html+="<div id='"+this.getComponentId()+"RPDiagnosesSection' class='charges-o1-pp-padded-section charges-o1-sp-diag'>";
html+=this.buildPPDiagnosesSectionHTML();
html+="</div>";
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPHistoricalViewHTML=function(historicalItem){var compID=this.getComponentId();
var staticLocation=this.getCriterion().static_content;
var primaryDiagnosis=null;
var html="";
var cptCode="";
var svcDate="";
var diagnosesObj="";
if(!historicalItem){return;
}var bucketLength=historicalItem.BUCKET.length;
if(bucketLength){cptCode=historicalItem.BUCKET[0].CPT_CODE;
svcDate=historicalItem.BUCKET[0].SVC_DATE;
diagnosesObj=historicalItem.BUCKET[0].DIAGNOSES;
}function getPrimaryDiagnosis(diagnoses){var pDiagnosis=null;
var dLen=0;
var i;
if(!diagnoses||!diagnoses.length){return null;
}dLen=diagnoses.length;
for(i=0;
i<dLen;
i++){if(diagnoses[i].INDEX===1){pDiagnosis=diagnoses[i];
return pDiagnosis;
}}return null;
}html+="<div id='sidePanelScrollContainer"+compID+"'>";
html+="<div id='"+compID+"RPDispRoot' class='charges-o1-rp-mod-root-cont'>";
html+="<div class='charges-o1-pp-padded-section'>";
html+="<div id='"+compID+"PPHistoricalSection' class='charges-o1-pp-historical'>";
html+="<div><img src='"+staticLocation+"/images/data_entry_success.png' /></div>";
html+="<div class='charges-o1-rp-historical-cpt charges-o1-secondary-text'>"+cptCode+"</div>";
html+="<div>";
html+="<span class='charges-o1-secondary-text'>"+i18n.discernabu.charges_o1.DATE+":</span>";
html+="<span>"+svcDate+"</span>";
html+="</div>";
primaryDiagnosis=getPrimaryDiagnosis(diagnosesObj);
html+="<div>";
html+="<span class='charges-o1-secondary-text'>"+i18n.discernabu.charges_o1.PRIMARY_DIAGNOSIS+":</span>";
html+="<span>"+(primaryDiagnosis?primaryDiagnosis.CODE+" "+primaryDiagnosis.ALIAS:"Not Found")+"</span>";
html+="</div>";
html+="</div>";
html+="</div";
html+="</div";
return html;
};
ChargesO1Component.prototype.buildPPInitialViewlHTML=function(){var compID=this.getComponentId();
var html="";
html+="<div id='sidePanelScrollContainer"+compID+"'>";
html+="<div id='"+compID+"RPDispRoot' class='charges-o1-rp-mod-root-cont'>";
html+="<div id='"+compID+"RPEditableSection'>";
html+=this.buildPPEditableSectionHTML();
html+="</div>";
html+="<div class='charges-o1-pp-padded-section'><div class='sp-separator'></div></div>";
html+="<div id='"+this.getComponentId()+"chargesScrollContainer' class='charges-o1-scroll-container'>";
html+=this.buildPPMiddleSectionHTML(false);
html+="<div id='"+compID+"PPWarningSection'></div>";
html+="<div class='charges-o1-pp-padded-section'><div class='sp-separator'></div></div>";
html+=this.buildPPCPTInstructionSectionHTML();
html+="</div>";
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildPPMiddleSectionHTML=function(isRowSelected){var self=this;
var compID=self.getComponentId();
var locationNameHTML="";
var serviceDate=self.getServiceDate();
var chargesi18n=i18n.discernabu.charges_o1;
var dateStr=chargesi18n.NO_SELECTED_DATE;
if(serviceDate){dateStr=self.convertDateToMMDDYYYY(serviceDate);
}var locationsArrayLength=0;
if(self.getPatientLocations()){locationsArrayLength=self.getPatientLocations().length;
}if(self.getDefaultLocationSettings()&&self.getDefaultLocationSettings().LOCATION_CD>0&&locationsArrayLength>0){locationNameHTML="<span class='charges-o1-location-provider' id ='"+compID+"locationName'>"+self.getDefaultLocationSettings().LOCATION_DISPLAY+"</span>";
}else{if(!self.getDefaultLocationSettings()&&locationsArrayLength>0){locationNameHTML="<span class='charges-o1-location-provider' id ='"+compID+"locationName'>--</span>";
}else{locationNameHTML="<span>--</span>";
}}var serviceDateHtml="<div class='charges-o1-date-label charges-o1-secondary-text'>"+chargesi18n.DATE+"</div> <div id='"+compID+"RPSvcDateValue' class='charges-o1-date-val'>"+dateStr+"</div>";
var modifierHtml="<div id='"+compID+"modifierSection' class='charges-o1-secondary-text'><div class='charges-o1-modifier-label'>"+(isRowSelected?chargesi18n.MODIFIER:"&nbsp;")+"</div><div id ='"+compID+"modifierValue' class=' charges-o1-modifier-value'>"+(isRowSelected?"--":"")+"</div></div>";
var performLocationHtml="<div class='charges-o1-provider-section'>"+modifierHtml+"<div class='charges-o1-location-label charges-o1-secondary-text'>"+chargesi18n.LOCATION+"</div><div id='"+compID+"RPPerfLoc' class='charges-o1-location-anchor'>"+locationNameHTML+"</div></div>";
var providerHtml="<div class='charges-o1-provider-label charges-o1-secondary-text'>"+chargesi18n.PROVIDER+"</div><div id='"+compID+"Provider' class='charges-o1-provider-value'><span class='charges-o1-location-provider' id ='"+compID+"providerName'>"+(self.getUserFullName()||"--")+"</span></div>";
return("<div class='charges-o1-sp-middle-section'><div id='"+compID+"dateProviderSection' class='charges-o1-rp-svc-date-cont'>"+serviceDateHtml+providerHtml+"</div>"+performLocationHtml+"</div>");
};
ChargesO1Component.prototype.buildPPSubmitStatusViewHTML=function(){var compID=this.getComponentId();
var html="";
html+="<div id='"+compID+"RPDispRoot' class='charges-o1-rp-mod-root-cont'>";
html+=this.buildPPSubmitStatusSectionHTML();
html+="</div>";
return html;
};
ChargesO1Component.prototype.generateDropDownHTML=function(chargeJSON){var compID=this.getComponentId();
var jsHTML="";
var jsonDropDown=chargeJSON;
jsHTML+=("<select id='"+compID+"ChargeTypeDropDown' class='charges-o1-type-drop-down'>");
jsHTML+="<option id='"+compID+"VisitTypeDefaultOption' class='charges-o1-default-option'>"+i18n.discernabu.charges_o1.SELECT_VISIT_TYPE+"</option>";
$.each(jsonDropDown.CHARGES,function(itemnum,item){jsHTML+=("<option value="+itemnum+" cdf_meaning="+jsonDropDown.CHARGES[itemnum].VISIT_TYPE_CDF_MN+">"+jsonDropDown.CHARGES[itemnum].DISPLAY_NAME+"</option>");
});
jsHTML+=("</select>");
if(jsonDropDown.CHARGES.length===0){jsHTML+=("<div>*"+i18n.discernabu.charges_o1.NO_VISIT_TYPES_FOR_ENCOUNTER+"</div>");
}return jsHTML;
};
ChargesO1Component.prototype.buildControlsSection=function(){var compID=this.getComponentId();
var html="";
var visitTypeArr=this.getChargingJSON();
var visitTypeArrLen=visitTypeArr.length;
html+="<div id='"+compID+"ContentControls'>";
html+="<div id='"+compID+"ContentType' class='charges-o1-content-type'>";
html+="<span class='charges-o1-visit-type-lbl'>"+i18n.discernabu.charges_o1.VISIT_TYPE+"</span>";
html+="<span>"+this.generateDropDownHTML(this.getChargingJSON())+"</span>";
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.buildRollingHistoryHover=function(data){var html="";
var colObj;
var bucket;
var prsnlID=this.getCriterion().provider_id;
var bucketLength=0;
var prevFoundMap={};
var bucketItem;
var verifyPhysID;
var i;
var physName="";
var physCPT="";
var physDoc="";
var noteHTML="";
if(!data||!data.DATA){return;
}colObj=data.DATA;
bucket=colObj.BUCKET;
if(!bucket||bucket.length==undefined){return;
}bucketLength=bucket.length;
html+="<div class='charges-o1-rh-hvr-cont'>";
html+="<div class='charges-o1-rh-hvr-hdr'>";
html+="<span class='charges-o1-rh-hvr-phys-col'>"+i18n.discernabu.charges_o1.PROVIDER+"</span>";
html+="<span class='charges-o1-rh-hvr-cpt-col'>"+i18n.discernabu.charges_o1.CHARGE+"</span>";
html+="</div>";
html+="<div class='sp-separator'></div>";
html+="<div class='charges-o1-rh-hvr-body'>";
physName=this.getUserFullName()||i18n.discernabu.charges_o1.MINE;
for(i=0;
i<bucketLength;
i++){bucketItem=bucket[i];
verifyPhysID=bucketItem.VERIFY_PHYS_ID;
if(!verifyPhysID){continue;
}if(verifyPhysID===prsnlID){physCPT=bucketItem.CPT_CODE;
physDoc=bucketItem.DOCUMENT;
prevFoundMap[prsnlID]=true;
break;
}}if(!prevFoundMap[prsnlID]){physCPT="--";
prevFoundMap[prsnlID]=true;
}if(physDoc!==""){noteHTML="("+physDoc+")";
}else{noteHTML="";
}html+="<div class='charges-o1-rh-hvr-row-div'>";
html+="<span class='charges-o1-rh-hvr-phys-col charges-o1-rh-cur-phys'>"+physName+"</span>";
html+="<span class='charges-o1-rh-hvr-cpt-col charges-o1-rh-cur-phys'>"+physCPT+" "+noteHTML+"</span>";
html+="</div>";
for(i=0;
i<bucketLength;
i++){bucketItem=bucket[i];
verifyPhysID=bucketItem.VERIFY_PHYS_ID;
if(!verifyPhysID){continue;
}if(prevFoundMap[verifyPhysID]){continue;
}else{prevFoundMap[verifyPhysID]=true;
}var physicianObj=MP_Util.GetValueFromArray(verifyPhysID,this.m_prsnlList);
physName=physicianObj?physicianObj.fullName:"";
physCPT=bucketItem.CPT_CODE;
html+="<div class='charges-o1-rh-hvr-row-div'>";
html+="<span class='charges-o1-rh-hvr-phys-col'>"+physName+"</span>";
html+="<span class='charges-o1-rh-hvr-cpt-col'>"+physCPT+"</span>";
html+="</div>";
}html+="</div>";
return html;
};
ChargesO1Component.prototype.buildBlankCPTTable=function(){var compID=this.getComponentId();
var html="";
html+="<div id='"+compID+"DefaultCPTtable' class='component-table list-as-table charges-o1-empty-table'>";
html+="<div class='content-hdr'>";
html+="<dl class='hdr'>";
html+="<dd class='header-item charges-o1-column charges-o1-trans'>";
html+="<span class='header-item-display'>"+i18n.discernabu.charges_o1.CPT_CODE+"</span>";
html+="</dd>";
html+="<dd class='header-item charges-o1-column charges-o1-trans'>";
html+="<span class='header-item-display'>"+i18n.discernabu.charges_o1.HISTORY+"</span>";
html+="</dd>";
html+="<dd class='header-item charges-o1-column charges-o1-trans'>";
html+="<span class='header-item-display'>"+i18n.discernabu.charges_o1.EXAM+"</span>";
html+="</dd>";
html+="<dd class='header-item charges-o1-column charges-o1-trans'>";
html+="<span class='header-item-display'>"+i18n.discernabu.charges_o1.DECISION_MAKING+"</span>";
html+="</dd>";
html+="</dl>";
html+="</div>";
html+="</div>";
return html;
};
ChargesO1Component.prototype.openMyNotes=function(){var compId=this.getComponentId();
var modalID=compId+"MyNotesModal";
this.m_myNoteDialog=MP_ModalDialog.retrieveModalDialogObject(modalID);
var self=this;
var criterion=this.getCriterion();
var beginDateTime=this.formatDateForCCL(this.m_encounterStartDate);
if(!this.m_myNoteDialog){this.m_myNoteDialog=new ModalDialog(modalID);
this.m_myNoteDialog.setHeaderTitle(i18n.discernabu.charges_o1.MY_NOTES);
this.m_myNoteDialog.setLeftMarginPercentage(30);
this.m_myNoteDialog.setRightMarginPercentage(30);
this.m_myNoteDialog.setTopMarginPercentage(15);
this.m_myNoteDialog.setBottomMarginPercentage(15);
this.m_myNoteDialog.setHeaderCloseFunction(function(){$(window).unbind("resize.myNotesTable");
});
MP_ModalDialog.addModalDialogObject(this.m_myNoteDialog);
var okButton=new ModalButton(compId+"okButton");
okButton.setText(i18n.discernabu.CONFIRM_OK);
okButton.setOnClickFunction(function(){self.updateMySelectedNote();
$(window).unbind("resize.myNotesTable");
});
this.m_myNoteDialog.addFooterButton(okButton);
var cancelButton=new ModalButton(compId+"cancelButon");
cancelButton.setText(i18n.discernabu.CONFIRM_CANCEL);
cancelButton.setOnClickFunction(function(){$(window).unbind("resize.myNotesTable");
});
this.m_myNoteDialog.addFooterButton(cancelButton);
}var reportRequest=new ScriptRequest();
reportRequest.setName("Charge Note Request");
reportRequest.setProgramName("mp_retrieve_charge_notes");
reportRequest.setParameterArray(["^MINE^",criterion.person_id+".0",criterion.encntr_id+".0",criterion.provider_id+".0",criterion.position_cd+".0",criterion.facility_cd+".0","^"+beginDateTime+"^"]);
reportRequest.setResponseHandler(function(scriptReply){self.renderMyNotes(scriptReply);
});
MP_ModalDialog.showModalDialog(modalID);
this.loadSpinner(this.m_myNoteDialog.getBodyElementId());
reportRequest.performRequest();
};
ChargesO1Component.prototype.updateMySelectedNote=function(){if(!this.m_myNote){return;
}var compId=this.getComponentId();
var $noteSubject=$("#"+compId+"myNoteSubject");
$noteSubject.html(i18n.discernabu.charges_o1.ASSOCIATED_NOTE+": <span class='charges-o1-note-subject'>"+this.m_myNote.SUBJECT||"--</span>");
this.setSelectedNoteEventId(this.m_myNote.EVENT_ID);
$("#"+compId+"myNoteSelected").addClass("selected");
};
ChargesO1Component.prototype.renderMyNotes=function(replyObj){var compId=this.getComponentId();
var chargesi18n=i18n.discernabu.charges_o1;
var bodyHtml="";
var status=replyObj.getStatus();
var recordData=replyObj.getResponse();
if(status==="F"){var errMsg=[];
errMsg.push(replyObj.getError());
bodyHtml=MP_Util.HandleErrorResponse("",errMsg.join("<br/>"));
}else{if(status==="S"&&recordData.NOTES.length>0){this.processNoteRecordData(recordData);
bodyHtml=this.createMyNotesTable(recordData);
}else{bodyHtml=chargesi18n.NO_ADDITIONAL_NOTES_FOUND;
}}this.clearSpinner(this.m_myNoteDialog.getBodyElementId());
var html=MP_Core.generateUserMessageHTML("information",chargesi18n.ALL_NOTES_CHARGED,"","inline-message");
this.m_myNoteDialog.setBodyHTML((this.areAllNotesCharged(recordData.NOTES))?("<div class='charges-o1-my-notes-table-container'><div class='charges-o1-all-notes-charged'>"+html+"</div>"+bodyHtml+"</div>"):("<div class='charges-o1-my-notes-table-container'>"+bodyHtml+"</div>"));
this.updateMyNotesTable(recordData.NOTES);
};
ChargesO1Component.prototype.areAllNotesCharged=function(notes){var noteCount=notes.length;
if(noteCount===0){return false;
}for(var index=noteCount;
index--;
){var note=notes[index];
if(note.CHARGED_IND===0){return false;
}}return true;
};
ChargesO1Component.prototype.updateMyNotesTable=function(notes){if(!this.m_myNotesTable){return;
}var compId=this.getComponentId();
var self=this;
var $modalDialog=$("#vwpModalDialog"+this.m_myNoteDialog.getId());
$modalDialog.addClass("wf");
var calculateTableHeight=function(modalBody,tableHeader){var marginBuffer=25;
var alertMsgHeight=(self.areAllNotesCharged(notes))?28:0;
return modalBody.height()-tableHeader.height()-marginBuffer-alertMsgHeight;
};
var tableHeader=$("#charges-o1"+compId+"headerWrapper");
var tableBody=$("#charges-o1"+compId+"tableBody");
var modalBody=$("#"+this.m_myNoteDialog.getBodyElementId());
tableBody.css({"max-height":calculateTableHeight(modalBody,tableHeader)+"px","overflow-y":"auto"});
this.m_myNotesTable.updateAfterResize();
this.m_myNotesTable.finalize();
$(window).on("resize.myNotesTable",function(){tableBody.css({"max-height":calculateTableHeight(modalBody,tableHeader)+"px","overflow-y":"auto"});
self.m_myNotesTable.updateAfterResize();
});
this.ditherChargedNotes(notes);
this.highlightSelectedNote();
};
ChargesO1Component.prototype.createMyNotesTable=function(recordData){var column=null;
var chargesi18n=i18n.discernabu.charges_o1;
var compId=this.getComponentId();
var self=this;
this.m_myNotesTable=new ComponentTable();
this.m_myNotesTable.setNamespace("charges-o1"+compId);
column=new TableColumn();
column.setColumnId("SUBJECT");
column.setCustomClass("charges-o1-my-notes-info");
column.setColumnDisplay(chargesi18n.SUBJECT);
column.setPrimarySortField("SUBJECT");
column.addSecondarySortField("UPDATE_DATE",TableColumn.SORT.DESCENDING);
column.setRenderTemplate("${SUBJECT_DISPLAY}");
this.m_myNotesTable.addColumn(column);
column=new TableColumn();
column.setColumnId("NOTE_TYPE");
column.setCustomClass("charges-o1-my-notes-info");
column.setColumnDisplay(chargesi18n.NOTE_TYPE);
column.setPrimarySortField("EVENT_CD_DISP");
column.addSecondarySortField("UPDATE_DATE",TableColumn.SORT.DESCENDING);
column.setRenderTemplate("${EVENT_CD_DISP}");
this.m_myNotesTable.addColumn(column);
column=new TableColumn();
column.setColumnId("LAST_UPDATE");
column.setCustomClass("charges-o1-my-notes-last-update");
column.setColumnDisplay(chargesi18n.LAST_UPDATE);
column.setPrimarySortField("UPDATE_DATE");
column.addSecondarySortField("SUBJECT",TableColumn.SORT.ASCENDING);
column.setRenderTemplate("${LAST_UPDATE_STRING}");
this.m_myNotesTable.addColumn(column);
recordData.NOTES.sort(function(a,b){var d1=new Date();
var d2=new Date();
d1.setISO8601(a.UPDATE_DATE);
d2.setISO8601(b.UPDATE_DATE);
if(d1<d2){return 1;
}else{if(d1>d2){return -1;
}else{return 0;
}}});
this.m_myNotesTable.bindData(recordData.NOTES);
var cellClickExtension=new TableCellClickCallbackExtension();
cellClickExtension.setCellClickCallback(function(event,data){self.onMyNoteRowClick(event,data);
});
this.m_myNotesTable.addExtension(cellClickExtension);
this.m_myNotesTable.toggleColumnSort=function(columnId){ComponentTable.prototype.toggleColumnSort.call(this,columnId);
self.m_myNoteDialog.setFooterButtonDither(compId+"okButton",true);
};
return(this.m_myNotesTable.render());
};
ChargesO1Component.prototype.onMyNoteRowClick=function(event,data){var $selRow=$(event.target).parents("dl.result-info");
if(!$selRow.length||data.RESULT_DATA===null){return;
}var compId=this.getComponentId();
var prevRow=$("#charges-o1"+compId+"tableBody").find(".charges-o1-row-selected");
if(($selRow.find("span").attr("charged-ind"))==="0"){if(prevRow.length>0){prevRow.removeClass("charges-o1-row-selected");
}$selRow.addClass("charges-o1-row-selected");
this.m_myNoteDialog.setFooterButtonDither(compId+"okButton",false);
this.m_myNote=data.RESULT_DATA;
}};
ChargesO1Component.prototype.ditherChargedNotes=function(notes){var compID=this.getComponentId();
for(var i=0;
i<notes.length;
i++){var $curNote=$("#charges-o1"+compID+"tableBody").find("[event-id="+notes[i].EVENT_ID+"]").parent().parent();
if(notes[i].CHARGED_IND===1&&$curNote.length){$curNote.addClass("dither-note");
}}};
ChargesO1Component.prototype.updateAssociatedNote=function(noteID){var chargesMap=this.convertHistoryMapToArray();
var charged=false;
var response={MY_NOTE:{},NOTES:[]};
var myNotes=this.m_myNotes;
var newNote={HAS_NOTE:1,EVENT_ID:0,EVENT_CD:0,EVENT_CD_DISP:0,CHARGED_IND:0,RESULT_STATUS_CD_DISP:"",SUBJECT:"--",UPDATE_DATE:""};
for(var i=0;
i<chargesMap.length;
i++){var charge=chargesMap[i];
if(charge.EXT_ITEM_EVENT_ID.toString()===noteID.toString()&&charge.EXT_ITEM_EVENT_CONT_DISP==="CLIN EVENT"){charged=true;
for(var j=0;
j<myNotes.length;
j++){var note=myNotes[j];
if(myNotes[j].EVENT_ID.toString()===noteID.toString()&&note.CHARGED_IND===0){myNotes[j].CHARGED_IND=1;
myNotes[j].HAS_NOTE=1;
break;
}}if(charged){break;
}}}if((this.m_myNote.EVENT_ID.toString()===noteID.toString()&&charged)||noteID===0){this.m_myNote.CHARGED_IND=1;
}response.MY_NOTE=this.m_myNote;
response.NOTES=myNotes;
this.m_myNotes=myNotes;
this.m_myNote=this.getAssociatedNote(response);
this.updateMySelectedNote();
};
ChargesO1Component.prototype.highlightSelectedNote=function(){var compId=this.getComponentId();
var $curselectedNote=$("#charges-o1"+compId+"tableBody").find("[event-id="+this.getSelectedNoteEventId()+"]").parent();
if($curselectedNote.length){$curselectedNote.mouseup();
}else{this.m_myNoteDialog.setFooterButtonDither(compId+"okButton",true);
}};
ChargesO1Component.prototype.processNoteRecordData=function(recordData){var lastUpdateString="--";
var elapsedTimeString="--";
var updateDateTime=new Date();
var noteCount=recordData.NOTES.length;
for(var index=noteCount;
index--;
){var note=recordData.NOTES[index];
if(note.UPDATE_DATE!==""){updateDateTime.setISO8601(note.UPDATE_DATE);
lastUpdateString=updateDateTime.format("longDateTime2");
elapsedTimeString=MP_Util.CalcWithinTime(updateDateTime);
}note.LAST_UPDATE_STRING=lastUpdateString;
note.ELAPSED_DATE_TIME_STRING=elapsedTimeString+" "+i18n.discernabu.charges_o1.AGO;
note.SUBJECT_DISPLAY="<span charged-ind = '"+note.CHARGED_IND+"' event-id = '"+note.EVENT_ID+"'>"+(note.SUBJECT||"--")+"</span>";
}};
ChargesO1Component.prototype.buildMyNoteSection=function(){var compID=this.getComponentId();
var noteInfoHtml="";
var warningMessageHtml="";
var addNoteHtml="";
var chargesi18n=i18n.discernabu.charges_o1;
if(!this.isnCodeServerRunning()){return"";
}if(this.m_myNote&&this.m_myNote.HAS_NOTE===1){noteInfoHtml="<div id='"+compID+"myNoteSelected' class='charges-o1-my-note-selected'><div id='"+compID+"myNoteSubject' class ='charges-o1-my-note-info charges-o1-secondary-text'>"+chargesi18n.ASSOCIATED_NOTE+": <span class='charges-o1-note-subject'>"+(this.m_myNote.SUBJECT||"--")+"</span></div></div>";
if(this.isAddNoteEnabled()){addNoteHtml="<a id='"+compID+"addNote'>"+chargesi18n.ADD_NOTE+"</a>";
}this.setSelectedNoteEventId(this.m_myNote.EVENT_ID);
}else{warningMessageHtml="<p class='charges-o1-my-note-message'>"+chargesi18n.NO_NOTES_AVAILABLE+"</p>";
}return("<div id='"+compID+"MyNoteContainer' class ='charges-o1-my-note-container'>"+noteInfoHtml+warningMessageHtml+"</div>"+addNoteHtml);
};
ChargesO1Component.prototype.formatDateForCCL=function(dateObj){var monthMapping=["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"];
var dateStr="";
dateStr+=(dateObj.getDate()<10)?"0"+dateObj.getDate():""+dateObj.getDate();
dateStr+="-"+monthMapping[dateObj.getMonth()];
dateStr+="-"+dateObj.getFullYear();
return dateStr;
};
ChargesO1Component.prototype.setVisitTypeCDFMeaning=function(visitTypeCDFMeaning){if(typeof visitTypeCDFMeaning!=="string"){throw new Error("Invalid Visit Type CDF Meaning nCode in 'setVisitTypeCDFMeaning'");
}this.m_visitTypeObj=visitTypeCDFMeaning;
};
ChargesO1Component.prototype.getVisitTypeCDFMeaning=function(){return this.m_visitTypeObj;
};
ChargesO1Component.prototype.setLevelOfServiceFromCPTCode=function(cptCode){if(typeof cptCode!=="number"){throw new Error("Invalid CPT Code in 'setLevelOfServiceFromCPTCode'");
}this.m_levelOfService=cptCode%10;
};
ChargesO1Component.prototype.getLevelOfServiceFromCPTCode=function(){return this.m_levelOfService;
};
ChargesO1Component.prototype.setRecommendedNcode=function(recommendedNcode){if(typeof recommendedNcode!=="number"){this.m_recNcode=0;
throw new Error("Invalid Recommended nCode in 'setRecommendedNcode'");
}this.m_recNcode=recommendedNcode;
};
ChargesO1Component.prototype.getRecommendedNcode=function(){return this.m_recNcode;
};
ChargesO1Component.prototype.getNcodeRecommendations=function(){var compID=this.getComponentId();
var self=this;
var criterion=self.getCriterion();
var catagoryMean=criterion.category_mean;
var visitType="";
switch(self.getCurrentCPTCode()){case"99201":case"99202":case"99203":case"99204":case"99205":visitType="NEW";
break;
case"99221":case"99222":case"99223":visitType="INITIAL_INPATIENT_CARE";
break;
case"99231":case"99232":case"99233":visitType="SUBSEQUENT_HOSPITAL_CARE";
break;
case"99238":case"99239":visitType="DISCHARGE_DAY_MANAGEMENT";
break;
case"99241":case"99242":case"99243":case"99244":case"99245":visitType="CONSULT";
break;
case"99211":case"99212":case"99213":case"99214":case"99215":visitType="ESTABLISHED";
break;
case"99281":case"99282":case"99283":case"99284":case"99285":visitType="EMERGENCY";
break;
}if(self.isnCodeServerRunning()&&self.getSelectedNoteEventId()!==0){if(visitType){var scriptRequest=new ScriptRequest();
var nCodeRecommendedLoadTimer=new RTMSTimer("USR:MPG_CHARGES.O1_load_ncode_recommended_CPT",catagoryMean);
if(nCodeRecommendedLoadTimer){scriptRequest.setLoadTimer(nCodeRecommendedLoadTimer);
}var assignedSpecialty=(self.getAssignedSpecialty()!==""&&self.getAssignedSpecialty()!=="Default")?self.getAssignedSpecialty():"Internal medicine";
var df=MP_Util.GetDateFormatter();
var visitDate=new Date(this.m_encounterStartDate);
visitDate=visitDate.getFullYear()+"-"+(visitDate.getMonth()+1)+"-"+visitDate.getDate();
scriptRequest.setProgramName("mp_get_charges_ncode_info");
scriptRequest.setAsyncIndicator(true);
scriptRequest.setParameterArray(["^MINE^","^"+assignedSpecialty+"^",self.getSelectedNoteEventId(),criterion.provider_id,"^"+visitDate+"^","^"+visitType+"^","^"+self.getLevelOfServiceFromCPTCode()+"^"]);
scriptRequest.setResponseHandler(function(reply){self.handleRecommendedNcodeResponse(reply);
});
$("#"+compID+"recommededNcode").html("&nbsp;").addClass("loading-spinner");
$("#"+compID+"recNcodeSupp").html(i18n.discernabu.charges_o1.SUPPORTED);
scriptRequest.performRequest();
}else{$("#"+compID+"nCodeWarn").html(this.getNcodeWarningHTML(self.getCurrentCPTCode(),""));
}}};
ChargesO1Component.prototype.handleRecommendedNcodeResponse=function(reply){var compID=this.getComponentId();
var self=this;
var criterion=self.getCriterion();
var catagoryMean=criterion.category_mean;
var nCodeRecommendedRenderTimer=new RTMSTimer("ENG:MPG_CHARGES.O1_render_ncode_recommended_CPT",catagoryMean);
try{if(nCodeRecommendedRenderTimer){nCodeRecommendedRenderTimer.start();
}var responseNcodeInfo=reply.getResponse();
this.setRecommendedNcode(parseInt(responseNcodeInfo.NCODEINFO.CAC_CODE));
$("#"+compID+"recommededNcode").html(responseNcodeInfo.NCODEINFO.CAC_CODE);
$("#"+compID+"recommededNcode").removeClass("loading-spinner");
$("#"+compID+"recNcodeSupp").html("&nbsp;");
$(".charges-o1-rp-ncode-val").css("padding-right","5px");
$("#"+compID+"nCodeWarn").html(self.getNcodeWarningHTML(self.getCurrentCPTCode(),self.getRecommendedNcode()));
self.generateAdvisoryDetailsHover(responseNcodeInfo);
self.setSuggestedDiagnoses(responseNcodeInfo.NCODEINFO.DIAGNOSES);
self.populateSuggestedDiagnoses();
self.removeDuplicateDiagnoses();
self.refreshDiagnosesSection();
this.toggleButtons();
if(nCodeRecommendedRenderTimer){nCodeRecommendedRenderTimer.stop();
}}catch(err){if(nCodeRecommendedRenderTimer){nCodeRecommendedRenderTimer.fail();
nCodeRecommendedRenderTimer=null;
}logger.logJSError(err,self,"charges-o1.js","handleRecommendedNcodeResponse");
}finally{self.chargesSidePaneObj.collapseSidePanel();
self.chargesSidePaneObj.expandSidePanel();
}};
ChargesO1Component.prototype.removeDuplicateDiagnoses=function(){var suggestedDiagnoses=this.getSuggestedDiagnoses();
if(!suggestedDiagnoses){return;
}var diagnosesCount=suggestedDiagnoses.length;
for(var index=0;
index<diagnosesCount;
index++){this.getUnassociatedConditionsObj().removeConditionByTargetNomenId(suggestedDiagnoses[index].TARGET_NOMENCLATURE_ID);
}};
ChargesO1Component.prototype.populateSuggestedDiagnoses=function(){var suggestedDiagnoses=this.getSuggestedDiagnoses();
if(!suggestedDiagnoses){return;
}var associatedConditions=this.getAssociatedConditionsObj();
associatedConditions.clearConditions();
var diagnosesCount=suggestedDiagnoses.length;
for(var index=0;
index<diagnosesCount;
index++){var diagnose=suggestedDiagnoses[index];
if(diagnose.TARGET_NOMENCLATURE_ID){var obj={};
obj.HTML_ID=this.getComponentId()+"SuggestedDiagRow"+index;
obj.INDEX=index;
obj.NOMEN_ID=diagnose.TARGET_NOMENCLATURE_ID;
obj.TARGET_NOMENCLATURE_ID=diagnose.TARGET_NOMENCLATURE_ID;
obj.CONDITION=[];
obj.CONDITION.DISPLAY=diagnose.DESCRIPTION_DISPLAY;
diagnose.TARGET_CODE=diagnose.CODE;
diagnose.IS_SUGGESTED=true;
obj.CONDITION.DIAGNOSES=[diagnose];
associatedConditions.addCondition(obj);
}}};
ChargesO1Component.prototype.generateAdvisoryDetailsHover=function(data){var compID=this.getComponentId();
var self=this;
var adviceInfo=data.NCODEINFO.ADVICE;
var detailsLink=$("#"+compID+"advisoryDetails");
var advInfoDOM=null;
var advisoryPopover=new MPageUI.Popup();
advisoryPopover.setAnchorId(compID+"advisoryDetails");
advisoryPopover.setWidth(MPageUI.POPUP_OPTIONS.WIDTH.MEDIUM);
advisoryPopover.setPosition(MPageUI.POPUP_OPTIONS.POSITION.LEFT);
if(adviceInfo!==""){adviceInfo=adviceInfo.replace(/([XVIL]+\.)/g,"<br>$1");
adviceInfo=adviceInfo.replace(/([1-9][.])/g,"<br>&nbsp;&nbsp;&nbsp;&nbsp;$1");
detailsLink.on("click",function(){advisoryPopover.setBodyContent("<div id='charges-o1-adv-info'>"+adviceInfo+"</div>");
advisoryPopover.toggle();
advInfoDOM=$("#charges-o1-adv-info");
self.bindEventsForAdvisoryPopover(advInfoDOM,advisoryPopover);
});
}else{detailsLink.on("click",function(){advisoryPopover.setBodyContent("<div id='charges-o1-adv-info'>"+i18n.discernabu.charges_o1.NO_ADVICE+"<div>");
advisoryPopover.toggle();
advInfoDOM=$("#charges-o1-adv-info");
self.bindEventsForAdvisoryPopover(advInfoDOM,advisoryPopover);
});
}};
ChargesO1Component.prototype.bindEventsForAdvisoryPopover=function(advInfoDOM,advisoryPopover){var popupTimerObj=null;
function hidePopup(){if(advisoryPopover.isOpen()){advisoryPopover.hide();
}}popupTimerObj=setTimeout(hidePopup,4000);
advInfoDOM.unbind("mouseleave");
advInfoDOM.on("mouseleave",function(event){if(advisoryPopover.isOpen()){advisoryPopover.hide();
}});
advInfoDOM.unbind("mouseenter");
advInfoDOM.on("mouseenter",function(event){if(popupTimerObj!==null){window.clearTimeout(popupTimerObj);
}});
};
ChargesO1Component.prototype.getNcodeWarningHTML=function(cptCode,recommendedNcode){var html="";
var compID=this.getComponentId();
if(!cptCode){throw new Error("Invalid CPT code in 'getNcodeWarningHTML'");
return;
}if(!recommendedNcode){html=MP_Core.generateUserMessageHTML("information",i18n.discernabu.charges_o1.NCODE_UNAVAILABLE,"","inline-message");
$("#"+compID+"recNcodeSupp").html("");
$("#"+compID+"nCodeWarn").removeClass("charges-o1-ncode-warn").addClass("charges-o1-ncode-unavail");
$("#"+compID+"recommededNcode").html("&nbsp;");
}else{$("#"+compID+"useThisAnchor").html(i18n.discernabu.charges_o1.USE_THIS);
$("#"+compID+"recNcodeSupp").html(i18n.discernabu.charges_o1.SUPPORTED);
if(recommendedNcode%10===0){html=MP_Core.generateUserMessageHTML("warning",i18n.discernabu.charges_o1.NCODE_UNABLE_TO_RECOMMEND,"","inline-message");
html+="<div class='charges-o1-details-link'><a id='"+compID+"advisoryDetails'>"+i18n.discernabu.charges_o1.DETAILS+"</a></div>";
}else{if(recommendedNcode>=this.getSelectedVisitCPTRange().start&&recommendedNcode<=this.getSelectedVisitCPTRange().end){if(recommendedNcode>cptCode){html=MP_Core.generateUserMessageHTML("warning",i18n.discernabu.charges_o1.YOUR_DOC_LEVEL+" ("+recommendedNcode+").",i18n.discernabu.charges_o1.LOWER_THAN_RECOMMENDED_NCODE+" ("+cptCode+").","inline-message");
html+="<div class='charges-o1-details-link'><a id='"+compID+"advisoryDetails'>"+i18n.discernabu.charges_o1.DETAILS+"</a></div>";
}else{if(recommendedNcode<cptCode){html=MP_Core.generateUserMessageHTML("warning",i18n.discernabu.charges_o1.YOUR_DOC_LEVEL+" ("+recommendedNcode+").",i18n.discernabu.charges_o1.HIGHER_THAN_RECOMMENDED_NCODE+" ("+cptCode+").","inline-message");
html+="<div class='charges-o1-details-link'><a id='"+compID+"advisoryDetails'>"+i18n.discernabu.charges_o1.DETAILS+"</a></div>";
}}}else{if(recommendedNcode>cptCode){html=MP_Core.generateUserMessageHTML("warning",i18n.discernabu.charges_o1.YOUR_DOC_LEVEL+" ("+recommendedNcode+").",i18n.discernabu.charges_o1.HIGHER_THAN_RECOMMENDED_NCODE+" ("+cptCode+").","inline-message");
html+="<div class='charges-o1-details-link'><a id='"+compID+"advisoryDetails'>"+i18n.discernabu.charges_o1.DETAILS+"</a></div>";
}else{if(recommendedNcode<cptCode){html=MP_Core.generateUserMessageHTML("warning",i18n.discernabu.charges_o1.YOUR_DOC_LEVEL+" ("+recommendedNcode+").",i18n.discernabu.charges_o1.LOWER_THAN_RECOMMENDED_NCODE+" ("+cptCode+").","inline-message");
html+="<div class='charges-o1-details-link'><a id='"+compID+"advisoryDetails'>"+i18n.discernabu.charges_o1.DETAILS+"</a></div>";
}}}}}return html;
};
ChargesO1Component.prototype.bindUseThisNcodeAction=function(){var self=this;
var compID=self.getComponentId();
$("#"+compID+"useThisAnchor").unbind("click");
$("#"+compID+"useThisAnchor").click(function(){self.setCurrentCPTCode($("#"+compID+"recommededNcode").html());
$("#"+compID+"RPCPTVal").html(self.getCurrentCPTCode());
$("#"+compID+"nCodeWarn").remove();
self.removeSelRowBgColor();
self.setSelectedModifier(0);
self.setPopupObj(null);
var chargesUseThisTimer=new CapabilityTimer("CAP:MPG_Charges-o1_use_supported_CPT_code",self.getCriterion().category_mean);
if(chargesUseThisTimer){chargesUseThisTimer.capture();
}self.chargesSidePaneObj.collapseSidePanel();
self.chargesSidePaneObj.expandSidePanel();
});
};
ChargesO1Component.prototype.createChargeSubmitFailBanner=function(){var errorBanner=new MPageUI.AlertBanner();
errorBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
errorBanner.setPrimaryText(i18n.discernabu.charges_o1.FAILED_SUBMIT_CHARGE_PRIMARY_MSG);
errorBanner.setSecondaryText(i18n.discernabu.charges_o1.FAILED_SUBMIT_CHARGE_SEC_MSG);
return(errorBanner.render());
};
ChargesO1Component.prototype.createChargeRetrieveFailBanner=function(){var errorBanner=new MPageUI.AlertBanner();
errorBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
errorBanner.setPrimaryText(i18n.discernabu.charges_o1.FAILED_RETRIEVE_CHARGE_PRIMARY_MSG);
errorBanner.setSecondaryText(i18n.discernabu.charges_o1.FAILED_RETRIEVE_CHARGE_SEC_MSG);
return(errorBanner.render());
};
ChargesO1Component.prototype.generateSpecialtyDropDownHTML=function(){var compID=this.getComponentId();
var jsHTML="";
var specialtyDropDown=this.getSpecialtyList();
var specialtyArrLen=specialtyDropDown.length;
jsHTML+=("<select id='ChargeSpecialtyDropDown' class='charges-o1-specialty-drop-down'>");
jsHTML+="<option id='"+compID+"SpecialtyDefaultOption' class='charges-o1-default-option'>"+i18n.discernabu.charges_o1.SELECT_SPECIALTY+"</option>";
for(var i=0;
i<specialtyArrLen;
i++){jsHTML+=("<option value="+i+">"+specialtyDropDown[i].SPECIALTY_VALUE+"</option>");
}jsHTML+=("</select>");
return jsHTML;
};
ChargesO1Component.prototype.createSpecialtyPopup=function(){try{var specialtyPopup=null;
var compID=this.getComponentId();
var popupTimerObj=null;
specialtyPopup=new MPageUI.Popup();
specialtyPopup.setAnchorId("mainCompMenucharges"+compID);
specialtyPopup.setWidth(MPageUI.POPUP_OPTIONS.WIDTH.SMALL);
specialtyPopup.setPosition(MPageUI.POPUP_OPTIONS.POSITION.BOTTOM_RIGHT);
specialtyPopup.setBodyContent(i18n.discernabu.charges_o1.CHANGE_IN_COMPONENT_LEVEL_MENU);
specialtyPopup.show();
function hidePopup(){if(specialtyPopup.isOpen()){specialtyPopup.hide();
}}popupTimerObj=setTimeout(hidePopup,4000);
$("#mainCompMenucharges"+compID).click(function(){if(specialtyPopup.isOpen()){specialtyPopup.hide();
}if(popupTimerObj!==null){window.clearTimeout(popupTimerObj);
}});
}catch(err){MP_Util.LogJSError(this,err,"charges-o1.js","createSpecialtyPopup");
}};
ChargesO1Component.prototype.addSpecialtyWhenLaunchedFromDocumentation=function(){try{var userPrefs=this.getPreferencesObj();
this.createMainMenu();
var compMenu=this.getMenu();
var compID=this.getComponentId();
var compNS=this.getStyles().getNameSpace();
var menuId="specialty"+compID;
var self=this;
if(userPrefs){if($("#"+compMenu.getAnchorElementId()).hasClass("opts-menu-empty")){$("#"+compMenu.getAnchorElementId()).removeClass("opts-menu-empty").click(function(){MP_MenuManager.showMenu(compMenu.getAnchorElementId());
});
}if($("#"+compMenu.getAnchorElementId()).hasClass("menu-hide")){$("#"+compMenu.getAnchorElementId()).removeClass("menu-hide").click(function(){MP_MenuManager.showMenu(compMenu.getAnchorElementId());
});
}if(compMenu){var compMenuSpec=new MenuSelection(menuId);
compMenuSpec.setLabel(userPrefs);
compMenuSpec.setIsSelected(true);
compMenu.addMenuItem(compMenuSpec);
self.setAssignedSpecialty("");
compMenuSpec.setClickFunction(function(clickEvent){clickEvent.id=menuId;
compMenu.removeMenuItem(compMenuSpec);
if(!compMenu.m_menuItemArr.length){document.getElementById("mainCompMenu"+compNS+compID).classList.add("opts-menu-empty");
}self.setAssignedSpecialty("");
self.setPreferencesObj(null);
self.savePreferences(true);
self.retrieveComponentData();
});
}}}catch(err){MP_Util.LogJSError(this,err,"charges-o1.js","addSpecialtyWhenLaunchedFromDocumentation");
}};
ChargesO1Component.prototype.addSpecialtyAssignEventHandler=function(){try{var self=this;
var compID=self.getComponentId();
var specialtyAssignButton=$("#specialtyAssignBtn"+compID);
var specialtyDropDownId=document.getElementById("ChargeSpecialtyDropDown");
if(specialtyDropDownId&&specialtyDropDownId.selectedIndex===0){if(specialtyAssignButton.hasClass("charges-o1-specialty-assign-button")){specialtyAssignButton.removeClass("charges-o1-specialty-assign-button");
specialtyAssignButton.addClass("charges-o1-specialty-assign-btn-disable");
}}$("#specialtyAssignBtn"+self.getComponentId()).on("click",function(){var chargesAssignSpecialtyTimer=new CapabilityTimer("CAP:MPG_CHARGES-o1_Assign_Specialty",self.getCriterion().category_mean);
if(chargesAssignSpecialtyTimer){chargesAssignSpecialtyTimer.capture();
}var compMenu=self.getMenu();
var menuId="specialty"+compID;
var assignedSpecialtyUserPrefs="Internal medicine";
if(specialtyDropDownId&&specialtyDropDownId.selectedIndex>0){assignedSpecialtyUserPrefs=specialtyDropDownId.options[specialtyDropDownId.selectedIndex].text;
}self.setAssignedSpecialty(assignedSpecialtyUserPrefs);
self.setPreferencesObj(assignedSpecialtyUserPrefs);
self.savePreferences(true);
if($("#"+compMenu.getAnchorElementId()).hasClass("opts-menu-empty")){$("#"+compMenu.getAnchorElementId()).removeClass("opts-menu-empty").click(function(){MP_MenuManager.showMenu(compMenu.getAnchorElementId());
});
}if(compMenu){var compMenuSpec=new MenuSelection(menuId);
compMenuSpec.setLabel(self.getAssignedSpecialty());
compMenuSpec.setIsSelected(true);
compMenu.addMenuItem(compMenuSpec);
compMenuSpec.setClickFunction(function(clickEvent){clickEvent.id=menuId;
compMenu.removeMenuItem(compMenuSpec);
if(!compMenu.m_menuItemArr.length){$("#"+compMenu.getAnchorElementId()).addClass("opts-menu-empty");
}self.setAssignedSpecialty("");
$("#"+compID+"SpecialtyBanner").show();
if(specialtyDropDownId){if(specialtyDropDownId.options[0]){specialtyDropDownId.options[0].selected=true;
}document.getElementById("specialtyAssignBtn"+compID).disabled=true;
if($("#specialtyAssignBtn"+compID).hasClass("charges-o1-specialty-assign-button")){$("#specialtyAssignBtn"+compID).removeClass("charges-o1-specialty-assign-button");
$("#specialtyAssignBtn"+compID).addClass("charges-o1-specialty-assign-btn-disable");
}}self.setPreferencesObj(null);
self.savePreferences(true);
});
}$("#"+compID+"SpecialtyBanner").hide();
self.createSpecialtyPopup();
});
}catch(err){MP_Util.LogJSError(self,err,"charges-o1.js","addSpecialtyAssignEventHandler");
}};
ChargesO1Component.prototype.createSpecialtyBanner=function(){var compId=this.getComponentId();
var specialtyBannerHTML="<div class='charges-o1-specialty-banner-color'><div class='charges-o1-specialty-info-icon'></div>";
specialtyBannerHTML+="<div class='charges-o1-specialty-info-label' id='specialtyInfoLabel"+compId+"'>"+i18n.discernabu.charges_o1.SET_PHYSICIAN_SPECIALTY_CODE_CHARGES+"</div>";
specialtyBannerHTML+="<div class='charges-o1-specialty-label' id='specialtyLabel"+compId+"'>"+i18n.discernabu.charges_o1.PHYSICIAN_SPECIALTY+"&nbsp<div class='charges-o1-specialty-list' id='specialtylist"+compId+"'>"+this.generateSpecialtyDropDownHTML()+"<div class='charges-o1-specialty-btn' id='specialtyAssignBtnDiv"+compId+"'><button class='charges-o1-specialty-assign-button' id='specialtyAssignBtn"+compId+"'>"+i18n.discernabu.charges_o1.ASSIGN+"</button></div></div></div></div>";
return specialtyBannerHTML;
};
ChargesO1Component.prototype.buildComponentBaseHTML=function(){var compID=this.getComponentId();
var html="";
html+="<div id='"+compID+"SpecialtyBanner' class='charges-o1-specialty-banner'>"+this.createSpecialtyBanner()+"</div>";
html+="<div id='"+compID+"SubmitErrorBanner' class='charges-o1-submit-fail-banner'>"+this.createChargeSubmitFailBanner()+"</div>";
html+="<div id='"+compID+"RetrieveErrorBanner' class='charges-o1-retrieve-fail-banner'>"+this.createChargeRetrieveFailBanner()+"</div>";
html+="<div id='"+compID+"Container' class='charges-o1-container'>";
html+="<div id='"+compID+"ContentContainer' class='charges-o1-content-cont'>";
html+="<div id='"+compID+"HistoryContainer' class='charges-o1-history-container'>";
html+="<div>";
html+="<span class='charges-o1-rolling-table-title'>"+i18n.discernabu.charges_o1.MY_CHARGES+"</span>";
html+="<a id='"+compID+"ToggleHistoricalTable' data-action='show'>"+i18n.discernabu.charges_o1.SHOW_CHARGE_HISTORY+"</a>";
html+="</div>";
html+="<div id='"+compID+"RollingHistoryContainer'>";
html+="</div>";
html+="<div id='"+compID+"HistoryTableContainer'></div>";
html+="</div>";
html+=this.buildMyNoteSection();
html+="<div class='charges-o1-cpt-table-cont'>";
html+="<div id='"+compID+"CPTTableInstructions' class='charges-o1-cpt-table-header'>";
html+=this.buildControlsSection();
html+="<span class='charges-o1-cpt-table-header-blank-cell'>&nbsp;</span>";
html+="<span class='charges-o1-cpt-table-header-instructions'>&nbsp;</span>";
html+="</div>";
html+="<div id='"+compID+"CPTTableContainer'>";
html+=this.buildBlankCPTTable();
html+="</div>";
html+="<div id='"+compID+"CPTTableFiller' class='charges-o1-table-filler'></div>";
html+="</div>";
html+="</div>";
html+="<div id='"+compID+"SidePaneContainer' class='charges-o1-sidepane-cont'>";
html+="</div>";
html+="</div>";
html+="</div>";
return html;
};
(function(){function RollingTable(component){this.m_id="";
this.m_component=component;
this.m_columnTemplate=null;
this.m_blankColumnTemplate=null;
this.m_numOfColumnsToDisplay=7;
this.m_numOfColumnsToPage=7;
this.m_css="";
this.m_activeIndex=null;
this.m_activeKey=null;
this.m_startIndex=null;
this.m_endIndex=null;
this.m_columns=null;
this.m_columnMap=null;
this.m_isDatepickerEnabled=false;
this.m_datepickerOptions=null;
}RollingTable.prototype.getId=function(){return this.m_id;
};
RollingTable.prototype.setId=function(id){this.m_id=id;
};
RollingTable.prototype.getComponent=function(){return this.m_component;
};
RollingTable.prototype.getNumOfColumnsToDisplay=function(){return this.m_numOfColumnsToDisplay;
};
RollingTable.prototype.setNumOfColumnsToDisplay=function(num){if(typeof num!=="number"){return;
}this.m_numOfColumnsToDisplay=num;
};
RollingTable.prototype.getNumOfColumnsToPage=function(){return this.m_numOfColumnsToPage;
};
RollingTable.prototype.setNumOfColumnsToPage=function(num){if(typeof num!=="number"){return;
}this.m_numOfColumnsToPage=num;
};
RollingTable.prototype.getCSS=function(){return this.m_css;
};
RollingTable.prototype.setCSS=function(css){if(typeof css!=="string"){return;
}this.m_css=css;
};
RollingTable.prototype.getActiveIndex=function(){return this.m_activeIndex;
};
RollingTable.prototype.setActiveIndex=function(indx){if(typeof indx!=="number"){return;
}this.m_activeIndex=indx;
};
RollingTable.prototype.getStartIndex=function(){return this.m_startIndex;
};
RollingTable.prototype.setStartIndex=function(indx){if(typeof indx!=="number"){return;
}this.m_startIndex=indx;
};
RollingTable.prototype.getEndIndex=function(){return this.m_endIndex;
};
RollingTable.prototype.setEndIndex=function(indx){if(typeof indx!=="number"){return;
}this.m_endIndex=indx;
};
RollingTable.prototype.getColumns=function(){if(!this.m_columns){this.m_columns=[];
}return this.m_columns;
};
RollingTable.prototype.setColumns=function(cols){this.m_columns=cols;
};
RollingTable.prototype.getColumnMap=function(){if(!this.m_columnMap){this.m_columnMap={};
}return this.m_columnMap;
};
RollingTable.prototype.setColumnMap=function(map){this.m_columnMap=map;
};
RollingTable.prototype.getColumnTemplate=function(){return this.m_columnTemplate;
};
RollingTable.prototype.setColumnTemplate=function(column){if(!(column instanceof RollingColumn)){return;
}this.m_columnTemplate=column;
};
RollingTable.prototype.getBlankColumnTemplate=function(){return this.m_blankColumnTemplate;
};
RollingTable.prototype.setBlankColumnTemplate=function(column){if(!(column instanceof RollingColumn)){return;
}this.m_blankColumnTemplate=column;
};
RollingTable.prototype.isDatepickerEnabled=function(){return this.m_isDatepickerEnabled;
};
RollingTable.prototype.setIsDatepickerEnabled=function(flag){this.m_isDatepickerEnabled=!!flag;
};
RollingTable.prototype.getDatepickerOptions=function(){return this.m_datepickerOptions;
};
RollingTable.prototype.setDatepickerOptions=function(options){this.m_datepickerOptions=options;
};
RollingTable.prototype.buildColumn=function(template,data,id){var columnTemplate=template;
var headerField=columnTemplate.getHeaderField();
var bodyField=columnTemplate.getBodyField();
var headerCSS=columnTemplate.getHeaderCSS();
var bodyCSS=columnTemplate.getBodyCSS();
var columnCSS=columnTemplate.getColumnCSS();
var columnID=id;
var sHeader="";
var sBody="";
var sDoc="";
var html="";
if(data){if(data[headerField]){sHeader=data[headerField];
}if(data[bodyField]){sBody=data[bodyField];
sDoc=data.DOCUMENT||"--";
}}columnCSS+=" rolling-table-column";
if(columnID){html+="<span id='"+columnID+"' class='"+columnCSS+"'>";
}else{html+="<span class='"+columnCSS+"'>";
}html+="<div class='"+headerCSS+"'>"+sHeader+"</div>";
html+="<div class='"+bodyCSS+"'><div>"+sBody+"</div><div class='charges-o1-charged-doc'>"+sDoc+"</div></div>";
html+="</span>";
return html;
};
RollingTable.prototype.buildRow=function(){var columns=this.getColumns();
var colLen=columns.length;
var i;
var startIndex=this.getStartIndex();
var endIndex=this.getEndIndex();
var activeIndex=this.getActiveIndex();
var numColumnsToDisplay=this.getNumOfColumnsToDisplay();
var html="";
var tmpCSS="";
if(endIndex<startIndex||(colLen<=startIndex)){return;
}for(i=startIndex;
i<=endIndex;
i++){if(i<colLen){html+=columns[i];
}else{if(i===colLen||i===startIndex){tmpCSS=this.getBlankColumnTemplate().getColumnCSS();
this.getBlankColumnTemplate().setColumnCSS(tmpCSS+" first");
}else{if(i===endIndex){this.getBlankColumnTemplate().setColumnCSS(tmpCSS+" last");
}}html+=this.buildColumn(this.getBlankColumnTemplate(),null,null);
this.getBlankColumnTemplate().setColumnCSS(tmpCSS);
}}if(this.isDatepickerEnabled()){html+="<span class='charges-o1-date-col'><input style='display:none;' id='"+this.getId()+"DateBox' type='button' /></span>";
}return html;
};
RollingTable.prototype.buildTable=function(){var columns=this.getColumns();
var startIndex=this.getStartIndex();
var endIndex=this.getEndIndex();
var numColumnsToDisplay=this.getNumOfColumnsToDisplay();
var tableID=this.getId();
var tableCSS=this.getCSS();
var html="";
if(!tableID||columns.length===0){return;
}if(this.getStartIndex()===null){this.setStartIndex(0);
}if(this.getEndIndex()===null){this.setEndIndex(this.getStartIndex()+(numColumnsToDisplay-1));
}html+="<div id='"+tableID+"' class='"+tableCSS+"'>";
html+=this.buildRow();
html+="</div>";
return html;
};
RollingTable.prototype.clearData=function(){this.m_columns=[];
this.m_columnMap={};
};
RollingTable.prototype.bindData=function(data){if(!data||!(data instanceof Array)){throw new Error("Called bindData on Rolling Table with non Array type for data parameter.  Please pass an Array of JSON results.");
}this.clearData();
var columnTemplate=this.getColumnTemplate();
var dataLength=data.length;
var columns=this.getColumns();
var columnMap=this.getColumnMap();
var idKey="";
var i;
this.m_activeKey=null;
for(i=0;
i<dataLength;
i++){idKey=this.getId()+"Column"+i;
if(this.getActiveIndex()===i){this.m_activeKey=idKey;
}columns.push(this.buildColumn(columnTemplate,data[i],idKey));
columnMap[idKey]=data[i];
}};
RollingTable.prototype.attachColumnBodyHover=function(){var id=this.getId();
var columnMap=this.getColumnMap();
var columnTemplate=this.getColumnTemplate();
var colClass=".rolling-table-column";
var jqTable=$("#"+id);
var hoverFunc=columnTemplate.getHoverFunc();
var hoverTimeout=null;
var tooltip=new MPageTooltip().setShowDelay(0);
var component=this.getComponent();
if(!hoverFunc){return;
}function clearTooltip(){if(tooltip.getContent()){tooltip.getContent().remove();
}if(hoverTimeout){clearTimeout(hoverTimeout);
}}jqTable.on("mouseenter mouseleave",colClass,function(event){var jqCurrentTarget=$(event.currentTarget);
var colID=jqCurrentTarget.prop("id");
if(!colID){return;
}var data=columnMap[colID];
var obj={COLUMN_ID:colID,DATA:data,EVENT:event};
clearTooltip();
if(event.type==="mouseenter"){jqCurrentTarget.addClass("mpage-tooltip-hover");
hoverTimeout=setTimeout(function(){var posX=event.pageX;
var posY=event.pageY;
var html=hoverFunc.apply(component,[obj]);
tooltip.setX(posX).setY(posY).setAnchor(jqCurrentTarget.get(0)).setContent(html);
tooltip.getContent().addClass("charges-o1-tooltip-timeline");
tooltip.show();
},500);
}else{jqCurrentTarget.removeClass("mpage-tooltip-hover");
}});
};
RollingTable.prototype.attachColumnClick=function(){var self=this;
var id=this.getId();
var columnMap=this.getColumnMap();
var columnTemplate=this.getColumnTemplate();
var colClass=".rolling-table-column";
var jqTable=$("#"+id);
var clickFunc=columnTemplate.getClickFunc();
var component=this.getComponent();
var loggedInProviderid=parseInt(component.getCriterion().provider_id,10);
jqTable.on("click",colClass,function(event){var jqCurrentTarget=$(event.currentTarget);
var colID=jqCurrentTarget.prop("id");
var hasHistoricalCPT=false;
var dateObj=null;
if(!colID){return;
}var data=columnMap[colID];
var bucketLength=data.BUCKET.length;
var obj={COLUMN_ID:colID,DATA:data,EVENT:event};
if(!jqCurrentTarget.hasClass("selected")){jqTable.children(".selected").removeClass("selected");
jqCurrentTarget.addClass("selected");
self.m_component.m_isCPTSubmitted=false;
for(var index=0;
index<bucketLength;
index++){var chargesHistoryObj=data.BUCKET[index];
var verifyPhysId=parseInt(chargesHistoryObj.VERIFY_PHYS_ID,10);
var updatedPhysId=parseInt(chargesHistoryObj.UPDT_ID,10);
if(loggedInProviderid===verifyPhysId||loggedInProviderid===updatedPhysId){hasHistoricalCPT=true;
self.m_component.m_isCPTSubmitted=true;
break;
}}clickFunc.apply(component,[hasHistoricalCPT,data]);
if(self.isDatepickerEnabled()){$("#"+id+"DateBox").datepicker("setDate",data.DATE_OBJ);
}}});
};
RollingTable.prototype.attachDatepicker=function(){var id=this.getId();
var jqDatebox=$("#"+id+"DateBox");
jqDatebox.datepicker(this.getDatepickerOptions());
jqDatebox.css("display","");
};
RollingTable.prototype.finalizeTable=function(){this.attachColumnBodyHover();
this.attachColumnClick();
if(this.isDatepickerEnabled()){this.attachDatepicker();
}if(this.m_activeKey){$("#"+this.m_activeKey).click();
}};
function RollingColumn(){this.m_headerField=null;
this.m_bodyField=null;
this.m_headerCSS="";
this.m_bodyCSS="";
this.m_columnCSS="";
this.m_uniqueField=null;
this.m_hoverFunc=null;
this.m_clickFunc=null;
this.m_data=null;
}RollingColumn.prototype.getHeaderField=function(){return this.m_headerField;
};
RollingColumn.prototype.setHeaderField=function(field){if(typeof field!=="string"){return;
}this.m_headerField=field;
};
RollingColumn.prototype.getHeaderCSS=function(){return this.m_headerCSS;
};
RollingColumn.prototype.setHeaderCSS=function(css){if(typeof css!=="string"){return;
}this.m_headerCSS=css;
};
RollingColumn.prototype.getBodyField=function(){return this.m_bodyField;
};
RollingColumn.prototype.setBodyField=function(field){if(typeof field!=="string"){return;
}this.m_bodyField=field;
};
RollingColumn.prototype.getBodyCSS=function(){return this.m_bodyCSS;
};
RollingColumn.prototype.setBodyCSS=function(css){if(typeof css!=="string"){return;
}this.m_bodyCSS=css;
};
RollingColumn.prototype.getColumnCSS=function(){return this.m_columnCSS;
};
RollingColumn.prototype.setColumnCSS=function(css){if(typeof css!=="string"){return;
}this.m_columnCSS=css;
};
RollingColumn.prototype.getUniqueField=function(){return this.m_uniqueField;
};
RollingColumn.prototype.setUniqueField=function(field){if(typeof field!=="string"){return;
}this.m_uniqueField=field;
};
RollingColumn.prototype.getData=function(){return this.m_data;
};
RollingColumn.prototype.setData=function(data){this.m_data=data;
};
RollingColumn.prototype.getHoverFunc=function(){return this.m_hoverFunc;
};
RollingColumn.prototype.setHoverFunc=function(callback){if(typeof callback!=="function"){return;
}this.m_hoverFunc=callback;
};
RollingColumn.prototype.getClickFunc=function(){return this.m_clickFunc;
};
RollingColumn.prototype.setClickFunc=function(callback){if(typeof callback!=="function"){return;
}this.m_clickFunc=callback;
};
ChargesO1Component.prototype.RollingTable=RollingTable.prototype.constructor;
ChargesO1Component.prototype.RollingColumn=RollingColumn.prototype.constructor;
})();
MP_Util.setObjectDefinitionMapping("WF_CHARGES",ChargesO1Component);
