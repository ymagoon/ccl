function DiscernAnalyticsComponentStyle(){this.initByNamespace("da");
}DiscernAnalyticsComponentStyle.inherits(ComponentStyle);
function DiscernAnalyticsComponent(criterion){this.setCriterion(criterion);
this.setStyles(new DiscernAnalyticsComponentStyle());
this.setComponentLoadTimerName("USR:MPG.DISCERNANALYTICS.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.DISCERNANALYTICS.O1 - render component");
this.setIncludeLineNumber(true);
this.setScope(1);
this.daFilter=1;
this.custTxt="";
this.formId="";
DiscernAnalyticsComponent.method("setDAFilter",function(value){this.daFilter=value;
});
DiscernAnalyticsComponent.method("getDAFilter",function(){return(this.daFilter);
});
DiscernAnalyticsComponent.method("setCustTxt",function(value){this.custTxt=value;
});
DiscernAnalyticsComponent.method("getCustTxt",function(){return(this.custTxt);
});
DiscernAnalyticsComponent.method("setFormId",function(value){this.formId=value;
});
DiscernAnalyticsComponent.method("getFormId",function(){return(this.formId);
});
DiscernAnalyticsComponent.method("InsertData",function(){CERN_DISCERN_ANALYTICS_O1.GetDiscernAnalyticsTable(this);
});
DiscernAnalyticsComponent.method("HandleSuccess",function(recordData){CERN_DISCERN_ANALYTICS_O1.RenderComponent(this,recordData);
});
}DiscernAnalyticsComponent.inherits(MPageComponent);
var CERN_DISCERN_ANALYTICS_O1=function(){return{GetDiscernAnalyticsTable:function(component){var sendAr=[];
var criterion=component.getCriterion();
sendAr.push("^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.ppr_cd+".0 ","^"+criterion.category_mean+"^");
MP_Core.XMLCclRequestWrapper(component,"mp_get_discern_analytics",sendAr,true);
},RenderComponent:function(component,recordData){var timerRenderComponent=MP_Util.CreateTimer(component.getComponentRenderTimerName());
try{component.setEditMode(false);
var daArray=[];
var daHTML="";
var countText="";
var daResultsFlg=1;
if(recordData.CONDITION_CNT===0){daArray.push("<span class='res-none'>"+i18n.NO_RESULTS_FOUND+"</span>");
daHTML=daArray.join("");
countText="(0)";
daResultsFlg=0;
}else{var componentId=component.getComponentId();
var dai18n=i18n.discernabu.discern_analytics_o1;
var daFilterStg=component.getDAFilter();
var notMetFilterCnt=recordData.MEAS_NM_CNT;
var totMeasCnt=0;
var filtMeasCnt=0;
var algLink=recordData.ALG_LINK;
if(algLink||component.getCustTxt()){daArray.push("<div><table class='da-staticinfo'><tr><td class='da-updt'>",component.getCustTxt(),"</td>");
if(algLink){var algorithm="<a onclick='MP_Util.Doc.LaunchHelpWindow(\""+algLink+"\")'>"+dai18n.ALGORITHMS+"</a>";
daArray.push("<td class='da-algorithm'>",algorithm,"</td>");
}daArray.push("</tr></table></div>");
}daArray.push("<div class='da-cbo'><form><span class='da-cond-lbl'>"+dai18n.DISPLAY+":</span><select id='daOption",componentId,"'>",SortFilterOptions(component,dai18n),"</select></form></div>");
if(daFilterStg===1&&notMetFilterCnt===0){daArray.push("<h3 class='info-hd'><span class='res-normal'>"+dai18n.ALL_MET+"</span></h3><span class='res-none'>"+dai18n.ALL_MET+"</span>");
}else{var condition=recordData.CONDITION;
var condCnt=recordData.CONDITION_CNT;
if(daFilterStg===1){filtMeasCnt=recordData.MEAS_NM_CNT;
}else{filtMeasCnt=recordData.MEAS_CNT;
}daArray.push("<div class='",MP_Util.GetContentClass(component,filtMeasCnt),"'>");
for(var i=0;
i<condCnt;
i++){var allMeasCnt=condition[i].CMEAS_CNT;
var measCnt=0;
if(daFilterStg==1){measCnt=condition[i].CMEAS_NM_CNT;
}else{measCnt=condition[i].CMEAS_CNT;
}if(measCnt){daArray.push("<div class='sub-sec'><h3 class='sub-sec-hd'><span class='sub-sec-hd-tgl' title='",i18n.HIDE_SECTION,"'>-</span><span class='sub-sec-title'>",condition[i].COND_NAME," (",measCnt,")</span></h3><div class='sub-sec-content'>");
for(var j=0;
j<allMeasCnt;
j++){var measure=condition[i].MEASURES[j];
var measOutcome=measure.OUTCOME_GRP;
if(daFilterStg==1){if(measOutcome>1){daArray.push(buildMeasure(measure,measOutcome,dai18n));
}}else{daArray.push(buildMeasure(measure,measOutcome,dai18n));
}}daArray.push("</div></div>");
}}}daHTML=daArray.join("");
countText=MP_Util.CreateTitleText(component,filtMeasCnt);
}MP_Util.Doc.FinalizeComponent(daHTML,component,countText);
appendDaCompEvents(component,daResultsFlg);
}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}}};
function SortFilterOptions(component,compi18n){var daFilterOptions="";
if(component.getDAFilter()===1){daFilterOptions="<option value='selected'>"+compi18n.NOTMET+"</option><option>"+compi18n.ALL+"</option>";
}else{daFilterOptions="<option value='selected'>"+compi18n.ALL+"</option><option>"+compi18n.NOTMET+"</option>";
}return daFilterOptions;
}function buildMeasure(measure,outcomeGrp,compi18n){var measureAr=[];
var measIcon="";
switch(outcomeGrp){case 0:measIcon="da-meas-exclude";
break;
case 1:measIcon="da-meas-done";
break;
case 2:measIcon="da-meas-notdone";
break;
case 3:measIcon="da-meas-notmet";
break;
default:}var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var updateDT=new Date();
var updatedTime="";
if(measure.EXTRACT_DTTM){updateDT.setISO8601(measure.EXTRACT_DTTM);
updatedTime=df.format(updateDT,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}measureAr.push("<dl class='da-info'><dt class='da-val'>",i18n.MEASUREMENT_DETAILS,"</dt><dd class='da-measure'><span>",measure.MEASURE,"</span></dd><dd class='da-icon'><span class='",measIcon,"'>&nbsp;</span></dd><dd class = 'da-outcome'><span>",measure.OUTCOME_DISP,"</span></dd></dl>");
measureAr.push("<h4 class='det-hd'>",i18n.DETAILS,"</h4><div class='hvr'><dl class='da-det'><dt><span>",compi18n.LASTUPDATED," :</span></dt><dd><span>",updatedTime,"</span></dd></dl></div>");
return measureAr.join("");
}function appendDaCompEvents(component,resultsFlg){var ns=component.getStyles().getNameSpace();
var componentId=component.getComponentId();
if(component.getFormId()){var link=Util.cep("a",{className:"add-plus da-add",id:ns+componentId+"Add"});
var img=Util.cep("span",{className:"add-icon"});
Util.ac(img,link);
var secCL=Util.Style.g("sec-title",_g(ns+componentId),"span");
var secSpanAr=Util.gcs(secCL[0]);
var secSpanLen=secSpanAr.length-1;
var secSpan=secSpanAr[secSpanLen];
Util.ac(link,secSpan);
Util.addEvent(_g(ns+componentId+"Add"),"click",function(){daAddFn(component);
});
}if(resultsFlg>0){Util.addEvent(_g("daOption"+componentId),"change",function(){component.setEditMode(true);
if(component.getDAFilter()===0){component.setDAFilter(1);
}else{component.setDAFilter(0);
}component.InsertData();
});
}}function daAddFn(comp){var criterion=comp.getCriterion();
var formId=comp.getFormId();
var paramString=criterion.person_id+"|"+criterion.encntr_id+"|"+formId+".0|0|0";
try{MP_Util.LogMpagesEventInfo(comp,"POWERFORM",paramString,"discernanalytics.js","daAddFn");
MPAGES_EVENT("POWERFORM",paramString);
}catch(err){MP_Util.LogJSError(err,null,"discernanalytics.js","daAddFn");
}}}();
