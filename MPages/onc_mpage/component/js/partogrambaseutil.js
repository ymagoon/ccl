function PartogramInfo(){var criterion=null;
var pregnancyId=0;
var pregnancyOnsetDate=null;
var laborOnsetDate=null;
var partogramStartDate=null;
var pregnancyDescriptor=null;
var multipRateInd=0;
var gravida=0;
var para=0;
var paraTerm=0;
var paraPremature=0;
var paraAbortions=0;
var paraLiving=0;
var ectopic=0;
var spontaneousAbortion=0;
var inducedAbortion=0;
var multipleBirths=0;
var epidural=[];
this.setPregnancyId=function(val){pregnancyId=val;
};
this.getPregnancyId=function(){return pregnancyId;
};
this.setPregnancyOnsetDate=function(val){pregnancyOnsetDate=val;
};
this.getPregnancyOnsetDate=function(){return pregnancyOnsetDate;
};
this.setLaborOnsetDate=function(val){laborOnsetDate=val;
};
this.getLaborOnsetDate=function(){return laborOnsetDate;
};
this.setPartogramStartDate=function(val){partogramStartDate=val;
};
this.getPartogramStartDate=function(){return partogramStartDate;
};
this.setPregnancyDescriptor=function(val){pregnancyDescriptor=val;
};
this.getPregnancyDescriptor=function(){return pregnancyDescriptor;
};
this.setMultipRateInd=function(val){multipRateInd=val;
};
this.useMultipRate=function(){return(multipRateInd===1?true:false);
};
this.setGravida=function(val){gravida=val;
};
this.getGravida=function(){return gravida;
};
this.setPara=function(val){para=val;
};
this.getPara=function(){return para;
};
this.setParaTerm=function(val){paraTerm=val;
};
this.getParaTerm=function(){return paraTerm;
};
this.setParaPremature=function(val){paraPremature=val;
};
this.getParaPremature=function(){return paraPremature;
};
this.setParaAbortions=function(val){paraAbortions=val;
};
this.getParaAbortions=function(){return paraAbortions;
};
this.setParaLiving=function(val){paraLiving=val;
};
this.getParaLiving=function(){return paraLiving;
};
this.setEctopic=function(val){ectopic=val;
};
this.getEctopic=function(){return ectopic;
};
this.setSpontaneousAbortion=function(val){spontaneousAbortion=val;
};
this.getSpontaneousAbortion=function(){return spontaneousAbortion;
};
this.setInducedAbortion=function(val){inducedAbortion=val;
};
this.getInducedAbortion=function(){return inducedAbortion;
};
this.setMultipleBirths=function(val){multipleBirths=val;
};
this.getMultipleBirths=function(){return multipleBirths;
};
this.setEpiduralResults=function(val){epidural=val;
};
this.getEpiduralResults=function(){return epidural;
};
}function PartogramBaseComponentStyle(){this.initByNamespace("parto-base-wf");
}PartogramBaseComponentStyle.prototype=new ComponentStyle();
PartogramBaseComponentStyle.prototype.constructor=ComponentStyle;
function PartogramBaseComponent(criterion){this.setCriterion(criterion);
this.setStyles(new PartogramBaseComponentStyle());
this.setRefreshEnabled(false);
this.m_retrievingData=false;
this.m_partogramViewID="";
}PartogramBaseComponent.prototype=new MPageComponent();
PartogramBaseComponent.prototype.constructor=MPageComponent;
PartogramBaseComponent.prototype.loadPartogramData=function(criterion,asynch){var callbackFunc=null;
asynch=typeof asynch!=="undefined"?asynch:true;
if(this.m_retrievingData){return;
}this.m_retrievingData=true;
var scriptRequest=new ScriptRequest();
scriptRequest.setName("Partogram Info Retrieval");
scriptRequest.setProgramName("MP_GET_PARTOGRAM_INFO");
scriptRequest.setParameterArray(["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.ppr_cd+".0",criterion.encntr_id+".0"]);
scriptRequest.setAsyncIndicator(asynch);
callbackFunc=function(recordData){PartogramBaseComponent.prototype.getPartogramData(recordData,true);
};
scriptRequest.setResponseHandler(callbackFunc);
scriptRequest.performRequest();
};
PartogramBaseComponent.prototype.getPartogramData=function(reply,notifyConsumers){var partogramInfoObj=null;
var partogramResource=null;
var replyError=null;
var tempDate=null;
this.m_retrievingData=false;
replyError=reply.getError();
if(replyError===""&&replyError.length===0){var recordData=reply.getResponse();
var replyStatus=recordData.STATUS_DATA.STATUS;
if(replyStatus=="S"){partogramInfoObj=new PartogramInfo();
partogramInfoObj.setPregnancyId(recordData.PREGNANCY_ID);
partogramInfoObj.setPregnancyDescriptor(recordData.PREG_DESCRIPTOR);
partogramInfoObj.setGravida(recordData.GRAVIDA);
partogramInfoObj.setPara(recordData.PARA);
partogramInfoObj.setParaTerm(recordData.PARA_TERM);
partogramInfoObj.setParaPremature(recordData.PARA_PREMATURE);
partogramInfoObj.setParaAbortions(recordData.PARA_ABORTIONS);
partogramInfoObj.setParaLiving(recordData.PARA_LIVING);
partogramInfoObj.setEctopic(recordData.ECTOPIC);
partogramInfoObj.setSpontaneousAbortion(recordData.SPONTANEOUS_ABORT);
partogramInfoObj.setInducedAbortion(recordData.INDUCED_ABORT);
partogramInfoObj.setMultipleBirths(recordData.MULTI_BIRTH);
partogramInfoObj.setMultipRateInd(recordData.MULTIP_RATE_IND);
if(recordData.PREG_ONSET_DATE){tempDate=new Date();
tempDate.setISO8601(recordData.PREG_ONSET_DATE);
partogramInfoObj.setPregnancyOnsetDate(tempDate);
}if(recordData.LABOR_ONSET_DATE){tempDate=new Date();
tempDate.setISO8601(recordData.LABOR_ONSET_DATE);
partogramInfoObj.setLaborOnsetDate(tempDate);
}if(recordData.PARTOGRAM_START_DATE){tempDate=new Date();
tempDate.setISO8601(recordData.PARTOGRAM_START_DATE);
partogramInfoObj.setPartogramStartDate(tempDate);
}var epiduralResults=[];
var epiduralInfo=[];
var e=0;
if(recordData.EPIDURAL_CNT>0){for(e=0;
e<recordData.EPIDURAL_CNT;
e++){epiduralInfo.push({EVENT_NAME:recordData.EPIDURAL[e].EVENT_NAME,EVENT_DATE:recordData.EPIDURAL[e].EVENT_DATE,EPIDURAL_TYPE:recordData.EPIDURAL[e].EPIDURAL_TYPE,EPIDURAL_VALUE:recordData.EPIDURAL[e].EPIDURAL_VALUE});
}}epiduralResults.push({CNT:recordData.EPIDURAL_CNT,EPIDURAL_START_NAME:recordData.EPIDURAL_START_NAME,EPIDURAL_BOL_ANES_NAME:recordData.EPIDURAL_BOL_ANES_NAME,EPIDURAL_BOL_PAT_NAME:recordData.EPIDURAL_BOL_PAT_NAME,EPIDURAL_DISCONT_NAME:recordData.EPIDURAL_DISCONT_NAME,EPIDURAL_DATA:epiduralInfo});
partogramInfoObj.setEpiduralResults(epiduralResults);
}else{if(recordData.STATUS_DATA.STATUS=="Z"){partogramInfoObj=new PartogramInfo();
partogramInfoObj.setPregnancyId(0);
}}}else{partogramInfoObj=new PartogramInfo();
pregInfoObj.setPregnancyId(-1);
}partogramResource=MP_Resources.getSharedResource("partogramInfo");
if(partogramResource){MP_Resources.setSharedResourceData("partogramInfo",partogramInfoObj);
}else{partogramResource=new SharedResource("partogramInfo");
partogramResource.setResourceData(partogramInfoObj);
partogramResource.setIsAvailable(true);
partogramResource.setIsBeingRetrieved(false);
partogramResource.setEventListenerFlag("partogramInfoAvailable");
partogramResource.setEventListenerObject(new MPageComponent());
MP_Resources.addSharedResource("partogramInfo",partogramResource);
}if(notifyConsumers){partogramResource.notifyResourceConsumers();
}};
PartogramBaseComponent.prototype.getPartogramViewID=function(){return this.m_partogramViewID;
};
PartogramBaseComponent.prototype.setPartogramViewID=function(partogramViewId){this.m_partogramViewID=partogramViewId;
};
