function BirthPlanComponentWFStyle(){this.initByNamespace("bp-wf");
}BirthPlanComponentWFStyle.inherits(ComponentStyle);
function BirthPlanComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new BirthPlanComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.BIRTHPLAN.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.BIRTHPLAN.O2 - render component");
this.setIncludeLineNumber(true);
this.powerFormId=0;
this.setPregnancyLookbackInd(true);
this.setResourceRequired(true);
CERN_EventListener.addListener(this,EventListener.EVENT_CLINICAL_EVENT,this.retrieveComponentData,this);
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.retrieveComponentData,this);
}BirthPlanComponentWF.prototype=new MPageComponent();
BirthPlanComponentWF.prototype.constructor=MPageComponent;
MP_Util.setObjectDefinitionMapping("WF_PREG_BIRTH_PLAN",BirthPlanComponentWF);
BirthPlanComponentWF.prototype.RetrieveRequiredResources=function(){var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){this.retrieveComponentData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}};
BirthPlanComponentWF.prototype.setBirthPlanPF=function(powerFormId){this.powerFormId=powerFormId;
};
BirthPlanComponentWF.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_PREG_BIRTH_PLAN_PF",{setFunction:this.setBirthPlanPF,type:"NUMBER",field:"PARENT_ENTITY_ID"});
};
BirthPlanComponentWF.prototype.openTab=function(){var criterion=this.getCriterion();
if(this.powerFormId>0){var paramString=criterion.person_id+"|"+criterion.encntr_id+"|"+this.powerFormId+"|0|0";
MPAGES_EVENT("POWERFORM",paramString);
CERN_EventListener.fireEvent(null,this,EventListener.EVENT_CLINICAL_EVENT);
}};
BirthPlanComponentWF.prototype.openDropDown=function(formID){var criterion=this.getCriterion();
var paramString=criterion.person_id+"|"+criterion.encntr_id+"|"+formID+"|0|0";
MPAGES_EVENT("POWERFORM",paramString);
this.retrieveComponentData();
};
BirthPlanComponentWF.prototype.retrieveComponentData=function(){var birthPlani18n=i18n.discernabu.birthplan_o2;
var component=this;
var criterion=this.getCriterion();
var viewableEncounters=criterion.getPersonnelInfo().getViewableEncounters();
var encountersList=(viewableEncounters)?"value("+viewableEncounters+")":"0.0";
var groups=this.getGroups();
var messageHTML="";
var countText="";
var sendAr=[];
var bpEventSetCodes="0.0";
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=null;
var pregnancyId=0;
var patientGenderInfo=criterion.getPatientInfo().getSex();
if(patientGenderInfo===null||patientGenderInfo.meaning===null||patientGenderInfo.meaning!=="FEMALE"){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+birthPlani18n.NOT_FEMALE+"</span></h3><span class='res-none'>"+birthPlani18n.NOT_FEMALE+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
if(pregnancyId===-1){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+birthPlani18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+birthPlani18n.PREG_DATA_ERROR+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{if(!pregnancyId){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+birthPlani18n.NO_ACTIVE_PREG+"</span></h3><span class='res-none'>"+birthPlani18n.NO_ACTIVE_PREG+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{if(groups&&groups.length>0){bpEventSetCodes=MP_Util.CreateParamArray(groups[0].getEventSets(),1);
}sendAr.push("^MINE^",criterion.person_id+".0",criterion.provider_id+".0",encountersList,bpEventSetCodes,criterion.ppr_cd+".0",pregInfoObj.getLookBack());
var request=new MP_Core.ScriptRequest(this,this.getComponentLoadTimerName());
request.setProgramName("MP_GET_BIRTH_PLANS");
request.setParameters(sendAr);
request.setAsync(true);
MP_Core.XMLCCLRequestCallBack(this,request,function(reply){component.renderComponent(reply.getResponse());
return;
});
}}}}};
BirthPlanComponentWF.prototype.resizeComponent=function(){MPageComponent.prototype.resizeComponent.call(this,null);
var compId=this.getComponentId();
var tableID="";
var tableHeight=0;
var maxTableHeight=0;
var tableLength=2;
$("#birthPlanList"+compId+" .bp-wf-results-table").css("height","");
$("#birthPlanList"+compId+" .bp-wf-row-space").css("height","0px");
var maxTableHeightIndex=0;
var tableIndex=0;
var newRowHeight=0;
for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){tableID="#birthPlanTable"+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
if(tableHeight!==null){if(maxTableHeight<tableHeight){maxTableHeight=tableHeight;
maxTableHeightIndex=tableIndex;
}}}for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){if(tableIndex!=maxTableHeightIndex){tableID="#birthPlanTable"+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
newRowHeight=maxTableHeight-tableHeight+1;
$(tableID+" .bp-wf-row-space").css("height",newRowHeight+"px");
}}};
BirthPlanComponentWF.prototype.renderComponent=function(recordData){var timerRenderComponent=MP_Util.CreateTimer(this.getComponentRenderTimerName(),this.getCriterion().category_mean);
try{var compId=this.getComponentId();
var criterion=this.getCriterion();
var birthPlani18n=i18n.discernabu.birthplan_o2;
var componentResultCount=0;
var jsBirthPlanHTML=[];
var birthPlanHTML="";
var slaTimer=MP_Util.CreateTimer("CAP:MPG.BIRTHPLAN.O2- Rendering component");
if(slaTimer){slaTimer.SubtimerName=criterion.category_mean;
slaTimer.Stop();
}var birthPlanData=recordData.PLANLIST;
var birthPlanDataLength=birthPlanData.length;
if(birthPlanDataLength>0){jsBirthPlanHTML.push("<div id='birthPlanList"+compId+"' class='",MP_Util.GetContentClass(this,birthPlanDataLength),"'>");
jsBirthPlanHTML.push("<table id='birthPlanTable1_"+compId+"' class='bp-wf-results-table bp-wf-table1-position'>");
var bpDataLengthFirstHalf=birthPlanDataLength/2;
var bpResultIndex=0;
var tableRowTag="<tr><td class='bp-wf-plan-name bp-wf-plan-name-size'>{0}</td><td class='bp-wf-plan-result bp-wf-plan-result-size'>{1}</td></tr>";
var tableSpaceFillerHTML="<tr class='bp-wf-row-space'><td class='bp-wf-plan-name'></td><td class='bp-wf-plan-result'></td></tr>";
for(;
bpResultIndex<bpDataLengthFirstHalf;
bpResultIndex++){jsBirthPlanHTML.push(tableRowTag.replace("{0}",birthPlanData[bpResultIndex].SPLANNAME).replace("{1}",birthPlanData[bpResultIndex].SPLANRESULT));
}jsBirthPlanHTML.push(tableSpaceFillerHTML+"</table><table id='birthPlanTable2_"+compId+"' class='bp-wf-results-table bp-wf-table2-position'>");
for(;
bpResultIndex<birthPlanDataLength;
bpResultIndex++){jsBirthPlanHTML.push(tableRowTag.replace("{0}",birthPlanData[bpResultIndex].SPLANNAME).replace("{1}",birthPlanData[bpResultIndex].SPLANRESULT));
}jsBirthPlanHTML.push(tableSpaceFillerHTML+"</table></div>");
birthPlanHTML=jsBirthPlanHTML.join("");
componentResultCount=birthPlanDataLength;
}else{birthPlanHTML="<span class='res-none'>"+birthPlani18n.NO_DATA_FOUND+"&nbsp;<a href=# id='addBirthPlan"+compId+"'>"+birthPlani18n.ADD_BIRTH_PLAN+"</a></span>";
}this.finalizeComponent(birthPlanHTML,MP_Util.CreateTitleText(this,componentResultCount));
CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:componentResultCount});
this.resizeComponent();
this.attachListeners();
}catch(err){MP_Util.LogJSError(err,this,"birth-plan-o2.js","renderComponent");
if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}};
BirthPlanComponentWF.prototype.attachListeners=function(){var component=this;
var compId=this.getComponentId();
var addBirthPlanObj=$("#addBirthPlan"+compId);
addBirthPlanObj.click(function(){component.openTab();
});
};
