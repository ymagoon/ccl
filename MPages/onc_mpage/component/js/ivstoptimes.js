function IVStopTimesComponentStyle(){this.initByNamespace("wf_iv_stp_tms");
}IVStopTimesComponentStyle.prototype=new ComponentStyle();
IVStopTimesComponentStyle.prototype.constructor=ComponentStyle;
function IVStopTimesComponent(criterion){this.setCriterion(criterion);
this.setStyles(new IVStopTimesComponentStyle());
this.setComponentLoadTimerName("USR:MPG.IVSTOPTIMES.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.IVSTOPTIMES.O1 - render component");
this.setIncludeLineNumber(true);
this.setScope(2);
}IVStopTimesComponent.prototype=new MPageComponent();
IVStopTimesComponent.prototype.constructor=MPageComponent;
IVStopTimesComponent.prototype.openTab=function(){var criterion=this.getCriterion();
var params="/PERSONID="+criterion.person_id+" /ENCNTRID="+criterion.encntr_id+" /FIRSTTAB=^"+this.getLink()+"+^";
APPLINK(0,criterion.executable,params);
this.retrieveComponentData();
};
IVStopTimesComponent.prototype.retrieveComponentData=function(){var self=this;
var criterion=self.getCriterion();
var sendAr=[];
var loadTimer=new RTMSTimer(self.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(self.getComponentRenderTimerName());
var scriptRequest=new ComponentScriptRequest();
var sEncntr=(self.getScope()===2)?criterion.encntr_id+".0":"0.0";
sendAr.push("^MINE^",sEncntr,criterion.person_id+".0",criterion.provider_id+".00",criterion.ppr_cd+".00",criterion.position_cd+".0");
scriptRequest.setProgramName("MP_GET_IV_DATA_ELEMENTS");
scriptRequest.setParameterArray(sendAr);
scriptRequest.setComponent(self);
scriptRequest.setLoadTimer(loadTimer);
scriptRequest.setRenderTimer(renderTimer);
scriptRequest.setResponseHandler(function(scriptReply){if(scriptReply.getResponse().STATUS_DATA.STATUS==="S"){self.renderComponent(scriptReply.m_responseData);
}else{if(scriptReply.getResponse().STATUS_DATA.STATUS==="F"){var errMsg=[];
var err=new Error("No Encounter is available.");
self.finalizeComponent(MP_Util.HandleErrorResponse(self.getStyles().getNameSpace(),errMsg.join("<br />")),"(0)");
logger.logJSError(err,self,"ivstoptimes.js","retrieveComponentData");
}}});
scriptRequest.performRequest();
};
IVStopTimesComponent.prototype.launchIVStopTimes=function(trackingId,trackingGroupCd){var component=this;
var compNS=component.getStyles().getNameSpace();
var criterion=component.getCriterion();
var viewCatagoryMean=criterion.category_mean;
$("."+compNS+"-document-btn").on("click",function(){try{var capTimer=new CapabilityTimer("CAP:MPG IVSTOPTIMES.O1 LAUNCH IV STOP TIMES WINDOW",viewCatagoryMean);
capTimer.capture();
var mrObject=CERN_Platform.getDiscernObject("FNACTIONUTILS");
if(mrObject!==null){mrObject.LaunchIVStopTimes(criterion.person_id,criterion.encntr_id,trackingId,trackingGroupCd);
component.retrieveComponentData();
}}catch(err){logger.logJSError(err,component,"ivstoptimes.js","launchIVStopTimes");
}});
};
IVStopTimesComponent.prototype.processResultsForRender=function(recordData){var component=this;
var compNS=component.getStyles().getNameSpace();
var replyObj=recordData;
var elemList=replyObj.ELEMENTS;
if(replyObj&&elemList.length>0){var results=elemList;
var resultLength=results.length;
for(var index=0;
index<resultLength;
index++){var ivResult=results[index];
if(ivResult){ivResult.ORDER_MNEMONIC="<span class='"+compNS+"-medication'>"+ivResult.ORDER_MNEMONIC+"</span>"||"--";
ivResult.CLINICAL_DISPLAY_LINE="<span class='"+compNS+"-details'>"+ivResult.CLINICAL_DISPLAY_LINE+"</span>"||"--";
}}}};
IVStopTimesComponent.prototype.createColumnObject=function(columnId,customCSSClass,columnDisplay,isSortable,primarySortField,renderTemplate){var columnObj=new TableColumn();
columnObj.setColumnId(columnId);
columnObj.setCustomClass(customCSSClass);
columnObj.setColumnDisplay(columnDisplay);
if(isSortable){columnObj.setIsSortable(isSortable);
columnObj.setPrimarySortField(primarySortField);
}columnObj.setRenderTemplate("${"+renderTemplate+"}");
return columnObj;
};
IVStopTimesComponent.prototype.renderComponent=function(recordData){var component=this;
var numberResults=0;
var compNS=component.getStyles().getNameSpace();
var compID=component.getComponentId();
var ivResults=[];
var jsIVStopTimesHTML=[];
var ivStopTimesI18n=i18n.discernabu.ivstoptimes_o1;
var trackingId=0;
var trackingGroupCd=0;
var ivResultsLength=0;
var documentBtnHtml="";
try{if(recordData.STATUS_DATA.STATUS==="Z"||recordData.ENCNTR_ID===0){component.finalizeComponent(MP_Util.HandleNoDataResponse(component.getStyles().getNameSpace()),"(0)");
CERN_EventListener.fireEvent(component,component,EventListener.EVENT_COUNT_UPDATE,{count:numberResults});
return;
}if($.trim(recordData)){component.processResultsForRender(recordData);
var filterRoutesArr=recordData.FILTER_ROUTES;
ivResults=recordData.ELEMENTS;
trackingId=recordData.TRACKING_ID;
trackingGroupCd=recordData.TRACKING_GROUP_CD;
ivResultsLength=ivResults.length;
if(filterRoutesArr.length>0){for(var i=0;
i<ivResultsLength;
i++){for(var j=0;
j<filterRoutesArr.length;
j++){if(ivResults.length){if((ivResults[i].ADMIN_ROUTE_CD===filterRoutesArr[j].ROUTE_CD)&&(filterRoutesArr[j].INFUSION_TASK_IND===1)){ivResults.splice(i,1);
ivResultsLength=ivResults.length;
i=0;
}}}}}}if(ivResultsLength){if(recordData.DOCUMENT_BILLING_TASK_PRIV===1){if(recordData.POS_INFUSION_DISABLE_DOC_IND===1||recordData.DEFAULT_INFUSION_DISABLE_DOC_IND===1){documentBtnHtml='<input type="button" class="wf_iv_stp_tms-document-btn-dthr" value="'+ivStopTimesI18n.BTN_DOCUMENT+'" disabled="true">';
}else{documentBtnHtml='<input type="button" class="wf_iv_stp_tms-document-btn" value="'+ivStopTimesI18n.BTN_DOCUMENT+'">';
}}else{documentBtnHtml='<input type="button" class="wf_iv_stp_tms-document-btn-dthr" value="'+ivStopTimesI18n.BTN_DOCUMENT+'" disabled="true">';
}var infoBannerHtml="<div id='infoBannerContainer"+compID+"'>";
var infoBanner=new MPageUI.AlertBanner();
infoBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ADVISORY);
infoBanner.setPrimaryText(ivStopTimesI18n.IV_BANNER_TEXT);
infoBannerHtml=infoBannerHtml+infoBanner.render()+"</div>";
jsIVStopTimesHTML.push(infoBannerHtml);
}var ivStopTimeTable=new ComponentTable();
ivStopTimeTable.setNamespace(compNS+compID);
ivStopTimeTable.addColumn(component.createColumnObject("Medication",compNS+"-medication",ivStopTimesI18n.MEDICATION,false,"ORDER_MNEMONIC","ORDER_MNEMONIC"));
ivStopTimeTable.addColumn(component.createColumnObject("Details",compNS+"-details",ivStopTimesI18n.DETAILS,false,"CLINICAL_DISPLAY_LINE","CLINICAL_DISPLAY_LINE"));
numberResults=ivResults.length;
ivStopTimeTable.bindData(ivResults);
component.setComponentTable(ivStopTimeTable);
jsIVStopTimesHTML.push(ivStopTimeTable.render());
jsIVStopTimesHTML.push(documentBtnHtml);
component.finalizeComponent(jsIVStopTimesHTML.join(""),MP_Util.CreateTitleText(component,numberResults));
CERN_EventListener.fireEvent(component,component,EventListener.EVENT_COUNT_UPDATE,{count:numberResults});
component.launchIVStopTimes(trackingId,trackingGroupCd);
}catch(err){logger.logJSError(err,component,"ivstoptimes.js","renderComponent");
}};
MP_Util.setObjectDefinitionMapping("wf_iv_stp_tms",IVStopTimesComponent);
