function PregAssessmentBaseStyle(){this.initByNamespace("pab");
}var CERN_PREG_ASSESSMENT_BASE_O1=function(){var AssessmentTable=function(buckets){var m_rows=[];
var m_buckets=buckets;
this.initAssessmentData=function(results,events){var prevEventCode=-1;
for(var x=0;
x<results.length;
x++){var data=results[x].DATA;
for(var y=0;
y<data.length;
y++){var eventCode=data[y].CODE;
var new_buckets=null;
var eventRow=null;
var eventResult=null;
var eventSeq=getRowSequence(eventCode,events);
var dups=getDups(eventCode,data);
if(data.length>1){if(eventCode===prevEventCode){eventResult=new EventResult(results[x],data[y],null,eventCode,false,dups);
}else{eventResult=new EventResult(results[x],data[y],null,eventCode,true,dups);
}}else{eventResult=new EventResult(results[x],data[y],null,eventCode,true,dups);
}eventRow=m_rows[eventSeq];
if(!eventRow){new_buckets=createEventRowBuckets(m_buckets);
eventRow=new EventRow(getRowLabel(eventCode,events),new_buckets,false);
if(eventSeq!==-1){m_rows[eventSeq]=eventRow;
}}addResultToBucket(eventResult,eventRow);
prevEventCode=eventCode;
}prevEventCode=-1;
var labels=results[x].LABELS;
for(var z=0;
z<labels.length;
z++){for(var k=0;
k<labels[z].LABEL_DATA.length;
k++){var labelData=labels[z].LABEL_DATA[k];
var labelEventCode=labelData.CODE;
var labelNew_buckets=null;
var labelEventRow=null;
var labelEventResult=null;
var labelEventSeq=getRowSequence(labelEventCode,events);
var labelDups=getDups(labelEventCode,labels[z].LABEL_DATA);
if(labels[z].LABEL_DATA.length>1){if(labelEventCode===prevEventCode){labelEventResult=new EventResult(results[x],labelData,labels[z].LABEL,labelEventCode,false,labelDups);
}else{labelEventResult=new EventResult(results[x],labelData,labels[z].LABEL,labelEventCode,true,labelDups);
}}else{labelEventResult=new EventResult(results[x],labelData,labels[z].LABEL,labelEventCode,true,labelDups);
}labelEventRow=m_rows[labelEventSeq];
if(!labelEventRow){labelNew_buckets=createEventRowBuckets(m_buckets);
labelEventRow=new EventRow(getRowLabel(labelEventCode,events),labelNew_buckets,true);
if(labelEventSeq!==-1){m_rows[labelEventSeq]=labelEventRow;
}}addResultToBucket(labelEventResult,labelEventRow);
prevEventCode=labelEventCode;
}}}};
this.getRows=function(){return m_rows;
};
function addResultToBucket(result,eventRow){var rowBuckets=eventRow.getBuckets();
var resultDate=result.getEventDate();
for(var x=0;
x<rowBuckets.length;
x++){var rowBucket=rowBuckets[x];
if(AreResultsOnSameDay(resultDate,rowBucket.getEventDate())){rowBucket.addResult(result);
break;
}}}function createEventRowBuckets(bucketsTemplate){var row_buckets=[];
for(var x=0;
x<bucketsTemplate.length;
x++){row_buckets.push(new EventResultBucket(bucketsTemplate[x].getEventDate(),bucketsTemplate[x].getEventDateDisp(),bucketsTemplate[x].getSeq()));
}return row_buckets;
}};
var EventRow=function(label,buckets,dynamicLabelRow){var m_label=label;
var m_buckets=buckets;
var m_dynamicLabel=dynamicLabelRow;
this.getLabel=function(){return m_label;
};
this.getBuckets=function(){return m_buckets;
};
this.isDynamicLabelRow=function(){return m_dynamicLabel;
};
};
var EventResultBucket=function(eventDate,eventDateDisp,eventSeq){var m_eventDate=eventDate;
var m_eventDateDisp=eventDateDisp;
var m_seq=eventSeq;
var m_results=[];
this.getEventDate=function(){return m_eventDate;
};
this.getEventDateDisp=function(){return m_eventDateDisp;
};
this.addResult=function(result){m_results.push(result);
};
this.getResults=function(){return m_results;
};
this.getSeq=function(){return m_seq;
};
};
var EventResult=function(eventResult,eventData,eventLabel,eventCode,mostRecentResult,dups){var m_eventDate=eventResult.DATE;
var m_eventCode=eventCode;
var m_dynamicLabel=eventLabel;
var m_uom=eventData.UNIT;
var m_result=eventData.RESULT;
var m_dupCount=dups.length;
var m_dups=dups;
var m_mostRecent=mostRecentResult;
this.getResult=function(){return m_result;
};
this.getEventDate=function(){return m_eventDate;
};
this.getEventCode=function(){return m_eventCode;
};
this.isDynamicLabel=function(){if(m_dynamicLabel===null){return false;
}return true;
};
this.getDynamicLabel=function(){return m_dynamicLabel;
};
this.getDisplay=function(){return m_eventCode.display;
};
this.getUnitOfMeasure=function(){return m_uom;
};
this.isMostRecentResult=function(){return m_mostRecent;
};
this.getDupCount=function(){return m_dupCount;
};
this.getDups=function(){return m_dups;
};
};
function AreResultsOnSameDay(d1,d2){if(d1&&d2&&d1.getFullYear()===d2.getFullYear()&&d1.getDate()===d2.getDate()&&d1.getDay()===d2.getDay()&&d1.getTime()===d2.getTime()){return true;
}return false;
}function FormatNumber(num){if(typeof num=="string"){num=mp_formatter._trim(num);
}if(!mp_formatter._isNumber(num)){return num;
}return MP_Util.GetNumericFormatter().format(num);
}function UnpackReply(recordData){var i;
var j;
var k;
var events=[];
var df=MP_Util.GetDateFormatter();
for(i=0;
i<recordData.QUAL.length;
i++){var eventDate=new Date();
eventDate.setISO8601(recordData.QUAL[i].DATA_DT_TM);
var data=[];
for(j=0;
j<recordData.QUAL[i].ASSESSMENT_DATA.length;
j++){var rslt;
if(recordData.QUAL[i].ASSESSMENT_DATA[j].RESULT_TYPE_FLAG===5){rslt=df.formatISO8601(recordData.QUAL[i].ASSESSMENT_DATA[j].EVENT_RESULT,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
}else{rslt=FormatNumber(recordData.QUAL[i].ASSESSMENT_DATA[j].EVENT_RESULT);
}data.push({CODE:recordData.QUAL[i].ASSESSMENT_DATA[j].EVENT_CODE,RESULT:rslt,UNIT:recordData.QUAL[i].ASSESSMENT_DATA[j].EVENT_RESULT_UNITS,LABEL_FLAG:recordData.QUAL[i].ASSESSMENT_DATA[j].DYNAMIC_LABEL_FLAG});
}var labels=[];
for(j=0;
j<recordData.QUAL[i].DYNAMIC_LIST.length;
j++){var labelData=[];
for(k=0;
k<recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA.length;
k++){var rslt1;
if(recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].EVENT_RESULT&&recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].RESULT_TYPE_FLAG===5){rslt1=df.formatISO8601(recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].EVENT_RESULT,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
}else{rslt1=FormatNumber(recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].EVENT_RESULT);
}labelData.push({CODE:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].EVENT_CODE,RESULT:rslt1,UNIT:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_DATA[k].EVENT_RESULT_UNITS});
}labels.push({LABEL:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL,ID:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL_ID,LABEL_DATA:labelData});
}events.push({DATE:eventDate,DYNAMIC_LABEL:recordData.QUAL[i].DYNAMIC_LABEL,LABEL_ID:recordData.QUAL[i].DYNAMIC_LABEL_ID,DATA:data,LABELS:labels});
}events.sort(function(a,b){return b.DATE.getTime()-a.DATE.getTime();
});
return events;
}function getDynamicLabels(recordData){var j;
var i;
var dynLabels=[];
var dynKeys=[];
for(i=0;
i<recordData.QUAL.length;
i++){for(j=0;
j<recordData.QUAL[i].DYNAMIC_LIST.length;
j++){if(dynKeys.indexOf(recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL_ID)===-1){dynLabels.push({LABEL:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL,ID:recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL_ID});
dynKeys.push(recordData.QUAL[i].DYNAMIC_LIST[j].DYNAMIC_LABEL_ID);
}}}dynLabels.sort(function sortDynamicLabelSort(label1,label2){var sortRes=0;
if(label1&&label1.LABEL===""){sortRes=1;
}else{if(label2&&label2.LABEL===""){sortRes=-1;
}else{sortRes=((label1.LABEL).toUpperCase()<(label2.LABEL).toUpperCase())?-1:1;
}}return sortRes;
});
return dynLabels;
}function getRowLabels(recordData){var i;
var rowLabels=[];
for(i=0,l=recordData.CODES.length;
i<l;
i++){var event_row=recordData.CODES[i];
if(!event_row){continue;
}var display=event_row.DISPLAY||"";
rowLabels.push({CODE:event_row.CODE,DISPLAY:display,SEQUENCE:i});
}return rowLabels;
}function getRowLabel(codeValue,eventList){var i;
for(i=0;
i<eventList.length;
i++){if(eventList[i].CODE===codeValue){return eventList[i].DISPLAY;
}}return"";
}function getRowSequence(codeValue,eventList){var i;
for(i=0;
i<eventList.length;
i++){if(eventList[i].CODE===codeValue){return eventList[i].SEQUENCE;
}}return -1;
}function getDups(codeValue,data){var i;
var dups=[];
for(i=0;
i<data.length;
i++){if(data[i].CODE===codeValue){dups.push(data[i]);
}}if(dups.length===1){return[];
}return dups;
}function createResultHover(result){var hoverHTML=[];
var row=result.RESULT_DATA;
var columnId=result.COLUMN_ID;
var columnDateKey=columnId.substring(4,columnId.indexOf("_"));
var hoverTxt=row.DATA[columnDateKey].HOVER;
var rowLabel=row.LABEL;
var hoverLabel=(rowLabel.indexOf("<br/>")>=0)?rowLabel.substring(0,rowLabel.indexOf("<br/>"))+"</span>":rowLabel;
var emptyRow="<span class='fs-new-day'>--</span>";
if(hoverTxt===null||hoverTxt===undefined||hoverTxt===""||hoverTxt===emptyRow){return null;
}hoverHTML.push("<span class='pab-table-data-hover'>");
hoverHTML.push("<dl><dt>"+hoverLabel+"</dt>");
hoverHTML.push("<dd>"+hoverTxt+"</dd>");
hoverHTML.push("</dl></span>");
return hoverHTML.join("");
}function shorten(prefix,text,uom,suffix,maxLength){var ret="";
var format="<span class='pab-unit'>";
if(prefix.length>maxLength){ret=format+prefix.substr(0,maxLength-3)+"</span>&hellip;";
}else{if((prefix+text).length>maxLength){ret=format+prefix+"</span>"+text.substr(0,maxLength-prefix.length-3)+"&hellip;";
}else{if((prefix+text+uom).length>maxLength){ret=format+prefix+"</span>"+text+format+uom.substr(0,maxLength-prefix.length-text.length-3)+"</span>&hellip;";
}else{if((prefix+text+uom+suffix).length>maxLength){ret=format+prefix+"</span>"+text+format+uom+suffix.substr(0,maxLength-prefix.length-text.length-uom.length-3)+"</span>&hellip;";
}else{ret=format+prefix+"</span>"+text+format+uom+suffix+"</span>";
}}}}return ret;
}function getTruncationByColumn(component,columnCnt){var labelColumnWidth=204;
var pixelBuffer=2;
var contentTableVisibleWidth=$(component.getSectionContentNode()).width()-labelColumnWidth-pixelBuffer;
if(columnCnt===1){return contentTableVisibleWidth;
}else{if(columnCnt===2){return 58;
}else{if(columnCnt===3){return 48;
}else{if(columnCnt===4){return 36;
}else{if(columnCnt===5){return 30;
}else{return 24;
}}}}}}function processFlowsheetData(rows,columns,events,dynamicLabels,truncateSize){var FLOWSHEET_DATA=[];
var eventRow=null;
var eventRowBuckets=[];
var aRow=null;
var columnObj=[];
var emptyRow="<span class='fs-new-day'>--</span>";
if(events.length>0){for(x=0;
x<events.length;
x++){eventRow=rows[x];
var bucketRow=[];
var rowData=[];
var rowLabel=null;
var data=[];
for(b=0;
b<columns.length;
b++){var ky=columns[b].DATE_KEY;
bucketRow[ky]={DISPLAY:emptyRow};
}if(eventRow===null||eventRow===undefined){var noRowLabel="<span title='"+events[x].DISPLAY+"'>"+events[x].DISPLAY;
var noData=bucketRow;
FLOWSHEET_DATA.push({LABEL:noRowLabel,DATA:noData});
}else{rowLabel="<span title='"+eventRow.getLabel()+"'>"+eventRow.getLabel();
rowData=bucketRow;
eventRowBuckets=eventRow.getBuckets();
if(eventRowBuckets){for(y=0;
y<eventRowBuckets.length;
y++){var labelResultDisplay=[];
var sFullResultDisplay="";
var sShortenResultDisplay="";
var sHoverDupDetail="";
var bucket=eventRowBuckets[y];
var bucketResults=bucket.getResults();
aRow=rowData[eventRowBuckets[y].getSeq()];
for(z=0;
z<bucketResults.length;
z++){var sDupCount="";
if(bucketResults[z].getDupCount()>0){if(!bucketResults[z].isMostRecentResult()){continue;
}else{sDupCount="<span class='pab-unit'>("+bucketResults[z].getDupCount()+")</span>";
var dupList=bucketResults[z].getDups();
for(d=0;
d<dupList.length;
d++){var sDupDynamicLabel=(bucketResults[z].isDynamicLabel())?"<span class='pab-unit'>["+bucketResults[z].getDynamicLabel()+"]</span>&nbsp;&nbsp;":"";
var sDupUOM=(dupList[d].UNIT)?"<span class='pab-unit'>"+dupList[d].UNIT+"</span>":"";
sHoverDupDetail+=sDupDynamicLabel+"<span class='res-normal'>"+dupList[d].RESULT+"&nbsp;&nbsp;"+sDupUOM+"</span><br/>";
}}}if(bucketResults[z].getResult()){var sResult=bucketResults[z].getResult();
var uom=bucketResults[z].getUnitOfMeasure();
var sLabel="";
var sUnit="";
sLabel=(bucketResults[z].isDynamicLabel())?"<span class='pab-unit'>["+bucketResults[z].getDynamicLabel()+"]&nbsp;&nbsp;</span>":"";
sUnit=(uom)?"<span class='pab-unit'>"+uom+"</span>":"";
sFullResultDisplay+="<span class='res-normal'>"+sLabel+sResult+"&nbsp;&nbsp;"+sUnit+"&nbsp;&nbsp;"+sDupCount+"</span>";
if(bucketResults[z].isDynamicLabel()){var shortenText=shorten("["+bucketResults[z].getDynamicLabel()+"]  ",sResult,(uom)?"  "+uom+"  ":"",(sDupCount)?"("+bucketResults[z].getDupCount()+")":"",truncateSize);
labelResultDisplay.push({LABEL:bucketResults[z].getDynamicLabel(),RESULT:shortenText,HOVER:(sHoverDupDetail==="")?"<span class='res-normal'>"+sLabel+sResult+"&nbsp;&nbsp;"+sUnit+"</span>":sHoverDupDetail.substring(0,sHoverDupDetail.lastIndexOf("<br/>"))});
sHoverDupDetail="";
}}else{sFullResultDisplay=emptyRow;
}}if(eventRow.isDynamicLabelRow()){sShortenResultDisplay="";
sFullResultDisplay="";
var noDLData=0;
for(dl=0;
dl<dynamicLabels.length;
dl++){var found=false;
for(lr=0;
lr<labelResultDisplay.length;
lr++){if(dynamicLabels[dl].LABEL.toUpperCase()===labelResultDisplay[lr].LABEL.toUpperCase()){sShortenResultDisplay+=labelResultDisplay[lr].RESULT;
sFullResultDisplay+=labelResultDisplay[lr].HOVER;
found=true;
break;
}}if(!found){sShortenResultDisplay+=emptyRow;
sFullResultDisplay+=emptyRow;
noDLData+=1;
}if(dl+1<dynamicLabels.length){sShortenResultDisplay+="<br />";
sFullResultDisplay+="<br />";
}}aRow.DISPLAY=sShortenResultDisplay;
if(noDLData===dynamicLabels.length){aRow.HOVER=emptyRow;
}else{aRow.HOVER=sFullResultDisplay;
}}else{aRow.DISPLAY=(sFullResultDisplay==="")?emptyRow:sFullResultDisplay;
aRow.HOVER=(sHoverDupDetail==="")?sFullResultDisplay:sHoverDupDetail;
}aRow.DATE=eventRowBuckets[y].getEventDateDisp();
data.push(aRow);
}var pad="";
if(eventRow.isDynamicLabelRow()){for(p=0;
p<dynamicLabels.length-1;
p++){pad+="<br/>&nbsp;";
}}rowLabel+=(pad+"</span>");
FLOWSHEET_DATA.push({LABEL:rowLabel,DATA:data});
}}}}columnObj={RESULTS:FLOWSHEET_DATA};
return columnObj;
}return{RenderAssessmentSection:function(component,recordData,sectionNum){var timerRenderComponent=MP_Util.CreateTimer(component.getComponentRenderTimerName());
try{var compId=component.getComponentId();
var buckets=[];
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var criterion=component.getCriterion();
var data=[];
var events=[];
var dynamicLabels=[];
var columns=[];
var dateSeq=-1;
data=UnpackReply(recordData);
events=getRowLabels(recordData);
dynamicLabels=getDynamicLabels(recordData);
for(i=0;
i<data.length;
i++){var event=data[i];
var latestDate="";
var prevDt=null;
if(data[i-1]){prevDt=data[i-1].DATE;
}if(!AreResultsOnSameDay(prevDt,event.DATE)){latestDate=df.format(event.DATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_2YEAR);
dateSeq+=1;
var dateDisplay="<span class='fs-new-day'>"+df.format(event.DATE,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR)+"<br />"+df.format(event.DATE,mp_formatter.DateTimeFormatter.TIME_24HOUR_NO_SECONDS)+"</span>";
var erb=new EventResultBucket(event.DATE,latestDate,dateSeq);
buckets.push(erb);
columns.push({DATE:event.DATE,COLUMN_DISPLAY:dateDisplay,DATE_KEY:dateSeq});
}}var assessmentTable=new AssessmentTable(buckets);
assessmentTable.initAssessmentData(data,events);
var assessmentFlowsheet=null;
var hoverExtension=new TableCellHoverExtension();
var column="";
var columnCnt=columns.length;
var flowsheetData=null;
var columnWidth=125;
var truncateSize=getTruncationByColumn(component,columnCnt);
assessmentFlowsheet=new FlowsheetTable();
assessmentFlowsheet.addExtension(hoverExtension);
assessmentFlowsheet.setNamespace(component.getStyles().getId());
flowsheetData=processFlowsheetData(assessmentTable.getRows(),columns,events,dynamicLabels,truncateSize);
assessmentFlowsheet.addLabelColumn(new TableColumn().setColumnDisplay("&nbsp;<br />&nbsp;").setColumnId("EventName").setRenderTemplate("<span>${LABEL}</span>"));
for(var j=0;
j<columnCnt;
j++){column=new TableColumn().setColumnId("data"+j+"_"+compId).setColumnDisplay(columns[j].COLUMN_DISPLAY).setCustomClass("pab-content-column").setRenderTemplate("${DATA['"+columns[j].DATE_KEY+"'].DISPLAY}");
column.setWidth(columnWidth);
assessmentFlowsheet.addResultColumn(column);
hoverExtension.addHoverForColumn(column,function(dataObj){return createResultHover(dataObj);
});
}assessmentFlowsheet.bindData(flowsheetData.RESULTS);
component.setFlowsheetTable(assessmentFlowsheet);
component.finalizeComponent(assessmentFlowsheet.render());
}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}if(component.m_loadTimer){component.m_loadTimer.Stop();
}}}};
}();
