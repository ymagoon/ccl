function AoavSoiComponentWFStyle(){this.initByNamespace("aoav_soi");
}AoavSoiComponentWFStyle.prototype=new ComponentStyle();
AoavSoiComponentWFStyle.prototype.constructor=ComponentStyle;
function AoavSoiComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new AoavSoiComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.AOAV-SOI.O1 - load component");
this.setComponentRenderTimerName("ENG:MPG.AOAV-SOI.O1 - render component");
this.m_compViewCont=$("#vwpBody");
this.m_showPanel=true;
this.physiologyIndexArr=[];
this.supportIndexArr=[];
this.deteriorationIndexArr=[];
this.comorbidityIndexArr=[];
this.icuMortalityRisk=[];
this.hospitalMortalityRisk=[];
this.soiScore=[];
this.levelOfCare=[];
this.m_soiSidePanelObj=null;
this.soiI18n=i18n.discernabu.soi;
this.m_sidePanelContainer=null;
this.MAX_SOISP_HEIGHT=500;
this.MIN_SOISP_HEIGHT=350;
this.SOISP_WIDTH=440;
this.MAX_HEIGHT_SOISP_BODY=500;
this.unitDisplayNamesArr=[];
this.requiredUnitsOfMeasure=[];
this.aoavResult=[];
this.chartDayTooltip=null;
this.soiContentContainer=null;
this.soiContentContainerRecentWidth=0;
this.reloadGraph=false;
this.benchmarkHospitalLos=0;
this.benchmarkICULos=0;
this.actualHospitalLos=0;
this.actualICUlos=0;
this.predictedRemainingHospitalLos=0;
this.predictedRemainingICULos=0;
this.benchmarkHospLosTooltip=null;
this.benchmarkICULosTooltip=null;
this.numberFormatter=MP_Util.GetNumericFormatter();
var self=this;
this.chartData=function(){this.soiPlot=null;
this.chartId="soiChart"+self.getComponentId();
this.chartContainer=null;
this.chartMainDivContainer=null;
this.chartMainDivWidth=0;
this.selectedDay=0;
this.soiPlotOptionsObj=null;
this.soiGraphOptions=[];
this.graphHeight=0;
this.dynamicSidePanelHeight=this.m_sidePanelContainer?this.m_sidePanelContainer.height():self.m_soiSidePanelHeight;
this.scrollbarHeight=0;
this.graphWidthPercent=0.59;
this.currentScrollClass="";
this.scrollClass=" aoav_soi-chart-on-scroll ";
this.noScrollClass=" aoav_soi-chart-no-scroll ";
this.isGraphScrolled=false;
this.graphScrollOffset=0;
this.FIRST_TIME_LOAD=true;
this.TOTAL_DAYS=0;
this.TOTAL_LOAD_DAYS=0;
this.PREDICTED_LOS_STAY=0;
this.INITIAL_LOAD_DAY=-1;
this.LAST_LOAD_DAY=-1;
this.VISIBLE_DAYS=0;
this.DAY_LOADED=[];
this.LOAD_DAY_TRIGGERED=-1;
this.X_AXIS_TICK_HEIGHT=24;
this.Y_AXIS_TICK_HEIGHT=55;
this.GRAPH_SCROLL_WIDTH=0;
this.DAY_MIN_WIDTH=self.soiI18n.DAY_TEXT.length<=3?51:54;
this.IGNORABLE_WIDTH=0.25;
this.SCROLL_BAR_SPEED_TO_LOAD_DATA=1000;
this.SCROLL_BAR_PIXEL_MOVEMENT=40;
};
this.chartDataObj=null;
}AoavSoiComponentWF.prototype=new MPageComponent();
AoavSoiComponentWF.prototype.constructor=MPageComponent;
AoavSoiComponentWF.prototype.getAoavPlot=function(){return this.chartDataObj.soiPlot;
};
AoavSoiComponentWF.prototype.getRequiredUnitsOfMeasure=function(){if(!this.requiredUnitsOfMeasure){this.requiredUnitsOfMeasure=null;
}return this.requiredUnitsOfMeasure;
};
AoavSoiComponentWF.prototype.setAoavPlot=function(plot){this.chartDataObj.soiPlot=plot;
};
AoavSoiComponentWF.prototype.setRequiredUnitsOfMeasure=function(reqdUnitsOfMeasure){if(!(reqdUnitsOfMeasure instanceof Array)){throw new Error("requiredUnitsOfMeasure array is not of Array type");
}this.requiredUnitsOfMeasure=reqdUnitsOfMeasure;
};
AoavSoiComponentWF.prototype.getUnitDisplayNamesArr=function(){if(!this.unitDisplayNamesArr){this.unitDisplayNamesArr=null;
}return this.unitDisplayNamesArr;
};
AoavSoiComponentWF.prototype.setUnitDisplayNamesArr=function(unitsOfMeasure){if(!(unitsOfMeasure instanceof Array)){throw new Error("unitDisplayNamesArr array is not of Array type");
}this.unitDisplayNamesArr=unitsOfMeasure;
};
AoavSoiComponentWF.prototype.getBenchmarkHospitalLos=function(){return this.benchmarkHospitalLos;
};
AoavSoiComponentWF.prototype.setBenchmarkHospitalLos=function(bmHospLos,bmHospLosInd){if(typeof bmHospLos!=="number"){throw new Error("Invalid benchmark Hospital LOS value passed.");
}this.benchmarkHospitalLos=(!bmHospLosInd)?"--":this.formatNumbers(bmHospLos.toFixed(1));
};
AoavSoiComponentWF.prototype.getBenchmarkICULos=function(){return this.benchmarkICULos;
};
AoavSoiComponentWF.prototype.setBenchmarkICULos=function(bmICULos,bmICULosInd){if(typeof bmICULos!=="number"){throw new Error("Invalid benchmark ICU LOS value passed.");
}this.benchmarkICULos=(!bmICULosInd)?"--":this.formatNumbers(bmICULos.toFixed(1));
};
AoavSoiComponentWF.prototype.getActualHospitalLos=function(){return this.actualHospitalLos;
};
AoavSoiComponentWF.prototype.setActualHospitalLos=function(actHospLos,actHospLosInd){if(typeof actHospLos!=="number"){throw new Error("Invalid actual Hospital LOS value passed.");
}this.actualHospitalLos=(!actHospLosInd)?"--":this.formatNumbers(actHospLos.toFixed(1));
};
AoavSoiComponentWF.prototype.getActualICULos=function(){return this.actualICULos;
};
AoavSoiComponentWF.prototype.setActualICULos=function(actICULos,actICULosInd){if(typeof actICULos!=="number"){throw new Error("Invalid actual ICU LOS value passed.");
}this.actualICULos=(!actICULosInd)?"--":this.formatNumbers(actICULos.toFixed(1));
};
AoavSoiComponentWF.prototype.getPredictedRemainingHospitalLos=function(){return this.predictedRemainingHospitalLos;
};
AoavSoiComponentWF.prototype.setPredictedRemainingHospitalLos=function(predRemHospLos,predRemHospLosInd){if(typeof predRemHospLos!=="number"){throw new Error("Invalid predicted remaining Hospital LOS value passed.");
}this.predictedRemainingHospitalLos=(!predRemHospLosInd)?"--":this.formatNumbers(predRemHospLos.toFixed(1));
};
AoavSoiComponentWF.prototype.getPredictedRemainingICULos=function(){return this.predictedRemainingICULos;
};
AoavSoiComponentWF.prototype.setPredictedRemainingICULos=function(predRemICULos,predRemICULosInd){if(typeof predRemICULos!=="number"){throw new Error("Invalid predicted remaining ICU LOS value passed.");
}this.predictedRemainingICULos=(!predRemICULosInd)?"--":this.formatNumbers(predRemICULos.toFixed(1));
};
AoavSoiComponentWF.prototype.retrieveComponentData=function(){var criterion=this.getCriterion();
var compId=this.getComponentId();
var self=this;
var startDayNumber=-1;
var renderAoavSoi="<div class='aoav_soi-main-cont'><div class='aoav_soi-error-div' id = 'soiGeneralErrorDiv"+compId+"'></div></div>";
var sendAr=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",startDayNumber];
var newAoavSoiScriptRequest=new ComponentScriptRequest();
var viewCatagoryMean=criterion.category_mean;
var loadTimer=new RTMSTimer(this.getComponentLoadTimerName(),viewCatagoryMean);
var renderTimer=new RTMSTimer(this.getComponentRenderTimerName(),viewCatagoryMean);
newAoavSoiScriptRequest.setProgramName("MP_GET_AOAV_SOI");
newAoavSoiScriptRequest.setParameterArray(sendAr);
newAoavSoiScriptRequest.setComponent(this);
newAoavSoiScriptRequest.setLoadTimer(loadTimer);
newAoavSoiScriptRequest.setRenderTimer(renderTimer);
newAoavSoiScriptRequest.setResponseHandler(function(scriptReply){self.scriptStatus=scriptReply.getResponse().STATUS_DATA.STATUS;
if(scriptReply.getResponse().STATUS_DATA.STATUS!=="F"){self.renderComponent(scriptReply.m_responseData);
}else{if(scriptReply.getResponse().STATUS_DATA.STATUS==="F"){self.finalizeComponent(renderAoavSoi,MP_Util.CreateTitleText(self));
self.createBannersForErrors(MPageUI.ALERT_OPTIONS.TYPE.ERROR,self.soiI18n.PRIMARY_SERVER_ERROR_STRING,self.soiI18n.SECONDARY_SERVER_ERROR_STRING);
}else{self.finalizeComponent(MP_Util.HandleErrorResponse(self.getStyles().getNameSpace()),(self.isLineNumberIncluded()?"(0)":""));
}}});
newAoavSoiScriptRequest.performRequest();
};
AoavSoiComponentWF.prototype.createSoiIndexTableInSidePanel=function(day){var soiIndexTablePhyRow;
var soiIndexTableComRow;
var soiIndexTableSupRow;
var soiIndexTableDetRow;
var emptyRow;
var soiScoreRow;
var icuRiskOfMortalityRow;
var hospitalRiskOfMortalityRow;
var percentageText="<span class='aoav_soi-percentage-text'>%</span>";
var detIndexArray=this.deteriorationIndexArr;
var phyIndexArray=this.physiologyIndexArr;
var comIndexArray=this.comorbidityIndexArr;
var supIndexArray=this.supportIndexArr;
var icuMorRiskArray=this.icuMortalityRisk;
var hospMorRiskArray=this.hospitalMortalityRisk;
var soiScoreArray=this.soiScore;
var soiRange=this.soiScoreRange[day-1];
var colonText=":";
this.m_soiIndexTableContainer.find("table.aoav_soi-index-table").remove();
var getSoiIndexTableRow=function retrieveSoiIndexTableRow(indexArrayData,indexIconClass,indexValueClass){indexIconClass=indexIconClass?indexIconClass:"";
indexValueClass=indexValueClass?indexValueClass:"";
var indexTableRow="<tr><td class='aoav_soi-index-icons'><div class='"+indexIconClass+"'></div></td>";
indexTableRow+="<td class='aoav_soi-index-labels'>"+indexArrayData.label+colonText+"</td>";
indexTableRow+="<td class='aoav_soi-index-values "+indexValueClass+"'>"+indexArrayData.value+"</td></tr>";
return indexTableRow;
};
indexTableRowHTML=getSoiIndexTableRow(phyIndexArray[day-1],"aoav_soi-phy-square")+getSoiIndexTableRow(comIndexArray[day-1],"aoav_soi-com-square")+getSoiIndexTableRow(supIndexArray[day-1],"aoav_soi-sup-square")+getSoiIndexTableRow(detIndexArray[day-1],"aoav_soi-det-square","aoav_soi-separating-border");
soiScoreRow="<tr><td class='aoav_soi-index-icons'></td><td class='aoav_soi-index-labels'>"+this.soiI18n.SEVERITY_OF_ILLNESS_TEXT+colonText+"</td><td class='aoav_soi-index-values aoav_soi-score'>"+soiScoreArray[day-1]+"</td></tr>";
emptyRow="<tr class='aoav_soi-index-table-empty-row'></tr>";
var getRiskRatioRow=function retrieveRiskRatioRow(riskClass,label,morRiskArrayValue,percentageText){percentageText=percentageText?percentageText:"";
var riskRatioRow="<tr><td class='aoav_soi-index-icons'><div class='"+riskClass+"'></div></td><td class='aoav_soi-index-labels'>";
riskRatioRow+=label+"</td><td class='aoav_soi-index-values'>"+morRiskArrayValue+percentageText+"</td></tr>";
return riskRatioRow;
};
if(isNaN(icuMorRiskArray[day-1])){icuRiskOfMortalityRow="";
}else{icuRiskOfMortalityRow=getRiskRatioRow("aoav_soi-triangle",this.soiI18n.ICU_RISK_OF_MORTALITY_LABEL,icuMorRiskArray[day-1],percentageText);
}if(isNaN(hospMorRiskArray[day-1])){hospitalRiskOfMortalityRow=getRiskRatioRow("aoav_soi-circle",this.soiI18n.HOSPITAL_RISK_OF_MORTALITY_LABEL,hospMorRiskArray[day-1]);
}else{hospitalRiskOfMortalityRow=getRiskRatioRow("aoav_soi-circle",this.soiI18n.HOSPITAL_RISK_OF_MORTALITY_LABEL,hospMorRiskArray[day-1],percentageText);
}var soiIndexJoinedTableRows=[indexTableRowHTML,soiScoreRow,emptyRow,icuRiskOfMortalityRow,hospitalRiskOfMortalityRow].join("");
this.m_soiSidePanelScrollContainer.find(".aoav_soi-diagnosis-content").remove();
var soiDiagnosisData="<div class='aoav_soi-diagnosis-content'> <div class='aoav_soi-diagnosis-first-col'>&nbsp;</div><div class='aoav_soi-diagnosis-data'><span class = 'aoav_soi-diagnosis-text'>"+this.soiI18n.DIAGNOSIS_TEXT+"</span>";
var diagnosisData=this.diagnosisDetails[day-1];
if(diagnosisData.length===0){soiDiagnosisData+="<span class='aoav_soi-empty-diagnosis'>--</span>";
}else{soiDiagnosisData+="<ol class='aoav_soi-diagnosis-ordered-list'>";
for(var idx=0;
idx<diagnosisData.length;
idx++){soiDiagnosisData+="<li><span>"+this.formatNumbers(diagnosisData[idx].sourceIdentifier)+" "+diagnosisData[idx].sourceString+"</span></li>";
}}soiDiagnosisData+="</ol></div></div>";
this.m_soiIndexTableContainer.append("<table class='aoav_soi-index-table'>"+soiIndexJoinedTableRows+"</table>"+soiDiagnosisData);
this.setDiagnosisDivWidth();
this.changeSOIScoreCss(soiRange);
};
AoavSoiComponentWF.prototype.createComorbidityDetailsTable=function(dayNum){var compId=this.getComponentId();
var self=this;
var comDetailsRowsString=[];
var comorbidityIndexArray=this.comorbidityIndexArr;
var comDetailsArr=comorbidityIndexArray[dayNum-1].components;
var comDetailsLength=comDetailsArr.length;
var comTableContainer=$("#soiComDetailsTable"+compId);
comTableContainer.remove();
this.m_soiComDetailsContainer.find(".aoav_soi-index-details-header span").text(comorbidityIndexArray[dayNum-1].label);
this.m_soiComDetailsContainer.append("<table class = 'aoav_soi-index-details-table aoav_soi-com-details-table' id = 'soiComDetailsTable"+compId+"'></table>");
var newComTableContainer=$("#soiComDetailsTable"+compId);
newComTableContainer.append("<tr><th class = 'aoav_soi-percentage-col'>%</th><th class = 'aoav_soi-item-col'> "+this.soiI18n.ITEM+" </th></tr>");
for(var i=0;
i<comDetailsLength;
i++){var comSubCatgories=comDetailsArr[i];
comDetailsRowsString.push("<tr><td>"+this.formatNumbers(comSubCatgories.percentValue)+"</td><td>"+comSubCatgories.componentName+"</td></tr>");
var subCategoryLength=comSubCatgories.comorbidities.length;
for(var k=0;
k<subCategoryLength;
k++){comDetailsRowsString.push("<tr><td></td><td><ul class='aoav_soi-com-sub'><li>"+this.formatNumbers(comSubCatgories.comorbidities[k].sourceString)+"&nbsp; &nbsp;"+comSubCatgories.comorbidities[k].sourceIdentifier+"</li></ul></td></tr>");
}}if(comDetailsLength<1){comDetailsRowsString.push("<tr><td>--</td><td>--</td></tr>");
}newComTableContainer.append(comDetailsRowsString.join(""));
};
AoavSoiComponentWF.prototype.createSupportDetailsTable=function(dayNum){var compId=this.getComponentId();
var self=this;
var supportDetailsRowsString=[];
var supportIndexArray=this.supportIndexArr;
var supportDetailsArr=supportIndexArray[dayNum-1].components;
var supportDetailsLength=supportDetailsArr.length;
var supportTableContainer=$("#soiSupDetailsTable"+compId);
supportTableContainer.remove();
this.m_soiSupDetailsContainer.find(".aoav_soi-index-details-header span").text(supportIndexArray[dayNum-1].label);
this.m_soiSupDetailsContainer.append("<table class = 'aoav_soi-index-details-table aoav_soi-sup-details-table' id = 'soiSupDetailsTable"+compId+"'></table>");
var newSupTableContainer=$("#soiSupDetailsTable"+compId);
newSupTableContainer.append("<tr><th class = 'aoav_soi-percentage-col'>%</th><th class = 'aoav_soi-item-col'> "+this.soiI18n.ITEM+" </th></tr>");
for(var i=0;
i<supportDetailsLength;
i++){supportDetailsRowsString.push("<tr><td>"+this.formatNumbers(supportDetailsArr[i].percent)+"</td><td>"+supportDetailsArr[i].itemDisplay+"</td></tr>");
}if(supportDetailsLength<1){supportDetailsRowsString.push("<tr><td>--</td><td>--</td></tr>");
}newSupTableContainer.append(supportDetailsRowsString.join(""));
};
AoavSoiComponentWF.prototype.createDeteriorationDetailsTable=function(dayNum){var compId=this.getComponentId();
var self=this;
var detDetailsRowsString=[];
var deteriorationIndexArray=this.deteriorationIndexArr;
var detDetailsArr=deteriorationIndexArray[dayNum-1].components;
var detDetailsLength=detDetailsArr.length;
var detTableContainer=$("#soiDetDetailsTable"+compId);
detTableContainer.remove();
this.m_soiDetDetailsContainer.find(".aoav_soi-index-details-header span").text(deteriorationIndexArray[dayNum-1].label);
this.m_soiDetDetailsContainer.append("<table class = ' aoav_soi-index-details-table aoav_soi-det-details-table' id = 'soiDetDetailsTable"+compId+"'></table>");
var newDetTableContainer=$("#soiDetDetailsTable"+compId);
newDetTableContainer.append("<tr><th class = 'aoav_soi-percentage-col'>%</th><th class = 'aoav_soi-item-col'> "+this.soiI18n.ITEM+" </th></tr>");
for(var i=0;
i<detDetailsLength;
i++){detDetailsRowsString.push("<tr><td>"+this.formatNumbers(detDetailsArr[i].percent)+"</td><td>"+detDetailsArr[i].itemDisplay+"</td></tr>");
}if(detDetailsLength<1){detDetailsRowsString.push("<tr><td>--</td><td>--</td></tr>");
}newDetTableContainer.append(detDetailsRowsString.join(""));
this.m_soiSidePanelObj.resizePanel(self.MAX_SOISP_HEIGHT);
};
AoavSoiComponentWF.prototype.createPhysiologyDetailsTable=function(dayNum){var compId=this.getComponentId();
var self=this;
var phyDetailsRowsString=[];
var physiologyIndexArray=this.physiologyIndexArr;
var piDetailsArr=physiologyIndexArray[dayNum-1].components;
var piDetailsLength=piDetailsArr.length;
var phyTableContainer=$("#soiPhyDetailsTable"+compId);
var requiredUnitsOfMeasureArr=this.getRequiredUnitsOfMeasure();
var requiredUnitsOfMeasureLen=requiredUnitsOfMeasureArr.length;
phyTableContainer.remove();
this.m_soiPhyDetailsContainer.find(".aoav_soi-index-details-header span").text(physiologyIndexArray[dayNum-1].label);
this.m_soiPhyDetailsContainer.append("<table class = 'aoav_soi-index-details-table aoav_soi-phy-details-table' id = 'soiPhyDetailsTable"+compId+"'></table>");
var newPhyTableContainer=$("#soiPhyDetailsTable"+compId);
newPhyTableContainer.append("<tr><th class = 'aoav_soi-percentage-col'>%</th><th class = 'aoav_soi-body-system-col aoav_soi-phyIndex-details-col'> "+this.soiI18n.BODY_SYSTEM+" </th><th class = 'aoav_soi-high-col'> "+this.soiI18n.HIGH+" </th><th class = 'aoav_soi-median-col'> "+this.soiI18n.MEDIAN+" </th><th class= 'aoav_soi-low-col'> "+this.soiI18n.LOW+" </th></tr>");
var unitOfDisplayNamesArray=this.getUnitDisplayNamesArr();
if(unitOfDisplayNamesArray[dayNum-1].length===0){unitOfDisplayNamesArray[dayNum-1]=[];
for(var idx=0;
idx<piDetailsLength;
idx++){for(var k=0;
k<requiredUnitsOfMeasureLen;
k++){if(piDetailsArr[idx].unitOfMeasureCd===requiredUnitsOfMeasureArr[k].codeValue){unitOfDisplayNamesArray[dayNum-1].push(requiredUnitsOfMeasureArr[k].display);
}}}self.setUnitDisplayNamesArr(unitOfDisplayNamesArray);
}var disabledColSpan="<span class = 'aoav_soi-disabled'>"+this.soiI18n.NOT_AVAILABLE+"</span>";
for(var i=0;
i<piDetailsLength;
i++){phyDetailsRowsString.push("<tr><td>"+(piDetailsArr[i].percentInd?this.formatNumbers(piDetailsArr[i].percent):"--")+"</td><td class='aoav_soi-phyIndex-details-col'><span><span>"+piDetailsArr[i].bodySystemDisplay+"<span class='aoav_soi-unit-of-measure'>("+this.getUnitDisplayNamesArr()[dayNum-1][i]+")</span></span></span></td><td class='aoav_soi-phy-high'>"+(piDetailsArr[i].highFlag==1?this.formatNumbers(piDetailsArr[i].high):(piDetailsArr[i].highFlag===0)?"--":disabledColSpan)+"</td><td class='aoav_soi-phy-median'>"+(piDetailsArr[i].medianFlag==1?this.formatNumbers(piDetailsArr[i].median):(piDetailsArr[i].medianFlag===0)?"--":disabledColSpan)+"</td><td class='aoav_soi-phy-low'>"+(piDetailsArr[i].lowFlag==1?this.formatNumbers(piDetailsArr[i].low):(piDetailsArr[i].lowFlag===0)?"--":disabledColSpan)+"</td></tr>");
}newPhyTableContainer.append(phyDetailsRowsString.join(""));
};
AoavSoiComponentWF.prototype.formatNumbers=function(number){if(mp_formatter._isNumber(number)){var precision=MP_Util.CalculatePrecision(number);
var precisionString="."+precision;
validNum=this.numberFormatter.format(number,precisionString);
return validNum;
}else{return number;
}};
AoavSoiComponentWF.prototype.getSoiUnitOfMeasure=function(dayNum){var self=this;
if(this.getRequiredUnitsOfMeasure().length===0){var requiredUnitsOfMeasureArray=[];
var unitOfMeasureCodes=null;
MP_Util.GetCodeSetAsync(54,function(unitOfMeasureCodes){var unitCodeArrLen=unitOfMeasureCodes.length;
for(var j=0;
j<self.physiologyIndexArr[dayNum-1].components.length;
j++){for(var idx=0;
idx<unitCodeArrLen;
idx++){if(unitOfMeasureCodes[idx].CODE==self.physiologyIndexArr[dayNum-1].components[j].unitOfMeasureCd){requiredUnitsOfMeasureArray.push({codeValue:unitOfMeasureCodes[idx].CODE,meaning:unitOfMeasureCodes[idx].MEANING,display:unitOfMeasureCodes[idx].DISPLAY});
}}}self.setRequiredUnitsOfMeasure(requiredUnitsOfMeasureArray);
self.createPhysiologyDetailsTable(dayNum);
});
}else{self.createPhysiologyDetailsTable(dayNum);
}};
AoavSoiComponentWF.prototype.createDateString=function(dateGiven){try{var curDate=new Date();
curDate.setISO8601(dateGiven);
return dateFormat(curDate,dateFormat.masks.longDate)+" "+curDate.format("HH:MM");
}catch(error){MP_Util.LogJSError(error,this,"aoav-soi-o1.js","createDateString");
}};
AoavSoiComponentWF.prototype.graphClickEventHandler=function(dayNumber){var self=this;
var compId=this.getComponentId();
var chartDataObj=this.chartDataObj;
var aoavSoiResult=this.m_reply;
var selectedDay=parseInt(dayNumber,10);
if(this.soiDataPresent[selectedDay-1]){var reCalculateGraphSize=false;
if(!self.m_showPanel){self.m_showPanel=true;
self.m_soiIndexDivContainer.show();
self.m_soiSidePanelObj.showPanel();
chartDataObj.graphWidthPercent=0.59;
reCalculateGraphSize=true;
}self.m_soiSidePanelMainHeaderCont.find(".aoav_soi-day-number").text(dayNumber);
var dateText=self.createDateString(self.dateOfTheDay[dayNumber-1]);
self.m_soiSidePanelMainHeaderCont.find(".aoav_soi-day-date").text(dateText);
self.createSoiIndexTableInSidePanel(selectedDay);
self.createPhysiologyDetailsTable(selectedDay);
self.createComorbidityDetailsTable(selectedDay);
self.createSupportDetailsTable(selectedDay);
self.createDeteriorationDetailsTable(selectedDay);
if(chartDataObj.selectedDay!==selectedDay||reCalculateGraphSize){chartDataObj.selectedDay=selectedDay;
self.m_soiGraphContainer.find(".aoav_soi-graph-day-button-selected").removeClass("aoav_soi-graph-day-button-selected");
$("#button_"+chartDataObj.selectedDay+"_"+compId).addClass("aoav_soi-graph-day-button-selected");
self.reDrawGraph(true,reCalculateGraphSize);
}}};
AoavSoiComponentWF.prototype.changeSOIScoreCss=function(soiRange){var soiIndexTable=this.m_soiIndexTableContainer;
switch(soiRange){case"":soiIndexTable.find("td.aoav_soi-score").removeClass("aoav_soi-range-normal aoav_soi-range-critical aoav_soi-range-high").addClass("aoav_soi-range-null");
break;
case"HIGH":soiIndexTable.find("td.aoav_soi-score").removeClass("aoav_soi-range-normal aoav_soi-range-critical aoav_soi-range-null").addClass("aoav_soi-range-high");
soiIndexTable.find("td.aoav_soi-score").prepend("<span class='aoav_soi-image-high'></span>");
break;
case"NORMAL":soiIndexTable.find("td.aoav_soi-score").removeClass("aoav_soi-range-high aoav_soi-range-critical aoav_soi-range-null").addClass("aoav_soi-range-normal");
break;
case"CRITICAL":soiIndexTable.find("td.aoav_soi-score").removeClass("aoav_soi-range-high aoav_soi-range-normal aoav_soi-range-null").addClass("aoav_soi-range-critical");
soiIndexTable.find("td.aoav_soi-score").prepend("<span class='aoav_soi-image-crit'></span>");
break;
}};
AoavSoiComponentWF.prototype.constructHospHoverTable=function(hospLosLabelCollection,hospLosValuesCollection){var i;
var hospLosTooltip="";
for(i=0;
i<hospLosLabelCollection.length;
i++){if(hospLosValuesCollection[i]!=="--"){hospLosTooltip+="<tr><td><span class='aoav-soi-benchmark-hosp-tooltip-labeltext'>"+hospLosLabelCollection[i]+"</span>  </td> <td> <span class ='aoav-soi-benchmark-hosp-tooltip-valuetext'>"+hospLosValuesCollection[i]+"  "+this.soiI18n.LENGTH_OF_STAY_DAYS_TEXT+"</span></td></tr>";
}else{hospLosTooltip+="<tr><td><span class='aoav-soi-benchmark-hosp-tooltip-labeltext'>"+hospLosLabelCollection[i]+"</span>  </td> <td> <span class ='aoav-soi-benchmark-hosp-tooltip-valuetext'>"+hospLosValuesCollection[i]+"</span></td></tr>";
}}return"<div class='aoav-soi-hosp-tooltip'><span class='aoav-soi-hosp-tooltip-header'>"+this.soiI18n.BENCHMARK_HOSPITAL_LOS_TOOLTIP_TABLE_HEADER+"</span><table class='aoav-soi-benchmark-hosp-tooltip-table'>"+hospLosTooltip+"</table></div>";
};
AoavSoiComponentWF.prototype.constructICUHoverTable=function(losLabelCollection,hosLosValuesCollection,icuLosValuesCollection){var hosLosTooltipTable="";
var icuLosTooltip="";
hosLosTooltipTable=this.constructHospHoverTable(losLabelCollection,hosLosValuesCollection);
for(var i=0;
i<losLabelCollection.length;
i++){if(icuLosValuesCollection[i]!=="--"){icuLosTooltip+="<tr><td><span class='aoav-soi-benchmark-icu-tooltip-labeltext'>"+losLabelCollection[i]+"</span> </td> <td> <span class ='aoav-soi-benchmark-icu-tooltip-valuetext'>"+icuLosValuesCollection[i]+" "+this.soiI18n.LENGTH_OF_STAY_DAYS_TEXT+" </span></td></tr>";
}else{icuLosTooltip+="<tr><td><span class='aoav-soi-benchmark-icu-tooltip-labeltext'>"+losLabelCollection[i]+"</span> </td> <td> <span class ='aoav-soi-benchmark-icu-tooltip-valuetext'>"+icuLosValuesCollection[i]+" </span></td></tr>";
}}return"<div class='aoav-soi-icu-tooltip'><span class='aoav-soi-icu-tooltip-header'>"+this.soiI18n.BENCHMARK_ICU_LOS_TOOLTIP_TABLE_HEADER+"</span><table class='aoav-soi-benchmark-icu-tooltip-table'>"+icuLosTooltip+"</table></div>"+hosLosTooltipTable;
};
AoavSoiComponentWF.prototype.changeLengthOfStayLabels=function(mostRecentDayLevelOfCare){var self=this;
var predictedRemHospLosDays=this.predictedRemainingHospitalLengthOfStayDays;
var predictedRemICULosDays=this.predictedRemainingICULengthOfStayDays;
var benchmarkHospLosDays=this.benchmarkHospitalLengthOfStayDays;
var benchmarkICULosDays=this.benchmarkICULengthOfStayDays;
var actualHospLosDays=this.actualHospitalLengthOfStayDays;
var actualICULosDays=this.actualICULengthOfStayDays;
var predictedRemHospLosDaysInd=this.predictedRemainingHospitalLengthOfStayDaysInd;
var predictedRemIcuLosDaysInd=this.predictedRemainingICULengthOfStayDaysInd;
var benchmarkHospLosDaysInd=this.benchmarkHospitalLengthOfStayDaysInd;
var benchmarkIcuLosDaysInd=this.benchmarkICULengthOfStayDaysInd;
var actualHospLosDaysInd=this.actualHospitalLengthOfStayDaysInd;
var actualIcuLosDaysInd=this.actualICULengthOfStayDaysInd;
self.setBenchmarkHospitalLos(benchmarkHospLosDays,benchmarkHospLosDaysInd);
self.setBenchmarkICULos(benchmarkICULosDays,benchmarkIcuLosDaysInd);
self.setActualHospitalLos(actualHospLosDays,actualHospLosDaysInd);
self.setActualICULos(actualICULosDays,actualIcuLosDaysInd);
self.setPredictedRemainingHospitalLos(predictedRemHospLosDays,predictedRemHospLosDaysInd);
self.setPredictedRemainingICULos(predictedRemICULosDays,predictedRemIcuLosDaysInd);
self.m_soiLabelContainer.append("<div class='aoav_soi-len-of-stay'> </div>");
var icuLosHtml="<span class='aoav_soi-los-benchmark-icu'> <label class='aoav_soi-los-benchmark-icu-label'>"+self.soiI18n.BENCHMARK_ICU_LENGTH_OF_STAY_LABEL+"</label> <span class='aoav_soi-los-values'>"+self.getBenchmarkICULos();
var hospitalLosHtml="<span class='aoav_soi-los-benchmark-hosp'> <label class='aoav_soi-los-benchmark-hosp-label'>"+self.soiI18n.BENCHMARK_HOSPITAL_LENGTH_OF_STAY_LABEL+" </label> <span class='aoav_soi-los-values'>"+self.getBenchmarkHospitalLos();
var tooltipTableLabelArray=[self.soiI18n.BENCHMARK_PREDICTED_LOS_TOOLTIP_TABLE_LABEL,self.soiI18n.ACTUAL_LOS_TOOLTIP_TABLE_LABEL,self.soiI18n.PREDICTED_REMAINING_TOOLTIP_TABLE_LABEL];
var tooltipTableHospitalLosValuesArray=[self.getBenchmarkHospitalLos(),self.getActualHospitalLos(),self.getPredictedRemainingHospitalLos()];
var tooltipTableICULosValuesArray=[self.getBenchmarkICULos(),self.getActualICULos(),self.getPredictedRemainingICULos()];
var icuLosTooltipTable=self.constructICUHoverTable(tooltipTableLabelArray,tooltipTableHospitalLosValuesArray,tooltipTableICULosValuesArray);
var hospitalLosTooltipTable=self.constructHospHoverTable(tooltipTableLabelArray,tooltipTableHospitalLosValuesArray);
if(mostRecentDayLevelOfCare==="ICU"){if(benchmarkIcuLosDaysInd||(benchmarkIcuLosDaysInd&&benchmarkHospLosDaysInd)){self.m_soiLabelContainer.find(".aoav_soi-len-of-stay").append(icuLosHtml+"   "+self.soiI18n.LENGTH_OF_STAY_DAYS_TEXT+"</span></span>");
self.m_soiLabelContainer.find(".aoav_soi-los-benchmark-icu").mouseover(function(event){self.benchmarkICULosTooltip=new MPageTooltip();
self.benchmarkICULosTooltip.setX(event.pageX).setY(event.pageY).setOffsetX(0).setOffsetY(10).setAnchor($(this)).setShowDelay(0).setContent(icuLosTooltipTable);
self.benchmarkICULosTooltip.show();
self.benchmarkICULosTooltip.getContent().addClass("aoav_soi-los-tool-tip");
});
}else{self.m_soiLabelContainer.find(".aoav_soi-len-of-stay").append(icuLosHtml+"</span></span>");
}}else{if(benchmarkHospLosDaysInd){self.m_soiLabelContainer.find(".aoav_soi-len-of-stay").append(hospitalLosHtml+"   "+self.soiI18n.LENGTH_OF_STAY_DAYS_TEXT+"</span></span>");
self.m_soiLabelContainer.find(".aoav_soi-los-benchmark-hosp").mouseover(function(event){self.benchmarkHospLosTooltip=new MPageTooltip();
self.benchmarkHospLosTooltip.setX(event.pageX).setY(event.pageY).setOffsetX(0).setOffsetY(10).setAnchor($(this)).setShowDelay(0).setContent(hospitalLosTooltipTable);
self.benchmarkHospLosTooltip.show();
self.benchmarkHospLosTooltip.getContent().addClass("aoav_soi-los-tool-tip");
});
}else{self.m_soiLabelContainer.find(".aoav_soi-len-of-stay").append(hospitalLosHtml+"</span></span>");
}}};
AoavSoiComponentWF.prototype.addReadmissionLabels=function(){var compId=this.getComponentId();
var icuReadmissionRiskInd=this.riskOfICUReadmissionInd;
var hospReadmissionRiskInd=this.riskOfHospitalReadmissionInd;
var icuReadmissionRiskValue=this.riskOfICUReadmission;
var hospReadmissionRiskValue=this.riskOfHospitalReadmission;
this.m_soiLabelContainer.append("<div id='soiReadmission"+compId+"' class='aoav_soi-readmission'> </div>");
var icuReadmissionRiskHtml="<span class='aoav_soi-icu-readmission'> <label class='aoav_soi-readmission-label'>"+this.soiI18n.RISK_OF_ICU_READMISSION_LABEL+"</label> <span class='aoav_soi-readmission-values'>"+icuReadmissionRiskValue+"%</span></span>";
var hospReadmissionRiskHtml="<span class='aoav_soi-hosp-readmission'> <label class='aoav_soi-readmission-label'>"+this.soiI18n.RISK_OF_HOSPITAL_READMISSION_LABEL+" </label> <span class='aoav_soi-readmission-values'>"+hospReadmissionRiskValue+"%</span></span>";
if(icuReadmissionRiskInd&&!hospReadmissionRiskInd){this.m_soiLabelContainer.find(".aoav_soi-readmission").append(icuReadmissionRiskHtml);
}else{if(hospReadmissionRiskInd&&!icuReadmissionRiskInd){this.m_soiLabelContainer.find(".aoav_soi-readmission").append(hospReadmissionRiskHtml);
}else{this.m_soiLabelContainer.find(".aoav_soi-readmission").remove();
}}};
AoavSoiComponentWF.prototype.initializeSidePanel=function(latestDay,latestDate){var self=this;
var compId=this.getComponentId();
var panelContainerId="soiSidePanelContainer"+compId;
this.m_sidePanelContainer=$("#soiSidePanelContainer"+compId);
this.m_soiIndexTableContainer=$("#soiIndexTableContainer"+compId);
this.m_soiSidePanelScrollContainer=$("#sidePanelScrollContainer"+compId);
this.m_soiSidePanelHeight=350;
this.m_sidePanelBodyHeader=$("#soiIndexBodyHeader"+compId);
this.m_soiSidePanelObj=new CompSidePanel(compId,panelContainerId);
var displaySidePanel="<div id = '"+panelContainerId+"' class = 'aoav_soi-side-panel'>&nbsp;</div>";
var soiIndexTableDivString="<div class = 'aoav_soi-index-table-cont' id = 'soiIndexTableContainer"+compId+"'></div>";
var soiSidePanelContentArray=[];
var headerContentArray=[];
this.m_soiIndexDivContainer.append(displaySidePanel);
soiSidePanelContentArray.push("<div id = 'sidePanelScrollContainer"+compId+"' class = 'sp-body-content-area'>");
soiSidePanelContentArray.push(" <div class = 'aoav_soi-index-body-div'><div class = 'aoav_soi-index-body-header' id = 'soiIndexBodyHeader"+compId+"'>");
soiSidePanelContentArray.push("<p class = 'aoav_soi-index-body-heading-text'>"+this.soiI18n.SEVERITY_OF_ILLNESS_TEXT+"</p></div>");
soiSidePanelContentArray.push(soiIndexTableDivString);
soiSidePanelContentArray.push("</div></div>");
var contents=soiSidePanelContentArray.join("");
this.m_soiSidePanelObj.setUniqueId(compId);
this.m_soiSidePanelObj.setMinHeight(this.MIN_SOISP_HEIGHT+"px");
this.m_soiSidePanelObj.setHeight(this.m_soiSidePanelHeight+"px");
this.m_soiSidePanelObj.setWidth("100%");
this.m_soiSidePanelObj.setExpandOption(this.m_soiSidePanelObj.expandOption.EXPAND_DOWN);
this.m_soiSidePanelObj.renderPreBuiltSidePanel();
this.m_soiSidePanelObj.setContents(contents,"soiSidepanelContent"+compId);
this.m_soiSidePanelObj.showCornerCloseButton();
this.m_soiSidePanelObj.setOnExpandFunction(function(){self.m_sidePanelContainer.css("width","40%");
});
this.m_soiSidePanelObj.setOnCollapseFunction(function(){self.m_sidePanelContainer.css("width","100%");
self.resizeComponent();
});
headerContentArray.push("<div class='aoav_soi-header-index' id = 'soiSidePanelMainHeader"+compId+"'>");
headerContentArray.push("<p class='aoav_soi-day-span'>"+this.soiI18n.DAY_TEXT+" <span class='aoav_soi-day-number'>"+latestDay+"</span></p>");
headerContentArray.push("<p class='aoav_soi-date-span'><span class='aoav_soi-start-text'> "+this.soiI18n.START_TEXT+"  </span><span class='aoav_soi-day-date'>"+latestDate+"</span></p>");
headerContentArray.push("</div>");
var headerContent=headerContentArray.join("");
this.m_soiSidePanelObj.setSubtitleAsHTML(headerContent);
this.m_sidePanelContainer=$("#soiSidePanelContainer"+compId);
this.m_sidePanelBodyCont=$("#sidePanelBodyContents"+compId);
this.m_soiIndexTableContainer=$("#soiIndexTableContainer"+compId);
this.m_soiSidePanelScrollContainer=$("#sidePanelScrollContainer"+compId);
this.m_sidePanelBodyCont.addClass("aoav_soi-side-panel-padding");
this.m_soiSidePanelMainHeaderCont=$("#soiSidePanelMainHeader"+compId);
this.m_sidePanelContainer.find(".sp-header-text").hide();
this.m_soiSidePanelScrollContainer.append("<div class='sp-separator2'>&nbsp;</div>");
var physiologyDetailsDivStr="<div class = 'aoav_soi-index-details-div' id = 'soiPhyDetailsDiv"+compId+"'><div class = 'aoav_soi-index-details-header'><div class='aoav_soi-phy-square aoav_soi-index-details-square'></div><span></span></div></div>";
this.m_soiSidePanelScrollContainer.append(physiologyDetailsDivStr);
this.m_soiSidePanelScrollContainer.append("<div class='sp-separator2'>&nbsp;</div>");
var comorbidityDetailsDivStr="<div class = 'aoav_soi-index-details-div' id = 'soiComDetailsDiv"+compId+"'><div class = 'aoav_soi-index-details-header'><div class='aoav_soi-com-square aoav_soi-index-details-square'></div><span></span></div></div>";
this.m_soiSidePanelScrollContainer.append(comorbidityDetailsDivStr);
this.m_soiSidePanelScrollContainer.append("<div class='sp-separator2'>&nbsp;</div>");
var supportDetailsDivStr="<div class = 'aoav_soi-index-details-div' id = 'soiSupDetailsDiv"+compId+"'><div class = 'aoav_soi-index-details-header'><div class='aoav_soi-sup-square aoav_soi-index-details-square'></div><span></span></div></div>";
this.m_soiSidePanelScrollContainer.append(supportDetailsDivStr);
this.m_soiSidePanelScrollContainer.append("<div class='sp-separator2'>&nbsp;</div>");
var deteriorationDetailsDivStr="<div class = 'aoav_soi-index-details-div' id = 'soiDetDetailsDiv"+compId+"'><div class = 'aoav_soi-index-details-header'><div class='aoav_soi-det-square aoav_soi-index-details-square'></div><span></span></div></div>";
this.m_soiSidePanelScrollContainer.append(deteriorationDetailsDivStr);
this.m_soiSidePanelScrollContainer.append("<div class='sp-separator2'>&nbsp;</div>");
this.m_soiPhyDetailsContainer=$("#soiPhyDetailsDiv"+compId);
this.m_soiComDetailsContainer=$("#soiComDetailsDiv"+compId);
this.m_soiSupDetailsContainer=$("#soiSupDetailsDiv"+compId);
this.m_soiDetDetailsContainer=$("#soiDetDetailsDiv"+compId);
};
AoavSoiComponentWF.prototype.setDiagnosisDivWidth=function(){var indexTableTdWidth=this.m_soiSidePanelScrollContainer.find(".aoav_soi-index-icons").outerWidth(true);
this.m_soiSidePanelScrollContainer.find(".aoav_soi-diagnosis-first-col").width(indexTableTdWidth+"px");
};
AoavSoiComponentWF.prototype.resizeComponent=function(){if(this.scriptStatus=="S"){this.reDrawGraph(false,true);
var errorDivHeight=this.m_generalErrorDivCont.height();
var soiLabelDivHeight=this.m_soiLabelContainer.height();
var bannerAndErrorDivHeight=errorDivHeight+soiLabelDivHeight;
var windowPadding=document.documentMode<=8?85:60;
var extraViewHeight=windowPadding+bannerAndErrorDivHeight;
var maxViewHeight=(this.m_compViewCont.height()-extraViewHeight)+"px";
this.MAX_SOISP_HEIGHT=maxViewHeight;
this.m_soiSidePanelObj.resizePanel(this.MAX_SOISP_HEIGHT);
this.setDiagnosisDivWidth();
}};
AoavSoiComponentWF.prototype.calculateGraphSize=function(){var chartDataObj=this.chartDataObj;
var borderPixels=2;
var graphContainerWidth=this.m_soiGraphContainer.width();
chartDataObj.VISIBLE_DAYS=Math.ceil((graphContainerWidth/chartDataObj.DAY_MIN_WIDTH)-chartDataObj.IGNORABLE_WIDTH);
var soiWidth=this.soiContentContainer.find(".aoav_soi-graph-sp").width();
this.soiContentContainerRecentWidth=soiWidth;
var yaxisWidth=54;
var totalgraphWidth=chartDataObj.graphWidthPercent*soiWidth;
var graphWidth=totalgraphWidth-yaxisWidth;
this.m_soiGraphContainer.width(graphWidth+"px");
this.soiContentContainer.find(".aoav_soi-graph-yvalue-main-div").width(yaxisWidth+"px");
if(this.m_soiGraphContainer.width()<chartDataObj.TOTAL_DAYS*chartDataObj.DAY_MIN_WIDTH){chartDataObj.GRAPH_SCROLL_WIDTH=chartDataObj.TOTAL_DAYS*chartDataObj.DAY_MIN_WIDTH;
chartDataObj.chartMainDivContainer.width(chartDataObj.GRAPH_SCROLL_WIDTH+"px");
chartDataObj.scrollbarHeight=17;
chartDataObj.chartContainer.width("100%");
chartDataObj.currentScrollClass=chartDataObj.scrollClass;
this.m_soiGraphContainer.addClass(chartDataObj.scrollClass);
chartDataObj.chartMainDivContainer.addClass(chartDataObj.scrollClass);
this.m_soiGraphContainer.find(chartDataObj.noScrollClass).toggleClass(chartDataObj.scrollClass);
}else{this.m_soiGraphContainer.removeClass(chartDataObj.scrollClass);
chartDataObj.chartMainDivContainer.removeClass(chartDataObj.scrollClass);
this.m_soiGraphContainer.find(chartDataObj.scrollClass).toggleClass(chartDataObj.noScrollClass);
var chartWidth=$(this.m_soiGraphContainer).width()-borderPixels;
chartDataObj.chartMainDivContainer.width(chartWidth+"px");
chartDataObj.chartContainer.width(chartWidth+"px");
chartDataObj.scrollbarHeight=0;
chartDataObj.GRAPH_SCROLL_WIDTH=0;
chartDataObj.currentScrollClass=chartDataObj.noScrollClass;
}chartDataObj.graphHeight=chartDataObj.dynamicSidePanelHeight-chartDataObj.X_AXIS_TICK_HEIGHT*3-chartDataObj.scrollbarHeight;
chartDataObj.chartContainer.height(chartDataObj.graphHeight+"px");
this.m_soiGraphContainer.height(chartDataObj.dynamicSidePanelHeight+"px");
};
AoavSoiComponentWF.prototype.reDrawGraph=function(reloadGraph,reCalculateGraphSize){var compId=this.getComponentId();
var chartDataObj=this.chartDataObj;
var component=this;
var graphOptions=chartDataObj.soiGraphOptions;
if(reCalculateGraphSize){this.calculateGraphSize();
}var aoavPlot=this.getAoavPlot();
if(aoavPlot){aoavPlot.destroy();
if(!reloadGraph&&reCalculateGraphSize){$.each(aoavPlot.series,function(index,series){series.barWidth=null;
});
aoavPlot.replot();
this.updateGraphAxes();
}else{if(reloadGraph){this.setPlotOptionsObj();
var soiPlot=$.jqplot(chartDataObj.chartId,[graphOptions.physiologyIndex,graphOptions.comorbidityIndex,graphOptions.supportIndex,graphOptions.deteriorationIndex,graphOptions.hospitalMortalityRisk,graphOptions.icuMortalityRisk],this.getPlotOptionsObj());
this.setAoavPlot(soiPlot);
if(reCalculateGraphSize){this.updateGraphAxes();
}}}}var soiWidth=this.soiContentContainer.find(".aoav_soi-graph-sp").width();
if(this.soiContentContainerRecentWidth!=soiWidth&&!this.reloadGraph){this.reloadGraph=true;
this.reDrawGraph(reloadGraph,reCalculateGraphSize);
}else{this.reloadGraph=false;
}setTimeout(function(){var soiWidth=component.soiContentContainer.find(".aoav_soi-graph-sp").width();
if(component.soiContentContainerRecentWidth!=soiWidth&&!component.reloadGraph){component.reloadGraph=true;
component.reDrawGraph(reloadGraph,reCalculateGraphSize);
}},50);
};
AoavSoiComponentWF.prototype.setPlotOptionsObj=function(){var chartDataObj=this.chartDataObj;
var graphOptions=chartDataObj.soiGraphOptions;
chartDataObj.soiPlotOptionsObj={stackSeries:true,seriesDefaults:{renderer:$.jqplot.BarRenderer,rendererOptions:{highlightMouseOver:false},pointLabels:{show:false,stackedValue:true}},series:[{renderer:$.jqplot.BarRenderer,color:"#007CC3",xaxis:"x2axis",shadow:false},{renderer:$.jqplot.BarRenderer,color:"#26A2E5",shadow:false},{renderer:$.jqplot.BarRenderer,color:"#FFCE3B",shadow:false},{renderer:$.jqplot.BarRenderer,color:"#DAACE6",shadow:false},{disableStack:true,renderer:$.jqplot.LineRenderer,color:"#000000",lineWidth:2,breakOnNull:graphOptions.breakOnNull,pointLabels:{show:false},markerOptions:{show:true,style:"circle",size:8,shadow:false,shapeRenderer:new $.jqplot.aoavCircleRenderer()}},{disableStack:true,renderer:$.jqplot.LineRenderer,color:"#000000",lineWidth:2,breakOnNull:graphOptions.breakOnNull,pointLabels:{show:false},markerOptions:{show:true,size:10,style:"filledTriangleUp",shadow:true,markerBackgroundColor:"#FFFFFF"}}],axes:{xaxis:{renderer:$.jqplot.CategoryAxisRenderer,ticks:graphOptions.x1AxisTicks,pad:0,tickOptions:{fontSize:"10pt",mark:"inside",show:graphOptions.showX1axis,showLabel:graphOptions.showX1axis,showMark:graphOptions.showX1axis,formatString:"%0.0f"}},yaxis:{min:graphOptions.yMin,max:graphOptions.yMax,tickInterval:5,drawMajorGridlines:false,drawMinorGridlines:false,tickOptions:{show:graphOptions.showYaxis,showLabel:graphOptions.showYaxis,showMark:graphOptions.showYaxis,formatString:"%d"}},x2axis:{renderer:$.jqplot.CategoryAxisRenderer,ticks:graphOptions.x2AxisTicks,tickOptions:{fontSize:"10pt",show:true,showLabel:graphOptions.showX2axis,showMark:true}}},gridPadding:{top:graphOptions.gridPadding,right:graphOptions.gridPadding,bottom:graphOptions.gridPadding,left:graphOptions.gridPaddingLeft},grid:{drawGridLines:true,gridLineColor:"#DDDDDD",backgroundColor:"#FFFFFF",borderColor:"#A5A5A5",shadow:false,drawBorder:false,borderWidth:0},canvasOverlay:{show:true,objects:[{rectangle:{name:"lowOverlay",xmin:0,xmax:chartDataObj.TOTAL_DAYS+0.5,ymin:0,ymax:25,xminOffset:"0px",xmaxOffset:"0px",yminOffset:"0px",ymaxOffset:"0px",color:graphOptions.lowOverlayColor}},{rectangle:{name:"midOverlayColor",xmin:0,xmax:chartDataObj.TOTAL_DAYS+0.5,ymin:50,ymax:75,xminOffset:"0px",xmaxOffset:"0px",yminOffset:"0px",ymaxOffset:"0px",color:graphOptions.midOverlayColor}},{rectangle:{name:"selectedDayOverlayColor",xmin:chartDataObj.selectedDay-0.5,xmax:chartDataObj.selectedDay+0.5,ymin:graphOptions.yMin,ymax:graphOptions.yMax,xminOffset:"0px",x2maxOffset:"0px",yminOffset:"0px",ymaxOffset:"0px",color:graphOptions.selectedDayOverlayColor}}]},highlighter:{show:false},cursor:{showTooltip:false},cursor:{show:false}};
};
AoavSoiComponentWF.prototype.getPlotOptionsObj=function(){return this.chartDataObj.soiPlotOptionsObj;
};
AoavSoiComponentWF.prototype.createCircleRenderer=function(){(function($){$.jqplot.aoavCircleRenderer=function(options){$.extend(true,this,options);
};
$.jqplot.aoavCircleRenderer.prototype.init=function(options){$.extend(true,this,options);
};
$.jqplot.aoavCircleRenderer.prototype.draw=function(ctx,points,options){ctx.save();
ctx.lineWidth=2;
ctx.strokeStyle="rgba(255, 255, 255, 1.0)";
ctx.beginPath();
ctx.arc(points[0],points[1],points[2],points[3],points[4],true);
ctx.closePath();
ctx.stroke();
ctx.lineWidth=10;
ctx.fillStyle="#000000";
ctx.beginPath();
ctx.arc(points[0],points[1],points[2],points[3],points[4],true);
ctx.closePath();
ctx.fill();
ctx.restore();
};
})(jQuery);
};
AoavSoiComponentWF.prototype.loadGraph=function(){try{var self=this;
var chartDataObj=this.chartDataObj;
var compId=this.getComponentId();
var graphHTML="";
graphHTML="<div id='chartMainDiv"+compId+"' class='aoav_soi-chart-main-div'>";
graphHTML+="<div id='graphICUHeader"+compId+"' class='aoav_soi-graph-icu-header'></div>";
graphHTML+="<div class='aoav_soi-graph-days-div'><span class='aoav_soi-graph-day-before'></span><span class='aoav_soi-graph-day-actual'></span></div>";
graphHTML+="<div id='"+chartDataObj.chartId+"' class='aoav_soi-chart' style='height:graphHeightpx' align='CENTER'></div>";
graphHTML+="<div class='aoav_soi-graph-xvalue-div'><span class='aoav_soi-graph-xvalue-before'></span>";
graphHTML+="<span class='aoav_soi-graph-xvalue-actual'></span></div></div>";
this.m_soiGraphContainer.html(graphHTML);
chartDataObj.chartMainDivContainer=$("#chartMainDiv"+compId);
chartDataObj.chartContainer=$("#"+chartDataObj.chartId);
}catch(error){if(typeof error==="string"){var discernError=new Error(error);
MP_Util.LogJSError(discernError,this,"aoav-soi-o1.js","loadGraph");
}else{MP_Util.LogJSError(error,this,"aoav-soi-o1.js","loadGraph");
}}};
AoavSoiComponentWF.prototype.createChartData=function(replyData){var self=this;
var compId=this.getComponentId();
var chartDataObj=this.chartDataObj;
var graphOptions=chartDataObj.soiGraphOptions;
var predictedDays=null;
var predictedDaysLength=0;
var predicatedRemainingLOS=0;
var dayIdx=0;
var predictedDaysIdx=0;
var soiScoreRange="";
var getXaxisTickHTML=function retrieveXaxisTickHTML(tickValue,soiRange,index){var divClass="";
var imageClass="";
var soiRangeValue=soiRange.toUpperCase();
soiRange=soiRange?soiRange:"";
divClass+=index===chartDataObj.TOTAL_DAYS-1?chartDataObj.currentScrollClass:"";
if(tickValue!==0&&!tickValue){tickValue="&nbsp;";
}switch(soiRange){case"NORMAL":divClass+="aoav_soi-graph-xvalue-normal";
break;
case"HIGH":divClass+="aoav_soi-graph-xvalue-high";
imageClass="aoav_soi-graph-image-high aoav_soi-graph-image";
break;
case"CRITICAL":divClass+="aoav_soi-graph-xvalue-crit";
imageClass="aoav_soi-graph-image-crit aoav_soi-graph-image";
break;
default:divClass+="aoav_soi-graph-xvalue-normal";
break;
}var ticksHTML="<div class='aoav_soi-graph-xvalue-data-div aoav_soi-graph-xaxes-buttons aoav_soi_axes "+divClass+"' style='width:0px'><span class='"+imageClass+"'>";
ticksHTML+="</span><span class='aoav_soi-graph-xaxes-value'>"+tickValue+"</span></div>";
return ticksHTML;
};
if(chartDataObj.FIRST_TIME_LOAD){this.createCircleRenderer();
predictedDays=replyData.predictedDays;
predictedDaysLength=predictedDays.length;
if(replyData.predictedRemainingHospitalLengthOfStayDays>replyData.predictedRemainingICULengthOfStayDays){predicatedRemainingLOS=Math.ceil(replyData.predictedRemainingHospitalLengthOfStayDays);
}else{predicatedRemainingLOS=Math.ceil(replyData.predictedRemainingICULengthOfStayDays);
}this.predictedRemainingHospitalLengthOfStayDays=replyData.predictedRemainingHospitalLengthOfStayDays;
this.predictedRemainingICULengthOfStayDays=replyData.predictedRemainingICULengthOfStayDays;
this.benchmarkHospitalLengthOfStayDays=replyData.benchmarkHospitalLengthOfStayDays;
this.benchmarkICULengthOfStayDays=replyData.benchmarkICULengthOfStayDays;
this.actualHospitalLengthOfStayDays=replyData.actualHospitalLengthOfStayDays;
this.actualICULengthOfStayDays=replyData.actualICULengthOfStayDays;
this.predictedRemainingHospitalLengthOfStayDaysInd=replyData.predictedRemainingHospitalLengthOfStayDaysInd;
this.predictedRemainingICULengthOfStayDaysInd=replyData.predictedRemainingICULengthOfStayDaysInd;
this.benchmarkHospitalLengthOfStayDaysInd=replyData.benchmarkHospitalLengthOfStayDaysInd;
this.benchmarkICULengthOfStayDaysInd=replyData.benchmarkICULengthOfStayDaysInd;
this.actualHospitalLengthOfStayDaysInd=replyData.actualHospitalLengthOfStayDaysInd;
this.actualICULengthOfStayDaysInd=replyData.actualICULengthOfStayDaysInd;
this.riskOfICUReadmissionInd=replyData.riskOfICUReadmissionInd;
this.riskOfHospitalReadmissionInd=replyData.riskOfHospitalReadmissionInd;
this.riskOfICUReadmission=replyData.riskOfICUReadmission;
this.riskOfHospitalReadmission=replyData.riskOfHospitalReadmission;
chartDataObj.PREDICTED_LOS_STAY=predicatedRemainingLOS;
chartDataObj.INITIAL_LOAD_DAY=predictedDays[0].dayNumber;
chartDataObj.LAST_LOAD_DAY=predictedDays[predictedDaysLength-1].dayNumber;
chartDataObj.TOTAL_LOAD_DAYS=predictedDaysLength;
chartDataObj.TOTAL_DAYS=chartDataObj.LAST_LOAD_DAY+chartDataObj.PREDICTED_LOS_STAY;
chartDataObj.selectedDay=chartDataObj.LAST_LOAD_DAY;
graphOptions.lowOverlayColor="rgba(238, 238, 238, 0.3)";
graphOptions.midOverlayColor=graphOptions.lowOverlayColor;
graphOptions.selectedDayOverlayColor="rgba(245, 248, 252, 0.3)";
graphOptions.gridPadding=0;
graphOptions.gridPaddingLeft=-1;
graphOptions.yMin=0;
graphOptions.yMax=105;
graphOptions.breakOnNull=true;
graphOptions.physiologyIndex=[];
graphOptions.comorbidityIndex=[];
graphOptions.supportIndex=[];
graphOptions.deteriorationIndex=[];
graphOptions.hospitalMortalityRisk=[];
graphOptions.icuMortalityRisk=[];
graphOptions.x1AxisTicks=[];
graphOptions.x1AxisTickValues=[];
graphOptions.x2AxisTicks=[];
graphOptions.showX1axis=false;
graphOptions.showX2axis=false;
graphOptions.showYaxis=false;
this.calculateGraphSize();
chartDataObj.LOAD_DAY_TRIGGERED=chartDataObj.TOTAL_DAYS-chartDataObj.VISIBLE_DAYS+1;
if(chartDataObj.LOAD_DAY_TRIGGERED<=0){chartDataObj.LOAD_DAY_TRIGGERED=1;
}this.levelOfCareForICU=[];
this.soiScoreRange=[];
this.diagnosisDetails=[];
this.dateOfTheDay=[];
this.soiDataPresent=[];
for(var i=0;
i<chartDataObj.TOTAL_DAYS;
i++){this.levelOfCareForICU[i]="";
this.physiologyIndexArr[i]="";
this.supportIndexArr[i]="";
this.deteriorationIndexArr[i]="";
this.comorbidityIndexArr[i]="";
this.icuMortalityRisk[i]="";
this.hospitalMortalityRisk[i]="";
this.soiScore[i]="";
this.soiScoreRange[i]="";
this.diagnosisDetails[i]="";
this.dateOfTheDay[i]="";
this.soiDataPresent[i]=false;
graphOptions.physiologyIndex[i]=0;
graphOptions.comorbidityIndex[i]=0;
graphOptions.supportIndex[i]=0;
graphOptions.deteriorationIndex[i]=0;
graphOptions.hospitalMortalityRisk[i]=[];
graphOptions.hospitalMortalityRisk[i][0]=i+1;
graphOptions.hospitalMortalityRisk[i][1]=null;
graphOptions.icuMortalityRisk[i]=[];
graphOptions.icuMortalityRisk[i][0]=i+1;
graphOptions.icuMortalityRisk[i][1]=null;
graphOptions.x1AxisTicks[i]=getXaxisTickHTML(null,"",i);
graphOptions.x2AxisTicks[i]=this.soiI18n.DAY_TEXT+"&nbsp;"+(i+1);
if(i>=chartDataObj.LAST_LOAD_DAY){chartDataObj.DAY_LOADED[i]=true;
}}}else{predictedDays=replyData;
predictedDaysLength=predictedDays.length;
chartDataObj.INITIAL_LOAD_DAY=predictedDays[0].dayNumber;
chartDataObj.LAST_LOAD_DAY=predictedDays[predictedDaysLength-1].dayNumber;
chartDataObj.TOTAL_LOAD_DAYS=predictedDaysLength;
}for(predictedDaysIdx=0,dayIdx=chartDataObj.INITIAL_LOAD_DAY-1;
predictedDaysIdx<predictedDaysLength;
dayIdx++,predictedDaysIdx++){this.soiDataPresent[dayIdx]=true;
this.levelOfCareForICU[dayIdx]=predictedDays[predictedDaysIdx].levelOfCare;
this.dateOfTheDay[dayIdx]=predictedDays[predictedDaysIdx].date;
this.soiScore[dayIdx]=((predictedDays[predictedDaysIdx].soiScoreInd)?predictedDays[predictedDaysIdx].soiScore:"--");
this.soiScoreRange[dayIdx]=predictedDays[predictedDaysIdx].soiScoreRange;
this.physiologyIndexArr[dayIdx]={label:predictedDays[predictedDaysIdx].physiologyIndex.label,value:"",valueInd:predictedDays[predictedDaysIdx].physiologyIndex.valueInd,components:predictedDays[predictedDaysIdx].physiologyIndex.components};
this.physiologyIndexArr[dayIdx].value=((predictedDays[predictedDaysIdx].physiologyIndex.valueInd)?predictedDays[predictedDaysIdx].physiologyIndex.value:"--");
this.comorbidityIndexArr[dayIdx]={label:predictedDays[predictedDaysIdx].comorbidityIndex.label,value:"",valueInd:predictedDays[predictedDaysIdx].comorbidityIndex.valueInd,components:predictedDays[predictedDaysIdx].comorbidityIndex.components};
this.comorbidityIndexArr[dayIdx].value=((predictedDays[predictedDaysIdx].comorbidityIndex.valueInd)?predictedDays[predictedDaysIdx].comorbidityIndex.value:"--");
this.supportIndexArr[dayIdx]={label:predictedDays[predictedDaysIdx].supportIndex.label,value:"",valueInd:predictedDays[predictedDaysIdx].supportIndex.valueInd,components:predictedDays[predictedDaysIdx].supportIndex.components};
this.supportIndexArr[dayIdx].value=((predictedDays[predictedDaysIdx].supportIndex.valueInd)?predictedDays[predictedDaysIdx].supportIndex.value:"--");
this.deteriorationIndexArr[dayIdx]={label:predictedDays[predictedDaysIdx].deteriorationIndex.label,value:"",valueInd:predictedDays[predictedDaysIdx].deteriorationIndex.valueInd,components:predictedDays[predictedDaysIdx].deteriorationIndex.components};
this.deteriorationIndexArr[dayIdx].value=((predictedDays[predictedDaysIdx].deteriorationIndex.valueInd)?predictedDays[predictedDaysIdx].deteriorationIndex.value:"--");
this.icuMortalityRisk[dayIdx]=((predictedDays[predictedDaysIdx].icuMortalityRiskInd)?predictedDays[predictedDaysIdx].icuMortalityRisk:"--");
this.hospitalMortalityRisk[dayIdx]=((predictedDays[predictedDaysIdx].hospitalMortalityRiskInd)?predictedDays[predictedDaysIdx].hospitalMortalityRisk:"--");
this.diagnosisDetails[dayIdx]=predictedDays[predictedDaysIdx].diagnosis;
graphOptions.physiologyIndex[dayIdx]=((predictedDays[predictedDaysIdx].physiologyIndex.valueInd)?predictedDays[predictedDaysIdx].physiologyIndex.value:0);
graphOptions.comorbidityIndex[dayIdx]=((predictedDays[predictedDaysIdx].comorbidityIndex.valueInd)?predictedDays[predictedDaysIdx].comorbidityIndex.value:0);
graphOptions.supportIndex[dayIdx]=((predictedDays[predictedDaysIdx].supportIndex.valueInd)?predictedDays[predictedDaysIdx].supportIndex.value:0);
graphOptions.deteriorationIndex[dayIdx]=((predictedDays[predictedDaysIdx].deteriorationIndex.valueInd)?predictedDays[predictedDaysIdx].deteriorationIndex.value:0);
graphOptions.hospitalMortalityRisk[dayIdx]=[];
graphOptions.hospitalMortalityRisk[dayIdx][0]=dayIdx+1;
graphOptions.hospitalMortalityRisk[dayIdx][1]=((predictedDays[predictedDaysIdx].hospitalMortalityRiskInd)?predictedDays[predictedDaysIdx].hospitalMortalityRisk:null);
graphOptions.icuMortalityRisk[dayIdx]=[];
graphOptions.icuMortalityRisk[dayIdx][0]=dayIdx+1;
graphOptions.icuMortalityRisk[dayIdx][1]=((predictedDays[predictedDaysIdx].icuMortalityRiskInd)?predictedDays[predictedDaysIdx].icuMortalityRisk:null);
graphOptions.x1AxisTickValues[dayIdx]=((predictedDays[predictedDaysIdx].soiScoreInd)?predictedDays[predictedDaysIdx].soiScore:null);
soiScoreRange=predictedDays[predictedDaysIdx].soiScoreRange;
graphOptions.x1AxisTicks[dayIdx]=getXaxisTickHTML(graphOptions.x1AxisTickValues[dayIdx],soiScoreRange,dayIdx);
graphOptions.x2AxisTicks[dayIdx]=this.soiI18n.DAY_TEXT+"&nbsp;"+(dayIdx+1);
chartDataObj.DAY_LOADED[dayIdx]=true;
}var additionalDaysInICU=0;
if(this.predictedRemainingICULengthOfStayDaysInd){additionalDaysInICU=this.predictedRemainingICULengthOfStayDays;
}else{if(this.benchmarkICULengthOfStayDaysInd){additionalDaysInICU=this.benchmarkICULengthOfStayDays;
}}for(var careIdx=chartDataObj.LAST_LOAD_DAY;
careIdx<chartDataObj.LAST_LOAD_DAY+additionalDaysInICU;
careIdx++){this.levelOfCareForICU[careIdx]="ICU";
}chartDataObj.soiGraphOptions=graphOptions;
this.setPlotOptionsObj();
this.createSOIChart();
};
AoavSoiComponentWF.prototype.createSOIChart=function(){var self=this;
var chartDataObj=this.chartDataObj;
var plotOptions=chartDataObj.soiGraphOptions;
var compId=this.getComponentId();
if(this.getAoavPlot()){this.getAoavPlot().destroy();
}var soiPlot=$.jqplot(chartDataObj.chartId,[plotOptions.physiologyIndex,plotOptions.comorbidityIndex,plotOptions.supportIndex,plotOptions.deteriorationIndex,plotOptions.hospitalMortalityRisk,plotOptions.icuMortalityRisk],this.getPlotOptionsObj());
this.setAoavPlot(soiPlot);
this.updateGraphAxes(true);
$("#"+chartDataObj.chartId).bind("jqplotClick",function(ev,gridpos,datapos,neighbor,plot){var columnPos=Math.ceil(datapos.x2axis-0.5);
self.graphClickEventHandler(columnPos);
});
};
AoavSoiComponentWF.prototype.createDayHoverOnChart=function(){var self=this;
var dayButton=self.m_soiGraphContainer.find(".aoav_soi-graph-days-div .aoav_soi-graph-xaxes-buttons");
var compId=this.getComponentId();
dayButton.mouseover(function(event){var chartDayNumber="";
var chartDate="";
var chartDayHoverContent="";
chartDayNumber=$(this).attr("data");
var date=self.dateOfTheDay[chartDayNumber-1];
if(date){if(!($(this).hasClass("aoav_soi-graph-day-button-selected"))){$(this).addClass("aoav_soi-hover-background");
}chartDate=self.createDateString(date);
chartDayHoverContent+="<div class='aoav_soi-chart-day-hover' id='chartDayHover"+compId+"'> <p class='aoav_soi-chart-day-span'>"+self.soiI18n.DAY_TEXT;
chartDayHoverContent+=" <span class='aoav_soi-day-number'>"+chartDayNumber+"</span></p> <p class='aoav_soi-date-span'><span class='aoav_soi-start-text'> "+self.soiI18n.START_TEXT;
chartDayHoverContent+=" </span><span class='aoav_soi-day-date'>"+chartDate+"</span></p> </div>";
self.chartDayTooltip=new MPageTooltip();
self.chartDayTooltip.setX(event.pageX).setY(event.pageY).setOffsetX(0).setOffsetY(10).setAnchor($(this)).setShowDelay(0).setContent(chartDayHoverContent);
self.chartDayTooltip.show();
if(!($(this).hasClass("aoav_soi-graph-day-button-selected"))){dayButton.mouseout(function(event){$(this).removeClass("aoav_soi-hover-background");
});
}}});
};
AoavSoiComponentWF.prototype.retrieveAdditionalComponentData=function(startDayNumber,endDayNumber){var self=this;
var chartDataObj=this.chartDataObj;
var criterion=this.getCriterion();
var sendAr=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",endDayNumber];
var soiScriptRequest=new ComponentScriptRequest();
var viewCatagoryMean=criterion.category_mean;
var loadAdditionalDataTimerName="USR:MPG.AOAV-SOI.O1 - load additional data";
var renderAdditionalDataTimerName="ENG:MPG.AOAV-SOI.O1 - render additional data";
var loadTimer=new RTMSTimer(loadAdditionalDataTimerName,viewCatagoryMean);
var renderTimer=new RTMSTimer(renderAdditionalDataTimerName,viewCatagoryMean);
if(startDayNumber>endDayNumber){return;
}soiScriptRequest.setProgramName("MP_GET_AOAV_SOI");
soiScriptRequest.setParameterArray(sendAr);
soiScriptRequest.setComponent(this);
soiScriptRequest.setLoadTimer(loadTimer);
soiScriptRequest.setRenderTimer(renderTimer);
soiScriptRequest.setResponseHandler(function(scriptReply){if(scriptReply.getResponse().STATUS_DATA.STATUS=="S"){var aoavSoiResult=scriptReply.m_responseData;
var aoavPredictedDays=null;
if(aoavSoiResult.data&&aoavSoiResult.data.predictedDays){aoavPredictedDays=aoavSoiResult.data.predictedDays;
}else{if(aoavSoiResult.predictedDays){aoavPredictedDays=aoavSoiResult.predictedDays;
}}self.createChartData(aoavPredictedDays);
if(startDayNumber<chartDataObj.INITIAL_LOAD_DAY&&chartDataObj.INITIAL_LOAD_DAY>=1){self.retrieveAdditionalComponentData(startDayNumber,chartDataObj.INITIAL_LOAD_DAY-1);
}else{self.loadGraphDataOnScroll(self.m_soiGraphContainer.scrollLeft());
}}else{if(scriptReply.getResponse().STATUS_DATA.STATUS==="F"){self.scriptStatus="F";
self.createBannersForErrors(MPageUI.ALERT_OPTIONS.TYPE.ERROR,self.soiI18n.PRIMARY_SERVER_ERROR_STRING,self.soiI18n.SECONDARY_SERVER_ERROR_STRING);
}else{self.finalizeComponent(MP_Util.HandleErrorResponse(self.getStyles().getNameSpace()),(self.isLineNumberIncluded()?"(0)":""));
}}});
soiScriptRequest.performRequest();
};
AoavSoiComponentWF.prototype.loadGraphDataOnScroll=function(currentScrollPosition){var chartDataObj=this.chartDataObj;
chartDataObj.LOAD_DAY_TRIGGERED=Math.ceil((currentScrollPosition)/chartDataObj.DAY_MIN_WIDTH);
var highestVisiblePos=(currentScrollPosition+this.m_soiGraphContainer.width())/chartDataObj.DAY_MIN_WIDTH;
var highestVisibleDay=Math.ceil(highestVisiblePos-chartDataObj.IGNORABLE_WIDTH);
var loadableDays=this.getLoadableDays(chartDataObj.LOAD_DAY_TRIGGERED,highestVisibleDay);
var lowestLoadableDay=loadableDays.INITIAL_LOAD_DAY;
var highestLoadableDay=loadableDays.LAST_LOAD_DAY;
if(chartDataObj.LOAD_DAY_TRIGGERED<=highestLoadableDay&&lowestLoadableDay>0&&highestLoadableDay>0){chartDataObj.isGraphScrolled=true;
this.retrieveAdditionalComponentData(lowestLoadableDay,highestLoadableDay);
}else{chartDataObj.isGraphScrolled=false;
}};
AoavSoiComponentWF.prototype.postUpdateGraphActions=function(){var self=this;
var chartDataObj=this.chartDataObj;
var chartContainerObj=this.m_soiGraphContainer;
if(chartDataObj.FIRST_TIME_LOAD){chartContainerObj.scrollLeft(chartDataObj.GRAPH_SCROLL_WIDTH);
chartDataObj.FIRST_TIME_LOAD=false;
}else{chartContainerObj.scrollLeft(chartDataObj.graphScrollOffset);
}var initialLeftScroll=chartContainerObj.scrollLeft();
var currentScrollPosition=chartContainerObj.scrollLeft();
var prevScrollPosition=chartContainerObj.scrollLeft();
if(initialLeftScroll===0&&chartDataObj.LOAD_DAY_TRIGGERED<chartDataObj.INITIAL_LOAD_DAY){chartDataObj.isGraphScrolled=true;
this.retrieveAdditionalComponentData(1,chartDataObj.INITIAL_LOAD_DAY-1);
}else{if(chartDataObj.LOAD_DAY_TRIGGERED<chartDataObj.INITIAL_LOAD_DAY){chartDataObj.isGraphScrolled=true;
this.retrieveAdditionalComponentData(chartDataObj.LOAD_DAY_TRIGGERED,chartDataObj.INITIAL_LOAD_DAY-1);
}}var timerId=null;
var loadGraphAdditionalGraphData=function(){timerId=setTimeout(function(){currentScrollPosition=chartContainerObj.scrollLeft();
var scrollPositionDifference=Math.abs(prevScrollPosition-currentScrollPosition);
if(scrollPositionDifference<=chartDataObj.SCROLL_BAR_PIXEL_MOVEMENT){chartDataObj.isGraphScrolled=true;
self.loadGraphDataOnScroll(currentScrollPosition);
}else{if(timerId){chartDataObj.isGraphScrolled=false;
clearTimeout(timerId);
loadGraphAdditionalGraphData();
}}prevScrollPosition=chartContainerObj.scrollLeft();
},chartDataObj.SCROLL_BAR_SPEED_TO_LOAD_DATA);
};
chartContainerObj.off("scroll");
chartContainerObj.on("scroll",function(ev){currentScrollPosition=chartContainerObj.scrollLeft();
var leftScrollDifference=currentScrollPosition-initialLeftScroll;
chartDataObj.graphScrollOffset=currentScrollPosition;
if(!chartDataObj.isGraphScrolled&&leftScrollDifference){chartDataObj.isGraphScrolled=true;
loadGraphAdditionalGraphData();
}initialLeftScroll=currentScrollPosition;
});
};
AoavSoiComponentWF.prototype.getLoadableDays=function(lowestVisibleDayNumber,highestVisibleDayNumber){var chartDataObj=this.chartDataObj;
var allDaysDataLoaded=true;
var idx=0;
var loadableDaysNumber={INITIAL_LOAD_DAY:-1,LAST_LOAD_DAY:-1};
lowestVisibleDayNumber=lowestVisibleDayNumber===0?1:lowestVisibleDayNumber;
highestVisibleDayNumber=highestVisibleDayNumber===0?1:highestVisibleDayNumber;
for(idx=highestVisibleDayNumber-1;
idx>=lowestVisibleDayNumber-1&&idx>=0;
idx--){if(!chartDataObj.DAY_LOADED[idx]){allDaysDataLoaded=false;
break;
}}if(allDaysDataLoaded){idx=-1;
}else{idx+=1;
}loadableDaysNumber.LAST_LOAD_DAY=idx;
for(idx=lowestVisibleDayNumber-1,allDaysDataLoaded=true;
idx<=loadableDaysNumber.LAST_LOAD_DAY-1&&idx<=chartDataObj.TOTAL_DAYS-1;
idx++){if(!chartDataObj.DAY_LOADED[idx]){allDaysDataLoaded=false;
break;
}}if(allDaysDataLoaded){idx=-1;
}else{idx+=1;
}loadableDaysNumber.INITIAL_LOAD_DAY=idx;
return loadableDaysNumber;
};
AoavSoiComponentWF.prototype.updateGraphAxes=function(isChartDataUpdate){var self=this;
var compId=this.getComponentId();
var chartDataObj=this.chartDataObj;
var graphOptions=chartDataObj.soiGraphOptions;
var x2AxisHTML="";
var xAxisHTML="";
var daysLength=chartDataObj.TOTAL_DAYS;
var estimatedCellWidth=0;
var estimatedCellWidthRounded=0;
var totalCellWidth=0;
var finalCellWidth=0;
var rightMostAxisBorderPixelValue=0;
var graphBorderPixelHidden=1;
var selectedDayClass="";
var buttonClassEvent="";
var isGraphAxesSizeUpdateRequired=true;
var yAxisHTML="";
var chartHeight=chartDataObj.chartContainer.height();
var chartHeightBuffer=chartHeight*0.05;
var newChartHeight=chartHeight-chartHeightBuffer;
var yAxisTickHeight=newChartHeight/10;
var inICU=0;
var notICU=0;
var icuSpanWidth=0;
var noICUSpanWidth=0;
var totalEndDays=0;
var finalICUHeaderhtml="";
var graphWidthWithoutAxis=this.m_soiGraphContainer.find(".jqplot-series-shadowCanvas").width();
estimatedCellWidth=(graphWidthWithoutAxis)/daysLength;
estimatedCellWidthRounded=Math.round(estimatedCellWidth);
function appendICUHeaderSpans(totalSpanWidth,spanTypeICU,icuClass){var icuHeaderStr="";
icuClass=icuClass?icuClass:"";
if(spanTypeICU){icuHeaderStr="<span class = 'aoav_soi-level-icu aoav_soi-level "+icuClass+"' style='width: "+(totalSpanWidth)+"px'>"+self.soiI18n.ICU_TEXT+"</span>";
}else{icuHeaderStr="<span class = 'aoav_soi-level-not-icu aoav_soi-level "+icuClass+"' style='width: "+(totalSpanWidth)+"px'></span>";
}finalICUHeaderhtml=finalICUHeaderhtml+icuHeaderStr;
}var updatedChartMainDivWidth=chartDataObj.chartMainDivContainer.width();
if(updatedChartMainDivWidth!=chartDataObj.chartMainDivWidth){isGraphAxesSizeUpdateRequired=true;
chartDataObj.chartMainDivWidth=updatedChartMainDivWidth;
}else{isGraphAxesSizeUpdateRequired=false;
if(!isChartDataUpdate){return;
}}for(i=1;
i<=daysLength;
i++){selectedDayClass=i===chartDataObj.selectedDay?"aoav_soi-graph-day-button-selected":"";
buttonClassEvent=i<=daysLength-chartDataObj.PREDICTED_LOS_STAY?"aoav_soi-graph-day-button-event":"aoav_soi-disabled";
buttonClassEvent+=i===daysLength?chartDataObj.currentScrollClass:"";
rightMostAxisBorderPixelValue=i===daysLength?1:0;
if(i===daysLength){finalCellWidth=estimatedCellWidthRounded-rightMostAxisBorderPixelValue;
}else{finalCellWidth=estimatedCellWidthRounded;
}totalCellWidth+=finalCellWidth;
var mathRoundValue=Math.round(estimatedCellWidth*i)-rightMostAxisBorderPixelValue;
if(totalCellWidth>mathRoundValue){finalCellWidth-=totalCellWidth-mathRoundValue;
totalCellWidth=mathRoundValue;
}else{if(totalCellWidth<mathRoundValue){finalCellWidth+=mathRoundValue-totalCellWidth;
totalCellWidth=mathRoundValue;
}}if(i===daysLength){if(chartDataObj.currentScrollClass===chartDataObj.noScrollClass){finalCellWidth+=1;
totalCellWidth+=1;
}else{finalCellWidth+=1;
totalCellWidth+=1;
}}if(this.levelOfCareForICU[i-1]==="ICU"){if(noICUSpanWidth!==0){appendICUHeaderSpans((noICUSpanWidth),false);
noICUSpanWidth=0;
totalEndDays=0;
}icuSpanWidth=icuSpanWidth+(finalCellWidth);
totalEndDays=totalEndDays+1;
}else{if(icuSpanWidth!==0){appendICUHeaderSpans((icuSpanWidth),true);
icuSpanWidth=0;
totalEndDays=0;
}noICUSpanWidth=noICUSpanWidth+(finalCellWidth);
totalEndDays=totalEndDays+1;
}if(isGraphAxesSizeUpdateRequired){x2AxisHTML+="<span data='"+i+"' id='button_"+i+"_"+compId+"' class='aoav_soi-graph-xaxes-value aoav_soi-graph-xaxes-buttons aoav_soi_axes "+buttonClassEvent+" "+selectedDayClass;
x2AxisHTML+="' style='width: "+finalCellWidth+"px'>"+this.soiI18n.DAY_TEXT+"&nbsp;"+i+"</span>";
}xAxisHTML+=graphOptions.x1AxisTicks[i-1].replace("0px",finalCellWidth+"px");
}if(chartDataObj.currentScrollClass===chartDataObj.noScrollClass){xAxisHTML=xAxisHTML.replace(chartDataObj.scrollClass,chartDataObj.noScrollClass);
}else{xAxisHTML=xAxisHTML.replace(chartDataObj.noScrollClass,chartDataObj.scrollClass);
}if(chartDataObj.FIRST_TIME_LOAD){yAxisHTML="<span class='aoav_soi-graph-y-axis-ticks' style='height: "+chartHeightBuffer+"px;'>&nbsp;</span>";
for(i=10;
i>0;
i--){if(i===10){yAxisHTML+="<span class='aoav_soi-graph-y-axis-ticks' style='height: "+yAxisTickHeight+"px; margin-top: -8px;'>100</span>";
}else{yAxisHTML+="<span class='aoav_soi-graph-y-axis-ticks' style='height: "+yAxisTickHeight+"px;'>"+(i*10)+"</span>";
}}this.soiContentContainer.find(".aoav_soi-graph-yvalue-div").html(yAxisHTML);
this.soiContentContainer.find(".aoav_soi-graph-yvalue-div").css("height",chartHeight);
}if(isGraphAxesSizeUpdateRequired){this.m_soiGraphContainer.find(".aoav_soi-graph-day-actual").html(x2AxisHTML);
this.m_soiGraphContainer.find(".aoav_soi-graph-day-button-event").click(function(){var day=$(this).attr("data");
self.graphClickEventHandler(day);
});
}if(noICUSpanWidth!==0){appendICUHeaderSpans(noICUSpanWidth,false,chartDataObj.currentScrollClass);
noICUSpanWidth=0;
}else{if(icuSpanWidth!==0){appendICUHeaderSpans(icuSpanWidth,true,chartDataObj.currentScrollClass);
icuSpanWidth=0;
}}$("#graphICUHeader"+compId).html(finalICUHeaderhtml);
this.m_soiGraphContainer.find(".aoav_soi-graph-xvalue-actual").html(xAxisHTML);
this.m_soiGraphContainer.find(".aoav_soi_axes").disableSelection();
this.createDayHoverOnChart();
var axesWidth=graphWidthWithoutAxis;
$("#graphICUHeader"+compId).width(axesWidth+"px");
this.m_soiGraphContainer.find(".aoav_soi-graph-days-div").width(axesWidth+"px");
this.m_soiGraphContainer.find(".aoav_soi-graph-xvalue-div").width(axesWidth+"px");
};
AoavSoiComponentWF.prototype.createBannersForErrors=function(type,priText,secText){var compId=this.getComponentId();
var self=this;
$("#soiGeneralErrorDiv"+compId).show();
var $container=$("#soiGeneralErrorDiv"+compId);
var alertBanner=new MPageUI.AlertBanner();
alertBanner.setType(type);
alertBanner.setPrimaryText(priText);
alertBanner.setSecondaryText(secText);
$container.append(alertBanner.render());
};
AoavSoiComponentWF.prototype.renderComponent=function(reply){var renderAoavSoi="";
var self=this;
var compId=this.getComponentId();
renderAoavSoi="<div class='aoav_soi-main-cont'><div class='aoav_soi-error-div' id = 'soiGeneralErrorDiv"+compId+"'></div></div>";
this.m_reply=reply;
var aoavSoiResult=reply;
var aoavPredictedDays=null;
if(aoavSoiResult.data&&aoavSoiResult.data.predictedDays){aoavPredictedDays=aoavSoiResult.data.predictedDays;
}else{if(aoavSoiResult.predictedDays){aoavPredictedDays=aoavSoiResult.predictedDays;
}}try{if(this.scriptStatus==="Z"||(aoavPredictedDays&&aoavPredictedDays.length<=0)){this.scriptStatus="Z";
this.finalizeComponent(renderAoavSoi,MP_Util.CreateTitleText(this));
$("#soiGeneralErrorDiv"+compId).show();
$("#soiGeneralErrorDiv"+compId).append("<span class='aoav_soi_no-data-span'>"+this.soiI18n.NO_DATA_TO_DISPLAY+"</span></div>");
}else{var clickTimerName="CAP:MPG.AOAV_SOI_O1-COMPONENT-LOAD";
(new CapabilityTimer(clickTimerName,this.getCriterion().category_mean)).capture();
var slaTimer=MP_Util.CreateTimer(clickTimerName);
if(slaTimer){slaTimer.SubtimerName=this.criterion.category_mean;
slaTimer.Stop();
}var totalDays=aoavPredictedDays.length;
var latestDay=aoavPredictedDays[totalDays-1].dayNumber;
var latestDate=this.createDateString(aoavPredictedDays[totalDays-1].date);
var graphYValueIE8="";
if(document.documentMode<=8){graphYValueIE8="aoav_soi-graph-yvalue-ie8";
}renderAoavSoi="<div class='aoav_soi-main-cont'><div class='aoav_soi-error-div' id = 'soiGeneralErrorDiv"+compId+"'></div><div id= 'soiTopLabels"+compId+"'class = 'aoav_soi-top-labels'></div>";
renderAoavSoi+="<div class='aoav_soi-graph-sp'><div class='aoav_soi-graph-yvalue-main-div'><div class='aoav_soi-graph-yvalue-top-div "+graphYValueIE8+"'></div>";
renderAoavSoi+="<div class='aoav_soi-graph-yvalue-div "+graphYValueIE8+"'></div><div class='aoav_soi-graph-yvalue-bottom-div "+graphYValueIE8+"'></div></div>";
renderAoavSoi+="<div id='soiGraph"+compId+"' class = 'aoav_soi-graph-area'></div><div class='aoav_soi-index-div' id = 'soiIndexDiv"+compId+"'></div></div></div>";
this.finalizeComponent(renderAoavSoi,MP_Util.CreateTitleText(this));
this.createBannersForErrors(MPageUI.ALERT_OPTIONS.TYPE.WARNING,self.soiI18n.PRIMARY_MOCK_DATA_STRING,self.soiI18n.SECONDARY_MOCK_DATA_STRING);
this.m_soiGraphContainer=$("#soiGraph"+compId);
this.soiContentContainer=$("#aoav_soiContent"+compId);
this.m_soiIndexDivContainer=$("#soiIndexDiv"+compId);
this.initializeSidePanel(latestDay,latestDate);
this.m_soiLabelContainer=$("#soiTopLabels"+compId);
this.chartDataObj=new this.chartData();
this.loadGraph();
var replyData=reply.data?reply.data:reply;
this.createChartData(replyData);
this.postUpdateGraphActions();
this.m_soiSidePanelObj.setCornerCloseFunction(function(){self.chartDataObj.selectedDay=0;
self.chartDataObj.graphWidthPercent=0.99;
self.m_showPanel=false;
self.m_soiIndexDivContainer.hide();
self.reDrawGraph(true,true);
self.loadGraphDataOnScroll(self.m_soiGraphContainer.scrollLeft());
});
this.changeLengthOfStayLabels(this.levelOfCareForICU[latestDay-1]);
this.addReadmissionLabels();
this.createSoiIndexTableInSidePanel(latestDay);
var unitOfDisplayNamesArray=[];
for(var i=0;
i<latestDay+1;
i++){unitOfDisplayNamesArray[i]="";
}this.setUnitDisplayNamesArr(unitOfDisplayNamesArray);
this.getSoiUnitOfMeasure(latestDay);
this.createComorbidityDetailsTable(latestDay);
this.createSupportDetailsTable(latestDay);
this.createDeteriorationDetailsTable(latestDay);
this.m_generalErrorDivCont=$("#soiGeneralErrorDiv"+compId);
}}catch(err){MP_Util.LogJSError(err,this,"aoav-soi-o1.js","renderComponent");
}};
MP_Util.setObjectDefinitionMapping("WF_AOAV_SOI",AoavSoiComponentWF);
