function NeonateOverviewComponentWFStyle(){this.initByNamespace("neo-overview-wf");
}NeonateOverviewComponentWFStyle.prototype=new ComponentStyle();
NeonateOverviewComponentWFStyle.prototype.constructor=ComponentStyle;
function NeonateOverviewComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new NeonateOverviewComponentWFStyle());
this.apgarOneSeqs=[];
this.apgarFiveSeqs=[];
this.apgarTenSeqs=[];
this.deliverySeqs=[];
this.maternalSeqs=[];
this.newbornSeqs=[];
this.tabNames=[];
this.setComponentLoadTimerName("USR:MPG.NEONATEOVERVIEW.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.NEONATEOVERVIEW.O2 - render component");
this.OverviewComponentIndex={DELIVERY_SUMMARY:0,CONTACT:1};
this.egaBallardEvents="0.0";
this.neuroEvents="0.0";
this.physEvents="0.0";
this.apgarOneEvents="0.0";
this.apgarOneCompEvents="0.0";
this.apgarFiveEvents="0.0";
this.apgarFiveCompEvents="0.0";
this.apgarTenEvents="0.0";
this.apgarTenCompEvents="0.0";
this.deliveryEvents="0.0";
this.newbornEvents="0.0";
this.maternalEvents="0.0";
this.newbornDateTimeOfBirthEvent="0.0";
this.daysOfLifeStartBool=-1;
this.daysOfLifeIncrementBool=-1;
}NeonateOverviewComponentWF.prototype=new MPageComponent();
NeonateOverviewComponentWF.prototype.constructor=MPageComponent;
NeonateOverviewComponentWF.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_NEO_EGA_BY_BALLARD",{setFunction:this.setEgaByBallardEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_NEURO_MATURITY",{setFunction:this.setNeuroMaturityEvents,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_PHYS_MATURITY",{setFunction:this.setPhysMaturityEvents,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_1_MIN",{setFunction:this.setApgarOneEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_1_MIN_COMP",{setFunction:this.setApgarOneCompEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_5_MIN",{setFunction:this.setApgarFiveEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_5_MIN_COMP",{setFunction:this.setApgarFiveCompEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_10_MIN",{setFunction:this.setApgarTenEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_APGAR_10_MIN_COMP",{setFunction:this.setApgarTenCompEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_DELIVERY_INFO",{setFunction:this.setDeliveryInfoEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_NEWBORN_INFO",{setFunction:this.setNewbornInfoEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_MATERNAL_INFO",{setFunction:this.setMaternalInfoEvents,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_BIRTH_DT_TM",{setFunction:this.setNewbornDateTimeOfBirth,type:"STRING",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_NEO_DOL_START",{setFunction:this.setDaysOfLifeStart,type:"Boolean",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_NEO_DOL_INCREMENT",{setFunction:this.setDaysOfLifeIncrement,type:"Boolean",field:"FREETEXT_DESC"});
};
MP_Util.setObjectDefinitionMapping("WF_NEO_OVERVIEW",NeonateOverviewComponentWF);
NeonateOverviewComponentWF.prototype.resizeComponent=function(){var compId=this.getComponentId();
var tableID="";
var tableHeight=0;
var maxTableHeight=0;
var tabId="";
var tableIdInitialText="";
var tableLength=3;
switch(this.currentPage){case 0:tabId="#deliverySummaryTab"+compId;
tableIdInitialText="#deliverySummaryColumn";
break;
case 1:tabId="#contactInfoTab"+compId;
tableIdInitialText="#contactInfoColumn";
break;
}$(tabId+" .neo-overview-wf-list-container").css("height","");
$(tabId+" .neo-overview-wf-list-terms-space").css("height","0px");
var maxTableHeightIndex=0;
var tableIndex=0;
var newRowHeight=0;
for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){tableID=tableIdInitialText+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
if(tableHeight!==null){if(maxTableHeight<tableHeight){maxTableHeight=tableHeight;
maxTableHeightIndex=tableIndex;
}}}for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){if(tableIndex!==maxTableHeightIndex){tableID=tableIdInitialText+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
newRowHeight=maxTableHeight-tableHeight;
$(tableID+" .neo-overview-wf-list-terms-space").css("height",newRowHeight+"px");
$(tableID).css("height",maxTableHeight+"px");
}}};
NeonateOverviewComponentWF.prototype.retrieveComponentData=function(){try{var sendAr=[];
var component=this;
var criterion=component.getCriterion();
var loadTimer=new RTMSTimer(component.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(component.getComponentRenderTimerName());
var viewableEncounters=criterion.getPersonnelInfo().getViewableEncounters();
viewableEncounters=viewableEncounters?"value("+viewableEncounters+")":"0.0";
var groups=component.getGroups();
var totalGroupNumber=(groups)?groups.length:0;
for(var groupIndex=totalGroupNumber;
groupIndex--;
){var group=groups[groupIndex];
switch(group.getGroupName()){case"WF_NEO_EGA_BY_BALLARD_SEQ":component.egaBallardEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_1_MIN_SEQ":component.apgarOneEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_1_MIN_COMP_SEQ":component.apgarOneCompEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_5_MIN_SEQ":component.apgarFiveEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_5_MIN_COMP_SEQ":component.apgarFiveCompEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_10_MI_SEQN":component.apgarTenEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_APGAR_10_MIN_COMP_SEQ":component.apgarTenCompEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_DELIVERY_INFO_SEQ":component.deliveryEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_NEWBORN_INFO_SEQ":component.newbornEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_MATERNAL_INFO_SEQ":component.maternalEvents=MP_Util.CreateParamArray(group.getEventSets(),1);
break;
case"WF_NEO_BIRTH_DT_TM_SEQ":component.newbornDateTimeOfBirthEvent=MP_Util.CreateParamArray(group.getEventCodes(),1);
break;
}}sendAr.push("^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.ppr_cd+".0",component.getEgaByBallardEvents(),component.getApgarOneEvents(),component.getApgarFiveEvents(),component.getApgarTenEvents(),component.getApgarOneCompEvents(),component.getApgarFiveCompEvents(),component.getApgarTenCompEvents(),component.getDeliveryInfoEvents(),component.getNewbornInfoEvents(),component.getMaternalInfoEvents(),component.getNeuroMaturityEvents(),component.getPhysMaturityEvents(),component.getNewbornDateTimeOfBirth(),component.getDaysOfLifeStart(),component.getDaysOfLifeIncrement(),viewableEncounters);
var scriptRequest=new ComponentScriptRequest();
scriptRequest.setProgramName("MP_GET_NEONATE_OVERVIEW");
scriptRequest.setParameterArray(sendAr);
scriptRequest.setComponent(this);
scriptRequest.setLoadTimer(loadTimer);
scriptRequest.setRenderTimer(renderTimer);
scriptRequest.performRequest();
}catch(err){logger.logJSError(err,component,"neonate-overview.js","retrieveComponentData");
}};
NeonateOverviewComponentWF.prototype.getRecordData=function(){return this.recordData;
};
NeonateOverviewComponentWF.prototype.setRecordData=function(data){this.recordData=data;
};
NeonateOverviewComponentWF.prototype.getEgaByBallardEvents=function(){return this.egaBallardEvents;
};
NeonateOverviewComponentWF.prototype.setEgaByBallardEvents=function(data){this.egaBallardEvents=data;
};
NeonateOverviewComponentWF.prototype.getNeuroMaturityEvents=function(){return this.neuroEvents;
};
NeonateOverviewComponentWF.prototype.setNeuroMaturityEvents=function(data){this.neuroEvents=MP_Util.CreateParamArray(data,1);
};
NeonateOverviewComponentWF.prototype.getPhysMaturityEvents=function(){return this.physEvents;
};
NeonateOverviewComponentWF.prototype.setPhysMaturityEvents=function(data){this.physEvents=MP_Util.CreateParamArray(data,1);
};
NeonateOverviewComponentWF.prototype.getApgarOneEvents=function(){return this.apgarOneEvents;
};
NeonateOverviewComponentWF.prototype.setApgarOneEvents=function(data){this.apgarOneEvents=data;
};
NeonateOverviewComponentWF.prototype.getApgarOneCompEvents=function(){return this.apgarOneCompEvents;
};
NeonateOverviewComponentWF.prototype.setApgarOneCompEvents=function(data){this.apgarOneCompEvents=data;
};
NeonateOverviewComponentWF.prototype.getApgarFiveEvents=function(){return this.apgarFiveEvents;
};
NeonateOverviewComponentWF.prototype.setApgarFiveEvents=function(data){this.apgarFiveEvents=data;
};
NeonateOverviewComponentWF.prototype.setApgarFiveCompEvents=function(data){this.apgarFiveCompEvents=data;
};
NeonateOverviewComponentWF.prototype.getApgarFiveCompEvents=function(){return this.apgarFiveCompEvents;
};
NeonateOverviewComponentWF.prototype.getApgarTenEvents=function(){return this.apgarTenEvents;
};
NeonateOverviewComponentWF.prototype.setApgarTenEvents=function(data){this.apgarTenEvents=data;
};
NeonateOverviewComponentWF.prototype.getApgarTenCompEvents=function(){return this.apgarTenCompEvents;
};
NeonateOverviewComponentWF.prototype.setApgarTenCompEvents=function(data){this.apgarTenCompEvents=data;
};
NeonateOverviewComponentWF.prototype.getDeliveryInfoEvents=function(){return this.deliveryEvents;
};
NeonateOverviewComponentWF.prototype.setDeliveryInfoEvents=function(data){this.deliveryEvents=data;
};
NeonateOverviewComponentWF.prototype.getNewbornInfoEvents=function(){return this.newbornEvents;
};
NeonateOverviewComponentWF.prototype.setNewbornInfoEvents=function(data){this.newbornEvents=data;
};
NeonateOverviewComponentWF.prototype.getMaternalInfoEvents=function(){return this.maternalEvents;
};
NeonateOverviewComponentWF.prototype.setMaternalInfoEvents=function(data){this.maternalEvents=data;
};
NeonateOverviewComponentWF.prototype.getNewbornDateTimeOfBirth=function(){return this.newbornDateTimeOfBirthEvent;
};
NeonateOverviewComponentWF.prototype.setNewbornDateTimeOfBirth=function(data){this.newbornDateTimeOfBirthEvent=data;
};
NeonateOverviewComponentWF.prototype.getDaysOfLifeStart=function(){return this.daysOfLifeStartBool;
};
NeonateOverviewComponentWF.prototype.setDaysOfLifeStart=function(data){this.daysOfLifeStartBool=data?1:0;
};
NeonateOverviewComponentWF.prototype.getDaysOfLifeIncrement=function(){return this.daysOfLifeIncrementBool;
};
NeonateOverviewComponentWF.prototype.setDaysOfLifeIncrement=function(data){this.daysOfLifeIncrementBool=data?1:0;
};
NeonateOverviewComponentWF.prototype.getApgarOneSeqs=function(){return this.apgarOneSeqs;
};
NeonateOverviewComponentWF.prototype.setApgarOneSeqs=function(value){this.apgarOneSeqs.push(value);
};
NeonateOverviewComponentWF.prototype.getApgarFiveSeqs=function(){return this.apgarFiveSeqs;
};
NeonateOverviewComponentWF.prototype.setApgarFiveSeqs=function(value){this.apgarFiveSeqs.push(value);
};
NeonateOverviewComponentWF.prototype.getApgarTenSeqs=function(){return this.apgarTenSeqs;
};
NeonateOverviewComponentWF.prototype.setApgarTenSeqs=function(value){this.apgarTenSeqs.push(value);
};
NeonateOverviewComponentWF.prototype.getDeliveryInfoSeqs=function(){return this.deliverySeqs;
};
NeonateOverviewComponentWF.prototype.setDeliveryInfoSeqs=function(value){this.deliverySeqs.push(value);
};
NeonateOverviewComponentWF.prototype.getMaternalInfoSeqs=function(){return this.maternalSeqs;
};
NeonateOverviewComponentWF.prototype.setMaternalInfoSeqs=function(value){this.maternalSeqs.push(value);
};
NeonateOverviewComponentWF.prototype.getNewbornInfoSeqs=function(){return this.newbornSeqs;
};
NeonateOverviewComponentWF.prototype.setNewbornInfoSeqs=function(value){this.newbornSeqs.push(value);
};
NeonateOverviewComponentWF.prototype.ageFormat=function(days){var weeks=Math.floor(days/7);
var remDays=days%7;
var neonateOverviewi18n=i18n.discernabu.neonateoverview_o2;
return[weeks,neonateOverviewi18n.WEEKS,remDays,neonateOverviewi18n.DAYS].join(" ");
};
NeonateOverviewComponentWF.prototype.generateDeliverySummaryCells=function(item){var label="&nbsp;";
var value="&nbsp;";
var style="neo-overview-wf-list-descriptions";
var units="&nbsp;";
if(item){label=item.LABEL;
value=(item.VALUE===undefined||item.VALUE==="")?"--":item.VALUE;
style=(item.STYLE===undefined||item.STYLE==="")?"neo-overview-wf-list-descriptions":item.STYLE+" neo-overview-wf-list-descriptions";
units=item.UNITS===undefined?"":item.UNITS;
}var hoverHTML="";
var dateFormatter=MP_Util.GetDateFormatter();
if(item&&item.HOVER_DATA&&item.HOVER_DATA.length>0&&item.VALUE!==""){hoverHTML=item.generateHover(this,item.HOVER_DATA);
}var dttm=value.indexOf("{date_value}");
if(dttm>-1){value=dateFormatter.formatISO8601(value.substr(dttm+12),mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(item&&item.ACTION){return"<td class='neo-overview-wf-list-terms'>"+label+"</td><td id='"+item.ACTION+"' class='value-with-link "+style+"'><a>"+value+"</a>"+hoverHTML+"</td>";
}else{return"<td class='neo-overview-wf-list-terms'>"+label+"</td><td class='"+style+"'>"+value+units+hoverHTML+"</td>";
}};
NeonateOverviewComponentWF.prototype.generateDeliverySummaryRow=function(numberOfRows,column1,column2,column3,deliverySummaryCols){var tableCells=this.generateDeliverySummaryCells(column1[numberOfRows]);
if(tableCells){deliverySummaryCols[0]+="<tr>"+tableCells+"</tr>";
}tableCells=this.generateDeliverySummaryCells(column2[numberOfRows]);
if(tableCells){deliverySummaryCols[1]+="<tr>"+tableCells+"</tr>";
}tableCells=this.generateDeliverySummaryCells(column3[numberOfRows]);
if(tableCells){deliverySummaryCols[2]+="<tr>"+tableCells+"</tr>";
}return deliverySummaryCols;
};
NeonateOverviewComponentWF.prototype.generateContactCells=function(item){var value="&nbsp;";
if(item){value=(item.NAME===undefined||item.NAME==="")?"--":item.NAME;
}var hoverHTML="";
var returnString="";
var neonateOverviewi18n=i18n.discernabu.neonateoverview_o2;
if(item&&item.HOVER_DATA&&item.VALUE!==""){hoverHTML=item.generateHover(item.HOVER_DATA);
}returnString="<tr><td class='neo-overview-wf-list-terms'>"+neonateOverviewi18n.NAME+"</td><td class='neo-overview-wf-list-descriptions'>"+value+hoverHTML+"</td></tr>";
if(item&&item.PHONE.length>0){for(var i=0;
i<item.PHONE.length;
i++){returnString+="<tr><td class='neo-overview-wf-list-terms'>"+item.PHONE[i].LABEL+"</td><td class='neo-overview-wf-list-descriptions'>"+item.PHONE[i].NUMBER+"</td></tr>";
}}if(item){var addr=(item.STREET_ADDRESS!=="")?item.STREET_ADDRESS:"";
var addr2=item.CITY+" "+item.STATE+" "+item.ZIP;
returnString+="<tr><td class='neo-overview-wf-list-terms'>"+neonateOverviewi18n.ADDRESS+"</td><td class='neo-overview-wf-list-descriptions'>"+addr+"</td></tr>";
returnString+="<tr><td class='neo-overview-wf-list-terms'></td><td class='neo-overview-wf-list-descriptions'>"+addr2+"</td></tr>";
}return returnString;
};
NeonateOverviewComponentWF.prototype.generatePediatricianContactCells=function(item){var value="&nbsp;";
if(item){value=(item.NAME===undefined||item.NAME==="")?"--":item.NAME;
}var hoverHTML="";
var returnString="";
var neonateOverviewi18n=i18n.discernabu.neonateoverview_o2;
if(item&&item.HOVER_DATA&&item.VALUE!==""){hoverHTML=item.generateHover(item.HOVER_DATA);
}returnString="<tr><td class='neo-overview-wf-list-terms'>"+neonateOverviewi18n.NAME+"</td><td class='neo-overview-wf-list-descriptions'>"+value+hoverHTML+"</td></tr>";
if(item&&item.PHONE.length>0){for(var i=0;
i<item.PHONE.length;
i++){returnString+="<tr><td class='neo-overview-wf-list-terms'>"+item.PHONE[i].LABEL+"</td><td class='neo-overview-wf-list-descriptions'>"+item.PHONE[i].NUMBER+"</td></tr>";
}}return returnString;
};
NeonateOverviewComponentWF.prototype.generateContactRow=function(numberOfRows,contactCols,mother,father,peds){contactCols[0]+=this.generateContactCells(mother[numberOfRows]);
contactCols[1]+=this.generateContactCells(father[numberOfRows]);
contactCols[2]+=this.generatePediatricianContactCells(peds[numberOfRows]);
return contactCols;
};
NeonateOverviewComponentWF.prototype.ballardDetails=function(component,detailData){var detailsHTML=[];
var data=detailData;
var neonateOverviewi18n=i18n.discernabu.neonateoverview_o2;
if(!detailData){return"";
}if(detailData.NEURO===undefined||detailData.PHYSICAL===undefined){detailData=detailData[0];
}component.addDetails(neonateOverviewi18n.NEURO,detailData.NEURO,detailsHTML);
component.addDetails(neonateOverviewi18n.PHYSICAL,detailData.PHYSICAL,detailsHTML);
return"<div class='hvr'>"+detailsHTML.join("")+"<div>";
};
NeonateOverviewComponentWF.prototype.addDetails=function(header,details,detailsHTML){if(details===""||details===undefined){return;
}detailsHTML.push(header);
var subDetailsTMP=[];
$.each(details,function(){subDetailsTMP.push("<dt><span>"+this.LABEL+": </span></dt><dd><span>"+this.VALUE+"</span></dd>");
});
var subDetailsHTML=subDetailsTMP.join("");
detailsHTML.push("<dl>"+subDetailsHTML+"</dl><br>");
};
NeonateOverviewComponentWF.prototype.generateHoverDetails=function(component,detailData){var i=0;
if(detailData.length===0){return"";
}var hoverDetailsHTML=[];
for(i=0;
i<detailData.length;
i++){var separator=detailData[i].VALUE===""?"":": ";
hoverDetailsHTML.push("<dt><span>"+detailData[i].LABEL+separator+"</span><span>"+detailData[i].VALUE+"</span></dt>");
}return"<div class='hvr'><dl>"+hoverDetailsHTML.join("")+"</dl></div>";
};
NeonateOverviewComponentWF.prototype.getOverviewTableHTML=function(tableId,tableContent,headerText){var htmlData="";
var tableStartTag="<div class='neo-overview-wf-list-group'><table id='{0}' class='neo-overview-wf-list-container'>";
var tableEndTag="</table></div>";
var tableSpaceFillerHTML="<tr><td class='neo-overview-wf-list-terms-space'></td><td></td></tr>";
var compId=this.getComponentId();
if(headerText){htmlData=tableStartTag.replace("{0}",tableId+compId)+"<thead class='neo-overview-wf-header'><tr><th colspan='2'>"+headerText+"</th></tr></thead>";
htmlData+="<tbody>"+tableContent+tableSpaceFillerHTML+"</tbody>"+tableEndTag;
}else{htmlData=tableStartTag.replace("{0}",tableId+compId)+tableContent+tableSpaceFillerHTML+tableEndTag;
}return htmlData;
};
NeonateOverviewComponentWF.prototype.renderComponent=function(recordData){var component=this;
var dateFormatter=MP_Util.GetDateFormatter();
var neonateOverviewi18n=i18n.discernabu.neonateoverview_o2;
var compId=this.getComponentId();
var contentId=this.getStyles().getContentId();
var rootId=this.getStyles().getId();
var spaceColumnHTML="<div class='neo-overview-wf-table-space'><table class='neo-overview-wf-list-container'><tr><td>&nbsp;</td></tr></table></div>";
var rowCount=0;
var i=0;
var tabbedMenuHTML="";
var componentHTML="";
(new CapabilityTimer("CAP:MPG.NEONATEOVERVIEW.O2 � RENDER COMPONENT",this.getCriterion().category_mean)).capture();
var capTimer=MP_Util.CreateTimer("CAP:MPG.NEONATEOVERVIEW.O2 - RENDER COMPONENT");
if(capTimer){capTimer.SubtimerName=this.criterion.category_mean;
capTimer.Stop();
}var ageHours=recordData.AGE_HOURS;
var dayOfLife=(recordData.DAYS_OF_LIFE!==-1)?recordData.DAYS_OF_LIFE:"--";
var gestAge=(recordData.BIRTH_GEST_AGE!==0)?this.ageFormat(recordData.BIRTH_GEST_AGE):"--";
var pma=(recordData.BIRTH_GEST_AGE!==undefined)?this.ageFormat(recordData.PMA):"--";
pma=(recordData.BIRTH_GEST_AGE!==0)?this.ageFormat(recordData.PMA):"--";
var contacts=recordData.CONTACT_INFO.CONTACT;
if(contacts===undefined){contacts=recordData.CONTACT_INFO[0].CONTACT;
}this.tabNames[this.OverviewComponentIndex.DELIVERY_SUMMARY]=neonateOverviewi18n.DELIVERY_SUMMARY;
this.tabNames[this.OverviewComponentIndex.CONTACT]=neonateOverviewi18n.CONTACT_INFO;
this.currentPage=this.OverviewComponentIndex.DELIVERY_SUMMARY;
$("#"+contentId).html();
var tabMenuArray=["<div class='neo-overview-wf-tab-container' id='tabContainer",compId,"'><div class='neo-overview-wf-tabs'><ul>"];
var numTabs=this.tabNames.length;
for(i=0;
i<numTabs;
i++){tabMenuArray.push("<li id='tabHeader",i,"_",rootId,"'><span class='neo-overview-wf-tab-left-edge'>&nbsp;</span><span class='neo-overview-wf-tab-text'>",this.tabNames[i],"</span><span class='neo-overview-wf-tab-right-edge'>&nbsp;</span></li>");
}tabMenuArray.push("</ul></div><hr /></div>");
tabbedMenuHTML=tabMenuArray.join("");
var deliverySummaryCols=[];
var contactCols=[];
var column1=[];
var column2=[];
var column3=[];
column1.push({LABEL:neonateOverviewi18n.BIRTH_DT,VALUE:dateFormatter.formatISO8601(recordData.DOB,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR)});
column1.push({LABEL:neonateOverviewi18n.SEX,VALUE:recordData.SEX});
column1.push({LABEL:neonateOverviewi18n.EGA_BALLARD,VALUE:recordData.EGA_BALLARD,HOVER_DATA:recordData.BALLARD_DETAILS,generateHover:this.ballardDetails});
column1.push({LABEL:neonateOverviewi18n.APGAR_1,VALUE:recordData.APGAR1MIN,HOVER_DATA:recordData.APGAR1DETAILS,generateHover:this.generateHoverDetails});
column1.push({LABEL:neonateOverviewi18n.APGAR_5,VALUE:recordData.APGAR5MIN,HOVER_DATA:recordData.APGAR5DETAILS,generateHover:this.generateHoverDetails});
column1.push({LABEL:neonateOverviewi18n.APGAR_10,VALUE:recordData.APGAR10MIN,HOVER_DATA:recordData.APGAR10DETAILS,generateHover:this.generateHoverDetails});
if(recordData.DELIVERY&&recordData.DELIVERY.length>0){$.each(recordData.DELIVERY,function(){column1.push(this);
});
}if(recordData.NEWBORN&&recordData.NEWBORN.length>0){column2=recordData.NEWBORN;
}if(recordData.MATERNAL&&recordData.MATERNAL.length>0){column3=recordData.MATERNAL;
}if(recordData.MATERNAL&&recordData.MATERNAL.length>0){column3=recordData.MATERNAL;
}deliverySummaryCols[0]="";
deliverySummaryCols[1]="";
deliverySummaryCols[2]="";
rowCount=Math.max(column1.length,column2.length,column3.length);
for(i=0;
i<rowCount;
i++){deliverySummaryCols=this.generateDeliverySummaryRow(i,column1,column2,column3,deliverySummaryCols);
}var delivSumTableHTML=[];
var delivSumColumn1HTML=this.getOverviewTableHTML("deliverySummaryColumn1_",deliverySummaryCols[0]);
var delivSumColumn2HTML=this.getOverviewTableHTML("deliverySummaryColumn2_",deliverySummaryCols[1]);
var delivSumColumn3HTML=this.getOverviewTableHTML("deliverySummaryColumn3_",deliverySummaryCols[2]);
delivSumTableHTML.push(delivSumColumn1HTML+spaceColumnHTML+delivSumColumn2HTML+spaceColumnHTML+delivSumColumn3HTML);
var mother=[];
$.each(contacts,function(){if(this.TYPE==="MOTHER"){mother.push(this);
}});
var father=[];
$.each(contacts,function(){if(this.TYPE==="FATHER"){father.push(this);
}});
var peds=[];
$.each(contacts,function(){if(this.TYPE==="PEDIATRICIAN"){peds.push(this);
}});
contactCols[0]="";
contactCols[1]="";
contactCols[2]="";
var contactTableHTML=[];
rowCount=Math.max(mother.length,father.length,peds.length);
for(i=0;
i<rowCount;
i++){contactCols=this.generateContactRow(i,contactCols,mother,father,peds);
}var motherColumnHTML=this.getOverviewTableHTML("contactInfoColumn1_",contactCols[0],neonateOverviewi18n.MOTHER);
var fatherColumnHTML=this.getOverviewTableHTML("contactInfoColumn2_",contactCols[1],neonateOverviewi18n.FATHER);
var pedColumnHTML=this.getOverviewTableHTML("contactInfoColumn3_",contactCols[2],neonateOverviewi18n.PEDIATRICIAN);
contactTableHTML.push(motherColumnHTML+spaceColumnHTML+fatherColumnHTML+spaceColumnHTML+pedColumnHTML);
var menuItems=[];
menuItems.push("<div clas='neo-overview-wf-neo-info'><table class='neo-overview-wf-menu-items'><tbody><tr>");
menuItems.push("<td class='neo-overview-wf-menu-space'><p id='daysOfLife"+compId+"' class='value-with-link'><span class ='neo-overview-wf-header'>"+neonateOverviewi18n.DAYS_OF_LIFE+"</span>: "+dayOfLife+"</p></td>");
menuItems.push("<td class='neo-overview-wf-menu-space'><p id='gestAge"+compId+"' class='value-with-link'><span class ='neo-overview-wf-header'>"+neonateOverviewi18n.GA_BIRTH+"</span>: "+gestAge+"</p></td>");
menuItems.push("<td class='neo-overview-wf-menu-space'><p id='pma"+compId+"' class='value-with-link'><span class ='neo-overview-wf-header'>"+neonateOverviewi18n.PMA+"</span>: "+pma+"</p></td>");
menuItems.push("<td class='neo-overview-wf-menu-space'><p id='age"+compId+"' class='value-with-link'><span class ='neo-overview-wf-header'>"+neonateOverviewi18n.AGE+"</span>: "+ageHours+" hrs </p></td>");
menuItems.push("</tr></tbody></table>");
componentHTML=menuItems.join("");
componentHTML+=tabbedMenuHTML;
componentHTML+="<div class='content-body'><div class='neo-overview-wf-tabular-info'><div id='deliverySummaryTab"+compId+"' class='neo-overview-wf-div-active'>"+delivSumTableHTML.join("")+"</div>";
componentHTML+="<div id='contactInfoTab"+compId+"' class='neo-overview-wf-div-inactive'>"+contactTableHTML.join("")+"</div>";
componentHTML+="</div></div></div>";
this.finalizeComponent(componentHTML,"");
var allTabs=$("#tabContainer"+compId+" .neo-overview-wf-tabs ul li");
allTabs.eq(this.currentPage).addClass("neo-overview-wf-tab-active-header");
allTabs.click(function(){var elementId=$(this).attr("id");
var tabHeaderString=elementId.split("_")[0];
var index=tabHeaderString.substring(tabHeaderString.length-1);
index=parseInt(index,10);
if(index===component.currentPage){return;
}var tab2div={tabHeader_0:"deliverySummaryTab"+compId,tabHeader_1:"contactInfoTab"+compId};
$("#tabHeader"+component.currentPage+"_"+rootId).removeClass("neo-overview-wf-tab-active-header");
$("#tabHeader"+index+"_"+rootId).addClass("neo-overview-wf-tab-active-header");
$("#"+tab2div["tabHeader_"+component.currentPage]).removeClass("neo-overview-wf-div-active");
$("#"+tab2div["tabHeader_"+component.currentPage]).addClass("neo-overview-wf-div-inactive");
$("#"+tab2div["tabHeader_"+index]).addClass("neo-overview-wf-div-active");
component.currentPage=index;
component.resizeComponent();
});
var divs=Util.Style.g("hvr",_g(rootId),"div");
for(i=0;
i<divs.length;
i++){hs(Util.gp(divs[i]),divs[i],this);
}};
