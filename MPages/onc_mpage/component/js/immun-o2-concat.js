function ImmunizationsO2ComponentStyle(){this.initByNamespace("immun-o2");
}ImmunizationsO2ComponentStyle.prototype=new ComponentStyle();
ImmunizationsO2ComponentStyle.prototype.constructor=ComponentStyle;
function ImmunizationsO2Component(criterion){this.setCriterion(criterion);
this.setStyles(new ImmunizationsO2ComponentStyle());
this.setIncludeLineNumber(true);
this.setComponentLoadTimerName("USR:MPG.IMMUNIZATIONS.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.IMMUNIZATIONS.O2 - render component");
this.m_immunizationsTable=null;
this.m_immunForecastTable=null;
this.m_isForecastCompat=0;
this.m_immuni18n=i18n.discernabu.immunization_o2;
this.m_lastSelectedRow="";
this.bStartTimer=true;
this.m_patientDOB=this.getCriterion().getPatientInfo().getDOB();
this.m_personnelArray=null;
this.compNS=this.getStyles().getNameSpace();
this.compID=0;
this.m_resultCount=0;
this.m_sidePanelContainer=null;
this.m_sidePanel=null;
this.m_plusMenu=null;
this.m_hiSidePanel=null;
this.m_HIImmunizationsTable=null;
this.m_pager=null;
this.m_pageIndex=0;
this.m_millDataInd=1;
this.m_HITestURI="";
this.m_HILookUpKey="";
this.m_aliasType="";
this.m_aliasPool="";
this.m_firstRowElement=null;
this.m_prevMill=true;
this.m_prevHi=false;
this.m_nameofHIImmun="";
this.m_isPager=false;
this.m_isCellClick=false;
this.m_isNextPageForSidePanel=false;
this.m_vaccineGroupId="";
this.m_sidepanelPageNumber=0;
this.m_isRenderSidePanelOnPageChange=false;
this.m_hiDataGlobal="";
this.m_buttonAlreadyExist=true;
this.m_clickEvent=null;
this.m_prevContents="";
this.m_lastVaccineGrpId="";
this.m_countInnerDiv=0;
this.m_countDiv=0;
this.m_doesSidePanelExist=false;
this.m_totalImmunCount=0;
this.m_personnelInfo=[];
this.m_prevVacGroupId="";
this.m_millWasClikedInBetween=false;
this.m_panelShellFieldsRenderedCnt=0;
this.m_registryImportCOM=null;
this.m_lastModifiedVaccineGroupEventCode=0;
this.m_lastModifiedVaccineRow=null;
this.m_immunizationsToSave=[];
this.m_recordData=null;
this.m_immunizationsUtil=null;
this.getImmunizationsUtil().setSidePanel(this.m_sidePanel);
this.m_updatedImmunListenerCount=0;
this.m_hiSidePanel=null;
this.m_criterion=criterion;
this.m_checkboxHTML="";
this.m_tempHistoricalDoses=[];
}ImmunizationsO2Component.prototype=new MPageComponent();
ImmunizationsO2Component.prototype.constructor=MPageComponent;
ImmunizationsO2Component.prototype.reloadClassLevelvariables=function(){this.m_resultCount=0;
this.m_sidePanelContainer=null;
this.m_sidePanel=null;
this.m_hiSidePanel=null;
this.getImmunizationsUtil().setSidePanel(this.m_sidePanel);
this.m_HIImmunizationsTable=null;
this.m_pager=null;
this.m_pageIndex=0;
this.m_millDataInd=1;
this.m_HITestURI="";
this.m_HILookUpKey="";
this.m_aliasType="";
this.m_aliasPool="";
this.m_firstRowElement=null;
this.m_prevMill=true;
this.m_prevHi=false;
this.m_nameofHIImmun="";
this.m_isPager=false;
this.m_isCellClick=false;
this.m_isNextPageForSidePanel=false;
this.m_vaccineGroupId="";
this.m_sidepanelPageNumber=0;
this.m_isRenderSidePanelOnPageChange=false;
this.m_hiDataGlobal="";
this.m_buttonAlreadyExist=true;
this.m_clickEvent=null;
this.m_prevContents="";
this.m_lastVaccineGrpId="";
this.m_countInnerDiv=0;
this.m_countDiv=0;
this.m_doesSidePanelExist=false;
this.m_totalImmunCount=0;
this.m_prevVacGroupId="";
this.m_millWasClikedInBetween=false;
this.m_lastSelectedRow=null;
this.m_immunizationsUtil=null;
this.getImmunizationsUtil().clearShellCollectionsObj();
this.m_hiSidePanel=null;
};
ImmunizationsO2Component.prototype.getImmunizationsUtil=function(){if(this.m_immunizationsUtil===null){this.m_immunizationsUtil=new ImmunizationsUtil(this.getCriterion(),this.getComponentId(),ImmunizationsUtil.MPageEnum.IMMUN_WORKFLOW);
}this.m_immunizationsUtil.setImmunRecordData(this.immunRecordData);
return this.m_immunizationsUtil;
};
ImmunizationsO2Component.prototype.setImmunForecastBRInd=function(value){this.m_immunForecastBRInd=value;
};
ImmunizationsO2Component.prototype.getImmunForecastBRInd=function(){return(this.m_immunForecastBRInd?1:0);
};
ImmunizationsO2Component.prototype.setImmunOrderBRInd=function(value){this.m_immunOrderBRInd=value;
};
ImmunizationsO2Component.prototype.getImmunOrderBRInd=function(){return this.m_immunOrderBRInd;
};
ImmunizationsO2Component.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_IMMUN_EXT_DATA_IND",{setFunction:this.setExternalDataInd,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_IMMUN_EXT_DATA_TEST_URI",{setFunction:this.setHITestUri,type:"STRING",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_IMMUN_FRCST",{setFunction:this.setImmunForecastBRInd,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_IMMUN_ORD_FLDR",{setFunction:this.setImmunOrderBRInd,type:"ARRAY",field:"PARENT_ENTITY_ID"});
};
ImmunizationsO2Component.prototype.checkPendingSR=function(){var componentId=this.getComponentId();
var dataObj={};
var pendingSR=MP_Resources.getSharedResource("pendingDataSR");
if(pendingSR){dataObj=pendingSR.getResourceData();
if(dataObj){var idx=dataObj.pendingDataCompArr.length;
while(idx--){if(String(componentId)===dataObj.pendingDataCompArr[idx]){dataObj.pendingDataCompArr.splice(idx,1);
break;
}}MP_Resources.setSharedResourceData("pendingDataSR",dataObj);
dataObj.pendingDataObj.SetPendingData(dataObj.pendingDataCompArr.length===0?0:1);
}}};
ImmunizationsO2Component.prototype.preProcessing=function(){var criterion=this.getCriterion();
var self=this;
var resourceName=criterion.category_mean+"pageLevelFilters";
var pageLevelFilters=MP_Resources.getSharedResource(resourceName);
if(pageLevelFilters&&pageLevelFilters.isResourceAvailable()){var plFilters=pageLevelFilters.getResourceData();
var plFiltersLen=plFilters.length;
if(plFiltersLen>0){for(var index=0;
index<plFiltersLen;
index++){var filterObj=plFilters[index];
switch(filterObj.F_MN){case"WF_HI_LOOKUP_KEY":self.setHILookupKey(filterObj.VALS[0].FTXT);
break;
case"WF_HI_ALIAS_TYPE":self.setAliasType(filterObj.VALS[0].FTXT);
break;
case"WF_HI_ALIAS_POOL_CD":self.setAliasPoolCd(filterObj.VALS[0].PE_ID);
break;
}}}}this.setPlusAddEnabled(false);
this.setPlusAddCustomInd(false);
if(this.getImmunForecastBRInd()){this.setPlusAddEnabled(true);
this.setPlusAddCustomInd(true);
}if(self.getExternalDataInd()){this.performMFA();
}};
ImmunizationsO2Component.prototype.performMFA=function(){var authStatus=new Mfa_Auth().RetrieveMfaAuthStatus();
var authResourceAvailable=authStatus&&authStatus.isResourceAvailable();
var authStatusData=authResourceAvailable&&authStatus.getResourceData();
if(authStatusData){authStatusData.value=authStatusData.status===0||authStatusData.status===5;
this.mfaAuthStatus=authStatusData;
}else{this.mfaAuthStatus={value:false,message:i18n.discernabu.mfa_auth.MFA_ERROR_MSG,status:4};
}this.auditMFAEvent();
};
ImmunizationsO2Component.prototype.auditMFAEvent=function(){var providerID=this.criterion.provider_id+".0";
var mpEventAudit=new MP_EventAudit();
var dateFormatter=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var dateTime=dateFormatter.format(new Date(),mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
mpEventAudit.setAuditMode(0);
mpEventAudit.setAuditParticipantType("PERSON");
mpEventAudit.setAuditParticipantRoleCd("PROVIDER");
mpEventAudit.setAuditParticipantID(providerID);
mpEventAudit.setAuditParticipantIDType("PROVIDER_NUMBER");
mpEventAudit.setAuditDataLifeCycle(null);
mpEventAudit.setAuditEventName("MPD_IMMUNIZATIONS_MFA_ATTEMPT");
mpEventAudit.setAuditEventType("SECURITY");
mpEventAudit.setAuditParticipantName("STATUS="+this.mfaAuthStatus.status+";DATE="+dateTime);
mpEventAudit.addAuditEvent();
mpEventAudit.submit();
};
ImmunizationsO2Component.prototype.postProcessing=function(){MPageComponent.prototype.postProcessing.call(this);
if(!this.m_isForecastCompat){CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:this.m_resultCount});
}CERN_EventListener.removeListener({},"Updated Immunizations Available",this.refreshComponent,this);
CERN_EventListener.addListener({},"Updated Immunizations Available",this.refreshComponent,this);
CERN_EventListener.removeListener(this,EventListener.EVENT_ORDER_ACTION,this.checkPendingSR,this);
CERN_EventListener.addListener(this,EventListener.EVENT_ORDER_ACTION,this.checkPendingSR,this);
};
ImmunizationsO2Component.prototype.openTab=function(){try{var self=this;
if(!this.m_plusMenu){var immunUtil=self.getImmunizationsUtil();
this.m_plusMenu=new MPageUI.StandardMPageMenu(this.getStyles().getNameSpace()+"Add");
if(CERN_Platform.inMillenniumContext()&&this.getImmunOrderBRInd()&&this.getImmunOrderBRInd().length){this.m_plusMenu.addOptions([{label:this.m_immuni18n.ORDER_IMMUN,onSelect:function(){self.showImmunizationOrderModal();
}},{label:this.m_immuni18n.DOC_HX,onSelect:function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.DOCUMENT_HISTORY;
immunUtil.getPopupImmunList();
immunUtil.createDocHistoryModal();
}},{label:this.m_immuni18n.CHART_EXCEPTION+"...",onSelect:function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.CHART_EXCEPTION;
immunUtil.getPopupImmunList();
immunUtil.createChartExceptionModal();
}}]);
}else{this.m_plusMenu.addOptions([{label:this.m_immuni18n.DOC_HX,onSelect:function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.DOCUMENT_HISTORY;
immunUtil.getPopupImmunList();
immunUtil.createDocHistoryModal();
}},{label:this.m_immuni18n.CHART_EXCEPTION+"...",onSelect:function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.CHART_EXCEPTION;
immunUtil.getPopupImmunList();
immunUtil.createChartExceptionModal();
}}]);
}}this.m_plusMenu.open();
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","openTab");
}};
ImmunizationsO2Component.prototype.processResultsForRender=function(immunRecs){var immunRecsLength=immunRecs.length;
var immunResult=null;
for(immunRecsLength;
immunRecsLength--;
){var dateTime=new Date();
var adminDate="--";
immunResult=immunRecs[immunRecsLength];
if(immunResult.ADMIN_DATE!==""){dateTime.setISO8601(immunResult.ADMIN_DATE);
adminDate=dateTime.format("shortDate3");
}if(immunResult.HISTORY[0].RESULT_STATUS_CD===3){immunResult.ADMIN_DATE_STRING=this.m_immuni18n.NOT_GIVEN;
}else{immunResult.ADMIN_DATE_STRING=adminDate+(immunResult.IS_MOST_RECENT_HISTORY_MODIFIED?"<span class='res-modified'></span>":"");
}immunResult.PATIENT_AGE=dateTime-this.m_patientDOB;
immunResult.PATIENT_AGE_STRING=this.getImmunizationsUtil().calculateAge(dateTime);
var listLength=immunResult.NOTES.length;
for(var index=0;
index<listLength;
index++){var noteObj=immunResult.NOTES[index];
var provider=MP_Util.GetValueFromArray(noteObj.ACTION_PROV_ID,this.m_personnelArray);
var providerName=(provider===null)?"--":provider.fullName;
var notes=noteObj.TEXT.split("<br/>");
var notesLength=notes.length;
noteObj.NOTE=[];
var count=-1;
for(var noteIndex=0;
noteIndex<notesLength;
noteIndex++){var note=notes[noteIndex];
if(note===""){continue;
}var pos=note.indexOf("]");
var newNote=true;
var actionDate=null;
var action_date="";
if(pos>0){var noteDateString=note.substring(1,pos);
actionDate=new Date(noteDateString);
if(!isNaN(actionDate)){note=note.substring(pos+1,note.length);
action_date=actionDate.format("mediumDate");
}else{if(count>=0){newNote=false;
}}}else{if(count>=0){newNote=false;
}}if(newNote){if(action_date===""&&noteObj.ACTION_DATE){actionDate=new Date();
actionDate.setISO8601(noteObj.ACTION_DATE);
action_date=actionDate.format("mediumDate");
}count++;
noteObj.NOTE[count]={};
noteObj.NOTE[count].TEXT=note;
noteObj.NOTE[count].ACTION_DATE=action_date;
noteObj.NOTE[count].PROVIDER_NAME=providerName;
}else{if(count>=0&&noteObj.NOTE[count]){noteObj.NOTE[count].TEXT+="<br/>"+note;
}}}}}};
ImmunizationsO2Component.prototype.retrieveComponentData=function(){this.reloadClassLevelvariables();
var component=this;
this.m_HITestURI="";
this.m_HILookUpKey="";
this.m_aliasType=component.getAliasType();
this.m_aliasPool=component.getAliasPoolCd();
if(component.getExternalDataInd()){if($.trim(this.getHITestUri()).length>0){this.m_HITestURI=this.getHITestUri();
}if($.trim(this.getHILookupKey()).length>0){this.m_HILookUpKey=this.getHILookupKey();
}}var criterion=this.getCriterion();
var retrieveAdditionalDetails=1;
var loadTimer=new RTMSTimer(this.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(this.getComponentRenderTimerName());
var scriptRequest=new ComponentScriptRequest();
scriptRequest.setProgramName("mp_get_immunizations_json");
scriptRequest.setParameterArray(["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",criterion.ppr_cd+".0",retrieveAdditionalDetails,"^"+this.m_HILookUpKey+"^","^"+this.m_aliasType+"^",this.m_aliasPool+".0","^"+this.m_HITestURI+"^",0,1,this.getImmunForecastBRInd()]);
scriptRequest.setComponent(this);
scriptRequest.setLoadTimer(loadTimer);
scriptRequest.setResponseHandler(function(scriptReply){if(scriptReply.getResponse().STATUS_DATA.STATUS!=="F"){component.renderComponent(scriptReply.getResponse());
}else{$("#"+component.compNS+"Add").addClass("hidden");
component.finalizeComponent(MP_Util.HandleErrorResponse(component.getStyles().getNameSpace()),(component.isLineNumberIncluded()?"(0)":""));
}});
scriptRequest.setRenderTimer(renderTimer);
scriptRequest.performRequest();
};
ImmunizationsO2Component.prototype.addSidePanel=function(){try{this.m_doesSidePanelExist=true;
if(this.m_sidePanelContainer&&this.m_sidePanelContainer.length){this.m_sidePanel=new CompSidePanel(this.compID,this.m_sidePanelContainer.attr("id"));
this.getImmunizationsUtil().setSidePanel(this.m_sidePanel);
this.m_sidePanel.setExpandOption(this.m_sidePanel.expandOption.EXPAND_DOWN);
var actionContents="<div id='buttonDiv"+this.getComponentId()+"' class='immun-o2-hi-ext-btn-inv sp-button2'>"+this.m_immuni18n.VIEW_MORE_SIDE_PANEL_DATA+"</div>";
this.m_sidePanel.renderPreBuiltSidePanel();
this.m_sidePanel.setActionsAsHTML(actionContents);
this.m_sidePanel.setContents("<div></div>","immun-o2Content"+this.compID);
this.selectDefaultRow(false);
}}catch(err){MP_Util.LogJSError(err,this,"immunizations-o2.js","addSidePanel");
}};
ImmunizationsO2Component.prototype.selectDefaultRow=function(scrollToTop){var $tableView=$("#"+this.compID+"tableview");
if($tableView&&$tableView.length&&this.m_immunizationsTable){var firstRowData=this.immunRecordData.IMMUN[0];
var firstRow=$tableView.find("tbody").children()[0];
this.updateInfo(firstRow,firstRowData);
if(this.m_prevHi){this.deselectAllHI();
}$(firstRow).click();
if(scrollToTop){$tableView.find(".table-body").scrollTop(0);
}this.m_prevMill=true;
this.m_prevHi=false;
}};
ImmunizationsO2Component.prototype.onRowClick=function(data){if(this.bStartTimer){var rowClickTimer=MP_Util.CreateTimer("CAP:MPG.IMMUNIZATIONS.O2");
if(rowClickTimer){rowClickTimer.Stop();
this.bStartTimer=false;
}}if(data.records&&data.records.length){this.renderReadingPane(data.records[0]);
if(this.m_prevHi){this.deselectAllHI();
}this.m_prevMill=true;
this.m_prevHi=false;
}};
ImmunizationsO2Component.prototype.onColumnHeaderClick=function(data){if(data.records&&data.records.length){if(this.m_prevMill){this.deselectAll();
}this.selectDefaultRow(true);
this.m_prevMill=true;
this.m_prevHi=false;
}};
ImmunizationsO2Component.prototype.addClickCallBacks=function(){var component=this;
if(this.m_immunizationsTable){this.m_immunizationsTable.setOnRowClickCallback(function(data){component.onRowClick(data);
});
this.m_immunizationsTable.setOnColumnHeaderClickCallback(function(data){component.onColumnHeaderClick(data);
});
}};
ImmunizationsO2Component.prototype.updateInfo=function(selRow,data){var rowId=this.getRowId(selRow);
this.renderReadingPane(data);
this.m_lastSelectedRow=rowId;
};
ImmunizationsO2Component.prototype.renderReadingPane=function(data,isHI){try{this.vaccineData=data;
var scrollContainerHtml="";
this.sidePanelElement=$("#sidePanel"+this.compID);
$("#sidePanel"+this.compID).find(".loading-screen").remove();
if(isHI){if(!this.m_doesSidePanelExist&&this.m_isForecastCompat){var compTableDivElem=$("#compTableDivForImmunization"+this.compID);
compTableDivElem.addClass("immun-o2-side-panel-addition").addClass("immun-o2-side-panel-open");
this.activateSidePanel();
}this.m_sidePanel.setSubtitleAsHTML(this.displayHeaderForSidePanel());
if(this.m_lastVaccineGrpId!==this.m_vaccineGroupId){this.m_countInnerDiv=0;
this.m_countDiv=0;
this.m_prevContents=this.getHistoryInfoHtmlForHi(data);
this.m_sidepanelPageNumber=0;
this.m_lastVaccineGrpId=this.m_vaccineGroupId;
}else{this.m_prevContents+=this.getHistoryInfoHtmlForHi(data);
}this.m_sidePanel.setTitleText(this.m_nameofHIImmun);
var historyInfoHtml="<div id='"+this.compID+"rp-history-hi'>"+this.m_prevContents+"</div>";
scrollContainerHtml="<div id='sidePanelScrollContainer"+this.compID+"' class = 'immun-o2-sp-body-content-area'>"+historyInfoHtml+"</div>";
this.m_millWasClikedInBetween=false;
if(!this.m_hiDataGlobal.more_results){this.m_prevContents="";
}var actionContents="<div id='buttonDiv"+this.compID+"' class='immun-o2-hi-ext-btn-inv sp-button2'>"+this.m_immuni18n.VIEW_MORE_SIDE_PANEL_DATA+"</div>";
this.m_sidePanel.setActionsAsHTML(actionContents);
}else{this.m_sidePanel.setSubtitleAsHTML("");
this.m_sidePanel.setTitleText(data.NAME);
var actionHolderHTML="<div class='immun-o2-action-holder' id='actionBtnHolder"+this.compID+"'><div id = 'sidePanelModifyButton"+this.compID+"' class='immun-o2-modify'></div><div id='docHistoryBtn"+this.compID+"' class='sp-button2 immun-o2-doc-history'>"+this.m_immuni18n.DOCUMENT_HISTORY+"</div><div id='cancelHistoryBtn"+this.compID+"' class='sp-button2  immun-o2-cancel-history'>"+i18n.CANCEL+"</div><div id='saveHistoryBtn"+this.compID+"' class='sp-button2 immun-o2-save-history'>"+i18n.SAVE+"</div></div>";
scrollContainerHtml="<div id='sidePanelScrollContainer"+this.compID+"' class = 'sp-body-content-area immun-o2-scroll-container'>"+this.getHistoryInfoHtml(data)+"</div>";
this.m_sidePanel.setActionsAsHTML(actionHolderHTML);
}this.m_sidePanel.setContents(scrollContainerHtml,"immun-o2Content"+this.compID);
this.m_sidePanel.expandSidePanel();
$("#actionBtnHolder"+this.compID).addClass("hidden");
if(isHI){this.addDoseClickEvents("rp-history-hi");
}else{this.addDoseClickEvents("rp-history");
}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderReadingPane");
}};
ImmunizationsO2Component.prototype.SortByDisplay=function(a,b){var aDisplay=a.DISPLAY;
var bDisplay=b.DISPLAY;
if(aDisplay>bDisplay){return 1;
}else{if(aDisplay<bDisplay){return -1;
}return 0;
}};
ImmunizationsO2Component.prototype.getDetailedHistoryInfoHTML=function(historyItem){var expirationDate=historyItem.EXP_DATE===""?"--":this.convertToMediumFormat(historyItem.EXP_DATE);
var visPublishedDate=historyItem.VIS_PUBLISHED_DATE===""?"--":this.convertToMediumFormat(historyItem.VIS_PUBLISHED_DATE);
var decodedLotStr="--";
if(historyItem.LOT.length){var entityStrInstance=new MPageEntity.EncodedString();
decodedLotStr=entityStrInstance.toJs(historyItem.LOT);
}var doseValue="--";
if(historyItem.DOSE){var numberFormatter=MP_Util.GetNumericFormatter();
if(mp_formatter._isNumber(historyItem.DOSE)){doseValue=numberFormatter.format(historyItem.DOSE,"^."+MP_Util.CalculatePrecision(historyItem.DOSE));
}}var doseVisInfoHtml="<div class = 'immun-o2-sp-group'><div class='immun-o2-sp-content'><span id='spVisLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS+": </span><span id='spVisValue"+this.compID+"'class='immun-o2-sp-value'>"+(historyItem.VIS_DISPLAY||"--")+"</span></div><div class='immun-o2-sp-content'><span id='spVisPublishedLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS_PUBLISHED_DATE+": </span><span id='spVisPublishedValue"+this.compID+"' class='immun-o2-sp-value'>"+visPublishedDate+"</span></div></div>";
var doseQuanInfoHtml="<div class = 'immun-o2-sp-group'><div class='immun-o2-sp-content'><span id='spDoseLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.DOSE_QUANTITY+": </span><span id='spDoseValue"+this.compID+"' class='immun-o2-sp-value'>"+doseValue+"</span></div><div class='immun-o2-sp-content'><span id='spUnitLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.DOSE_UNIT+": </span><span id='spUnitValue"+this.compID+"' class='immun-o2-sp-value'>"+((historyItem.DOSE_UNIT===""||historyItem.DOSE_UNIT==="unknown unit")?"--":historyItem.DOSE_UNIT)+"</span></div><div class='immun-o2-sp-content'><span id='spSiteLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.SITE+": </span><span id='spSiteValue"+this.compID+"' class='immun-o2-sp-value'>"+(historyItem.SITE||"--")+"</span></div><div class='immun-o2-sp-content'><span id='spRouteLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.ROUTE+": </span><span id='spRouteValue"+this.compID+"' class='immun-o2-sp-value'>"+(historyItem.ROUTE||"--")+"</span></div></div>";
var doseProductInfoHtml="<div class = 'immun-o2-sp-group'><div class='immun-o2-sp-content'><span id='spManufacturerLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.MANUFACTURER+": </span><span id='spManufacturerValue"+this.compID+"'class='immun-o2-sp-value'>"+(historyItem.MANUFACTURER||"--")+"</span></div><div class='immun-o2-sp-content'><span id='spLotNumberLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.LOT_NUMBER+": </span><span id='spLotNumberValue"+this.compID+"' class='immun-o2-sp-value'>"+decodedLotStr+"</span></div><div class='immun-o2-sp-content'><span id='spExpDateLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.EXP_DATE+": </span><span id='spExpDateValue"+this.compID+"' class='immun-o2-sp-value'>"+expirationDate+"</span></div></div>";
var detailedInfoHtml="<div class = 'immun-o2-sp-container'>"+doseVisInfoHtml+doseQuanInfoHtml+doseProductInfoHtml+"</div>";
return detailedInfoHtml;
};
ImmunizationsO2Component.prototype.convertToMediumFormat=function(date){var dateObj=new Date();
try{dateObj.setISO8601(date);
return dateObj.format("mediumDate");
}catch(err){MP_Util.LogJSError(err,this,"immunizations-o2.js","convertToMediumFormat");
}};
ImmunizationsO2Component.prototype.getCommentsInfoHtml=function(data){var listLength=data.NOTES.length;
var commentTextHtml="";
var commentsInfoHtml="";
if(!listLength){return commentsInfoHtml;
}for(var index=0;
index<listLength;
index++){var noteObj=data.NOTES[index];
var providerName=noteObj.ACTION_PROV_ID?MP_Util.GetValueFromArray(noteObj.ACTION_PROV_ID,this.m_personnelArray).fullName:"";
commentTextHtml+="<span class='immun-o2-rp-comments-text'>"+noteObj.TEXT+"</span><span class='immun-o2-provider author-timestamp-text secondary-text'>"+providerName+"</span>";
}commentsInfoHtml="<div id='rpComments"+this.compID+"'>"+commentTextHtml+"</div>";
return commentsInfoHtml;
};
ImmunizationsO2Component.prototype.getHistoryInfoHtml=function(data){this.changeButtonVisibility(false);
var historyInfoHtml="";
var listLength=data.HISTORY.length;
var historyItemHtml="";
var productOrStatusDisplay="";
var historySeparatorHtml="<div class='sp-separator'></div>";
for(var index=0;
index<listLength;
index++){var historyItemObj=data.HISTORY[index];
var date=new Date();
var action_date="--";
if(historyItemObj.ADMIN_DATE!==""){date.setISO8601(historyItemObj.ADMIN_DATE);
action_date=date.format("mediumDate");
}var actionDateAgeHtml="";
if(action_date!=="--"){actionDateAgeHtml="<div class='immun-o2-expand-content'><span class='immun-o2-toggle'>&nbsp;</span><span>"+action_date+" ("+this.getImmunizationsUtil().calculateAge(date)+")</span></div>";
}else{actionDateAgeHtml="<div class='immun-o2-expand-content'><span class='immun-o2-toggle'>&nbsp;</span><span>"+action_date+"(--)</span></div>";
}if(historyItemObj.RESULT_STATUS_CD===2){productOrStatusDisplay=historyItemObj.PRODUCT||this.getStatusText(historyItemObj.RESULT_STATUS_CD);
}else{productOrStatusDisplay=this.getStatusText(historyItemObj.RESULT_STATUS_CD);
}var productHtml="<span class='immun-o2-product secondary-text'>"+productOrStatusDisplay+"</span>";
var commentsHtml=this.getCommentsInfoHtml(historyItemObj);
var detailInfoHtml=this.getDetailedHistoryInfoHTML(historyItemObj);
if(index!==listLength-1){historyItemHtml+="<div id ="+this.compID+"historyItemRow"+index+" class='immun-o2-rp-history-content closed' data-event-id="+historyItemObj.EVENT_ID+">"+actionDateAgeHtml+productHtml+commentsHtml+detailInfoHtml+historySeparatorHtml+"</div>";
}else{historyItemHtml+="<div id ="+this.compID+"historyItemRow"+index+" class='immun-o2-rp-history-content closed' data-event-id="+historyItemObj.EVENT_ID+">"+actionDateAgeHtml+productHtml+commentsHtml+detailInfoHtml+"</div>";
}}historyInfoHtml="<div id="+this.compID+"rp-history class='immun-o2-rp-history'>"+historyItemHtml+"</div>";
return historyInfoHtml;
};
ImmunizationsO2Component.prototype.addDoseClickEvents=function(idOfContainer){var self=this;
$("#"+self.compID+idOfContainer).on("click",".immun-o2-rp-history-content",function(event){if(event.target&&event.target.parentElement.className==="immun-o2-expand-content"){$(this).toggleClass("closed");
}self.m_sidePanel.expandSidePanel();
});
};
ImmunizationsO2Component.prototype.getStatusText=function(status){var statusText="--";
switch(status){case 1:statusText=this.m_immuni18n.MODIFIED;
break;
case 2:statusText=this.m_immuni18n.ADMINISTERED;
break;
case 3:statusText=this.m_immuni18n.NOT_GIVEN;
break;
default:break;
}return statusText;
};
ImmunizationsO2Component.prototype.getRowId=function(rowObj){var rowId="";
var identifiers=$(rowObj).attr("id").split(":");
if(identifiers.length>1){rowId=identifiers[1];
}else{if(identifiers.length>0){rowId=identifiers[0];
}}return rowId;
};
ImmunizationsO2Component.prototype.deselectAllHI=function(){var selRow=$("#"+this.compID+"tableviewHI").find(".selected");
if(selRow.length){selRow.removeClass(this.compNS+"-row-selected "+this.compNS+"-row-selected-init selected");
this.m_lastSelectedRow="";
}};
ImmunizationsO2Component.prototype.deselectAll=function(){if(this.m_immunizationsTable){this.m_immunizationsTable.deselectAll();
}if(this.m_immunForecastTable){this.m_immunForecastTable.deselectAll();
}this.m_lastSelectedRow="";
};
ImmunizationsO2Component.prototype.updateSelRowBgColorHI=function(selRowObj,isInitialLoad){if(this.m_prevMill){this.deselectAll();
}if(this.m_prevHi){this.deselectAllHI();
}$(selRowObj).addClass(this.compNS+(isInitialLoad?"-row-selected-init":"-row-selected")+" selected");
this.m_prevHi=true;
this.m_prevMill=false;
};
ImmunizationsO2Component.prototype.setTableMaxHeight=function(height){if(this.m_immunizationsTable){this.m_immunizationsTable.setMaxHeight(height);
}else{if(this.m_immunForecastTable){this.m_immunForecastTable.setMaxHeight(height);
}}};
ImmunizationsO2Component.prototype.resizeComponent=function(){if(!this.getExternalDataInd()){this.resizeComponentWhenOnlyMillData();
return;
}var container=null;
container=$("#vwpBody");
if(!container.length){return;
}var viewHeight=0;
viewHeight=container.height();
var viewHeightWithPx=(viewHeight-120)+"px";
var hiTable=$("#"+this.compID+"tableviewHI");
var tableView=$("#"+this.compID+"tableview");
tableView.css({"max-height":""});
hiTable.css({"max-height":""});
var midHeight=Math.ceil((viewHeight-140)/2);
var remainingHeight=0;
var remainingHeightPx="";
if(hiTable.length&&tableView.length){var newHeight=Math.ceil((viewHeight-140)/2);
if(hiTable.height()<midHeight){remainingHeight=viewHeight-140-hiTable.height();
remainingHeightPx=remainingHeight+"px";
this.setTableMaxHeight(remainingHeight);
}else{if(tableView.height()<midHeight){remainingHeight=viewHeight-140-tableView.height();
remainingHeightPx=remainingHeight+"px";
hiTable.css({"max-height":remainingHeightPx,"overflow-y":"auto"});
}else{this.setTableMaxHeight(newHeight);
hiTable.css({"max-height":newHeight+"px","overflow-y":"auto"});
}}}else{if(tableView.length){this.setTableMaxHeight(viewHeight-120);
}else{hiTable.css({"max-height":viewHeightWithPx,"overflow-y":"auto"});
}}if(this.m_sidePanel){this.m_sidePanel.resizePanel();
var sidePanelMinHeight=251;
var minHeight=0;
if((hiTable&&hiTable.length)&&(tableView&&tableView.length)){minHeight=Math.max(tableView.height()+hiTable.height()+40,sidePanelMinHeight);
}else{if(hiTable&&hiTable.length){minHeight=Math.max(hiTable.height(),sidePanelMinHeight);
}else{minHeight=Math.max(tableView.height(),sidePanelMinHeight);
}}this.m_sidePanel.setMinHeight(minHeight+"px");
this.m_sidePanel.expandSidePanel();
}};
ImmunizationsO2Component.prototype.resizeComponentWhenOnlyMillData=function(){MPageComponent.prototype.resizeComponent.call(this,null);
var $tableView=$("#"+this.compID+"tableview");
if($tableView.length){var $viewBody=$("#vwpBody");
var $immunMainContainer=$("#"+this.compID+"maincontainer");
var miscHeight=20;
var calHeight=$viewBody.height()-($immunMainContainer.offset().top-$viewBody.offset().top)-miscHeight;
this.setTableMaxHeight(calHeight);
}if(this.m_sidePanel){this.m_sidePanel.resizePanel();
if($tableView&&$tableView.length){var sidePanelMinHeight=251;
var minHeight=Math.max($tableView.height(),sidePanelMinHeight);
this.m_sidePanel.setMinHeight(minHeight+"px");
this.m_sidePanel.expandSidePanel();
}}};
ImmunizationsO2Component.prototype.createColumn=function(colInfo){var column=new TableColumn();
column.setColumnId(colInfo.ID);
column.setCustomClass(colInfo.CLASS);
column.setColumnDisplay(colInfo.DISPLAY);
column.setPrimarySortField(colInfo.PRIMARY_SORT_FIELD);
column.setIsSortable(true);
column.addSecondarySortField(colInfo.SEC_SORT_FIELD,TableColumn.SORT.ASCENDING);
column.setRenderTemplate("${ "+colInfo.RENDER_TEMPLATE+"}");
return column;
};
ImmunizationsO2Component.prototype.createHIAddDataControl=function(bannerHeader){if(this.mfaAuthStatus&&this.mfaAuthStatus.value===false){return this.mfaAlertBanner();
}else{var imgUrl=this.getCriterion().static_content+"/images/6965.png";
var imgSpan="<span><img class='immun-o2-hi-img' id='externalData"+this.getComponentId()+"' src= '"+imgUrl+"'></span>";
var HITitleSpan="<span class='immun-o2-bannerHeader'>"+bannerHeader+"</span>";
var btnSpan="<span class='immun-o2-hi-banner-btn'><button class='immun-o2-hi-ext-btn' id='hiDataControlBtn"+this.getComponentId()+"'>"+this.m_immuni18n.VIEW_OUTSIDE_RECORDS+"</button></span>";
return"<div id='hiAddDataContainer"+this.getComponentId()+"' class='immun-o2-hi-ext-label'>"+imgSpan+HITitleSpan+btnSpan+"</div></br>";
}};
ImmunizationsO2Component.prototype.mfaAlertBanner=function(){var alertBanner=new MPageUI.AlertBanner();
if(this.mfaAuthStatus.status===2||this.mfaAuthStatus.status===3){alertBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.INFO);
}else{alertBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
}alertBanner.setPrimaryText(this.mfaAuthStatus.message).setSecondaryText(this.m_immuni18n.MFA_SECONDARY_ALERT_MSG);
return alertBanner.render();
};
ImmunizationsO2Component.prototype.showHIData=function(recordData){this.m_HIImmunizationsTable=new ComponentTable();
this.m_HIImmunizationsTable.setNamespace(this.compID+"hiTableForImmunizations");
var groupLength=recordData.groups.length;
for(var i=0;
i<groupLength;
i++){if(recordData.groups[i].most_recent_immunization.administered_datetime){var date=new Date();
date.setISO8601(recordData.groups[i].most_recent_immunization.administered_datetime);
var formattedDate=date.format("shortDate3");
recordData.groups[i].most_recent_immunization.formatted_admin_date=formattedDate;
}else{recordData.groups[i].most_recent_immunization.formatted_admin_date="--";
}}var vaccineColInfo={ID:"VACCINE",CLASS:this.compNS+"-vaccine-col",DISPLAY:this.m_immuni18n.VACCINE,PRIMARY_SORT_FIELD:"name",SEC_SORT_FIELD:"",RENDER_TEMPLATE:"name"};
var lastAdminDateColInfo={ID:"LAST_ADMIN_DATE",CLASS:this.compNS+"-last-admin-date-col",DISPLAY:this.m_immuni18n.ADMIN_DATE,PRIMARY_SORT_FIELD:"",SEC_SORT_FIELD:"",RENDER_TEMPLATE:"most_recent_immunization.formatted_admin_date"};
var sidePanelHtmlHi="<div id='"+this.compID+"sidePanelContainerHi' class='"+this.compNS+"-sidepanel-container'></div>";
this.m_HIImmunizationsTable.addColumn(this.createColumn(vaccineColInfo));
this.m_HIImmunizationsTable.addColumn(this.createColumn(lastAdminDateColInfo));
this.m_HIImmunizationsTable.bindData(recordData.groups);
this.m_HIImmunizationsTable.sortByColumnInDirection("VACCINE",TableColumn.SORT.ASCENDING);
this.addCellClickExtensionForHI();
var tableViewHtmlHi="<div id='"+this.compID+"tableviewHI' class='"+this.compNS+"-table'>"+this.m_HIImmunizationsTable.render()+"</div>";
$("#hidata"+this.compID).append(tableViewHtmlHi);
$("#hibanner"+this.compID).html(this.createHIAddDataControl(this.m_immuni18n.OUTSIDE_RECORDS_UNVERIFIED));
$("#hiDataControlBtn"+this.getComponentId()).remove();
var hibanner=$("#hiAddDataContainer"+this.compID);
hibanner.removeClass("immun-o2-hi-ext-label");
hibanner.addClass("immun-o2-hi-ext-label-change-bg");
this.m_HIImmunizationsTable.finalize();
this.resizeComponent();
if(!this.m_totalImmunCount){MP_Util.LoadSpinner("hidata"+this.getComponentId());
this.renderSidePanelOnPageChange();
}this.createPager(recordData);
};
ImmunizationsO2Component.prototype.addCellClickExtensionForHI=function(){var cellClickExtension=new TableCellClickCallbackExtension();
var self=this;
cellClickExtension.setCellClickCallback(function(event,data){self.m_clickEvent=event;
self.m_vaccineGroupId=data.RESULT_DATA.id;
if(self.m_vaccineGroupId===self.m_prevVacGroupId&&!self.m_millWasClikedInBetween){if(self.m_isForecastCompat){var compTableDivElem=$("#compTableDivForImmunization"+self.compID);
var selRow=$(event.target).parents("dl.result-info");
$(selRow).removeClass(self.compNS+"-row-selected selected");
if(compTableDivElem.length){compTableDivElem.removeClass("immun-o2-side-panel-addition").removeClass("immun-o2-side-panel-open");
}self.m_sidePanel.m_cornerCloseButton.click();
self.m_lastSelectedRow=null;
self.m_doesSidePanelExist=false;
self.m_prevVacGroupId="";
self.m_vaccineGroupId="";
self.m_lastVaccineGrpId="";
}return;
}else{self.m_prevVacGroupId=self.m_vaccineGroupId;
}self.m_nameofHIImmun=data.RESULT_DATA.name;
var criterion=self.getCriterion();
var loadTimer=new RTMSTimer(self.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(self.getComponentRenderTimerName());
var parameterArray=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0","^"+self.m_HILookUpKey+"^","^"+self.m_aliasType+"^",self.m_aliasPool+".0","^"+self.m_HITestURI+"^",0,"^"+self.m_vaccineGroupId+"^"];
MP_Util.LoadSpinner("hidata"+self.compID);
self.m_isCellClick=true;
self.createScriptRequestUtility("mp_get_hi_immun_details",parameterArray,null,null,true,ImmunizationsO2Component.responseHandlerForaddCellClickExtensionForHi);
});
this.m_HIImmunizationsTable.addExtension(cellClickExtension);
};
ImmunizationsO2Component.prototype.checkIfMoreDataExistForSidePanel=function(){var self=this;
var mainContainerDiv=$("#"+self.getComponentId()+"maincontainer");
if(self.m_hiDataGlobal.more_results){self.changeButtonVisibility(true);
if(self.m_buttonAlreadyExist){mainContainerDiv.on("click","#buttonDiv"+self.getComponentId(),function(){MP_Util.LoadSpinner(self.getComponentId()+"sidePanelContainer");
self.generateNextPageForSidePanel();
});
}if(self.m_buttonAlreadyExist){self.m_buttonAlreadyExist=false;
}}else{self.changeButtonVisibility(false);
}};
ImmunizationsO2Component.prototype.changeButtonVisibility=function(makeVisible){var self=this;
var buttonVisivle=$("#buttonDiv"+self.getComponentId());
if(makeVisible){buttonVisivle.removeClass("immun-o2-hi-ext-btn-inv");
buttonVisivle.addClass("immun-o2-hi-ext-btn-right");
}else{buttonVisivle.removeClass("immun-o2-hi-ext-btn-right");
buttonVisivle.addClass("immun-o2-hi-ext-btn-inv");
}};
ImmunizationsO2Component.prototype.createScriptRequestUtility=function(programName,parameterArray,loadTimer,renderTimer,asyncIndicator,callBackMethod){try{if(typeof programName!=="string"||!programName.length){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the program name is empty or not a string");
}if(!$.isArray(parameterArray)||!parameterArray.length){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the parameter array is not of type array or empty");
}if(loadTimer!==null&&!(loadTimer instanceof RTMSTimer)){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the load timer is not an instance of RTMSTimer");
}if(renderTimer!==null&&!(renderTimer instanceof RTMSTimer)){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the render timer is not an instance of RTMSTimer");
}if(typeof asyncIndicator!=="boolean"){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the asyncIndicator is not a boolean");
}if(typeof callBackMethod!=="function"){throw new Error("ImmunizationsO2Component.createScriptRequestUtility - Error creating script request : the callBackMethod is not a function");
}var scriptRequest=new ComponentScriptRequest();
scriptRequest.setProgramName(programName);
if(loadTimer){scriptRequest.setLoadTimer(loadTimer);
}if(renderTimer){scriptRequest.setRenderTimer(renderTimer);
}scriptRequest.setAsyncIndicator(asyncIndicator);
scriptRequest.setParameterArray(parameterArray);
var self=this;
if(callBackMethod){scriptRequest.setResponseHandler(function(scriptReply){if(self.m_isRenderSidePanelOnPageChange){callBackMethod(scriptReply,self);
$("#hidata"+self.getComponentId()).find(".loading-screen").remove();
self.m_isRenderSidePanelOnPageChange=false;
self.checkIfMoreDataExistForSidePanel();
}if(self.m_prevHi&&self.m_isPager){callBackMethod(scriptReply,self);
self.renderSidePanelOnPageChange();
self.m_isPager=false;
}if(self.m_isPager){callBackMethod(scriptReply,self);
$("#hidata"+self.getComponentId()).find(".loading-screen").remove();
self.m_isPager=false;
}if(self.m_isCellClick){$("#hidata"+self.getComponentId()).find(".loading-screen").remove();
callBackMethod(scriptReply,self);
self.checkIfMoreDataExistForSidePanel();
self.m_isCellClick=false;
}if(self.m_isNextPageForSidePanel){callBackMethod(scriptReply,self);
$("#"+self.getComponentId()+"sidePanelContainer").find(".loading-screen").remove();
self.checkIfMoreDataExistForSidePanel();
self.m_isNextPageForSidePanel=false;
}});
}scriptRequest.setComponent(this);
scriptRequest.performRequest();
}catch(err){$("#hidata"+this.getComponentId()).find(".loading-screen").remove();
$("#"+this.getComponentId()+"sidePanelContainer").find(".loading-screen").remove();
MP_Util.LogJSError(err,this,"immunizations-o2.js","createScriptRequestUtility");
}};
ImmunizationsO2Component.responseHandlerForaddCellClickExtensionForHi=function(scriptReply,compObj){var hiData=compObj.validateHidata(scriptReply,false,1);
if(hiData===""){return;
}compObj.onRowClickForHi(compObj.m_clickEvent,hiData);
};
ImmunizationsO2Component.prototype.createPager=function(recordData){var component=this;
var self=this;
if(recordData.total_results!=null&&recordData.total_results>20){var noOfPages=Math.ceil(recordData.total_results/20);
var lastPageNo=0;
component.m_pager=new MPageUI.Pager().setNumberPages(noOfPages).setCurrentPageLabelPattern("${currentPage}/${numberPages}").setNextLabel(self.m_immuni18n.NEXT+" >").setPreviousLabel("< "+self.m_immuni18n.PREV);
component.m_pager.setOnPageChangeCallback(function(){if(lastPageNo<arguments[0].currentPage){component.m_pageIndex=component.m_pageIndex+20;
component.m_millDataInd=0;
component.m_isPager=true;
MP_Util.LoadSpinner("hidata"+component.getComponentId());
component.createNextOrPreviousPage(component.m_HITestURI,0);
component.changeButtonVisibility(false);
lastPageNo=arguments[0].currentPage;
}else{component.m_pageIndex=component.m_pageIndex-20;
component.m_millDataInd=0;
component.m_isPager=true;
MP_Util.LoadSpinner("hidata"+component.getComponentId());
component.createNextOrPreviousPage(component.m_HITestURI,0);
component.changeButtonVisibility(false);
lastPageNo=arguments[0].currentPage;
}});
$("#pager"+self.compID).addClass("immun-o2-row-pager");
$("#pager"+self.compID).append(component.m_pager.render());
component.m_pager.attachEvents();
}$("#emptyDivAfterpager"+self.compID).html("<div class='immun-o2-br'></div><div class='immun-o2-br'></div><div class='immun-o2-br'></div><div class='immun-o2-br'></div>");
};
ImmunizationsO2Component.prototype.renderSidePanelOnPageChange=function(){this.m_isRenderSidePanelOnPageChange=true;
var $tableView=$("#"+this.compID+"tableviewHI");
var tableRowArr=$tableView.find(".result-info");
var firstRow=tableRowArr[0];
this.m_firstRowElement=firstRow;
var rowId=this.getRowId(firstRow);
var vacc=this.m_HIImmunizationsTable.getRowById(rowId).getResultData().id;
this.m_vaccineGroupId=vacc;
this.m_prevVacGroupId=vacc;
this.m_nameofHIImmun=this.m_HIImmunizationsTable.getRowById(rowId).getResultData().name;
var self=this;
var criterion=self.getCriterion();
var loadTimer=new RTMSTimer(self.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(self.getComponentRenderTimerName());
var parameterArray=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0","^"+self.m_HILookUpKey+"^","^"+self.m_aliasType+"^",self.m_aliasPool+".0","^"+self.m_HITestURI+"^",0,"^"+vacc+"^"];
self.createScriptRequestUtility("mp_get_hi_immun_details",parameterArray,null,null,true,self.responseHandlerForRenderSidePanelOnPageChange);
};
ImmunizationsO2Component.prototype.responseHandlerForRenderSidePanelOnPageChange=function(scriptReply,compObj){var hiData=compObj.validateHidata(scriptReply,true,1);
compObj.updateSelRowBgColorForNextPage(compObj.m_firstRowElement,true);
compObj.renderReadingPane(hiData,1);
};
ImmunizationsO2Component.prototype.updateSelRowBgColorForNextPage=function(selRowObj,isInitialLoad){var rowId=this.getRowId(selRowObj);
var tableViewObj=$("#"+this.getComponentId()+"tableviewHI");
var prevRow=tableViewObj.find(".selected");
if(prevRow.length>0&&this.m_lastSelectedRow===this.getRowId(prevRow)){prevRow.removeClass(this.compNS+"-row-selected");
prevRow.removeClass(this.compNS+"-row-selected-init");
prevRow.removeClass("selected");
}$(selRowObj).addClass(this.compNS+(isInitialLoad?"-row-selected-init":"-row-selected")+" selected");
this.m_lastSelectedRow=rowId;
};
ImmunizationsO2Component.prototype.createNextOrPreviousPage=function(hiTestURIParameter,millDataInd){hiTestURIParameter=this.m_HITestURI;
var pageIndex=this.m_pageIndex;
var criterion=this.getCriterion();
var retrieveAdditionalDetails=1;
var parameterArray=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",criterion.ppr_cd+".0",retrieveAdditionalDetails,"^"+this.m_HILookUpKey+"^","^"+this.m_aliasType+"^",this.m_aliasPool+".0","^"+hiTestURIParameter+"^",pageIndex,millDataInd];
var component=this;
component.createScriptRequestUtility("mp_get_immunizations_json",parameterArray,null,null,true,component.responseHandlerForCreateNextPage);
};
ImmunizationsO2Component.prototype.responseHandlerForCreateNextPage=function(scriptReply,compObj){var hiData=compObj.validateHidata(scriptReply.m_responseData,true);
if(hiData===""){return;
}var hiGroupLength=hiData.groups.length;
for(var i=0;
i<hiGroupLength;
i++){if(hiData.groups[i].most_recent_immunization.administered_datetime){var date=new Date();
date.setISO8601(hiData.groups[i].most_recent_immunization.administered_datetime);
var formattedDate=date.format("shortDate3");
hiData.groups[i].most_recent_immunization.formatted_admin_date=formattedDate;
}else{return;
}}compObj.m_HIImmunizationsTable.bindData(hiData.groups);
$("#"+compObj.compID+"tableviewHI").html(compObj.m_HIImmunizationsTable.render());
compObj.m_HIImmunizationsTable.finalize();
compObj.resizeComponent();
};
ImmunizationsO2Component.prototype.renderComponent=function(recordData){var timerRenderComponent=MP_Util.CreateTimer(this.getComponentRenderTimerName(),this.getCriterion().category_mean);
var componentHtml="";
var countText="";
var component=this;
var noPrivsBannerHtml="";
var isForecastImmunizationsDataCompat=function(replyData){if(replyData&&replyData.IMMUN_FORECAST){if(replyData.IMMUN_FORECAST.FORECAST_ERRORS&&replyData.IMMUN_FORECAST.FORECAST_ERRORS.length){$("#"+component.compNS+"Add").addClass("hidden");
noPrivsBannerHtml=component.getNoPrivsBannerMarkup();
return 0;
}if(replyData.IMMUN_FORECAST.VACCINE_GROUPS_CNT){return 1;
}return 0;
}};
this.immunRecordData=recordData;
try{this.compID=this.getComponentId();
this.m_personnelArray=MP_Util.LoadPersonelListJSON(recordData.PRSNL);
if(isForecastImmunizationsDataCompat(this.immunRecordData)){this.m_isForecastCompat=1;
this.renderImmunForecastComponent(this.immunRecordData);
}else{this.processResultsForRender(recordData.IMMUN);
this.m_immunizationsTable=new MPageUI.Table();
var tableOptions={columns:{separators:false},namespace:this.compNS+"-immun-table",select:MPageUI.TABLE_OPTIONS.SELECT.SINGLE_ROW};
this.m_immunizationsTable.setOptions(tableOptions);
var vaccineColInfo={label:this.m_immuni18n.VACCINE,id:"VACCINE",contents:function(record){return record.NAME;
},sortOptions:{userSort:true,primary:{field:"NAME",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}},css:this.compNS+"-vaccine-col"};
var lastAdminDateColInfo={label:this.m_immuni18n.LAST_ADMIN_DATE,id:"LAST_ADMIN_DATE",contents:function(record){return record.ADMIN_DATE_STRING;
},sortOptions:{primary:{field:"ADMIN_DATE",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}},css:this.compNS+"-last-admin-date-col"};
var patientAgeColInfo={label:this.m_immuni18n.PATIENT_AGE,id:"PATIENT_AGE",contents:function(record){return record.PATIENT_AGE_STRING;
},sortOptions:{primary:{field:"PATIENT_AGE",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING},secondary:[{field:"NAME",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}]},css:this.compNS+"-patient-age-col"};
this.m_immunizationsTable.setColumns([vaccineColInfo,lastAdminDateColInfo,patientAgeColInfo]);
this.m_immunizationsTable.setData({records:recordData.IMMUN});
this.m_immunizationsTable.sortBy({column:{id:"VACCINE",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}});
this.addClickCallBacks();
this.m_resultCount=recordData.IMMUN_CNT;
countText=MP_Util.CreateTitleText(this,this.m_resultCount);
var tableViewHtml="<div id='"+this.compID+"tableview' class='"+this.compNS+"-table'>"+this.m_immunizationsTable.render()+"</div>";
var sidePanelHtml="<div id='"+this.compID+"sidePanelContainer' class='"+this.compNS+"-sidepanel-container'></div>";
var hiBannerHtml="";
componentHtml="<div id ='"+this.compID+"privBanner'>"+noPrivsBannerHtml+"</div><div id ='"+this.compID+"maincontainer' class ='"+this.compNS+"-maincontainer "+this.compNS+"-maincontainer-position'><div id='hibanner"+this.compID+"'>"+hiBannerHtml+"</div><div id='compTableDivForImmunization"+this.compID+"' class='immun-o2-left-container'><div id='parentOfHidata"+this.compID+"' class='immun-o2-spinner-parent'><div id='hidata"+this.compID+"' class='immun-o2-scroll-hi'></div></div><div id='pager"+this.compID+"'></div><div id='emptyDivAfterpager"+this.compID+"'></div>"+tableViewHtml+"</div>"+sidePanelHtml+"</div>";
this.finalizeComponent(componentHtml,countText);
this.m_immunizationsTable.attachEvents();
this.m_sidePanelContainer=$("#"+this.compID+"sidePanelContainer");
if(recordData.IMMUN_CNT>0){this.m_totalImmunCount=recordData.IMMUN_CNT;
this.addSidePanel();
}if(component.getExternalDataInd()){this.processHIData(recordData);
}}}catch(err){if(timerRenderComponent){timerRenderComponent.Abort();
timerRenderComponent=null;
}throw (err);
}finally{if(timerRenderComponent){timerRenderComponent.Stop();
}}};
ImmunizationsO2Component.prototype.generateNextPageForSidePanel=function(){var self=this;
var criterion=self.getCriterion();
var loadTimer=new RTMSTimer(self.getComponentLoadTimerName());
var renderTimer=new RTMSTimer(self.getComponentRenderTimerName());
self.m_sidepanelPageNumber+=20;
var parameterArray=["^MINE^",criterion.person_id+".0",criterion.provider_id+".0","^"+self.m_HILookUpKey+"^","^"+self.m_aliasType+"^",self.m_aliasPool+".0","^"+self.m_HITestURI+"^",self.m_sidepanelPageNumber,"^"+self.m_vaccineGroupId+"^"];
self.m_isNextPageForSidePanel=true;
self.createScriptRequestUtility("mp_get_hi_immun_details",parameterArray,null,null,true,self.responseHandlerForGenerateNextPageForSidePanel);
};
ImmunizationsO2Component.prototype.responseHandlerForGenerateNextPageForSidePanel=function(scriptReply,compObj){var hiData=compObj.validateHidata(scriptReply,false,1);
if(hiData===""){return;
}compObj.renderReadingPane(hiData,1);
};
ImmunizationsO2Component.prototype.processHIData=function(recordData){var component=this;
var hiData="";
try{hiData=this.validateHidata(recordData,false);
if(recordData.HIURI&&hiData!==""){var bannerHeader=this.m_immuni18n.EXTERNAL_DATA_LABEL;
$("#hibanner"+component.compID).html(this.createHIAddDataControl(bannerHeader));
var self=this;
$("#hiDataControlBtn"+component.getComponentId()).click(function(){var timer=new CapabilityTimer("CAP:MPG Display HealtheIntent Data");
if(timer){timer.capture();
}if(!self.m_doesSidePanelExist&&!self.m_isForecastCompat){self.m_prevMill=false;
self.m_prevHi=true;
self.addSidePanel();
}self.showHIData(hiData);
});
}}catch(err){MP_Util.LogJSError(err,this,"immunizations-o2.js","processHIData");
}};
ImmunizationsO2Component.prototype.validateHidata=function(recordData,isPagingInvloved,isHI){var record;
if(isHI){record=recordData.getResponse();
}else{record=recordData;
}var hiData="";
var self=this;
try{if(record.STATUS_DATA.SUBEVENTSTATUS[0].OPERATIONSTATUS!=="S"){throw new Error("HI retrieval failed because of OPERATIONSTATUS === F");
}hiData=JSON.parse(record.HTTPREPLY.BODY);
this.m_hiDataGlobal=hiData;
if(record.STATUS_DATA.SUBEVENTSTATUS[0].OPERATIONSTATUS==="S"&&hiData.total_results===0){hiData="";
return hiData;
}}catch(err){MP_Util.LogJSError(err,this,"immunizations-o2.js","validateHidata");
logger.logError(err.message);
if(!isPagingInvloved){$("#hibanner"+self.compID).html(self.createHIAddDataControl("<b>"+self.m_immuni18n.EXTERNAL_DATA_LABEL_ERR+"</b>"));
$("#hiDataControlBtn"+self.getComponentId()).remove();
}else{$("#hidata"+self.compID).html(MP_Util.HandleErrorResponse("",self.m_immuni18n.EXTERNAL_DATA_LABEL_ERR));
}hiData="";
return hiData;
}return hiData;
};
ImmunizationsO2Component.prototype.displayHeaderForSidePanel=function(){var bannerHeader=this.m_immuni18n.OUTSIDE_RECORDS_UNVERIFIED;
var imgUrl=this.getCriterion().static_content+"/images/6965.png";
var imgSpan="<span><img class='immun-o2-hi-img' id='externalData"+this.getComponentId()+"' src= '"+imgUrl+"'></span>";
var HITitleSpan="<span>"+bannerHeader+"</span>";
var hiAddDataContainer="<div id='hiSidePanelInfoContainer"+this.getComponentId+"'>"+imgSpan+HITitleSpan+"</div><div class='immun-o2-br'></div>";
return hiAddDataContainer;
};
ImmunizationsO2Component.prototype.getHistoryInfoHtmlForHi=function(data){var action_date="";
var hiDataForsidepanel="";
for(var i=0;
i<data.immunizations.length;
i++){var date=new Date();
var commentsHtml="";
if(data.immunizations[i].administered_datetime!==null){date.setISO8601(data.immunizations[i].administered_datetime);
action_date=date.format("mediumDate");
}else{action_date="--";
}if(data.immunizations[i].comments!==null&&data.immunizations[i].comments.length!==0){for(var j=0;
j<data.immunizations[i].comments.length;
j++){var commentDate=new Date();
commentDate.setISO8601(data.immunizations[i].comments[j].datetime);
commentsHtml+="<span class='immun-o2-rp-comments-text-hi'>"+commentDate.format("shortDate3")+"</span>";
commentsHtml+="<span class='immun-o2-rp-comments-text'>"+data.immunizations[i].comments[j].text+"</span><div class='immun-o2-br'></div>";
}}else{commentsHtml="--<div class='immun-o2-br'></div>";
}var lotNumberStr=(data.immunizations[i].lot_number===null)?"--":data.immunizations[i].lot_number;
var statusStr="--";
if(data.immunizations[i].status!==null){statusStr=(data.immunizations[i].status.display===null)?"--":data.immunizations[i].status.display;
}var manufacturerStr=(data.immunizations[i].manufacturer===null)?"--":data.immunizations[i].manufacturer;
var sourcePartDesc="--";
var sourceType="--";
if(data.immunizations[i].source!==null){sourcePartDesc=(data.immunizations[i].source.partition_description===null)?sourcePartDesc:data.immunizations[i].source.partition_description;
sourceType=(data.immunizations[i].source.type===null)?sourceType:data.immunizations[i].source.type;
}var productDrugname="--";
var productDoseQuantity="--";
var productRoute="--";
var productDoseUnit="--";
if(data.immunizations[i].product!==null){productDrugname=(data.immunizations[i].product.drug_name===null)?productDrugname:data.immunizations[i].product.drug_name;
productDoseQuantity=(data.immunizations[i].product.dose_quantity===null)?productDoseQuantity:data.immunizations[i].product.dose_quantity;
productRoute=(data.immunizations[i].product.route===null)?productRoute:data.immunizations[i].product.route;
productDoseUnit=(data.immunizations[i].product.dose_unit===null)?productDoseUnit:data.immunizations[i].product.dose_unit;
}var dateStr=(action_date===null)?"--":action_date;
var providerStr=(data.immunizations[i].provider_name===null)?"--":data.immunizations[i].provider_name;
var codeDisplayStr="--";
if(data.immunizations[i].code!==null){codeDisplayStr=(data.immunizations[i].code.display===null)?codeDisplayStr:data.immunizations[i].code.display;
}this.m_countInnerDiv++;
var lotNumberandManufacturerDiv="<div class='immun-o2-lotManufacturer'><div class='immun-o2-lot'>"+this.m_immuni18n.LOT_NUMBER+":<div class='immun-o2-br'></div>"+lotNumberStr+"</div><div class='immun-o2-manufacturer'>"+this.m_immuni18n.MANUFACTURER+":<div class='immun-o2-br'></div>"+manufacturerStr+"</div></div>";
var statusHtml="<span id='statusLabelHI"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.IMMUN_STATUS+": </span><div class='immun-o2-br'></div><span id='sourceValueHi"+this.compID+"' class='immun-o2-sp-label'>"+statusStr+"</span>";
var sourceHtml="<span id='sourceLabelHI"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.SOURCE+": </span><div class='immun-o2-br'></div><span id='sourceValueHI"+this.compID+"' class='immun-o2-sp-label'>"+sourcePartDesc+" ("+sourceType+")</span>";
var productHtml="<span id='productLabelHI"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.PRODUCT+": </span><div class='immun-o2-br'></div><span id='sourceValueHI"+this.compID+"' class='immun-o2-sp-label'>"+productDrugname+"&nbsp;"+productDoseQuantity+productDoseUnit+"</span><div class='immun-o2-br'></div><span id='sourceValueHI"+this.compID+"' class='immun-o2-sp-label'>"+productRoute+"</span>";
var commentsFinalHtml="<span id='commentsLabelHI"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.COMMENTS+": </span><div class='immun-o2-br'></div>"+commentsHtml;
var detailedInfoHtml="<div class = 'immun-o2-sp-container'>"+sourceHtml+"<div class='immun-o2-br'></div><div class='immun-o2-br'></div>"+productHtml+"<div class='immun-o2-br'></div><div class='immun-o2-br'></div>"+lotNumberandManufacturerDiv+"<div class='immun-o2-br'></div><div class='immun-o2-br'></div>"+commentsFinalHtml+""+statusHtml+"</div>";
var actionDateAgeHtml="<div class='immun-o2-expand-content'><span class='immun-o2-toggle'>&nbsp;</span><span>"+action_date+"</span><div class='immun-o2-br'></div><div class='immun-o2-br'></div>"+providerStr+"<div class='immun-o2-br'></div>"+codeDisplayStr+"</div>";
hiDataForsidepanel+="<div id ='"+this.compID+"historyItemRowHI"+this.m_countInnerDiv+"' class='immun-o2-rp-history-content closed'>"+actionDateAgeHtml+detailedInfoHtml+"</div><div class='sp-separator2'></div>";
}this.m_countDiv++;
var historyInfoHtml="<div id='historyInforForHI"+this.compID+this.m_countDiv+"rp-history' class='immun-o2-rp-history-hi'>"+hiDataForsidepanel+"</div>";
return historyInfoHtml;
};
ImmunizationsO2Component.prototype.selectDefaultRowHi=function(scrollToTop){var $tableView=$("#"+this.compID+"tableviewHI");
if($tableView&&$tableView.length){var tableRowArr=$tableView.find(".result-info");
var firstRow=tableRowArr[0];
var rowId=this.getRowId(firstRow);
var scrollTop=0;
this.m_lastSelectedRow="";
this.updateInfoHi(firstRow,this.m_HIImmunizationsTable.getRowById(rowId).getResultData(),true);
if(scrollToTop){$("#"+this.m_HIImmunizationsTable.getNamespace()+"tableBody").scrollTop(scrollTop);
}}};
ImmunizationsO2Component.prototype.onRowClickForHi=function(event,data){var selRow=$(event.target).parents("dl.result-info");
if(!selRow.length||data.RESULT_DATA===null){return;
}this.updateInfoHi(selRow,data,false);
};
ImmunizationsO2Component.prototype.updateInfoHi=function(selRow,data,isInitialLoad){var rowId=this.getRowId(selRow);
if(this.m_lastSelectedRow===rowId&&this.m_isForecastCompat){var compTableDivElem=$("#compTableDivForImmunization"+this.compID);
$(selRow).removeClass(this.compNS+"-row-selected selected");
if(compTableDivElem.length){compTableDivElem.removeClass("immun-o2-side-panel-addition").removeClass("immun-o2-side-panel-open");
}this.m_sidePanel.m_cornerCloseButton.click();
this.m_lastSelectedRow=null;
this.m_doesSidePanelExist=false;
}else{this.updateSelRowBgColorHI(selRow,isInitialLoad);
this.renderReadingPane(data,1);
this.m_lastSelectedRow=rowId;
}};
MP_Util.setObjectDefinitionMapping("WF_IMMUNIZATIONS",ImmunizationsO2Component);
ImmunizationsO2Component.prototype.processResultsForecastRender=function(recordData){try{var immunForecastRecLength=recordData.VACCINE_GROUPS_CNT;
var i=0;
var j=0;
var k=0;
var vaccinationsObj=null;
var vaccinationsLen=0;
var self=this;
var lastDoseNotCount=0;
this.overdueVaccineList=[];
this.inRangeVaccineList=[];
var getNextDoseRange=function(vaccineGrp,isOverdue){var dateRangeStr=null;
var dosesArr=vaccineGrp.DOSES;
if(dosesArr&&dosesArr.length){var dosesLen=dosesArr.length;
for(k=0;
k<dosesLen;
k++){if(dosesArr[k].SATISFIED_BY.EVENT_ID===0){if(isOverdue){if(dosesArr[k].RECOMMENDED_UNTIL){dateRangeStr=self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_UNTIL,"shortDate3");
}}else{if(dosesArr[k].RECOMMENDED_FROM&&dosesArr[k].RECOMMENDED_UNTIL){dateRangeStr=self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_FROM,"shortDate3")+" - "+self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_UNTIL,"shortDate3");
}}break;
}}}return dateRangeStr;
};
var processVaccineForActionItems=function(vaccineGrp){var actionObj={lastActionObject:null,lastActionPlacement:null,lastActionDate:null};
var vaccineLen=vaccineGrp.VACCINATIONS.length;
var exceptionLen=vaccineGrp.EXCEPTIONS.length;
var vaccineDate=null;
var exceptionDate=null;
var isoVaccineDate=null;
var isoExceptionDate=null;
var i=0;
var j=0;
var tempVaccineStatus="";
var tempExcepResult="";
if(vaccineGrp){if(vaccineLen&&exceptionLen){for(i=vaccineLen-1;
i>=0;
i--){tempVaccineStatus=(vaccineGrp.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((vaccineGrp.VACCINATIONS[i].VACCINATION_FORECAST_STATUS>1)&&(tempVaccineStatus!=="INERROR")){lastDoseNotCount=1;
}if((tempVaccineStatus==="AUTH"||tempVaccineStatus==="MODIFIED"||tempVaccineStatus==="ALTERED")&&vaccineGrp.VACCINATIONS[i].ADMIN_DT_TM){vaccineDate=vaccineGrp.VACCINATIONS[i].ADMIN_DT_TM;
break;
}}for(j=exceptionLen-1;
j>=0;
j--){tempExcepResult=(vaccineGrp.EXCEPTIONS[j].RESULT_STATUS_CODE.MEANING).toUpperCase();
if(tempExcepResult!=="INERROR"){exceptionDate=vaccineGrp.EXCEPTIONS[j].EXCEPTION_DT_TM;
break;
}}if(vaccineDate&&exceptionDate){isoVaccineDate=new Date();
isoVaccineDate.setISO8601(vaccineDate);
isoExceptionDate=new Date();
isoExceptionDate.setISO8601(exceptionDate);
if(isoVaccineDate>isoExceptionDate){actionObj.lastActionPlacement="VACCINATIONS";
actionObj.lastActionObject=vaccineGrp.VACCINATIONS[i];
actionObj.lastActionDate=isoVaccineDate;
}else{actionObj.lastActionPlacement="EXCEPTIONS";
actionObj.lastActionObject=vaccineGrp.EXCEPTIONS[j];
actionObj.lastActionDate=isoExceptionDate;
}}else{if(!vaccineDate&&exceptionDate){isoExceptionDate=new Date();
isoExceptionDate.setISO8601(exceptionDate);
actionObj.lastActionPlacement="EXCEPTIONS";
actionObj.lastActionObject=vaccineGrp.EXCEPTIONS[j];
actionObj.lastActionDate=isoExceptionDate;
}else{if(vaccineDate&&!exceptionDate){isoVaccineDate=new Date();
isoVaccineDate.setISO8601(vaccineDate);
actionObj.lastActionPlacement="VACCINATIONS";
actionObj.lastActionObject=vaccineGrp.VACCINATIONS[i];
actionObj.lastActionDate=isoVaccineDate;
}}}}else{if(vaccineLen){actionObj.lastActionPlacement="VACCINATIONS";
for(i=vaccineLen-1;
i>=0;
i--){tempVaccineStatus=(vaccineGrp.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((vaccineGrp.VACCINATIONS[i].VACCINATION_FORECAST_STATUS>1)&&(tempVaccineStatus!=="INERROR")){lastDoseNotCount=1;
}if((tempVaccineStatus==="AUTH"||tempVaccineStatus==="MODIFIED"||tempVaccineStatus==="ALTERED")&&vaccineGrp.VACCINATIONS[i].ADMIN_DT_TM){actionObj.lastActionObject=vaccineGrp.VACCINATIONS[i];
vaccineDate=vaccineGrp.VACCINATIONS[i].ADMIN_DT_TM;
isoVaccineDate=new Date();
isoVaccineDate.setISO8601(vaccineDate);
actionObj.lastActionDate=isoVaccineDate;
break;
}}}else{if(exceptionLen){for(i=exceptionLen-1;
i>=0;
i--){tempExcepResult=(vaccineGrp.EXCEPTIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if(tempExcepResult!=="INERROR"){exceptionDate=vaccineGrp.EXCEPTIONS[i].EXCEPTION_DT_TM;
isoExceptionDate=new Date();
isoExceptionDate.setISO8601(exceptionDate);
actionObj.lastActionPlacement="EXCEPTIONS";
actionObj.lastActionObject=vaccineGrp.EXCEPTIONS[exceptionLen-1];
actionObj.lastActionDate=isoExceptionDate;
break;
}}}}}}return actionObj;
};
if(recordData.HISTORICAL_SERIES){recordData.HISTORICAL_SERIES=[];
}if(recordData.CURRENT_SERIES){recordData.CURRENT_SERIES=[];
}this.m_personnelInfo=recordData.PERSONNEL;
for(i=immunForecastRecLength-1;
i>=0;
i--){var dosageCount=0;
var currentVaccineGrp=recordData.VACCINE_GROUPS[i];
var statusFlag=currentVaccineGrp.STATUS_FLAG;
var actionDateStr=null;
var actionDateObj=null;
var actionStatusStr=null;
var actionStatusRank=0;
var tempResultVal="";
var hasDosesNotCounted=0;
lastDoseNotCount=0;
vaccinationsObj=currentVaccineGrp.VACCINATIONS;
vaccinationsLen=vaccinationsObj.length;
if(vaccinationsLen>=0){actionDateObj=processVaccineForActionItems(currentVaccineGrp);
if(actionDateObj.lastActionPlacement==="EXCEPTIONS"){if(actionDateObj.lastActionObject){switch(actionDateObj.lastActionObject.REASON_FLAG){case 0:actionDateStr=actionDateObj.lastActionDate.format("shortDate3");
actionStatusRank=0;
break;
case 1:actionDateStr=actionDateObj.lastActionDate.format("shortDate3");
actionStatusStr=this.m_immuni18n.CONTRAINDICATED;
actionStatusRank=2;
break;
case 2:actionDateStr=actionDateObj.lastActionDate.format("shortDate3");
actionStatusStr=this.m_immuni18n.REFUSED;
actionStatusRank=3;
break;
default:actionStatusRank=0;
break;
}}}else{if(actionDateObj.lastActionPlacement==="VACCINATIONS"){if(actionDateObj.lastActionObject){actionDateStr=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(actionDateObj.lastActionObject.ADMIN_DT_PRECISION_FLAG,actionDateObj.lastActionDate);
actionStatusStr=this.m_immuni18n.ADMINISTERED;
if(lastDoseNotCount){actionStatusStr+=" - "+this.m_immuni18n.NOT_COUNT;
}actionStatusRank=1;
tempResultVal=actionDateObj.lastActionObject.RESULT_STATUS_CODE.MEANING;
if((tempResultVal==="MODIFIED"||tempResultVal==="ALTERED")&&actionDateStr){actionDateStr+="<span class='res-modified'></span>";
}}}}for(j=0;
j<vaccinationsLen;
j++){tempResultVal=(vaccinationsObj[j].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((tempResultVal==="AUTH"||tempResultVal==="MODIFIED"||tempResultVal==="ALTERED")&&vaccinationsObj[j].ADMIN_DT_TM){dosageCount++;
}if(!currentVaccineGrp.EVENT_ID){currentVaccineGrp.EVENT_ID=vaccinationsObj[j].EVENT_ID;
}if((vaccinationsObj[j].VACCINATION_FORECAST_STATUS>1)&&(tempResultVal!=="INERROR")){hasDosesNotCounted=1;
}}currentVaccineGrp.VACCINE_GROUP_DISPLAY=currentVaccineGrp.VACCINE_GROUP_CODE.DISPLAY;
currentVaccineGrp.DOSES_ADMIN=dosageCount;
if(hasDosesNotCounted){currentVaccineGrp.DOSES_ADMIN+="<span class='immun-o2-forecast-doses-icon' title='"+this.m_immuni18n.NOT_COUNT_HOVER+"'></span>";
}currentVaccineGrp.ADMIN_DATE=(actionDateObj&&actionDateObj.lastActionDate)?actionDateObj.lastActionDate:new Date(0,0,0);
currentVaccineGrp.ADMIN_DATE_STRING=actionDateStr||"--";
currentVaccineGrp.LAST_ACTION=actionStatusRank;
currentVaccineGrp.LAST_ACTION_STRING=actionStatusStr||"--";
if(statusFlag>=0){switch(statusFlag){case 0:case 1:currentVaccineGrp.STATUS_STRING="--";
currentVaccineGrp.STATUS_RANK=3;
currentVaccineGrp.NEXT_DOSE_RANGE=getNextDoseRange(currentVaccineGrp)||"--";
break;
case 2:currentVaccineGrp.STATUS_STRING=this.m_immuni18n.IN_RANGE;
currentVaccineGrp.STATUS_RANK=2;
currentVaccineGrp.NEXT_DOSE_RANGE=getNextDoseRange(currentVaccineGrp)||"--";
this.inRangeVaccineList.push(currentVaccineGrp.VACCINE_GROUP_DISPLAY);
break;
case 3:currentVaccineGrp.STATUS_STRING="<span class='immun-o2-forecast-status-overdue-bold'>"+this.m_immuni18n.OVERDUE+"</span>";
currentVaccineGrp.STATUS_RANK=1;
currentVaccineGrp.NEXT_DOSE_RANGE=getNextDoseRange(currentVaccineGrp,true)||"--";
this.overdueVaccineList.push(currentVaccineGrp.VACCINE_GROUP_DISPLAY);
break;
case 4:currentVaccineGrp.STATUS_STRING=this.m_immuni18n.COMPLETE;
currentVaccineGrp.STATUS_RANK=4;
currentVaccineGrp.NEXT_DOSE_RANGE="--";
break;
case 5:currentVaccineGrp.STATUS_STRING=this.m_immuni18n.CONTRAINDICATED;
currentVaccineGrp.STATUS_RANK=5;
currentVaccineGrp.NEXT_DOSE_RANGE="--";
break;
case 6:currentVaccineGrp.STATUS_STRING=this.m_immuni18n.AGED_OUT;
currentVaccineGrp.STATUS_RANK=6;
currentVaccineGrp.NEXT_DOSE_RANGE="--";
break;
case 7:currentVaccineGrp.STATUS_STRING=this.m_immuni18n.REFUSED_PERM;
currentVaccineGrp.STATUS_RANK=7;
currentVaccineGrp.NEXT_DOSE_RANGE="--";
break;
default:break;
}if(!(statusFlag===0||statusFlag===1||statusFlag===2||statusFlag===3)){if(!recordData.HISTORICAL_SERIES){recordData.HISTORICAL_SERIES=[];
}recordData.HISTORICAL_SERIES.push(currentVaccineGrp);
}else{if(!recordData.CURRENT_SERIES){recordData.CURRENT_SERIES=[];
}recordData.CURRENT_SERIES.push(currentVaccineGrp);
}}}}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","processResultsForecastRender");
}};
ImmunizationsO2Component.prototype.addForecastClickCallBacks=function(){if(this.m_immunForecastTable){var component=this;
this.m_immunForecastTable.setOnRowClickCallback(function(data){component.onForecastRowClick(data);
});
this.m_immunForecastTable.setOnColumnHeaderClickCallback(function(data){component.onForecastColHeaderClick();
});
}};
ImmunizationsO2Component.prototype.onForecastRowClick=function(data){try{if(this.bStartTimer){var rowClickTimer=new CapabilityTimer("CAP:MPG.IMMUNIZATIONS.O2","");
rowClickTimer.capture();
this.bStartTimer=false;
}var $target=$(data.event.target);
var selRow;
if($target.is("td")){selRow=$target.parent();
}else{if($target.is("tr")){selRow=$target;
}}if(selRow&&data.records.length){this.updateForecastInfo(selRow,data.records[0]);
}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","onForecastRowClick");
}};
ImmunizationsO2Component.prototype.onForecastColHeaderClick=function(){if(this.m_doesSidePanelExist){if(this.m_prevMill){this.deselectAll();
}this.selectForecastDefaultRow(true);
}};
ImmunizationsO2Component.prototype.updateForecastInfo=function(selRow,data){try{if(selRow&&data){var selRowId=this.getRowId(selRow);
var compTableDivElem=$("#compTableDivForImmunization"+this.compID);
if(selRowId===this.m_lastSelectedRow){if(compTableDivElem.length){compTableDivElem.removeClass("immun-o2-side-panel-addition immun-o2-side-panel-open");
}this.m_sidePanel.m_cornerCloseButton.click();
this.m_lastSelectedRow=null;
this.m_doesSidePanelExist=false;
}else{if(this.m_prevHi){this.deselectAllHI();
}if(compTableDivElem.length){compTableDivElem.addClass("immun-o2-side-panel-addition immun-o2-side-panel-open");
}if(!this.m_doesSidePanelExist){this.activateSidePanel();
}this.m_lastSelectedRow=selRowId;
this.renderForecastPanelContents(data,selRow);
}this.m_prevHi=false;
this.m_prevMill=true;
}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","updateForecastInfo");
}};
ImmunizationsO2Component.prototype.activateSidePanel=function(){try{var tableHeight="";
var self=this;
this.m_doesSidePanelExist=true;
this.m_sidePanelMinHeight="175px";
tableHeight=$("#compTableDivForImmunization"+this.compID).css("height");
if(this.m_sidePanelContainer&&this.m_sidePanelContainer.length){this.m_sidePanel=new CompSidePanel(this.compID,this.m_sidePanelContainer.attr("id"));
this.getImmunizationsUtil().setSidePanel(this.m_sidePanel);
this.m_sidePanel.setExpandOption(this.m_sidePanel.expandOption.EXPAND_DOWN);
var actionContents="<div id='btnDiv"+this.compID+"' class='immun-o2-side-panel-button'><button class='immun-o2-hi-ext-btn-inv' id='HIButt"+this.compID+"'>"+this.m_immuni18n.VIEW_MORE_SIDE_PANEL_DATA+"</button></div>";
if(tableHeight){this.m_sidePanel.setHeight(tableHeight);
}this.m_sidePanel.setMinHeight(this.m_sidePanelMinHeight);
this.m_sidePanel.renderPreBuiltSidePanel();
this.m_sidePanel.setActionsAsHTML(actionContents);
this.m_sidePanel.setContents("<div></div>","immun-o2Content"+this.compID);
this.m_sidePanel.showCornerCloseButton();
this.m_sidePanel.setCornerCloseFunction(function(){$("#compTableDivForImmunization"+self.compID).removeClass("immun-o2-side-panel-addition").removeClass("immun-o2-side-panel-open");
if(self.m_prevHi){self.deselectAllHI();
}else{if(self.m_prevMill){self.deselectAll();
}}self.m_lastSelectedRow=null;
self.m_doesSidePanelExist=false;
self.m_prevVacGroupId="";
self.m_vaccineGroupId="";
self.m_lastVaccineGrpId="";
self.getImmunizationsUtil().clearShellCollectionsObj();
});
}}catch(err){MP_Util.LogJSError(err,this,"immunizations-o2.js","activateSidePanel");
}};
ImmunizationsO2Component.prototype.renderForecastPanelContents=function(data,selRow){try{var self=this;
var actionHolderHtml="";
var scrollContainerHtml="";
this.m_lastModifiedVaccineGroupEventCode=0;
this.m_lastModifiedVaccineRow=null;
this.vaccineData=data;
this.sidePanelElement=$("#sidePanel"+this.compID);
$("#sidePanel"+this.compID).find(".loading-screen").remove();
this.m_sidePanel.removeSubtitle();
this.m_sidePanel.setTitleText(data.VACCINE_GROUP_DISPLAY);
this.m_sidePanel.removeAlertBanner();
switch(data.STATUS_FLAG){case 0:case 1:this.m_sidePanel.setSubtitleText(" ("+data.NEXT_DOSE_RANGE+")");
break;
case 2:this.m_sidePanel.setSubtitleAsHTML(data.STATUS_STRING+" ("+data.NEXT_DOSE_RANGE+")</span>");
break;
case 3:this.m_sidePanel.setSubtitleAsHTML(data.STATUS_STRING+"<span class='immun-o2-forecast-status-overdue-date'> ("+data.NEXT_DOSE_RANGE+")</span>");
break;
default:this.m_sidePanel.setSubtitleText(data.STATUS_STRING);
break;
}actionHolderHtml="<div class='immun-o2-action-holder' id='actionBtnHolder"+this.compID+"'><div id='sidePanelUnchartHistoryBtn"+this.compID+"' class='immun-util-related-fields immun-o2-split-button'></div><div id='sidePanelModifyBtn"+this.compID+"' class='immun-util-related-fields immun-o2-split-button'></div><div id='saveHistoryBtn"+this.compID+"' class='sp-button2 immun-o2-save-unchart'>"+i18n.SAVE+"</div><div id='saveUnchartBtn"+this.compID+"' class='sp-button2 immun-o2-save-history disabled'>"+i18n.SAVE+"</div><div id='cancelHistoryBtn"+this.compID+"' class='sp-button2  immun-o2-cancel-history'>"+i18n.CANCEL+"</div><div id='resultViewerBtn"+this.compID+"' class='immun-o2-related-fields'></div></div>";
scrollContainerHtml="<div id='sidePanelScrollContainer"+this.compID+"' class = 'sp-body-content-area immun-o2-scroll-container'>"+this.loadForecastSidePanel(data)+"</div>";
this.m_sidePanel.setActionsAsHTML(actionHolderHtml);
this.m_sidePanel.setContents(scrollContainerHtml,"immun-o2Content"+this.compID);
this.m_sidePanel.expandSidePanel();
this.addDoseClickEvents("forecastSP");
this.modifyBtnHolder=$("#sidePanelModifyBtn"+this.compID);
this.unchartHistBtnHolder=$("#sidePanelUnchartHistoryBtn"+this.compID);
this.resultViewerBtnHolder=$("#resultViewerBtn"+this.compID);
var modifySplitButton=new MPageUI.SplitButton();
var unchartSplitButton=new MPageUI.SplitButton();
var resultViewerButton=new MPageUI.Button();
modifySplitButton.setLabel(this.m_immuni18n.MODIFY);
modifySplitButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
unchartSplitButton.setLabel(this.m_immuni18n.UNCHART_DOSE);
unchartSplitButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
resultViewerButton.setLabel(this.m_immuni18n.MORE_DETAILS);
resultViewerButton.setStyle(MPageUI.BUTTON_OPTIONS.STYLE.SECONDARY);
this.resultViewerBtnHolder.append(resultViewerButton.render());
var forecastPanel=$("#"+this.compID+"forecastSP");
if(forecastPanel){if(forecastPanel.hasClass("immun-o2-empty-sp-align")){resultViewerButton.setDisabled(true);
}else{resultViewerButton.setOnClickCallback(function(){self.launchDoseResultViewer(data.DOSE_EVENT_IDS);
});
resultViewerButton.attachEvents();
}}var modifyBtnOptions=[];
var unchartBtnOptions=[];
var vaccinationsLen=data.VACCINATIONS.length;
var exceptionsLen=data.EXCEPTIONS.length;
var actualVaccinLen=0;
var actualExceptionsLen=0;
var immunDetailsMapping={};
var vaccineImmunDetails=null;
var modifyPrefixStr="ModifyMode";
var resultStatus="";
var resultFlag=-1;
var controlActionHolderButtons=function(sidePanelMode){self.sidePanelScrollContainer.empty();
if(self.modifyBtnHolder){self.modifyBtnHolder.hide();
}if(self.sidePanelSimpleModifyBtn){self.sidePanelSimpleModifyBtn.hide();
}if(self.unchartHistBtnHolder){self.unchartHistBtnHolder.hide();
}if(self.sidePanelSimpleUnchartBtn){self.sidePanelSimpleUnchartBtn.hide();
}if(self.resultViewerBtnHolder){self.resultViewerBtnHolder.hide();
}if(sidePanelMode==="modify"){self.saveHistoryBtn.show();
}else{if(sidePanelMode==="unchart"){self.saveUnchartBtn.show();
}}self.cancelHistoryBtn.show();
self.sidePanelElement.find(".loading-screen").remove();
MP_Util.LoadSpinner(self.sidePanelElement.attr("id"));
self.sidePanelElement.find(".loading-screen").addClass("immun-o2-spinner");
};
var itemSelectCallBackFn=function(){for(var indx=0;
indx<vaccinationsLen;
indx++){if(data.VACCINATIONS[indx].EVENT_ID===this.eventId){controlActionHolderButtons("modify");
vaccineImmunDetails=self.getImmunizationsUtil().formatImmunDetailsForShell(immunDetailsMapping[this.eventId]);
self.getImmunizationsUtil().createShellForEditMode(vaccineImmunDetails,self.sidePanelScrollContainer,modifyPrefixStr+this.eventId,1);
self.saveContextEventID=this.eventId;
break;
}}};
var adminDateItem={};
var date=null;
for(var i=vaccinationsLen-1;
i>=0;
i--){resultStatus=data.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING;
if((resultStatus==="AUTH"||resultStatus==="ALTERED"||resultStatus==="MODIFIED")&&data.VACCINATIONS[i].ADMIN_DT_TM){date=new Date();
date.setISO8601(data.VACCINATIONS[i].ADMIN_DT_TM);
var adminDateDisplay=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(data.VACCINATIONS[i].ADMIN_DT_PRECISION_FLAG,date);
adminDateItem={label:adminDateDisplay,onSelect:itemSelectCallBackFn,eventId:data.VACCINATIONS[i].EVENT_ID};
modifyBtnOptions.push(adminDateItem);
immunDetailsMapping[data.VACCINATIONS[i].EVENT_ID]=data.VACCINATIONS[i];
actualVaccinLen++;
}}for(var e=0;
e<exceptionsLen;
e++){resultFlag=data.EXCEPTIONS[e].REASON_FLAG;
resultStatus=(data.EXCEPTIONS[e].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((resultFlag===0||resultFlag===1||resultFlag===2)&&resultStatus!=="INERROR"){actualExceptionsLen++;
}}if(modifyBtnOptions.length>=1&&(actualVaccinLen+actualExceptionsLen>1)){modifySplitButton.addOptions(modifyBtnOptions);
}modifySplitButton.getLabelButton().setOnClickCallback(function(){modifySplitButton.toggle();
});
if(this.modifyBtnHolder){this.modifyBtnHolder.append(modifySplitButton.render());
modifySplitButton.attachEvents();
if(!modifyBtnOptions.length){modifySplitButton.getLabelButton().setDisabled(true);
modifySplitButton.getDropdownButton().setDisabled(true);
this.modifyBtnHolder.addClass("disabled");
}else{if(modifyBtnOptions.length===1&&(actualVaccinLen+actualExceptionsLen===1)){this.modifyBtnHolder.replaceWith("<div id='sidePanelSimpleModifyBtn"+this.compID+"' class='sp-button2'>"+this.m_immuni18n.MODIFY+"</div>");
}}}this.saveHistoryBtn=$("#saveHistoryBtn"+this.compID);
this.cancelHistoryBtn=$("#cancelHistoryBtn"+this.compID);
this.sidePanelScrollContainer=$("#sidePanelScrollContainer"+this.compID);
this.saveUnchartBtn=$("#saveUnchartBtn"+this.compID);
if($("#sidePanelSimpleModifyBtn"+this.compID).length){this.sidePanelSimpleModifyBtn=$("#sidePanelSimpleModifyBtn"+this.compID);
this.sidePanelSimpleModifyBtn.click(function(){vaccineImmunDetails=self.getImmunizationsUtil().formatImmunDetailsForShell(immunDetailsMapping[adminDateItem.eventId]);
controlActionHolderButtons("modify");
self.getImmunizationsUtil().createShellForEditMode(vaccineImmunDetails,self.sidePanelScrollContainer,modifyPrefixStr+adminDateItem.eventId,1);
self.saveContextEventID=adminDateItem.eventId;
});
}this.cancelHistoryBtn.click(function(){self.getImmunizationsUtil().clearShellCollectionsObj();
self.renderForecastPanelContents(data,selRow);
});
this.saveHistoryBtn.click(function(){var modifiedImmunDetails=self.getImmunizationsUtil().readValuesFromImmunShellFields(modifyPrefixStr+self.saveContextEventID);
modifiedImmunDetails.EVENT_ID=self.saveContextEventID;
modifiedImmunDetails.PARENT_ENTITY_ID=immunDetailsMapping[self.saveContextEventID].PARENT_ENTITY_ID||0;
modifiedImmunDetails.VACCINE_EVENT_CODE=immunDetailsMapping[self.saveContextEventID].IDENTIFIER.EVENT_CODE.CODE_VALUE;
modifiedImmunDetails.PRODUCT_ID=immunDetailsMapping[self.saveContextEventID].PRODUCT.SYNONYM_ID||0;
self.m_lastModifiedVaccineGroupEventCode=data.VACCINE_GROUP_CODE.CODE_VALUE;
self.m_lastModifiedVaccineRow=selRow;
self.m_immunizationsToSave.push(modifiedImmunDetails);
self.getImmunizationsUtil().saveImmunizationsToDataBase(self.m_immunizationsToSave,"modify");
self.m_immunizationsToSave=[];
});
var unchartDateItem={};
var unchartDateItemDisplay="";
if(this.sortedRowData&&this.sortedRowData.length){var sortedRowLength=this.sortedRowData.length;
for(var s=sortedRowLength-1;
s>=0;
s--){resultStatus=this.sortedRowData[s].RESULT_STATUS_CODE.MEANING;
if((resultStatus==="AUTH"||resultStatus==="ALTERED"||resultStatus==="MODIFIED")&&this.sortedRowData[s].ADMIN_DT_TM){date=new Date();
date.setISO8601(this.sortedRowData[s].ADMIN_DT_TM);
unchartDateItemDisplay=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(this.sortedRowData[s].ADMIN_DT_PRECISION_FLAG,date);
}else{if(this.sortedRowData[s].EXCEPTION_DT_TM){date=new Date();
date.setISO8601(this.sortedRowData[s].EXCEPTION_DT_TM);
unchartDateItemDisplay=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(0,date);
immunDetailsMapping[this.sortedRowData[s].EVENT_ID]=this.sortedRowData[s];
}}unchartDateItem={label:unchartDateItemDisplay,onSelect:function(){controlActionHolderButtons("unchart");
self.handleUnchartItemClick(data,immunDetailsMapping[this.eventId]);
self.unchartEventID=this.eventId;
},eventId:this.sortedRowData[s].EVENT_ID};
unchartBtnOptions.push(unchartDateItem);
}}if(unchartBtnOptions.length){unchartSplitButton.addOptions(unchartBtnOptions);
}unchartSplitButton.getLabelButton().setOnClickCallback(function(){unchartSplitButton.toggle();
});
if(this.unchartHistBtnHolder){this.unchartHistBtnHolder.append(unchartSplitButton.render());
unchartSplitButton.attachEvents();
if(!unchartBtnOptions.length){unchartSplitButton.getLabelButton().setDisabled(true);
unchartSplitButton.getDropdownButton().setDisabled(true);
this.unchartHistBtnHolder.addClass("disabled");
}else{if(unchartBtnOptions.length===1){this.unchartHistBtnHolder.replaceWith("<div id='sidePanelSimpleUnchartBtn"+this.compID+"' class='sp-button2'>"+this.m_immuni18n.UNCHART_DOSE+"</div>");
}}}if($("#sidePanelSimpleUnchartBtn"+this.compID).length){this.sidePanelSimpleUnchartBtn=$("#sidePanelSimpleUnchartBtn"+this.compID);
this.sidePanelSimpleUnchartBtn.click(function(){controlActionHolderButtons("unchart");
self.handleUnchartItemClick(data,self.sortedRowData[0]);
self.unchartEventID=self.sortedRowData[0].EVENT_ID;
});
}this.saveUnchartBtn.attr("disabled",true);
if(this.saveUnchartBtn){this.saveUnchartBtn.click(function(){var doseUnchartDetails=self.getImmunizationsUtil().formatImmunDetailsForShell(immunDetailsMapping[self.unchartEventID]);
doseUnchartDetails.ADMIN_DATE=self.getImmunizationsUtil().convertAbsoluteDate(immunDetailsMapping[self.unchartEventID].ADMIN_DT_TM||immunDetailsMapping[self.unchartEventID].EXCEPTION_DT_TM);
doseUnchartDetails.UNCHART_REASON=self.unchartReason;
if(immunDetailsMapping[self.unchartEventID].EXCEPTION_DT_TM){doseUnchartDetails.EVENT_TYPE_FLAG=1;
}else{doseUnchartDetails.EVENT_TYPE_FLAG=0;
}self.m_immunizationsToSave.push(doseUnchartDetails);
self.getImmunizationsUtil().saveImmunizationsToDataBase(self.m_immunizationsToSave,"unchart");
self.m_immunizationsToSave=[];
});
}this.m_panelShellFieldsRenderedCnt=0;
CERN_EventListener.addListener({},"shellFieldsRendered"+this.compID,this.panelShellFieldsEventCB,this);
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderForecastPanelContents");
}};
ImmunizationsO2Component.prototype.launchDoseResultViewer=function(doseEventIds){var capTimer=null;
try{var category_mean=this.getCriterion().category_mean;
ResultViewer.launchAdHocViewer(doseEventIds);
capTimer=new CapabilityTimer("CAP:MPG.IMMUNIZATIONS.O2 - Dose Result Viewer Launched",category_mean);
if(capTimer){capTimer.capture();
}}catch(err){logger.logJSError(err,null,"immunizations-o2.js","launchDoseResultViewer");
}};
ImmunizationsO2Component.prototype.panelShellFieldsEventCB=function(){this.m_panelShellFieldsRenderedCnt++;
if(this.m_panelShellFieldsRenderedCnt===11){this.sidePanelElement.find(".loading-screen").remove();
this.m_sidePanel.expandSidePanel();
CERN_EventListener.removeListener({},"shellFieldsRendered"+this.compID,this.panelShellFieldsEventCB,this);
}};
ImmunizationsO2Component.prototype.handleUnchartItemClick=function(data,selectedItem){try{if(!this.sidePanelScrollContainer.length){throw new Error("this.sidePanelScrollContainer is not defined in ImmunizationsO2Component.prototype.handleUnchartItemClick function");
}this.sidePanelElement.find(".loading-screen").remove();
var dateDisplay="";
var self=this;
var date=null;
var vaccineName=data.VACCINE_GROUP_DISPLAY||"";
if(selectedItem.ADMIN_DT_TM){date=new Date();
date.setISO8601(selectedItem.ADMIN_DT_TM);
dateDisplay=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(selectedItem.ADMIN_DT_PRECISION_FLAG,date);
}else{if(selectedItem.EXCEPTION_DT_TM){date=new Date();
date.setISO8601(selectedItem.EXCEPTION_DT_TM);
dateDisplay=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(0,date);
}}this.m_sidePanel.setTitleText(vaccineName+"  -  "+dateDisplay);
this.m_sidePanel.removeSubtitle();
var reasonTextArea=new MPageUI.TextArea();
reasonTextArea.setHeaderLabel(this.m_immuni18n.REASON_FOR_UNCHARTING);
reasonTextArea.setWidth(this.sidePanelScrollContainer.width()-30);
reasonTextArea.setHeightInPixels(100);
reasonTextArea.setRequired(true);
reasonTextArea.setOnChangeCallback(function(){self.unchartReason=reasonTextArea.getCurrentValue();
if(reasonTextArea.getCurrentValue()){if(self.saveUnchartBtn){self.saveUnchartBtn.removeClass("disabled");
self.saveUnchartBtn.attr("disabled",false);
}}else{if(self.saveUnchartBtn){self.saveUnchartBtn.addClass("disabled");
self.saveUnchartBtn.attr("disabled",true);
}}});
var reasonTextAreaHTML=reasonTextArea.render();
this.sidePanelScrollContainer.append("<div class='immun-o2-unchart-reason'>"+reasonTextAreaHTML+"</div>");
reasonTextArea.attachEvents();
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","handleUnchartItemClick");
}};
ImmunizationsO2Component.prototype.launchRegistryImportDialog=function(){var criterion=this.getCriterion();
if(this.m_registryImportCOM){this.m_registryImportCOM.LaunchRegistryImportDialog(criterion.person_id,criterion.encntr_id,1);
CERN_EventListener.fireEvent(null,this,"Updated Immunizations Available",null);
}};
ImmunizationsO2Component.prototype.getLastUpdateRegImport=function(){var criterion=this.getCriterion();
var daysSinceLastSync=-1;
var today=new Date();
daysSinceLastSync=this.m_registryImportCOM.GetRegistryImportLastSync(criterion.person_id,criterion.encntr_id);
if(daysSinceLastSync>0){return this.m_immuni18n.AGE_AGO.replace("{0}",this.getImmunizationsUtil().calculateAge(new Date(),new Date(today.setDate((today.getDate()-daysSinceLastSync)))));
}else{if(daysSinceLastSync===0){return this.m_immuni18n.TODAY;
}}return"--";
};
ImmunizationsO2Component.prototype.launchConsentDialog=function(){var criterion=this.getCriterion();
this.m_registryImportCOM.LaunchPatientDecisionsDialog(criterion.person_id,criterion.encntr_id);
CERN_EventListener.fireEvent(null,this,"Updated Immunizations Available",null);
};
ImmunizationsO2Component.prototype.getConsentStatus=function(){var criterion=this.getCriterion();
var statusValue=0;
statusValue=this.m_registryImportCOM.GetPatientDecisions(criterion.person_id,criterion.encntr_id);
if(statusValue===0){return this.m_immuni18n.NOT_NECESSARY;
}else{if(statusValue===2){return this.m_immuni18n.COMPLETE;
}else{return this.m_immuni18n.NEEDED;
}}};
ImmunizationsO2Component.prototype.renderImmunForecastComponent=function(recordData){try{var statusForecastColObj=null;
var vaccineForecastColObj=null;
var dosesAdminForecastColObj=null;
var lastAdminDateForecastColObj=null;
var lastActionForecastColObj=null;
var nextDoseRangeColObj=null;
var self=this;
var componentHtml="";
var tableViewHtml="";
var sidePanelHtml="";
var hiBannerHtml="";
var currentSeriesGrp="";
var historicalSeriesGrp="";
var forecastTimer=null;
var registryImportPref=recordData.IMMUN_FORECAST.REG_IMPORT_PREF;
this.m_lastSelectedRow=null;
this.m_doesSidePanelExist=false;
this.m_recordData=recordData.IMMUN_FORECAST;
forecastTimer=new CapabilityTimer("CAP:MPG.IMMUNIZATIONS.O2 Immunization Forecast",this.getCriterion().category_mean);
if(forecastTimer){forecastTimer.addMetaData("rtms.legacy.metadata.1","Opted Forecast Data");
forecastTimer.capture();
}this.processResultsForecastRender(recordData.IMMUN_FORECAST);
this.m_immunForecastTable=new MPageUI.Table();
this.m_immunForecastTable.setOptions({columns:{separators:false},namespace:this.compNS+"-forecast-table",select:MPageUI.TABLE_OPTIONS.SELECT.SINGLE_ROW});
statusForecastColObj={id:"STATUS",label:i18n.STATUS,css:this.compNS+"-forecast-status-col",contents:function(record){return record.STATUS_STRING;
},sortOptions:{userSort:true,primary:{field:"STATUS_RANK",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING},secondary:[{field:"VACCINE_GROUP_DISPLAY",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}]}};
vaccineForecastColObj={id:"VACCINE",label:this.m_immuni18n.VACCINE,css:this.compNS+"-forecast-vaccine-col",contents:function(record){return record.VACCINE_GROUP_DISPLAY;
},sortOptions:{userSort:true,primary:{field:"VACCINE_GROUP_DISPLAY",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}}};
dosesAdminForecastColObj={id:"DOSES_ADMIN",label:this.m_immuni18n.DOSES_ADMIN,css:this.compNS+"-forecast-doses-col",contents:function(record){return record.DOSES_ADMIN;
},sortOptions:{userSort:true,primary:{field:"DOSES_ADMIN",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}}};
lastAdminDateForecastColObj={id:"LAST_ADMIN_DATE",label:this.m_immuni18n.LAST_ACTION_DATE,css:this.compNS+"-forecast-last-admin-date-col",contents:function(record){return record.ADMIN_DATE_STRING;
},sortOptions:{userSort:true,primary:{field:"ADMIN_DATE",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}}};
lastActionForecastColObj={id:"LAST_ACTION",label:this.m_immuni18n.LAST_ACTION,css:this.compNS+"-forecast-last-action-col",contents:function(record){return record.LAST_ACTION_STRING;
},sortOptions:{userSort:true,primary:{field:"LAST_ACTION",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}}};
nextDoseRangeColObj={id:"NEXT_DOSE_RANGE",label:this.m_immuni18n.NEXT_DOSE_RANGE,css:this.compNS+"-forecast-next-dose-range-col",contents:function(record){return record.NEXT_DOSE_RANGE;
}};
this.m_immunForecastTable.setColumns([statusForecastColObj,vaccineForecastColObj,dosesAdminForecastColObj,lastAdminDateForecastColObj,lastActionForecastColObj,nextDoseRangeColObj]);
currentSeriesGrp={id:"CURRENT_SERIES",css:"hide",label:"",showCount:false,expanded:true,collapsible:false,records:recordData.IMMUN_FORECAST.CURRENT_SERIES};
historicalSeriesGrp={id:"HISTORICAL_SERIES",label:this.m_immuni18n.HISTORICAL_SERIES,showCount:true,expanded:true,collapsible:true,records:recordData.IMMUN_FORECAST.HISTORICAL_SERIES};
this.m_immunForecastTable.setData({groups:[currentSeriesGrp,historicalSeriesGrp]});
var sortOption={column:{id:"STATUS",direction:MPageUI.TABLE_OPTIONS.SORT.ASCENDING}};
this.m_immunForecastTable.sortBy(sortOption);
tableViewHtml="<div id='"+this.compID+"tableview' class='"+this.compNS+"-table'>"+this.m_immunForecastTable.render()+"</div>";
sidePanelHtml="<div id='"+this.compID+"sidePanelContainer' class='"+this.compNS+"-sidepanel-container'></div>";
hiBannerHtml="";
var immunizationScheduleHtml="";
if(!CERN_Platform.inMillenniumContext()){immunizationScheduleHtml="<a id = '"+this.compID+"schedule'>Immunization Schedule</a>";
}componentHtml="<div id ='"+this.compID+"maincontainer' class ='"+this.compNS+"-maincontainer "+this.compNS+"-maincontainer-position'><div id='hibanner"+this.compID+"'>"+hiBannerHtml+"</div><div id='compTableDivForImmunization"+this.compID+"' class='immun-o2-table-container'><div id='parentOfHidata"+this.compID+"' class='immun-o2-spinner-parent'><div id='hidata"+this.compID+"' class='immun-o2-scroll-hi'></div></div><div id='pager"+this.compID+"'></div><div id='emptyDivAfterpager"+this.compID+"'></div>"+tableViewHtml+"</div>"+sidePanelHtml+immunizationScheduleHtml+"</div>";
if(registryImportPref===1){this.m_registryImportCOM=CERN_Platform.getDiscernObject("HLMMPAGES");
if(this.m_registryImportCOM){var consentStatus=this.getConsentStatus();
var lastConnectedDateString=this.m_immuni18n.LAST_CONNECTED+"&nbsp;"+this.getLastUpdateRegImport();
componentHtml+="<div id ='"+this.compID+"registryLinksContainer' class='immun-o2-registry-links-container'>";
componentHtml+="<span id ='"+this.compID+"consentContainer'><a id = '"+this.compID+"consentDialogLink'>"+this.m_immuni18n.SHARE_FOLLOW_UP+"</a>:<span id='"+this.compID+"consentStatus' class='secondary-text'>&nbsp;"+consentStatus+"</span></span>&nbsp;|&nbsp;";
componentHtml+="<span id ='"+this.compID+"regImportContainer'><a id ='"+this.compID+"regImportLink'>"+this.m_immuni18n.REGISTRY_IMPORT+"</a><span id='"+this.compID+"regImportLastUpdated' class='secondary-text'>&nbsp;("+lastConnectedDateString+")</span></span></div>";
}}this.addForecastClickCallBacks();
this.finalizeComponent(componentHtml);
$("#"+this.compID+"schedule").click(function(){self.onTitleClick();
});
this.m_immunForecastTable.attachEvents();
this.m_sidePanelContainer=$("#"+this.compID+"sidePanelContainer");
if(recordData.IMMUN_FORECAST.VACCINE_GROUPS_CNT!==0){this.m_totalImmunCount=recordData.IMMUN_FORECAST.VACCINE_GROUPS_CNT;
}if(self.getExternalDataInd()){this.processHIData(recordData);
}$("#"+this.compID+"regImportLink").click(function(){self.launchRegistryImportDialog();
});
$("#"+this.compID+"consentDialogLink").click(function(){self.launchConsentDialog();
});
if(this.m_lastModifiedVaccineGroupEventCode&&this.m_lastModifiedVaccineRow){var lastModVacRecNum=$(this.m_lastModifiedVaccineRow).attr("data-record");
var $selectedVaccineRow=$("tr[data-record="+lastModVacRecNum+"]");
if($selectedVaccineRow.length){$selectedVaccineRow.click();
this.m_lastModifiedVaccineGroupEventCode=0;
this.m_lastModifiedVaccineRow=null;
this.m_immunizationsToSave=[];
}}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderImmunForecastComponent");
}};
ImmunizationsO2Component.prototype.selectForecastDefaultRow=function(scrollToTop){var $firstRecordRow=$("#"+this.compID+"tableview td:first").parent();
if($firstRecordRow.length){$firstRecordRow.click();
if(scrollToTop){$("#"+this.compID+"tableview tbody").scrollTop(0);
}}};
ImmunizationsO2Component.prototype.loadForecastSidePanel=function(rowData){try{var forecastSPHtml="";
var forecastActionItemHtml="";
var forecastActionDateHtml="";
var forecastActionProductHtml="";
var forecastActionCommentsHtml="";
var forecastActionExtraDetailsHtml="";
this.sortedRowData=[];
var sortedRowDataLen=0;
var currentActionItem=null;
var date=null;
var actionDate=null;
var actionItemStatus="";
var timelineSort=function(dirtyObject){var combinedImmArray=[];
var i=0;
var tempExcepResult=-1;
var tempVaccineStatus="";
for(i=0;
i<dirtyObject.EXCEPTIONS.length;
i++){tempExcepResult=(dirtyObject.EXCEPTIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if(tempExcepResult!=="INERROR"){combinedImmArray.push(dirtyObject.EXCEPTIONS[i]);
}}for(i=0;
i<dirtyObject.VACCINATIONS.length;
i++){tempVaccineStatus=(dirtyObject.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((tempVaccineStatus==="AUTH"||tempVaccineStatus==="MODIFIED"||tempVaccineStatus==="ALTERED")&&dirtyObject.VACCINATIONS[i].ADMIN_DT_TM){combinedImmArray.push(dirtyObject.VACCINATIONS[i]);
}}combinedImmArray.sort(function(a,b){var temp1=new Date();
var temp2=new Date();
temp1.setISO8601(a.ADMIN_DT_TM||a.EXCEPTION_DT_TM);
temp2.setISO8601(b.ADMIN_DT_TM||b.EXCEPTION_DT_TM);
return temp1.getTime()-temp2.getTime();
});
return combinedImmArray;
};
if(rowData){var rowDataVaccineLen=rowData.VACCINATIONS.length;
var rowDataExcepLen=rowData.EXCEPTIONS.length;
var resultViewerEventIds=[];
if(rowDataVaccineLen&&rowDataExcepLen){this.sortedRowData=timelineSort(rowData);
}else{if(rowDataVaccineLen){for(i=0;
i<rowDataVaccineLen;
i++){var tempVaccineStatus=(rowData.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if((tempVaccineStatus==="AUTH"||tempVaccineStatus==="MODIFIED"||tempVaccineStatus==="ALTERED")&&rowData.VACCINATIONS[i].ADMIN_DT_TM){this.sortedRowData.push(rowData.VACCINATIONS[i]);
}}}else{if(rowData.EXCEPTIONS.length){for(i=0;
i<rowData.EXCEPTIONS.length;
i++){var tempExcepResult=(rowData.EXCEPTIONS[i].RESULT_STATUS_CODE.MEANING).toUpperCase();
if(tempExcepResult!=="INERROR"){this.sortedRowData.push(rowData.EXCEPTIONS[i]);
}}}}}sortedRowDataLen=this.sortedRowData.length;
var i=0;
if(sortedRowDataLen){for(i=sortedRowDataLen-1;
i>=0;
i--){currentActionItem=this.sortedRowData[i];
date=new Date();
resultViewerEventIds.push(currentActionItem.EVENT_ID);
if(currentActionItem.ADMIN_DT_TM||currentActionItem.EXCEPTION_DT_TM){date.setISO8601(currentActionItem.ADMIN_DT_TM||currentActionItem.EXCEPTION_DT_TM);
actionDate=this.getImmunizationsUtil().returnDisplayForPrecisionFlag(currentActionItem.ADMIN_DT_PRECISION_FLAG,date);
}if(actionDate){if(currentActionItem.ADMIN_DT_TM){forecastActionDateHtml="<div class='immun-o2-expand-content'><span class='immun-o2-toggle'>&nbsp;</span><span>"+actionDate+" ("+this.getImmunizationsUtil().calculateAge(date)+")</span>";
}else{forecastActionDateHtml="<div class='immun-o2-sp-refused-action-label'>"+actionDate+" ("+this.getImmunizationsUtil().calculateAge(date)+")";
}}else{if(currentActionItem.ADMIN_DT_TM){forecastActionDateHtml="<div class='immun-o2-expand-content'><span class='immun-o2-toggle'>&nbsp;</span><span>-- (--)</span>";
}else{forecastActionDateHtml="<div class='immun-o2-sp-refused-action-label'>-- (--)";
}}if(currentActionItem.VACCINATION_FORECAST_STATUS>1){forecastActionDateHtml+="<span class='secondary-text immun-o2-sp-not-count'>"+this.m_immuni18n.NOT_COUNT+"</span><span class='immun-o2-forecast-doses-icon'></span></div>";
}else{forecastActionDateHtml+="</div>";
}if(currentActionItem.EXCEPTION_DT_TM){switch(currentActionItem.REASON_FLAG){case 1:actionItemStatus=this.m_immuni18n.CONTRAINDICATED;
break;
case 2:actionItemStatus=this.m_immuni18n.REFUSED;
break;
default:break;
}actionItemStatus+=currentActionItem.REASON_CODE.DISPLAY?" - "+currentActionItem.REASON_CODE.DISPLAY:"";
}else{if(currentActionItem.PRODUCT.PRODUCT_NAME&&(currentActionItem.RESULT_STATUS_CODE.MEANING).toUpperCase()==="AUTH"){actionItemStatus=currentActionItem.PRODUCT.PRODUCT_NAME;
}else{actionItemStatus=currentActionItem.RESULT_STATUS_CODE.DISPLAY;
}}forecastActionProductHtml="<span class='immun-o2-product secondary-text'>"+actionItemStatus+"</span>";
forecastActionCommentsHtml=currentActionItem.COMMENTS.length?this.prepareCommentInfo(currentActionItem.COMMENTS):"";
if(currentActionItem.ADMIN_DT_TM){forecastActionExtraDetailsHtml=this.prepareExtraActionDetails(currentActionItem);
}if(i!==0){forecastActionItemHtml+="<div id = forecastActionItem"+this.compID+":item"+i+" class='immun-o2-rp-history-content closed' data-event-id="+currentActionItem.EVENT_ID+">"+forecastActionDateHtml+forecastActionProductHtml+forecastActionCommentsHtml+forecastActionExtraDetailsHtml+"<div class='sp-separator'></div></div>";
}else{forecastActionItemHtml+="<div id = forecastActionItem"+this.compID+":item"+i+" class='immun-o2-rp-history-content closed' data-event-id="+currentActionItem.EVENT_ID+">"+forecastActionDateHtml+forecastActionProductHtml+forecastActionCommentsHtml+forecastActionExtraDetailsHtml+"</div>";
}}forecastSPHtml="<div id="+this.compID+"forecastSP class='immun-o2-rp-history'>"+forecastActionItemHtml+"</div>";
rowData.DOSE_EVENT_IDS=resultViewerEventIds;
}else{forecastSPHtml="<div id="+this.compID+"forecastSP class='immun-o2-empty-sp-align'><span id=spGlyphPlaceholder"+this.compID+" class='immun-o2-empty-sp-glyph'></span><span id=spGlyphText"+this.compID+" class='immun-o2-empty-sp-glyph-text'>"+this.m_immuni18n.NO_VACCINE_DISP+"</span></div>";
}}return forecastSPHtml;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","loadForecastSidePanel");
}};
ImmunizationsO2Component.prototype.prepareCommentInfo=function(commentObj){var commentTextHtml="";
var commentsInfoHtml="";
var commentsLen=commentObj.length;
var i=0;
for(i=0;
i<commentsLen;
i++){var noteObj=commentObj[i];
var text=noteObj.TEXT;
commentTextHtml+="<span class='immun-o2-rp-comments-text'>"+text.replace("\n","<br/>")+"</span><span class='immun-o2-provider author-timestamp-text secondary-text'>"+this.trackDownAuthor(noteObj.AUTHOR_ID)+"</span>";
}commentsInfoHtml="<div id='rpComments"+this.compID+"'>"+commentTextHtml+"</div>";
return commentsInfoHtml;
};
ImmunizationsO2Component.prototype.trackDownAuthor=function(authorId){var authorName="";
var personnelInfoLen=this.m_personnelInfo.length;
var i=0;
if(authorId){for(i=0;
i<personnelInfoLen;
i++){if(this.m_personnelInfo[i].PERSONNEL_ID===authorId){authorName=this.m_personnelInfo[i].FULL_FORMATTED_NAME;
}}}return authorName;
};
ImmunizationsO2Component.prototype.prepareExtraActionDetails=function(actionInfo){var extraDetailsHtml="";
var actionItemGroupHtml="<div class = 'immun-o2-sp-group'>";
var VISHtml="";
var VISInfoHtml="";
var VISPublishDateHtml="";
var VISGivenDateHtml="";
var doseQuantityHtml="";
var doseUnitHtml="";
var siteHtml="";
var routeHtml="";
var manufacturerHtml="";
var lotNumHtml="";
var sourceHtml="";
var personnelHtml="";
var expirationDateHtml="";
var expiryDateStr="";
var VISListLen=0;
var VISGivenDate="";
var date=null;
var i=0;
try{if(actionInfo){VISListLen=actionInfo.INFORMATION_STATEMENTS_GIVEN.length;
if(VISListLen===0){VISInfoHtml="<div class='immun-o2-sp-content'><span id='spVisLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS+": </span><span id='spVisValue"+this.compID+"'class='immun-o2-sp-value'>--</span></div>";
VISPublishDateHtml="<div class='immun-o2-sp-content'><span id='spVisPublishedLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS_PUBLISHED_DATE+": </span><span id='spVisPublishedValue"+this.compID+"' class='immun-o2-sp-value'>--</span></div>";
VISHtml=VISInfoHtml+VISPublishDateHtml;
}else{for(i=0;
i<VISListLen;
i++){VISInfoHtml="<div class='immun-o2-sp-content'><span id='spVisLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS+": </span><span id='spVisValue"+this.compID+"'class='immun-o2-sp-value'>"+actionInfo.INFORMATION_STATEMENTS_GIVEN[i].NAME+"</span></div>";
VISPublishDateHtml="<div class='immun-o2-sp-content'><span id='spVisPublishedLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS_PUBLISHED_DATE+": </span><span id='spVisPublishedValue"+this.compID+"' class='immun-o2-sp-value'>"+this.getImmunizationsUtil().convertAbsoluteDate(actionInfo.INFORMATION_STATEMENTS_GIVEN[i].PUBLISHED_DATE,"shortDate3")+"</span></div>";
VISHtml+=VISInfoHtml+VISPublishDateHtml;
}}if(VISListLen&&actionInfo.INFORMATION_STATEMENTS_GIVEN[0].GIVEN_ON_DT_TM){date=new Date();
date.setISO8601(actionInfo.INFORMATION_STATEMENTS_GIVEN[0].GIVEN_ON_DT_TM);
if(date.getTime()>0){VISGivenDate=date.format("shortDate3");
}}var decodedLotStr="--";
if(actionInfo.LOT_NUMBER.length){var entityStrInstance=new MPageEntity.EncodedString();
decodedLotStr=entityStrInstance.toJs(actionInfo.LOT_NUMBER);
}var doseValue="--";
if(actionInfo.ADMIN_DOSAGE){var numberFormatter=MP_Util.GetNumericFormatter();
if(mp_formatter._isNumber(actionInfo.ADMIN_DOSAGE)){doseValue=numberFormatter.format(actionInfo.ADMIN_DOSAGE,"^."+MP_Util.CalculatePrecision(actionInfo.ADMIN_DOSAGE));
}}VISGivenDateHtml="<div class='immun-o2-sp-content'><span id='spVisGivenLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.VIS_GIVEN_DATE+": </span><span id='spVisGivenValue"+this.compID+"' class='immun-o2-sp-value'>"+(VISGivenDate||"--")+"</span></div>";
doseQuantityHtml="<div class='immun-o2-sp-content'><span id='spDoseLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.DOSE_QUANTITY+": </span><span id='spDoseValue"+this.compID+"'class='immun-o2-sp-value'>"+doseValue+"</span></div>";
doseUnitHtml="<div class='immun-o2-sp-content'><span id='spUnitLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.DOSE_UNIT+": </span><span id='spUnitValue"+this.compID+"' class='immun-o2-sp-value'>"+((actionInfo.ADMIN_DOSAGE_UNIT_CODE.DISPLAY===""||actionInfo.ADMIN_DOSAGE_UNIT_CODE.DISPLAY==="unknown unit")?"--":actionInfo.ADMIN_DOSAGE_UNIT_CODE.DISPLAY)+"</span></div>";
siteHtml="<div class='immun-o2-sp-content'><span id='spSiteLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.SITE+": </span><span id='spSiteValue"+this.compID+"' class='immun-o2-sp-value'>"+(actionInfo.ADMIN_SITE_CODE.DISPLAY||"--")+"</span></div>";
routeHtml="<div class='immun-o2-sp-content'><span id='spRouteLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.ROUTE+": </span><span id='spRouteValue"+this.compID+"' class='immun-o2-sp-value'>"+(actionInfo.ADMIN_ROUTE_CODE.DISPLAY||"--")+"</span></div>";
manufacturerHtml="<div class='immun-o2-sp-content'><span id='spManufacturerLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.MANUFACTURER+": </span><span id='spManufacturerValue"+this.compID+"'class='immun-o2-sp-value'>"+(actionInfo.MANUFACTURER_CODE.DISPLAY||"--")+"</span></div>";
lotNumHtml="<div class='immun-o2-sp-content'><span id='spLotNumberLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.LOT_NUMBER+": </span><span id='spLotNumberValue"+this.compID+"' class='immun-o2-sp-value'>"+decodedLotStr+"</span></div>";
var personnelName=this.trackDownAuthor(actionInfo.ADMIN_PERSONNEL_ID);
if(actionInfo.SOURCE_CODE.DISPLAY){sourceHtml=actionItemGroupHtml+"<div class='immun-o2-sp-content'><span id='spSourceLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.SOURCE+": </span><span id='spSourceValue"+this.compID+"' class='immun-o2-sp-value'>"+actionInfo.SOURCE_CODE.DISPLAY+"</span></div>";
personnelHtml="<div class='immun-o2-sp-content'><span id='spPersonnelLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.DOC_BY+": </span><span id='spPersonnelValue"+this.compID+"' class='immun-o2-sp-value'>"+personnelName+"</span></div></div>";
}else{personnelHtml=actionItemGroupHtml+"<div class='immun-o2-sp-content'><span id='spPersonnelLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.ADMIN_BY+": </span><span id='spPersonnelValue"+this.compID+"' class='immun-o2-sp-value'>"+personnelName+"</span></div></div>";
}sourceHtml=sourceHtml+personnelHtml;
if(actionInfo.EXPIRATION_DATE){switch(actionInfo.EXPIRATION_DT_PRECISION_FLAG){case 4:expiryDateStr=this.getImmunizationsUtil().convertAbsoluteDate(actionInfo.EXPIRATION_DATE,"shortDate4");
break;
case 5:expiryDateStr=this.getImmunizationsUtil().convertAbsoluteDate(actionInfo.EXPIRATION_DATE,"shortDate5");
break;
default:expiryDateStr=this.getImmunizationsUtil().convertAbsoluteDate(actionInfo.EXPIRATION_DATE,"shortDate3");
break;
}}expirationDateHtml="<div class='immun-o2-sp-content'><span id='spExpDateLabel"+this.compID+"' class='immun-o2-sp-label secondary-text'>"+this.m_immuni18n.EXP_DATE+": </span><span id='spExpDateValue"+this.compID+"' class='immun-o2-sp-value'>"+(expiryDateStr||"--")+"</span></div></div>";
}extraDetailsHtml="<div class = 'immun-o2-sp-container'>"+sourceHtml+actionItemGroupHtml+VISHtml+VISGivenDateHtml+"</div>"+actionItemGroupHtml+doseQuantityHtml+doseUnitHtml+siteHtml+routeHtml+"</div>"+actionItemGroupHtml+manufacturerHtml+lotNumHtml+expirationDateHtml+"</div>";
return extraDetailsHtml;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","prepareExtraActionDetails");
}};
ImmunizationsO2Component.prototype.showImmunizationOrderModal=function(){var curOrdSel=null;
var criterion=this.getCriterion();
var docModalDialog=MP_ModalDialog.retrieveModalDialogObject(this.compNS+"-Dialog");
var orderFolderIdList=this.getImmunOrderBRInd();
var orderFolderId=0;
var orderVaccineStatusHtml="";
var overdueVaccineListLen=0;
var inRangeVaccineListLen=0;
var i=0;
if(orderFolderIdList&&orderFolderIdList.length){orderFolderId=orderFolderIdList[0];
}overdueVaccineListLen=this.overdueVaccineList?this.overdueVaccineList.length:0;
inRangeVaccineListLen=this.inRangeVaccineList?this.inRangeVaccineList.length:0;
if(overdueVaccineListLen){var overdueListStr="";
for(i=0;
i<overdueVaccineListLen-1;
i++){overdueListStr+=this.overdueVaccineList[i]+"; ";
}overdueListStr+=this.overdueVaccineList[overdueVaccineListLen-1];
orderVaccineStatusHtml+="<div class='immun-o2-order-modal-status' id='immOrderModalOverdue"+this.compID+"'>"+this.m_immuni18n.OVERDUE+": <div id='immOrderModalOverdueVal"+this.compID+"' class='secondary-text'>"+overdueListStr+"</div></div><div class='immun-o2-order-modal-separator'></div>";
}if(inRangeVaccineListLen){var inRangeListStr="";
for(i=0;
i<inRangeVaccineListLen-1;
i++){inRangeListStr+=this.inRangeVaccineList[i]+"; ";
}inRangeListStr+=this.inRangeVaccineList[inRangeVaccineListLen-1];
orderVaccineStatusHtml+="<div class='immun-o2-order-modal-status' id='immOrderModalInRange"+this.compID+"'>"+this.m_immuni18n.IN_RANGE+": <div id='immOrderModalInRangeVal"+this.compID+"' class='secondary-text'>"+inRangeListStr+"</div></div><div class='immun-o2-order-modal-separator'></div>";
}docModalDialog=new ModalDialog(this.compNS+"-Dialog");
docModalDialog.setIsFooterAlwaysShown(true);
this.curModalDialog=docModalDialog;
docModalDialog.setTopMarginPercentage(10).setBottomMarginPercentage(10).setLeftMarginPercentage(30).setRightMarginPercentage(30).setIsBodySizeFixed(false);
docModalDialog.setBodyDataFunction(function(docViewDlg){docModalDialog.setBodyHTML(orderVaccineStatusHtml+curOrdSel.render());
curOrdSel.finalize();
});
if(!curOrdSel){curOrdSel=new orderSelectionControl(this.compID,criterion);
curOrdSel.setFolderId(orderFolderId);
curOrdSel.setNameSpace(this.compNS+this.compID);
curOrdSel.setOrderTitle(this.m_immuni18n.ORDER_IMMUN_MODAL);
curOrdSel.setCloseFunction(function(){MP_ModalDialog.closeModalDialog(docModalDialog.getId());
});
curOrdSel.init();
}MP_ModalDialog.addModalDialogObject(docModalDialog);
MP_ModalDialog.updateModalDialogObject(docModalDialog);
$("#"+this.compNS+"Dialogbody").addClass("immun-o2-order-modal-dialog-body");
$("#vwpModalDialog"+this.compNS+"Dialog").addClass("immun-o2-order-modal-dialog-container");
docModalDialog.setFooterText(curOrdSel.getActionButtonsHTML());
docModalDialog.setHeaderTitle(this.m_immuni18n.IMMUN_ORDERS);
MP_ModalDialog.showModalDialog(docModalDialog.getId());
};
ImmunizationsO2Component.prototype.getNoPrivsBannerMarkup=function(){var warningBanner=new MPageUI.AlertBanner();
warningBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.WARNING);
warningBanner.setPrimaryText(i18n.discernabu.immunization_o2.INSUFF_PRIV_WARNING_BANNER);
return warningBanner.render();
};
ImmunizationsO2Component.prototype.onTitleClick=function(){var self=this;
if((self.m_isForecastCompat&&this.getLink()===this.m_immuni18n.IMMUNIZATION_FORECASTER)||!CERN_Platform.inMillenniumContext()){var mean="DYN_IMMUN_SCHED_MEAN"+self.compID;
var viewExists=MP_Viewpoint.getTabControlObject().tabExists(mean);
if(viewExists){$("#"+mean+"tab").click();
}else{var immunSchedView=new ImmunizationScheduleView(self.getCriterion());
immunSchedView.setId(self.compID);
immunSchedView.setCategoryMean(mean);
immunSchedView.setRecordData(self.immunRecordData);
var viewContainer=new ViewContainer(mean);
viewContainer.setViewType("DYN_IMMUN_SCHED");
viewContainer.setViewName(self.m_immuni18n.IMMUNIZATION_FORECASTER);
viewContainer.setCategoryMean(mean);
viewContainer.setViewObject(immunSchedView);
viewContainer.setResizeOnActivation(true);
MP_Viewpoint.addDynamicTab(viewContainer,true);
}}else{MPageComponent.prototype.onTitleClick.call(this);
}};
