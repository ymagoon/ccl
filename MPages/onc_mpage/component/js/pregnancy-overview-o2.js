function PregnancyOverviewComponentWFStyle(){this.initByNamespace("po-wf");
}PregnancyOverviewComponentWFStyle.inherits(ComponentStyle);
function PregnancyOverviewComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new PregnancyOverviewComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.PREGNANCYOVERVIEW.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.PREGNANCYOVERVIEW.O2 - render component");
this.OverviewComponentIndex={CURRENT_PREGNANCY:0,CONTACT:1,DEMOGRAHICS:2};
this.currentPage=this.OverviewComponentIndex.CURRENT_PREGNANCY;
this.curPregnancyTableLength=3;
this.tabNames=[];
this.setResourceRequired(true);
this.m_gravida=null;
this.m_para=null;
this.m_paraAbort=null;
this.m_paraParaPremature=null;
this.m_paraFullTerm=null;
this.m_living=null;
this.m_multiBirths=null;
this.m_ectopic=null;
this.m_spontAbort=null;
this.m_inducedAbort=null;
this.m_prePregWeight=null;
this.m_height=null;
this.m_bmi=null;
this.m_aborhType=null;
this.m_bloodType=null;
this.m_rhType=null;
this.m_curWeight=null;
this.m_feeding=null;
this.m_labResults=null;
this.m_additionalResults=null;
this.m_showDemographicsTab=null;
this.m_fetalDeath=null;
this.m_fatherOfBaby=null;
this.m_romData=null;
this.m_romColorFlip=false;
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.retrieveComponentData,this);
}PregnancyOverviewComponentWF.prototype=new MPageComponent();
PregnancyOverviewComponentWF.prototype.constructor=MPageComponent;
PregnancyOverviewComponentWF.prototype.RetrieveRequiredResources=function(){var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){this.retrieveComponentData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}};
PregnancyOverviewComponentWF.prototype.setGravida=function(value){this.m_gravida=value;
};
PregnancyOverviewComponentWF.prototype.getGravida=function(){return this.m_gravida||[];
};
PregnancyOverviewComponentWF.prototype.setPara=function(value){this.m_para=value;
};
PregnancyOverviewComponentWF.prototype.getPara=function(){return this.m_para||[];
};
PregnancyOverviewComponentWF.prototype.setParaAbort=function(value){this.m_paraAbort=value;
};
PregnancyOverviewComponentWF.prototype.getParaAbort=function(){return this.m_paraAbort||[];
};
PregnancyOverviewComponentWF.prototype.setParaPremature=function(value){this.m_paraParaPremature=value;
};
PregnancyOverviewComponentWF.prototype.getParaPremature=function(){return this.m_paraParaPremature||[];
};
PregnancyOverviewComponentWF.prototype.setParaFullTerm=function(value){this.m_paraFullTerm=value;
};
PregnancyOverviewComponentWF.prototype.getParaFullTerm=function(){return this.m_paraFullTerm||[];
};
PregnancyOverviewComponentWF.prototype.setLiving=function(value){this.m_living=value;
};
PregnancyOverviewComponentWF.prototype.getLiving=function(){return this.m_living||[];
};
PregnancyOverviewComponentWF.prototype.setMulitBirths=function(value){this.m_multiBirths=value;
};
PregnancyOverviewComponentWF.prototype.getMultiBirths=function(){return this.m_multiBirths||[];
};
PregnancyOverviewComponentWF.prototype.setEctopic=function(value){this.m_ectopic=value;
};
PregnancyOverviewComponentWF.prototype.getEctopic=function(){return this.m_ectopic||[];
};
PregnancyOverviewComponentWF.prototype.setSpontAbort=function(value){this.m_spontAbort=value;
};
PregnancyOverviewComponentWF.prototype.getSpontAbort=function(){return this.m_spontAbort||[];
};
PregnancyOverviewComponentWF.prototype.setInducedAbort=function(value){this.m_inducedAbort=value;
};
PregnancyOverviewComponentWF.prototype.getInducedAbort=function(){return this.m_inducedAbort||[];
};
PregnancyOverviewComponentWF.prototype.setPrePregWeight=function(value){this.m_prePregWeight=value;
};
PregnancyOverviewComponentWF.prototype.getPrePregWeight=function(){return this.m_prePregWeight||[];
};
PregnancyOverviewComponentWF.prototype.setHeight=function(value){this.m_height=value;
};
PregnancyOverviewComponentWF.prototype.getHeight=function(){return this.m_height||[];
};
PregnancyOverviewComponentWF.prototype.setBMI=function(value){this.m_bmi=value;
};
PregnancyOverviewComponentWF.prototype.getBMI=function(){return this.m_bmi||[];
};
PregnancyOverviewComponentWF.prototype.setABORhType=function(value){this.m_aborhType=value;
};
PregnancyOverviewComponentWF.prototype.getABORhType=function(){return this.m_aborhType||[];
};
PregnancyOverviewComponentWF.prototype.setBloodType=function(value){this.m_bloodType=value;
};
PregnancyOverviewComponentWF.prototype.getBloodType=function(){return this.m_bloodType||[];
};
PregnancyOverviewComponentWF.prototype.setRhType=function(value){this.m_rhType=value;
};
PregnancyOverviewComponentWF.prototype.getRhType=function(){return this.m_rhType||[];
};
PregnancyOverviewComponentWF.prototype.setCurrentWeight=function(value){this.m_curWeight=value;
};
PregnancyOverviewComponentWF.prototype.getCurrentWeight=function(){return this.m_curWeight||[];
};
PregnancyOverviewComponentWF.prototype.setFeeding=function(value){this.m_feeding=value;
};
PregnancyOverviewComponentWF.prototype.getFeeding=function(){return this.m_feeding||[];
};
PregnancyOverviewComponentWF.prototype.setLabResults=function(value){this.m_labResults=value;
};
PregnancyOverviewComponentWF.prototype.getLabResults=function(){return this.m_labResults||[];
};
PregnancyOverviewComponentWF.prototype.setAdditionalResults=function(value){this.m_additionalResults=value;
};
PregnancyOverviewComponentWF.prototype.getAdditionalResults=function(){return this.m_additionalResults||[];
};
PregnancyOverviewComponentWF.prototype.getDemographicsTab=function(){return this.m_showDemographicsTab;
};
PregnancyOverviewComponentWF.prototype.setDemographicsTab=function(value){this.m_showDemographicsTab=value;
};
PregnancyOverviewComponentWF.prototype.getROMDateTime=function(){return this.m_romData||[];
};
PregnancyOverviewComponentWF.prototype.setROMDateTime=function(value){this.m_romData=value;
};
PregnancyOverviewComponentWF.prototype.getROMAbnormalAlert=function(){return this.m_romColorFlip;
};
PregnancyOverviewComponentWF.prototype.setROMAbnormalAlert=function(value){this.m_romColorFlip=value;
};
PregnancyOverviewComponentWF.prototype.getFetalDeath=function(){return this.m_fetalDeath;
};
PregnancyOverviewComponentWF.prototype.setFetalDeath=function(value){this.m_fetalDeath=value;
};
PregnancyOverviewComponentWF.prototype.setFatherOfBaby=function(value){this.m_fatherOfBaby=value;
};
PregnancyOverviewComponentWF.prototype.getFatherOfBaby=function(){return this.m_fatherOfBaby||[];
};
PregnancyOverviewComponentWF.prototype.loadFilterMappings=function(){this.addFilterMappingObject("WF_PREG_DEMO_TAB_IND",{setFunction:this.setDemographicsTab,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_PREG_GRAVIDA",{setFunction:this.setGravida,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_PARA",{setFunction:this.setPara,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_PARA_ABORT",{setFunction:this.setParaAbort,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_PARA_PREM",{setFunction:this.setParaPremature,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_PARA_FT",{setFunction:this.setParaFullTerm,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_LIVE_CHILD_HX",{setFunction:this.setLiving,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_MULTI_BIRTH_HX",{setFunction:this.setMulitBirths,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_ECTOPIC_HX",{setFunction:this.setEctopic,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_SPON_ABORT_HX",{setFunction:this.setSpontAbort,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_IND_ABORT_HX",{setFunction:this.setInducedAbort,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_PRE_WT",{setFunction:this.setPrePregWeight,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_HT",{setFunction:this.setHeight,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_LAST_DOC_HT_WT",{setFunction:this.setBMI,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_ABORH_TYPE",{setFunction:this.setABORhType,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_BLD_TYPE",{setFunction:this.setBloodType,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_RH_TYPE",{setFunction:this.setRhType,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_CURR_WT",{setFunction:this.setCurrentWeight,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_FEED_TYPE_NB",{setFunction:this.setFeeding,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_ROM_DT_TM",{setFunction:this.setROMDateTime,type:"ARRAY",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_ROM_ABNORMAL_ALERT",{setFunction:this.setROMAbnormalAlert,type:"BOOLEAN",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_PREG_LAB_RESULTS",{setFunction:this.setLabResults,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_ADDTNAL_INFO_DOC",{setFunction:this.setAdditionalResults,type:"Array",field:"PARENT_ENTITY_ID"});
this.addFilterMappingObject("WF_PREG_OVERVIEW_FETAL_DEATH",{setFunction:this.setFetalDeath,type:"NUMBER",field:"FREETEXT_DESC"});
this.addFilterMappingObject("WF_PREG_FOB",{setFunction:this.setFatherOfBaby,type:"Array",field:"PARENT_ENTITY_ID"});
};
PregnancyOverviewComponentWF.prototype.resizeComponent=function(){var compId=this.getComponentId();
var tableID="";
var tableHeight=0;
var maxTableHeight=0;
var tabId="";
var tableIdInitialText="";
var tableLength=3;
switch(this.currentPage){case 0:tabId="#currentPregnancyTab"+compId;
tableIdInitialText="#currentPregnancyColumn";
tableLength=this.curPregnancyTableLength;
break;
case 1:tabId="#contactInfoTab"+compId;
tableIdInitialText="#contactInfoColumn";
break;
case 2:tabId="#demographicsInfoTab"+compId;
tableIdInitialText="#demographicsInfoColumn";
break;
}$(tabId+" .po-wf-list-container").css("height","");
$(tabId+" .po-wf-list-terms-space").css("height","0px");
var maxTableHeightIndex=0;
var tableIndex=0;
var newRowHeight=0;
for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){tableID=tableIdInitialText+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
if(tableHeight!==null){if(maxTableHeight<tableHeight){maxTableHeight=tableHeight;
maxTableHeightIndex=tableIndex;
}}}for(tableIndex=1;
tableIndex<=tableLength;
tableIndex++){if(tableIndex!=maxTableHeightIndex){tableID=tableIdInitialText+tableIndex+"_"+compId;
tableHeight=$(tableID).height();
newRowHeight=maxTableHeight-tableHeight;
$(tableID+" .po-wf-list-terms-space").css("height",newRowHeight+"px");
}}var calcHeight="";
var compHeight=0;
var compDOMObj=null;
var compType=null;
var container=null;
var contentBodyHeight=0;
var contentBodyObj=null;
var miscHeight=20;
var viewHeight=0;
container=$("#vwpBody");
if(!container.length){return;
}compDOMObj=$("#"+this.getStyles().getId());
if(!compDOMObj.length){return;
}contentBodyObj=$(compDOMObj).find(".po-wf-tabular-info");
if(contentBodyObj.length){$(contentBodyObj).css("max-height","").css("overflow","auto");
}if(document.documentMode<=8){MPageComponent.prototype.resizeComponent.call(this,null);
return;
}else{viewHeight=$(container).height();
if(contentBodyObj.length){compHeight=compDOMObj.height();
contentBodyHeight=$(contentBodyObj).height();
calcHeight=(viewHeight-(compHeight-contentBodyHeight+miscHeight))+"px";
$(contentBodyObj).css("max-height",calcHeight).css("overflow","auto");
}}};
MP_Util.setObjectDefinitionMapping("WF_PREG_OVERVIEW",PregnancyOverviewComponentWF);
PregnancyOverviewComponentWF.prototype.retrieveComponentData=function(){var component=this;
var sendAr=[];
var compId=this.getComponentId();
var criterion=this.getCriterion();
var events=[];
var lookback=0;
var messageHTML="";
var countText="";
var pregnancyOverviewi18n=i18n.discernabu.pregnancyoverview_o2;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=null;
var pregnancyId=0;
var patientGenderInfo=criterion.getPatientInfo().getSex();
var gestAgeInDays=0;
var gestAgeDays=null;
if(patientGenderInfo===null||patientGenderInfo.meaning===null||patientGenderInfo.meaning!=="FEMALE"){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pregnancyOverviewi18n.NOT_FEMALE+"</span></h3><span class='res-none'>"+pregnancyOverviewi18n.NOT_FEMALE+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
gestAgeInDays=pregInfoObj.getCalculatedEga();
gestAgeDays='"'+gestAgeInDays+'"';
if(pregnancyId===-1){messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}if(!pregnancyId){var reopenInd=pregInfoObj.getReopenPregInd();
var noPregMenuItems=[];
noPregMenuItems.push("<table class='po-wf-no-preg-menu-items'><tbody>");
noPregMenuItems.push("<tr><td><div class='po-wf-preg-menu-item'><a id='addPregnancy"+compId+"' class='value-with-link'>"+pregnancyOverviewi18n.ADD_PREGNANCY+"</a></div></td>");
if(reopenInd){noPregMenuItems.push("<td><div class='po-wf-preg-menu-item'><a id='reOpenPregnancy"+compId+"' class='value-with-link'>"+pregnancyOverviewi18n.REOPEN_PREGNANCY+"</a></div></td></tr>");
}else{noPregMenuItems.push("<td><div class='po-wf-preg-menu-item-dthr'>"+pregnancyOverviewi18n.REOPEN_PREGNANCY+"</div></td></tr>");
}noPregMenuItems.push("</tbody></table><br />");
messageHTML=noPregMenuItems.join("");
messageHTML+="<h3 class='info-hd'><span class='res-normal'>"+pregnancyOverviewi18n.NO_ACTIVE_PREG+"</span></h3><span class='res-none'>"+pregnancyOverviewi18n.NO_ACTIVE_PREG+"</span>";
this.finalizeComponent(messageHTML,countText);
var sectionContentNode=this.getSectionContentNode();
$(sectionContentNode).find(".value-with-link").click(function(){try{if(this.id=="addPregnancy"+compId){PREGNANCY_BASE_UTIL_O1.addOrReopenPregnancy(0);
}else{if(this.id=="reOpenPregnancy"+compId){PREGNANCY_BASE_UTIL_O1.addOrReopenPregnancy(1);
}}}catch(err){MP_Util.LogJSError(err,this,"pregnancy-overview-o2.js","retrieveComponentData");
}});
return;
}var viewableEncounters=criterion.getPersonnelInfo().getViewableEncounters();
var encountersList=(viewableEncounters)?"value("+viewableEncounters+")":"0";
var sortDynamicLabels=1;
lookback=pregInfoObj.getLookBack();
sendAr.push("^MINE^",criterion.person_id+".0",encountersList,pregnancyId,criterion.provider_id+".0",criterion.position_cd+".0",criterion.ppr_cd+".0",lookback);
events=[this.getGravida(),this.getPara(),this.getParaAbort(),this.getParaPremature(),this.getParaFullTerm(),this.getLiving(),this.getMultiBirths(),this.getEctopic(),this.getSpontAbort(),this.getInducedAbort(),this.getPrePregWeight(),this.getHeight(),this.getBMI(),this.getRhType(),this.getABORhType(),this.getBloodType(),this.getCurrentWeight(),this.getFeeding(),this.getLabResults(),this.getAdditionalResults(),this.getROMDateTime(),this.getFatherOfBaby()];
for(var i=0,eventsLength=events.length;
i<eventsLength;
i++){sendAr.push(MP_Util.CreateParamArray(events[i],1));
}if(this.getFetalDeath()){sendAr.push(gestAgeDays,this.getFetalDeath());
}else{sendAr.push("^^","0.0");
}sendAr.push(sortDynamicLabels);
MP_Core.XMLCclRequestWrapper(this,"mp_get_preg_overview",sendAr,true);
return;
}messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span>";
this.finalizeComponent(messageHTML,countText);
};
PregnancyOverviewComponentWF.prototype.renderComponent=function(recordData){var component=this;
var dateFormatter=MP_Util.GetDateFormatter();
var numericFormatter=MP_Util.GetNumericFormatter();
var pregnancyOverviewi18n=i18n.discernabu.pregnancyoverview_o2;
var compId=this.getComponentId();
var contentId=this.getStyles().getContentId();
var rootId=this.getStyles().getId();
var criterion=this.getCriterion();
var tableStartTag="<div class='po-wf-list-group'><table id='{0}' class='po-wf-list-container'>";
var tableEndTag="</table></div>";
var spaceColumnHTML="<div class='po-wf-table-space'><table class='po-wf-list-container'><tr><td>&nbsp;</td></tr></table></div>";
var tableSpaceFillerHTML="<tr><td class='po-wf-list-terms-space'></td><td></td></tr>";
var currentPregnancyClass=" .po-wf-list-group";
var patientPhoneDisplay="";
var ecPhoneDisplay="";
var pcpPhoneDisplay="";
var rowCount=0;
var i=0;
var j=0;
var k=0;
var tabbedMenuHTML="";
var componentHTML="";
var maxBabyROM=3;
var slaTimer=MP_Util.CreateTimer("CAP:MPG.PREGNANCYOVERVIEW.O2 - Rendering component");
if(slaTimer){slaTimer.SubtimerName=criterion.category_mean;
slaTimer.Stop();
}this.tabNames[this.OverviewComponentIndex.CURRENT_PREGNANCY]=pregnancyOverviewi18n.CURRENT_PREG;
this.tabNames[this.OverviewComponentIndex.CONTACT]=pregnancyOverviewi18n.CONTACT_INFO;
this.tabNames[this.OverviewComponentIndex.DEMOGRAHICS]=pregnancyOverviewi18n.DEMOGRAPHICS;
this.currentPage=this.OverviewComponentIndex.CURRENT_PREGNANCY;
jQuery("#"+contentId).html(" ");
try{var tabMenuArray=['<div class="po-wf-tab-container" id="tabContainer',compId,'"><div class="po-wf-tabs"><ul>'];
var numTabs=this.tabNames.length;
if(!this.getDemographicsTab()){numTabs-=1;
}for(i=0;
i<numTabs;
i++){tabMenuArray.push('<li id="tabHeader',i,"_",rootId,'"><span class="po-wf-tab-left-edge">&nbsp;</span><span class="po-wf-tab-text">',this.tabNames[i],'</span><span class="po-wf-tab-right-edge">&nbsp;</span></li>');
}tabMenuArray.push("</ul></div><hr /></div>");
tabbedMenuHTML=tabMenuArray.join("");
}catch(err){MP_Util.LogJSError(err,this,"pregnancy-overview-o2.js","renderComponent");
throw (err);
}var pregInfoObj=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
}else{var messageHTML="<h3 class='info-hd'><span class='res-normal'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span></h3><span class='res-none'>"+pregnancyOverviewi18n.PREG_DATA_ERROR+"</span>";
MP_Util.Doc.FinalizeComponent(messageHTML,this,"(0)");
return;
}var hasPatientDelivered=pregInfoObj.isPatientDelivered();
var gestAgeInDays=pregInfoObj.getCalculatedEga();
var egaWeeks=Math.floor(gestAgeInDays/7);
var egaDays=(gestAgeInDays%7);
var graphExtend=40;
if(egaWeeks>graphExtend){graphExtend=egaWeeks;
while(graphExtend%4!==0){graphExtend++;
}}var egaDisplay="--";
if(!hasPatientDelivered){egaDisplay=(gestAgeInDays>0)?pregnancyOverviewi18n.EGA_FORMATTED.replace("{0}",egaWeeks).replace("{1}",egaDays):"";
}else{egaDisplay=pregnancyOverviewi18n.DELIVERED;
}var eddDateDisplay="";
var eddDisplayWithStatus=pregnancyOverviewi18n.ADD_EDD;
var eddDetailData=[];
var eddAction="";
var unknownEDDStyle="";
var showDemographicsTab=this.getDemographicsTab();
function formatNumber(num){var resultDisplay;
try{resultDisplay=numericFormatter.format(num);
}catch(err){resultDisplay=num;
}return resultDisplay;
}var curPregnancyCol1="";
var curPregnancyCol2="";
var curPregnancyCol3="";
var curPregnancyCol4="";
function generateCurrentPregnancyRow(n){function generateCells(item){var label=(!item)?"&nbsp;":item.LABEL;
var value=(!item)?"&nbsp;":(item.VALUE===undefined||item.VALUE==="")?"--":item.VALUE;
var style=(!item)?"po-wf-list-descriptions":(item.STYLE===undefined||item.STYLE==="")?"po-wf-list-descriptions":item.STYLE+" po-wf-list-descriptions";
var units=(!item)?"&nbsp;":item.UNITS===undefined?"":item.UNITS;
var hoverHTML="";
if(item&&item.HOVER_DATA&&item.HOVER_DATA.length>0&&item.VALUE!==""){hoverHTML=item.HOVER_FXN(item.HOVER_DATA);
}var dttm=value.indexOf("{date_value}");
if(dttm>-1){value=dateFormatter.formatISO8601(value.substr(dttm+12),mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
}if(item&&item.ACTION){return"<td class='po-wf-list-terms'>"+label+"</td><td id='"+item.ACTION+"' class='value-with-link "+style+"'><a>"+value+"</a>"+hoverHTML+"</td>";
}if(label===pregnancyOverviewi18n.ROM){var additionalLabel=(!item)?"":item.ADDITIONAL_LABEL===undefined?"":item.ADDITIONAL_LABEL;
var additionalStyle=(!item)?"":item.ADDITIONAL_STYLE===undefined?"":item.ADDITIONAL_STYLE;
var additionalMessage=additionalLabel?"<br><span class='"+additionalStyle+"'>&nbsp;</span>"+additionalLabel:"";
return"<td class='po-wf-list-terms'>"+label+additionalMessage+"</td><td class='"+style+"'><span>"+value+"</span>"+hoverHTML+"</td>";
}else{if(label!=="&nbsp;"){return"<td class='po-wf-list-terms'>"+label+"</td><td class='"+style+"'>"+value+units+hoverHTML+"</td>";
}else{return"";
}}}var tableCells=generateCells(column1[n]);
if(tableCells){curPregnancyCol1+="<tr>"+tableCells+"</tr>";
}tableCells=generateCells(column2[n]);
if(tableCells){curPregnancyCol2+="<tr>"+tableCells+"</tr>";
}tableCells=generateCells(column3[n]);
if(tableCells){curPregnancyCol3+="<tr>"+tableCells+"</tr>";
}if(column4.length>0){tableCells=generateCells(column4[n]);
if(tableCells){curPregnancyCol4+="<tr>"+tableCells+"</tr>";
}}}function generateHoverDetails(detailData){var i=0;
if(detailData.length===0){return"";
}var hoverDetailsHTML=[];
for(i=0;
i<detailData.length;
i++){var separator=detailData[i].VALUE===""?"":": ";
hoverDetailsHTML.push("<dt><span>"+detailData[i].LABEL+separator+"</span></dt><dd><span>"+detailData[i].VALUE+"</span></dd>");
}return"<div class='hvr'><dl>"+hoverDetailsHTML.join("")+"</dl></div>";
}var contactCol1="";
var contactCol2="";
var contactCol3="";
function generateContactRow(n){function generateCells(item){var label=(!item)?"&nbsp;":item.LABEL;
var value=(!item)?"&nbsp;":(item.VALUE===undefined||item.VALUE==="")?"--":item.VALUE;
var hoverHTML="";
if(item&&item.HOVER_DATA&&item.VALUE!==""){hoverHTML=item.HOVER_FXN(item.HOVER_DATA);
}return"<td class='po-wf-list-terms'>"+label+"</td><td class='po-wf-list-descriptions'>"+value+hoverHTML+"</td>";
}contactCol1+="<tr>"+generateCells(patientContactCol[n])+"</tr>";
contactCol2+="<tr>"+generateCells(emergContactCol[n])+"</tr>";
contactCol3+="<tr>"+generateCells(pcpContactCol[n])+"</tr>";
}var demographicsCol1="";
var demographicsCol2="";
var demographicsCol3="";
function generateDemographicsRow(n){function generateCells(item){var label=(!item)?"&nbsp;":item.LABEL;
var value=(!item)?"&nbsp;":(item.VALUE===undefined||item.VALUE==="")?"--":item.VALUE;
var hoverHTML="";
if(item&&item.HOVER_DATA&&item.VALUE!==""){hoverHTML=item.HOVER_FXN(item.HOVER_DATA);
}var style=(!item)?"":(item.STYLE===undefined||item.STYLE==="")?"":item.STYLE;
var demographicsRowHTML="<td class='po-wf-list-terms'>"+label+"</td><td class='po-wf-list-descriptions'><span class='"+style+"'>"+value+"</span>"+hoverHTML+"</td>";
return demographicsRowHTML;
}demographicsCol1+="<tr>"+generateCells(patientDemographics1[n])+"</tr>";
demographicsCol2+="<tr>"+generateCells(patientDemographics2[n])+"</tr>";
demographicsCol3+="<tr>"+generateCells(patientDemographics3[n])+"</tr>";
}if(pregInfoObj.getEstDeliveryDate()){eddDateDisplay=dateFormatter.formatISO8601(pregInfoObj.getEstDeliveryDate(),mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR);
var status;
switch(recordData.DEDDSTATUS){case 0:status=pregnancyOverviewi18n.NON_AUTHORITATIVE;
break;
case 1:status=pregnancyOverviewi18n.INITIAL;
break;
case 2:status=pregnancyOverviewi18n.AUTHORITATIVE;
break;
case 3:status=pregnancyOverviewi18n.FINAL;
break;
case 4:status=pregnancyOverviewi18n.INITIAL_FINAL;
break;
default:status=pregnancyOverviewi18n.UNKNOWN;
}eddDisplayWithStatus=eddDateDisplay+" ("+status+")";
var docDateDisplay=(recordData.SESTDATE!=="")?dateFormatter.formatISO8601(recordData.SESTDOCUMENTEDDATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR):"";
eddDetailData.push({LABEL:pregnancyOverviewi18n.EDD,VALUE:eddDateDisplay});
eddDetailData.push({LABEL:pregnancyOverviewi18n.EGA,VALUE:egaDisplay});
eddDetailData.push({LABEL:pregnancyOverviewi18n.STATUS,VALUE:status});
eddDetailData.push({LABEL:pregnancyOverviewi18n.CONFIRMATION,VALUE:recordData.SESTCONFIRMATIONSTATUS});
eddDetailData.push({LABEL:pregnancyOverviewi18n.METHOD,VALUE:recordData.SESTMETHOD});
eddDetailData.push({LABEL:pregnancyOverviewi18n.ENTERED_DATE,VALUE:docDateDisplay});
if(recordData.ULTRASOUND_MEASUREMENTS.length>0){eddDetailData.push({LABEL:pregnancyOverviewi18n.CROWN_RUMP_LENGTH,VALUE:formatNumber(recordData.ULTRASOUND_MEASUREMENTS[0].CROWN_RUMP)});
eddDetailData.push({LABEL:pregnancyOverviewi18n.BIPARIETAL_DIAMETER,VALUE:formatNumber(recordData.ULTRASOUND_MEASUREMENTS[0].BIPARIETAL_DIAMETER)});
eddDetailData.push({LABEL:pregnancyOverviewi18n.HEAD_CIRCUMFERENCE,VALUE:formatNumber(recordData.ULTRASOUND_MEASUREMENTS[0].HEAD_CIRCUMFERENCE)});
}else{var descriptionFlag=recordData.DESTDESCRIPTIONFLAG;
var description=[];
if(descriptionFlag&1){description.push(pregnancyOverviewi18n.NORMAL_AMT);
}if(descriptionFlag&2){description.push(pregnancyOverviewi18n.ABNORMAL_AMT);
}if(descriptionFlag&4){description.push(pregnancyOverviewi18n.DATE_APPROX);
unknownEDDStyle="po-wf-edd-status-pic";
}if(descriptionFlag&8){description.push(pregnancyOverviewi18n.DATE_DEFINITE);
}if(descriptionFlag&16){description.push(pregnancyOverviewi18n.DATE_UNKNOWN);
unknownEDDStyle="po-wf-edd-status-pic";
}if(recordData.SESTDESCRIPTIONOTHER!==""){description.push(recordData.SESTDESCRIPTIONOTHER);
}eddDetailData.push({LABEL:pregnancyOverviewi18n.DESCRIPTION,VALUE:description.join(", ")});
}eddDetailData.push({LABEL:pregnancyOverviewi18n.DOCUMENTED_BY,VALUE:recordData.SESTAUTHOR});
eddDetailData.push({LABEL:pregnancyOverviewi18n.COMMENTS,VALUE:recordData.SESTCOMMENTS});
}else{eddAction="Add"+compId;
}var gravidaDetails=[];
gravidaDetails.push({LABEL:pregnancyOverviewi18n.ECTOPIC,VALUE:recordData.LECTOPIC});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.SPON_ABORT,VALUE:recordData.LSPONTANEOUSABORTIONS});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.INDUCED_ABORT,VALUE:recordData.LINDUCEDABORTIONS});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.MULT_BIRTH_PREG,VALUE:recordData.LMULTIPLEBIRTH});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.GRAVIDA,VALUE:recordData.LGRAVIDA});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.PARA_FULL_TERM,VALUE:recordData.LPARAFULLTERM});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.PARA_PRE_TERM,VALUE:recordData.LPARAPREMATURE});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.ABORTIONS,VALUE:recordData.LPARAABORTIONS});
gravidaDetails.push({LABEL:pregnancyOverviewi18n.LIVING,VALUE:recordData.LLIVING});
var gravidaDisplay=pregnancyOverviewi18n.G+recordData.LGRAVIDA+","+pregnancyOverviewi18n.P+recordData.LPARA+"("+recordData.LPARAFULLTERM+","+recordData.LPARAPREMATURE+","+recordData.LPARAABORTIONS+","+recordData.LLIVING+")";
var column1=[];
var multiFetus="";
switch(recordData.DMULTIPLEPREGNANCY){case 0:multiFetus=pregnancyOverviewi18n.NO+".";
break;
case 1:multiFetus=pregnancyOverviewi18n.NO+", "+pregnancyOverviewi18n.SINGLETON;
break;
case 2:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.TWINS;
break;
case 3:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.TRIPLETS;
break;
case 4:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.QUADRUPLETS;
break;
case 5:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.QUINTUPLETS;
break;
case 6:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.SEXTUPLETS;
break;
case 7:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.SEPTUPLETS;
break;
case 8:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.OCTUPLETS;
break;
case 9:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.NONUPLETS;
break;
case 10:multiFetus=pregnancyOverviewi18n.YES+", "+pregnancyOverviewi18n.DECAPLETS;
break;
default:multiFetus=pregnancyOverviewi18n.YES+".";
}var eddLabel=pregnancyOverviewi18n.EDD;
var eddObj={LABEL:eddLabel,VALUE:eddDisplayWithStatus,HOVER_DATA:eddDetailData,HOVER_FXN:generateHoverDetails,ACTION:eddAction};
if(unknownEDDStyle!==""){eddObj.STYLE=unknownEDDStyle;
}column1.push(eddObj);
column1.push({LABEL:pregnancyOverviewi18n.EGA,VALUE:egaDisplay});
column1.push({LABEL:pregnancyOverviewi18n.GRAVIDA_PARITY,VALUE:gravidaDisplay,HOVER_DATA:gravidaDetails,HOVER_FXN:generateHoverDetails,ACTION:"Histories"+compId,STYLE:"po-wf-gravida"});
var fetalDeathDetails=[];
var multiFetusDeath="";
var fetalDeathLength=recordData.FETALDEATH.length;
switch(recordData.DTOTALFETUSES){case 0:multiFetusDeath=pregnancyOverviewi18n.NO+".";
break;
case 1:multiFetusDeath=pregnancyOverviewi18n.SINGLETON;
break;
case 2:multiFetusDeath=pregnancyOverviewi18n.TWINS;
break;
case 3:multiFetusDeath=pregnancyOverviewi18n.TRIPLETS;
break;
case 4:multiFetusDeath=pregnancyOverviewi18n.QUADRUPLETS;
break;
case 5:multiFetusDeath=pregnancyOverviewi18n.QUINTUPLETS;
break;
case 6:multiFetusDeath=pregnancyOverviewi18n.SEXTUPLETS;
break;
case 7:multiFetusDeath=pregnancyOverviewi18n.SEPTUPLETS;
break;
case 8:multiFetusDeath=pregnancyOverviewi18n.OCTUPLETS;
break;
case 9:multiFetusDeath=pregnancyOverviewi18n.NONUPLETS;
break;
case 10:multiFetusDeath=pregnancyOverviewi18n.DECAPLETS;
break;
default:multiFetusDeath=".";
}fetalDeathDetails.push({LABEL:pregnancyOverviewi18n.MULT_FETUS,VALUE:multiFetus});
fetalDeathDetails.push({LABEL:pregnancyOverviewi18n.TOTAL_FETUSES,VALUE:multiFetusDeath});
for(i=0;
i<fetalDeathLength;
i++){var egaResult="";
var eddGesAge=0;
eddGesAge=recordData.FETALDEATH[i].DAYS;
egaWeeks=Math.floor(eddGesAge/7);
egaDays=eddGesAge%7;
fetalDeathDetails.push({LABEL:pregnancyOverviewi18n.FETAL_DEATH.replace("{0}",recordData.FETALDEATH[i].LABEL+" :").replace("{1}",egaWeeks).replace("{2}",egaDays),VALUE:""});
}column1.push({LABEL:pregnancyOverviewi18n.MULT_FETUS,VALUE:multiFetus,HOVER_DATA:fetalDeathDetails,HOVER_FXN:generateHoverDetails,ACTION:"Histories",STYLE:"po-gravida"});
column1.push({LABEL:pregnancyOverviewi18n.FEEDING_PLAN,VALUE:recordData.SFEEDING});
var curWeight=(recordData.SPATIENTWEIGHT>0)?formatNumber(recordData.SPATIENTWEIGHT)+recordData.SPATIENTWEIGHTUNITS:"";
var prePregWeight=(recordData.SPATIENTPREPREGWEIGHT>0)?formatNumber(recordData.SPATIENTPREPREGWEIGHT)+recordData.SPATIENTPREPREGWEIGHTUNITS:"";
var height=(recordData.SPATIENTHEIGHT>0)?formatNumber(recordData.SPATIENTHEIGHT)+recordData.SPATIENTHEIGHTUNITS:"";
var bmi=(recordData.SPATIENTBMI>0)?formatNumber(recordData.SPATIENTBMI)+recordData.SPATIENTBMIUNITS:"";
var prePregBMI;
if(recordData.SPATIENTHEIGHTUNITS=="in"){prePregBMI=(recordData.SPATIENTPREPREGWEIGHT/(recordData.SPATIENTHEIGHT*recordData.SPATIENTHEIGHT))*703;
prePregBMI=Math.round(prePregBMI*100)/100;
}else{var prePregHeight=recordData.SPATIENTHEIGHT/100;
prePregBMI=recordData.SPATIENTPREPREGWEIGHT/(prePregHeight*prePregHeight);
prePregBMI=Math.round(prePregBMI*100)/100;
}var column2=[];
column2.push({LABEL:pregnancyOverviewi18n.CUR_WEIGHT,VALUE:curWeight,ACTION:"displayGraph"+compId,STYLE:"po-wf-current-weight"});
column2.push({LABEL:pregnancyOverviewi18n.PREPREG_WEIGHT,VALUE:prePregWeight});
column2.push({LABEL:pregnancyOverviewi18n.HEIGHT,VALUE:height});
column2.push({LABEL:pregnancyOverviewi18n.BMI,VALUE:bmi});
var column3=[];
var bloodType="";
var bloodStyle="";
if(recordData.SPATIENTBLOODTYPE!==""){bloodType=recordData.SPATIENTBLOODTYPE;
}else{if(recordData.SPATIENTABO!==""&&recordData.SPATIENTRHFACTOR!==""){bloodType=recordData.SPATIENTABO.concat("&nbsp;",recordData.SPATIENTRHFACTOR);
}}if(recordData.SPATIENTBLOODTYPE!==""){var bloodTypeCaps=recordData.SPATIENTBLOODTYPE.toUpperCase();
if(bloodTypeCaps.match(pregnancyOverviewi18n.NEGATIVE)||bloodTypeCaps.match(pregnancyOverviewi18n.NEG)||bloodTypeCaps.match(pregnancyOverviewi18n.N)||recordData.SPATIENTBLOODTYPE.match("-")){bloodStyle="po-wf-blood-type-rh-negative";
}}else{if(recordData.SPATIENTRHFACTOR!==""){var RHFactorCaps=recordData.SPATIENTRHFACTOR.toUpperCase();
if(RHFactorCaps.match(pregnancyOverviewi18n.NEGATIVE)||RHFactorCaps.match(pregnancyOverviewi18n.NEG)||RHFactorCaps.match(pregnancyOverviewi18n.N)||recordData.SPATIENTRHFACTOR.match("-")){bloodStyle="po-wf-blood-type-rh-negative";
}}}var bloodObj={LABEL:pregnancyOverviewi18n.BLOOD_TYPE,VALUE:bloodType};
if(bloodStyle!==""){bloodObj.STYLE=bloodStyle;
}column3.push(bloodObj);
var generateROMHoverDetails=function getROMHoverDetails(detailData){var i=0;
if(detailData.length===0){return"";
}var hoverDetailsHTML=[];
hoverDetailsHTML.push("<tr><td colspan='2'>"+pregnancyOverviewi18n.ROM+"</td></tr>");
hoverDetailsHTML.push("<tr><td class='po-wf-rom-header'>"+pregnancyOverviewi18n.DATE_TIME+"</td>");
hoverDetailsHTML.push("<td>"+pregnancyOverviewi18n.DURATION+"</td></tr>");
for(i=0;
i<detailData.length;
i++){var separator=detailData[i].VALUE===""?"":": ";
hoverDetailsHTML.push("<tr><td class='po-wf-rom-header'>"+detailData[i].LABEL+detailData[i].DATE+"</td>");
hoverDetailsHTML.push("<td>"+detailData[i].DURATION+"</td></tr>");
}return"<div class='hvr po-wf-hvr'><table>"+hoverDetailsHTML.join("")+"</table></div>";
};
var romLength=recordData.ROMDATETIME.length;
if(romLength>0){var romDate=new Date();
var curDate=new Date();
var deliveryDate=new Date();
var romUiDisplayData=[];
var romHoverData=[];
var hours=0;
var minutes=0;
var romDuration=0;
var hoursMessage="";
var minutesMessage="";
var romDurationMessage="";
var uiDisplayMessage="";
var romStyle="";
for(i=0;
i<romLength;
i++){if(recordData.ROMDATETIME[i]!==undefined){romDate.setISO8601(recordData.ROMDATETIME[i].DATE);
if(recordData.ROMDATETIME[i].DELIVERYDATE){deliveryDate.setISO8601(recordData.ROMDATETIME[i].DELIVERYDATE);
romDuration=Math.abs(deliveryDate.getTime()-romDate.getTime());
}else{romDuration=Math.abs(curDate.getTime()-romDate.getTime());
}hours=romDuration/(1000*60*60);
minutes=(hours-Math.floor(hours))*60;
var flipROMColor=this.getROMAbnormalAlert();
if(flipROMColor&&hours>=12){romStyle="po-wf-rom-abnormal-duration";
}else{romStyle="";
}hoursMessage=Math.floor(hours)+" "+pregnancyOverviewi18n.HOURS;
minutesMessage=Math.floor(minutes)+" "+pregnancyOverviewi18n.MINUTES;
romDurationMessage="<span class='"+romStyle+"'>"+hoursMessage+" "+minutesMessage+"</span>";
uiDisplayMessage=recordData.ROMDATETIME[i].DELIVERYDATE?pregnancyOverviewi18n.DELIVERED:romDurationMessage;
var labelDisplay="<span class='po-wf-baby-label'>["+recordData.ROMDATETIME[i].DYNAMIC_LABEL+"]</span>";
if(i<maxBabyROM){if(i!==0){romUiDisplayData.push("<br>");
}romUiDisplayData.push(labelDisplay);
romUiDisplayData.push(uiDisplayMessage);
}var dateTimerString=(recordData.ROMDATETIME[i].DATE)?dateFormat(romDate.getTime(),"mmm dd, yyyy HH:MM"):"";
romHoverData.push({LABEL:labelDisplay,DATE:dateTimerString,DURATION:romDurationMessage});
}}var romObj={LABEL:pregnancyOverviewi18n.ROM,VALUE:romUiDisplayData.join(""),HOVER_DATA:romHoverData,HOVER_FXN:generateROMHoverDetails};
if(romLength>maxBabyROM){romObj.ADDITIONAL_LABEL=pregnancyOverviewi18n.ADDITIONAL_DYNAMIC_GROUP_EXIST;
romObj.ADDITIONAL_STYLE="po-wf-additional-baby";
}column3.push(romObj);
}var lSeqs=this.getLabResults();
for(i=0;
i<lSeqs.length;
i++){for(j=0;
j<recordData.LABS.length;
j++){if(lSeqs[i]===recordData.LABS[j].ESID){column3.push(recordData.LABS[j]);
}}}var column4=[];
var aSeqs=this.getAdditionalResults();
for(i=0;
i<aSeqs.length;
i++){for(j=0;
j<recordData.ADDITIONAL.length;
j++){if(aSeqs[i]===recordData.ADDITIONAL[j].ESID){column4.push(recordData.ADDITIONAL[j]);
}}}if(column4.length>0){rowCount=Math.max(column1.length,column2.length,column3.length,column4.length);
}else{rowCount=Math.max(column1.length,column2.length,column3.length);
}for(i=0;
i<rowCount;
i++){generateCurrentPregnancyRow(i);
}var getOverviewTableHTML=function generateOverviewTableHTML(tableId,tableContent,headerText){var htmlData="";
if(headerText){htmlData=tableStartTag.replace("{0}",tableId+compId)+"<thead class='po-wf-header'><tr><th colspan='2'>"+headerText+"</th></tr></thead>";
htmlData+="<tbody>"+tableContent+tableSpaceFillerHTML+"</tbody>"+tableEndTag;
}else{htmlData=tableStartTag.replace("{0}",tableId+compId)+tableContent+tableSpaceFillerHTML+tableEndTag;
}return htmlData;
};
var curPregTableHTML=[];
var curPregnancyColumn1HTML=getOverviewTableHTML("currentPregnancyColumn1_",curPregnancyCol1);
var curPregnancyColumn2HTML=getOverviewTableHTML("currentPregnancyColumn2_",curPregnancyCol2);
var curPregnancyColumn3HTML=getOverviewTableHTML("currentPregnancyColumn3_",curPregnancyCol3);
curPregTableHTML.push(curPregnancyColumn1HTML+spaceColumnHTML+curPregnancyColumn2HTML+spaceColumnHTML+curPregnancyColumn3HTML);
if(column4.length>0){var curPregnancyColumn4HTML=getOverviewTableHTML("currentPregnancyColumn4_",curPregnancyCol4);
curPregTableHTML.push(spaceColumnHTML+curPregnancyColumn4HTML);
}var patientPhones=[];
for(i=0;
i<recordData.PATIENTPHONES.length;
i++){patientPhones.push({LABEL:recordData.PATIENTPHONES[i].SPHONENUMBERTYPE,VALUE:recordData.PATIENTPHONES[i].SPHONENUMBER});
}if(patientPhones.length>0){patientPhoneDisplay=recordData.PATIENTPHONES[0].SPHONENUMBER;
}var ecPhones=[];
for(i=0;
i<recordData.ECPHONES.length;
i++){ecPhones.push({LABEL:recordData.ECPHONES[i].SPHONENUMBERTYPE,VALUE:recordData.ECPHONES[i].SPHONENUMBER});
}if(ecPhones.length>0){ecPhoneDisplay=recordData.ECPHONES[0].SPHONENUMBER;
}var pcpPhones=[];
for(i=0;
i<recordData.PCPPHONES.length;
i++){pcpPhones.push({LABEL:recordData.PCPPHONES[i].SPHONENUMBERTYPE,VALUE:recordData.PCPPHONES[i].SPHONENUMBER});
}if(pcpPhones.length>0){pcpPhoneDisplay=recordData.PCPPHONES[0].SPHONENUMBER;
}var patientContactCol=[];
patientContactCol.push({LABEL:pregnancyOverviewi18n.ADDRESS,VALUE:recordData.SPATIENTADDRESS});
patientContactCol.push({LABEL:pregnancyOverviewi18n.CITY,VALUE:recordData.SPATIENTCITY});
patientContactCol.push({LABEL:pregnancyOverviewi18n.STATE,VALUE:recordData.SPATIENTSTATE});
patientContactCol.push({LABEL:pregnancyOverviewi18n.ZIP,VALUE:recordData.SPATIENTZIP});
patientContactCol.push({LABEL:pregnancyOverviewi18n.PHONE,VALUE:patientPhoneDisplay,HOVER_DATA:patientPhones,HOVER_FXN:generateHoverDetails});
patientContactCol.push({LABEL:pregnancyOverviewi18n.EMAIL_OVERVIEW,VALUE:recordData.SPATIENTEMAIL});
var emergContactCol=[];
emergContactCol.push({LABEL:pregnancyOverviewi18n.NAME,VALUE:recordData.SECNAME});
emergContactCol.push({LABEL:pregnancyOverviewi18n.RELATIONSHIP,VALUE:recordData.SECRELATIONSHIP});
emergContactCol.push({LABEL:pregnancyOverviewi18n.PHONE,VALUE:ecPhoneDisplay,HOVER_DATA:ecPhones,HOVER_FXN:generateHoverDetails});
emergContactCol.push({LABEL:pregnancyOverviewi18n.EMAIL_OVERVIEW,VALUE:recordData.SECEMAIL});
var pcpContactCol=[];
pcpContactCol.push({LABEL:pregnancyOverviewi18n.NAME,VALUE:recordData.SPCPNAME});
pcpContactCol.push({LABEL:pregnancyOverviewi18n.PHONE,VALUE:pcpPhoneDisplay,HOVER_DATA:pcpPhones,HOVER_FXN:generateHoverDetails});
pcpContactCol.push({LABEL:pregnancyOverviewi18n.EMAIL_OVERVIEW,VALUE:recordData.SPCPEMAIL});
var contactTableHTML=[];
rowCount=Math.max(patientContactCol.length,emergContactCol.length,pcpContactCol.length);
for(i=0;
i<rowCount;
i++){generateContactRow(i);
}var patientColumnHTML=getOverviewTableHTML("contactInfoColumn1_",contactCol1,pregnancyOverviewi18n.PATIENT);
var contactColumnHTML=getOverviewTableHTML("contactInfoColumn2_",contactCol2,pregnancyOverviewi18n.EMERGENCY_CONTACT);
var physicianColumnHTML=getOverviewTableHTML("contactInfoColumn3_",contactCol3,pregnancyOverviewi18n.PRIMARY_PHYSICIAN);
contactTableHTML.push(patientColumnHTML+spaceColumnHTML+contactColumnHTML+spaceColumnHTML+physicianColumnHTML);
var dobDisplay=(recordData.SPATIENTDOB)?dateFormatter.formatISO8601(recordData.SPATIENTDOB,mp_formatter.DateTimeFormatter.FULL_DATE_2YEAR):"";
var raceHover=[];
raceHover.push({LABEL:pregnancyOverviewi18n.RACE,VALUE:recordData.SPATIENTRACE});
var bithDate=new Date();
bithDate.setISO8601(recordData.SPATIENTDOB);
var currentAge=MP_Util.CalcAge(bithDate,null);
var patientDemographics1=[];
patientDemographics1.push({LABEL:pregnancyOverviewi18n.AGE,VALUE:currentAge});
patientDemographics1.push({LABEL:pregnancyOverviewi18n.DATE_OF_BIRTH,VALUE:dobDisplay});
patientDemographics1.push({LABEL:pregnancyOverviewi18n.RACE,VALUE:recordData.SPATIENTRACE,HOVER_DATA:raceHover,HOVER_FXN:generateHoverDetails,STYLE:"po-wf-race"});
patientDemographics1.push({LABEL:pregnancyOverviewi18n.ETHNICITY,VALUE:recordData.SPATIENTETHNICITY});
var patientDemographics2=[];
patientDemographics2.push({LABEL:pregnancyOverviewi18n.LANGUAGE,VALUE:recordData.SPATIENTLANG});
patientDemographics2.push({LABEL:pregnancyOverviewi18n.EDUCATION,VALUE:recordData.SPATIENTEDU});
patientDemographics2.push({LABEL:pregnancyOverviewi18n.OCCUPATION,VALUE:recordData.SPATIENTOCCUPATION});
patientDemographics2.push({LABEL:pregnancyOverviewi18n.MARITAL_STATUS,VALUE:recordData.SPATIENTMARITALSTATUS});
var patientDemographics3=[];
var fatherOfBabyDetails=[];
fatherOfBabyDetails.push({LABEL:pregnancyOverviewi18n.FATHER_OF_BABY,VALUE:recordData.SFATHEROFBABY});
patientDemographics3.push({LABEL:pregnancyOverviewi18n.DOMESTIC_PARTNER,VALUE:recordData.SPATIENTDOMESTICPARTNER});
patientDemographics3.push({LABEL:pregnancyOverviewi18n.FATHER_OF_BABY,VALUE:recordData.SFATHEROFBABY,HOVER_DATA:fatherOfBabyDetails,HOVER_FXN:generateHoverDetails,STYLE:"po-wf-fob"});
patientDemographics3.push({LABEL:pregnancyOverviewi18n.INSURANCE,VALUE:recordData.SINSURANCE});
var demographicsTableHTML=[];
if(showDemographicsTab){rowCount=Math.max(patientDemographics1.length,patientDemographics2.length,patientDemographics3.length);
for(i=0;
i<rowCount;
i++){generateDemographicsRow(i);
}var demographicsColumn1HTML=getOverviewTableHTML("demographicsInfoColumn1_",demographicsCol1);
var demographicsColumn2HTML=getOverviewTableHTML("demographicsInfoColumn2_",demographicsCol2);
var demographicsColumn3HTML=getOverviewTableHTML("demographicsInfoColumn3_",demographicsCol3);
demographicsTableHTML.push(demographicsColumn1HTML+spaceColumnHTML+demographicsColumn2HTML+spaceColumnHTML+demographicsColumn3HTML);
}function RemoveUndefinedFilters(array){var events=[];
var i=0;
for(i=0;
i<array.length;
i++){if(!array[i]){continue;
}events.push(array[i]);
}return events;
}function placeholder(beg,end){var str="";
var i=0;
for(i=beg;
i<=end;
i++){str+="&nbsp;";
}return str;
}var pregId=pregInfoObj.getPregnancyId();
if(pregId){var menuItems=[];
menuItems.push("<div clas='po-wf-preg-info'><table class='po-wf-menu-items'><tbody><tr>");
menuItems.push("<td class='po-wf-menu-space'><a id='modifyPregnancy"+compId+"' class='value-with-link'>"+pregnancyOverviewi18n.MODIFY_PREGNANCY+"</a></td>");
menuItems.push("<td class='po-wf-menu-space'><a id='closePregnancy"+compId+"' class='value-with-link'>"+pregnancyOverviewi18n.CLOSE_PREGNANCY+"</a></td>");
menuItems.push("<td class='po-wf-menu-space'><a id='cancelPregnancy"+compId+"' class='value-with-link'>"+pregnancyOverviewi18n.CANCEL_PREGNANCY+"</a></td>");
menuItems.push("</tr></tbody></table>");
componentHTML=menuItems.join("");
}componentHTML+=tabbedMenuHTML;
componentHTML+="<div class='content-body'><div class='po-wf-tabular-info'><div id='currentPregnancyTab"+compId+"' class='po-wf-div-active'>"+curPregTableHTML.join("")+"</div>";
componentHTML+="<div id='contactInfoTab"+compId+"' class='po-wf-div-inactive'>"+contactTableHTML.join("")+"</div>";
componentHTML+="<div id='demographicsInfoTab"+compId+"' class='po-wf-div-inactive'>"+demographicsTableHTML.join("")+"</div>";
componentHTML+="</div></div></div>";
this.finalizeComponent(componentHTML,"");
if(column4.length>0){$("#currentPregnancyTab"+compId+currentPregnancyClass).addClass("po-wf-list-group-additional");
this.curPregnancyTableLength=4;
}var allTabs=$("#tabContainer"+compId+" .po-wf-tabs ul li");
allTabs.eq(this.currentPage).addClass("po-wf-tab-active-header");
allTabs.click(function(){var elementId=$(this).attr("id");
var tabHeaderString=elementId.split("_")[0];
var index=tabHeaderString.substring(tabHeaderString.length-1);
index=parseInt(index,10);
if(index===component.currentPage){return;
}var tab2div={tabHeader_0:"currentPregnancyTab"+compId,tabHeader_1:"contactInfoTab"+compId,tabHeader_2:"demographicsInfoTab"+compId};
$("#tabHeader"+component.currentPage+"_"+rootId).removeClass("po-wf-tab-active-header");
$("#tabHeader"+index+"_"+rootId).addClass("po-wf-tab-active-header");
$("#"+tab2div["tabHeader_"+component.currentPage]).removeClass("po-wf-div-active");
$("#"+tab2div["tabHeader_"+component.currentPage]).addClass("po-wf-div-inactive");
$("#"+tab2div["tabHeader_"+index]).addClass("po-wf-div-active");
component.currentPage=index;
component.resizeComponent();
});
var rootNode=this.getRootComponentNode();
$(rootNode).find(".value-with-link").click(function(){var formObject=null;
if(this.id===""){return;
}if(this.id==="Histories"+compId){var sParms="/PERSONID="+criterion.person_id+" /ENCNTRID="+criterion.encntr_id+" /FIRSTTAB=^Histories+^";
APPLINK(0,criterion.executable,sParms);
return;
}if(this.id==="displayGraph"+compId){var graph=document.createElement("div");
graph.setAttribute("id","displaybox"+compId);
graph.setAttribute("class","po-wf-displaybox");
var graphHTML="";
if(recordData.SPATIENTPREPREGWEIGHT>0&&recordData.SPATIENTHEIGHT>0){if(recordData.SPATIENTWEIGHT<=0){graphHTML="<div class = 'po-wf-graph-outerbox' id = 'graphOuterbox"+compId+"'><div class='po-wf-no-graphbox-skin'>";
graphHTML+="<p class = 'po-wf-no-graph-data'>"+pregnancyOverviewi18n.NO_CURRENT_WEIGHT+"</p>";
graphHTML+="<a href='#' id='graphCloser"+compId+"' class='po-wf-noGraph-close' title='Close'>X</a></div></div>";
graph.innerHTML=graphHTML;
document.body.appendChild(graph);
}else{if(eddAction==="Add"+compId){graphHTML="<div class = 'po-wf-graph-outerbox' id = 'graphOuterbox"+compId+"'><div class='po-wf-no-graphbox-skin'>";
graphHTML+="<p class = 'po-wf-no-graph-data'>"+pregnancyOverviewi18n.NO_EDD_FOR_GRAPH+"</p>";
graphHTML+="<a href='#' id='graphCloser"+compId+"' class='po-wf-noGraph-close' title='Close'>X</a></div></div>";
graph.innerHTML=graphHTML;
document.body.appendChild(graph);
}else{graphHTML="<div class = 'po-wf-graph-outerbox' id = 'graphOuterbox"+compId+"'><div class='po-wf-graphbox-skin'>";
graphHTML+="<div id='tableContents"+compId+"' class = 'po-wf-tableContents'></div>";
graphHTML+="<div id='graphTitle"+compId+"' class = 'po-wf-graphTitle'></div>";
graphHTML+="<div id='graphContents"+compId+"' class = 'po-wf-graph-contents'></div></div>";
graphHTML+="<a href='#' id='graphCloser"+compId+"' class='po-wf-graph-close' title='Close'>X</a></div>";
graph.innerHTML=graphHTML;
document.body.appendChild(graph);
}}}else{graphHTML="<div class = 'po-wf-graph-outerbox' id = 'graphOuterbox"+compId+"'><div class='po-wf-no-graphbox-skin'>";
graphHTML+="<p class = 'po-wf-no-graph-data'>"+pregnancyOverviewi18n.NO_DATA_FOR_GRAPH+"</p>";
graphHTML+="<a href='#' id='graphCloser"+compId+"' class='po-wf-noGraph-close' title='Close'>X</a></div></div>";
graph.innerHTML=graphHTML;
document.body.appendChild(graph);
}$("#graphCloser"+compId).click(function(){$("#displaybox"+compId).empty();
var removeGraph=document.getElementById("displaybox"+compId);
document.body.removeChild(graph);
return;
});
$("#displaybox"+compId).click(function(e){e=e||window.event;
var eventTarget=e.target||e.srcElement;
if(eventTarget.id=="displaybox"+compId){$("#displaybox"+compId).empty();
var removeGraph=document.getElementById("displaybox"+compId);
document.body.removeChild(removeGraph);
}return;
});
if(recordData.SPATIENTPREPREGWEIGHT>0&&recordData.SPATIENTHEIGHT>0&&recordData.SPATIENTWEIGHT>0&&eddAction!=="Add"+compId){var title=pregnancyOverviewi18n.CUR_WEIGHT_GRAPH;
var titleHover;
var minRefCurve=[];
var maxRefCurve=[];
minRefCurve.push([0,0]);
minRefCurve.push([1,0]);
maxRefCurve.push([0,0]);
maxRefCurve.push([1,0]);
var extendReferenceCurve=graphExtend-13;
if(prePregBMI>0){if(prePregBMI<18.5){title=pregnancyOverviewi18n.PREPREG_UNDERWEIGHT;
titleHover=pregnancyOverviewi18n.WEIGHT_GAIN_RECOMMENDATIONS+"  ("+pregnancyOverviewi18n.SINGLETON+"):</br>2.2 &mdash; 6.6 "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.GAIN+" ("+pregnancyOverviewi18n.FIRST+" "+pregnancyOverviewi18n.TRIMESTER+")</br>1 "+pregnancyOverviewi18n.POUND+" "+pregnancyOverviewi18n.GAIN+"/"+pregnancyOverviewi18n.WEEK+" ("+pregnancyOverviewi18n.SECOND+" & "+pregnancyOverviewi18n.THIRD+" "+pregnancyOverviewi18n.TRIMESTER+")</br>28 &mdash; 40 "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.TOTAL_WEIGHT_GAIN;
for(i=0;
i<=10;
i++){j=(2.2/11)*i;
minRefCurve.push([i+2,j]);
k=(6.6/11)*i;
maxRefCurve.push([i+2,k]);
}for(i=0;
i<=extendReferenceCurve;
i++){j=(25.8/27)*i;
minRefCurve.push([i+13,j+2.2]);
k=(33.4/27)*i;
maxRefCurve.push([i+13,k+6.6]);
}}else{if(prePregBMI>=18.5&&prePregBMI<25){title=pregnancyOverviewi18n.PREPREG_NORMAL_WEIGHT;
titleHover=pregnancyOverviewi18n.WEIGHT_GAIN_RECOMMENDATIONS+"  ("+pregnancyOverviewi18n.SINGLETON+"):</br>2.2 &mdash; 6.6 "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.GAIN+" ("+pregnancyOverviewi18n.FIRST+" "+pregnancyOverviewi18n.TRIMESTER+")</br>1 "+pregnancyOverviewi18n.POUND+" "+pregnancyOverviewi18n.GAIN+"/"+pregnancyOverviewi18n.WEEK+" ("+pregnancyOverviewi18n.SECOND+" & "+pregnancyOverviewi18n.THIRD+" "+pregnancyOverviewi18n.TRIMESTER+")</br>25 &mdash; 35 "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.TOTAL_WEIGHT_GAIN;
for(i=0;
i<=10;
i++){j=(2.2/11)*i;
minRefCurve.push([i+2,j]);
k=(6.6/11)*i;
maxRefCurve.push([i+2,k]);
}for(i=0;
i<=extendReferenceCurve;
i++){j=(22.8/27)*i;
minRefCurve.push([i+13,j+2.2]);
k=(28.4/27)*i;
maxRefCurve.push([i+13,k+6.6]);
}}else{if(prePregBMI>=25&&prePregBMI<30){title=pregnancyOverviewi18n.PREPREG_OVERWEIGHT;
titleHover=pregnancyOverviewi18n.WEIGHT_GAIN_RECOMMENDATIONS+"  ("+pregnancyOverviewi18n.SINGLETON+"):</br>2.2 &mdash; 6.6 "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.GAIN+" ("+pregnancyOverviewi18n.FIRST+" "+pregnancyOverviewi18n.TRIMESTER+")</br>0.6 "+pregnancyOverviewi18n.POUND+" "+pregnancyOverviewi18n.GAIN+"/"+pregnancyOverviewi18n.WEEK+" ("+pregnancyOverviewi18n.SECOND+" & "+pregnancyOverviewi18n.THIRD+" "+pregnancyOverviewi18n.TRIMESTER+")</br>15 &mdash; 25  "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.TOTAL_WEIGHT_GAIN;
for(i=0;
i<=10;
i++){j=(2.2/11)*i;
minRefCurve.push([i+2,j]);
k=(6.6/11)*i;
maxRefCurve.push([i+2,k]);
}for(i=0;
i<=extendReferenceCurve;
i++){j=(12.8/27)*i;
minRefCurve.push([i+13,j+2.2]);
k=(18.4/27)*i;
maxRefCurve.push([i+13,k+6.6]);
}}else{title=pregnancyOverviewi18n.PREPREG_OBESE;
titleHover=pregnancyOverviewi18n.WEIGHT_GAIN_RECOMMENDATIONS+"  ("+pregnancyOverviewi18n.SINGLETON+"):</br>1.1 &mdash; 4.4  "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.GAIN+" ("+pregnancyOverviewi18n.FIRST+" "+pregnancyOverviewi18n.TRIMESTER+")</br>0.5 "+pregnancyOverviewi18n.POUND+" "+pregnancyOverviewi18n.GAIN+"/"+pregnancyOverviewi18n.WEEK+" ("+pregnancyOverviewi18n.SECOND+" & "+pregnancyOverviewi18n.THIRD+" "+pregnancyOverviewi18n.TRIMESTER+")</br>11 &mdash; 20  "+pregnancyOverviewi18n.POUNDS+" "+pregnancyOverviewi18n.TOTAL_WEIGHT_GAIN;
for(i=0;
i<=10;
i++){j=(1.1/11)*i;
minRefCurve.push([i+2,j]);
k=(4.4/11)*i;
maxRefCurve.push([i+2,k]);
}for(i=0;
i<=extendReferenceCurve;
i++){j=(10.9/27)*i;
minRefCurve.push([i+13,j+1.1]);
k=(15.6/27)*i;
maxRefCurve.push([i+13,k+4.4]);
}}}}}var weightChartTable="<table class='po-wf-weight-table' border='1'><tbody class='po-wf-weight-body'>";
weightChartTable+="<tr class='po-wf-weight-body'><td class='po-wf-weight-body'><b>"+pregnancyOverviewi18n.DATE;
weightChartTable+="</b></td><td class='po-wf-weight-body'><b>"+pregnancyOverviewi18n.GESTATION_WEEKS;
weightChartTable+="</b></td><td class='po-wf-weight-body'><b>"+pregnancyOverviewi18n.WEIGHT;
weightChartTable+="</b></td><td class='po-wf-weight-body'><b>"+pregnancyOverviewi18n.WEIGHT_CHANGE;
weightChartTable+=" +/-</b></td></tr>";
var getWeightCellsHTML=function generateWeightCells(item){var date=(!item)?"&nbsp;":item.DATE;
var gestationWeeks=(!item)?"&nbsp;":item.GESTATION_WEEKS;
var weight=(!item)?"&nbsp;":item.WEIGHT;
var weightChange=(!item)?"&nbsp;":item.WEIGHT_CHANGE;
var weightCellsHTML="<tr class='po-wf-weight-body'><td class='po-wf-weight-body' style='width: 115px;'>";
weightCellsHTML+=date+"</td><td class='po-wf-weight-body' style='width: 65px;'>"+gestationWeeks;
weightCellsHTML+="</td><td class='po-wf-weight-body' style='width: 90px;'>"+weight;
weightCellsHTML+="</td><td class='po-wf-weight-body'>"+weightChange+"</td></tr>";
return weightCellsHTML;
};
var weightRows=[];
var healthyWeightGain=[];
var unhealthyWeightGain=[];
var highestPoint=45;
var lowestPoint=-5;
var prePregWtInLB,prePregWtInKG;
var kgToLb=2.20462;
if(recordData.SPATIENTPREPREGWEIGHTUNITS==pregnancyOverviewi18n.KILOGRAM){prePregWtInLB=recordData.SPATIENTPREPREGWEIGHT*kgToLb;
prePregWtInKG=recordData.SPATIENTPREPREGWEIGHT;
}else{prePregWtInLB=recordData.SPATIENTPREPREGWEIGHT;
prePregWtInKG=recordData.SPATIENTPREPREGWEIGHT/kgToLb;
}var weightRowToDisplay=0;
for(i=0;
i<recordData.SPREGWEIGHTS.length;
i++){var dtWeightMeasured=new Date();
dtWeightMeasured.setISO8601(recordData.SPREGWEIGHTS[i].DTPATIENTPREGWEIGHTDATE);
dtWeightDisplay=dtWeightMeasured.format("longDateTime3");
var dtToday=new Date();
var dtdifference=dtToday-dtWeightMeasured;
var daysSince=Math.round(dtdifference/(1000*60*60*24));
var gestDaysRecorded=gestAgeInDays-daysSince;
if(gestDaysRecorded>=0){var gestWeeksRecorded=Math.floor(gestDaysRecorded/7);
var weightInKG,weightInLB;
if(recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHTUNITS==pregnancyOverviewi18n.KILOGRAM){weightInKG=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT;
weightInLB=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT*kgToLb;
}else{weightInKG=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT/kgToLb;
weightInLB=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT;
}var weightChangeRecordedInLB=weightInLB-prePregWtInLB;
var weightChangeRecordedInKG=weightInKG-prePregWtInKG;
weightInLB=Math.round(weightInLB*100)/100;
weightInKG=Math.round(weightInKG*100)/100;
weightChangeRecordedInLB=Math.round(weightChangeRecordedInLB*100)/100;
weightChangeRecordedInKG=Math.round(weightChangeRecordedInKG*100)/100;
weightRows.push({DATE:dtWeightDisplay,GESTATION_WEEKS:gestWeeksRecorded,WEIGHT:weightInLB+" "+pregnancyOverviewi18n.POUNDS+"<br/>("+weightInKG+" "+pregnancyOverviewi18n.KILOGRAM+")",WEIGHT_CHANGE:weightChangeRecordedInLB+" "+pregnancyOverviewi18n.POUNDS+"<br/>("+weightChangeRecordedInKG+" "+pregnancyOverviewi18n.KILOGRAM+")"});
weightChartTable=weightChartTable+getWeightCellsHTML(weightRows[weightRowToDisplay++]);
var weeksMaxGain=maxRefCurve[gestWeeksRecorded][1];
var weeksMinGain=minRefCurve[gestWeeksRecorded][1];
if(weightChangeRecordedInLB>weeksMaxGain||weightChangeRecordedInLB<weeksMinGain){unhealthyWeightGain.push([gestWeeksRecorded,weightChangeRecordedInLB]);
}else{healthyWeightGain.push([gestWeeksRecorded,weightChangeRecordedInLB]);
}while(weightChangeRecordedInLB>=highestPoint){highestPoint+=5;
}while(weightChangeRecordedInLB<=lowestPoint){lowestPoint-=5;
}}}weightChartTable=weightChartTable+"</tbody></table>";
var tableData=document.getElementById("tableContents"+compId);
tableData.innerHTML=weightChartTable;
var graphTitle=document.getElementById("graphTitle"+compId);
graphTitle.innerHTML=title;
graphTitle.onmouseover=function(){var textBox=document.createElement("div");
textBox.id="textBox"+compId;
textBox.setAttribute("class","po-wf-textBox");
textBox.innerHTML=titleHover;
document.getElementById("graphOuterbox"+compId).appendChild(textBox);
};
graphTitle.onmouseout=function(){var textBox=document.getElementById("textBox"+compId);
document.getElementById("graphOuterbox"+compId).removeChild(textBox);
};
var plot3=$.jqplot("graphContents"+compId,[maxRefCurve,minRefCurve,healthyWeightGain,unhealthyWeightGain],{series:[{label:"maxRefCurve",lineWidth:1,markerOptions:{size:0},color:"#666666"},{label:"minRefCurve",lineWidth:1,markerOptions:{size:0},color:"#666666"},{label:"healthyWeightGain",showLine:false,markerOptions:{size:4,style:"circle"},color:"#0101DF"},{label:"unhealthyWeightGain",showLine:false,markerOptions:{size:4,style:"circle"},xaxis:"x2axis",yaxis:"y2axis",color:"#FF0000"}],axes:{xaxis:{min:0,max:graphExtend,tickInterval:4,label:pregnancyOverviewi18n.WEEKS_OF_GESTATION,tickOptions:{formatString:"%d"}},yaxis:{min:lowestPoint,max:highestPoint,tickInterval:5,label:pregnancyOverviewi18n.WEIGHT_CHANGE+"<br /> ("+pregnancyOverviewi18n.POUNDS+")",labelRenderer:$.jqplot.CanvasAxisLabelRenderer,labelOptions:{angle:-90}},x2axis:{min:0,max:graphExtend,tickInterval:1,tickOptions:{showMark:false,showLabel:false}},y2axis:{min:lowestPoint,max:highestPoint,tickInterval:1,tickOptions:{showMark:false,showLabel:false}}},cursor:{showTooltip:false}});
var visibleHeightRegion=$(window.top).height()*90/100;
if(visibleHeightRegion>600){visibleHeightRegion=600;
}var graphboxHeight=visibleHeightRegion+"px";
$("#graphOuterbox"+compId+" .po-wf-graphbox-skin").css("height",graphboxHeight);
var tooltip=jQuery("#graphContents"+compId+" .jqplot-highlighter-tooltip");
$("#graphContents"+compId).bind("jqplotDataMouseOver",function(ev,seriesIndex,pointIndex,data){var x=data[0];
var y=data[1];
var tooltipText="";
if(plot3.series[seriesIndex].label==="maxRefCurve"||plot3.series[seriesIndex].label==="minRefCurve"){tooltipText="";
}else{if(plot3.series[seriesIndex].label==="healthyWeightGain"||plot3.series[seriesIndex].label==="unhealthyWeightGain"){var dateFound=0;
for(i=0;
i<recordData.SPREGWEIGHTS.length;
i++){if(dateFound===0){var dateWeightMeasured=new Date(dateFormatter.formatISO8601(recordData.SPREGWEIGHTS[i].DTPATIENTPREGWEIGHTDATE,mp_formatter.DateTimeFormatter.FULL_DATE_4YEAR));
var dateWeightDisplay=dateFormatter.formatISO8601(recordData.SPREGWEIGHTS[i].DTPATIENTPREGWEIGHTDATE,mp_formatter.DateTimeFormatter.FULL_DATE_TIME_4YEAR);
var dateToday=new Date();
dateToday.setHours(0,0,0,0);
var datedifference=dateToday-dateWeightMeasured;
var ndaysSince=Math.round(datedifference/(1000*60*60*24));
var ngestDaysRecorded=gestAgeInDays-ndaysSince;
if(ngestDaysRecorded>=0){var ngestWeeksRecorded=Math.floor(ngestDaysRecorded/7);
var cweightInLB,cprePregWtInLB;
if(recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHTUNITS==pregnancyOverviewi18n.KILOGRAM){cweightInLB=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT*kgToLb;
}else{cweightInLB=recordData.SPREGWEIGHTS[i].SPATIENTPREGWEIGHT;
}if(recordData.SPATIENTPREPREGWEIGHTUNITS==pregnancyOverviewi18n.KILOGRAM){cprePregWtInLB=recordData.SPATIENTPREPREGWEIGHT*kgToLb;
}else{cprePregWtInLB=recordData.SPATIENTPREPREGWEIGHT;
}var cweightChangeRecordedInLB=cweightInLB-cprePregWtInLB;
cweightChangeRecordedInLB=Math.round(cweightChangeRecordedInLB*100)/100;
if(ngestWeeksRecorded==x&&cweightChangeRecordedInLB==y){tooltipText=tooltipText+dateWeightDisplay;
dateFound=1;
}}}}tooltipText=tooltipText+"<br/>"+pregnancyOverviewi18n.WEIGHT+" "+pregnancyOverviewi18n.GAIN+": "+Math.round(y*100)/100+" "+pregnancyOverviewi18n.POUNDS;
}}if(tooltipText===""){jQuery("#graphContents"+compId+" .jqplot-highlighter-tooltip").empty();
jQuery("#graphContents"+compId+" .jqplot-highlighter-tooltip").hide();
}else{var mouseX=plot3.axes.xaxis.u2p(x)-140;
var mouseY=plot3.axes.yaxis.u2p(y)-50;
var toolTipCSS={position:"absolute",left:mouseX+"px",top:mouseY+"px"};
tooltip.css(toolTipCSS).html(tooltipText).show();
}});
}}try{formObject=window.external.DiscernObjectFactory("PREGNANCY");
}catch(error){MP_Util.LogError(pregnancyOverviewi18n.ERROR_DOF+error.name+" "+error.message);
return;
}if(!formObject){MP_Util.LogError(pregnancyOverviewi18n.ERROR_CREATE);
return;
}var modified=false;
var cancel_close=false;
try{if(this.id=="Add"+compId){modified=formObject.AddEDD(window,criterion.person_id,criterion.encntr_id,pregInfoObj.getPregnancyId());
}else{if(this.id=="Modify"+compId){modified=formObject.ModifyEDD(window,criterion.person_id,criterion.encntr_id,pregInfoObj.getEddId());
}else{if(this.id=="modifyPregnancy"+compId){modified=formObject.ModifyPregnancy(window,criterion.person_id,criterion.encntr_id,pregInfoObj.getPregnancyId());
}else{if(this.id=="closePregnancy"+compId){cancel_close=formObject.ClosePregnancy(window,criterion.person_id,criterion.encntr_id,pregInfoObj.getPregnancyId());
}else{if(this.id=="cancelPregnancy"+compId){cancel_close=formObject.CancelPregnancy(window,criterion.person_id,criterion.encntr_id,pregInfoObj.getPregnancyId());
}}}}}if(cancel_close){CERN_Platform.refreshMPage();
}else{if(modified){PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(criterion);
}}}catch(err){MP_Util.LogJSError(err,this,"pregnancy-overview-o2.js","renderComponent");
}});
var divs=Util.Style.g("hvr",_g(rootId),"div");
for(i=0;
i<divs.length;
i++){hs(Util.gp(divs[i]),divs[i],this);
}};
