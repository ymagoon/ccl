function CardiologyDevice_o2ComponentStyle(){this.initByNamespace("cdc2");
}CardiologyDevice_o2ComponentStyle.prototype=new ComponentStyle();
CardiologyDevice_o2ComponentStyle.prototype.constructor=ComponentStyle;
function CardiologyDevice_o2Component(criterion){this.initComponentVars();
this.alertMessage=null;
this.i18n=i18n.discernabu.cardiology_device_integration_detail_o2;
this.setCriterion(criterion);
this.setStyles(new CardiologyDevice_o2ComponentStyle());
this.setIncludeLineNumber(true);
this.setComponentLoadTimerName("USR:MPG.Cardiology.Device.Detail.o2 - load component");
this.setComponentRenderTimerName("ENG:MPG.Cardiology.Device.Detail.o2 - render component");
}CardiologyDevice_o2Component.prototype=new MPageComponent();
CardiologyDevice_o2Component.prototype.constructor=MPageComponent;
CardiologyDevice_o2Component.prototype.createSessionEpisodeHierarchy=function(){var deviceIdx,histPMkrData;
for(deviceIdx=0;
deviceIdx<this.JSONData.PULSE_GENS.length;
deviceIdx++){if(deviceIdx===0){this.PMkrData=this.JSONData.PULSE_GENS[0];
this.Episodes=this.JSONData.PULSE_GENS[0].EPISODES;
this.Sessions=this.JSONData.PULSE_GENS[0].SESSIONS;
if(this.Sessions.length===0&&this.Episodes.length===0){this.PMkrData.TOP_EPISODE_LIST=[];
this.PMkrData.SESSION_EPISODE_HIERARCHY=[];
}else{if(this.Sessions.length===0){this.PMkrData.TOP_EPISODE_LIST=this.createTopEpisodeList(this.Sessions[0],this.Sessions,this.Episodes);
this.PMkrData.SESSION_EPISODE_HIERARCHY=[];
}else{this.PMkrData.TOP_EPISODE_LIST=this.createTopEpisodeList(this.Sessions[0],this.Sessions,this.Episodes);
this.PMkrData.SESSION_EPISODE_HIERARCHY=this.constructSessionEpisodeHierarchy(this.Sessions,this.Episodes);
}}}else{histPMkrData=this.JSONData.PULSE_GENS[deviceIdx];
histPMkrData.SESSION_EPISODE_HIERARCHY=this.constructSessionEpisodeHierarchy(this.JSONData.PULSE_GENS[deviceIdx].SESSIONS,this.JSONData.PULSE_GENS[deviceIdx].EPISODES);
this.histPMkrData.push(histPMkrData);
}}};
CardiologyDevice_o2Component.prototype.refreshComponent=function(){this.initComponentVars();
this.setIncludeLineNumber(true);
MPageComponent.prototype.refreshComponent.call(this);
};
CardiologyDevice_o2Component.prototype.initComponentVars=function(){this.currentPage=1;
this.totalPages=1;
this.selectedPDF=null;
this.scopeObj=null;
this.alreadyPostProcessed=false;
this.requestEndorsementSequence=0;
this.modalArr=[];
this.JSONData={};
this.PMkrData={};
this.histPMkrData=[];
this.Episodes=[];
this.Sessions=[];
this.ModeEqvs={A:"Atrial",V:"Ventrial",D:"Dual",O:"None",T:"Triggered",I:"Inhibited",R:"Rate Modulated",C:"Communicating",M:"Multiprogrammable",P:"Paced",S:"Shocks"};
this.documentViewer=null;
this.elementToDocUID={};
this.sessionToDocUID=[];
this.modeTooltip=null;
this.activeDocID=null;
this.alreadyAssociatedMessage="";
this.DataLoaded=false;
this.addrBookSearchControl=null;
this.suggestedMatchPulseGenIDs=[];
this.devicesToAssociate=[];
this.devicesToDisassociate=[];
};
CardiologyDevice_o2Component.prototype.cclDateToJSDate=function(DTTM,dateFormat){var dateResult=new Date();
try{dateResult.setISO8601(DTTM);
return typeof dateFormat==="undefined"?dateResult:dateResult.format(dateFormat);
}catch(err){throw err;
}};
CardiologyDevice_o2Component.prototype.expandCCLDateData=function(CCLDateTime,objectToExpand,prefix){var DETECTION_JS_DTTM=this.cclDateToJSDate(CCLDateTime);
objectToExpand[prefix+"_JS_DTTM"]=DETECTION_JS_DTTM;
objectToExpand[prefix+"_UTC"]=Date.parse(DETECTION_JS_DTTM);
objectToExpand[prefix+"_DT"]=this.cclDateToJSDate(CCLDateTime,"shortDate2");
objectToExpand[prefix+"_TM"]=this.cclDateToJSDate(CCLDateTime,"mediumTime");
return objectToExpand;
};
CardiologyDevice_o2Component.prototype.leadZero=function(intValue,roundVal){if(typeof roundVal==="undefined"){return intValue<10?"0"+intValue:intValue.toString();
}if(intValue<10){return"00"+intValue;
}return intValue.toString();
};
CardiologyDevice_o2Component.prototype.createTopEpisodeList=function(mostRecentSession,sessions,episodes){var currentEpisode,episodeIdx,topEpisodeList=[];
if(sessions.length===0){for(episodeIdx=0;
episodeIdx<episodes.length;
episodeIdx++){currentEpisode=episodes[episodeIdx];
this.expandCCLDateData(currentEpisode.DETECTION_DT_TM,currentEpisode,"DETECTION");
topEpisodeList.push(currentEpisode);
}}else{this.expandCCLDateData(mostRecentSession.SESSION_DT_TM,mostRecentSession,"SESSION");
for(episodeIdx=0;
episodeIdx<episodes.length;
episodeIdx++){currentEpisode=episodes[episodeIdx];
this.expandCCLDateData(currentEpisode.DETECTION_DT_TM,currentEpisode,"DETECTION");
if(currentEpisode.DETECTION_UTC>mostRecentSession.SESSION_UTC){topEpisodeList.push(currentEpisode);
}}}return topEpisodeList;
};
CardiologyDevice_o2Component.prototype.createHistoricalEpisodesList=function(mostRecentSession,episodes){var currentEpisode,episodeIdx,historicalEpisodeList=[];
this.expandCCLDateData(mostRecentSession.SESSION_DT_TM,mostRecentSession,"SESSION");
for(episodeIdx=0;
episodeIdx<episodes.length;
episodeIdx++){currentEpisode=episodes[episodeIdx];
this.expandCCLDateData(currentEpisode.DETECTION_DT_TM,currentEpisode,"DETECTION");
if(currentEpisode.DETECTION_UTC<mostRecentSession.SESSION_UTC){historicalEpisodeList.push(currentEpisode);
}}return historicalEpisodeList;
};
CardiologyDevice_o2Component.prototype.constructSessionEpisodeHierarchy=function(sessions,episodes){var episodeCounter,sessionCounter,actSessionIdx=0,historicalEpisodes,currentEpisode,currentSession;
if(sessions.length===0){return[];
}historicalEpisodes=this.createHistoricalEpisodesList(sessions[0],episodes);
for(sessionCounter=0;
sessionCounter<sessions.length;
sessionCounter++){currentSession=sessions[sessionCounter];
this.expandCCLDateData(currentSession.SESSION_DT_TM,currentSession,"SESSION");
currentSession.EPISODE_LIST=[];
currentSession.SESSION_NAME=currentSession.SESSION_DT;
}for(episodeCounter=0;
episodeCounter<historicalEpisodes.length;
episodeCounter++){currentEpisode=historicalEpisodes[episodeCounter];
this.expandCCLDateData(currentEpisode.DETECTION_DT_TM,currentEpisode,"DETECTION");
if(currentEpisode.DETECTION_UTC<sessions[actSessionIdx].SESSION_UTC&&actSessionIdx+1<sessions.length){if(currentEpisode.DETECTION_UTC>sessions[actSessionIdx+1].SESSION_UTC){sessions[actSessionIdx].EPISODE_LIST.push(currentEpisode);
}else{actSessionIdx=actSessionIdx+1;
sessions[actSessionIdx].EPISODE_LIST.push(currentEpisode);
}}else{sessions[actSessionIdx].EPISODE_LIST.push(currentEpisode);
}}return sessions;
};
CardiologyDevice_o2Component.prototype.constructHoverTable=function(nameCollection,valueCollection){var i,opHTML="";
for(i=0;
i<nameCollection.length;
i++){opHTML+="<tr><td><span class = 'cdc2-tooltip-labeltext'>"+nameCollection[i]+"</span>: <span class = 'cdc2-tooltip-valuetext'>"+valueCollection[i]+"</span></td></tr>";
}return"<table class='ImplantingDoctorHover'>"+opHTML+"</table>";
};
CardiologyDevice_o2Component.prototype.constructHeaderData=function(){var opHTML="",PMData=this.PMkrData,Battery=PMData.BATTERY_MEASUREMENTS[0],ERI="",batteryVoltage="";
if(Battery){ERI=Battery.RRT_TRIGGER===""?"":"("+Battery.RRT_TRIGGER+")";
batteryVoltage=Battery.VOLTAGE_VALUE+"v";
}else{batteryVoltage=this.i18n.NO_BATTERY_INFO;
}opHTML+="<div class='cdc2-header-data-row'><div class='cdc2-hdr-row-device-details'><table id='SensingPacingHover'><tr><td><div class='cdc2-hdr-row-device-name cdc2-hdr-row-datum'>"+PMData.MANUFACTURER_DISP+" "+PMData.MODEL_IDENT+"</div></td></tr><tr><td><div class='cdc2-hdr-row-datum'><span class='cdc2-hdr-row-label'>"+this.i18n.PACEMAKER_SN+":</span><span class='cdc2-hdr-row-value'>"+PMData.SERIAL_TXT+"</span></div></td><td><div class='cdc2-hdr-row-datum'><span class='cdc2-hdr-row-label'>"+this.i18n.BATTERY+":</span><span class='cdc2-hdr-row-value'>"+batteryVoltage+" "+ERI+"</span></div></td></tr>";
opHTML+="<tr><td><div class='cdc2-hdr-row-device-implant-date cdc2-hdr-row-datum'>";
if(PMData.IMPLANT_DT_TM!=="/Date(0000-00-00T00:00:00.000+00:00)/"){opHTML+="<span class='cdc2-hdr-row-label'>"+this.i18n.IMPLANTED+":</span><span class='cdc2-hdr-row-value'>"+this.cclDateToJSDate(PMData.IMPLANT_DT_TM,"longDate")+"</span>";
}opHTML+="</div></td>";
if(PMData.BRADY_SETTINGS[0]&&PMData.BRADY_SETTINGS[0].MODE_DISP){opHTML+="<td><div class='cdc2-hdr-row-device-mode cdc2-hdr-row-datum'><span class='cdc2-hdr-row-label'>"+this.i18n.DEVICE_MODE+":</span><span class='cdc2-hdr-row-value'>"+PMData.BRADY_SETTINGS[0].MODE_DISP+"</span></div></td></tr>";
}else{opHTML+="</tr>";
}opHTML+="</table></div></div><div class='cdc2-header-data-clear'></div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.constructSingleEpisode=function(serialID,episodeLabel,docUID,docLen,classOverride){var pdfImage="";
if(typeof docUID!=="undefined"&&docUID!==""){this.elementToDocUID[serialID]={DocUID:docUID,DocLen:docLen};
pdfImage=" <span class='cdc2-ekg-icon'></span>";
}return $("<div></div>").addClass(classOverride).attr("id",serialID).append(episodeLabel).append(pdfImage)[0].outerHTML;
};
CardiologyDevice_o2Component.prototype.constructHistoricalEpisodesList=function(HistoricalLabel){var opHTML="";
opHTML+="<div class='cdc2-sticky-labels'><div class='cdc2-sticky-historical-label'>"+HistoricalLabel+"</div></div><div class='cdc2-lower-historical-interrogation-contents'>"+this.constructInterrogationList(0,this.PMkrData.SESSION_EPISODE_HIERARCHY)+"</div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.constructInterrogationList=function(deviceIdx,sessEpStructure){var opHTML="",epIdx,sessIdx,serialIDLabel,activeSession,actSessEpisodes,currEpisode;
if(deviceIdx>0&&sessEpStructure.length===0){opHTML+="<div class='cdc2-no-historical-device'>"+this.i18n.NO_DEVICE+"</div>";
}for(sessIdx=0;
sessIdx<sessEpStructure.length;
sessIdx++){serialIDLabel=this.leadZero(deviceIdx*100+sessIdx,100);
activeSession=sessEpStructure[sessIdx];
actSessEpisodes=activeSession.EPISODE_LIST;
if(typeof activeSession.SESSION_DOCS!=="undefined"){this.sessionToDocUID.push({nodeName:"cdc2-historical-interrogations-"+serialIDLabel,docUID:activeSession.SESSION_DOCS[0].DOC_UID,docLen:activeSession.SESSION_DOCS[0].DOC_LEN});
}opHTML+="<div id='cdc2-historical-interrogations-"+serialIDLabel+"' class='cdc2-historical-interrogations'>   <div class='cdc2-expColCarrot "+(sessIdx===0?"expanded":"collapsed")+"'>   </div><span>"+activeSession.SESSION_NAME+"</span>";
if(actSessEpisodes.length>0){opHTML+="<div id='cdc2-historical-interrogations-"+serialIDLabel+"Children' class='InterrogationChildrenPanel"+(sessIdx===0?"":" cdc2-hidden-data")+"'>";
for(epIdx=0;
epIdx<actSessEpisodes.length;
epIdx++){currEpisode=actSessEpisodes[epIdx];
if(epIdx===5){opHTML+=this.constructMoreButton("HIIMoreButton"+serialIDLabel,this.i18n.SHOW_ALL+" ("+actSessEpisodes.length+")");
opHTML+="<div id='HII"+serialIDLabel+"MoreRecords' class='cdc2-hidden-data'>";
}opHTML+=this.constructSingleEpisode("cdc2-historical-ep-"+serialIDLabel+this.leadZero(deviceIdx*100+epIdx,100),"<b>"+currEpisode.TYPE_DISP+"</b> "+currEpisode.DETECTION_DT,currEpisode.DOC_UID,currEpisode.DOC_LEN,"cdc2-historical-interrogations");
}opHTML+="</div>";
}if(epIdx>5){opHTML+="</div>";
}opHTML+="</div>";
}return opHTML;
};
CardiologyDevice_o2Component.prototype.constructHistoricalDevicesList=function(historicalDeviceData){var listHTML="",deviceIdx;
if(historicalDeviceData.length>0){listHTML+="<div class='cdc2-sticky-historical-label'>"+this.i18n.HISTORICAL_DEVICES+"</div>";
for(deviceIdx=0;
deviceIdx<historicalDeviceData.length;
deviceIdx++){listHTML+=this.constructHistoricalDevice(deviceIdx,historicalDeviceData[deviceIdx]);
}}return listHTML;
};
CardiologyDevice_o2Component.prototype.constructHistoricalDevice=function(deviceIdx,historicalDeviceData){var listHTML="",modeHTML="";
if(historicalDeviceData.BRADY_SETTINGS[0]&&historicalDeviceData.BRADY_SETTINGS[0].MODE_DISP){modeHTML="   <div>"+this.i18n.DEVICE_MODE+": "+historicalDeviceData.BRADY_SETTINGS[0].MODE_DISP+"   </div>";
}listHTML+="<div class='cdc2-historical-device-header'>   <div class='cdc2-historical-device-model'>"+historicalDeviceData.MANUFACTURER_DISP+" "+historicalDeviceData.MODEL_IDENT+" ("+this.i18n.INACTIVE+")   </div>   <div>"+this.i18n.PACEMAKER_SN+": "+historicalDeviceData.SERIAL_TXT+"   </div>"+modeHTML+"   <div class='cdc2-historical-device-implant'>"+this.i18n.IMPLANTED+": "+this.cclDateToJSDate(historicalDeviceData.IMPLANT_DT_TM,"longDate")+"   </div></div><div class='cdc2-lower-historical-interrogation-contents'>"+this.constructInterrogationList(deviceIdx+1,historicalDeviceData.SESSION_EPISODE_HIERARCHY)+"</div>";
return listHTML;
};
CardiologyDevice_o2Component.prototype.showRemaining=function(eventData){var $triggerObj,$targetDivObj;
if(typeof eventData.data.triggerObj==="undefined"){return false;
}$triggerObj=$(eventData.data.triggerObj);
$targetDivObj=$("#"+eventData.data.triggerObj[0].id.replace("MoreButton","")+"MoreRecords");
$triggerObj.slideUp(500);
$targetDivObj.slideDown(500);
$targetDivObj.removeClass("cdc2-hidden-data").addClass("cdc2-revealed-data");
return true;
};
CardiologyDevice_o2Component.prototype.toggleExpand=function(eventData){var newButtonClass,$targetObject,triggerObj,$triggerObj;
if(typeof eventData==="undefined"){return false;
}if(typeof eventData.data.triggerObj==="undefined"||typeof eventData.data.relatedDIV==="undefined"){return false;
}$triggerObj=eventData.data.triggerObj;
triggerObj=$triggerObj[0];
$targetObject=eventData.data.relatedDIV;
if(triggerObj.className.toLowerCase()==="cdc2-expcolcarrot expanded"){newButtonClass="cdc2-expColCarrot collapsed";
$targetObject.slideUp(500,function(){$targetObject.addClass("cdc2-hidden-data");
});
}else{newButtonClass="cdc2-expColCarrot expanded";
$targetObject.slideDown(500,function(){$targetObject.removeClass("cdc2-hidden-data");
});
}$triggerObj.removeClass(triggerObj.className).addClass(newButtonClass);
};
CardiologyDevice_o2Component.prototype.constructMoreButton=function(ButtonID,ButtonLabel){return $("<div></div>").addClass("cdc2-more-button").attr("id",ButtonID).append(ButtonLabel)[0].outerHTML;
};
CardiologyDevice_o2Component.prototype.constructTopEpisodesList=function(TopLabel){var opHTML="",episodeIdx,activeEpisode,activeEpisodes=this.PMkrData.TOP_EPISODE_LIST,episodeHTML,$topLabel=$("<div></div>").addClass("cdc2-sticky-top-label").append(TopLabel);
opHTML+="<div class='cdc2-sticky-labels'>"+$topLabel[0].outerHTML+"</div>";
opHTML+="<div class='cdc2-top-episodes-contents'>";
for(episodeIdx=0;
episodeIdx<activeEpisodes.length;
episodeIdx++){activeEpisode=activeEpisodes[episodeIdx];
episodeHTML=this.constructSingleEpisode("cdc2-slv-ep-"+this.leadZero(episodeIdx,100),"<b>"+activeEpisode.TYPE_DISP+"</b> "+activeEpisode.DETECTION_DT,activeEpisode.DOC_UID,activeEpisode.DOC_LEN,"cdc2-since-last-visit-episode");
if(episodeIdx<5){opHTML+=episodeHTML;
}else{if(episodeIdx===5){opHTML+=this.constructMoreButton("SLVMoreButton",this.i18n.SHOW_ALL+" ("+activeEpisodes.length+")");
opHTML+="<div id='SLVMoreRecords' class='cdc2-hidden-data'>";
}opHTML+=episodeHTML;
if(episodeIdx>=activeEpisodes.length-1){opHTML+="</div>";
}}}opHTML+="</div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.constructSidePanel=function(){var opHTML;
opHTML="";
opHTML+="<div class='cdc2-scrollable-interrogations'>";
opHTML+=this.constructTopEpisodesList(this.i18n.EPISODES_SINCE_LAST_VISIT+" ("+this.PMkrData.TOP_EPISODE_LIST.length+")");
opHTML+=this.constructHistoricalEpisodesList(this.i18n.HISTORICAL_INTERROGATIONS+" ("+this.PMkrData.SESSION_EPISODE_HIERARCHY.length+")");
opHTML+=this.constructHistoricalDevicesList(this.histPMkrData);
opHTML+="</div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.constructPDFViewerPanel=function(PDFTitle){var opHTML="",$pdfTitle=$("<div></div>").append(PDFTitle);
if(CERN_Platform.inMillenniumContext()){opHTML+="	<div id='cdc2-viewing-aperture'>				<div id='cdc2-pdf-control-bar'>					<table>						<tr>							<td id='cdc2-pdf-control-label'>"+$pdfTitle[0].outerHTML+"</td>							<td id='cdc2-pdf-control-pgs'>								<input id='cdc2-pdf-control-pref-page' class='cdc2-pdf-control-pref-page-disabled' type='button' alt='"+this.i18n.PREVIOUS_PAGE+"' title='"+this.i18n.PREVIOUS_PAGE+"'/>								<input id='cdc2-pdf-control-next-page' class='cdc2-pdf-control-next-page-disabled' type='button' alt='"+this.i18n.NEXT_PAGE+"' title='"+this.i18n.NEXT_PAGE+"'/>                    "+this.i18n.PAGE+"								<input type='text' id='cdc2-page-x-of-y-label' value='1' style='width:20px;' /> "+this.i18n.OF+"									 <b><span id='cdc2-indicator-total-pages'>"+1+"</span></b>							</td>							<td id='cdc2-pdf-control-btns'>								<div class='cdc2-pdf-control-button-spacer'>									<input id='cdc2-button-print-pdf' type='button' title='"+this.i18n.PRINT_THIS_PDF+"' alt='"+this.i18n.PRINT_THIS_PDF+"'/>								</div>								<div class='cdc2-pdf-control-button-spacer'>									<input id='cdc2-button-new-window-pdf' type='button' title='"+this.i18n.OPEN_IN_NEW_WINDOW+"' alt='"+this.i18n.OPEN_IN_NEW_WINDOW+"'>								</div>								<div class='cdc2-pdf-control-button-spacer'>									<input id='cdc2-forward-pdf-for-endorsement' type='button' title='"+this.i18n.SEND_FOR_ENDORSEMENT+"' alt='"+this.i18n.SEND_FOR_ENDORSEMENT+"'/>							</td>						</tr>					</table>				</div>"+this.generateScrollingPDFViewer()+"			</div>";
}else{opHTML+="	<div id='cdc2-viewing-aperture'>    			<div id='cdc2-pdf-control-bar'>        			<table>            			<tr>                			<td id='cdc2-pdf-control-label'>"+$pdfTitle[0].outerHTML+"</td>                			<td id='cdc2-pdf-control-btns'>                    			<div class='cdc2-pdf-control-button-spacer'>                        			<input id='cdc2-forward-pdf-for-endorsement' type='button' title='"+this.i18n.SEND_FOR_ENDORSEMENT+"' alt='"+this.i18n.SEND_FOR_ENDORSEMENT+"'/>                			</td>            			</tr>        			</table>    			</div>"+this.generateScrollingPDFViewer()+"			</div>";
}return opHTML;
};
CardiologyDevice_o2Component.prototype.generateScrollingPDFViewer=function(){var opHTML;
opHTML="";
if(CERN_Platform.inMillenniumContext()){opHTML+="	<div id='cdc2-overflow-container'> 				<div id='cdc2-scrollPadder'> 					<div id='cdc2-floating-page-arrow'>Page 1</div>					<div id='cdc2-pdf-renderer-0' class='cdc2-pdf-renderer'>						<div class='ToBeReplacedWithPDF'><OBJECT ID='cdc2-document-viewer-activeX-0' class='cdc2-document-viewer-activeX-hidden' CLASSID='clsid:BC7990A8-52CB-40B2-9E6C-CF0757D4D820' CODEBASE=''></OBJECT></div>					</div>				</div>			</div>";
}else{opHTML+="	<div id='cdc2-overflow-container'>				<div id='cdc2-scrollPadder'>					<div id='cdc2-floating-page-arrow'>Page 1</div>					<div id='cdc2-pdf-renderer-0' class='cdc2-pdf-renderer'>						<div id='cdc2-document-viewer-activeX-0' class='cdc2-document-viewer-activeX-hidden'>     					</div>					</div> 				</div>			</div>";
}return opHTML;
};
CardiologyDevice_o2Component.prototype.retrieveComponentData=function(){var component=arguments[0]?arguments[0]:this;
var criterion=component.getCriterion();
var request=new ComponentScriptRequest();
var loadTimer=new RTMSTimer(component.getComponentLoadTimerName(),criterion.category_mean);
request.setProgramName("PEX_GET_ICD_INFO");
request.setParameterArray(["^MINE^",component.getCriterion().person_id+".00","^18,m^","^^","1","0","1","1","0","1"]);
request.setAsyncIndicator(true);
request.setComponent(this);
request.setLoadTimer(loadTimer);
request.setResponseHandler(function(scriptReply){component.handleLoad(scriptReply);
});
request.performRequest();
};
CardiologyDevice_o2Component.prototype.showHoverData=function(eventData){eventData.data.tooltip.setX(eventData.pageX).setY(eventData.pageY).show();
};
CardiologyDevice_o2Component.prototype.enableManageDevicesMenuItem=function(){var manageDevices=this.getMenu().m_menuItemArr[0],thisComponent=this;
manageDevices.setIsDisabled(false);
manageDevices.setClickFunction(function(){var manageDevicesDialogId=thisComponent.getManageDevicesDialogId(),applyButton,cancelButton,manageDevicesDialog=MP_ModalDialog.modalDialogObjects[manageDevicesDialogId],$pdfViewer=$("#"+thisComponent.m_rootComponentNode.id+" .cdc2-pdf-renderer"),manageDevicesHtml=thisComponent.constructDeviceManagement();
$pdfViewer.hide();
if(manageDevicesDialog===undefined){applyButton=new ModalButton("cdc2-apply-changes");
cancelButton=new ModalButton("cdc2-cancel-changes");
manageDevicesDialog=new ModalDialog(manageDevicesDialogId);
applyButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.SUBMIT).setIsDithered(false).setCloseOnClick(true).setFocusInd(true).setOnClickFunction(function(){var personId=thisComponent.getCriterion().person_id,deviceIdx,associateDeviceCount=thisComponent.devicesToAssociate.length,disassociateDeviceCount=thisComponent.devicesToDisassociate.length;
if(associateDeviceCount!==0||disassociateDeviceCount!==0){for(deviceIdx=0;
deviceIdx<associateDeviceCount;
deviceIdx++){thisComponent.updateDeviceAssociation(thisComponent.devicesToAssociate[deviceIdx],personId,undefined,false);
}for(deviceIdx=0;
deviceIdx<disassociateDeviceCount;
deviceIdx++){thisComponent.updateDeviceAssociation(thisComponent.devicesToDisassociate[deviceIdx],0,undefined,false);
}thisComponent.devicesToAssociate=[];
thisComponent.devicesToDisassociate=[];
thisComponent.refreshComponent();
}$pdfViewer.show();
});
cancelButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.CANCEL).setIsDithered(false).setCloseOnClick(true).setOnClickFunction(function(){thisComponent.devicesToAssociate=[];
thisComponent.devicesToDisassociate=[];
$pdfViewer.show();
});
manageDevicesDialog.setLeftMarginPercentage(5).setRightMarginPercentage(5).setTopMarginPercentage(20).setBottomMarginPercentage(20).setHeaderTitle(i18n.discernabu.cardiology_device_integration_detail_o2.MANAGE_DEVICES).setIsBodySizeFixed(false).setIsFooterAlwaysShown(true).addFooterButton(applyButton).addFooterButton(cancelButton).setShowCloseIcon(true).setHeaderCloseFunction(function(){thisComponent.devicesToAssociate=[];
thisComponent.devicesToDisassociate=[];
$pdfViewer.show();
});
MP_ModalDialog.addModalDialogObject(manageDevicesDialog);
}MP_ModalDialog.showModalDialog(manageDevicesDialogId);
manageDevicesDialog.setBodyHTML(manageDevicesHtml);
thisComponent.setDeviceManagementEvents($("#"+manageDevicesDialog.getBodyElementId()));
});
};
CardiologyDevice_o2Component.prototype.constructDeviceManagement=function(){var manageDevicesHtml="";
manageDevicesHtml+=this.constructDeviceManagementDisassociation(this.getDevicePIDs());
manageDevicesHtml+=this.constructDeviceManagementAssociation();
return manageDevicesHtml;
};
CardiologyDevice_o2Component.prototype.constructDeviceManagementDisassociation=function(devices){var diassociationHtml="",deviceCount=devices.length,deviceIdx;
diassociationHtml+="<div class='cdc2-manage-dev-disassociation'>   <div class='cdc2-matching-device-title'>"+i18n.discernabu.cardiology_device_integration_detail_o2.PATIENT_DEVICES+"   </div>   <div class='cdc2-manage-dev-disassociation-devices'>";
for(deviceIdx=0;
deviceIdx<deviceCount;
deviceIdx++){diassociationHtml+=this.constructDevicePanel(devices[deviceIdx],i18n.discernabu.cardiology_device_integration_detail_o2.DISASSOCIATE,undefined,true);
}diassociationHtml+="   </div></div>";
return diassociationHtml;
};
CardiologyDevice_o2Component.prototype.constructDeviceManagementAssociation=function(){var associationHtml="";
associationHtml+="<div class='cdc2-manage-dev-association'>"+this.constructDeviceSearch("cdc2-search-device-content-manage-dev")+this.constructDeviceManagementAssistedAssociation()+"</div>";
return associationHtml;
};
CardiologyDevice_o2Component.prototype.constructDeviceManagementAssistedAssociation=function(){var thisComponent=this,containerClass="cdc2-manage-dev-assisted";
this.getSuggestedDevicesToAssociate(this.getCriterion().person_id,function(scriptReply){var $deviceManagement=$("div#"+thisComponent.getManageDevicesDialogId()+"body"),$assistedContainer=$deviceManagement.find("div."+containerClass),assistedContainerHtml="",scriptStatus=scriptReply.getStatus();
$assistedContainer.empty();
if(scriptStatus==="S"){assistedContainerHtml+="<div class='cdc2-matching-device-title'>"+i18n.discernabu.cardiology_device_integration_detail_o2.POSSIBLE_MATCHES+"</div><div class='cdc2-suggested-matches'>"+thisComponent.populateSuggestedMatches(scriptReply,true)+"</div>";
$assistedContainer.append(assistedContainerHtml);
$assistedContainer.find(".cdc2-manage-dev-undo").hide();
thisComponent.setDeviceManagementAssistedAssociationEvents($assistedContainer,$deviceManagement.find(".cdc2-manage-dev-disassociation"));
}else{if(scriptStatus==="Z"){assistedContainerHtml+="<div class='cdc2-matching-device-title'>"+i18n.discernabu.cardiology_device_integration_detail_o2.NO_DEVICE+"<br/>"+i18n.discernabu.cardiology_device_integration_detail_o2.NO_DEVICE_1+"</div>";
$assistedContainer.append(assistedContainerHtml);
}else{logger.logScriptCallError(this,scriptReply,"cardiology-device-detail-o2.js","constructDeviceManagementAssistedAssociation");
}}});
return"<div class='"+containerClass+"'></div>";
};
CardiologyDevice_o2Component.prototype.setDeviceManagementEvents=function($deviceManagement){this.setDeviceManagementDisassociationEvents($deviceManagement.find(".cdc2-manage-dev-disassociation"));
this.setDeviceManagementAssociationEvents($deviceManagement.find(".cdc2-search-device-content-manage-dev"),$deviceManagement.find(".cdc2-manage-dev-assisted"));
};
CardiologyDevice_o2Component.prototype.setDeviceManagementDisassociationEvents=function($disassociation){var thisComponent=this,$disassociateButtons=$disassociation.find(".cdc2-associate-device-button"),disassociateButtonCount=$disassociateButtons.length,disassociateButtonIdx,pulseGenIdKey="pulseGenId";
for(disassociateButtonIdx=0;
disassociateButtonIdx<disassociateButtonCount;
disassociateButtonIdx++){if(disassociateButtonIdx===0){$disassociateButtons.eq(disassociateButtonIdx).data(pulseGenIdKey,this.PMkrData.PULSE_GEN_ID);
}else{$disassociateButtons.eq(disassociateButtonIdx).data(pulseGenIdKey,this.histPMkrData[disassociateButtonIdx-1].PULSE_GEN_ID);
}}$disassociateButtons.click(function(){$disassociateButtons=$(this);
if($disassociateButtons.val()===i18n.discernabu.cardiology_device_integration_detail_o2.DISASSOCIATE){thisComponent.addDeviceToDisassociate($disassociateButtons.data(pulseGenIdKey));
$disassociateButtons.attr("value",i18n.discernabu.cardiology_device_integration_detail_o2.UNDO);
}else{thisComponent.removeDeviceToDisassociate($disassociateButtons.data(pulseGenIdKey));
$disassociateButtons.attr("value",i18n.discernabu.cardiology_device_integration_detail_o2.DISASSOCIATE);
}});
};
CardiologyDevice_o2Component.prototype.setDeviceManagementAssociationEvents=function($manualAssociation,$assistedAssociation){var $manualSearchButton=$manualAssociation.find(".cdc2-find-device-btn");
this.setDeviceManagementManualAssociationEvents($manualAssociation);
$manualSearchButton.click(function(){$assistedAssociation.hide();
});
};
CardiologyDevice_o2Component.prototype.setDeviceManagementManualAssociationEvents=function($manualAssociation){var thisComponent=this;
this.postProcessingSearchDevice(this,$manualAssociation,function(deviceId,reply){var $deviceManagementDialog=$("div#"+thisComponent.getManageDevicesDialogId()+"body"),$manualAssociationPanel=$deviceManagementDialog.find(".cdc2-search-device-content-manage-dev"),$associationButton=$manualAssociationPanel.find(".cdc2-associate-device-button"),$disassociation=$deviceManagementDialog.find(".cdc2-manage-dev-disassociation"),$undoButton,$devicePanel,deviceInfo,devicePID;
if($associationButton.length===0){deviceInfo=reply.getResponse().PULSE_GENS[0];
devicePID={SEX_CDF:deviceInfo.SEX_CDF,BIRTH_DT_TM_TXT:deviceInfo.BIRTH_DT_TM_TXT,SERIAL_TXT:deviceInfo.SERIAL_TXT,NAME_LAST:deviceInfo.NAME_LAST,NAME_FIRST:deviceInfo.NAME_FIRST};
$devicePanel=$(thisComponent.constructDevicePanel(devicePID,i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE,undefined,true));
$associationButton=$devicePanel.find(".cdc2-associate-device-button");
$manualAssociationPanel.find(".cdc2-search-results").empty();
}$associationButton.data("pulseGenId",deviceId);
if($associationButton.val()===i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE){thisComponent.onClickDeviceManagementAssociationButton($associationButton,$disassociation);
$undoButton=$associationButton;
$undoButton.click(function(){thisComponent.onClickDeviceManagementUndoButton($associationButton,$manualAssociationPanel.find(".cdc2-search-results"));
});
}});
};
CardiologyDevice_o2Component.prototype.setDeviceManagementAssistedAssociationEvents=function($assistedAssociation,$disassociation){var thisComponent=this,$associateButtons=$assistedAssociation.find(".cdc2-associate-device-button"),associateButtonsCount=$associateButtons.length,associateButtonIdx,$associateButton;
for(associateButtonIdx=0;
associateButtonIdx<associateButtonsCount;
associateButtonIdx++){$associateButton=$associateButtons.eq(associateButtonIdx);
$associateButton.data("pulseGenId",this.suggestedMatchPulseGenIDs[associateButtonIdx]);
$associateButton.click({scope:$associateButton,thisComponent:thisComponent,$assistedAssociation:$assistedAssociation,$disassociation:$disassociation},thisComponent.setAssociateButtonClickHandler);
}};
CardiologyDevice_o2Component.prototype.setAssociateButtonClickHandler=function(eventData){var $associateButton=eventData.data.scope,$assistedAssociation=eventData.data.$assistedAssociation,$disassociation=eventData.data.$disassociation,thisComponent=eventData.data.thisComponent;
if($associateButton.val()===i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE){thisComponent.onClickDeviceManagementAssociationButton($associateButton,$disassociation);
}else{thisComponent.onClickDeviceManagementUndoButton($associateButton,$assistedAssociation);
}};
CardiologyDevice_o2Component.prototype.onClickDeviceManagementAssociationButton=function($addDeviceButton,$disassociation){var $devicePanel,selectedClass="cdc2-manage-dev-association-selected";
if($addDeviceButton.hasClass(selectedClass)===false){$devicePanel=$addDeviceButton.parents(".cdc2-search-output");
$addDeviceButton.addClass(selectedClass).attr("value",i18n.discernabu.cardiology_device_integration_detail_o2.UNDO);
this.addDeviceToAssociate($addDeviceButton.data("pulseGenId"));
$devicePanel.detach();
$disassociation.append($devicePanel);
}};
CardiologyDevice_o2Component.prototype.onClickDeviceManagementUndoButton=function($undoButton,$undoTarget){var $devicePanel=$undoButton.parents(".cdc2-search-output"),suggestedPulseGenId=$undoButton.data("pulseGenId"),selectedClass="cdc2-manage-dev-association-selected";
$undoButton.removeClass(selectedClass).attr("value",i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE);
this.removeDeviceToAssociate(suggestedPulseGenId);
$devicePanel.detach();
$undoTarget.append($devicePanel);
};
CardiologyDevice_o2Component.prototype.addDeviceToAssociate=function(deviceId){this.addUniqueToArray(deviceId,this.devicesToAssociate);
};
CardiologyDevice_o2Component.prototype.removeDeviceToAssociate=function(deviceId){this.removeFromArray(deviceId,this.devicesToAssociate);
};
CardiologyDevice_o2Component.prototype.addDeviceToDisassociate=function(deviceId){this.addUniqueToArray(deviceId,this.devicesToDisassociate);
};
CardiologyDevice_o2Component.prototype.removeDeviceToDisassociate=function(deviceId){this.removeFromArray(deviceId,this.devicesToDisassociate);
};
CardiologyDevice_o2Component.prototype.addUniqueToArray=function(val,arr){if($.inArray(val,arr)===-1){arr.push(val);
}};
CardiologyDevice_o2Component.prototype.removeFromArray=function(val,arr){var valIdx=$.inArray(val,arr);
if(valIdx!==-1){arr.splice(valIdx,1);
}};
CardiologyDevice_o2Component.prototype.getManageDevicesDialogId=function(){return this.getStyles().getNameSpace()+"manageDevices"+this.getComponentId();
};
CardiologyDevice_o2Component.prototype.disableManageDevicesMenuItem=function(){var manageDevices=this.getMenu().m_menuItemArr[0];
manageDevices.setIsDisabled(true);
manageDevices.setClickFunction(function(){});
};
CardiologyDevice_o2Component.prototype.postProcessing=function(){var $self,$prevPagePDFButton,$nextPagePDFButton,$printAllPDFButton,$openInNewWinButton,$currentPgNumField,compId,compNs,thisComponent,$menuItem,$requestForEndorsement,$firstEpisode,$firstSession,firstEpisodeDisplayDocArg,firstSessionDisplayDocArg,setEpisodeButtonClickEventsRetval,setSessionButtonClickEventsRetval,$modeDetail;
if(this.alreadyPostProcessed===true){return false;
}this.alreadyPostProcessed=true;
$self=$("#"+this.m_rootComponentNode.id);
if($.isEmptyObject(this.PMkrData)===true){return false;
}compId=this.getComponentId();
compNs=this.getStyles().getNameSpace();
thisComponent=this;
if(thisComponent.DataLoaded){this.enableManageDevicesMenuItem();
}this.setShowHideClickEvents();
this.documentViewer=$("#cdc2-document-viewer-activeX-0")[0];
this.documentViewer.ShowToolBar=0;
this.documentViewer.ShowOutputWindow=1;
this.documentViewer.ImportReportType=4;
if(this.documentViewer.attachEvent){this.documentViewer.attachEvent("ExecuteComplete",this.fitDocumentToContainer);
}else{this.documentViewer.addEventListener("ExecuteComplete",this.fitDocumentToContainer,false);
}$requestForEndorsement=$self.find("#cdc2-forward-pdf-for-endorsement");
if(CERN_Platform.inMillenniumContext()){$prevPagePDFButton=$self.find("#cdc2-pdf-control-pref-page");
$nextPagePDFButton=$self.find("#cdc2-pdf-control-next-page");
$printAllPDFButton=$self.find("#cdc2-button-print-pdf");
$openInNewWinButton=$self.find("#cdc2-button-new-window-pdf");
$currentPgNumField=$self.find("#cdc2-page-x-of-y-label");
$prevPagePDFButton.click({scope:this,documentViewer:this.documentViewer,prevButtonObj:$prevPagePDFButton[0],nextButtonObj:$nextPagePDFButton[0],currPgNumField:$currentPgNumField[0]},this.prevPageDocument);
$nextPagePDFButton.click({scope:this,documentViewer:this.documentViewer,prevButtonObj:$prevPagePDFButton[0],nextButtonObj:$nextPagePDFButton[0],currPgNumField:$currentPgNumField[0]},this.nextPageDocument);
$printAllPDFButton.click({scope:this,documentViewer:this.documentViewer,triggerButtonObj:$printAllPDFButton[0]},this.printActivePDFDoc);
$openInNewWinButton.click({scope:this,documentViewer:this.documentViewer,triggerButtonObj:$openInNewWinButton[0]},this.openPDFInNewWindow);
$currentPgNumField.keyup({scope:this,documentViewer:this.documentViewer,prevButtonObj:$prevPagePDFButton[0],nextButtonObj:$nextPagePDFButton[0],currPgNumField:$currentPgNumField[0]},this.jumpToPage);
}$requestForEndorsement.click({scope:this,compID:compId,compNS:compNs,pdfTitle:$self.find("#cdc2-pdf-control-label")},this.requestForEndorsementDialog);
setEpisodeButtonClickEventsRetval=this.setEpisodeButtonClickEvents($prevPagePDFButton,$nextPagePDFButton,$currentPgNumField);
$firstEpisode=setEpisodeButtonClickEventsRetval.$firstEpisode;
firstEpisodeDisplayDocArg=setEpisodeButtonClickEventsRetval.firstEpisodeDisplayDocArg;
setSessionButtonClickEventsRetval=this.setSessionButtonClickEvents($prevPagePDFButton,$nextPagePDFButton,$currentPgNumField);
$firstSession=setSessionButtonClickEventsRetval.$firstSession;
firstSessionDisplayDocArg=setSessionButtonClickEventsRetval.firstSessionDisplayDocArg;
if($firstEpisode){setTimeout(function(){thisComponent.displayDocument({data:firstEpisodeDisplayDocArg});
},400);
}else{if($firstSession){setTimeout(function(){thisComponent.displayDocument({data:firstSessionDisplayDocArg});
},400);
}else{this.hideTitleToolbar();
$menuItem=$self.find(".cdc2-since-last-visit-episode-selected");
$menuItem.removeClass("cdc2-since-last-visit-episode-selected").addClass("cdc2-since-last-visit-episode");
}}this.constructImplantInfoTooltips(this.PMkrData,this.histPMkrData);
if(this.PMkrData.BRADY_SETTINGS[0]&&this.PMkrData.BRADY_SETTINGS[0].MODE_DISP){$modeDetail=$self.find(".cdc2-hdr-row-device-mode .cdc2-hdr-row-value");
this.modeTooltip=new MPageTooltip();
this.modeTooltip.setContent(this.constructHoverTable([this.i18n.SENSING,this.i18n.PACING],[this.ModeEqvs[this.PMkrData.BRADY_SETTINGS[0].MODE_DISP.charAt(0).toUpperCase()],this.ModeEqvs[this.PMkrData.BRADY_SETTINGS[0].MODE_DISP.charAt(1).toUpperCase()],"SensingPacingHover"]));
this.modeTooltip.setAnchor($modeDetail);
$modeDetail.mouseover({scope:this,tooltip:this.modeTooltip},this.showHoverData);
}};
CardiologyDevice_o2Component.prototype.constructImplantInfoTooltips=function(activeDevice,historicalDevices){var $self=$("#"+this.m_rootComponentNode.id),$implantDate=$self.find(".cdc2-hdr-row-device-implant-date .cdc2-hdr-row-value"),$histImplantDate=$self.find(".cdc2-historical-device-implant"),histDeviceIdx,histDevice,deviceTooltip=new MPageTooltip();
deviceTooltip.setContent(this.constructHoverTable([this.i18n.IMPLANTING_PHYSICIAN,this.i18n.FACILITY,this.i18n.CONTACT_DATA],[activeDevice.IMPLANTER_NAME,activeDevice.IMPLANTING_FACILITY_NAME,activeDevice.IMPLANTER_CONTACT_INFO]));
deviceTooltip.setAnchor($implantDate);
$implantDate.mouseover({tooltip:deviceTooltip},this.showHoverData);
for(histDeviceIdx=0;
histDeviceIdx<historicalDevices.length;
histDeviceIdx++){histDevice=historicalDevices[histDeviceIdx];
deviceTooltip=new MPageTooltip();
deviceTooltip.setContent(this.constructHoverTable([this.i18n.IMPLANTING_PHYSICIAN,this.i18n.FACILITY,this.i18n.CONTACT_DATA],[histDevice.IMPLANTER_NAME,histDevice.IMPLANTING_FACILITY_NAME,histDevice.IMPLANTER_CONTACT_INFO]));
deviceTooltip.setAnchor($histImplantDate.eq(histDeviceIdx));
$histImplantDate.eq(histDeviceIdx).mouseover({tooltip:deviceTooltip},this.showHoverData);
}};
CardiologyDevice_o2Component.prototype.setEpisodeButtonClickEvents=function($prevPagePDFButton,$nextPagePDFButton,$currentPgNumField){var thisComponent=this,$self=$("#"+this.m_rootComponentNode.id),$firstEpisode,firstEpisodeDisplayDocArg;
$.each(this.elementToDocUID,function(index){var $episodeObject=$self.find("#"+index),clickEventArg;
if(CERN_Platform.inMillenniumContext()){clickEventArg={scope:thisComponent,parentClass:thisComponent,buttonObject:$self.find("#"+index),docUID:thisComponent.elementToDocUID[index].DocUID,docLen:thisComponent.elementToDocUID[index].DocLen,documentViewer:thisComponent.documentViewer,prevButtonObj:$prevPagePDFButton[0],nextButtonObj:$nextPagePDFButton[0],currPgNumField:$currentPgNumField[0],subTimerName:thisComponent.criterion.category_mean};
}else{clickEventArg={scope:thisComponent,parentClass:thisComponent,buttonObject:$self.find("#"+index),docUID:thisComponent.elementToDocUID[index].DocUID,docLen:thisComponent.elementToDocUID[index].DocLen,documentViewer:thisComponent.documentViewer,subTimerName:thisComponent.criterion.category_mean};
}$episodeObject.click(clickEventArg,thisComponent.displayDocument);
if(!$firstEpisode){$firstEpisode=$episodeObject;
firstEpisodeDisplayDocArg=clickEventArg;
}});
return{$firstEpisode:$firstEpisode,firstEpisodeDisplayDocArg:firstEpisodeDisplayDocArg};
};
CardiologyDevice_o2Component.prototype.setSessionButtonClickEvents=function($prevPagePDFButton,$nextPagePDFButton,$currentPgNumField){var sessionToDocUIDIdx,$self=$("#"+this.m_rootComponentNode.id),$firstSession,firstSessionDisplayDocArg,clickEventArg,uniqueSessionDoc,$sessionContainer;
for(sessionToDocUIDIdx=0;
sessionToDocUIDIdx<this.sessionToDocUID.length;
sessionToDocUIDIdx++){uniqueSessionDoc=this.sessionToDocUID[sessionToDocUIDIdx];
$sessionContainer=$self.find("#"+uniqueSessionDoc.nodeName);
if(CERN_Platform.inMillenniumContext()){clickEventArg={scope:this,parentClass:this,buttonObject:$sessionContainer,docUID:uniqueSessionDoc.docUID,docLen:uniqueSessionDoc.docLen,documentViewer:this.documentViewer,prevButtonObj:$prevPagePDFButton[0],nextButtonObj:$nextPagePDFButton[0],currPgNumField:$currentPgNumField[0],subTimerName:this.criterion.category_mean};
}else{clickEventArg={scope:this,parentClass:this,buttonObject:$sessionContainer,docUID:uniqueSessionDoc.docUID,docLen:uniqueSessionDoc.docLen,documentViewer:this.documentViewer,subTimerName:this.criterion.category_mean};
}$sessionContainer.find("span").click(clickEventArg,this.displayDocument);
if(!$firstSession){$firstSession=$sessionContainer.find("span");
firstSessionDisplayDocArg=clickEventArg;
}}return{$firstSession:$firstSession,firstSessionDisplayDocArg:firstSessionDisplayDocArg};
};
CardiologyDevice_o2Component.prototype.setShowHideClickEvents=function(){var thisComponent=this,$self=$("#"+this.m_rootComponentNode.id),$showMoreButton,$expandCollapseCarrots,elemIdx,elemCount,elem;
$showMoreButton=$self.find(".cdc2-more-button");
elemCount=$showMoreButton.length;
for(elemIdx=0;
elemIdx<elemCount;
elemIdx++){elem=$showMoreButton.eq(elemIdx);
elem.click({triggerObj:elem},thisComponent.showRemaining);
}$expandCollapseCarrots=$self.find(".cdc2-expColCarrot");
elemCount=$expandCollapseCarrots.length;
for(elemIdx=0;
elemIdx<elemCount;
elemIdx++){elem=$expandCollapseCarrots.eq(elemIdx);
elem.click({triggerObj:elem,relatedDIV:$self.find("#"+elem[0].parentNode.id+"Children")},thisComponent.toggleExpand);
}};
CardiologyDevice_o2Component.prototype.requestForEndorsementDialog=function(eventData){var compNs,compId,requestEndorsementBodyText,requestEndorsementDialogId,sendButton,cancelButton,requestEndorsementDialog,currentDocUID,currentDocDesc,warningMessage,disModal,warningMessageHTML,selectedReceiver,RTFMessage,scriptParam,scriptRequest,$subjectField,$messageField,$receiverDiv,$receiverSearchBox,$pdfTitle;
var thisComponent=eventData.data.scope;
requestEndorsementBodyText="";
thisComponent.requestEndorsementSequence=1;
compNs=eventData.data.compNS;
compId=eventData.data.compID;
requestEndorsementDialogId=compNs+"requestForEndorsement"+compId+"n"+thisComponent.requestEndorsementSequence;
$pdfTitle=eventData.data.pdfTitle;
currentDocDesc=$pdfTitle[0].innerText;
currentDocUID=eventData.data.scope.activeDocID;
$(".cdc2-pdf-renderer").css("visibility","hidden");
sendButton=new ModalButton("cdc2-confirm-send");
cancelButton=new ModalButton("cdc2-confirm-cancel");
requestEndorsementDialog=new ModalDialog(requestEndorsementDialogId);
thisComponent.modalArr.push(requestEndorsementDialogId);
requestEndorsementBodyText+="<div class = 'cdc2-request-endorsement-dialog'><div class = 'cdc2-request-endorsement-to-field'><div class='cdc2-request-endorsement-cont'><div title='"+i18n.discernabu.cardiology_device_integration_detail_o2.TO+"' class = 'cdc2-request-endorsement-to-label'><span>*</span>"+i18n.discernabu.cardiology_device_integration_detail_o2.TO+"</div></div><div class='cdc2-request-endorsement-input'><form onsubmit='return false'><div id = 'cdc2-request-endorsement-receiver-id"+compId+"'></div></form></div></div><br /><div class = 'cdc2-request-endorsement-subject-field'><div class='cdc2-request-endorsement-cont'><div title='"+i18n.discernabu.cardiology_device_integration_detail_o2.SUBJECT+"' class = 'cdc2-request-endorsement-subject-label'><span>*</span>"+i18n.discernabu.cardiology_device_integration_detail_o2.SUBJECT+"</div></div><div class='cdc2-request-endorsement-input'> <input id = 'cdc2-request-endorsement-subject' class = 'cdc2-request-endorsement-text-box' type = 'text'></div></div><br /><div class='cdc2-request-endorsement-msg-field'><div class='cdc2-request-endorsement-cont'><div title='"+i18n.discernabu.cardiology_device_integration_detail_o2.MESSAGE+"' class = 'cdc2-request-endorsement-text'>"+i18n.discernabu.cardiology_device_integration_detail_o2.MESSAGE+"</div></div><div class='cdc2-request-endorsement-input'><textarea id = 'cdc2-request-endorsement-text' class = 'cdc2-request-endorsement-text-area'></textarea></div></div></div></div>";
cancelButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.CANCEL).setIsDithered(false).setCloseOnClick(true).setOnClickFunction(function(){thisComponent.addrBookSearchControl.close();
$(".cdc2-pdf-renderer").css("visibility","visible");
});
sendButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.SEND).setIsDithered(false).setCloseOnClick(false).setFocusInd(true).setOnClickFunction(function(){selectedReceiver=thisComponent.addrBookSearchControl.getList().getSelectedItem();
$subjectField=$(".cdc2-request-endorsement-dialog").find("#cdc2-request-endorsement-subject");
$messageField=$(".cdc2-request-endorsement-dialog").find("#cdc2-request-endorsement-text");
if(selectedReceiver!==null&&$subjectField.val()!==""){if($messageField!==null){RTFMessage="{\\rtf1\\ansi\\deff0\\ "+$messageField.val()+" }";
}else{RTFMessage="{\\rtf1\\ansi\\deff0\\ "+currentDocDesc+" }";
}scriptParam=["^MINE^",thisComponent.getCriterion().encntr_id+".0",thisComponent.getCriterion().person_id+".0",thisComponent.getCriterion().provider_id+".0",selectedReceiver.PERSON_ID+".0","^"+currentDocUID+"^","^"+currentDocDesc+"^","^"+$subjectField.val()+"^","^"+RTFMessage+"^"];
scriptRequest=new ScriptRequest();
scriptRequest.setProgramName("MP_SEND_DOC_TO_INBOX");
scriptRequest.setParameterArray(scriptParam);
scriptRequest.setAsyncIndicator(true);
scriptRequest.setResponseHandler(function(reply){thisComponent.handleSendForEndorsementReply(reply);
});
scriptRequest.performRequest();
MP_ModalDialog.closeModalDialog(requestEndorsementDialogId);
$(".cdc2-pdf-renderer").css("visibility","visible");
}else{if(selectedReceiver===null||$subjectField.val()===""){warningMessage="";
if(selectedReceiver===null&&$subjectField.val()===""){warningMessage+=i18n.discernabu.cardiology_device_integration_detail_o2.TO+" "+i18n.discernabu.cardiology_device_integration_detail_o2.AND+" "+i18n.discernabu.cardiology_device_integration_detail_o2.SUBJECT+" "+i18n.discernabu.cardiology_device_integration_detail_o2.ENDORSEMENT_MANDATORY_FIELDS;
}else{if(selectedReceiver===null){warningMessage+=i18n.discernabu.cardiology_device_integration_detail_o2.TO+" "+i18n.discernabu.cardiology_device_integration_detail_o2.ENDORSEMENT_MANDATORY_FIELD;
}else{warningMessage+=i18n.discernabu.cardiology_device_integration_detail_o2.SUBJECT+" "+i18n.discernabu.cardiology_device_integration_detail_o2.ENDORSEMENT_MANDATORY_FIELD;
}}warningMessageHTML="<div id = 'cdc2-modal-dialog-warning-message-container' class='cdc2-request-endorsement-warning-bg'><div id = 'cdc2-modal-dialog-warning-info-icon' class='cdc2-request-endorsement-warning-info-icon'><img src = '"+thisComponent.getCriterion().static_content+"/images/4017_24.png' alt='information'/></div><div id = 'cdc2-modal-dialog-warning-message' class='cdc2-request-endorsement-warning-text'>"+warningMessage+"</div></div>";
$(".cdc2-request-endorsement-warning-bg").remove();
$(".cdc2-request-endorsement-dialog").append(warningMessageHTML);
}}});
requestEndorsementDialog.setLeftMarginPercentage(33).setRightMarginPercentage(35).setTopMarginPercentage(20).setBottomMarginPercentage(20).setHeaderTitle(i18n.discernabu.cardiology_device_integration_detail_o2.ENDORSEMENT_TITLE).setIsBodySizeFixed(false).setIsFooterAlwaysShown(true).addFooterButton(sendButton).setShowCloseIcon(true).addFooterButton(cancelButton).setHeaderCloseFunction(function(){$(".cdc2-pdf-renderer").css("visibility","visible");
});
MP_ModalDialog.addModalDialogObject(requestEndorsementDialog);
MP_ModalDialog.showModalDialog(requestEndorsementDialogId);
disModal=MP_ModalDialog.retrieveModalDialogObject(requestEndorsementDialogId);
disModal.setBodyHTML(requestEndorsementBodyText);
$receiverDiv=$(".cdc2-request-endorsement-dialog").find("#cdc2-request-endorsement-receiver-id"+compId);
thisComponent.addrBookSearchControl=new CardiologyDevice_o2Component.AddressBookSearch($receiverDiv[0],thisComponent.getCriterion().person_id,thisComponent.getCriterion().encntr_id);
$receiverSearchBox=$(".cdc2-request-endorsement-to-field").find(".search-box");
$receiverSearchBox.focus();
};
CardiologyDevice_o2Component.prototype.handleSendForEndorsementReply=function(reply){if(reply.m_responseData.STATUS_DATA.STATUS==="F"){logger.logScriptCallError(null,reply.m_error,"cardiology detail send for endorsement","handleSendForEndorsementReply");
logger.logError(this.getProgramName()+" failed: "+reply.m_error);
}};
CardiologyDevice_o2Component.prototype.hideTitleToolbar=function(){document.getElementById("cdc2-pdf-control-label").innerHTML="<div>"+this.i18n.NO_EPISODE_PDF+"</div>";
$("#cdc2-pdf-control-btns").hide();
if(CERN_Platform.inMillenniumContext()){$("#cdc2-pdf-control-pgs").hide();
}};
CardiologyDevice_o2Component.prototype.preProcessing=function(){this.addMenuItems();
};
CardiologyDevice_o2Component.prototype.addMenuItems=function(){var compMenu,compId,manageDevices;
compMenu=this.getMenu();
compId=this.getComponentId();
if(this.isDisplayable()===true){manageDevices=new MenuSelection("manageDevices"+compId);
manageDevices.setLabel(i18n.discernabu.cardiology_device_integration_detail_o2.MANAGE_DEVICES+"...");
manageDevices.setIsDisabled(true);
compMenu.addMenuItem(manageDevices);
}};
CardiologyDevice_o2Component.prototype.postProcessingSearchDevice=function(component,$self,associateFunc){var $serialText,$searchDeviceButton,$searchResults,$searchPulseGenId,associateDevice,confirmAssociation,currentPersonId=component.getCriterion().person_id,thisComponent=this,searchDeviceReply;
if(!$self){$self=$("#"+this.m_rootComponentNode.id);
}$serialText=$self.find(component.writeUniqueID("SerialText",component,"#"));
$searchDeviceButton=$self.find(component.writeUniqueID("SearchDeviceButton",component,"#"));
$searchResults=$self.find(component.writeUniqueID("SearchResults",component,"#"));
$searchPulseGenId=$(component.writeUniqueID("DevicePGId",component,"#"));
associateDevice=component.writeUniqueID("AssociateDevice",component,"#");
confirmAssociation=component.writeUniqueID("ConfirmAssociation",component,"#");
if($serialText.data("Loaded")&&$serialText.data("Loaded")===1){return;
}$serialText.data("Loaded",1);
$serialText.blur(function(){if(this.value===""){this.value=i18n.discernabu.cardiology_device_integration_detail_o2.PACEMAKER_SN;
$serialText.css("color","#9f9f9f");
}});
$serialText.focus(function(){if(this.value===i18n.discernabu.cardiology_device_integration_detail_o2.PACEMAKER_SN){this.value="";
$serialText.css("color","#000");
}});
$searchDeviceButton.click(function(){var deviceText=$serialText.val();
if(deviceText!==i18n.discernabu.cardiology_device_integration_detail_o2.PACEMAKER_SN&&deviceText!==""){$searchResults.html("<div></div>");
component.performManualDeviceSearch(deviceText,function(reply){searchDeviceReply=reply;
component.handleSearchDevice(reply);
});
}else{$searchResults.html("<div class='cdc2-device-search-errorMsg'> <span>"+i18n.discernabu.cardiology_device_integration_detail_o2.NO_MATCHES+"</span></div>");
}});
$searchResults.on("click",associateDevice,function(){if(associateFunc){associateFunc($searchPulseGenId.val());
}else{component.updateDeviceAssociation($searchPulseGenId.val(),currentPersonId,function(reply){component.handleAssociate(reply);
});
}});
$searchResults.on("click",confirmAssociation,function(){var confirmAssociationDialog,modalDialogId=component.writeUniqueID("ConfirmAssociationDialog",component,""),assocButton,cancelButton;
confirmAssociationDialog=MP_ModalDialog.retrieveModalDialogObject(modalDialogId);
if(!confirmAssociationDialog){assocButton=new ModalButton("cdc2-confirm-association");
cancelButton=new ModalButton("cdc2-confirm-cancel");
cancelButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.CANCEL).setIsDithered(false).setCloseOnClick(true);
assocButton.setText(i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE).setIsDithered(false).setCloseOnClick(true).setFocusInd(true).setOnClickFunction(function(){var deviceId=$(component.writeUniqueID("DevicePGId",component,"#")).val();
if(associateFunc){associateFunc(deviceId,searchDeviceReply);
}else{if(deviceId!==""){thisComponent.updateDeviceAssociation(deviceId,currentPersonId,function(reply){component.handleAssociate(reply);
});
}}});
confirmAssociationDialog=new ModalDialog(modalDialogId);
confirmAssociationDialog.setLeftMarginPercentage(33).setRightMarginPercentage(33).setTopMarginPercentage(20).setBottomMarginPercentage(20).setHeaderTitle(i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE_PACEMAKER).setIsBodySizeFixed(false).setIsFooterAlwaysShown(true).addFooterButton(assocButton).addFooterButton(cancelButton);
MP_ModalDialog.addModalDialogObject(confirmAssociationDialog);
}MP_ModalDialog.showModalDialog(modalDialogId);
confirmAssociationDialog.setBodyHTML(component.alreadyAssociatedMessage);
});
};
CardiologyDevice_o2Component.prototype.postProcessingSuggestedMatches=function(component,$self){var $suggMatchResults,thisComponent=this;
if(!$self){$self=$("#"+this.m_rootComponentNode.id);
}$suggMatchResults=$self.find(".cdc2-sugg-match-results");
if($suggMatchResults.data("Loaded")&&$suggMatchResults.data("Loaded")===1){return;
}$suggMatchResults.data("Loaded",1);
$suggMatchResults.delegate(".cdc2-search-output","click",function(event){if($(event.target).hasClass("cdc2-associate-device-button")){thisComponent.updateDeviceAssociation(component.suggestedMatchPulseGenIDs[$(this).index()],thisComponent.getCriterion().person_id,function(reply){thisComponent.handleAssociate(reply);
});
}});
};
CardiologyDevice_o2Component.prototype.updateDeviceAssociation=function(pulseGenId,personId,responseHandler,async){var request=new ScriptRequest();
request.setProgramName("PEX_UPDATE_DEVICE_ASSOCIATION").setParameterArray(["^MINE^",pulseGenId+".00",personId+".00"]).setAsyncIndicator(async!==undefined?async:true).setResponseHandler(function(reply){if(responseHandler!==undefined){responseHandler(reply);
}}).performRequest();
};
CardiologyDevice_o2Component.prototype.activateDevice=function(pulseGenId,responseHandler){var request=new ScriptRequest();
request.setProgramName("PEX_UPDT_DEVICE_REMOVAL_DT_TM").setParameterArray(["^MINE^",pulseGenId+".00","1",""]).setAsyncIndicator(true).setResponseHandler(function(reply){if(responseHandler!==undefined){responseHandler(reply);
}}).performRequest();
};
CardiologyDevice_o2Component.prototype.inactivateDevice=function(pulseGenId,removalDtTm,responseHandler){var request=new ScriptRequest();
request.setProgramName("PEX_UPDT_DEVICE_REMOVAL_DT_TM").setParameterArray(["^MINE^",pulseGenId+".00","0",removalDtTm.toUTCString()]).setAsyncIndicator(true).setResponseHandler(function(reply){if(responseHandler!==undefined){responseHandler(reply);
}}).performRequest();
};
CardiologyDevice_o2Component.prototype.handleCallbackLogic=function(reply,sZMessage,ZSearchDevice,fSuccess,fZ,fFinally){var component=this;
var errMsg=[];
var opHTML="";
var compId=component.getComponentId();
var cdc2MessageType=MPageControls.AlertMessage.MessageTypes.INFORMATION;
var template=MPageControls.getDefaultTemplates().messageBar;
var cdc2DisclaimerElement;
var disclaimerText="";
if(reply.getStatus()==="S"){if(fSuccess){fSuccess(reply);
}else{if(this.alertMessage!==null){this.alertMessage.close();
}component.retrieveComponentData(component);
}}else{if(reply.getStatus()==="Z"){if(fZ){fZ(reply);
}else{this.initComponentVars();
this.disableManageDevicesMenuItem();
if(sZMessage){component.createPaceMakerDetailCompDisclaimer(compId);
disclaimerText+="<span>"+sZMessage+"</span>";
cdc2DisclaimerElement=$("#opPacemakerDetailDisclaimer"+compId);
if(this.alertMessage===null){this.alertMessage=new MPageControls.AlertMessage(cdc2DisclaimerElement,template,cdc2MessageType);
this.alertMessage.render(disclaimerText);
}else{this.alertMessage.getElement().show();
}}opHTML+="<div class = 'cdc2-cardiology-component-body'>";
if(ZSearchDevice&4){opHTML+=component.constructSuggestedMatchesPlaceholder();
}if(ZSearchDevice&1){opHTML+=component.constructDeviceSearch("cdc2-search-device-content-faceup");
}opHTML+="</div>";
component.finalizeComponent(opHTML,component.isLineNumberIncluded()?"(0)":"");
if(ZSearchDevice&2){component.postProcessingSearchDevice(component);
}if(ZSearchDevice&8){component.postProcessingSuggestedMatches(component);
}}}else{MP_Util.LogScriptCallError(component,reply,"master-components.js","handleLoad");
errMsg=component.getErrorMessage(reply);
component.finalizeComponent(MP_Util.HandleErrorResponse(component.getStyles().getNameSpace(),errMsg.join("")),component.isLineNumberIncluded()?"(0)":"");
}}if(fFinally){fFinally(reply);
}};
CardiologyDevice_o2Component.prototype.createPaceMakerDetailCompDisclaimer=function(compId){var cdc2DisclaimerDiv=_g("opPacemakerDetailDisclaimer"+compId);
var contentNodeHd;
var contentNode;
if(cdc2DisclaimerDiv){return;
}cdc2DisclaimerDiv=Util.cep("div",{className:"message-container",id:"opPacemakerDetailDisclaimer"+compId});
contentNode=this.getRootComponentNode();
if(contentNode){contentNodeHd=_gbt("H2",contentNode)[0];
Util.ia(cdc2DisclaimerDiv,contentNodeHd);
}};
CardiologyDevice_o2Component.prototype.getErrorMessage=function(reply){var errorMessage=[],recordData=reply.getResponse(),statusData=recordData.STATUS_DATA,i18nCore=i18n.discernabu,ss=null,subStatusIdx,subStatusLen;
errorMessage.push("<b>",i18nCore.DISCERN_ERROR,"</b><br /><ul><li>",i18nCore.STATUS,": ",reply.status,"</li><li>",i18nCore.REQUEST,": ",reply.requestText,"</li>");
if(statusData.SUBEVENTSTATUS.length&&statusData.SUBEVENTSTATUS.length>0){for(subStatusIdx=0,subStatusLen=statusData.SUBEVENTSTATUS.length;
subStatusIdx<subStatusLen;
subStatusIdx++){ss=statusData.SUBEVENTSTATUS[subStatusIdx];
errorMessage.push("<li>",i18nCore.ERROR_OPERATION,": ",ss.OPERATIONNAME,"</li><li>",i18nCore.ERROR_OPERATION_STATUS,": ",ss.OPERATIONSTATUS,"</li><li>",i18nCore.ERROR_TARGET_OBJECT,": ",ss.TARGETOBJECTNAME,"</li><li>",i18nCore.ERROR_TARGET_OBJECT_VALUE,": ",ss.TARGETOBJECTVALUE,"</li>");
}}else{if(statusData.SUBEVENTSTATUS.length===undefined){ss=statusData.SUBEVENTSTATUS;
errorMessage.push("<li>",i18nCore.ERROR_OPERATION,": ",ss.OPERATIONNAME,"</li><li>",i18nCore.ERROR_OPERATION_STATUS,": ",ss.OPERATIONSTATUS,"</li><li>",i18nCore.ERROR_TARGET_OBJECT,": ",ss.TARGETOBJECTNAME,"</li><li>",i18nCore.ERROR_TARGET_OBJECT_VALUE,": ",ss.TARGETOBJECTVALUE,"</li>");
}}errorMessage.push("</ul>");
return errorMessage;
};
CardiologyDevice_o2Component.prototype.handleAssociate=function(reply){var component=this;
var msg=i18n.discernabu.cardiology_device_integration_detail_o2.UNABLE_TO_ADD_DEVICE;
component.handleCallbackLogic(reply,msg,1);
};
CardiologyDevice_o2Component.prototype.handleDisassociate=function(reply){var component=this;
var msg=i18n.discernabu.cardiology_device_integration_detail_o2.UNABLE_TO_REMOVE_DEVICE;
component.handleCallbackLogic(reply,msg,1);
};
CardiologyDevice_o2Component.prototype.handleLoad=function(reply){var component=reply.getComponent();
var msgSrc=i18n.discernabu.cardiology_device_integration_detail_o2;
var msg=msgSrc.NO_DEVICE+" "+msgSrc.NO_DEVICE_1;
component.handleCallbackLogic(reply,msg,15,component.renderOnCallback,null,function(replyCallbackLogic){if(replyCallbackLogic.getStatus()==="Z"){component.getSuggestedDevicesToAssociate(component.getCriterion().person_id);
}});
};
CardiologyDevice_o2Component.prototype.getSuggestedDevicesToAssociate=function(personId,responseHandler){var thisComponent=this;
var request=new ScriptRequest();
request.setProgramName("PEX_GET_DEVICES_TO_ASSOCIATE").setParameterArray(["^MINE^","2","1","^^",personId]).setAsyncIndicator(true).setResponseHandler(function(reply){if(responseHandler===undefined){thisComponent.handleLoadingSuggestedMatches(reply);
}else{responseHandler(reply);
}}).performRequest();
};
CardiologyDevice_o2Component.prototype.performManualDeviceSearch=function(pulseGenSerial,responseHandler){var request=new ScriptRequest();
request.setProgramName("PEX_GET_DEVICES_TO_ASSOCIATE").setParameterArray(["^MINE^","1","1","^"+encodeURIComponent(pulseGenSerial)+"^"]).setAsyncIndicator(true).setResponseHandler(function(reply){if(responseHandler!==undefined){responseHandler(reply);
}}).performRequest();
};
CardiologyDevice_o2Component.prototype.writeUniqueID=function(name,component,useAsSelector){var compNs=component.getStyles().getNameSpace();
var compId=component.getComponentId();
var start="";
if(useAsSelector){start="#";
}return start+compNs+name+compId;
};
CardiologyDevice_o2Component.prototype.handleLoadingSuggestedMatches=function(reply){var suggmatchVal,i18nCore=i18n.discernabu.cardiology_device_integration_detail_o2,component=this;
component.handleCallbackLogic(reply,"",0,function(replyCallbackLogic){suggmatchVal=component.populateSuggestedMatches(replyCallbackLogic);
},function(){suggmatchVal="<div class = 'cdc2-no-results-errorMsg'><b>"+i18nCore.NO_DEVICE+"</b><br />"+i18nCore.NO_DEVICE_1+"</div>";
},function(){$(".cdc2-sugg-match-results").html(suggmatchVal);
});
};
CardiologyDevice_o2Component.prototype.renderOnCallback=function(reply){var recordData=reply.getResponse();
var component=reply.getComponent();
var renderTimer=null;
var i18nCore=i18n.discernabu;
var secTitle;
try{renderTimer=MP_Util.CreateTimer(component.getComponentRenderTimerName(),component.getCriterion().category_mean);
secTitle=Util.Style.g("sec-total",component.getRootComponentNode(),"span");
secTitle[0].innerHTML=i18nCore.RENDERING_DATA+"...";
component.renderComponent(recordData);
if(component.Episodes.length>0||component.Sessions.length>0){component.alreadyPostProcessed=false;
component.postProcessing();
}}catch(err){logger.logJSError(err,component,"master-components.js","handleLoad");
if(renderTimer){renderTimer.Abort();
renderTimer=null;
}throw err;
}finally{if(renderTimer){renderTimer.Stop();
}}};
CardiologyDevice_o2Component.prototype.constructDeviceSearch=function(containerClass){var opHTML,i18nCardiology=i18n.discernabu.cardiology_device_integration_detail_o2;
opHTML="<div class='"+containerClass+"'>   <div class='cdc2-search-device-section'>       <div class = 'cdc2-matching-device-title'>"+i18nCardiology.MANUAL_ASSOCIATION+":       </div>       <div class='cdc2-search-device-inputs'>           <div class='cdc2-manual-search-input'>               <input type='text' name='cdc2-serial-text' id='"+this.writeUniqueID("SerialText",this,"")+"' class='cdc2-device-serial-text' value='"+i18n.discernabu.cardiology_device_integration_detail_o2.PACEMAKER_SN+"'>           </div>           <div class='cdc2-manual-search-button'>               <input type='button' name='cdc2-search-device-button' id='"+this.writeUniqueID("SearchDeviceButton",this,"")+"' class='cdc2-find-device-btn' value='"+i18nCardiology.FIND+"' />           </div>           <input type='hidden' name='cdc2-search-device-pg-id' id='"+this.writeUniqueID("DevicePGId",this,"")+"' value='' />           <input type='hidden' name='cdc2-search-device-pers-id' id='"+this.writeUniqueID("PersonId",this,"")+"' value='' />           <input type='hidden' name='cdc2-search-device-alias' id='"+this.writeUniqueID("DeviceAlias",this,"")+"' value='' />           <input type='hidden' name='cdc2-search-device-alias-type' id='"+this.writeUniqueID("DeviceAliasType",this,"")+"' value='' />           <input type='hidden' name='cdc2-confirm-message' id='"+this.writeUniqueID("confirmMessage",this,"")+"' value='' />       </div>   </div>   <div id='"+this.writeUniqueID("SearchResults",this,"")+"' class='cdc2-search-results'></div></div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.constructSuggestedMatchesPlaceholder=function(){var opHTML="<div class='cdc2-sugg-match-content'>   <div class='cdc2-sugg-match-section'>       <div class='cdc2-matching-device-title'>"+i18n.discernabu.cardiology_device_integration_detail_o2.POSSIBLE_MATCHES+"       </div>   </div>   <div class='cdc2-sugg-match-results'></div></div>";
return opHTML;
};
CardiologyDevice_o2Component.prototype.populateSuggestedMatches=function(reply){var jsonData=reply.getResponse().PULSE_GENS,suggmatchVal="",suggmatchIdx=0,i18nCardiology=i18n.discernabu.cardiology_device_integration_detail_o2;
for(suggmatchIdx=0;
suggmatchIdx<jsonData.length;
suggmatchIdx++){suggmatchVal+=this.constructDevicePanel(jsonData[suggmatchIdx],i18nCardiology.ASSOCIATE,undefined);
this.suggestedMatchPulseGenIDs[suggmatchIdx]=parseInt(jsonData[suggmatchIdx].PULSE_GEN_ID,10);
}return suggmatchVal;
};
CardiologyDevice_o2Component.prototype.formatDOB=function(dbDOB){var printPatientDOB=dbDOB.substring(4,6)+"/"+dbDOB.substring(6,8)+"/"+dbDOB.substring(0,4);
return printPatientDOB;
};
CardiologyDevice_o2Component.prototype.handleSearchDevice=function(reply){var compNs=this.getStyles().getNameSpace(),compId=this.getComponentId(),jsonData,searchResultVal="",pulseGenId="",replyStatus=reply.getStatus(),existingPersonId="",existingPersonAlias="",existingPersonAliasType="",existingPatientFullName="",existingFullAlias="";
if(replyStatus==="S"){jsonData=reply.getResponse().PULSE_GENS;
pulseGenId=parseInt(jsonData[0].PULSE_GEN_ID,10);
existingPersonId=parseInt(jsonData[0].PERSON_ID,10);
existingPersonAlias=jsonData[0].MRN_NUMBER;
existingPersonAliasType=jsonData[0].MRN_TYPE;
existingPatientFullName=jsonData[0].EXISTING_NAME;
if(existingPersonAlias!==""&&existingPersonAliasType!==""){existingFullAlias=" ("+existingPersonAliasType+": "+existingPersonAlias+"). ";
}if(existingPersonId===""||existingPersonId==="0"||existingPersonId===0){searchResultVal=this.constructDevicePanel(jsonData[0],i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE,compNs+"AssociateDevice"+compId);
}else{this.alreadyAssociatedMessage="<div class='cdc2-search-info-icon'>   <img src='"+this.getCriterion().static_content+"/images/4017_24.png' alt='information'/></div>";
if(existingPersonAlias===""){this.alreadyAssociatedMessage+="<div class='cdc2-associate-info-text'>"+i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATION_WARNING_NO_MRN.replace("{0}",existingPatientFullName);
}else{this.alreadyAssociatedMessage+="<div class='cdc2-associate-info-text'>"+i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATION_WARNING.replace("{0}",existingPatientFullName).replace("{1}",existingPersonAliasType).replace("{2}",existingPersonAlias);
}searchResultVal=this.alreadyAssociatedMessage+"<br/><a id='"+compNs+"ConfirmAssociation"+compId+"'>"+i18n.discernabu.cardiology_device_integration_detail_o2.ASSOCIATE_ANYWAY+"</a></div>";
}}else{if(replyStatus==="Z"){searchResultVal="<div class='cdc2-no-results-errorMsg'>   <b>"+i18n.discernabu.cardiology_device_integration_detail_o2.NO_RESULTS_FOUND.replace("{0}",$("#"+compNs+"SerialText"+compId).val())+"</b>   <br />"+i18n.discernabu.cardiology_device_integration_detail_o2.NO_RESULTS_FOUND_1+"</div>";
}else{logger.logScriptCallError(this,reply,"cardiology-device-detail-o2.js","handleSearchDevice");
return;
}}$("#"+compNs+"SearchResults"+compId).html(searchResultVal);
$("#"+compNs+"DevicePGId"+compId).val(pulseGenId);
$("#"+compNs+"PersonId"+compId).val(existingPersonId);
$("#"+compNs+"PersonFullName"+compId).val(existingPatientFullName);
$("#"+compNs+"DeviceAlias"+compId).val(existingPersonAlias);
$("#"+compNs+"DeviceAliasType"+compId).val(existingPersonAliasType);
$("#"+compNs+"confirmMessage"+compId).val(existingPatientFullName+existingFullAlias);
};
CardiologyDevice_o2Component.prototype.getDevicePIDs=function(){var deviceIdx,histDeviceCount=this.histPMkrData.length,devicePIDs=[];
if($.isEmptyObject(this.PMkrData)===false){devicePIDs.push({SEX_CDF:this.PMkrData.PID[0].SEX_TXT,BIRTH_DT_TM_TXT:this.PMkrData.PID[0].BIRTH_DT_TM_TXT,SERIAL_TXT:this.PMkrData.SERIAL_TXT,NAME_LAST:this.PMkrData.PID[0].NAME_LAST,NAME_FIRST:this.PMkrData.PID[0].NAME_FIRST});
}for(deviceIdx=0;
deviceIdx<histDeviceCount;
deviceIdx++){devicePIDs.push({SEX_CDF:this.histPMkrData[deviceIdx].PID[0].SEX_TXT,BIRTH_DT_TM_TXT:this.histPMkrData[deviceIdx].PID[0].BIRTH_DT_TM_TXT,SERIAL_TXT:this.histPMkrData[deviceIdx].SERIAL_TXT,NAME_LAST:this.histPMkrData[deviceIdx].PID[0].NAME_LAST,NAME_FIRST:this.histPMkrData[deviceIdx].PID[0].NAME_FIRST});
}return devicePIDs;
};
CardiologyDevice_o2Component.prototype.constructDevicePanel=function(deviceData,buttonLabel,customInputId){var i18nCardiology=i18n.discernabu.cardiology_device_integration_detail_o2,deviceHtml="",customInputIdHtml=customInputId?"id='"+customInputId+"'":"";
deviceHtml+="<div class='cdc2-search-output'>   <div class='cdc2-search-data'>       <span class='cdc2-search-patient-name'>"+deviceData.NAME_LAST+", "+deviceData.NAME_FIRST+"</span>       <span class='cdc2-serial-number'>"+deviceData.SERIAL_TXT+"</span>       <br />       <span class='cdc2-search-patient-dob'>"+i18nCardiology.DOB+" "+this.formatDOB(deviceData.BIRTH_DT_TM_TXT)+"</span>       <span class='cdc2-search-patient-details'>"+i18nCardiology.SEX+" "+deviceData.SEX_CDF+"</span>   </div>   <div class='cdc2-add-device-btn'>       <input type='button' "+customInputIdHtml+" name='cdc2-add-device-button' class='cdc2-associate-device-button' value='"+buttonLabel+"'/>   </div></div>";
return deviceHtml;
};
CardiologyDevice_o2Component.prototype.resizeComponent=function(){if(CERN_Platform.inMillenniumContext()){this.fitDocumentToContainer();
}else{this.fitDocumentToContainerForWebEnablement();
}};
CardiologyDevice_o2Component.prototype.fitDocumentToContainerForWebEnablement=function(){var $thisComponent=$("#"+this.m_rootComponentNode.id),$pdfIFrame=$thisComponent.find("#cdc2-document-viewer-webenabled"),$pdfContainer=$thisComponent.find("#cdc2-pdf-renderer-0");
$pdfIFrame.height($pdfContainer.height());
$pdfIFrame.width($pdfContainer.width());
};
CardiologyDevice_o2Component.prototype.fitDocumentToContainer=function(){var $documentViewer,documentWidth,zoomLevel,documentViewerWidth,scrollBarWidth=25;
$documentViewer=$("#cdc2-document-viewer-activeX-0")[0];
if($documentViewer!==undefined){documentWidth=$documentViewer.PageWidth;
if(documentWidth!==0){zoomLevel=screen.deviceXDPI/screen.logicalXDPI;
documentViewerWidth=$("#cdc2-document-viewer-activeX-0").width();
$documentViewer.Zoom=(documentViewerWidth-scrollBarWidth)*zoomLevel/documentWidth*100;
}}};
CardiologyDevice_o2Component.prototype.jumpToPage=function(eventData){var $self,currentPage,desiredPage,totalPages,currPgNumField,i;
$self=eventData.data.scope;
currPgNumField=eventData.data.currPgNumField;
desiredPage=currPgNumField.value;
currentPage=$self.currentPage;
if(isNaN(desiredPage)||desiredPage===""){currPgNumField.value=currentPage;
return false;
}totalPages=$self.totalPages;
desiredPage=parseInt(desiredPage,10);
if(desiredPage>totalPages){desiredPage=totalPages;
currPgNumField.value=desiredPage;
}if(desiredPage>currentPage){for(i=currentPage;
i<desiredPage;
i++){$self.nextPageDocument(eventData);
}}else{for(i=currentPage;
i>desiredPage;
i--){$self.prevPageDocument(eventData);
}}return true;
};
CardiologyDevice_o2Component.prototype.openPDFInNewWindow=function(eventData){var $self,docID;
$self=eventData.data.scope;
docID=$self.activeDocID;
CCLLINK("pex_disp_pulse_gen_episode_doc","^MINE^,^"+docID+"^",1);
return false;
};
CardiologyDevice_o2Component.prototype.printActivePDFDoc=function(eventData){eventData.data.documentViewer.Print(1,"");
return false;
};
CardiologyDevice_o2Component.prototype.displayDocument=function(eventData){var $self,classScope,$buttonObj,buttonObj,pdfTitle,currentBtn,pdfPageCount,documentViewer,prevButtonObj,nextButtonObj,subTimerName,slaTimerEpisode,slaTimerSession;
try{if(CERN_Platform.inMillenniumContext()){if(!eventData.data.buttonObject||eventData.data.docUID===""||!eventData.data.documentViewer||!eventData.data.prevButtonObj||!eventData.data.nextButtonObj||eventData.data.buttonObject.length===0){return;
}}else{if(!eventData.data.buttonObject||eventData.data.docUID===""||!eventData.data.documentViewer||eventData.data.buttonObject.length===0){return;
}}eventData=eventData.data;
$self=eventData.scope;
classScope=eventData.parentClass;
$buttonObj=eventData.buttonObject;
buttonObj=$buttonObj[0];
if($buttonObj[0].id.indexOf("cdc2-historical-interrogations")>-1){pdfTitle=$buttonObj.find("span").first().text();
}else{pdfTitle=buttonObj.textContent;
}currentBtn=classScope.selectedPDF;
$("#cdc2-pdf-control-label").html("<div>"+pdfTitle+"</div>");
if(currentBtn!==null){currentBtn.className=currentBtn.className.replace("-selected","");
}classScope.selectedPDF=buttonObj;
buttonObj.className=buttonObj.className+"-selected";
documentViewer=eventData.documentViewer;
subTimerName=eventData.subTimerName;
documentViewer.className="cdc2-document-viewer-activeX";
if(CERN_Platform.inMillenniumContext()){pdfPageCount=eventData.docLen;
prevButtonObj=eventData.prevButtonObj;
nextButtonObj=eventData.nextButtonObj;
$self.updatePDFPageCount(pdfPageCount);
}$self.activeDocID=eventData.docUID;
slaTimerEpisode=MP_Util.CreateTimer("USR:MPG.Cardiology.Device.Detail.o2 - get episode doc");
slaTimerSession=MP_Util.CreateTimer("USR:MPG.Cardiology.Device.Detail.o2 - get session doc");
if(CERN_Platform.inMillenniumContext()){documentViewer.ExecuteReport("pex_disp_pulse_gen_episode_doc","^MINE^,^"+eventData.docUID+"^");
}else{documentViewer.innerHTML="<iframe id='cdc2-document-viewer-webenabled' src='pex_disp_pulse_gen_episode_doc?parameters=^MINE^,^"+eventData.docUID+"^' width='"+$("#cdc2-pdf-renderer-0").width()+"' height='"+$("#cdc2-pdf-renderer-0").height()+"'  scrolling='yes'></iframe></div>";
}if(slaTimerEpisode){slaTimerEpisode.subTimerName=subTimerName;
slaTimerEpisode.Stop();
}if(slaTimerSession){slaTimerSession.subTimerName=subTimerName;
slaTimerSession.Stop();
}if(CERN_Platform.inMillenniumContext()){nextButtonObj.className=pdfPageCount>1?"cdc2-pdf-control-next-page":"cdc2-pdf-control-next-page-disabled";
prevButtonObj.className="cdc2-pdf-control-pref-page-disabled";
}}catch(err){throw err;
}};
CardiologyDevice_o2Component.prototype.nextPageDocument=function(eventData){var $self,documentViewer,prevButtonObj,nextButtonObj,currPgNumField;
try{eventData=eventData.data;
$self=eventData.scope;
documentViewer=eventData.documentViewer;
prevButtonObj=eventData.prevButtonObj;
nextButtonObj=eventData.nextButtonObj;
currPgNumField=eventData.currPgNumField;
if(documentViewer.CanViewNextPage()===true){$self.currentPage+=1;
currPgNumField.value=$self.currentPage;
prevButtonObj.className="cdc2-pdf-control-pref-page";
documentViewer.ViewNextPage();
}nextButtonObj.className=documentViewer.CanViewNextPage()===true?"cdc2-pdf-control-next-page":"cdc2-pdf-control-next-page-disabled";
return true;
}catch(err){throw err;
}};
CardiologyDevice_o2Component.prototype.prevPageDocument=function(eventData){var $self,documentViewer,prevButtonObj,nextButtonObj,currPgNumField;
try{eventData=eventData.data;
$self=eventData.scope;
documentViewer=eventData.documentViewer;
prevButtonObj=eventData.prevButtonObj;
nextButtonObj=eventData.nextButtonObj;
currPgNumField=eventData.currPgNumField;
if(documentViewer.CanViewPrevPage()===true){$self.currentPage-=1;
currPgNumField.value=$self.currentPage;
nextButtonObj.className="cdc2-pdf-control-next-page";
documentViewer.ViewPrevPage();
}prevButtonObj.className=documentViewer.CanViewPrevPage()===true?"cdc2-pdf-control-pref-page":"cdc2-pdf-control-pref-page-disabled";
return true;
}catch(err){throw err;
}};
CardiologyDevice_o2Component.prototype.updatePDFPageCount=function(pageCount){this.currentPage=1;
this.totalPages=pageCount;
$("#cdc2-indicator-total-pages")[0].innerHTML=this.totalPages;
};
CardiologyDevice_o2Component.prototype.renderComponent=function(recordData){var opHTML,count;
try{this.scopeId=this.m_rootComponentNode.id;
this.scopeObj=$("#"+this.scopeId);
this.JSONData=recordData;
this.DataLoaded=true;
this.createSessionEpisodeHierarchy();
for(count=0;
count<this.modalArr.length;
count++){MP_ModalDialog.closeModalDialog(this.modalArr[count]);
}opHTML="";
opHTML+=this.constructHeaderData();
if(this.Episodes.length>0||this.Sessions.length>0||this.histPMkrData.length>0){opHTML+=this.constructSidePanel();
opHTML+=this.constructPDFViewerPanel(this.i18n.CLICK_PDF_TO_DISPLAY);
}else{opHTML+=this.i18n.NO_DEVICE;
this.alreadyPostProcessed=true;
this.enableManageDevicesMenuItem();
}MP_Util.Doc.FinalizeComponent(opHTML,this,"");
return opHTML;
}catch(err){throw err;
}};
CardiologyDevice_o2Component.AddressBookSearch=function(element,personId,encounterId){this.suggestionLimit=5;
this.selectedPrsnlId=0;
this.personId=personId;
this.encounterId=encounterId;
MPageControls.CclSearch.call(this,element);
this.setProgramName("mp_addr_book_name_search");
};
CardiologyDevice_o2Component.AddressBookSearch.prototype=new MPageControls.CclSearch();
CardiologyDevice_o2Component.AddressBookSearch.prototype.setSuggestionLimit=function(cnt){this.suggestionLimit=parseInt(cnt,10);
};
CardiologyDevice_o2Component.AddressBookSearch.prototype.getSuggestionLimit=function(){return this.suggestionLimit;
};
CardiologyDevice_o2Component.AddressBookSearch.prototype.buildParameters=function(){return"^"+this.getValue()+"^,"+this.personId+".0,"+this.encounterId+".0";
};
CardiologyDevice_o2Component.AddressBookSearch.prototype.callProgram=function(callback){var self=this;
var reqNumber;
var url;
var xhr=CERN_BrowserDevInd?new XMLHttpRequest():new XMLCclRequest();
if(this.getValue().length<3){return;
}this.setRequestCount(this.getRequestCount()+1);
reqNumber=this.getRequestCount();
xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){MP_Util.LogScriptCallInfo(null,this,"cardiology detail address book name search","callProgram");
self.handleSuccess(reqNumber,xhr.responseText,callback);
}};
if(CERN_BrowserDevInd){url=this.getInBrowserDir()+this.getProgramName()+"?parameters="+this.buildParameters();
xhr.open("GET",url);
xhr.send(null);
}else{xhr.open("GET",this.getProgramName());
xhr.send(this.buildParameters());
}};
CardiologyDevice_o2Component.AddressBookSearch.prototype.handleSuccess=function(reqNumber,responseText,callback){var jsonSearch;
if(reqNumber!==this.getRequestCount()||!responseText){return;
}jsonSearch=JSON.parse(responseText);
if(jsonSearch.REPLY.STATUS_DATA.STATUS==="F"){logger.logScriptCallError(null,responseText,"cardiology detail address book name search","handleSuccess");
logger.logError(this.getProgramName()+" failed: "+responseText);
return;
}if(callback){callback(this.makeContext(jsonSearch));
}else{this.setSuggestions(this.makeContext(jsonSearch));
}};
CardiologyDevice_o2Component.AddressBookSearch.prototype.makeContext=function(returnData){var prsnlArr=[],prsnlIdx,prsnlLen=returnData.REPLY.PRSNL.length,prsnl;
for(prsnlIdx=0;
prsnlIdx<prsnlLen;
prsnlIdx++){prsnl=returnData.REPLY.PRSNL[prsnlIdx];
prsnl.content=prsnl.PRSNL_NAME_FULL_FORMATTED;
prsnlArr.push(prsnl);
}return prsnlArr;
};
MP_Util.setObjectDefinitionMapping("WF_CARDIO_DEVICE",CardiologyDevice_o2Component);
