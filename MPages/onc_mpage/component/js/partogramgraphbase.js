var PARTO_GRAPH_BASE=(function(){function PartoGraphBase(){this.components=[];
this.endDate=null;
this.finalStartTime=null;
this.finalEndTime=null;
this.HOUR_WINDOW=12;
var ONE_HOUR_MS=1*60*60*1000;
var ONE_MINUTE_MS=1*60*1000;
this.hourTicks=[];
this.quarterTicks=[];
this.majorGridLines=[];
this.COLOR_DARK_GRAY="#505050";
this.GRID_BACKGROUND_COLOR="#ffffff";
this.MINOR_GRID_LINE_COLOR="#ececec";
this.partogramLastLoadTime=null;
this.alertActionEndTime=null;
this.COMPONENT_BOTTOM_MARGIN="8px";
this.epiduralData=[[],[],[],[]];
this.isEpiVisible=true;
this.oxytocinData=[];
this.isOxyVisible=true;
this.ARROW_BUTTON_WIDTH=20;
this.oxyNameArray=[];
this.epiNameArray=[];
this.componentWidth=0;
this.offsetWidth=0;
this.personId=0;
this.providerId=0;
this.hoverDataMap={};
this.container2Width=null;
this.topBarGraphHTML="";
this.topBarTableHTML="";
this.fetalHeadEngagementMode=null;
this.setFetalHeadEngagementMode=function(mode){this.fetalHeadEngagementMode=mode;
};
this.getPartogramLastLoadTime=function(){return this.partogramLastLoadTime;
};
this.setPartogramLastLoadTime=function(val){this.partogramLastLoadTime=val;
};
this.setEndDate=function(val){this.endDate=val;
this.generateHourTicks();
this.generateQuarterTicks();
this.generateMajorGridLines();
};
this.getEndDate=function(){return this.endDate;
};
this.getHourWindow=function(){return this.HOUR_WINDOW;
};
this.setHourWindow=function(val){this.HOUR_WINDOW=val;
if(this.personId&&this.providerId){var hourWindowKey="HourWindow|"+this.personId+"|"+this.providerId;
MP_Util.AddCookieProperty("PartogramUserHourWindowPref",hourWindowKey,this.HOUR_WINDOW);
MP_Util.WriteCookie();
}};
this.getMajorTickStep=function(){switch(this.HOUR_WINDOW){case 1:return 0.25;
case 4:return 1;
case 8:return 1;
case 12:return 1;
case 24:return 1;
}};
this.getMinorTickStep=function(){switch(this.HOUR_WINDOW){case 1:return 5;
case 4:return 15;
case 8:return 15;
case 12:return 60;
case 24:return 60;
}};
this.getMajorTickLabelStep=function(){switch(this.HOUR_WINDOW){case 1:return 1;
case 4:return 1;
case 8:return 1;
case 12:return 2;
case 24:return 3;
}};
this.getStartDate=function(){var startTime=this.endDate-this.HOUR_WINDOW*ONE_HOUR_MS;
if(this.finalStartTime){startTime=Math.max(startTime,this.finalStartTime);
}return startTime;
};
this.calculatePartogramStartAndEndTime=function(partogramOnsetDate){if(partogramOnsetDate){this.finalStartTime=partogramOnsetDate.getTime();
this.setFinalEndTime();
var adjustEndTime=this.getAdjustedEndDateForScaleSwitch(this.finalEndTime);
this.setEndDate(adjustEndTime);
}};
this.setUserPreferences=function(criterion){this.personId=criterion.person_id;
this.providerId=criterion.provider_id;
var hourWindowKey=MP_Util.GetCookieProperty("PartogramUserHourWindowPref","HourWindow|"+this.personId+"|"+this.providerId);
if(hourWindowKey){this.HOUR_WINDOW=parseInt(hourWindowKey,10);
PARTO_TABLE_BASE.setHourWindow(this.HOUR_WINDOW);
}};
this.setFinalEndTime=function(time){this.finalEndTime=time||this.calculateFinalEndTime();
};
this.getFinalEndTime=function(){return this.finalEndTime;
};
this.getFinalStartTime=function(){return this.finalStartTime;
};
this.calculateFinalEndTime=function(){var finalTime;
var endTime=this.alertActionEndTime||this.partogramLastLoadTime;
if(endTime-this.finalStartTime>=this.HOUR_WINDOW*ONE_HOUR_MS){finalTime=endTime;
}else{finalTime=this.finalStartTime+this.HOUR_WINDOW*ONE_HOUR_MS;
}return finalTime;
};
this.setAlertActionEndTime=function(time){this.alertActionEndTime=time;
};
this.getAdjustedEndDateForScrolling=function(endDateTime,pixelDiff){var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var endDt=endDateTime;
if(pixelDiff){var timeToPixelRatio=timeDiff/this.getComponentWidth();
var diff=pixelDiff*timeToPixelRatio;
endDt=this.getEndDate()+diff;
}if(endDt>this.finalEndTime){endDt=this.finalEndTime;
}if(endDt-this.finalStartTime<timeDiff){endDt=this.finalStartTime+timeDiff;
}return endDt;
};
this.getAdjustedEndDateForScaleSwitch=function(endDateTime){var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var endDt=endDateTime;
if(endDt>this.partogramLastLoadTime){endDt=this.partogramLastLoadTime;
}if(endDt-this.finalStartTime<timeDiff){endDt=this.finalStartTime+timeDiff;
}return endDt;
};
this.getComponentBottomPadding=function(){return this.COMPONENT_BOTTOM_MARGIN;
};
this.getHourTicks=function(){return this.hourTicks;
};
this.getQuarterTicks=function(){return this.quarterTicks;
};
this.getMajorGridLines=function(){return this.majorGridLines;
};
this.generateQuarterTicks=function(){var min=this.getStartDate();
var max=this.endDate;
var step=this.getMinorTickStep();
var res=[];
res.push(min);
var stepMins=step*ONE_MINUTE_MS;
var v=Math.ceil(min/stepMins)*stepMins;
if(min%stepMins===0){v+=stepMins;
}while(v<max){res.push(v);
v+=stepMins;
}res.push(max);
this.quarterTicks=res;
};
this.generateMajorGridLines=function(){var gridLine=function(v){return{verticalLine:{x:v,lineWidth:"1px",color:"#a5a5a5",shadow:false,lineCap:"butt",xaxis:"x2axis",yOffset:0}};
};
var min=this.getStartDate();
var max=this.endDate;
var step=this.getMajorTickStep();
var gridLines=[];
gridLines.push(gridLine(min));
var stepHrs=step*ONE_HOUR_MS;
var v=Math.ceil(min/stepHrs)*stepHrs;
if(min%stepHrs===0){v+=stepHrs;
}while(v<max){gridLines.push(gridLine(v));
v+=stepHrs;
}this.majorGridLines=gridLines;
};
this.generateHourTicks=function(){var min=this.getStartDate();
var max=this.endDate;
var step=this.getMajorTickStep();
var res=[];
res.push([min,""]);
var stepHrs=step*ONE_HOUR_MS;
var v=Math.ceil(min/stepHrs)*stepHrs;
if(min%stepHrs===0){v+=stepHrs;
}while(v<max){res.push(v);
v+=stepHrs;
}res.push([max,""]);
this.hourTicks=res;
};
this.getLocalDateTime=function(UTCDateStr){var dateTime=new Date();
dateTime.setISO8601(UTCDateStr);
return dateTime.getTime();
};
this.getFormattedLocalDateTime=function(dateObject,format){if(!dateObject){return"";
}if(mp_formatter._validateFormatString(dateObject)){dateObject=new Date(this.getLocalDateTime(dateObject));
}switch(format){case"MEDIUM_DATE":return dateObject.format("mediumDate");
case"SHORT_DATE":return dateObject.format("shortDate3");
case"FULL_DATE_TIME":return dateObject.format("mediumDate")+" "+dateObject.format("militaryTime");
case"MILITARY_TIME":return dateObject.format("militaryTime");
}};
this.setEpiduralData=function(epiData){if(!epiData){return;
}this.epiduralData=epiData;
var compLength=this.components.length;
for(var i=0;
i<compLength;
i++){var component=this.components[i];
var plot=component.getPlot();
if(!plot){continue;
}var epiStartLines=this.getEpiduralVerticalLines();
var len=epiStartLines.length;
for(var j=0;
j<len;
j++){plot.plugins.canvasOverlay.addDashedVerticalLine(epiStartLines[j].dashedVerticalLine);
}if(len>0){plot.redraw();
}}if(compLength>0){this.refreshTopbar();
}};
this.setEpiduralNames=function(epiNames){this.epiNameArray=epiNames||[];
};
this.getEpiduralNames=function(){return this.epiNameArray;
};
this.getEpiduralMap=function(){return{DISCONTINUED:0,START:1,BOLUS_PATIENT:2,BOLUS_ANESTHESIA:3};
};
this.setEpiVisibility=function(isVisible){this.isEpiVisible=isVisible||false;
};
this.getEpiduralVerticalLines=function(){var epiLine=function(epiStartTime){return{dashedVerticalLine:{x:epiStartTime,color:"#3D79E9",lineCap:"square",shadow:false,yOffset:0}};
};
var epiVerticalLines=[];
var isEpiVisible=this.isEpiVisible;
var epiMap=this.getEpiduralMap();
for(var i=0,len=this.epiduralData[epiMap.START].length;
isEpiVisible&&i<len;
i++){epiVerticalLines.push(epiLine(this.getLocalDateTime(this.epiduralData[epiMap.START][i].EPIDURAL_VALUE)));
}return epiVerticalLines;
};
this.setOxytocinData=function(oxyData){if(!oxyData){return;
}this.oxytocinData=oxyData;
for(var i=0;
i<this.components.length;
i++){var component=this.components[i];
var plot=component.getPlot();
if(!plot){continue;
}var oxyStartLines=this.getOxytocinVerticalLines();
var len=oxyStartLines.length;
for(var j=0;
j<len;
j++){plot.plugins.canvasOverlay.addDashedVerticalLine(oxyStartLines[j].dashedVerticalLine);
}plot.redraw();
}this.refreshTopbar();
};
this.getOxytocinMap=function(){return{START:0,INCREASE:1,DECREASE:2,STOP:3};
};
this.setOxyVisibility=function(isVisible){this.isOxyVisible=isVisible||false;
};
this.getOxytocinVerticalLines=function(){var oxyLine=function(oxyStartTime){return{dashedVerticalLine:{x:oxyStartTime,color:"#FF3398",lineCap:"square",shadow:false,yOffset:0}};
};
var oxyVerticalLines=[];
var oxyData=this.oxytocinData;
var dataLen=oxyData.length;
var isOxyVisible=this.isOxyVisible;
if(dataLen===0||!isOxyVisible){return[];
}if(oxyData[0].VALUE!==0){oxyVerticalLines.push(oxyLine(oxyData[0].TIME));
}for(var i=1;
isOxyVisible&&i<dataLen;
i++){if(oxyData[i-1].VALUE===0&&oxyData[i].VALUE!==0){oxyVerticalLines.push(oxyLine(oxyData[i].TIME));
}}return oxyVerticalLines;
};
this.setToolTipLocation=function(plot,seriesIndex,pointIndex){var gridData=plot.series[seriesIndex].gridData[pointIndex];
var xValueTrigger=plot._width/2;
var yValueTrigger=plot._height*0.33;
var gridpos={x:gridData[0],y:gridData[1]};
var direction="";
if(gridpos.y<yValueTrigger){direction="s";
}else{if(gridpos.y>(plot._height-yValueTrigger)){direction="n";
}}if(gridpos.x<xValueTrigger){direction+="e";
}else{if(gridpos.x>xValueTrigger){direction+="w";
}}plot.series[seriesIndex].highlighter.tooltipLocation=direction;
};
this.getNormalcyClass=function(normalcyMean){switch(normalcyMean){case"CRITICAL":case"EXTREMEHIGH":case"PANICHIGH":case"EXTREMELOW":case"PANICLOW":case"VABNORMAL":case"POSITIVE":return"res-severe";
case"HIGH":return"res-high";
case"LOW":return"res-low";
case"ABNORMAL":return"res-abnormal";
default:return"res-normal";
}};
this.getResultIndHTML=function(value,unit,resCSSClass,modifiedInd){value=value||"";
resCSSClass=resCSSClass||"";
modifiedInd=modifiedInd||0;
var criticalityHTML="";
criticalityHTML+='<span class="'+resCSSClass+'">';
criticalityHTML+='<span class="res-ind">&nbsp;</span><span class="res-val">'+value+"</span>";
if(unit){criticalityHTML+='<span class="parto-graph-wf-unit">'+unit+"</span>";
}if(modifiedInd){criticalityHTML+='<span class="res-modified"></span>';
}criticalityHTML+="</span>";
return criticalityHTML;
};
this.clearHoverMap=function(componentKey){this.hoverDataMap[componentKey]={};
};
this.isHoverDataPopulated=function(componentKey){if(typeof this.hoverDataMap[componentKey]==="undefined"){this.hoverDataMap[componentKey]={};
return false;
}return true;
};
this.insertSeriesIntoHoverMap=function(componentKey,timestamp,icon,key,value){if(typeof this.hoverDataMap[componentKey]==="undefined"){this.hoverDataMap[componentKey]={};
}if(typeof this.hoverDataMap[componentKey][timestamp]==="undefined"){this.hoverDataMap[componentKey][timestamp]=[];
}this.hoverDataMap[componentKey][timestamp].push({ICON:icon,KEY:key,VALUE:value});
};
this.getHoverHTML=function(componentKey,timestamp){var dataPoints=this.hoverDataMap[componentKey][timestamp];
if(!dataPoints){return"";
}var eventDate=new Date(timestamp);
var hoverHTML="";
var formattedDate=this.getFormattedLocalDateTime(eventDate,"FULL_DATE_TIME");
hoverHTML+="<div class='parto-graph-hover-result-date'>"+formattedDate+"</div>";
var partoi18n=i18n.discernabu.partogrambase_o2;
hoverHTML+="<table class ='partogram-graph-tooltip'>";
hoverHTML+="<tr><th>"+partoi18n.HOVER_ICON+"</th>";
hoverHTML+="<th>"+partoi18n.HOVER_KEY+"</th>";
hoverHTML+="<th>"+partoi18n.HOVER_VALUE+"</th></tr>";
var dataLen=dataPoints.length;
for(var i=0;
i<dataLen;
i++){var dataPoint=dataPoints[i];
hoverHTML+="<tr>";
hoverHTML+="<td>"+dataPoint.ICON+"</td>";
hoverHTML+="<td>"+dataPoint.KEY+"</td>";
hoverHTML+="<td>"+dataPoint.VALUE+"</td>";
hoverHTML+="</tr>";
}hoverHTML+="</table>";
return hoverHTML;
};
this.addTimeScaleButtons=function(compId){var timeScaleButtonsExists=$("#lookbackDisplay"+compId).find(".lookback-button");
if(typeof timeScaleButtonsExists[0]==="undefined"){var partoi18n=i18n.discernabu.partogrambase_o2;
var ONE_HR=partoi18n.ONE_HOUR;
var FOUR_HR=partoi18n.FOUR_HOUR;
var EIGHT_HR=partoi18n.EIGHT_HOUR;
var TWELVE_HR=partoi18n.TWELVE_HOUR;
var TWENTY_FOUR_HR=partoi18n.TWENTY_FOUR_HOUR;
var buttonsHTML="";
buttonsHTML+='<div class="lookback-button parto1HrButton">'+ONE_HR+"</div>";
buttonsHTML+='<div class="lookback-button parto4HrButton">'+FOUR_HR+"</div>";
buttonsHTML+='<div class="lookback-button parto8HrButton">'+EIGHT_HR+"</div>";
buttonsHTML+='<div class="lookback-button parto12HrButton">'+TWELVE_HR+"</div>";
buttonsHTML+='<div class="lookback-button parto24HrButton">'+TWENTY_FOUR_HR+"</div>";
var lookbackDiv=$("#lookbackDisplay"+compId);
if(lookbackDiv.length>0){lookbackDiv=lookbackDiv[0];
$(lookbackDiv).append(buttonsHTML);
var activeHourWindowClass=".parto"+this.HOUR_WINDOW+"HrButton";
$(lookbackDiv).find(activeHourWindowClass).addClass("lookback-button-active");
}}};
this.createTopBar=function(imageFolder,componentType){if(componentType==="TABLE"&&PARTO_GRAPH_BASE.topBarTableHTML){return"<div class ='partoTopBarContainer table'>"+PARTO_GRAPH_BASE.topBarTableHTML+"</div>";
}else{if(componentType==="GRAPH"&&PARTO_GRAPH_BASE.topBarGraphHTML){return"<div class ='partoTopBarContainer graph'>"+PARTO_GRAPH_BASE.topBarGraphHTML+"</div>";
}}var layoutHTML="";
if(componentType==="TABLE"){layoutHTML+='<div class="partoTopBarContainer table">';
}else{layoutHTML+='<div class="partoTopBarContainer graph">';
}layoutHTML+='<div class="partoArrowImageDiv">';
layoutHTML+='<div class="partoArrowImage partoArrowImageLeft partoGraphBaseSprite partoArrowLeft"></div>';
layoutHTML+="</div>";
layoutHTML+='<div class="partogram-ruler-time-bar-container">';
layoutHTML+='<div class="partogram-top-bar-date"><div class="partogram-top-time-bar-date-left"></div><div class="partogram-top-time-bar-date-middle"></div>';
layoutHTML+="</div>";
layoutHTML+='<div class="partogram-top-bar-ticks">';
layoutHTML+="</div>";
if(componentType==="GRAPH"){layoutHTML+='<div class="partogram-top-bar-oxytocin">';
layoutHTML+="</div>";
layoutHTML+='<div class="partogram-top-bar-epidural">';
layoutHTML+="</div>";
}layoutHTML+="</div>";
layoutHTML+='<div class="partoArrowImageDiv">';
layoutHTML+='<div class="partoArrowImage partoArrowImageRight partoGraphBaseSprite partoArrowRight"></div>';
layoutHTML+="</div>";
layoutHTML+="</div>";
return layoutHTML;
};
this.refreshGraph=function(endDt){endDt=endDt||this.getEndDate();
this.setEndDate(endDt);
var componentLen=this.components.length;
if(this.components.length===0){return;
}var startDate=this.getStartDate();
var quarterticks=this.getQuarterTicks();
var hourticks=this.getHourTicks();
var majorGridLines=this.getMajorGridLines();
var todayBar=this.getTodayVerticalBar();
var lastLoadTime=this.partogramLastLoadTime-2*ONE_MINUTE_MS;
for(var i=0;
i<componentLen;
i++){var component=this.components[i];
var jqplotGraph=component.getPlot();
if(jqplotGraph){jqplotGraph.axes.x2axis.min=startDate;
jqplotGraph.axes.x2axis.max=endDt;
jqplotGraph.axes.xaxis.min=startDate;
jqplotGraph.axes.xaxis.max=endDt;
jqplotGraph.axes.xaxis.ticks=quarterticks;
jqplotGraph.axes.x2axis.ticks=hourticks;
var canvasOverlayObjs=[];
if(component.IS_FHR){canvasOverlayObjs=canvasOverlayObjs.concat(component.getShadedOverlay());
}canvasOverlayObjs=canvasOverlayObjs.concat(majorGridLines);
canvasOverlayObjs=canvasOverlayObjs.concat(this.getOxytocinVerticalLines());
canvasOverlayObjs=canvasOverlayObjs.concat(this.getEpiduralVerticalLines());
if(endDt>=lastLoadTime){canvasOverlayObjs=canvasOverlayObjs.concat(todayBar);
}var canvasOpts={};
canvasOpts.objects=canvasOverlayObjs;
var co=new $.jqplot.CanvasOverlay(canvasOpts);
jqplotGraph.plugins.canvasOverlay=co;
jqplotGraph.redraw();
}}this.addOpenHandCursor();
};
this.getTodayVerticalBar=function(){var plotWidth=this.container2Width;
if(plotWidth===null){var containers=$(".partogramGraphDiv");
if(containers.length>0){plotWidth=parseInt($(containers.get(0)).css("width"),10);
}else{plotWidth=this.getComponentWidth();
}this.container2Width=plotWidth;
}var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var timeToPixelRatio=timeDiff/plotWidth*5;
var adjustedLastLoadTime=this.partogramLastLoadTime-timeToPixelRatio;
return{verticalLine:{name:"todayNow",x:adjustedLastLoadTime,lineWidth:10,color:"rgba(245, 118, 0, 0.2)",lineCap:"square",shadow:false}};
};
this.removeColonEndOfString=function(stringVal){var str=$.trim(stringVal);
if(str&&str.length>0){var lastChar=str[str.length-1];
if(lastChar===":"){return str.substring(0,str.length-1);
}}return str;
};
this.refreshEpidural=function(){if(this.components.length===0||this.epiNameArray.length===0){return;
}var childDiv="";
var i,eventTime;
var epiduralDiv=$(".partogram-top-bar-epidural");
$(epiduralDiv).html("");
var epiData=this.epiduralData;
var epiMap=this.getEpiduralMap();
var sortedEpiData=[];
var len;
for(i=0,len=epiData[epiMap.START].length;
i<len;
i++){eventTime=this.getLocalDateTime(epiData[epiMap.START][i].EPIDURAL_VALUE);
sortedEpiData.push([eventTime,epiMap.START]);
}for(i=0;
i<epiData[epiMap.BOLUS_ANESTHESIA].length;
i++){eventTime=this.getLocalDateTime(epiData[epiMap.BOLUS_ANESTHESIA][i].EPIDURAL_VALUE);
sortedEpiData.push([eventTime,epiMap.BOLUS_ANESTHESIA]);
}for(i=0;
i<epiData[epiMap.BOLUS_PATIENT].length;
i++){eventTime=this.getLocalDateTime(epiData[epiMap.BOLUS_PATIENT][i].EPIDURAL_VALUE);
sortedEpiData.push([eventTime,epiMap.BOLUS_PATIENT]);
}for(i=0;
i<epiData[epiMap.DISCONTINUED].length;
i++){eventTime=this.getLocalDateTime(epiData[epiMap.DISCONTINUED][i].EPIDURAL_VALUE);
sortedEpiData.push([eventTime,epiMap.DISCONTINUED]);
}sortedEpiData.sort(function(epiPoint1,epiPoint2){return epiPoint1[0]-epiPoint2[0];
});
var epiSessionValid=false;
var epiSessionStart=null;
var epiSessionEnd=null;
var min=this.getStartDate();
var plotWidth=this.getComponentWidth();
var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var lastLoadTime=this.partogramLastLoadTime;
var pixelToTimeRatio=plotWidth/timeDiff;
var horizontalBarWidth=0;
var EPI_IMG_WIDTH=8;
var EPI_START_IMG_WIDTH=8;
for(i=0,len=sortedEpiData.length;
i<len;
i++){if(sortedEpiData[i][1]===epiMap.START&&!epiSessionValid){epiSessionValid=true;
epiSessionStart=sortedEpiData[i][0];
epiSessionEnd=lastLoadTime;
var j;
for(j=i+1;
j<len;
j++){if(sortedEpiData[j][1]===epiMap.DISCONTINUED){epiSessionEnd=sortedEpiData[j][0];
break;
}}epiSessionEnd=Math.min(lastLoadTime,epiSessionEnd);
var barLeft=parseFloat((epiSessionStart-min)*pixelToTimeRatio)-this.ARROW_BUTTON_WIDTH;
horizontalBarWidth=parseFloat((epiSessionEnd-min)*pixelToTimeRatio)-parseFloat((epiSessionStart-min)*pixelToTimeRatio);
childDiv='<div class="partoEpiHorizontalBar" style="width:'+horizontalBarWidth+"px;left:"+barLeft+'px;top:1px;"></div>';
$(epiduralDiv).append(childDiv);
childDiv="";
}if(!epiSessionValid||sortedEpiData[i][0]>lastLoadTime){continue;
}var left=parseFloat((sortedEpiData[i][0]-min)*pixelToTimeRatio)-this.ARROW_BUTTON_WIDTH;
switch(sortedEpiData[i][1]){case epiMap.START:left-=EPI_START_IMG_WIDTH/2;
childDiv+='<div class="partoEpiHover partoOverviewSprite partoEpiStart" time="'+sortedEpiData[i][0]+'" style="position:absolute;left:'+left+'px"></div>';
break;
case epiMap.BOLUS_ANESTHESIA:left-=EPI_IMG_WIDTH/2;
childDiv+='<div class="partoEpiHover partoOverviewSprite partoEpiBA" time="'+sortedEpiData[i][0]+'" style="position:absolute;left:'+left+'px"></div>';
break;
case epiMap.BOLUS_PATIENT:left-=EPI_IMG_WIDTH/2;
childDiv+='<div class="partoEpiHover partoOverviewSprite partoEpiBP" time="'+sortedEpiData[i][0]+'" style="position:absolute;left:'+left+'px"></div>';
break;
case epiMap.DISCONTINUED:left-=EPI_IMG_WIDTH/2;
childDiv+='<div class="partoEpiHover partoOverviewSprite partoIVStop" time="'+sortedEpiData[i][0]+'" style="position:absolute;left:'+left+'px"></div>';
break;
}if(sortedEpiData[i][1]===epiMap.DISCONTINUED){epiSessionValid=false;
$(epiduralDiv).append(childDiv);
childDiv="";
}}if(childDiv){$(epiduralDiv).append(childDiv);
}};
this.refreshOxytocin=function(){if(this.components.length===0||this.oxytocinData.length===0){return;
}var oxytocinDiv=$(".partogram-top-bar-oxytocin");
$(oxytocinDiv).html("");
var oxyData=this.oxytocinData;
var dosageCnt=oxyData.length;
var min=this.getStartDate();
var lastLoadTime=this.partogramLastLoadTime;
var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var plotWidth=this.getComponentWidth();
var pixelToTimeRatio=plotWidth/timeDiff;
var OXY_IMG_WIDTH=8;
var OXY_START_IMG_WIDTH=8;
var startTime=null;
var startDoseIndex=null;
var currentState=1;
var prevDosageValue=-1;
var oxyState={STOP:0,START:1,INCREASE:2,DECREASE:3};
var i=0,index;
var childDiv="";
for(i=0;
i<dosageCnt;
i++){var dosage=oxyData[i];
if(startTime===null&&dosage.VALUE!==0){startTime=dosage.TIME;
startDoseIndex=i;
var endTime=lastLoadTime;
prevDosageValue=dosage.VALUE;
for(index=i+1;
index<dosageCnt;
index++){if(oxyData[index].VALUE===0){endTime=oxyData[index].TIME;
break;
}}endTime=Math.min(lastLoadTime,endTime);
var barLeft=parseFloat((startTime-min)*pixelToTimeRatio)-this.ARROW_BUTTON_WIDTH;
var horizontalBarWidth=parseFloat((endTime-min)*pixelToTimeRatio)-parseFloat((startTime-min)*pixelToTimeRatio);
var horizontalBarHTML='<div class="partoOxyHorizontalBar" style="width:'+horizontalBarWidth+"px;left:"+barLeft+'px;top:1px;"></div>';
$(oxytocinDiv).append(horizontalBarHTML);
currentState=oxyState.START;
}var currentDosageValue=dosage.VALUE;
if(currentDosageValue===0){currentState=oxyState.STOP;
}if(startDoseIndex!==i&&currentState!==oxyState.STOP){if(currentDosageValue>prevDosageValue){currentState=oxyState.INCREASE;
}else{if(currentDosageValue<prevDosageValue){currentState=oxyState.DECREASE;
}else{continue;
}}}var currentDosageTime=dosage.TIME;
if(currentDosageTime>lastLoadTime){break;
}var left=parseFloat((currentDosageTime-min)*pixelToTimeRatio,10)-this.ARROW_BUTTON_WIDTH;
switch(currentState){case oxyState.START:left-=OXY_START_IMG_WIDTH/2;
childDiv+='<div class="partoOxyHover partoOverviewSprite partoOxyStart" time="'+currentDosageTime+'" style="position:absolute;left:'+left+'px"></div>';
break;
case oxyState.INCREASE:left-=OXY_IMG_WIDTH/2;
childDiv+='<div class="partoOxyHover partoOverviewSprite partoOxyIncrease" time="'+currentDosageTime+'" style="position:absolute;left:'+left+'px"></div>';
break;
case oxyState.DECREASE:left-=OXY_IMG_WIDTH/2;
childDiv+='<div class="partoOxyHover partoOverviewSprite partoOxyDecrease" time="'+currentDosageTime+'" style="position:absolute;left:'+left+'px"></div>';
break;
case oxyState.STOP:left-=OXY_IMG_WIDTH/2;
childDiv+='<div class="partoOxyHover partoOverviewSprite partoIVStop" time="'+currentDosageTime+'" style="position:absolute;left:'+left+'px"></div>';
$(oxytocinDiv).append(childDiv);
childDiv="";
startTime=null;
break;
default:continue;
}prevDosageValue=currentDosageValue;
}if(childDiv){$(oxytocinDiv).append(childDiv);
}};
this.refreshTopbarTicks=function(){var min=this.getStartDate();
var plotWidth=this.getComponentWidth();
var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var pixelToTimeRatio=plotWidth/timeDiff;
var hourticks=this.hourTicks;
var len=hourticks.length;
var ticksDiv=$(".partogram-top-bar-ticks");
$(ticksDiv).html("");
var TWO_CHAR_WIDTH=16;
var i,tick,left,currentHour;
var labelStep=this.getMajorTickLabelStep();
for(i=0;
i<len;
i++){if(hourticks[i] instanceof Array){continue;
}currentHour=new Date(hourticks[i]).getHours();
if(currentHour%labelStep!==0){continue;
}tick=this.getFormattedLocalDateTime(new Date(hourticks[i]),"MILITARY_TIME");
left=(hourticks[i]-min)*pixelToTimeRatio-TWO_CHAR_WIDTH-this.ARROW_BUTTON_WIDTH;
$(ticksDiv).append('<span class="partoHourTick" style="left:'+left+'px">'+tick+"</span>");
}};
this.refreshTopbar=function(uniqueCompID){var compID=uniqueCompID?"#"+uniqueCompID:"";
var startDate=new Date(this.getStartDate());
var endDate=new Date(this.endDate);
var partoLastLoadTime=new Date(this.partogramLastLoadTime);
var rfi18n=i18n.discernabu.partogrambase_o2;
var startDateString=this.getFormattedLocalDateTime(startDate,"MEDIUM_DATE");
var endDateString=this.getFormattedLocalDateTime(endDate,"MEDIUM_DATE");
if(startDate.toDateString()===partoLastLoadTime.toDateString()){startDateString="<b>"+rfi18n.TODAY+"</b> "+startDateString;
}if(endDate.toDateString()===partoLastLoadTime.toDateString()){endDateString="<b>"+rfi18n.TODAY+"</b> "+endDateString;
}startDateString="&nbsp;"+startDateString;
endDateString="&nbsp;"+endDateString;
var BUTTON_WIDTH=20;
var LEFT_BORDER_WIDTH=2;
var plotWidth=this.getComponentWidth();
var timeBarWidth=plotWidth-2*BUTTON_WIDTH;
$(compID+" .partogram-ruler-time-bar-container").css("width",timeBarWidth);
$(compID+" .partogram-top-bar-date").css("width",timeBarWidth);
$(compID+" .partogram-top-bar-ticks").css("width",timeBarWidth);
var dateLeft=$(compID+" .partogram-top-time-bar-date-left");
var dateMiddle=$(compID+" .partogram-top-time-bar-date-middle");
var max=this.getEndDate();
var timeDiff=this.HOUR_WINDOW*ONE_HOUR_MS;
var pixelToTimeRatio=plotWidth/timeDiff;
dateLeft.html("");
dateLeft.css("width",timeBarWidth);
dateMiddle.css("border-left","");
dateMiddle.html("");
dateMiddle.css("width","0px");
dateLeft.html(startDateString);
var min=this.getStartDate();
if(startDate.toDateString()!==endDate.toDateString()){$(compID+" .partogram-top-time-bar-date-middle").html(endDateString);
$(compID+" .partogram-top-time-bar-date-middle").css("border-left","2px solid #a5a5a5");
var nextDate=new Date(max);
nextDate.setHours(0);
nextDate.setMinutes(0);
nextDate.setSeconds(0);
nextDate.setMilliseconds(0);
var dayChangeTick=Math.floor((nextDate.getTime()-min)*pixelToTimeRatio);
if(dayChangeTick<=BUTTON_WIDTH){dateLeft.html("");
dateLeft.css("width","0px");
dateMiddle.css("width",timeBarWidth-LEFT_BORDER_WIDTH);
}else{var leftWidth=Math.min(timeBarWidth,dayChangeTick-BUTTON_WIDTH-LEFT_BORDER_WIDTH);
var rightWidth=Math.max(0,timeBarWidth-leftWidth-BUTTON_WIDTH);
dateLeft.css("width",leftWidth);
dateMiddle.css("width",rightWidth);
if(rightWidth===0){dateMiddle.css("border-left","");
}}if(dayChangeTick>=timeBarWidth+BUTTON_WIDTH){dateMiddle.html("");
}}this.refreshTopbarTicks();
this.refreshOxytocin();
this.refreshEpidural();
this.topBarGraphHTML=$(".partoTopBarContainer.graph").html();
this.topBarTableHTML=$(".partoTopBarContainer.table").html();
};
this.formatTime=function(val){if(val<10){return"0"+val;
}return val;
};
this.addSubscriber=function(component){if(component instanceof MPageComponent){this.components.push(component);
}};
this.getComponentWidth=function(){return this.componentWidth||this.setComponentWidth();
};
this.setComponentWidth=function(){var leftaxesWidth=25;
var padding=16;
var percentageCol1Width=0.12;
var percentageCol2Width=0.88;
var marginOffsetForAxes=10;
var i;
var rightaxesWidth=marginOffsetForAxes+this.getWidthOffsetForGraph();
var compWidth;
for(i=0;
i<this.components.length;
i++){compWidth=$("#"+this.components[i].getStyles().getId()).width();
if(compWidth){break;
}}if(!compWidth){var tableMap=PARTO_TABLE_BASE.tableComponentsMap;
for(var uniqueCompId in tableMap){if(tableMap.hasOwnProperty(uniqueCompId)){compWidth=$("#"+uniqueCompId).width();
if(compWidth){break;
}}}}this.componentWidth=(compWidth-padding)*percentageCol2Width-leftaxesWidth-rightaxesWidth;
PARTO_TABLE_BASE.legendColumnWidth=(compWidth-padding)*percentageCol1Width;
return this.componentWidth;
};
this.registerEvents=function(){var isGraphDragging=false;
var isTableDragging=false;
function captureTimeScaleClickTime(timeScale){var timeScaleTimer=new CapabilityTimer("CAP:MPG.PARTOGRAMGRAPHBASE.O2 - time scale switch","");
if(timeScaleTimer){timeScaleTimer.addMetaData("rtms.legacy.metadata.1",timeScale);
timeScaleTimer.capture();
}}var originalX=0;
$(document).on("mousedown",".partogramGraphDiv",function(e){PARTO_GRAPH_BASE.addGrabbingHandCursor();
originalX=e.clientX;
$(document).mousemove(function(){isGraphDragging=true;
$(document).unbind("mousemove");
});
});
$(document).on("mouseup",".partogramGraphDiv",function(e){var wasDragging=isGraphDragging;
isGraphDragging=false;
PARTO_GRAPH_BASE.addOpenHandCursor();
$(document).unbind("mousemove");
if(!wasDragging){return;
}var pixelDiff=originalX-e.clientX;
var endDt=PARTO_GRAPH_BASE.getEndDate();
endDt=PARTO_GRAPH_BASE.getAdjustedEndDateForScrolling(endDt,pixelDiff);
PARTO_GRAPH_BASE.refreshGraph(endDt);
PARTO_TABLE_BASE.refreshTable();
PARTO_GRAPH_BASE.refreshTopbar();
captureMovingComponentTime("DRAGGED, GRAPH");
});
$(document).on("mousedown",".partogramTableBodyDiv td",function(e){originalX=e.clientX;
PARTO_TABLE_BASE.setCursorHand("CLOSE");
$(document).mousemove(function(){isTableDragging=true;
$(document).unbind("mousemove");
});
});
$(document).on("mouseup",".partogramTableBodyDiv td",function(e){var wasDragging=isTableDragging;
isTableDragging=false;
$(document).unbind("mousemove");
if(!wasDragging){return;
}var pixelDiff=originalX-e.clientX;
var endDt=PARTO_GRAPH_BASE.getEndDate();
endDt=PARTO_GRAPH_BASE.getAdjustedEndDateForScrolling(endDt,pixelDiff);
PARTO_GRAPH_BASE.refreshGraph(endDt);
PARTO_TABLE_BASE.refreshTable();
PARTO_GRAPH_BASE.refreshTopbar();
captureMovingComponentTime("DRAGGED, TABLE");
});
$(document).on("click",".partoArrowImageLeft",function(){var endDt=PARTO_GRAPH_BASE.getEndDate()-PARTO_GRAPH_BASE.getMajorTickLabelStep()*PARTO_GRAPH_BASE.getMajorTickStep()*ONE_HOUR_MS;
endDt=PARTO_GRAPH_BASE.getAdjustedEndDateForScrolling(endDt,0);
PARTO_GRAPH_BASE.refreshGraph(endDt);
PARTO_TABLE_BASE.refreshTable();
PARTO_GRAPH_BASE.refreshTopbar();
captureMovingComponentTime("BUTTON");
});
$(document).on("click",".partoArrowImageRight",function(){var endDt=PARTO_GRAPH_BASE.getEndDate()+PARTO_GRAPH_BASE.getMajorTickLabelStep()*PARTO_GRAPH_BASE.getMajorTickStep()*ONE_HOUR_MS;
endDt=PARTO_GRAPH_BASE.getAdjustedEndDateForScrolling(endDt,0);
PARTO_GRAPH_BASE.refreshGraph(endDt);
PARTO_TABLE_BASE.refreshTable();
PARTO_GRAPH_BASE.refreshTopbar();
captureMovingComponentTime("BUTTON");
});
$(document).on("click",".parto1HrButton",function(){PARTO_GRAPH_BASE.repaintComponents(1);
captureTimeScaleClickTime("1");
});
$(document).on("click",".parto4HrButton",function(){PARTO_GRAPH_BASE.repaintComponents(4);
captureTimeScaleClickTime("4");
});
$(document).on("click",".parto8HrButton",function(){PARTO_GRAPH_BASE.repaintComponents(8);
captureTimeScaleClickTime("8");
});
$(document).on("click",".parto12HrButton",function(){PARTO_GRAPH_BASE.repaintComponents(12);
captureTimeScaleClickTime("12");
});
$(document).on("click",".parto24HrButton",function(){PARTO_GRAPH_BASE.repaintComponents(24);
captureTimeScaleClickTime("24");
});
function captureMovingComponentTime(triggeringMethod){var timeScaleTimer=new CapabilityTimer("CAP:MPG.PARTOGRAMGRAPHBASE.O2 - moving component","");
if(timeScaleTimer){timeScaleTimer.addMetaData("rtms.legacy.metadata.1",triggeringMethod);
timeScaleTimer.capture();
}}};
this.setGraphsCommonCSS=function(){this.addOpenHandCursor();
};
this.repaintComponents=function(hourWindow){var buttonName="parto"+hourWindow+"HrButton";
this.setHourWindow(hourWindow);
this.setFinalEndTime();
var endDt=this.getEndDate();
endDt=this.getAdjustedEndDateForScaleSwitch(endDt,0);
this.refreshGraph(endDt);
$(".lookback-button-active").removeClass("lookback-button-active");
$("."+buttonName).addClass("lookback-button-active");
PARTO_TABLE_BASE.redrawTable(hourWindow);
this.refreshTopbar();
};
this.addOpenHandCursor=function(){if(this.components.length===0){return;
}var component=this.components[0];
var staticContentPath=component.getCriterion().static_content;
var cursorPath=staticContentPath+"/images/partoOpenHand.cur";
$(".partogramGraphDiv").find(".jqplot-event-canvas").css("cursor","url("+cursorPath+"), default");
};
this.addGrabbingHandCursor=function(){if(this.components.length===0){return;
}var component=this.components[0];
var staticContentPath=component.getCriterion().static_content;
var cursorPath=staticContentPath+"/images/partoClosedHand.cur";
$(".partogramGraphDiv").find(".jqplot-event-canvas").css("cursor","url("+cursorPath+"), default");
};
this.getWidthOffsetForGraph=function(){if(this.offsetWidth){return this.offsetWidth;
}else{var widthOffset=0;
var axisMargin=10;
var fifthsPalPableAxisWidth=6;
var fetalStationAxisWidth=12;
if(this.fetalHeadEngagementMode){if(this.fetalHeadEngagementMode==="FIFTHS_PALPABLE"){widthOffset=fifthsPalPableAxisWidth;
}else{widthOffset=fetalStationAxisWidth;
}}widthOffset+=axisMargin;
this.offsetWidth=widthOffset;
return widthOffset;
}};
}var partoGraphBaseObj=new PartoGraphBase();
var currentTime=new Date().getTime();
partoGraphBaseObj.setPartogramLastLoadTime(currentTime);
partoGraphBaseObj.registerEvents();
return partoGraphBaseObj;
})();
