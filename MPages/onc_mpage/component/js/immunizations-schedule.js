ImmunizationScheduleView=function(criterion){MP_Util.LogInfo("Initializing Immunization Schedule MPages View");
this.m_criterion=criterion;
this.logLaunchImmunForecasterAuditEvent();
this.m_viewTimer=new RTMSTimer("USR:IMMUN.SCHED Launch Immunization Forecaster",this.m_criterion.category_mean);
this.m_viewTimer.start();
this.m_recordData=null;
this.m_HITestURI="";
this.m_HILookUpKey="";
this.m_aliasType="";
this.m_aliasPool="";
this.m_immunForecastBRInd=0;
this.m_immuni18n=i18n.discernabu.immunization_schedule;
this.m_immunizationsUtil=null;
this.m_patientDOB=null;
this.m_referenceData=null;
this.m_visInterval=null;
this.currentVaccineEventIndex=null;
this.currentEventIndex=null;
var self=this;
var codeSet30442Callback=function(codeSetReply){if(codeSetReply){self.m_codeSet30442=codeSetReply;
}};
MP_Util.GetCodeSetAsync(30442,codeSet30442Callback);
this.loadReferenceData();
};
ImmunizationScheduleView.prototype=new MPageView();
ImmunizationScheduleView.prototype.constructor=MPageView;
ImmunizationScheduleView.prototype.renderView=function(){var renderTimer;
try{MP_Util.LogInfo("Rendering Immunization Schedule MPages View");
renderTimer=new RTMSTimer("ENG:IMMUN.SCHED Render Immunization Forecaster",this.getCategoryMean());
renderTimer.start();
var viewContainer=$("#"+this.getCategoryMean());
viewContainer.empty();
viewContainer.append("<div id='refreshViewDataSpinner"+this.getViewId()+"' class='immun-schedule-refresh-loading-spinner loading-screen'><div class='loading-spinner'>&nbsp;</div></div>");
var forecastErrorsLength=this.m_recordData.IMMUN_FORECAST.FORECAST_ERRORS.length;
if(forecastErrorsLength){var errorHtml="<div class='immun-schedule-error-container'>";
for(var e=0;
e<forecastErrorsLength;
e++){errorHtml+=this.createForecastError(this.m_recordData.IMMUN_FORECAST.FORECAST_ERRORS[e].ERROR_FLAG);
}errorHtml+="</div>";
viewContainer.append(errorHtml);
viewContainer.append(this.createTopBannerHtml());
this.addRefreshButton();
if(this.m_viewTimer){this.m_viewTimer.stop();
this.m_viewTimer=null;
}if(renderTimer){renderTimer.stop();
}return;
}this.m_sortedImmunizationEvents=[];
this.m_patientDOB=this.getCriterion().getPatientInfo().getDOB();
viewContainer.append(this.renderSchedule(this.m_recordData.IMMUN_FORECAST));
$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol-collapsed > *:not(div:first-child)").hide();
this.resizeView();
this.addImmunizationScheduleEventHandlers();
this.addRefreshButton();
this.addTodayButton();
this.addActionButtons();
if(this.m_viewTimer){this.m_viewTimer.stop();
this.m_viewTimer=null;
}if(renderTimer){renderTimer.stop();
}}catch(err){if(this.m_viewTimer){this.m_viewTimer.fail();
this.m_viewTimer=null;
}if(renderTimer){renderTimer.fail();
}logger.logJSError(err,this,"immunization-schedule.js","renderView");
}finally{$("#refreshViewDataSpinner"+this.getViewId()).hide();
}};
ImmunizationScheduleView.prototype.loadViewSettings=function(){};
ImmunizationScheduleView.prototype.initializeComponents=function(){};
ImmunizationScheduleView.prototype.resizeView=function(){var vwpBodyContainer=$("#"+this.getCategoryMean());
if(vwpBodyContainer.length&&vwpBodyContainer.is(":visible")===false){return;
}vwpBodyContainer.css("height","100%");
var maxWidth=0;
$("#immunScheduleTableContent"+this.getViewId()+" td:first-child, #immunScheduleTableContent"+this.getViewId()+" th.immun-o2-schedule-headcol").each(function(){maxWidth=Math.max(maxWidth,$(this).width());
$(this).parent().height($(this).height());
});
$("#immunScheduleTableContent"+this.getViewId()+" td:first-child").width(maxWidth);
$("#immunScheduleTableContent"+this.getViewId()+" th.immun-o2-schedule-headcol").width(maxWidth);
$("#immunScheduleTableContent"+this.getViewId()+" th.immun-o2-schedule-headcol").height($("#immunScheduleTableContent"+this.getViewId()+" th.immun-o2-schedule-headcol").next().height());
$("<style>#immunScheduleTableContent"+this.getViewId()+" tr::before{width:"+maxWidth+"px}</style>").appendTo("head");
$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol-detail").width($("#immunScheduleTableContent"+this.getViewId()).width()-$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol").width()-9);
$("#immun-sched-bottom-scroll"+this.getViewId()).css("margin-left",maxWidth);
var tableContent=$("#immunScheduleTableContent"+this.getViewId());
$("#immun-sched-bottom-scroll"+this.getViewId()).width(tableContent.width()-$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol-collapsed").width());
$("#immun-sched-bottom-scroll"+this.getViewId()+" > div").width(tableContent.children("table").width()-maxWidth);
$("#immun-sched-headcol-first"+this.getViewId()).width($(".immun-o2-schedule-headcol").width()-37);
$("#immun-sched-top-cdc"+this.getViewId()).width($(".immun-o2-schedule-headcol").width()-21);
$("#immunScheduleTableContent"+this.getViewId()+" .immun-o2-schedule-other-vaccines").width($(".immun-o2-schedule-headcol").width()-3);
this.linkTableScrolling();
this.updateDetailContainerHeight();
var headcol=tableContent.find(".immun-o2-schedule-headcol-expanded");
if(headcol.length){this.scrollIntoView(headcol);
}};
ImmunizationScheduleView.prototype.postProcessing=function(){CERN_EventListener.removeListener({},"Updated Immunizations Available",this.refreshViewData,this);
CERN_EventListener.addListener({},"Updated Immunizations Available",this.refreshViewData,this);
};
ImmunizationScheduleView.prototype.refreshViewData=function(){try{var self=this;
$("#refreshViewDataSpinner"+this.getViewId()).show();
this.m_viewTimer=new RTMSTimer("USR:IMMUN.SCHED Refresh Immunization Forecaster",this.getCategoryMean());
this.m_viewTimer.start();
this.m_recordData=null;
var criterion=this.getCriterion();
var retrieveAdditionalDetails=1;
var HITestURI="";
var HILookUpKey="";
var aliasType="";
var aliasPool=0;
var immunForecastBRInd=1;
var scriptRequest=new ScriptRequest();
scriptRequest.setProgramName("mp_get_immunizations_json");
scriptRequest.setParameterArray(["^MINE^",criterion.person_id+".0",criterion.provider_id+".0",criterion.encntr_id+".0",criterion.ppr_cd+".0",retrieveAdditionalDetails,"^"+HILookUpKey+"^","^"+aliasType+"^",aliasPool+".0","^"+HITestURI+"^",0,1,immunForecastBRInd]);
scriptRequest.setAsyncIndicator(true);
scriptRequest.setResponseHandler(function(scriptReply){var scriptResponse=scriptReply.getResponse();
if(scriptResponse.STATUS_DATA.STATUS!=="F"){self.setRecordData(scriptReply.getResponse());
self.renderView();
}else{var errorContent=MP_Util.HandleErrorResponse("immun-schedule");
if(typeof errorContent==="string"){var viewContainer=$("#"+self.getCategoryMean());
viewContainer.html("<div class='immun-schedule-error-container'>"+self.createForecastError(i18n.discernabu.ERROR_RETREIVING_DATA)+"</div>");
viewContainer.append(self.createTopBannerHtml());
self.addRefreshButton();
}if(self.m_viewTimer){self.m_viewTimer.fail();
self.m_viewTimer=null;
}}$("#refreshViewDataSpinner"+self.getViewId()).hide();
});
scriptRequest.performRequest();
}catch(err){if(this.m_viewTimer){this.m_viewTimer.fail();
this.m_viewTimer=null;
}logger.logJSError(err,this,"immunization-schedule.js","refreshViewData");
$("#refreshViewDataSpinner"+this.getViewId()).hide();
}};
ImmunizationScheduleView.prototype.createForecastError=function(errorFlag,primaryText){try{var primary="";
var secondary="";
switch(errorFlag){case 1:primary=this.m_immuni18n.ERROR_FORECAST_RESULT_INQUIRY_PRIV_PRIMARY;
secondary=this.m_immuni18n.ERROR_FORECAST_WILL_BE_SUSPENDED;
break;
case 2:primary=this.m_immuni18n.ERROR_FORECAST_INVALID_BIRTHDAY_PRIMARY;
secondary=this.m_immuni18n.ERROR_FORECAST_WILL_BE_SUSPENDED;
break;
case 3:primary=this.m_immuni18n.ERROR_FORECAST_INVALID_SEX_PRIMARY;
secondary=this.m_immuni18n.ERROR_FORECAST_WILL_BE_SUSPENDED;
break;
case 4:primary=this.m_immuni18n.ERROR_FORECAST_VACCINE_GROUP_NOT_FOUND_PRIMARY;
secondary=this.m_immuni18n.ERROR_FORECAST_VACCINE_GROUP_NOT_FOUND_SECONDARY;
break;
default:primary=this.m_immuni18n.ERROR_FORECAST_UNKNOWN_PRIMARY;
secondary=this.m_immuni18n.ERROR_FORECAST_WILL_BE_SUSPENDED;
break;
}if(typeof primaryText!=="undefined"&&primaryText.length){primary=primaryText;
}var banner=new MPageUI.AlertBanner();
banner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
banner.setPrimaryText(primary);
if(secondary.length){banner.setSecondaryText(secondary);
}return banner.render();
}catch(err){logger.logJSError(err,this,"immunization-schedule.js","createForecastError");
return"";
}};
ImmunizationScheduleView.prototype.setRecordData=function(recordData){this.m_recordData=recordData;
};
ImmunizationScheduleView.prototype.setCriterion=function(criterion){this.m_criterion=criterion;
};
ImmunizationScheduleView.prototype.getCriterion=function(){return this.m_criterion;
};
ImmunizationScheduleView.prototype.setId=function(viewId){this.m_viewId=viewId;
};
ImmunizationScheduleView.prototype.getViewId=function(){return this.m_viewId;
};
ImmunizationScheduleView.prototype.addTodayButton=function(){try{var self=this;
var $container=$("#immun-sched-top-today"+this.getViewId());
var button=new MPageUI.Button();
button.setLabel(this.m_immuni18n.TODAY);
button.setOnClickCallback(function(){self.setHorizontalScrollPosition();
});
$container.append(button.render());
button.attachEvents();
this.setHorizontalScrollPosition();
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","addTodayButton");
}};
ImmunizationScheduleView.prototype.addRefreshButton=function(){try{var self=this;
var $container=$("#immun-sched-top-banner"+this.getViewId());
var refreshButtonContainer=null;
refreshButtonContainer=$("<span class='immun-schedule-refresh-button'></span>").attr("id","immunSchedViewRefresh"+this.m_viewId).attr("title",this.getAsOfDateString()).html("&nbsp;");
var immunScheduleViewRefreshHandler=function(){refreshButtonContainer.off("click");
setTimeout(function(){refreshButtonContainer.click(immunScheduleViewRefreshHandler);
},1000);
self.refreshViewData();
};
refreshButtonContainer.click(immunScheduleViewRefreshHandler);
$container.append(refreshButtonContainer);
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","addRefreshButton");
}};
ImmunizationScheduleView.prototype.setHorizontalScrollPosition=function(){try{var scroller=$("#immun-sched-bottom-scroll"+this.getViewId());
var pastColumns=$("#"+this.getCategoryMean()+" .immun-o2-schedule-header-past-row");
if(pastColumns.length<=2){scroller[0].scrollLeft=0;
}else{var width=pastColumns[0].offsetWidth;
scroller[0].scrollLeft=(width*pastColumns.length)-(($("#immun-o2-schedule-table"+this.getViewId()).width()-$("#"+this.getCategoryMean()+" .immun-o2-schedule-section-text").width())/2)+width;
}}catch(err){logger.logJSError(err,this,"immunizations-o2.js","setHorizontalScrollPosition");
}};
ImmunizationScheduleView.prototype.linkTableScrolling=function(){var bs=$("#immun-sched-bottom-scroll"+this.getViewId()),ts=$("#immunScheduleTableContent"+this.getViewId());
ts.scroll(function(){bs.scrollLeft(ts.scrollLeft());
});
bs.scroll(function(){ts.scrollLeft(bs.scrollLeft());
});
};
ImmunizationScheduleView.prototype.expandImmunizationDetails=function($td){var $row=$td.closest("tr");
var immunizationScheduleHeadcolDiv=$row.find(".immun-o2-schedule-headcol > div:first-child");
this.activateImmunizationEvent($td,$row);
if(immunizationScheduleHeadcolDiv.parent().hasClass("immun-o2-schedule-headcol-expanded")){return false;
}immunizationScheduleHeadcolDiv.parent().addClass("immun-o2-schedule-headcol-expanded").removeClass("immun-o2-schedule-headcol-collapsed");
immunizationScheduleHeadcolDiv.siblings().show();
$("#immun-sched-overlay"+this.getViewId()).show();
immunizationScheduleHeadcolDiv.parent().css("z-index","2");
var ol=immunizationScheduleHeadcolDiv.siblings("ol");
if(ol.length){var active=ol.children(".immun-o2-schedule-listItem-active");
if(active.length){ol.scrollTo(active);
}}this.updateDetailContainerHeight();
var elem=$td.parent();
if(elem.hasClass("immun-o2-schedule-headcol-expanded")===false){elem=elem.find(".immun-o2-schedule-headcol-expanded");
}this.scrollIntoView(elem);
return true;
};
ImmunizationScheduleView.prototype.collapseImmunizationDetails=function(){var immunizationScheduleHeadcolDiv=$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol-expanded > div:first-child");
immunizationScheduleHeadcolDiv.parent().addClass("immun-o2-schedule-headcol-collapsed").removeClass("immun-o2-schedule-headcol-expanded");
immunizationScheduleHeadcolDiv.removeClass("immun-o2-schedule-listItem-active");
immunizationScheduleHeadcolDiv.siblings().hide();
$("#immun-sched-overlay"+this.getViewId()).hide();
immunizationScheduleHeadcolDiv.removeClass("immun-o2-schedule-listItem-active");
immunizationScheduleHeadcolDiv.siblings("ol").css("min-height",0);
immunizationScheduleHeadcolDiv.parent().css("z-index","");
immunizationScheduleHeadcolDiv.closest("tr").css("height",immunizationScheduleHeadcolDiv.parent().height());
this.resizeView();
};
ImmunizationScheduleView.prototype.addImmunizationScheduleEventHandlers=function(){var self=this;
$("#"+this.getCategoryMean()+" .immun-o2-schedule-text").click(function(){self.expandImmunizationDetails($(this));
});
$("#"+this.getCategoryMean()+" .immun-o2-schedule-today-text").click(function(){self.expandImmunizationDetails($(this));
});
$("#immun-sched-overlay"+this.getViewId()).click(function(){self.collapseImmunizationDetails();
});
$("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol > div:first-child").click(function(){if($(this).hasClass("immun-o2-schedule-listItem-active")){self.collapseImmunizationDetails();
}else{self.expandImmunizationDetails($(this));
}});
};
ImmunizationScheduleView.prototype.getSortedImmunizationEvents=function(){if(typeof this.m_sortedImmunizationEvents==="undefined"){this.m_sortedImmunizationEvents=[];
}return this.m_sortedImmunizationEvents;
};
ImmunizationScheduleView.prototype.createTopBannerHtml=function(){return"<div id = 'immun-sched-top-banner"+this.getViewId()+"' class='immun-o2-schedule-top-banner'> <div class='immun-o2-schedule-top-cdc' id = 'immun-sched-top-cdc"+this.getViewId()+"' ><a href='http://www.cdc.gov/vaccines/schedules/hcp/imz/child-adolescent.html' target='_blank'>"+this.m_immuni18n.CDC_SCHEDULE+"</a></div> <div id = 'immun-sched-top-today"+this.getViewId()+"' class='immun-o2-schedule-top-today'> </div></div>";
};
ImmunizationScheduleView.prototype.renderSchedule=function(forecastRecs){try{var scheduleHTML="";
var self=this;
var doseLen=0;
var dates=[];
var doses=[];
var columns=[];
var pastDates={};
var isOverDue=false;
isOverDue=this.checkForOverDues(forecastRecs);
doses=this.reorderDoseRangesBasedOnOverlaps(forecastRecs);
dates=this.getSortedDates(doses,forecastRecs,isOverDue);
columns=this.calculateColumns(dates);
pastDates=this.getPastEventDates(forecastRecs);
var eventsByVaccineGroup=this.getPastAdministrationsAndExceptions(forecastRecs);
var monthDiff=function(day1,day2){var months=(day2.getFullYear()-day1.getFullYear())*12;
months+=day2.getMonth()-day1.getMonth();
return months<=0?0:months;
};
var convertToDisplayUnit=function(month){var durationDisplay="";
if(month>=24){durationDisplay=Math.floor(month/12)+" "+self.m_immuni18n.YEARS;
}else{durationDisplay=month+" "+((month%12)===1?self.m_immuni18n.MONTH:self.m_immuni18n.MONTHS);
}return durationDisplay;
};
var isTodayColumnNeeded=function(thisColumns){if(thisColumns.length===0){return true;
}return new Date().setHours(0,0,0,0)<thisColumns[0].from;
};
scheduleHTML+=this.createTopBannerHtml();
scheduleHTML+="<div id = 'immun-o2-schedule-table"+this.getViewId()+"' class='immun-schedule-table-outer'> <div class='immun-o2-schedule-left-scroll'>";
scheduleHTML+="<div id='immunScheduleTableContent"+this.getViewId()+"' class='immun-o2-schedule-table-content'><table><tr><th class = 'immun-o2-schedule-headcol-first' id = 'immun-sched-headcol-first"+this.getViewId()+"' >Immunization</th>";
for(var index=0;
index<pastDates.length;
index++){if(index===pastDates.length-1&&this.areSameDates(pastDates[index],new Date())){pastDates.pop();
}else{scheduleHTML+="<th class = 'immun-o2-schedule-header-past-row'>"+this.convertDateTimeToFormat(pastDates[index],"mediumDate")+"</th>";
}}var todayColumnCreated=isTodayColumnNeeded(columns,forecastRecs);
if(todayColumnCreated){scheduleHTML+="<th class = 'immun-o2-schedule-header-row-today'>"+self.m_immuni18n.TODAY+"</th>";
}var startMonth;
var endMonth;
var numColumns=columns.length;
for(index=0;
index<numColumns;
index++){var column=columns[index];
startMonth=convertToDisplayUnit(monthDiff(this.m_patientDOB,column.from));
endMonth=convertToDisplayUnit(monthDiff(this.m_patientDOB,column.to));
if(todayColumnCreated===false&&index===0){if(isOverDue){scheduleHTML+="<th class = 'immun-o2-schedule-header-row-today'>"+self.m_immuni18n.TODAY+"</th>";
}else{scheduleHTML+="<th  class = 'immun-o2-schedule-header-row-today'><div class = 'immun-o2-schedule-header-text-left'>"+self.m_immuni18n.TODAY+"</div><div class = 'immun-o2-schedule-header-text-right'><div class = 'immun-o2-schedule-header-text-top'>"+endMonth+"</div><div class = 'immun-o2-schedule-header-text-bottom'>"+this.convertDateTimeToFormat(column.to,"mediumDate")+"</div></div> &nbsp;</th>";
}}else{if(column.show===true){if(startMonth!==endMonth){scheduleHTML+="<th  class = 'immun-o2-schedule-header-row'> <div class = 'immun-o2-schedule-header-text-left'><div class = 'immun-o2-schedule-header-text-top'>"+startMonth+"</div><div class = 'immun-o2-schedule-header-text-bottom'>"+this.convertDateTimeToFormat(column.from,"mediumDate")+"</div></div><div class = 'immun-o2-schedule-header-text-right'><div class = 'immun-o2-schedule-header-text-top'>"+endMonth+"</div><div class = 'immun-o2-schedule-header-text-bottom'>"+this.convertDateTimeToFormat(column.to,"mediumDate")+"</div></div> &nbsp;</th>";
}else{scheduleHTML+="<th  class = 'immun-o2-schedule-header-row'> <div class = 'immun-sched-center-month'>"+startMonth+"</div><div><div class = 'immun-o2-schedule-header-text-left'>"+this.convertDateTimeToFormat(column.from,"mediumDate")+"</div><div class = 'immun-o2-schedule-header-text-right'>"+this.convertDateTimeToFormat(column.to,"mediumDate")+"</div></div> &nbsp;</th>";
}}else{scheduleHTML+="<th> &nbsp; </th>";
}}}scheduleHTML+="</tr>";
var display="";
var vaccineGroup=null;
var otherVaccineArray=[];
var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
var todayEventIndex=0;
for(var j=0;
j<vaccineGroupLen;
j++){this.getSortedImmunizationEvents().push(this.sortImmunizationEvents(forecastRecs.VACCINE_GROUPS[j]));
todayEventIndex=forecastRecs.VACCINE_GROUPS[j].VACCINATIONS.length+forecastRecs.VACCINE_GROUPS[j].EXCEPTIONS.length;
vaccineGroup=forecastRecs.VACCINE_GROUPS[j];
vaccineGroup.index=j;
if(vaccineGroup.DOSES.length===0){otherVaccineArray.push(vaccineGroup);
continue;
}var recommendedDoseInd=true;
scheduleHTML+=this.renderRowHeader(vaccineGroup,recommendedDoseInd);
var doseArray=doses[j];
doseLen=doseArray.length;
var colSpan=1;
var events=eventsByVaccineGroup[j];
scheduleHTML+=this.renderPastEvents(events,pastDates,recommendedDoseInd);
var todayEvent=null;
if(events.length>0&&this.areSameDates(events[events.length-1].date,new Date())){todayEvent=events[events.length-1];
todayEventIndex--;
}if(todayColumnCreated){scheduleHTML+=this.renderTodayEvent(todayEvent,vaccineGroup,todayColumnCreated,todayEventIndex);
if(todayEvent!==null){todayEventIndex++;
}}var todayColumnClass=!todayColumnCreated;
var doseIndex=0;
for(index=0;
index<numColumns;
index++){var fromDate;
var untilDate;
if(vaccineGroup.STATUS_FLAG===3){if(todayEvent!==null){todayEventIndex++;
}scheduleHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+todayEventIndex+"'> <div class = 'immun-o2-schedule-overdue-today'>"+this.m_immuni18n.DOSE+" "+this.getNextRecommendedDose(vaccineGroup.DOSES)+"</div></td>";
if(this.getNextRecommendedDose(vaccineGroup.DOSES)===vaccineGroup.DOSES.length){scheduleHTML+="<td class = 'immun-o2-schedule-blank-cell' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"'>  </td>";
}else{scheduleHTML+="<td class = 'immun-o2-schedule-text' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"'>"+this.m_immuni18n.FORECAST_SUSPENDED+"</td>";
}break;
}var dose;
column=columns[index];
var recommendationToBeShown=false;
if(doseIndex<doseLen){dose=doseArray[doseIndex];
fromDate=this.getDateFromString(dose.fromDate);
untilDate=this.getDateFromString(dose.untilDate);
if(this.areSameDates(fromDate,new Date())){recommendationToBeShown=true;
}}if(recommendationToBeShown===false&&todayColumnClass&&vaccineGroup.STATUS_FLAG>=3){scheduleHTML+=this.renderTodayEvent(todayEvent,vaccineGroup,todayColumnCreated,todayEventIndex);
if(todayEvent!==null){todayEventIndex++;
}todayColumnClass=false;
continue;
}if(recommendationToBeShown===false&&todayColumnClass&&todayEvent!==null){scheduleHTML+=this.renderTodayEvent(todayEvent,vaccineGroup,todayColumnCreated,todayEventIndex);
todayEventIndex++;
todayColumnClass=false;
continue;
}if(vaccineGroup.STATUS_FLAG===5){scheduleHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"' data-event-index='-1'>"+self.m_immuni18n.SERIES+" "+self.m_immuni18n.CONTRAINDICATED+"</td>";
break;
}if(vaccineGroup.STATUS_FLAG===7){scheduleHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"' data-event-index='-1'>"+self.m_immuni18n.SERIES+" "+self.m_immuni18n.REFUSED+"</td>";
break;
}if(vaccineGroup.STATUS_FLAG===4||vaccineGroup.STATUS_FLAG===6){scheduleHTML+="<td class = 'immun-o2-schedule-blank-cell' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"' data-event-index='-1'>  </td>";
break;
}if(vaccineGroup.STATUS_FLAG===8){scheduleHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' colspan = '"+(todayColumnClass?(numColumns-1):numColumns)+"' data-event-index='-1'>"+self.m_immuni18n.SERIES+" "+self.m_immuni18n.UNNECESSARY+"</td>";
break;
}if(doseIndex===doseLen){scheduleHTML+="<td class = 'immun-o2-schedule-blank-cell'></td>";
continue;
}if(column.from.getTime()<fromDate.getTime()){var classText=(todayColumnClass)?"'immun-o2-schedule-table-today-blank'":"'immun-o2-schedule-blank-cell'";
scheduleHTML+="<td class = "+classText+"></td>";
todayColumnClass=false;
}else{if(column.from.getTime()===fromDate.getTime()){display=dose.doseDisplay;
if(column.to.getTime()===untilDate.getTime()){classText=(todayColumnClass)?"'immun-o2-schedule-today-text'":"'immun-o2-schedule-text'";
scheduleHTML+="<td class = "+classText+" colspan= '"+colSpan+"' data-event-index='"+(todayEventIndex+dose.eventIndexAdj)+"'>"+display+"</td>";
display="";
doseIndex++;
todayColumnClass=false;
}else{colSpan++;
}}else{if(column.from.getTime()>fromDate.getTime()&&column.to.getTime()<untilDate.getTime()){colSpan++;
}else{if(column.to.getTime()===untilDate.getTime()){if(todayColumnClass){scheduleHTML+="<td class = 'immun-o2-schedule-today-text' colspan= '1' data-event-index='"+(todayEventIndex+dose.eventIndexAdj)+"'>"+display+"</td>";
scheduleHTML+="<td class = 'immun-o2-schedule-text' colspan= '"+(colSpan-1)+"' data-event-index='"+(todayEventIndex+dose.eventIndexAdj)+"'> </td>";
}else{scheduleHTML+="<td class = 'immun-o2-schedule-text' colspan= '"+colSpan+"' data-event-index='"+(todayEventIndex+dose.eventIndexAdj)+"'>"+display+"</td>";
}colSpan=1;
display="";
doseIndex++;
todayColumnClass=false;
}}}}}scheduleHTML+="</tr>";
}if(otherVaccineArray.length>0){scheduleHTML+="<tr><td class = 'immun-o2-schedule-other-vaccines'> <div class='immun-schedule-other-vaccines-text'>"+self.m_immuni18n.OTHER_VACCINES+" ("+otherVaccineArray.length+")</div></td>";
scheduleHTML+="<td class = 'immun-o2-schedule-other-vaccines' colspan = '"+(pastDates.length+numColumns+((todayColumnCreated)?1:0))+"'></td></tr>";
}for(index=0;
index<otherVaccineArray.length;
index++){vaccineGroup=otherVaccineArray[index];
todayEventIndex=vaccineGroup.VACCINATIONS.length+vaccineGroup.EXCEPTIONS.length;
recommendedDoseInd=false;
scheduleHTML+=this.renderRowHeader(vaccineGroup,recommendedDoseInd);
events=eventsByVaccineGroup[vaccineGroup.index];
scheduleHTML+=this.renderPastEvents(events,pastDates,recommendedDoseInd);
todayEvent=null;
if(events.length>0&&this.areSameDates(events[events.length-1].date,new Date())){todayEvent=events[events.length-1];
todayEventIndex--;
}scheduleHTML+=this.renderTodayEvent(todayEvent,vaccineGroup,todayColumnCreated,todayEventIndex);
if(todayColumnCreated){colSpan=numColumns;
}else{colSpan=(numColumns-1);
}scheduleHTML+="<td class = 'immun-o2-schedule-text' colspan = '"+colSpan+"'>"+self.m_immuni18n.NO_FORECAST_AVAILABLE+"</td>";
}scheduleHTML+="</table></div> <!-- END immun-o2-schedule-table-content --></div> <!-- END immun-o2-schedule-left-scroll --></div><div class='immun-o2-schedule-bottom-scroll'  id = 'immun-sched-bottom-scroll"+this.getViewId()+"' ><div>&nbsp;</div></div> <div class='immun-o2-schedule-overlay' id = 'immun-sched-overlay"+this.getViewId()+"'></div>";
scheduleHTML+=this.buildBottomBannerHtml();
return scheduleHTML;
}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","renderSchedule");
}};
ImmunizationScheduleView.prototype.buildBottomBannerHtml=function(){var bottomHtml="<div class='immun-o2-schedule-bottom-banner'>";
bottomHtml+="<div></div>";
bottomHtml+="<div id='actionButtonContainer"+this.getViewId()+"'></div>";
bottomHtml+="</div>";
return bottomHtml;
};
ImmunizationScheduleView.prototype.addActionButtons=function(){try{var actionButtonContainer=$("#actionButtonContainer"+this.getViewId());
actionButtonContainer.append("<div id='docHistoryBtn"+this.getViewId()+"' class='immun-schedule-action-button'></div>");
actionButtonContainer.append("<div id='chartExceptionBtn"+this.getViewId()+"' class='immun-schedule-action-button'></div>");
var immunUtil=this.getImmunizationsUtil();
var missingEncounter=true;
if(this.getCriterion().encntr_id>0){missingEncounter=false;
}var docHistoryButton=new MPageUI.Button();
docHistoryButton.setLabel(this.m_immuni18n.DOCUMENT_HISTORY);
docHistoryButton.setDisabled(missingEncounter);
docHistoryButton.setOnClickCallback(function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.DOCUMENT_HISTORY;
immunUtil.getPopupImmunList();
immunUtil.createDocHistoryModal();
});
$("#docHistoryBtn"+this.getViewId()).append(docHistoryButton.render());
docHistoryButton.attachEvents();
var chartExceptionButton=new MPageUI.Button();
chartExceptionButton.setLabel(this.m_immuni18n.CHART_EXCEPTION);
chartExceptionButton.setDisabled(missingEncounter);
chartExceptionButton.setOnClickCallback(function(){immunUtil.m_immunizationModalType=ImmunizationsUtil.ModalTypeEnum.CHART_EXCEPTION;
immunUtil.getPopupImmunList();
immunUtil.createChartExceptionModal();
});
$("#chartExceptionBtn"+this.getViewId()).append(chartExceptionButton.render());
chartExceptionButton.attachEvents();
}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","addActionButtons");
}};
ImmunizationScheduleView.prototype.checkForOverDues=function(forecastRecs){var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
for(var index=0;
index<vaccineGroupLen;
index++){var vaccineGroup=forecastRecs.VACCINE_GROUPS[index];
if(vaccineGroup.STATUS_FLAG===3){return true;
}}return false;
};
ImmunizationScheduleView.prototype.getNextRecommendedDose=function(doses){try{for(var index=0;
index<doses.length;
index++){var dose=doses[index];
if(dose.SATISFIED_BY.EVENT_ID===0&&dose.RECOMMENDED_IND===1){return dose.DOSE_NUMBER;
}}return 0;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getNextRecommendedDose");
}};
ImmunizationScheduleView.prototype.renderTodayEvent=function(todayEvent,vaccineGroup,todayColumn,dataEventIndex){try{var todayEventHTML="";
var statusFlag=vaccineGroup.STATUS_FLAG;
if(todayEvent!==null){if(todayEvent.type==="vaccination"){if(todayEvent.count>1&&todayEvent.dose===-1){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+todayEvent.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.count>1){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+todayEvent.display+"</div><div>"+todayEvent.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.dose===-1){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class= 'immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(todayEvent.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.dose===-2){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div> Dose Given </div><div class='immun-o2-schedule-didnt-count-text'>"+this.m_immuni18n.DID_NOT_COUNT+"- "+this.convertDateTimeToFormat(todayEvent.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.dose===0){var tertiaryDisplay=this.convertDateTimeToFormat(todayEvent.date,"mediumDate");
todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+todayEvent.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+tertiaryDisplay+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{tertiaryDisplay=this.m_immuni18n.DOSE+" "+todayEvent.dose+" - "+this.convertDateTimeToFormat(todayEvent.date,"mediumDate");
todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+todayEvent.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+tertiaryDisplay+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}}}}}}else{if(todayEvent.type==="exception"){if(todayEvent.count>1&&todayEvent.display==="Uncharted"){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+todayEvent.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.count>1){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+todayEvent.display+"</div><div>"+todayEvent.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{if(todayEvent.display==="Uncharted"){todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(todayEvent.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}else{todayEventHTML+="<td class = 'immun-o2-schedule-today-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+todayEvent.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(todayEvent.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(todayEvent)+"</td>";
}}}}}}else{if(todayColumn||statusFlag===4||statusFlag===5||statusFlag===6||statusFlag===7||statusFlag===0||statusFlag===8||vaccineGroup.DOSES.length===0){todayEventHTML+="<td class = 'immun-o2-schedule-table-today-blank'></td>";
}}return todayEventHTML;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderTodayEvent");
}};
ImmunizationScheduleView.prototype.areSameDates=function(d1,d2){try{return d1.getFullYear()===d2.getFullYear()&&d1.getMonth()===d2.getMonth()&&d1.getDate()===d2.getDate();
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","areSameDates");
}};
ImmunizationScheduleView.prototype.renderPastEvents=function(events,pastDates,recommendedDoseInd){try{var pastEventsHTML="";
var eventIndex=0;
var dataEventIndex=-1;
for(var dateIndex=0;
dateIndex<pastDates.length;
dateIndex++){if(eventIndex===events.length){pastEventsHTML+="<td class = 'immun-o2-schedule-blank-cell'></td>";
continue;
}var event=events[eventIndex];
if(this.areSameDates(pastDates[dateIndex],event.date)){dataEventIndex+=event.count;
if(event.type==="vaccination"){if(event.count>1&&event.dose===-1){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-uncharted' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+event.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.count>1){pastEventsHTML+="<td class = 'immun-o2-schedule-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+event.display+"</div><div>"+event.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.dose===-1){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-uncharted' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class= 'immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(event.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(recommendedDoseInd===false){pastEventsHTML+="<td class = 'immun-o2-schedule-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'>"+event.display+"</div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.dose===-2){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div> Dose Given </div><div class='immun-o2-schedule-didnt-count-text'>"+this.m_immuni18n.DID_NOT_COUNT+"- "+this.convertDateTimeToFormat(event.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.dose===0){var tertiaryDisplay=this.convertDateTimeToFormat(event.date,"mediumDate");
pastEventsHTML+="<td class = 'immun-o2-schedule-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+event.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+tertiaryDisplay+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{tertiaryDisplay=this.m_immuni18n.DOSE+" "+event.dose+" - "+this.convertDateTimeToFormat(event.date,"mediumDate");
pastEventsHTML+="<td class = 'immun-o2-schedule-text' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+event.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+tertiaryDisplay+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}}}}}}}else{if(event.type==="exception"){if(event.count>1&&event.display==="Uncharted"){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-uncharted' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+event.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.count>1){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+event.display+"</div><div>"+event.count+" "+this.m_immuni18n.ITEMS_DOCUMENTED+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{if(event.display==="Uncharted"){pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-uncharted' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(event.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}else{pastEventsHTML+="<td class = 'immun-o2-schedule-text immun-o2-schedule-text-exception' data-event-index='"+dataEventIndex+"'><div class = 'immun-sched-event-text-block'><div>"+event.display+"</div><div class='immun-o2-schedule-tertiary-text'>"+this.convertDateTimeToFormat(event.date,"mediumDate")+"</div></div>"+this.addCommentIconIfNeeded(event)+"</td>";
}}}}}eventIndex++;
}else{pastEventsHTML+="<td class = 'immun-o2-schedule-blank-cell'></td>";
}}return pastEventsHTML;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderPastEvents");
}};
ImmunizationScheduleView.prototype.addCommentIconIfNeeded=function(event){var self=this;
var pastEventsHTML="";
if(event.commentInd){pastEventsHTML+="<div class='immun-schedule-comment-icon' title='"+self.m_immuni18n.COMMENTS+"'></div>";
}return pastEventsHTML;
};
ImmunizationScheduleView.prototype.renderRowHeader=function(vaccineGroup){try{var rowHeaderHTML="";
rowHeaderHTML+="<tr data-vaccine-group-index='"+vaccineGroup.index+"'><td class='immun-o2-schedule-headcol immun-o2-schedule-headcol-collapsed'><div class='immun-schedule-headcol-flex'><div class='immun-schedule-expander-icon'></div><div>";
switch(vaccineGroup.STATUS_FLAG){case 5:case 6:case 7:case 8:rowHeaderHTML+="<div class='immun-o2-schedule-section-text immun-o2-schedule-inactive-text'>"+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY+"</div><div class='immun-o2-schedule-tertiary-text'>";
break;
default:rowHeaderHTML+="<div class='immun-o2-schedule-section-text'>"+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY+"</div><div class='immun-o2-schedule-tertiary-text'>";
break;
}switch(vaccineGroup.STATUS_FLAG){case 0:case 1:case 2:case 3:case 11:var lastAdmin=null;
var vaccinationsLength=vaccineGroup.VACCINATIONS.length;
for(var i=vaccinationsLength-1;
i>=0;
i--){if(vaccineGroup.VACCINATIONS[i].RESULT_STATUS_CODE.MEANING==="INERROR"){continue;
}lastAdmin=vaccineGroup.VACCINATIONS[i];
if(this.checkVaccineCountedStatus(lastAdmin.VACCINATION_FORECAST_STATUS)===false){rowHeaderHTML+="<div class='immun-schedule-vaccine-did-not-count immun-schedule-vaccine-did-not-count-header' title='"+this.m_immuni18n.DID_NOT_COUNT+"'></div>";
}var dateObj=new Date();
dateObj.setISO8601(lastAdmin.ADMIN_DT_TM);
rowHeaderHTML+=this.m_immuni18n.LAST_ADMIN+": "+this.convertPreciseDateToString(lastAdmin.ADMIN_DT_TM,lastAdmin.ADMIN_DT_PRECISION_FLAG,true)+" "+this.m_immuni18n.AT_AGE+" "+this.getImmunizationsUtil().calculateAge(dateObj);
break;
}if(lastAdmin===null){rowHeaderHTML+=this.m_immuni18n.NOT_STARTED;
}break;
case 4:rowHeaderHTML+=this.m_immuni18n.COMPLETED;
break;
case 5:rowHeaderHTML+=this.m_immuni18n.CONTRAINDICATED+" - "+this.m_immuni18n.DO_NOT_GIVE;
break;
case 6:rowHeaderHTML+=this.m_immuni18n.AGED_OUT+" - "+this.m_immuni18n.DO_NOT_GIVE;
break;
case 7:rowHeaderHTML+=this.m_immuni18n.REFUSED+" - "+this.m_immuni18n.DO_NOT_GIVE;
break;
case 8:rowHeaderHTML+=this.m_immuni18n.UNNECESSARY+" - "+this.m_immuni18n.DO_NOT_GIVE;
break;
case 9:rowHeaderHTML+=this.m_immuni18n.CONTRAINDICATED+" - "+this.m_immuni18n.POSTPONED;
break;
case 10:rowHeaderHTML+=this.m_immuni18n.REFUSED+" - "+this.m_immuni18n.POSTPONED;
break;
case 12:rowHeaderHTML+=this.m_immuni18n.CONTRAINDICATED+" - "+this.m_immuni18n.SEASONAL;
break;
case 13:rowHeaderHTML+=this.m_immuni18n.REFUSED+" - "+this.m_immuni18n.SEASONAL;
break;
case 14:rowHeaderHTML+=this.m_immuni18n.UNNECESSARY+" - "+this.m_immuni18n.SEASONAL;
break;
default:rowHeaderHTML+="&nbsp;";
break;
}rowHeaderHTML+="</div></div></div><ol></ol><div class='immun-o2-schedule-headcol-detail'></div></td>";
return rowHeaderHTML;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","renderRowHeader");
}};
ImmunizationScheduleView.prototype.getSortedDates=function(dosesByVaccineGroups,forecastRecs,isOverDue){try{var dateIndex=0;
var dateWithType={};
var dates=[];
var doses=null;
var doseLen;
var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
if(isOverDue){dateWithType={date:this.getDateFromString(this.convertDateToString(new Date())),type:"F"};
dates[dateIndex++]=dateWithType;
dateWithType={date:this.getDateFromString(this.convertDateToString(new Date())),type:"U"};
dates[dateIndex++]=dateWithType;
}for(var index=0;
index<vaccineGroupLen;
index++){var vaccineGroup=forecastRecs.VACCINE_GROUPS[index];
if(vaccineGroup.STATUS_FLAG>=3){continue;
}doses=dosesByVaccineGroups[index];
doseLen=doses.length;
for(var doseIndex=0;
doseIndex<doseLen;
doseIndex++){var dose=doses[doseIndex];
var fromDate=this.getDateFromString(dose.fromDate);
if(fromDate<new Date()){dose.fromDate=this.convertDateToString(new Date());
if(isOverDue){var tomorrowDate=this.convertDateToString(new Date(new Date().getTime()+24*60*60*1000));
fromDate=this.getDateFromString(tomorrowDate);
}else{fromDate=this.getDateFromString(dose.fromDate);
}}dateWithType={date:fromDate,type:"F"};
dates[dateIndex++]=dateWithType;
dateWithType={date:this.getDateFromString(dose.untilDate),type:"U"};
dates[dateIndex++]=dateWithType;
}}var arrResult={};
var n=dates.length;
for(i=0;
i<n;
i++){var item=dates[i];
arrResult[item.date+" - "+item.type]=item;
}var i=0;
var nonDuplicatedArray=[];
for(var anItem in arrResult){if(arrResult.hasOwnProperty(anItem)){nonDuplicatedArray[i++]=arrResult[anItem];
}}nonDuplicatedArray.sort(this.dynamicSortMultiple("date","type"));
return nonDuplicatedArray;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getSortedDates");
}};
ImmunizationScheduleView.prototype.dynamicSortMultiple=function(){var dynamicSort=function(property){var sortOrder=1;
if(property[0]==="-"){sortOrder=-1;
property=property.substr(1);
}return function(a,b){var result;
if(a[property]<b[property]){result=-1;
}else{if(a[property]>b[property]){result=1;
}else{result=0;
}}return result*sortOrder;
};
};
var props=arguments;
return function(obj1,obj2){var i=0,result=0,numberOfProperties=props.length;
while(result===0&&i<numberOfProperties){result=dynamicSort(props[i])(obj1,obj2);
i++;
}return result;
};
};
ImmunizationScheduleView.prototype.convertDateToString=function(date){try{var yyyy=date.getFullYear().toString();
var mm=(date.getMonth()+1).toString();
var dd=date.getDate().toString();
return yyyy+"-"+(mm[1]?mm:"0"+mm[0])+"-"+(dd[1]?dd:"0"+dd[0]);
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","convertDateToString");
}};
ImmunizationScheduleView.prototype.reorderDoseRangesBasedOnOverlaps=function(forecastRecs){try{var eventIndexAdj;
var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
var dosesByVaccineGroup=[];
var vaccineGroup;
var doseLen;
var self=this;
var doseOverlap=function(dose1,dose2){var dose1From=self.getDateFromString(dose1.RECOMMENDED_FROM);
var dose1Until=self.getDateFromString(dose1.RECOMMENDED_UNTIL);
var dose2From=self.getDateFromString(dose2.RECOMMENDED_FROM);
var dose2Until=self.getDateFromString(dose2.RECOMMENDED_UNTIL);
if(dose1From.getTime()<=dose2Until.getTime()&&dose2From.getTime()<=dose1Until.getTime()){return true;
}return false;
};
for(var vaccineindex=0;
vaccineindex<vaccineGroupLen;
vaccineindex++){eventIndexAdj=0;
vaccineGroup=forecastRecs.VACCINE_GROUPS[vaccineindex];
doseLen=vaccineGroup.DOSES.length;
var doseOverlapArray=[];
var overlapIndex=0;
var doseArray=[];
var doseIndex=0;
if(vaccineGroup.STATUS_FLAG>=3){dosesByVaccineGroup[vaccineindex]=doseArray;
continue;
}for(var index=1;
index<doseLen;
index++){var dose=vaccineGroup.DOSES[index];
var prevDose=vaccineGroup.DOSES[index-1];
if(prevDose.SATISFIED_BY.EVENT_ID>0){continue;
}if(prevDose.RECOMMENDED_IND!==1){eventIndexAdj++;
continue;
}var fromDate=this.getDateFromString(prevDose.RECOMMENDED_FROM);
var untilDate=this.getDateFromString(prevDose.RECOMMENDED_UNTIL);
if(fromDate<new Date().setHours(0,0,0,0)&&untilDate<new Date().setHours(0,0,0,0)){eventIndexAdj++;
continue;
}if(doseOverlapArray.length>0&&doseOverlap(doseOverlapArray[overlapIndex-1].toDose,dose)){doseOverlapArray[overlapIndex-1].toDose=dose;
doseArray[doseIndex-1].untilDate=dose.RECOMMENDED_UNTIL;
doseArray[doseIndex-1].doseDisplay=(doseOverlapArray[overlapIndex-1].toDose.DOSE_NUMBER-doseOverlapArray[overlapIndex-1].fromDose.DOSE_NUMBER+1)+" "+this.m_immuni18n.DOSE_SERIES;
}else{if(doseOverlap(prevDose,dose)){doseOverlapArray[overlapIndex++]={fromDose:prevDose,toDose:dose};
doseArray[doseIndex++]={doseDisplay:(dose.DOSE_NUMBER-prevDose.DOSE_NUMBER+1)+" "+this.m_immuni18n.DOSE_SERIES,fromDate:prevDose.RECOMMENDED_FROM,untilDate:dose.RECOMMENDED_UNTIL,eventIndexAdj:eventIndexAdj};
}else{doseArray[doseIndex++]={doseDisplay:this.m_immuni18n.DOSE+" "+prevDose.DOSE_NUMBER,fromDate:prevDose.RECOMMENDED_FROM,untilDate:prevDose.RECOMMENDED_UNTIL,eventIndexAdj:eventIndexAdj};
}}eventIndexAdj++;
}if(doseLen>0){dose=vaccineGroup.DOSES[doseLen-1];
if((doseOverlapArray.length===0||doseOverlapArray[overlapIndex-1].toDose.DOSE_NUMBER!==dose.DOSE_NUMBER)&&dose.RECOMMENDED_IND===1){fromDate=this.getDateFromString(dose.RECOMMENDED_FROM);
untilDate=this.getDateFromString(dose.RECOMMENDED_UNTIL);
if(fromDate<new Date().setHours(0,0,0,0)&&untilDate<new Date().setHours(0,0,0,0)){}else{doseArray[doseIndex++]={doseDisplay:this.m_immuni18n.DOSE+" "+dose.DOSE_NUMBER,fromDate:dose.RECOMMENDED_FROM,untilDate:dose.RECOMMENDED_UNTIL,eventIndexAdj:eventIndexAdj};
}eventIndexAdj++;
}}dosesByVaccineGroup[vaccineindex]=doseArray;
}return dosesByVaccineGroup;
}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","reorderDoseRangesBasedOnOverlaps");
}};
ImmunizationScheduleView.prototype.calculateColumns=function(dates){try{var columns=[];
var column={};
var dateLen=dates.length;
var colCount=0;
for(var index=1;
index<dateLen;
index++){var show;
var prevDate=dates[index-1];
var currDate=dates[index];
var timeDiff=Math.abs(currDate.date.getTime()-prevDate.date.getTime());
var diffDays=timeDiff/(1000*3600*24);
if(diffDays<1&&prevDate.type===currDate.type){continue;
}if(prevDate.type==="U"&&currDate.type==="F"&&diffDays<=1){continue;
}if(prevDate.type==="U"&&currDate.type==="F"){show=false;
}else{show=true;
}column={from:prevDate.date,to:currDate.date,show:show};
columns[colCount++]=column;
}return columns;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","calculateColumns");
}};
ImmunizationScheduleView.prototype.getPastEventDates=function(forecastRecs){try{var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
var pastDates={};
for(var index=0;
index<vaccineGroupLen;
index++){var vaccineGroup=forecastRecs.VACCINE_GROUPS[index];
var vaccinations=vaccineGroup.VACCINATIONS;
var dateTime=null;
for(var vaccIndex=0;
vaccIndex<vaccinations.length;
vaccIndex++){var vaccination=vaccinations[vaccIndex];
dateTime=new Date();
dateTime.setISO8601(vaccination.ADMIN_DT_TM);
dateTime.setHours(0,0,0,0);
pastDates[dateTime]=true;
}var exceptions=vaccineGroup.EXCEPTIONS;
for(var exceptionIndex=0;
exceptionIndex<exceptions.length;
exceptionIndex++){var exception=exceptions[exceptionIndex];
dateTime=new Date();
dateTime.setISO8601(exception.EXCEPTION_DT_TM);
dateTime.setHours(0,0,0,0);
pastDates[dateTime]=true;
}}var sortedPastDates=[];
var dateIndex=0;
for(var property in pastDates){if(pastDates.hasOwnProperty(property)){sortedPastDates[dateIndex++]=new Date(property);
}}sortedPastDates.sort(function(date1,date2){return date1-date2;
});
return sortedPastDates;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getPastEventDates");
}};
ImmunizationScheduleView.prototype.getPastAdministrationsAndExceptions=function(forecastRecs){try{var vaccineGroupLen=forecastRecs.VACCINE_GROUPS.length;
var eventsByVaccineGroups=[];
for(var index=0;
index<vaccineGroupLen;
index++){var events={};
var vaccineGroup=forecastRecs.VACCINE_GROUPS[index];
var vaccinations=vaccineGroup.VACCINATIONS;
var newDate=null;
var newEvent=null;
for(var vaccIndex=0;
vaccIndex<vaccinations.length;
vaccIndex++){var vaccination=vaccinations[vaccIndex];
var dateTime=new Date();
dateTime.setISO8601(vaccination.ADMIN_DT_TM);
var doses=vaccineGroup.DOSES;
var doseNumber;
if(vaccination.RESULT_STATUS_CODE.MEANING==="INERROR"){doseNumber=-1;
dateTime.setHours(0,0,0,0);
}else{if(this.checkVaccineCountedStatus(vaccination.VACCINATION_FORECAST_STATUS)===false){doseNumber=-2;
}else{doseNumber=this.getDoseNumber(vaccination.EVENT_ID,doses);
}}var eventDisplay="";
if(vaccination.PRODUCT.PRODUCT_NAME||vaccination.PRODUCT.PRODUCT_NAME!==""){eventDisplay=vaccination.PRODUCT.PRODUCT_NAME;
}else{eventDisplay=vaccination.IDENTIFIER.EVENT_CODE.DISPLAY;
}newEvent={date:dateTime,display:eventDisplay,dose:doseNumber,type:"vaccination",count:1};
if(vaccination.COMMENTS.length){newEvent.commentInd=true;
}newDate=new Date(dateTime.getFullYear(),dateTime.getMonth(),dateTime.getDate());
if(newDate in events){var event=events[newDate];
if(newEvent.date.getTime()>=event.date.getTime()){newEvent.count=event.count;
if(event.commendInd){newEvent.commentInd=event.commentInd;
}events[newDate]=newEvent;
}events[newDate].count++;
}else{events[newDate]=newEvent;
}}var exceptions=vaccineGroup.EXCEPTIONS;
for(var exceptionIndex=0;
exceptionIndex<exceptions.length;
exceptionIndex++){var exception=exceptions[exceptionIndex];
dateTime=new Date();
dateTime.setISO8601(exception.EXCEPTION_DT_TM);
var exceptionDisplay="";
if(exception.REASON_FLAG===1){exceptionDisplay=this.m_immuni18n.SERIES+" "+this.m_immuni18n.CONTRAINDICATED;
}else{if(exception.REASON_FLAG===3){exceptionDisplay=this.m_immuni18n.SERIES+" "+this.m_immuni18n.UNNECESSARY;
}else{exceptionDisplay=this.m_immuni18n.SERIES+" "+this.m_immuni18n.REFUSED;
}}if(exception.RESULT_STATUS_CODE.MEANING==="INERROR"){dateTime.setHours(0,0,0,0);
exceptionDisplay="Uncharted";
}else{dateTime.setHours(23,59,59,999);
}newEvent={date:dateTime,display:exceptionDisplay,type:"exception",count:1};
if(exception.COMMENTS.length){newEvent.commentInd=true;
}newDate=new Date(dateTime.getFullYear(),dateTime.getMonth(),dateTime.getDate());
if(newDate in events){event=events[newDate];
if(newEvent.date.getTime()>=event.date.getTime()){newEvent.count=event.count;
if(event.commendInd){newEvent.commentInd=event.commentInd;
}events[newDate]=newEvent;
}events[newDate].count++;
}else{events[newDate]=newEvent;
}}var sortedEvents=[];
for(var property in events){if(events.hasOwnProperty(property)){sortedEvents.push(events[property]);
}}sortedEvents.sort(function(event1,event2){return event1.date-event2.date;
});
eventsByVaccineGroups[index]=sortedEvents;
}return eventsByVaccineGroups;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getPastAdministrationsAndExceptions");
}};
ImmunizationScheduleView.prototype.getDoseNumber=function(eventID,doses){try{for(var index=0;
index<doses.length;
index++){var dose=doses[index];
if(dose.SATISFIED_BY.EVENT_ID===eventID){return dose.DOSE_NUMBER;
}}return 0;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getDoseNumber");
}};
ImmunizationScheduleView.prototype.getDateFromString=function(targetDate){try{var regexp="([0-9]{4})(-([0-9]{2})(-([0-9]{2})(T([0-9]{2}):([0-9]{2})(:([0-9]{2})(.([0-9]+))?)?(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?";
var dateArr=null;
var dtTm=null;
if(targetDate){dateArr=targetDate.match(new RegExp(regexp));
dtTm=new Date(dateArr[1],dateArr[3]-1,dateArr[5]);
}return dtTm;
}catch(err){logger.logJSError(err,this,"immunizations-o2.js","getDateFromString");
}};
ImmunizationScheduleView.prototype.sortImmunizationEvents=function(vaccineGroup){var heap=new BinaryHeap(ImmunizationScheduleView.prototype.immunizationEventScoreFunction);
var mapDose=function(x){return x.SATISFIED_BY.EVENT_ID;
};
for(var v=0;
v<vaccineGroup.VACCINATIONS.length;
v++){vaccineGroup.VACCINATIONS[v].IMMUNIZATION_EVENT_TYPE="VACCINATION";
var dosePosition=vaccineGroup.DOSES.map(mapDose).indexOf(vaccineGroup.VACCINATIONS[v].EVENT_ID);
vaccineGroup.VACCINATIONS[v].DOSE=vaccineGroup.DOSES[dosePosition];
heap.push(vaccineGroup.VACCINATIONS[v]);
}for(var e=0;
e<vaccineGroup.EXCEPTIONS.length;
e++){vaccineGroup.EXCEPTIONS[e].IMMUNIZATION_EVENT_TYPE="EXCEPTION";
heap.push(vaccineGroup.EXCEPTIONS[e]);
}var sortedArray=[];
while(heap.size()>0){sortedArray.push(heap.pop());
}var dosesArray=vaccineGroup.DOSES;
dosesArray.sort(this.dynamicSortMultiple("DOSE_NUMBER"));
var dosesArrayLen=dosesArray.length;
for(var d=0;
d<dosesArrayLen;
d++){if(dosesArray[d].SATISFIED_BY.EVENT_ID!==0){continue;
}dosesArray[d].IMMUNIZATION_EVENT_TYPE="DOSE";
sortedArray.push(dosesArray[d]);
}return sortedArray;
};
ImmunizationScheduleView.prototype.immunizationEventScoreFunction=function(data){var dateObj;
switch(data.IMMUNIZATION_EVENT_TYPE){case"DOSE":return data.RECOMMENDED_FROM;
case"VACCINATION":dateObj=new Date();
dateObj.setISO8601(data.ADMIN_DT_TM);
return dateObj.format("yyyy-MM-dd");
case"EXCEPTION":dateObj=new Date();
dateObj.setISO8601(data.EXCEPTION_DT_TM);
return dateObj.format("yyyy-MM-dd");
default:return null;
}};
ImmunizationScheduleView.prototype.appendImmunizationHistory=function($td,$row){var self=this;
var $immunizationScheduleHeadcolOrderedList=$row.find(".immun-o2-schedule-headcol > ol");
var vaccineGroupIndex=$row.data("vaccine-group-index");
var vaccineGroup=self.getSortedImmunizationEvents()[vaccineGroupIndex];
var vaccineGroupLength=vaccineGroup.length;
var listItemsHtml="";
var vaccineGroupOverdue=null;
var now=new Date();
var statusFlag=self.m_recordData.IMMUN_FORECAST.VACCINE_GROUPS[vaccineGroupIndex].STATUS_FLAG;
var permanentExceptionStatus=(statusFlag===5||statusFlag===6||statusFlag===7||statusFlag===8);
for(var i=0;
i<vaccineGroupLength;
i++){var immunizationEvent=vaccineGroup[i];
if(immunizationEvent.IMMUNIZATION_EVENT_TYPE==="DOSE"&&immunizationEvent.SATISFIED_BY.EVENT_ID!==0){continue;
}switch(immunizationEvent.IMMUNIZATION_EVENT_TYPE){case"DOSE":listItemsHtml+=self.createHistoryDoseEvent(immunizationEvent,i,vaccineGroupOverdue,permanentExceptionStatus);
if(vaccineGroupOverdue===null){if(now>self.getDateFromString(immunizationEvent.RECOMMENDED_UNTIL)&&(immunizationEvent.LATEST===""||now<=self.getDateFromString(immunizationEvent.LATEST))){vaccineGroupOverdue=true;
}else{vaccineGroupOverdue=false;
}}break;
case"VACCINATION":listItemsHtml+=self.createHistoryVaccinationEvent(immunizationEvent,i);
break;
case"EXCEPTION":listItemsHtml+=self.createHistoryExceptionEvent(immunizationEvent,i);
break;
}}$immunizationScheduleHeadcolOrderedList.html(listItemsHtml);
};
ImmunizationScheduleView.prototype.createHistoryDoseEvent=function(doseEvent,eventIndex,vaccineGroupOverdue,permanentExceptionStatus){var self=this;
var doseHtml="",now=new Date();
doseHtml+="<li data-event-index="+eventIndex+"><div class='immun-o2-schedule-dose-indicator'>"+doseEvent.DOSE_NUMBER+"</div>";
if(permanentExceptionStatus||doseEvent.RECOMMENDED_IND===0){doseHtml+="<div class='immun-o2-schedule-tertiary-text'>";
doseHtml+="<div>"+self.m_immuni18n.NOT_RECOMMENDED+"</div>";
doseHtml+="<div>--</div>";
}else{if(now<self.getDateFromString(doseEvent.RECOMMENDED_FROM)&&vaccineGroupOverdue!==true){doseHtml+="<div class='immun-o2-schedule-tertiary-text'>";
doseHtml+="<div>"+self.m_immuni18n.NOT_DUE_UNTIL+"</div>";
doseHtml+="<div>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.RECOMMENDED_FROM),"mediumDate")+"</div>";
}else{if(vaccineGroupOverdue!==null){doseHtml+="<div class='immun-o2-schedule-tertiary-text'>";
doseHtml+="<div>"+self.m_immuni18n.NOT_YET_RECOMMENDED+"</div>";
doseHtml+="<div>--</div>";
}else{if(now>=self.getDateFromString(doseEvent.RECOMMENDED_FROM)&&now<=self.getDateFromString(doseEvent.RECOMMENDED_UNTIL)){doseHtml+="<div>";
doseHtml+="<div>"+self.m_immuni18n.DUE+"</div>";
doseHtml+="<div>"+self.convertDateTimeToFormat(now,"mediumDate")+"</div>";
}else{if(now>self.getDateFromString(doseEvent.RECOMMENDED_UNTIL)&&(doseEvent.LATEST===""||now<=self.getDateFromString(doseEvent.LATEST))){doseHtml+="<div>";
doseHtml+="<div>"+self.m_immuni18n.OVERDUE+"</div>";
doseHtml+="<div>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.RECOMMENDED_UNTIL),"mediumDate")+"</div>";
}else{doseHtml+="<div class='immun-o2-schedule-tertiary-text'>";
doseHtml+="<div>"+self.m_immuni18n.UNKNOWN+"</div>";
doseHtml+="<div>--</div>";
}}}}}doseHtml+="</div>";
doseHtml+="</li>";
return doseHtml;
};
ImmunizationScheduleView.prototype.createHistoryVaccinationEvent=function(vaccinationEvent,eventIndex){var vaccinationHtml="";
var doseEvent=vaccinationEvent.DOSE;
vaccinationHtml+="<li data-event-index="+eventIndex+">";
var dateObj;
if(vaccinationEvent.RESULT_STATUS_CODE.MEANING==="INERROR"){vaccinationHtml+="<div class='immun-o2-schedule-dose-indicator'>&nbsp;</div>";
vaccinationHtml+="<div><div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div>";
dateObj=new Date();
dateObj.setISO8601(vaccinationEvent.ADMIN_DT_TM);
vaccinationHtml+="<div class='immun-o2-schedule-tertiary-text'>"+this.convertPreciseDateToString(vaccinationEvent.ADMIN_DT_TM,vaccinationEvent.ADMIN_DT_PRECISION_FLAG,true)+" ("+this.getImmunizationsUtil().calculateAge(dateObj)+")</div>";
}else{if(this.checkVaccineCountedStatus(vaccinationEvent.VACCINATION_FORECAST_STATUS)===false){vaccinationHtml+="<div class='immun-o2-schedule-dose-indicator immun-schedule-vaccine-did-not-count' title='"+this.m_immuni18n.DID_NOT_COUNT+"'></div>";
}else{if(typeof doseEvent!=="undefined"){vaccinationHtml+="<div class='immun-o2-schedule-dose-indicator'>"+doseEvent.DOSE_NUMBER+"</div>";
}else{vaccinationHtml+="<div class='immun-o2-schedule-dose-indicator'>&nbsp;</div>";
}}var display="";
if(vaccinationEvent.PRODUCT.PRODUCT_NAME||vaccinationEvent.PRODUCT.PRODUCT_NAME!==""){display=vaccinationEvent.PRODUCT.PRODUCT_NAME;
}else{display=vaccinationEvent.IDENTIFIER.EVENT_CODE.DISPLAY;
}vaccinationHtml+="<div><div>"+display+"</div>";
dateObj=new Date();
dateObj.setISO8601(vaccinationEvent.ADMIN_DT_TM);
vaccinationHtml+="<div>"+this.convertPreciseDateToString(vaccinationEvent.ADMIN_DT_TM,vaccinationEvent.ADMIN_DT_PRECISION_FLAG,true)+" ("+this.getImmunizationsUtil().calculateAge(dateObj)+")</div>";
}vaccinationHtml+="</div>";
if(vaccinationEvent.COMMENTS.length){vaccinationHtml+="<div class='immun-schedule-comment-icon' title='"+this.m_immuni18n.COMMENTS+"'></div>";
}vaccinationHtml+="</li>";
return vaccinationHtml;
};
ImmunizationScheduleView.prototype.createHistoryExceptionEvent=function(exceptionEvent,eventIndex){var exceptionHtml="";
exceptionHtml+="<li data-event-index="+eventIndex+"><div class='immun-o2-schedule-dose-indicator'>&nbsp;</div><div>";
var dateObj;
if(exceptionEvent.RESULT_STATUS_CODE.MEANING==="INERROR"){exceptionHtml+="<div class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.UNCHARTED+"</div>";
dateObj=new Date();
dateObj.setISO8601(exceptionEvent.EXCEPTION_DT_TM);
exceptionHtml+="<div class='immun-o2-schedule-tertiary-text'>"+this.convertISO8601DateTimeToFormat(exceptionEvent.EXCEPTION_DT_TM,"mediumDate")+" ("+this.getImmunizationsUtil().calculateAge(dateObj)+")</div>";
}else{exceptionHtml+="<div>"+this.getExceptionTypeString(exceptionEvent.REASON_CODE)+"</div>";
dateObj=new Date();
dateObj.setISO8601(exceptionEvent.EXCEPTION_DT_TM);
exceptionHtml+="<div>"+this.convertISO8601DateTimeToFormat(exceptionEvent.EXCEPTION_DT_TM,"mediumDate")+" ("+this.getImmunizationsUtil().calculateAge(dateObj)+")</div>";
}exceptionHtml+="</div>";
if(exceptionEvent.COMMENTS.length){exceptionHtml+="<div class='immun-schedule-comment-icon' title='"+this.m_immuni18n.COMMENTS+"'></div>";
}exceptionHtml+="</li>";
return exceptionHtml;
};
ImmunizationScheduleView.prototype.getExceptionTypeString=function(exceptionReasonCode){switch(exceptionReasonCode.MEANING){case"CIEXPIRE":return this.m_immuni18n.CONTRAINDICATED+" - "+this.m_immuni18n.DO_NOT_GIVE;
case"CIPOSTPONE":return this.m_immuni18n.CONTRAINDICATED+" - "+this.m_immuni18n.RESCHEDULE;
case"REFEXPIRE":return this.m_immuni18n.REFUSED+" - "+this.m_immuni18n.DO_NOT_GIVE;
case"REFPOSTPONE":return this.m_immuni18n.REFUSED+" - "+this.m_immuni18n.RESCHEDULE;
case"PAT_UNAVAIL":return this.m_immuni18n.DEFER+" - "+this.m_immuni18n.RESCHEDULE;
case"NOT_NEEDED":return this.m_immuni18n.UNNECESSARY+" - "+this.m_immuni18n.DO_NOT_GIVE;
default:var codeSet30442Length=this.m_codeSet30442.length;
for(var i=0;
i<codeSet30442Length;
i++){if(this.m_codeSet30442[i].CODE===exceptionReasonCode.CODE_VALUE){return this.m_immuni18n.REFUSED;
}}return this.m_immuni18n.UNKNOWN_EXCEPTION;
}};
ImmunizationScheduleView.prototype.activateImmunizationEvent=function($td,$row){var self=this;
var $immunizationScheduleHeadcolOrderedList=$row.find(".immun-o2-schedule-headcol > ol");
this.currentVaccineEventIndex=$row.data("vaccine-group-index");
this.currentEventIndex=(typeof $td.data("event-index")==="undefined")?-1:$td.data("event-index");
if($immunizationScheduleHeadcolOrderedList.children().length===0){self.appendImmunizationHistory($td,$row);
$immunizationScheduleHeadcolOrderedList.children().off("click.ImmunizationScheduleView.prototype");
$immunizationScheduleHeadcolOrderedList.children().click(function(){self.activateImmunizationEvent($(this),$row);
});
}$("#"+this.getCategoryMean()+" .immun-o2-schedule-listItem-active").removeClass("immun-o2-schedule-listItem-active");
if(this.currentEventIndex>=0){$immunizationScheduleHeadcolOrderedList.children("[data-event-index='"+this.currentEventIndex+"']").addClass("immun-o2-schedule-listItem-active");
}else{$row.find(".immun-o2-schedule-headcol > div:first").addClass("immun-o2-schedule-listItem-active");
}$immunizationScheduleHeadcolOrderedList.siblings("#"+this.getCategoryMean()+" .immun-o2-schedule-headcol-detail").html(self.createImmunizationEventDetailHtml(this.currentVaccineEventIndex,this.currentEventIndex));
this.updateDetailContainerHeight();
this.addResultViewerButton(this.currentVaccineEventIndex,this.currentEventIndex);
};
ImmunizationScheduleView.prototype.createImmunizationEventDetailHtml=function(vaccineGroupIndex,eventIndex){var self=this;
var detailHtml="";
if(eventIndex===-1){detailHtml+=self.createDetailVaccineGroup(vaccineGroupIndex);
return detailHtml;
}var vaccineGroup=self.getSortedImmunizationEvents()[vaccineGroupIndex];
var vaccineEvent=vaccineGroup[eventIndex];
switch(vaccineEvent.IMMUNIZATION_EVENT_TYPE){case"DOSE":detailHtml+=self.createDetailDoseEvent(vaccineEvent);
break;
case"VACCINATION":detailHtml+=self.createDetailVaccinationEvent(vaccineEvent);
break;
case"EXCEPTION":detailHtml+=self.createDetailExceptionEvent(vaccineEvent);
break;
}return detailHtml;
};
ImmunizationScheduleView.prototype.createDetailVaccineGroup=function(vaccineGroupIndex){var self=this;
var vaccineGroup=self.m_recordData.IMMUN_FORECAST.VACCINE_GROUPS[vaccineGroupIndex];
var vaccineGroupHtml="<div class='immun-o2-schedule-detail-head immun-o2-schedule-detail-head-bottom-border'><div>";
var title="",column1="",column2="";
var nextDose=null;
switch(vaccineGroup.STATUS_FLAG){case 0:case 1:nextDose=self.getNextDose(vaccineGroup.DOSES);
title=self.m_immuni18n.NOT_STARTED+" - "+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
column1=self.m_immuni18n.RECOMMENDED_FROM+" "+(self.getNextDoseRange(vaccineGroup)||"--");
break;
case 2:nextDose=self.getNextDose(vaccineGroup.DOSES);
title=self.m_immuni18n.DOSE+" "+nextDose.DOSE_NUMBER+" "+self.m_immuni18n.DUE+" "+self.m_immuni18n.TODAY+" - "+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
column1=self.m_immuni18n.IN_RANGE+" "+self.m_immuni18n.TODAY;
column2=self.m_immuni18n.RECOMMENDED_FROM+" "+(self.getNextDoseRange(vaccineGroup)||"--");
break;
case 3:nextDose=self.getNextDose(vaccineGroup.DOSES);
title=self.m_immuni18n.DOSE+" "+nextDose.DOSE_NUMBER+" "+self.m_immuni18n.OVERDUE+" - "+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
column1=self.m_immuni18n.IN_RANGE+" "+self.m_immuni18n.TODAY;
column2=self.m_immuni18n.ON_CATCH_UP_SCHEDULE;
break;
case 4:title=self.m_immuni18n.COMPLETED+" "+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
break;
case 5:title=self.m_immuni18n.CONTRAINDICATED+" - "+vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
break;
default:title=vaccineGroup.VACCINE_GROUP_CODE.DISPLAY;
break;
}vaccineGroupHtml+="<div class='immun-o2-schedule-expander-header-text'>"+title+"</div>";
vaccineGroupHtml+="<div id='expanderButtonContainer"+this.getViewId()+"vaccine"+vaccineGroupIndex+"'></div>";
vaccineGroupHtml+="</div>";
if(column1!==""||column2!==""){vaccineGroupHtml+="<div><div class='immun-o2-schedule-detail-column immun-o2-schedule-section-secondary-text'>"+column1+"</div>";
vaccineGroupHtml+="<div class='immun-o2-schedule-detail-column immun-o2-schedule-section-secondary-text'>"+column2+"</div>";
vaccineGroupHtml+="<div class='immun-o2-schedule-detail-column immun-o2-schedule-section-secondary-text'></div></div>";
}vaccineGroupHtml+="</div>";
var detailContainerId="detailContainer"+this.getViewId()+"vaccine"+vaccineGroupIndex;
vaccineGroupHtml+="<div id='"+detailContainerId+"' class='immun-schedule-detail-container'>";
if(this.m_referenceData===null){vaccineGroupHtml+="<div class='loading-spinner immun-schedule-link-container' style>&nbsp;</div>";
if(this.m_visInterval!==null){clearInterval(this.m_visInterval);
}this.m_visInterval=setInterval(function(){self.buildVISLinksHtml(vaccineGroup,detailContainerId);
},5000);
}else{vaccineGroupHtml+=this.buildVISLinksHtml(vaccineGroup);
}vaccineGroupHtml+="</div>";
vaccineGroupHtml+="</div>";
return vaccineGroupHtml;
};
ImmunizationScheduleView.prototype.buildVISLinksHtml=function(vaccineGroup,linkContainerId){try{if(this.m_referenceData===null){return null;
}var linkHtml="";
if(typeof this.m_referenceData==="undefined"){var errorBanner=new MPageUI.AlertBanner();
errorBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.ERROR);
errorBanner.setPrimaryText(this.m_immuni18n.VIS_LINK_ERROR);
linkHtml=errorBanner.render();
}else{linkHtml="<div class='immun-schedule-link-container'>";
var listItemArray=[];
var referenceDataLength=this.m_referenceData.length;
if(referenceDataLength>0){for(var r=0;
r<referenceDataLength;
r++){if(this.m_referenceData[r].VACCINE_GROUP_CODE.CODE_VALUE===vaccineGroup.VACCINE_GROUP_CODE.CODE_VALUE){var events=this.m_referenceData[r].EVENTS;
var eventsLength=events.length;
for(var e=0;
e<eventsLength;
e++){if(events[e].DEFAULT_IND!==1){continue;
}var infoStatements=events[e].INFORMATION_STATEMENTS;
var infoStatementsLength=infoStatements.length;
for(var i=0;
i<infoStatementsLength;
i++){var statements=infoStatements[i].STATEMENTS;
var statementsLength=statements.length;
for(var s=0;
s<statementsLength;
s++){if(statements[s].ACTIVE_IND!==1){continue;
}listItemArray.push("<li><a href='"+statements[s].URI+"' target='_blank'>"+statements[s].VIS_CD.DEFINITION+"</a></li>");
}}}break;
}}}var listItemArrayLength=listItemArray.length;
if(listItemArrayLength===0){var emptyBanner=new MPageUI.AlertBanner();
emptyBanner.setType(MPageUI.ALERT_OPTIONS.TYPE.WARNING);
emptyBanner.setPrimaryText(this.m_immuni18n.VIS_LINK_EMPTY);
linkHtml+=emptyBanner.render();
}else{linkHtml+="<div class='immun-sched-link-container-subtitle'>"+this.m_immuni18n.VIS_LINK+"</div>";
linkHtml+="<ol>";
for(var l=0;
l<listItemArrayLength;
l++){linkHtml+=listItemArray[l];
}linkHtml+="</ol>";
}}if(typeof linkContainerId!=="undefined"){var linkContainer=$("#"+linkContainerId);
if(linkContainer.length){linkContainer.html(linkHtml);
}}if(this.m_visInterval!==null){clearInterval(this.m_visInterval);
}return linkHtml;
}catch(err){delete this.m_referenceData;
this.m_referenceData;
logger.logJSError(err,null,"immunizations-schedule.js","buildVISLinksHtml");
}};
ImmunizationScheduleView.prototype.createDetailDoseEvent=function(doseEvent){var self=this;
var doseHtml="<div class='immun-o2-schedule-detail-head immun-o2-schedule-detail-head-bottom-border'>";
doseHtml+="<div class='immun-o2-schedule-expander-header-text'>"+self.m_immuni18n.DOSE+" "+doseEvent.DOSE_NUMBER+"</div></div>";
doseHtml+="<div>";
doseHtml+="<div class='immun-o2-schedule-detail-column'>";
doseHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.EARLIEST+":</span><span>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.EARLIEST),"mediumDate")+"</span></div>";
doseHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.RECOMMENDED_FROM+":</span><span>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.RECOMMENDED_FROM),"mediumDate")+"</span></div>";
doseHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.RECOMMENDED_UNTIL+":</span><span>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.RECOMMENDED_UNTIL),"mediumDate")+"</span></div>";
doseHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.LATEST+":</span><span>"+self.convertDateTimeToFormat(self.getDateFromString(doseEvent.LATEST),"mediumDate")+"</span></div>";
doseHtml+="</div>";
doseHtml+="<div class='immun-o2-schedule-detail-column'></div>";
doseHtml+="<div class='immun-o2-schedule-detail-column'></div>";
doseHtml+="</div>";
return doseHtml;
};
ImmunizationScheduleView.prototype.createDetailVaccinationEvent=function(vaccinationEvent){var self=this;
var vaccinationHtml="<div class='immun-o2-schedule-detail-head immun-o2-schedule-detail-head-bottom-border'>";
vaccinationHtml+="<div><div class='immun-o2-schedule-expander-header-text'>";
if(typeof lastInformationSheetIndex!=="undefined"){vaccinationHtml+=self.m_immuni18n.DOSE+" "+vaccinationEvent.DOSE_NUMBER+" ";
}if(vaccinationEvent.RESULT_STATUS_CODE.MEANING==="INERROR"){var commentsLength=vaccinationEvent.COMMENTS.length;
if(commentsLength){vaccinationHtml+=self.m_immuni18n.UNCHARTED_ON+" "+self.convertISO8601DateTimeToFormat(vaccinationEvent.COMMENTS[commentsLength-1].CHARTED_DT_TM,"mediumDate");
}else{vaccinationHtml+=self.m_immuni18n.UNCHARTED;
}}else{vaccinationHtml+=self.m_immuni18n.ADMINISTERED_ON+" "+self.convertPreciseDateToString(vaccinationEvent.ADMIN_DT_TM,vaccinationEvent.ADMIN_DT_PRECISION_FLAG,true);
if(this.checkVaccineCountedStatus(vaccinationEvent.VACCINATION_FORECAST_STATUS)===false){vaccinationHtml+=" ("+self.m_immuni18n.DID_NOT_COUNT+")";
}if(vaccinationEvent.PRODUCT.PRODUCT_NAME||vaccinationEvent.PRODUCT.PRODUCT_NAME!==""){vaccinationHtml+=" - "+vaccinationEvent.PRODUCT.PRODUCT_NAME;
}else{vaccinationHtml+=" - "+vaccinationEvent.IDENTIFIER.EVENT_CODE.DISPLAY;
}}vaccinationHtml+="</div>";
vaccinationHtml+="<div id='expanderButtonContainer"+this.getViewId()+"vaccine"+this.currentVaccineEventIndex+"'></div>";
vaccinationHtml+="</div></div>";
vaccinationHtml+="<div class='immun-schedule-detail-content-column-header'><div class='immun-o2-schedule-detail-column'>"+self.m_immuni18n.ADMINISTRATION_DETAILS+"</div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-column'>"+self.m_immuni18n.PRODUCT_DETAILS+"</div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-column'>"+self.m_immuni18n.IMMUN_NOTES+"</div></div>";
var detailContainerId="detailContainer"+this.getViewId()+"vaccine"+this.currentVaccineEventIndex;
if(this.currentEventIndex>=0){detailContainerId+="event"+this.currentEventIndex;
}vaccinationHtml+="<div id='"+detailContainerId+"' class='immun-schedule-detail-container'>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-column'>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.PERFORMED_DATE+":</span><span>"+self.convertPreciseDateToString(vaccinationEvent.ADMIN_DT_TM,vaccinationEvent.ADMIN_DT_PRECISION_FLAG,true)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.PERFORMED_TIME+":</span><span>"+(vaccinationEvent.ADMIN_DT_PRECISION_FLAG!==0?"--":self.convertISO8601DateTimeToFormat(vaccinationEvent.ADMIN_DT_TM,"militaryTime"))+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.PERFORMED_BY+":</span><span>"+self.getFormattedPersonnelName(vaccinationEvent.ADMIN_PERSONNEL_ID)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.SOURCE+":</span><span>"+self.getDisplayString(vaccinationEvent.SOURCE_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.DOCUMENTED_DATE+":</span><span>"+self.convertISO8601DateTimeToFormat(vaccinationEvent.CHARTED_DT_TM,"mediumDate")+"</span></div>";
var informationStatementsGivenLength=vaccinationEvent.INFORMATION_STATEMENTS_GIVEN.length;
if(informationStatementsGivenLength){for(var visIndex=0;
visIndex<informationStatementsGivenLength;
visIndex++){if(visIndex>0){vaccinationHtml+="<hr class='immun-schedule-vis-horizontal-rule'>";
}vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS+":</span><span>"+vaccinationEvent.INFORMATION_STATEMENTS_GIVEN[visIndex].NAME+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS_PUBLISHED_DATE+":</span><span>"+self.convertDateTimeToFormat(vaccinationEvent.INFORMATION_STATEMENTS_GIVEN[visIndex].PUBLISHED_DATE,"mediumDate")+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS_GIVEN_DATE+":</span><span>"+self.convertISO8601DateTimeToFormat(vaccinationEvent.INFORMATION_STATEMENTS_GIVEN[visIndex].GIVEN_ON_DT_TM,"mediumDate")+"</span></div>";
}}else{vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS+":</span><span>--</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS_PUBLISHED_DATE+":</span><span>--</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VIS_GIVEN_DATE+":</span><span>--</span></div>";
}vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.FUNDING_SOURCE+":</span><span>"+self.getDisplayString(vaccinationEvent.FUNDING_SOURCE_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.VACCINE_FOR_CHILDREN+":</span><span>"+self.getDisplayString(vaccinationEvent.VFC_STATUS_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="</div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-column'>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.PRODUCT_NAME+":</span><span>"+self.getDisplayString(vaccinationEvent.PRODUCT.PRODUCT_NAME)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.MANUFACTURER+":</span><span>"+self.getDisplayString(vaccinationEvent.MANUFACTURER_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.LOT_NUMBER+":</span><span>"+self.getDisplayString(vaccinationEvent.LOT_NUMBER)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.EXP_DATE+":</span><span>"+self.convertPreciseDateToString(vaccinationEvent.EXPIRATION_DATE,vaccinationEvent.EXPIRATION_DT_PRECISION_FLAG,false)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.DOSE_QUANTITY+":</span><span>"+self.getDisplayString(vaccinationEvent.ADMIN_DOSAGE)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.DOSE_UNIT+":</span><span>"+self.getDisplayString(vaccinationEvent.ADMIN_DOSAGE_UNIT_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.SITE+":</span><span>"+self.getDisplayString(vaccinationEvent.ADMIN_SITE_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.ROUTE+":</span><span>"+self.getDisplayString(vaccinationEvent.ADMIN_ROUTE_CODE.DISPLAY)+"</span></div>";
vaccinationHtml+="</div>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-column'>";
vaccinationHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-schedule-details-comment-label immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.COMMENTS+":</span>"+self.getCommentsHtml(vaccinationEvent.COMMENTS)+"</div>";
vaccinationHtml+="</div>";
vaccinationHtml+="</div>";
return vaccinationHtml;
};
ImmunizationScheduleView.prototype.createDetailExceptionEvent=function(exceptionEvent){var self=this;
var exceptionHtml="<div class='immun-o2-schedule-detail-head immun-o2-schedule-detail-head-bottom-border'><div>";
exceptionHtml+="<div class='immun-o2-schedule-expander-header-text'>";
if(exceptionEvent.RESULT_STATUS_CODE.MEANING==="INERROR"){var commentsLength=exceptionEvent.COMMENTS.length;
if(commentsLength){exceptionHtml+=self.m_immuni18n.UNCHARTED_ON+" "+self.convertISO8601DateTimeToFormat(exceptionEvent.COMMENTS[commentsLength-1].CHARTED_DT_TM,"mediumDate");
}else{exceptionHtml+=self.m_immuni18n.UNCHARTED;
}}else{switch(exceptionEvent.REASON_FLAG){case 1:exceptionHtml+=self.m_immuni18n.CONTRAINDICATION+" ";
break;
case 2:exceptionHtml+=self.m_immuni18n.REFUSED+" ";
break;
case 3:exceptionHtml+=self.m_immuni18n.UNNECESSARY+" ";
break;
default:exceptionHtml+=self.m_immuni18n.UNKNOWN_EXCEPTION+" ";
break;
}exceptionHtml+=self.m_immuni18n.ON+" "+self.convertISO8601DateTimeToFormat(exceptionEvent.EXCEPTION_DT_TM,"mediumDate");
if(typeof exceptionEvent.REASON_CODE.DISPLAY!=="undefined"&&exceptionEvent.REASON_CODE.DISPLAY!==""){exceptionHtml+=" - "+exceptionEvent.REASON_CODE.DISPLAY;
}}exceptionHtml+="</div>";
exceptionHtml+="<div id='expanderButtonContainer"+this.getViewId()+"vaccine"+this.currentVaccineEventIndex+"'></div>";
exceptionHtml+="</div></div>";
var detailContainerId="detailContainer"+this.getViewId()+"vaccine"+this.currentVaccineEventIndex;
if(this.currentEventIndex>=0){detailContainerId+="event"+this.currentEventIndex;
}exceptionHtml+="<div id='"+detailContainerId+"' class='immun-schedule-detail-container'>";
exceptionHtml+="<div class='immun-o2-schedule-detail-column'>";
exceptionHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.EXCEPTION_DATE+":</span><span>"+self.convertISO8601DateTimeToFormat(exceptionEvent.EXCEPTION_DT_TM,"mediumDate")+"</span></div>";
exceptionHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.REASON+":</span><span>"+self.getDisplayString(exceptionEvent.REASON_CODE.DISPLAY)+"</span></div>";
exceptionHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.AUTHORIZED_BY+":</span><span>"+self.getFormattedPersonnelName(exceptionEvent.CHARTED_PERSONNEL_ID)+"</span></div>";
exceptionHtml+="</div>";
exceptionHtml+="<div class='immun-o2-schedule-detail-column'>";
exceptionHtml+="<div class='immun-o2-schedule-detail-info'><span class='immun-schedule-details-comment-label immun-o2-schedule-tertiary-text'>"+self.m_immuni18n.COMMENTS+":</span>"+self.getCommentsHtml(exceptionEvent.COMMENTS)+"</div>";
exceptionHtml+="</div>";
exceptionHtml+="<div class='immun-o2-schedule-detail-column'></div>";
exceptionHtml+="</div>";
return exceptionHtml;
};
ImmunizationScheduleView.prototype.convertISO8601DateTimeToFormat=function(date,format){try{if(date){var dateObj=new Date();
dateObj.setISO8601(date);
return dateObj.format(format);
}else{return"--";
}}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","convertISO8601DateTimeToFormat");
}};
ImmunizationScheduleView.prototype.convertDateTimeToFormat=function(date,format){try{if(date instanceof Date){return date.format(format);
}else{if(date){return new Date(date).format(format);
}else{return"--";
}}}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","convertDateTimeToFormat");
}};
ImmunizationScheduleView.prototype.convertPreciseDateToString=function(preciseDate,precisionFlag,isISO8601){var self=this;
switch(precisionFlag){case 0:case 1:case 2:return isISO8601?self.convertISO8601DateTimeToFormat(preciseDate,"mediumDate"):self.convertDateTimeToFormat(preciseDate,"mediumDate");
case 3:case 4:return isISO8601?self.convertISO8601DateTimeToFormat(preciseDate,"mmm yyyy"):self.convertDateTimeToFormat(preciseDate,"mmm yyyy");
case 5:return isISO8601?self.convertISO8601DateTimeToFormat(preciseDate,"yyyy"):self.convertDateTimeToFormat(preciseDate,"yyyy");
}return"--";
};
ImmunizationScheduleView.prototype.getFormattedPersonnelName=function(personnelId){try{var self=this;
var personnel=self.m_recordData.IMMUN_FORECAST.PERSONNEL;
for(var i=0;
i<personnel.length;
i++){if(personnel[i].PERSONNEL_ID===personnelId){return personnel[i].FULL_FORMATTED_NAME;
}}return"--";
}catch(err){logger.logJSError(err,this,"immunizations-schedule.js","getFormattedPersonnelName");
return"--";
}};
ImmunizationScheduleView.prototype.getDisplayString=function(value){if(typeof value==="undefined"||value===""){return"--";
}return value;
};
ImmunizationScheduleView.prototype.getCommentsHtml=function(comments){if(typeof comments==="undefined"||comments.length<=0){return"--";
}var commentsHtml="<div class='immun-schedule-expander-details-comment-container'>";
var commentsLength=comments.length;
for(var i=commentsLength-1;
i>=0;
i--){var text=comments[i].TEXT;
commentsHtml+="<div>"+text.replace("\n","<br/>")+"<br/><br/><span class='immun-o2-schedule-tertiary-text'>"+this.m_immuni18n.SOURCE+":</span> "+this.getFormattedPersonnelName(comments[i].AUTHOR_ID)+"<hr class='immun-schedule-hr'></div>";
}commentsHtml+="</div>";
return commentsHtml;
};
ImmunizationScheduleView.prototype.getNextDose=function(doseArray){if(typeof doseArray==="undefined"||doseArray.length<0){return null;
}for(var d=0;
d<doseArray.length;
d++){if(doseArray[d].SATISFIED_BY.EVENT_ID===0){return doseArray[d];
}}return null;
};
ImmunizationScheduleView.prototype.getNextDoseRange=function(vaccineGrp,isOverdue){var dateRangeStr=null;
var dosesArr=vaccineGrp.DOSES;
var self=this;
if(dosesArr&&dosesArr.length){var dosesLen=dosesArr.length;
for(var k=0;
k<dosesLen;
k++){if(dosesArr[k].SATISFIED_BY.EVENT_ID===0){if(isOverdue){if(dosesArr[k].RECOMMENDED_UNTIL){dateRangeStr=self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_UNTIL,"shortDate3");
}}else{if(dosesArr[k].RECOMMENDED_FROM&&dosesArr[k].RECOMMENDED_UNTIL){dateRangeStr=self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_FROM,"shortDate3")+" - "+self.getImmunizationsUtil().convertAbsoluteDate(dosesArr[k].RECOMMENDED_UNTIL,"shortDate3");
}}break;
}}}return dateRangeStr;
};
ImmunizationScheduleView.prototype.getImmunizationsUtil=function(){if(this.m_immunizationsUtil===null){this.m_immunizationsUtil=new ImmunizationsUtil(this.getCriterion(),this.getViewId(),ImmunizationsUtil.MPageEnum.IMMUN_SCHEDULE);
}this.m_immunizationsUtil.setImmunRecordData(this.m_recordData);
return this.m_immunizationsUtil;
};
ImmunizationScheduleView.prototype.getAsOfDateString=function(){var dateObj=new Date();
var dateFormatter=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var dateString=dateFormatter.format(dateObj,mp_formatter.DateTimeFormatter.TIME_24HOUR_NO_SECONDS);
var rawLabel=this.m_immuni18n.IMMUNIZATIONS+" - "+i18n.discernabu.AS_OF_TIME.replace("{0}",dateString);
return $("<textarea />").html(rawLabel).text();
};
ImmunizationScheduleView.prototype.launchResultViewer=function(eventIds,resultName){try{ResultViewer.launchAdHocViewer(eventIds,resultName);
}catch(err){logger.logJSError(err,null,"immunizations-schedule.js","launchResultViewer");
}};
ImmunizationScheduleView.prototype.addResultViewerButton=function(vaccineGroupIndex,eventIndex){try{var self=this;
var eventIds=[];
var vaccineEvent=null;
var vaccineGroup=this.getSortedImmunizationEvents()[vaccineGroupIndex];
var resultName=this.m_recordData.IMMUN_FORECAST.VACCINE_GROUPS[vaccineGroupIndex].VACCINE_GROUP_DISPLAY;
if(eventIndex===-1){var vaccineGroupLength=vaccineGroup.length;
for(var i=0;
i<vaccineGroupLength;
i++){vaccineEvent=vaccineGroup[i];
if(vaccineEvent.IMMUNIZATION_EVENT_TYPE==="DOSE"){continue;
}eventIds.push(vaccineEvent.EVENT_ID);
}}else{vaccineEvent=vaccineGroup[eventIndex];
if(vaccineEvent.IMMUNIZATION_EVENT_TYPE==="DOSE"){return;
}eventIds.push(vaccineEvent.EVENT_ID);
}if(eventIds.length===0){return;
}var expanderButtonContainer=$("#expanderButtonContainer"+this.getViewId()+"vaccine"+vaccineGroupIndex);
expanderButtonContainer.append("<div id='resultViewerBtn"+this.getViewId()+"vaccine"+vaccineGroupIndex+"event"+eventIndex+"' class='immun-schedule-action-button'></div>");
var resultViewerButton=new MPageUI.Button();
resultViewerButton.setLabel(this.m_immuni18n.MORE_DETAILS);
resultViewerButton.setOnClickCallback(function(){self.launchResultViewer(eventIds,resultName);
});
$("#resultViewerBtn"+this.getViewId()+"vaccine"+vaccineGroupIndex+"event"+eventIndex).append(resultViewerButton.render());
resultViewerButton.attachEvents();
}catch(err){logger.logJSError(err,null,"immunizations-schedule.js","addResultViewerButton");
}};
ImmunizationScheduleView.prototype.loadReferenceData=function(){var self=this;
this.m_referenceData=null;
var scriptRequest=new ScriptRequest();
scriptRequest.setProgramName("mp_exec_std_request");
scriptRequest.setDataBlob('{"REQUESTIN": {"VACCINE_GROUP_CODES": ""}}');
scriptRequest.setAsyncIndicator(true);
scriptRequest.setParameterArray(["^MINE^","^^",600005,3202004,966901]);
scriptRequest.setResponseHandler(function(scriptReply){var response=scriptReply.getResponse();
self.m_referenceData=[];
if(response.STATUS_DATA.STATUS!=="F"){if(response.VACCINE_GROUPS.length){self.m_referenceData=response.VACCINE_GROUPS;
}}});
scriptRequest.performRequest();
};
ImmunizationScheduleView.prototype.checkVaccineCountedStatus=function(vaccinationForecastStatus){if(vaccinationForecastStatus===2||vaccinationForecastStatus===3||vaccinationForecastStatus===4){return false;
}return true;
};
ImmunizationScheduleView.prototype.logLaunchImmunForecasterAuditEvent=function(){var personID=this.getCriterion().person_id+".0";
var mpEventAudit=new MP_EventAudit();
mpEventAudit.setAuditMode(0);
mpEventAudit.setAuditEventName("Immunization Forecaster");
mpEventAudit.setAuditEventType("Launch Immunization Forecaster");
mpEventAudit.setAuditParticipantType("Person");
mpEventAudit.setAuditParticipantRoleCd("Patient");
mpEventAudit.setAuditParticipantIDType("Patient");
mpEventAudit.setAuditParticipantID(personID);
mpEventAudit.setAuditDataLifeCycle("Access/Use");
mpEventAudit.addAuditEvent();
mpEventAudit.submit();
};
ImmunizationScheduleView.prototype.updateDetailContainerHeight=function(){var detailContainerId="detailContainer"+this.getViewId()+"vaccine"+this.currentVaccineEventIndex;
if(this.currentEventIndex>=0){detailContainerId+="event"+this.currentEventIndex;
}var siblingHeight=0;
var detailContainer=$("#"+detailContainerId);
detailContainer.siblings().each(function(){siblingHeight+=$(this).height();
});
var borderHeight=2;
detailContainer.height(detailContainer.parent().height()-siblingHeight-borderHeight);
};
ImmunizationScheduleView.prototype.scrollIntoView=function(elem){var $tableContainer=$("#immun-o2-schedule-table"+this.getViewId());
var tableContainerViewTop=$tableContainer.offset().top;
var tableContainerViewBottom=$tableContainer.offset().top+$tableContainer.height();
var elemTop=elem.offset().top;
var elemBottom=elemTop+elem.height();
if(elemBottom>tableContainerViewBottom&&elemTop<tableContainerViewTop){return;
}var adjustment=0;
if(elemBottom>tableContainerViewBottom){var borderPixels=6;
adjustment=$tableContainer.scrollTop()+(elemBottom-tableContainerViewBottom)+borderPixels;
$tableContainer.scrollTop(adjustment);
}else{if(elemTop<tableContainerViewTop){if(elemTop<0){adjustment=$tableContainer.scrollTop()-(Math.abs(elemTop)+tableContainerViewTop);
}else{adjustment=$tableContainer.scrollTop()-(tableContainerViewTop-elemTop);
}$tableContainer.scrollTop(adjustment);
}}};
