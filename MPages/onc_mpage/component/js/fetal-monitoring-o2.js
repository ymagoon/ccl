function FetalMonitoringComponentWFStyle(){this.initByNamespace("fm-wf");
}FetalMonitoringComponentWFStyle.inherits(ComponentStyle);
function FetalMonitoringComponentWF(criterion){this.setCriterion(criterion);
this.setStyles(new FetalMonitoringComponentWFStyle());
this.setComponentLoadTimerName("USR:MPG.FETALMONITORING.O2 - load component");
this.setComponentRenderTimerName("ENG:MPG.FETALMONITORING.O2 - render component");
this.setIncludeLineNumber(true);
this.setPregnancyLookbackInd(true);
this.setResourceRequired(true);
CERN_EventListener.addListener(this,"pregnancyInfoAvailable",this.retrieveComponentData,this);
}FetalMonitoringComponentWF.prototype=new MPageComponent();
FetalMonitoringComponentWF.prototype.constructor=MPageComponent;
MP_Util.setObjectDefinitionMapping("WF_PREG_FETAL_MON",FetalMonitoringComponentWF);
FetalMonitoringComponentWF.prototype.RetrieveRequiredResources=function(){var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
if(pregInfoSR&&pregInfoSR.isResourceAvailable()){this.retrieveComponentData();
}else{PREGNANCY_BASE_UTIL_O1.LoadPregnancyData(this.getCriterion());
}};
FetalMonitoringComponentWF.prototype.retrieveComponentData=function(){var component=this;
var criterion=this.getCriterion();
var fmi18n=i18n.discernabu.fetalmonitoring_o2;
var messageHTML="";
var lookBackUnits=this.getLookbackUnits();
var lookBackUnitTypeFlag=this.getLookbackUnitTypeFlag();
var df=MP_Util.GetDateFormatter();
var countText="";
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=null;
var pregnancyId=0;
var patientGenderInfo=criterion.getPatientInfo().getSex();
if(patientGenderInfo===null||patientGenderInfo.meaning===null||patientGenderInfo.meaning!=="FEMALE"){messageHTML="<span class='res-none'>"+fmi18n.NOT_FEMALE+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{if(pregInfoSR&&pregInfoSR.isResourceAvailable()){pregInfoObj=pregInfoSR.getResourceData();
pregnancyId=pregInfoObj.getPregnancyId();
if(pregnancyId===-1){messageHTML="<span class='res-none'>"+fmi18n.PREG_DATA_ERROR+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{if(!pregnancyId){messageHTML="<span class='res-none'>"+fmi18n.NO_ACTIVE_PREG+"</span>";
this.finalizeComponent(messageHTML,countText);
return;
}else{var sendAr=["^MINE^",criterion.person_id+".0",pregInfoObj.getLookBack(),lookBackUnits,lookBackUnitTypeFlag];
MP_Core.XMLCclRequestWrapper(this,"mp_get_fm_episodes",sendAr,true);
}}}}};
FetalMonitoringComponentWF.prototype.renderComponent=function(recordData){var compId=this.getComponentId();
var df=new mp_formatter.DateTimeFormatter(MPAGE_LOCALE);
var fmi18n=i18n.discernabu.fetalmonitoring_o2;
var fetalMonitoringHTML=[];
var criterion=this.getCriterion();
var slaTimer=MP_Util.CreateTimer("CAP:MPG.FETALMONITORING.O2 - Rendering component");
if(slaTimer){slaTimer.SubtimerName=criterion.category_mean;
slaTimer.Stop();
}var fmEpisodesLength=recordData.EPISODES.length;
var arrFetalMonitoringResults=[];
var reasonForMonitoring="";
var episodeStartDate=new Date();
var episodeStartDateValue=null;
var episodeStartTimeValue=null;
var episodeStopDate=new Date();
var episodeStopDateValue=null;
var episodeStopTimeValue=null;
var pregInfoSR=MP_Resources.getSharedResource("pregnancyInfo");
var pregInfoObj=pregInfoSR.getResourceData();
var currentGestAge=pregInfoObj.getCalculatedEga();
var currentDate=new Date();
var numOfMilliSecsInADay=(1000*60*60*24);
for(var i=0;
i<fmEpisodesLength;
i++){var fetalEGADisplay="--";
var episode=recordData.EPISODES[i];
episodeStartDate.setISO8601(episode.INITIAL_DT_TM);
episodeStartDateValue=episodeStartDate.format("longDate");
episodeStartTimeValue=episodeStartDate.format("militaryTime");
episodeStopDate.setISO8601(episode.COMPLETE_DT_TM);
episodeStopDateValue=episodeStopDate.format("longDate");
episodeStopTimeValue=episodeStopDate.format("militaryTime");
if(currentGestAge>0){var egaAge=currentGestAge-Math.ceil((currentDate.getTime()-episodeStartDate.getTime())/numOfMilliSecsInADay);
if(egaAge>0){var numberOfDaysInAWeek=7;
var egaWeeks=Math.floor(egaAge/numberOfDaysInAWeek);
var egaDays=egaAge%numberOfDaysInAWeek;
fetalEGADisplay=egaWeeks+" "+fmi18n.WEEKS+" "+egaDays+" "+fmi18n.DAYS;
}}reasonForMonitoring=episode.REASON_FOR_MONITORING;
if(reasonForMonitoring==="(NoReasonSpecified)"){reasonForMonitoring="--";
}else{if(reasonForMonitoring==="(Episode Created By Data Manager)"||reasonForMonitoring===fmi18n.DATA_MANAGER_RFM){reasonForMonitoring="--";
}}arrFetalMonitoringResults.push({Check_Box:"<span><input type='checkbox' name='chkBox' id='checkBoxEpisode_"+i+"_"+compId+"' value='"+episode.EPISODE_ID+"' class='fm-wf-check'></span>",Episode_Start_Date:"<span>"+episodeStartDateValue+"</span>&nbsp;&nbsp;<span class = 'fm-wf-episode-time'>"+episodeStartTimeValue+"</span>",Episode_End_Date:"<span>"+episodeStopDateValue+"</span>&nbsp;&nbsp;<span class = 'fm-wf-episode-time'>"+episodeStopTimeValue+"</span>",EGA:fetalEGADisplay,RFM:reasonForMonitoring});
}var fetalMonitoringTable=new ComponentTable();
fetalMonitoringTable.setNamespace(this.getStyles().getNameSpace());
fetalMonitoringTable.setZebraStripe(true);
var checkBoxColumn=new TableColumn();
checkBoxColumn.setColumnId("Check_Box"+compId);
checkBoxColumn.setCustomClass("fm-wf-checkbox-column-info");
checkBoxColumn.setColumnDisplay("");
checkBoxColumn.setPrimarySortField("Check_Box");
checkBoxColumn.setRenderTemplate("${Check_Box}");
var episodeStartDateColumn=new TableColumn();
episodeStartDateColumn.setColumnId("Episode_Start_Date"+compId);
episodeStartDateColumn.setCustomClass("fm-wf-column-width fm-wf-episode-start-date");
episodeStartDateColumn.setColumnDisplay(fmi18n.INITIAL);
episodeStartDateColumn.setPrimarySortField("Episode_Start_Date");
episodeStartDateColumn.setRenderTemplate("${Episode_Start_Date}");
var episodeEndDateColumn=new TableColumn();
episodeEndDateColumn.setColumnId("Episode_End_Date"+compId);
episodeEndDateColumn.setCustomClass("fm-wf-column-width");
episodeEndDateColumn.setColumnDisplay(fmi18n.COMPLETE);
episodeEndDateColumn.setPrimarySortField("Episode_End_Date");
episodeEndDateColumn.setRenderTemplate("${Episode_End_Date}");
var egaColumn=new TableColumn();
egaColumn.setColumnId("EGA"+compId);
egaColumn.setCustomClass("fm-wf-column-width");
egaColumn.setColumnDisplay(fmi18n.FETAL_EGA);
egaColumn.setPrimarySortField("EGA");
egaColumn.setRenderTemplate("${EGA}");
var reasonForMonitoringColumn=new TableColumn();
reasonForMonitoringColumn.setColumnId("RFM"+compId);
reasonForMonitoringColumn.setCustomClass("fm-wf-rfm-column-width");
reasonForMonitoringColumn.setColumnDisplay(fmi18n.REASON_FOR_MONITORING);
reasonForMonitoringColumn.setPrimarySortField("RFM");
reasonForMonitoringColumn.setRenderTemplate("${RFM}");
fetalMonitoringTable.addColumn(checkBoxColumn);
fetalMonitoringTable.addColumn(episodeStartDateColumn);
fetalMonitoringTable.addColumn(episodeEndDateColumn);
fetalMonitoringTable.addColumn(egaColumn);
fetalMonitoringTable.addColumn(reasonForMonitoringColumn);
fetalMonitoringTable.bindData(arrFetalMonitoringResults);
this.setComponentTable(fetalMonitoringTable);
fetalMonitoringHTML.push("<div id='fmTable"+compId+"' class='fm-wf-table'>");
fetalMonitoringHTML.push(fetalMonitoringTable.render());
var footerHTML="<div id='fmFooterContent"+compId+"' class='fm-wf-footer-content-area'><div class='fm-wf-content fm-wf-text-area'><div id = 'numberOfSelections"+compId+"'></div></div>";
footerHTML+="<div class='fm-wf-content fm-wf-buttons-area'><div class='fm-wf-launch'><div id = 'launchLeft"+compId+"' class='fm-wf-button-left-right fm-wf-left-active'></div>";
footerHTML+="<div id = 'launchMiddle"+compId+"' class = 'fm-wf-button-middle fm-wf-middle-active'><div id = 'launchText"+compId+"' class='fm-wf-buttons-text fm-wf-text-enabled'>"+fmi18n.LAUNCH+"</div></div>";
footerHTML+="<div id = 'launchRight"+compId+"' class='fm-wf-button-left-right fm-wf-right-active'></div></div>";
footerHTML+="<div class= 'fm-wf-clear'><div class='fm-wf-button-left-right fm-wf-left-enabled'></div><div id = 'clearMiddle"+compId+"' class='fm-wf-button-middle fm-wf-middle-enabled'><div class='fm-wf-buttons-text fm-wf-text-enabled'>"+fmi18n.CLEAR+"</div>";
footerHTML+="</div><div class='fm-wf-button-left-right fm-wf-right-enabled'></div></div>";
fetalMonitoringHTML.push(footerHTML+"</div>");
this.finalizeComponent(fetalMonitoringHTML.join(""),MP_Util.CreateTitleText(this,fmEpisodesLength));
CERN_EventListener.fireEvent(this,this,EventListener.EVENT_COUNT_UPDATE,{count:fmEpisodesLength});
this.attachListeners();
};
FetalMonitoringComponentWF.prototype.attachListeners=function(){var component=this;
var compId=this.getComponentId();
var rootNode=this.getRootComponentNode();
var fmi18n=i18n.discernabu.fetalmonitoring_o2;
var fmFooterContentObj=$("#fmFooterContent"+compId);
fmFooterContentObj.hide();
var fmEpisodesList=$(rootNode).find(".fm-wf-check");
var fmTable=$("#fmTable"+compId);
var episodeListLength=fmEpisodesList.length;
var selectedEpisodesCnt=0;
var discernError=null;
var numberOfSelectionsObj=$("#numberOfSelections"+compId);
var launchLeftObj=$("#launchLeft"+compId);
var launchMiddleObj=$("#launchMiddle"+compId);
var launchLRightObj=$("#launchRight"+compId);
var launchTextObj=$("#launchText"+compId);
var maxNumOfSelections=3;
fmTable.on("click","input",function(){var episodeId=$(this).attr("id");
if(episodeId===""){return;
}var episodeListNumber=episodeId.split("_")[1];
var episodeIndex=parseInt(episodeListNumber,10);
if(fmEpisodesList[episodeIndex].checked===true){selectedEpisodesCnt++;
}else{selectedEpisodesCnt--;
}if(selectedEpisodesCnt===0){fmFooterContentObj.hide();
}else{fmFooterContentObj.show();
if(selectedEpisodesCnt<=maxNumOfSelections){launchTextObj.removeClass("fm-wf-text-disabled").addClass("fm-wf-text-enabled");
launchLeftObj.removeClass("fm-wf-left-disabled").addClass("fm-wf-left-active");
launchMiddleObj.removeClass("fm-wf-middle-disabled").addClass("fm-wf-middle-active");
launchLRightObj.removeClass("fm-wf-right-disabled").addClass("fm-wf-right-active");
numberOfSelectionsObj.html(selectedEpisodesCnt+fmi18n.MAX_SELECTIONS);
}else{launchTextObj.removeClass("fm-wf-text-enabled").addClass("fm-wf-text-disabled");
launchLeftObj.removeClass("fm-wf-left-active").addClass("fm-wf-left-disabled");
launchMiddleObj.removeClass("fm-wf-middle-active").addClass("fm-wf-middle-disabled");
launchLRightObj.removeClass("fm-wf-right-active").addClass("fm-wf-right-disabled");
numberOfSelectionsObj.html(fmi18n.SELECT_EPISODES);
}}});
$(rootNode).find(".fm-wf-clear").click(function(){for(var i=0;
i<episodeListLength;
i++){if(fmEpisodesList[i].checked){fmEpisodesList[i].checked=false;
}}selectedEpisodesCnt=0;
fmFooterContentObj.hide();
});
$(rootNode).find(".fm-wf-launch").click(function(){if(selectedEpisodesCnt>0&&selectedEpisodesCnt<=maxNumOfSelections){var selectedEpisodesArray=[];
var formObject;
for(var i=episodeListLength;
i--;
){if(fmEpisodesList[i].checked){selectedEpisodesArray[i]=fmEpisodesList[i].value;
}}try{MP_Util.LogDiscernInfo(component,"PREGNANCY","fetal-monitoring-o2.js","attachListeners");
formObject=window.external.DiscernObjectFactory("PREGNANCY");
}catch(pregObjCreationError){discernError=new Error(fmi18n.ERROR_CREATING_PREG_OBJ+pregObjCreationError.name+" "+pregObjCreationError.message);
MP_Util.LogJSError(discernError,this,"fetal-monitoring-o2.js","attachListeners");
return;
}if(!formObject){discernError=new Error(fmi18n.FAILED_TO_CREATE_PREG_OBJ);
MP_Util.LogJSError(discernError,this,"fetal-monitoring-o2.js","attachListeners");
return;
}try{var success=formObject.LaunchFetalMonitoring(component.getCriterion().person_id,selectedEpisodesArray);
if(!success){discernError=new Error(fmi18n.ERROR_CALLING_FM);
MP_Util.LogJSError(discernError,this,"fetal-monitoring-o2.js","attachListeners");
}}catch(pregActionError){discernError=new Error(fmi18n.PREG_ACTION_FAILURE+" - "+pregActionError.name+" - "+pregActionError.message);
MP_Util.LogJSError(discernError,this,"fetal-monitoring-o2.js","attachListeners");
}}});
};
