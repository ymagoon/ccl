 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadReportSection(nCalc=i2) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare ResultSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare ResultSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CommentSection(nCalc=i2) = f8 with Protect
declare CommentSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare SpaceSection(nCalc=i2) = f8 with Protect
declare SpaceSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare NoData(nCalc=i2) = f8 with Protect
declare NoDataABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootReportSection(nCalc=i2) = f8 with Protect
declare FootReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
if (validate(_bSubReport)!=1)
	declare _bSubReport = i1 with NoConstant(0),protect
endif
if (_bSubReport=0)
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
endif
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PDF),protect
declare _RemCOMMENT = i4 with NoConstant(1),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContResultSection = i2 with NoConstant(0),protect
declare _Times8B0 = i4 with NoConstant(0),protect
declare _Times8I0 = i4 with NoConstant(0),protect
declare _Times80 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
if (_bSubReport=0)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
endif
end ; FinalizeReport
 
subroutine HeadReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadReportSection(nCalc)
 
subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.470000), private
if (nPRINT_ALL = 0)
declare __PROTOCOL = vc with NoConstant(build2(CONCAT("Protocol ", BUILD(cPROTOCOL)),char(0))),protect
endif
declare __PRINTDATE = vc with NoConstant(build2(CONCAT("Printed: ",BUILD(cPRINT_DATE)),char(0))),protect
declare __PRINTEDBY = vc with NoConstant(build2(CONCAT("Printed by: ",BUILD(cUSER)),char(0))),protect
if ($CLINICAL_REPORT = "1")
declare __CT_LICENSE_1 = vc with NoConstant(build2(CONCAT(TRIM("CT License #: CL-0675")),char(0))),protect
endif
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.229
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (nPRINT_ALL = 0)
; DRAW TEXT --- Protocol
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PROTOCOL)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_flags = 20
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Cerner Audit Report",char(0)))
set RptSD->m_flags = 64
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 7.563
set RptSD->m_width = 2.458
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- PrintDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTDATE)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 7.688
set RptSD->m_width = 2.313
set RptSD->m_height = 0.260
; DRAW TEXT --- PrintedBy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTEDBY)
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.000
set RptSD->m_height = 0.229
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
 
/****** YOUR CODE BEGINS HERE ******/
if ($CLINICAL_REPORT = "1")
; DRAW TEXT --- CT_License_1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CT_LICENSE_1)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)
 
subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.630000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.266,OffsetX+10.000, OffsetY+0.266)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 2.000
set RptSD->m_width = 0.688
set RptSD->m_height = 0.198
set _oldFont = uar_rptSetFont(_hReport, _Times8B0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Timepoint",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 0.750
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Test",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.625
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Result",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.750
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Unique ID",char(0)))
; DRAW LINE --- FieldName6
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.516,OffsetX+10.000, OffsetY+0.516)
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 1.063
set RptSD->m_width = 0.688
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Subject ID",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 4.875
set RptSD->m_width = 0.938
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Corrected Date/Time",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 6.063
set RptSD->m_width = 0.813
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Corrected By",char(0)))
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 7.313
set RptSD->m_width = 0.813
set RptSD->m_height = 0.198
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Comment",char(0)))
set RptSD->m_flags = 36
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.198
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("*** Data Corrections ***",char(0)))
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine ResultSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(ResultSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine ResultSection(nCalc,maxHeight,bContinue)
 
subroutine ResultSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.250000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_COMMENT = f8 with noconstant(0.0), private
if (rpos = 1)
declare __UNIQUE_ID = vc with NoConstant(build2(BUILD(UNIQUE_ID),char(0))),protect
endif
if (rpos = 1)
declare __SUBJECT_ID = vc with NoConstant(build2(BUILD(SUBJECT_ID),char(0))),protect
endif
if (rpos = 1)
declare __TEST = vc with NoConstant(build2(BUILD(TEST),char(0))),protect
endif
declare __RESULT = vc with NoConstant(build2(BUILD(RESULT),char(0))),protect
if (rpos = 1)
declare __TIMEPOINT = vc with NoConstant(build2(BUILD(TIMEPOINT),char(0))),protect
endif
declare __CORRECTED_DT_TM = vc with NoConstant(build2(BUILD(CORRECT_DT_TM),char(0))),protect
declare __CORRECTED_BY = vc with NoConstant(build2(BUILD(CORRECTED_BY),char(0))),protect
declare __COMMENT = vc with NoConstant(build2(BUILD(COMMENT),char(0))),protect
if (rpos = 1)
declare __ORIG_RESULT = vc with NoConstant(build2(CONCAT(TRIM("Original Result")),char(0))),protect
endif
if (rpos = 1)
declare __SUBJECT_ID0 = vc with NoConstant(build2(BUILD(SUBJECT_ID),char(0))),protect
endif
if (rpos = 1)
declare __TEST1 = vc with NoConstant(build2(BUILD(TEST),char(0))),protect
endif
declare __RESULT2 = vc with NoConstant(build2(BUILD(RESULT),char(0))),protect
if (rpos = 1)
declare __TIMEPOINT3 = vc with NoConstant(build2(BUILD(TIMEPOINT),char(0))),protect
endif
if (rpos = 1)
declare __ORIG_RESULT4 = vc with NoConstant(build2(CONCAT(TRIM("Original Result")),char(0))),protect
endif
if (bContinue=0)
	set _RemCOMMENT = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.052
endif
set RptSD->m_x = OffsetX + 7.313
set RptSD->m_width = 2.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemCOMMENT = _RemCOMMENT
if (_RemCOMMENT > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemCOMMENT,size(__COMMENT)-_RemCOMMENT+1,__COMMENT)))
set drawHeight_COMMENT = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemCOMMENT = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemCOMMENT,size(__COMMENT)-_RemCOMMENT+1,__COMMENT)))) ; subtract null
	set _RemCOMMENT = _RemCOMMENT+RptSD->m_drawLength
else
	set _RemCOMMENT = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemCOMMENT
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.948
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- UNIQUE_ID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __UNIQUE_ID)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 1.188
set RptSD->m_width = 0.813
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- SUBJECT_ID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SUBJECT_ID)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 0.948
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- TEST
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TEST)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.948
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- RESULT
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RESULT)
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 2.000
set RptSD->m_width = 0.688
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- TIMEPOINT
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TIMEPOINT)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 1.313
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- CORRECTED_DT_TM
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CORRECTED_DT_TM)
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 6.000
set RptSD->m_width = 1.188
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- CORRECTED_BY
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CORRECTED_BY)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.052
endif
set RptSD->m_x = OffsetX + 7.313
set RptSD->m_width = 2.688
set RptSD->m_height = drawHeight_COMMENT
if (nCalc = RPT_RENDER AND _HoldRemCOMMENT > 0)
; DRAW TEXT --- COMMENT
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemCOMMENT,size(__COMMENT)-_HoldRemCOMMENT+1,
__COMMENT)))
else
	set _RemCOMMENT = _HoldRemCOMMENT
endif
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 1.125
set RptSD->m_height = 0.198
set _DummyFont = uar_rptSetFont(_hReport, _Times8I0)
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- Orig_Result
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ORIG_RESULT)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 1.188
set RptSD->m_width = 0.813
set RptSD->m_height = 0.198
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- SUBJECT_ID0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SUBJECT_ID0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 0.948
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- TEST1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TEST1)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.948
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- RESULT2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RESULT2)
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 2.000
set RptSD->m_width = 1.125
set RptSD->m_height = 0.198
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- TIMEPOINT3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TIMEPOINT3)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.052
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 1.125
set RptSD->m_height = 0.198
set _DummyFont = uar_rptSetFont(_hReport, _Times8I0)
if (nCalc = RPT_RENDER AND bContinue = 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (rpos = 1)
; DRAW TEXT --- Orig_Result4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ORIG_RESULT4)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
endif
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine ResultSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine CommentSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(CommentSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine CommentSection(nCalc)
 
subroutine CommentSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __COMMENT_BY = vc with NoConstant(build2(BUILD(rDATA->DATA[D.SEQ]->COMMENTS[cPOS].COMMENT_BY),char(0))),protect
declare __COMMENT_DT_TM = vc with NoConstant(build2(BUILD(rDATA->DATA[D.SEQ]->COMMENTS[cPOS].COMMENT_DT_TM),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 5.313
set RptSD->m_width = 1.250
set RptSD->m_height = 0.198
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- COMMENT_BY
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __COMMENT_BY)
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 4.125
set RptSD->m_width = 1.313
set RptSD->m_height = 0.198
; DRAW TEXT --- COMMENT_DT_TM
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __COMMENT_DT_TM)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine CommentSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine SpaceSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(SpaceSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine SpaceSection(nCalc)
 
subroutine SpaceSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.150000), private
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine SpaceSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine NoData(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(NoDataABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine NoData(nCalc)
 
subroutine NoDataABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.650000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("*** NO RECORDS FOUND ***",char(0)))
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine NoDataABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)
 
subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.690000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 64
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 8.688
set RptSD->m_width = 1.313
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Page
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rpt_pageofpage,char(0)))
set RptSD->m_flags = 20
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.500
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(
concat("When current and previous result are the same, the audit trail entry is due to comment modification after resul",
"t verification.",_CRLF,
"If the report is blank, then no corrections were made.")
,char(0)))
; DRAW LINE --- EndPageLine
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.099,OffsetX+10.000, OffsetY+0.099)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootReportSection(nCalc)
 
subroutine FootReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.177
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("***  End of Report  ***",char(0)))
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
if (_bSubReport=0)
set RptReport->m_recSize = 104
set RptReport->m_reportName = "PFI_AUDIT_TRAIL_REPORT_V1_5"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
endif
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 52
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 8
set RptFont->m_bold = RPT_OFF
set _Times80 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times8B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_ON
set _Times8I0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

