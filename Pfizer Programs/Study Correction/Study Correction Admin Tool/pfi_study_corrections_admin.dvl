 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare PageHeader(nCalc=i2) = f8 with Protect
declare PageHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare cHead(nCalc=i2) = f8 with Protect
declare cHeadABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare tHead(nCalc=i2) = f8 with Protect
declare tHeadABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare cBody(nCalc=i2) = f8 with Protect
declare cBodyABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare tBody(nCalc=i2) = f8 with Protect
declare tBodyABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare Reject(nCalc=i2) = f8 with Protect
declare RejectABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare Footer(nCalc=i2) = f8 with Protect
declare FooterABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PDF),protect
declare _Times8B0 = i4 with NoConstant(0),protect
declare _Times80 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times12B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted,DIO=value(_DIOTYPE)
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine PageHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PageHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PageHeader(nCalc)
 
subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.340000), private
declare __PROTOCOL = vc with NoConstant(build2(CONCAT("Study Protocol: ", cProtocol),char(0))),protect
declare __PRINTDATE = vc with NoConstant(build2(CONCAT("Printed: ",BUILD(cPrintDate)),char(0))),protect
declare __PRINTEDBY = vc with NoConstant(build2(concat("Printed By: ", cUser),char(0))),protect
declare __CORRECTION_TYPE = vc with NoConstant(build2(if (build(correction_type) = "COLLECTION")
	"Collection Date and Time Changes"
elseif (build(correction_type) = "TIMEPOINT")
	"Timepoint Changes"
elseif (build(correction_type) = "GTIMEPOINT")
	"Global Timepoint Changes"
endif,char(0))),protect
declare __CHANGEINFO = vc with NoConstant(build2(if (build(correction_type) = "COLLECTION")
	concat("Collection changed from ", build(cur_collect_dt_tm), " to ", build(new_collect_dt_tm))
elseif (build(correction_type) = "TIMEPOINT")
	concat("Timepoint changed from ", build2(trim(cur_timepoint)), " to ", build(new_timepoint))
elseif (build(correction_type) = "GTIMEPOINT")
	concat("Timepoint changed from ", build2(trim(cur_timepoint)), " to ", build(new_timepoint))
endif,char(0))),protect
if (build(data->submit) = "SUBMIT")
declare __GROUPID = vc with NoConstant(build2(concat("Study Correction Number: ", build(cnvtint(data->group_id))),char(0))),
protect
endif
declare __REPORTSUBMISSION = vc with NoConstant(build2(if (data->submit = "VIEW")
	"REPORT ONLY! CHANGES WILL NOT BE SUBMITTED UNTIL THE SUBMIT OPTION HAS BEEN SELECTED."
else
	"STUDY CORRECTION SUBMITTED."
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 1.813
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Protocol
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PROTOCOL)
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.016,OffsetX+7.438, OffsetY+1.016)
set RptSD->m_flags = 64
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 6.250
set RptSD->m_width = 1.208
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- PrintDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTDATE)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 5.688
set RptSD->m_width = 1.750
set RptSD->m_height = 0.260
; DRAW TEXT --- PrintedBy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTEDBY)
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 1.500
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW TEXT --- Correction_Type
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CORRECTION_TYPE)
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 0.125
set RptSD->m_width = 3.813
set RptSD->m_height = 0.229
; DRAW TEXT --- ChangeInfo
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CHANGEINFO)
; DRAW LINE --- FieldName6
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.266,OffsetX+7.438, OffsetY+1.266)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 0.313
set RptSD->m_width = 0.792
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Unique ID",char(0)))
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 1.500
set RptSD->m_width = 0.615
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Subject",char(0)))
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 0.615
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Accession",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 3.375
set RptSD->m_width = 4.000
set RptSD->m_height = 0.229
 
/****** YOUR CODE BEGINS HERE ******/
if (build(data->submit) = "SUBMIT")
; DRAW TEXT --- GroupID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __GROUPID)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.125
set RptSD->m_width = 2.510
set RptSD->m_height = 0.427
set _DummyFont = uar_rptSetFont(_hReport, _Times8B0)
; DRAW TEXT --- ReportSubmission
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __REPORTSUBMISSION)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
 
subroutine cHead(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(cHeadABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine cHead(nCalc)
 
subroutine cHeadABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __CUNIQUEID = vc with NoConstant(build2(if (subject > "0")
	build(subject)
else
	""
endif,char(0))),protect
declare __CSUBJECT = vc with NoConstant(build2(build(fin),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cUniqueID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CUNIQUEID)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.688
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- cSubject
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CSUBJECT)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
endif
return(sectionHeight)
end ;subroutine cHeadABS(nCalc,OffsetX,OffsetY)
 
subroutine tHead(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(tHeadABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine tHead(nCalc)
 
subroutine tHeadABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __CUNIQUEID = vc with NoConstant(build2(if (subject > "0")
	build(subject)
else
	""
endif,char(0))),protect
declare __CSUBJECT = vc with NoConstant(build2(build(fin),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cUniqueID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CUNIQUEID)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.688
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- cSubject
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CSUBJECT)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
endif
return(sectionHeight)
end ;subroutine tHeadABS(nCalc,OffsetX,OffsetY)
 
subroutine cBody(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(cBodyABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine cBody(nCalc)
 
subroutine cBodyABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __CACCESSION = vc with NoConstant(build2(if (accession > "-")
	build(accession)
else
	""
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.438
set RptSD->m_width = 0.948
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cAccession
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CACCESSION)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine cBodyABS(nCalc,OffsetX,OffsetY)
 
subroutine tBody(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(tBodyABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine tBody(nCalc)
 
subroutine tBodyABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __TACCESSION = vc with NoConstant(build2(if (accession > "-")
	build(accession)
else
	""
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.438
set RptSD->m_width = 0.948
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- tAccession
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TACCESSION)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine tBodyABS(nCalc,OffsetX,OffsetY)
 
subroutine Reject(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(RejectABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine Reject(nCalc)
 
subroutine RejectABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.360000), private
declare __REJECT = vc with NoConstant(build2(if (reject_ind = 1 and data->submit = "SUBMIT")
	"*** STUDY CORRECTION REJECTED ***"
else
	"*** STUDY CORRECTION REJECT REPORT ***"
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.104
set RptSD->m_x = OffsetX + 1.875
set RptSD->m_width = 4.000
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Reject
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __REJECT)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine RejectABS(nCalc,OffsetX,OffsetY)
 
subroutine Footer(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FooterABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine Footer(nCalc)
 
subroutine FooterABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 2.375
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("*** END OF REPORT ***",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 2.375
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("PFIZER CONFIDENTIAL",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 6.813
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- Page
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rpt_pageofpage,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FooterABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "PFI_STUDY_CORRECTIONS_ADMIN"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 8
set RptFont->m_bold = RPT_OFF
set _Times80 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times8B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set _Times12B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

