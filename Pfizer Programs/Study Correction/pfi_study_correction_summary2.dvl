 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare PageHeader(nCalc=i2) = f8 with Protect
declare PageHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare CorrType(nCalc=i2) = f8 with Protect
declare CorrTypeABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare CollDt(nCalc=i2) = f8 with Protect
declare CollDtABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare Timepoint(nCalc=i2) = f8 with Protect
declare TimepointABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPage(nCalc=i2) = f8 with Protect
declare FootPageABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootReport(nCalc=i2) = f8 with Protect
declare FootReportABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare NoData(nCalc=i2) = f8 with Protect
declare NoDataABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
if (validate(_bSubReport)!=1)
	declare _bSubReport = i1 with NoConstant(0),protect
endif
if (_bSubReport=0)
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
endif
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PDF),protect
declare _Times8B0 = i4 with NoConstant(0),protect
declare _Times80 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times8I0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
if (_bSubReport=0)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted,DIO=value(_DIOTYPE)
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
endif
end ; FinalizeReport
 
subroutine PageHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PageHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PageHeader(nCalc)
 
subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.270000), private
declare __PROTOCOL = vc with NoConstant(build2(CONCAT("Study Protocol: ", cProtocol),char(0))),protect
declare __PRINTDATE = vc with NoConstant(build2(CONCAT("Printed: ",BUILD(cPrintDate)),char(0))),protect
declare __PRINTEDBY = vc with NoConstant(build2(concat("Printed By: ", cUser),char(0))),protect
declare __CORRECTION_TYPE = vc with NoConstant(build2(if (cor_reason_var = 1)
	build("*** Collection Date and Time Corrections ***")
else
	build("*** Timepoint Corrections ***")
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 9.125
set RptSD->m_height = 0.229
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Protocol
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PROTOCOL)
set RptSD->m_flags = 64
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 8.625
set RptSD->m_width = 1.208
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- PrintDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTDATE)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 8.063
set RptSD->m_width = 1.750
set RptSD->m_height = 0.260
; DRAW TEXT --- PrintedBy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTEDBY)
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.766,OffsetX+10.000, OffsetY+0.766)
; DRAW LINE --- FieldName6
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 1.172,OffsetX+10.000, OffsetY+1.172)
set RptSD->m_flags = 20
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.688
set RptSD->m_height = 0.375
set _DummyFont = uar_rptSetFont(_hReport, _Times8B0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Correction Number",char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 1.313
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Correction",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 6.875
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Corrected By",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 4.313
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Request User",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.229
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW TEXT --- Protocol8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Cerner Audit Report",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
; DRAW TEXT --- Correction_Type
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CORRECTION_TYPE)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 8.750
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times8B0)
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Reason",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 2.875
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Request Dt/Tm",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 5.438
set RptSD->m_width = 0.875
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Corrected Dt/Tm",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
 
subroutine CorrType(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(CorrTypeABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine CorrType(nCalc)
 
subroutine CorrTypeABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __CGROUPID = vc with NoConstant(build2(build(cnvtstring(group_id)),char(0))),protect
declare __CREQUSER = vc with NoConstant(build2(build(request_user),char(0))),protect
declare __CADMINUSER = vc with NoConstant(build2(build(admin_user),char(0))),protect
declare __CADMINUSER1 = vc with NoConstant(build2(build(cor_reason),char(0))),protect
declare __CREQDTTM = vc with NoConstant(build2(build(request_dt_tm),char(0))),protect
declare __CCORRDTTM = vc with NoConstant(build2(build(corrected_dt_tm),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.188
set RptSD->m_width = 0.938
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cGroupID
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CGROUPID)
set RptSD->m_flags = 8
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.125
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
; DRAW TEXT --- cReqUser
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CREQUSER)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.813
set RptSD->m_width = 1.625
set RptSD->m_height = 0.260
; DRAW TEXT --- cAdminUser
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CADMINUSER)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 8.375
set RptSD->m_width = 2.125
set RptSD->m_height = 0.260
; DRAW TEXT --- cAdminUser1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CADMINUSER1)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.750
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
; DRAW TEXT --- cReqDtTm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CREQDTTM)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.313
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
; DRAW TEXT --- cCorrDtTm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CCORRDTTM)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
endif
return(sectionHeight)
end ;subroutine CorrTypeABS(nCalc,OffsetX,OffsetY)
 
subroutine CollDt(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(CollDtABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine CollDt(nCalc)
 
subroutine CollDtABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.940000), private
declare __CPREVCOLLDT = vc with NoConstant(build2(build("Previous Collect Date/Time"),char(0))),protect
declare __CCURRCOLLDT = vc with NoConstant(build2(build("Current Collect Date/Time"),char(0))),protect
declare __CPREVCOLLDTTM = vc with NoConstant(build2(build(old_coll_dt_tm),char(0))),protect
declare __CCURRCOLLDTTM = vc with NoConstant(build2(build(cur_coll_dt_tm),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.063
set RptSD->m_width = 1.313
set RptSD->m_height = 0.250
set _oldFont = uar_rptSetFont(_hReport, _Times8I0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cPrevCollDt
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CPREVCOLLDT)
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 1.063
set RptSD->m_width = 1.313
set RptSD->m_height = 0.250
; DRAW TEXT --- cCurrCollDt
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CCURRCOLLDT)
set RptSD->m_flags = 68
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.875
set RptSD->m_width = 1.188
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- cPrevCollDtTm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CPREVCOLLDTTM)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 0.875
set RptSD->m_width = 1.188
set RptSD->m_height = 0.250
; DRAW TEXT --- cCurrCollDtTm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CCURRCOLLDTTM)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine CollDtABS(nCalc,OffsetX,OffsetY)
 
subroutine Timepoint(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(TimepointABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine Timepoint(nCalc)
 
subroutine TimepointABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.940000), private
declare __CPREVTIMEPOINT = vc with NoConstant(build2(build("Previous Timepoint"),char(0))),protect
declare __CCURRTIMEPOINT = vc with NoConstant(build2(build("Current Timepoint"),char(0))),protect
declare __CPREVTP = vc with NoConstant(build2(build(old_timepoint),char(0))),protect
declare __CCURRTP = vc with NoConstant(build2(build(cur_timepoint),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.063
set RptSD->m_width = 1.313
set RptSD->m_height = 0.250
set _oldFont = uar_rptSetFont(_hReport, _Times8I0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- cPrevTimepoint
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CPREVTIMEPOINT)
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 1.313
set RptSD->m_height = 0.250
; DRAW TEXT --- cCurrTimepoint
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CCURRTIMEPOINT)
set RptSD->m_flags = 68
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 1.438
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- cPrevTP
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CPREVTP)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 1.438
set RptSD->m_height = 0.250
; DRAW TEXT --- cCurrTP
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CCURRTP)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine TimepointABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPage(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPage(nCalc)
 
subroutine FootPageABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 9.188
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times80)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Page
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rpt_pageofpage,char(0)))
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.078,OffsetX+10.000, OffsetY+0.078)
set RptSD->m_y = OffsetY + 0.115
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 2.500
set RptSD->m_height = 0.260
; DRAW TEXT --- Page1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("If the report is blank, then no corrections were made.",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageABS(nCalc,OffsetX,OffsetY)
 
subroutine FootReport(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootReportABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootReport(nCalc)
 
subroutine FootReportABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times8B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("*** END OF REPORT ***",char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("PFIZER CONFIDENTIAL",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootReportABS(nCalc,OffsetX,OffsetY)
 
subroutine NoData(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(NoDataABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine NoData(nCalc)
 
subroutine NoDataABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 10.000
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("*** NO RECORDS FOUND ***",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine NoDataABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
if (_bSubReport=0)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "PFI_STUDY_CORRECTION_SUMMARY"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
endif
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 8
set RptFont->m_bold = RPT_OFF
set _Times80 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times8B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_ON
set _Times8I0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

