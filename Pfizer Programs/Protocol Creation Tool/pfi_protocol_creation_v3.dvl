 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare PageHeader(nCalc=i2) = f8 with Protect
declare PageHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare Body(nCalc=i2) = f8 with Protect
declare BodyABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare Body2(nCalc=i2) = f8 with Protect
declare Body2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _Times80 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine PageHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PageHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PageHeader(nCalc)
 
subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.750000), private
declare __PROTOCOL = vc with NoConstant(build2(CONCAT("Summary for Protocol ", BUILD(requestin->organization[1].org_name)),char(0)
)),protect
declare __PRINTDATE = vc with NoConstant(build2(CONCAT("Printed: ",BUILD(cPrintDate)),char(0))),protect
declare __PRINTEDBY = vc with NoConstant(build2(concat("Printed By: ", cUser),char(0))),protect
declare __ORGSET = vc with NoConstant(build2(concat("Org Set Name: ", cOrgSet),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.438
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Protocol
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PROTOCOL)
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 0.516,OffsetX+7.438, OffsetY+0.516)
set RptSD->m_flags = 64
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.313
set RptSD->m_width = 1.208
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times80)
; DRAW TEXT --- PrintDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTDATE)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 5.750
set RptSD->m_width = 1.750
set RptSD->m_height = 0.260
; DRAW TEXT --- PrintedBy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PRINTEDBY)
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 3.063
set RptSD->m_width = 3.000
set RptSD->m_height = 0.260
; DRAW TEXT --- OrgSet
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ORGSET)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PageHeaderABS(nCalc,OffsetX,OffsetY)
 
subroutine Body(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(BodyABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine Body(nCalc)
 
subroutine BodyABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.310000), private
declare __SUCCESSFUL = vc with NoConstant(build2(build2("The Protocol ", trim(requestin->organization[1].org_name),
" was successfully created."),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.438
set RptSD->m_width = 4.938
set RptSD->m_height = 0.313
set _oldFont = uar_rptSetFont(_hReport, _Times100)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Successful
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SUCCESSFUL)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine BodyABS(nCalc,OffsetX,OffsetY)
 
subroutine Body2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(Body2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine Body2(nCalc)
 
subroutine Body2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.000000), private
declare __UNSUCCESSFUL = vc with NoConstant(build2(build2("Creation of Protocol ", trim(requestin->organization[1].org_name),
" has failed. Please notify the Cerner Support Team \
and create the Protocol manually via the Org Tool."),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.188
set RptSD->m_width = 5.313
set RptSD->m_height = 0.625
set _oldFont = uar_rptSetFont(_hReport, _Times100)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Unsuccessful
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __UNSUCCESSFUL)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine Body2ABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 104
set RptReport->m_reportName = "PFI_PROTOCOL_CREATION_V3"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 52
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 8
set RptFont->m_bold = RPT_OFF
set _Times80 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

