
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/

declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare labpd_bbt_xmtx(dummy) = null with Protect
declare __labpd_bbt_xmtx(dummy) = null with Protect
declare labpd_user(dummy) = null with Protect
declare labpd_doc_name(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadReportSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow3(nCalc=i2) = f8 with Protect
declare TableRow3ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare TableRow4(nCalc=i2) = f8 with Protect
declare TableRow4ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare TableRow2(nCalc=i2) = f8 with Protect
declare TableRow2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare TableRow1(nCalc=i2) = f8 with Protect
declare TableRow1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare TableRow(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRowABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow5(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow5ABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow7(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow7ABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow8(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare TableRow8ABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare SecondPageHeader(nCalc=i2) = f8 with Protect
declare SecondPageHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect

/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/

declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContHeadReportSection = i2 with NoConstant(0),protect
declare _bContTableRow = i2 with NoConstant(0),protect
declare _Remowner_area_string = i4 with NoConstant(1),protect
declare _bContTableRow5 = i2 with NoConstant(0),protect
declare _Reminventory_area_string = i4 with NoConstant(1),protect
declare _bContTableRow7 = i2 with NoConstant(0),protect
declare _Remproduct_category_string = i4 with NoConstant(1),protect
declare _bContTableRow8 = i2 with NoConstant(0),protect
declare _Remmedical_service_string = i4 with NoConstant(1),protect
declare _Helvetica8B0 = i4 with NoConstant(0),protect
declare _Helvetica80 = i4 with NoConstant(0),protect
declare _Helvetica160 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C14737632 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
declare doc_name = vc with NoConstant("All"),Protect
declare cur_user_full_name = vc with Protect
declare cur_user_name = vc with Protect
declare owner_area_string = vc with NoConstant("All"),Protect
declare oa_cnt = i4 with Protect
declare oa_list_size = i4 with Protect
declare inventory_area_string = vc with NoConstant("All"),Protect
declare ia_cnt = i4 with Protect
declare ia_list_size = i4 with Protect
declare product_category_string = vc with NoConstant("All"),Protect
declare pc_cnt = i4 with Protect
declare pc_list_size = i4 with Protect
declare medical_service_string = vc with NoConstant("All"),Protect
declare ms_cnt = i4 with Protect
declare ms_list_size = i4 with Protect
declare CT_RATIO_PRECISION = f8 with Protect

/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/

subroutine labpd_bbt_xmtx(dummy)

call InitializeReport(0)

call __labpd_bbt_xmtx(0)

call FinalizeReport(_SendTo)

end ;LayoutQuery
subroutine __labpd_bbt_xmtx(dummy)
SELECT
	OUT_OWNER_AREA = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].OWNER_AREA)
	, OUT_INVENTORY_AREA = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].INVENTORY_AREA)
	, OUT_PRODUCT_CATEGORY = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].PRODUCT_CATEGORY)
	, OUT_PRODUCT_TYPE = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].PRODUCT_TYPE)
	, OUT_XM_CNT = OUTPUT->OUT[D1.SEQ].XM_CNT
	, OUT_TRX_CNT = OUTPUT->OUT[D1.SEQ].TRX_CNT
	, OUT_CT_RATIO = OUTPUT->OUT[D1.SEQ].CT_RATIO
	, OUT_DOC_NAME = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].DOC_NAME)
	, OUT_MEDICAL_SERVICE = SUBSTRING(1, 30, OUTPUT->OUT[D1.SEQ].MEDICAL_SERVICE)
	, sort_var = if($SORT_BY = "OA")
		OUTPUT->OUT[D1.SEQ].OWNER_AREA
	elseif($SORT_BY = "IA")
		OUTPUT->OUT[D1.SEQ].INVENTORY_AREA
	elseif($SORT_BY = "PC")
		OUTPUT->OUT[D1.SEQ].PRODUCT_CATEGORY
	elseif($SORT_BY = "PT")
		OUTPUT->OUT[D1.SEQ].PRODUCT_TYPE
	elseif($SORT_BY = "XM")
		cnvtstring(OUTPUT->OUT[D1.SEQ].XM_CNT)
	elseif($SORT_BY = "TRX")
		cnvtstring(OUTPUT->OUT[D1.SEQ].TRX_CNT)
	elseif($SORT_BY = "CT")
		cnvtstring(OUTPUT->OUT[D1.SEQ].CT_RATIO)
	elseif($SORT_BY = "DOC")
		OUTPUT->OUT[D1.SEQ].DOC_NAME
	elseif($SORT_BY = "MS")
		OUTPUT->OUT[D1.SEQ].MEDICAL_SERVICE
endif

FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(OUTPUT->OUT, 5)))

PLAN D1

ORDER BY
	sort_var
	, OUT_DOC_NAME
	, OUT_OWNER_AREA
	, OUT_INVENTORY_AREA
	, OUT_PRODUCT_TYPE
	, OUT_PRODUCT_CATEGORY


Head Report
	_d0 = out_owner_area
	_d1 = out_inventory_area
	_d2 = out_product_category
	_d3 = out_product_type
	_d4 = out_xm_cnt
	_d5 = out_trx_cnt
	_d6 = out_doc_name
	_d7 = out_medical_service
; set bottom extent of page
_fEndDetail = RptReport->m_pageWidth-RptReport->m_marginBottom
_fEndDetail = _fEndDetail-FootPageSection(RPT_CALCHEIGHT)

_bContHeadReportSection = 0
; begin grow loop
bFirstTime = 1
while (_bContHeadReportSection=1 OR bFirstTime=1)

; calculate section height
_bHoldContinue = _bContHeadReportSection
_fDrawHeight = HeadReportSection(RPT_CALCHEIGHT,RptReport->m_pageWidth-RptReport->m_marginBottom-_YOffset,_bHoldContinue)

; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>RptReport->m_pageWidth-RptReport->m_marginBottom)
	call PageBreak(0)
; keep section if doesn't fit (one time only)
elseif (_bHoldContinue=1 AND _bContHeadReportSection = 0)
	call PageBreak(0)
endif

dummy_val = HeadReportSection(RPT_RENDER,RptReport->m_pageWidth-RptReport->m_marginBottom-_YOffset,_bContHeadReportSection)
bFirstTime = 0
endwhile

Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = SecondPageHeader(RPT_RENDER)
dummy_val = HeadPageSection(RPT_RENDER)

Head sort_var
	row+0

Head OUT_DOC_NAME
	row+0

Head OUT_OWNER_AREA
	row+0

Head OUT_INVENTORY_AREA
	row+0

Head OUT_PRODUCT_TYPE
	row+0

Head OUT_PRODUCT_CATEGORY
	row+0

Detail

/****** YOUR CODE BEGINS HERE ******/
if (out_trx_cnt = 0)
	ct_ratio_precision = (out_xm_cnt * 1.0)
else
	ct_ratio_precision = ((out_xm_cnt * 1.0)/(out_trx_cnt * 1.0))
endif
/*----- YOUR CODE ENDS HERE -----*/


; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif

dummy_val = DetailSection(RPT_RENDER)

Foot OUT_PRODUCT_CATEGORY
	row+0

Foot OUT_PRODUCT_TYPE
	row+0

Foot OUT_INVENTORY_AREA
	row+0

Foot OUT_OWNER_AREA
	row+0

Foot OUT_DOC_NAME
	row+0

Foot sort_var
	row+0

Foot Page
_YHold = _YOffset
_YOffset = _fEndDetail
dummy_val = FootPageSection(RPT_RENDER)
_YOffset = _YHold

end ;__LayoutQuery
subroutine labpd_user(dummy)
SELECT
	P.NAME_FULL_FORMATTED
	, PR.USERNAME

FROM
	PERSON   P
	, PRSNL   PR

plan p where p.person_id = reqinfo->updt_id
join pr where pr.person_id = p.person_id


/****** YOUR CODE BEGINS HERE ******/
Detail
cur_user_name = pr.username,
cur_user_full_name = p.name_full_formatted






/*----- YOUR CODE ENDS HERE -----*/


WITH NOCOUNTER, SEPARATOR=" ", FORMAT
end ;labpd_user

subroutine labpd_doc_name(dummy)
SELECT
	P.PERSON_ID
	, P.NAME_FULL_FORMATTED

FROM
	PERSON   P

where p.person_id = $ord_phys_id


/****** YOUR CODE BEGINS HERE ******/
Detail
doc_name = p.name_full_formatted



/*----- YOUR CODE ENDS HERE -----*/


WITH NOCOUNTER, SEPARATOR=" ", FORMAT
end ;labpd_doc_name

subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak

subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport

subroutine HeadReportSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine HeadReportSection(nCalc,maxHeight,bContinue)

subroutine TableRow3(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow3ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine TableRow3(nCalc)

subroutine TableRow3ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.187548), private
set RptSD->m_flags = 0 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 2.618 
set RptSD->m_height = 0.181 
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(219,219,219))
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName15
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Filters:",char(0))) 
endif
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow3ABS(nCalc,OffsetX,OffsetY)

subroutine TableRow4(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow4ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine TableRow4(nCalc)

subroutine TableRow4ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.187548), private
declare __FROM_DT_TM = vc with NoConstant(build(concat(format(cnvtdatetime($begin_dt_tm), "@SHORTDATE"), " ",format(cnvtdatetime($
begin_dt_tm), "@TIMENOSECONDS")),char(0))),protect
set RptSD->m_flags = 0 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = 0.181 
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName17
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Date Range:",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 64 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 0.368 
set RptSD->m_height = 0.181 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName18
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("From:",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 32 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.882 
set RptSD->m_width = 1.118 
set RptSD->m_height = 0.181 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- from_dt_tm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FROM_DT_TM) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.875,OffsetY,OffsetX+8.875,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow4ABS(nCalc,OffsetX,OffsetY)

subroutine TableRow2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine TableRow2(nCalc)

subroutine TableRow2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.188047), private
declare __TO_DT_TM = vc with NoConstant(build(concat(format(cnvtdatetime($end_dt_tm), "@SHORTDATE"), " ",format(cnvtdatetime($
end_dt_tm), "@TIMENOSECONDS")),char(0))),protect
set RptSD->m_flags = 0 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = 0.181 
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName19
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 64 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 0.368 
set RptSD->m_height = 0.181 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName20
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("To:",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 32 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.882 
set RptSD->m_width = 1.118 
set RptSD->m_height = 0.181 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- to_dt_tm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TO_DT_TM) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.875,OffsetY,OffsetX+8.875,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow2ABS(nCalc,OffsetX,OffsetY)

subroutine TableRow1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine TableRow1(nCalc)

subroutine TableRow1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.187548), private
declare __DOC_NAME = vc with NoConstant(build(if ($ord_phys_id != 0)
 doc_name
else
  "All"
endif,char(0))),protect
set RptSD->m_flags = 0 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = 0.181 
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- CellName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Ordering Physician:",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 32 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = 0.181 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
; DRAW TEXT --- doc_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DOC_NAME) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow1ABS(nCalc,OffsetX,OffsetY)

subroutine TableRow(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRowABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine TableRow(nCalc,maxHeight,bContinue)

subroutine TableRowABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.187147), private
declare growSum = i4 with noconstant(0), private
declare __OWNER_AREA_STRING = vc with NoConstant(build(owner_area_string,char(0))),protect
if (bContinue=0)
	set _Remowner_area_string = 1
endif
set RptSD->m_flags = 37 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemowner_area_string = _Remowner_area_string
if (_Remowner_area_string > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remowner_area_string,size(__OWNER_AREA_STRING)-
_Remowner_area_string+1,__OWNER_AREA_STRING))) 
set drawHeight_owner_area_string = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remowner_area_string = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remowner_area_string,size(__OWNER_AREA_STRING)-_Remowner_area_string+1,
__OWNER_AREA_STRING)))) ; subtract null
	set _Remowner_area_string = _Remowner_area_string+RptSD->m_drawLength
else
	set _Remowner_area_string = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remowner_area_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)

; end calc row height
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (bContinue = 0)
; DRAW TEXT --- owner_area_lbl
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Owner Area:",char(0))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 36 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (_HoldRemowner_area_string > 0)
; DRAW TEXT --- owner_area_string
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemowner_area_string,size(__OWNER_AREA_STRING)-
_HoldRemowner_area_string+1,__OWNER_AREA_STRING))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
else
	set _Remowner_area_string = _HoldRemowner_area_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRowABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)

subroutine TableRow5(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow5ABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine TableRow5(nCalc,maxHeight,bContinue)

subroutine TableRow5ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.187064), private
declare growSum = i4 with noconstant(0), private
declare __INVENTORY_AREA_STRING = vc with NoConstant(build(inventory_area_string,char(0))),protect
if (bContinue=0)
	set _Reminventory_area_string = 1
endif
set RptSD->m_flags = 37 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldReminventory_area_string = _Reminventory_area_string
if (_Reminventory_area_string > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Reminventory_area_string,size(__INVENTORY_AREA_STRING)-
_Reminventory_area_string+1,__INVENTORY_AREA_STRING))) 
set drawHeight_inventory_area_string = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Reminventory_area_string = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Reminventory_area_string,size(__INVENTORY_AREA_STRING)-
_Reminventory_area_string+1,__INVENTORY_AREA_STRING)))) ; subtract null
	set _Reminventory_area_string = _Reminventory_area_string+RptSD->m_drawLength
else
	set _Reminventory_area_string = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Reminventory_area_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)

; end calc row height
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (bContinue = 0)
; DRAW TEXT --- inventory_area
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Inventory Area:",char(0))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 36 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (_HoldReminventory_area_string > 0)
; DRAW TEXT --- inventory_area_string
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldReminventory_area_string,size(
__INVENTORY_AREA_STRING)-_HoldReminventory_area_string+1,__INVENTORY_AREA_STRING))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
else
	set _Reminventory_area_string = _HoldReminventory_area_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow5ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)

subroutine TableRow7(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow7ABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine TableRow7(nCalc,maxHeight,bContinue)

subroutine TableRow7ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.187548), private
declare growSum = i4 with noconstant(0), private
declare __PRODUCT_CATEGORY_STRING = vc with NoConstant(build(product_category_string,char(0))),protect
if (bContinue=0)
	set _Remproduct_category_string = 1
endif
set RptSD->m_flags = 37 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemproduct_category_string = _Remproduct_category_string
if (_Remproduct_category_string > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remproduct_category_string,size(
__PRODUCT_CATEGORY_STRING)-_Remproduct_category_string+1,__PRODUCT_CATEGORY_STRING))) 
set drawHeight_product_category_string = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remproduct_category_string = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remproduct_category_string,size(__PRODUCT_CATEGORY_STRING)-
_Remproduct_category_string+1,__PRODUCT_CATEGORY_STRING)))) ; subtract null
	set _Remproduct_category_string = _Remproduct_category_string+RptSD->m_drawLength
else
	set _Remproduct_category_string = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remproduct_category_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)

; end calc row height
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (bContinue = 0)
; DRAW TEXT --- product_category_lbl
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Product Category:",char(0))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 36 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (_HoldRemproduct_category_string > 0)
; DRAW TEXT --- product_category_string
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemproduct_category_string,size(
__PRODUCT_CATEGORY_STRING)-_HoldRemproduct_category_string+1,__PRODUCT_CATEGORY_STRING))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
else
	set _Remproduct_category_string = _HoldRemproduct_category_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow7ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)

subroutine TableRow8(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(TableRow8ABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine TableRow8(nCalc,maxHeight,bContinue)

subroutine TableRow8ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.187549), private
declare growSum = i4 with noconstant(0), private
declare __MEDICAL_SERVICE_STRING = vc with NoConstant(build(medical_service_string,char(0))),protect
if (bContinue=0)
	set _Remmedical_service_string = 1
endif
set RptSD->m_flags = 37 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDALLBORDERS 
set RptSD->m_paddingWidth = 0.020 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemmedical_service_string = _Remmedical_service_string
if (_Remmedical_service_string > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remmedical_service_string,size(__MEDICAL_SERVICE_STRING)
-_Remmedical_service_string+1,__MEDICAL_SERVICE_STRING))) 
set drawHeight_medical_service_string = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remmedical_service_string = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remmedical_service_string,size(__MEDICAL_SERVICE_STRING)-
_Remmedical_service_string+1,__MEDICAL_SERVICE_STRING)))) ; subtract null
	set _Remmedical_service_string = _Remmedical_service_string+RptSD->m_drawLength
else
	set _Remmedical_service_string = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remmedical_service_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)

; end calc row height
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 7.382 
set RptSD->m_width = 1.118 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (bContinue = 0)
; DRAW TEXT --- medical_service_lbl
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build("Medical Service:",char(0))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set RptSD->m_flags = 36 
set RptSD->m_y = OffsetY + 0.007 
set RptSD->m_x = OffsetX + 8.507 
set RptSD->m_width = 1.493 
set RptSD->m_height = sectionHeight
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER)
	if (_HoldRemmedical_service_string > 0)
; DRAW TEXT --- medical_service_string
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemmedical_service_string,size(
__MEDICAL_SERVICE_STRING)-_HoldRemmedical_service_string+1,__MEDICAL_SERVICE_STRING))) 
	else
		set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("",char(0))) 
	endif
else
	set _Remmedical_service_string = _HoldRemmedical_service_string
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
if (nCalc = 0)
	set _YOffset = _YOffset + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
; draw cell lines
if (nCalc = RPT_RENDER)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY,OffsetX+7.375,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+8.500,OffsetY,OffsetX+8.500,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+10.000,OffsetY,OffsetX+10.000,OffsetY+sectionHeight)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+ 0.000,OffsetX+10.000, OffsetY+0.000)
set _rptStat = uar_rptLine( _hReport,OffsetX+7.375,OffsetY+sectionHeight,OffsetX+10.000,OffsetY+sectionHeight)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
return (sectionHeight)
end ;subroutine TableRow8ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)

subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(1.500000), private
declare holdHeight = f8 with noconstant(0.0), private
declare growSum = i4 with noconstant(0), private
set RptSD->m_flags = 20 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDNOBORDERS 
set RptSD->m_paddingWidth = 0.000 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 3.438 
set RptSD->m_width = 3.521 
set RptSD->m_height = 0.313 
set _oldFont = uar_rptSetFont(_hReport, _Helvetica160) 
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Crossmatch to Transfusion Ratio",char(0))) 
endif
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C14737632)
set _YOffset = OffsetY+0.000
set _fHoldOffsetY = _YOffset-OffsetY
; calculate height of static table
if (nCalc=RPT_CALCHEIGHT AND bContinue = 0)
	set _YOffset = OffsetY + 0.000 ; modify Y-Offset for static table
	set holdHeight = 0
	if (growSum = 0)
		set maxHeight_TableRow3 = maxHeight-(0.000+holdHeight) ; init max height variable
		set holdHeight = holdHeight + TableRow3(RPT_CALCHEIGHT)
		if (holdHeight > maxHeight_TableRow3)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow4 = maxHeight-(0.000+holdHeight) ; init max height variable
		set holdHeight = holdHeight + TableRow4(RPT_CALCHEIGHT)
		if (holdHeight > maxHeight_TableRow4)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow2 = maxHeight-(0.000+holdHeight) ; init max height variable
		set holdHeight = holdHeight + TableRow2(RPT_CALCHEIGHT)
		if (holdHeight > maxHeight_TableRow2)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow1 = maxHeight-(0.000+holdHeight) ; init max height variable
		set holdHeight = holdHeight + TableRow1(RPT_CALCHEIGHT)
		if (holdHeight > maxHeight_TableRow1)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow = maxHeight-(0.000+holdHeight) ; init max height variable
		set _bHoldContinue = 0
		set holdHeight = holdHeight + TableRow(RPT_CALCHEIGHT,maxHeight_TableRow,_bHoldContinue)
		if (_bHoldContinue = 1 OR holdHeight > maxHeight_TableRow)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow5 = maxHeight-(0.000+holdHeight) ; init max height variable
		set _bHoldContinue = 0
		set holdHeight = holdHeight + TableRow5(RPT_CALCHEIGHT,maxHeight_TableRow5,_bHoldContinue)
		if (_bHoldContinue = 1 OR holdHeight > maxHeight_TableRow5)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow7 = maxHeight-(0.000+holdHeight) ; init max height variable
		set _bHoldContinue = 0
		set holdHeight = holdHeight + TableRow7(RPT_CALCHEIGHT,maxHeight_TableRow7,_bHoldContinue)
		if (_bHoldContinue = 1 OR holdHeight > maxHeight_TableRow7)
			set growSum = 1
		endif
	endif
	if (growSum = 0)
		set maxHeight_TableRow8 = maxHeight-(0.000+holdHeight) ; init max height variable
		set _bHoldContinue = 0
		set holdHeight = holdHeight + TableRow8(RPT_CALCHEIGHT,maxHeight_TableRow8,_bHoldContinue)
		if (_bHoldContinue = 1 OR holdHeight > maxHeight_TableRow8)
			set growSum = 1
		endif
	endif
	set _YOffset = OffsetY ; reset Y-Offset
endif ; end static table calc height
; render static table
if (nCalc = RPT_RENDER AND bContinue = 0)
	set _YOffset = OffsetY + 0.000 ; modify Y-Offset for static table
	set holdHeight = 0
	set holdHeight = holdHeight + TableRow3(RPT_RENDER)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set holdHeight = holdHeight + TableRow4(RPT_RENDER)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set holdHeight = holdHeight + TableRow2(RPT_RENDER)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set holdHeight = holdHeight + TableRow1(RPT_RENDER)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set maxHeight_TableRow = maxHeight-(0.000+holdHeight) ; init max height variable
	set _bHoldContinue = 0
	set holdHeight = holdHeight + TableRow(RPT_RENDER,maxHeight_TableRow,_bHoldContinue)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set maxHeight_TableRow5 = maxHeight-(0.000+holdHeight) ; init max height variable
	set _bHoldContinue = 0
	set holdHeight = holdHeight + TableRow5(RPT_RENDER,maxHeight_TableRow5,_bHoldContinue)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set maxHeight_TableRow7 = maxHeight-(0.000+holdHeight) ; init max height variable
	set _bHoldContinue = 0
	set holdHeight = holdHeight + TableRow7(RPT_RENDER,maxHeight_TableRow7,_bHoldContinue)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set maxHeight_TableRow8 = maxHeight-(0.000+holdHeight) ; init max height variable
	set _bHoldContinue = 0
	set holdHeight = holdHeight + TableRow8(RPT_RENDER,maxHeight_TableRow8,_bHoldContinue)
	if (0.000+holdHeight > sectionHeight)
		set sectionHeight = 0.000+holdHeight
	endif
	set _YOffset = OffsetY ; reset Y-Offset
endif ; end static table render
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)

subroutine SecondPageHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(SecondPageHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine SecondPageHeader(nCalc)

subroutine SecondPageHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.000000), private

/****** YOUR CODE BEGINS HERE ******/
if (NOT(curpage!= 1))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/

if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDNOBORDERS 
set RptSD->m_paddingWidth = 0.000 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 3.438 
set RptSD->m_width = 3.521 
set RptSD->m_height = 0.313 
set _oldFont = uar_rptSetFont(_hReport, _Helvetica160) 
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Crossmatch to Transfusion Ratio",char(0))) 
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine SecondPageHeaderABS(nCalc,OffsetX,OffsetY)

subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)

subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.340000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDNOBORDERS 
set RptSD->m_paddingWidth = 0.000 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 6.938 
set RptSD->m_width = 0.438 
set RptSD->m_height = 0.188 
set _oldFont = uar_rptSetFont(_hReport, _Helvetica8B0) 
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Ratio",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 0.000 
set RptSD->m_width = 0.844 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Owner Area",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 1.250 
set RptSD->m_width = 0.844 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Inventory Area",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 2.500 
set RptSD->m_width = 1.063 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Product Category",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 6.000 
set RptSD->m_width = 0.313 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("XM #",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 6.438 
set RptSD->m_width = 0.313 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Trx #",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 7.500 
set RptSD->m_width = 1.063 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Ordering Provider",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 9.000 
set RptSD->m_width = 1.000 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Medical Service",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 3.750 
set RptSD->m_width = 1.063 
set RptSD->m_height = 0.188 
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Product Type",char(0))) 
set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 0.625 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "OA")
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 2.000 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "IA")
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 3.406 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "PC")
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 4.438 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "PT")
; DRAW LABEL --- FieldName13
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 6.292 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "XM")
; DRAW LABEL --- FieldName14
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 6.708 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "TRX")
; DRAW LABEL --- FieldName15
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 7.250 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "CT")
; DRAW LABEL --- FieldName16
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 8.469 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "DOC")
; DRAW LABEL --- FieldName17
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set RptSD->m_y = OffsetY + 0.167 
set RptSD->m_x = OffsetX + 9.865 
set RptSD->m_width = 0.146 
set RptSD->m_height = 0.198 

/****** YOUR CODE BEGINS HERE ******/
if ($sort_by = "MS")
; DRAW LABEL --- FieldName18
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("^",char(0))) 
endif
/*----- YOUR CODE ENDS HERE -----*/

set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)

subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)

subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
declare __TRANSFUSE_CNT = vc with NoConstant(build2(format(OUT_TRX_CNT,"###"),char(0))),protect
declare __XM_CNT = vc with NoConstant(build2(format(OUT_XM_CNT,"###"),char(0))),protect
declare __CT_RATIO = vc with NoConstant(build2(format(ct_ratio_precision,"##.##"),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 64 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDNOBORDERS 
set RptSD->m_paddingWidth = 0.000 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 6.458 
set RptSD->m_width = 0.250 
set RptSD->m_height = 0.188 
set _oldFont = uar_rptSetFont(_hReport, _Helvetica80) 
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- TRANSFUSE_CNT
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TRANSFUSE_CNT) 
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 0.000 
set RptSD->m_width = 1.250 
set RptSD->m_height = 0.188 
; DRAW TEXT --- OWNER_AREA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_OWNER_AREA,char(0))) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 1.250 
set RptSD->m_width = 1.250 
set RptSD->m_height = 0.188 
; DRAW TEXT --- INV_AREA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_INVENTORY_AREA,char(0))) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 2.500 
set RptSD->m_width = 1.250 
set RptSD->m_height = 0.188 
; DRAW TEXT --- PRODUCT_CATEGORY
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_PRODUCT_CATEGORY,char(0))) 
set RptSD->m_flags = 64 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 6.000 
set RptSD->m_width = 0.250 
set RptSD->m_height = 0.188 
; DRAW TEXT --- XM_CNT
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __XM_CNT) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 6.813 
set RptSD->m_width = 0.438 
set RptSD->m_height = 0.188 
; DRAW TEXT --- CT_RATIO
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CT_RATIO) 
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 7.500 
set RptSD->m_width = 1.500 
set RptSD->m_height = 0.188 
; DRAW TEXT --- PROVIDER_NAME
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_DOC_NAME,char(0))) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 9.000 
set RptSD->m_width = 1.000 
set RptSD->m_height = 0.188 
; DRAW TEXT --- MEDICAL_SERVICE
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_MEDICAL_SERVICE,char(0))) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 3.750 
set RptSD->m_width = 2.188 
set RptSD->m_height = 0.188 
; DRAW TEXT --- PRODUCT_TYPE
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(OUT_PRODUCT_TYPE,char(0))) 
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)

subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)

subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
declare __CURPROG = vc with NoConstant(build2(concat("Progam: ", CURPROG),char(0))),protect
declare __CURDATETIME = vc with NoConstant(build2(concat("Printed: ", format(CURDATE, "@SHORTDATE"), " ",format(CURTIME3, 
"@TIMENOSECONDS")),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16 
set RptSD->m_borders = RPT_SDNOBORDERS 
set RptSD->m_padding = RPT_SDNOBORDERS 
set RptSD->m_paddingWidth = 0.000 
set RptSD->m_lineSpacing = RPT_SINGLE 
set RptSD->m_rotationAngle = 0 
set RptSD->m_y = OffsetY + 0.198 
set RptSD->m_x = OffsetX + 3.500 
set RptSD->m_width = 2.000 
set RptSD->m_height = 0.188 
set _oldFont = uar_rptSetFont(_hReport, _Helvetica8B0) 
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- RPT_PAGEOFPAGE
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(RPT_PAGEOFPAGE,char(0))) 
set RptSD->m_flags = 64 
set RptSD->m_y = OffsetY + 0.198 
set RptSD->m_x = OffsetX + 7.500 
set RptSD->m_width = 2.500 
set RptSD->m_height = 0.188 
set _DummyFont = uar_rptSetFont(_hReport, _Helvetica80) 
; DRAW TEXT --- CURPROG
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CURPROG) 
set RptSD->m_flags = 0 
set RptSD->m_y = OffsetY + 0.198 
set RptSD->m_x = OffsetX + 0.000 
set RptSD->m_width = 2.042 
set RptSD->m_height = 0.188 
; DRAW TEXT --- CURDATETIME
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CURDATETIME) 
set RptSD->m_y = OffsetY + 0.000 
set RptSD->m_x = OffsetX + 0.000 
set RptSD->m_width = 1.750 
set RptSD->m_height = 0.177 
; DRAW TEXT --- cur_user_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(cur_user_name,char(0))) 
set _DummyFont = uar_rptSetFont(_hReport, _oldFont) 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)

subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "LABPD_BBT_XMTX_LYT"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport

subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50 
set RptFont->m_fontName = RPT_TIMES 
set RptFont->m_pointSize = 10 
set RptFont->m_bold = RPT_OFF 
set RptFont->m_italic = RPT_OFF 
set RptFont->m_underline = RPT_OFF 
set RptFont->m_strikethrough = RPT_OFF 
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont) 
set RptFont->m_fontName = RPT_HELVETICA 
set RptFont->m_pointSize = 16 
set _Helvetica160 = uar_rptCreateFont(_hReport, RptFont) 
set RptFont->m_pointSize = 8 
set _Helvetica80 = uar_rptCreateFont(_hReport, RptFont) 
set RptFont->m_bold = RPT_ON 
set _Helvetica8B0 = uar_rptCreateFont(_hReport, RptFont) 
end;**************Create Fonts*************

subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16 
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_rgbColor =  
uar_rptEncodeColor(224,224,224)
set _pen14S0C14737632 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************

;**************Report Layout End*************

