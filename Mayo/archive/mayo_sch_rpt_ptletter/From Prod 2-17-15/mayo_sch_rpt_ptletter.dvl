 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare __LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadQUAL_PERSON_IDSection(nCalc=i2) = f8 with Protect
declare HeadQUAL_PERSON_IDSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare ApptSection(nCalc=i2) = f8 with Protect
declare ApptSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare PrepHeadSection(nCalc=i2) = f8 with Protect
declare PrepHeadSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare prepSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare prepSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare FootQUAL_PERSON_IDSection(nCalc=i2) = f8 with Protect
declare FootQUAL_PERSON_IDSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FooterSection(nCalc=i2) = f8 with Protect
declare FooterSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _RemPrep = i4 with NoConstant(1),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContprepSection = i2 with NoConstant(0),protect
declare _Times10I0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
 
call __LayoutQuery(0)
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine __LayoutQuery(dummy)
SELECT
	QUAL_PERSON_ID = HOLD->qual[D1.SEQ].person_id
	, APPT_BEG_DT_TM = HOLD->qual[D1.SEQ].appt.beg_dt_tm
	, QUAL_SCH_EVENT_ID = HOLD->qual[d1.SEQ].sch_event_id
	, apt_seq = d2.seq
 
FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(HOLD->qual, 5)))
	, (DUMMYT   D2  WITH seq = 1)
 
PLAN D1 where maxrec(d2,size(hold->qual[d1.seq].prep_qual,5))
JOIN d2
 
ORDER BY
	QUAL_PERSON_ID
	, APPT_BEG_DT_TM
	, QUAL_SCH_EVENT_ID
 
 
 
Head Report
	_d0 = d1.seq
	_d1 = d2.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
 
 
Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = HeadPageSection(RPT_RENDER)
 
Head QUAL_PERSON_ID
 
/****** YOUR CODE BEGINS HERE ******/
; calculate section height
_fDrawHeight = HeadQUAL_PERSON_IDSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadQUAL_PERSON_IDSection(RPT_RENDER)
 
 
foot_person_ind = 0
print_page_nbr = 0
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Head APPT_BEG_DT_TM
	row+0
 
Head QUAL_SCH_EVENT_ID
; calculate section height
_fDrawHeight = ApptSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = ApptSection(RPT_RENDER)
 
Detail
; calculate section height
_fDrawHeight = PrepHeadSection(RPT_CALCHEIGHT)
; skip keep if section is empty
if (_fDrawHeight > 0)
 
 
; keep together
if (_fEndDetail >= _YOffset+_fDrawHeight)
	_bHoldContinue = 0
	_fDrawHeight = _fDrawHeight+prepSection(RPT_CALCHEIGHT,_fEndDetail-_YOffset-_fDrawHeight,_bHoldContinue)
	if (_bHoldContinue=1) ; force a break to happen
		_fDrawHeight = _fEndDetail + 1
	endif
endif
 
endif ; end skip keep
 
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = PrepHeadSection(RPT_RENDER)
_bContprepSection = 0
; begin grow loop
bFirstTime = 1
while (_bContprepSection=1 OR bFirstTime=1)
 
; calculate section height
_bHoldContinue = _bContprepSection
_fDrawHeight = prepSection(RPT_CALCHEIGHT,_fEndDetail-_YOffset,_bHoldContinue)
 
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
; keep section if doesn't fit (one time only)
elseif (_bHoldContinue=1 AND _bContprepSection = 0)
	break
endif
 
dummy_val = prepSection(RPT_RENDER,_fEndDetail-_YOffset,_bContprepSection)
bFirstTime = 0
endwhile
 
Foot QUAL_SCH_EVENT_ID
	row+0
 
Foot APPT_BEG_DT_TM
	row+0
 
Foot QUAL_PERSON_ID
 
/****** YOUR CODE BEGINS HERE ******/
; calculate section height
_fDrawHeight = FootQUAL_PERSON_IDSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = FootQUAL_PERSON_IDSection(RPT_RENDER)
 
foot_person_ind = 1
 
IF(CURENDREPORT = 0)
BREAK
ENDIF
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Foot Page
_YHold = _YOffset
_YOffset = _fEndDetail
 
/****** YOUR CODE BEGINS HERE ******/
if (foot_person_ind = 0)
  print_page_nbr = 1
endif
 
_YHold = _YOffset
_YOffset = _fEndDetail
dummy_val = FooterSection(RPT_RENDER)
_YOffset = _YHold
/*----- YOUR CODE ENDS HERE -----*/
 
 
_YOffset = _YHold
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
end ;__LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)
 
subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.340000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.125
set RptSD->m_width = 0.938
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(curdate,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadQUAL_PERSON_IDSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadQUAL_PERSON_IDSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadQUAL_PERSON_IDSection(nCalc)
 
subroutine HeadQUAL_PERSON_IDSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(2.470000), private
declare __PATIENTDEMO = vc with NoConstant(build2(concat(hold->qual [D1.seq].name_first, " ",hold->qual [D1.seq].name_middle, " ",
hold->qual [D1.seq].name_last),char(0))),protect
declare __ADDR1 = vc with NoConstant(build2(hold->qual [D1.seq].addr .street_addr1,char(0))),protect
if (hold->qual [D1.seq].addr .street_addr2 !=NULL)
declare __ADDR2 = vc with NoConstant(build2(hold->qual [D1.seq].addr .street_addr2,char(0))),protect
endif
if (hold->qual [D1.seq].addr .street_addr2 != NULL)
declare __CITYSTATEZIP = vc with NoConstant(build2(if(size(hold->qual [D1.seq].addr .zip)>5)
concat(hold->qual [D1.seq].addr .city,", ",hold->qual [D1.seq].addr .state, " ",substring(1,5,hold->qual [D1.seq].addr .zip)," - "
,substring(6,4,hold->qual [D1.seq].addr .zip))
else
concat(hold->qual [D1.seq].addr .city,", ",hold->qual [D1.seq].addr .state, " ",hold->qual [D1.seq].addr .zip)
endif,char(0))),protect
endif
if (hold->qual [D1.seq].addr .street_addr2 = NULL)
declare __CITYSTATEZIP8 = vc with NoConstant(build2(if(size(hold->qual [D1.seq].addr .zip)>5)
concat(hold->qual [D1.seq].addr .city,", ",hold->qual [D1.seq].addr .state, " ",substring(1,5,hold->qual [D1.seq].addr .zip)," - "
,substring(6,4,hold->qual [D1.seq].addr .zip))
else
concat(hold->qual [D1.seq].addr .city,", ",hold->qual [D1.seq].addr .state, " ",hold->qual [D1.seq].addr .zip)
endif,char(0))),protect
endif
declare __NAME = vc with NoConstant(build2(concat(hold->qual [D1.seq].name_first,","),char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 2.615
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- PatientDemo
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PATIENTDEMO)
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 2.885
set RptSD->m_height = 0.260
; DRAW TEXT --- Addr1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADDR1)
set RptSD->m_y = OffsetY + 1.375
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 3.188
set RptSD->m_height = 0.260
 
/****** YOUR CODE BEGINS HERE ******/
if (hold->qual [D1.seq].addr .street_addr2 !=NULL)
; DRAW TEXT --- Addr2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADDR2)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.563
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 2.688
set RptSD->m_height = 0.260
 
/****** YOUR CODE BEGINS HERE ******/
if (hold->qual [D1.seq].addr .street_addr2 != NULL)
; DRAW TEXT --- CityStateZip
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CITYSTATEZIP)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_y = OffsetY + 1.375
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 2.688
set RptSD->m_height = 0.260
 
/****** YOUR CODE BEGINS HERE ******/
if (hold->qual [D1.seq].addr .street_addr2 = NULL)
; DRAW TEXT --- CityStateZip8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CITYSTATEZIP8)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_y = OffsetY + 1.875
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 0.271
set RptSD->m_height = 0.260
; DRAW LABEL --- Dear
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Dear",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 1.875
set RptSD->m_x = OffsetX + 0.563
set RptSD->m_width = 1.979
set RptSD->m_height = 0.260
; DRAW TEXT --- Name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __NAME)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 2.063
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 6.510
set RptSD->m_height = 0.313
; DRAW LABEL --- Thanks
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(
"Thank you for choosing Mayo Clinic Health System for your healthcare needs. This is a reminder of the following appointment(s):",
char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadQUAL_PERSON_IDSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine ApptSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(ApptSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine ApptSection(nCalc)
 
subroutine ApptSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.820000), private
declare __APPTDATE = vc with NoConstant(build2(format(hold->qual [D1.seq].appt .beg_dt_tm,"MM/DD/YYYY;;d"),char(0))),protect
declare __TIME = vc with NoConstant(build2(format(hold->qual [D1.seq].appt .beg_dt_tm,"HH:MM;;S"),char(0))),protect
declare __DEPARTMENT = vc with NoConstant(build2(if (textlen(hold->qual [D1.seq].appt .appt_location) >= 6)
  trim(substring(5,textlen(hold->qual [D1.seq].appt .appt_location)-4,hold->qual [D1.seq].appt .appt_location),3)
else
  trim(hold->qual [D1.seq].appt .appt_location,3)
endif,char(0))),protect
declare __PHONE = vc with NoConstant(build2(IF (hold->qual [D1.seq].appt .appt_location = "LASK Xray" or hold->qual [D1.seq].appt
.appt_location = "LAOC Xray")
hold->qual[D1.seq]->order_md_phone
else
hold->qual[D1.seq]->appt->appt_loc_phone
endif,char(0))),protect
declare __HEADER = vc with NoConstant(build2(hold->qual [D1.seq].appt .desc_heading,char(0))),protect
declare __DESCVALUE = vc with NoConstant(build2(hold->qual [D1.seq].appt .desc_value,char(0))),protect
declare __BUILDING = vc with NoConstant(build2(if (textlen(hold->qual [D1.seq].appt .appt_bld) >= 6)
  trim(substring(4,textlen(hold->qual [D1.seq].appt .appt_bld)-2,hold->qual [D1.seq].appt .appt_bld),3)
else
  trim(hold->qual [D1.seq].appt .appt_bld,3)
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- ApptDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __APPTDATE)
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 0.938
set RptSD->m_width = 0.625
set RptSD->m_height = 0.260
; DRAW TEXT --- Time
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __TIME)
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 1.500
set RptSD->m_width = 1.438
set RptSD->m_height = 0.260
; DRAW TEXT --- Department
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DEPARTMENT)
; DRAW LINE --- FieldName4
set _rptStat = uar_rptLine( _hReport,OffsetX+0.188,OffsetY+ 0.287,OffsetX+6.313, OffsetY+0.287)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 0.625
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10I0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date",char(0)))
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 1.000
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Time",char(0)))
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 1.500
set RptSD->m_width = 0.990
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Department",char(0)))
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Phone",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 5.188
set RptSD->m_width = 1.125
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- Phone
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PHONE)
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 3.250
set RptSD->m_width = 1.688
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10I0)
; DRAW TEXT --- Header
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __HEADER)
set RptSD->m_y = OffsetY + 0.313
set RptSD->m_x = OffsetX + 3.250
set RptSD->m_width = 1.938
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- DescValue
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DESCVALUE)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 0.646
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10I0)
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Building:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 1.563
set RptSD->m_width = 3.500
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- Building
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __BUILDING)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine ApptSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine PrepHeadSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PrepHeadSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PrepHeadSection(nCalc)
 
subroutine PrepHeadSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.320000), private
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT((d2.seq = 1 and
textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0)))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.375
set RptSD->m_width = 0.938
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (D2.seq = 1)
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Prep:",char(0)))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
 
/****** YOUR CODE BEGINS HERE ******/
if (textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.375,OffsetY+ 0.193,OffsetX+0.625, OffsetY+0.193)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PrepHeadSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine prepSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(prepSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine prepSection(nCalc,maxHeight,bContinue)
 
subroutine prepSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.220000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_Prep = f8 with noconstant(0.0), private
if (textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0)
declare __PREP = vc with NoConstant(build2(hold->qual [D1.seq].appt.prep_qual[d2.seq].preappt_text,char(0))),protect
endif
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (bContinue=0)
	set _RemPrep = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 5.750
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
if (textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0)
set _HoldRemPrep = _RemPrep
if (_RemPrep > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPrep,size(__PREP)-_RemPrep+1,__PREP)))
set drawHeight_Prep = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPrep = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPrep,size(__PREP)-_RemPrep+1,__PREP)))) ; subtract null
	set _RemPrep = _RemPrep+RptSD->m_drawLength
else
	set _RemPrep = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPrep
endif
else
	set _RemPrep = 0
set _HoldRemPrep = _RemPrep
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 5.750
set RptSD->m_height = drawHeight_Prep
if (nCalc = RPT_RENDER AND _HoldRemPrep > 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (textlen(trim(hold->qual [D1.seq].appt .preappt_text,3)) > 0)
; DRAW TEXT --- Prep
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPrep,size(__PREP)-_HoldRemPrep+1,__PREP)))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
else
	set _RemPrep = _HoldRemPrep
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine prepSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine FootQUAL_PERSON_IDSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootQUAL_PERSON_IDSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootQUAL_PERSON_IDSection(nCalc)
 
subroutine FootQUAL_PERSON_IDSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.150000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 6.042
set RptSD->m_height = 0.333
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- End
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(
"If you are unable to keep your appointment, please call the phone number(s) listed above as soon as possible to reschedule.",char
(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 0.823
set RptSD->m_height = 0.219
; DRAW LABEL --- Sincerely
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Sincerely,",char(0)))
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 0.250
set RptSD->m_width = 1.625
set RptSD->m_height = 0.260
; DRAW LABEL --- MHS
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Mayo Clinic Health System",char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootQUAL_PERSON_IDSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FooterSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FooterSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FooterSection(nCalc)
 
subroutine FooterSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (print_page_nbr = 1)
declare __PAGE = vc with NoConstant(build2(CONCAT("Page ",cnvtstring(CURPAGE)),char(0))),protect
endif
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (print_page_nbr = 1)
; DRAW TEXT --- Page
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAGE)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FooterSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_SCH_RPT_PTLETTER"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_italic = RPT_ON
set _Times10I0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 

