 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadReportSection(nCalc=i2) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare VisionSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare VisionSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare BowelBladderSection(nCalc=i2) = f8 with Protect
declare BowelBladderSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OstomySection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare OstomySectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare BowelBladder2(nCalc=i2) = f8 with Protect
declare BowelBladder2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DiagProbHeader(nCalc=i2) = f8 with Protect
declare DiagProbHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DiagAllerBldSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare DiagAllerBldSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare AllergyBloodHeader(nCalc=i2) = f8 with Protect
declare AllergyBloodHeaderABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare AllergyBlood(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare AllergyBloodABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CodeStatAdvDir(nCalc=i2) = f8 with Protect
declare CodeStatAdvDirABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FallCodeVacSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare FallCodeVacSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare LimbAlertSection(nCalc=i2) = f8 with Protect
declare LimbAlertSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare SkinConSection(nCalc=i2) = f8 with Protect
declare SkinConSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare SkinAbnormSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare SkinAbnormSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare WoundSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare WoundSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CentralLineCareSection(nCalc=i2) = f8 with Protect
declare CentralLineCareSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare CLDetailSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CLDetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare ElimAssistance(nCalc=i2) = f8 with Protect
declare ElimAssistanceABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare MentalStatusSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare MentalStatusSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare VitalSignsSection(nCalc=i2) = f8 with Protect
declare VitalSignsSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare PainSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare PainSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare InsuranceInfoSection(nCalc=i2) = f8 with Protect
declare InsuranceInfoSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare NotesSection(nCalc=i2) = f8 with Protect
declare NotesSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _RemSpeechChar = i4 with NoConstant(1),protect
declare _RemSwallowDiff = i4 with NoConstant(1),protect
declare _RemLanguage = i4 with NoConstant(1),protect
declare _RemSensoryDef = i4 with NoConstant(1),protect
declare _RemSpeechComp = i4 with NoConstant(1),protect
declare _RemSpeechExpress = i4 with NoConstant(1),protect
declare _RemSpeechMem = i4 with NoConstant(1),protect
declare _RemSpeechProd = i4 with NoConstant(1),protect
declare _RemPDPatient = i4 with NoConstant(1),protect
declare _RemPDFamily = i4 with NoConstant(1),protect
declare _RemPDSecurity = i4 with NoConstant(1),protect
declare _RemPDBedside = i4 with NoConstant(1),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContVisionSection = i2 with NoConstant(0),protect
declare _RemFieldName4 = i4 with NoConstant(1),protect
declare _bContOstomySection = i2 with NoConstant(0),protect
declare _RemDiagnosis = i4 with NoConstant(1),protect
declare _RemInfectIllness = i4 with NoConstant(1),protect
declare _RemProblems = i4 with NoConstant(1),protect
declare _bContDiagAllerBldSection = i2 with NoConstant(0),protect
declare _RemAllergies = i4 with NoConstant(1),protect
declare _RemBloodProduct = i4 with NoConstant(1),protect
declare _bContAllergyBlood = i2 with NoConstant(0),protect
declare _RemVaccines = i4 with NoConstant(1),protect
declare _bContFallCodeVacSection = i2 with NoConstant(0),protect
declare _RemFieldName3 = i4 with NoConstant(1),protect
declare _bContSkinAbnormSection = i2 with NoConstant(0),protect
declare _RemFieldName1 = i4 with NoConstant(1),protect
declare _bContWoundSection = i2 with NoConstant(0),protect
declare _RemFieldName0 = i4 with NoConstant(1),protect
declare _bContCLDetailSection = i2 with NoConstant(0),protect
declare _RemOrientation = i4 with NoConstant(1),protect
declare _RemLevelCons = i4 with NoConstant(1),protect
declare _bContMentalStatusSection = i2 with NoConstant(0),protect
declare _RemFieldName0 = i4 with NoConstant(1),protect
declare _bContPainSection = i2 with NoConstant(0),protect
declare _Times10I0 = i4 with NoConstant(0),protect
declare _Times10U0 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times10BU0 = i4 with NoConstant(0),protect
declare _Times12B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadReportSection(nCalc)
 
subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.610000), private
declare __PATIENT = vc with NoConstant(build2(data->pat_name,char(0))),protect
declare __DOB = vc with NoConstant(build2(data->dob,char(0))),protect
declare __HOMEADDRESS = vc with NoConstant(build2(data->address1,char(0))),protect
declare __HOMEPHONE = vc with NoConstant(build2(data->home_phone,char(0))),protect
declare __HOMEADDRESS2 = vc with NoConstant(build2(data->address2,char(0))),protect
declare __ADMITDATE = vc with NoConstant(build2(data->admit_dt_tm,char(0))),protect
declare __EMERCONTACT = vc with NoConstant(build2(data->emer_contact,char(0))),protect
declare __EMERPHONE = vc with NoConstant(build2(data->emer_phone,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.010
set RptSD->m_x = OffsetX + -0.010
set RptSD->m_width = 7.510
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Transitional Care/Nursing Home",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.510
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Plan of Care",char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.688
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient",char(0)))
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 0.938
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date of Birth",char(0)))
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.063
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Home Address",char(0)))
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 6.438
set RptSD->m_width = 1.063
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Home Phone",char(0)))
set RptSD->m_y = OffsetY + 1.125
set RptSD->m_x = OffsetX + 6.313
set RptSD->m_width = 1.125
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Emergency Phone",char(0)))
set RptSD->m_y = OffsetY + 1.125
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.500
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Emergency Contact",char(0)))
set RptSD->m_y = OffsetY + 1.125
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.438
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date/Time Patient Admitted to Hospital",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.563
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- patient
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PATIENT)
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 0.938
set RptSD->m_height = 0.188
; DRAW TEXT --- dob
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DOB)
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.875
set RptSD->m_height = 0.177
; DRAW TEXT --- HomeAddress
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __HOMEADDRESS)
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 6.438
set RptSD->m_width = 1.021
set RptSD->m_height = 0.188
; DRAW TEXT --- homePhone
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __HOMEPHONE)
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.875
set RptSD->m_height = 0.177
; DRAW TEXT --- HomeAddress2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __HOMEADDRESS2)
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + -0.010
set RptSD->m_width = 1.948
set RptSD->m_height = 0.260
; DRAW TEXT --- AdmitDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADMITDATE)
set RptSD->m_y = OffsetY + 1.323
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 2.500
set RptSD->m_height = 0.260
; DRAW TEXT --- EmerContact
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __EMERCONTACT)
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + 6.313
set RptSD->m_width = 1.125
set RptSD->m_height = 0.188
; DRAW TEXT --- emerPhone
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __EMERPHONE)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine VisionSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(VisionSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine VisionSection(nCalc,maxHeight,bContinue)
 
subroutine VisionSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(2.270000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_SpeechChar = f8 with noconstant(0.0), private
declare drawHeight_SwallowDiff = f8 with noconstant(0.0), private
declare drawHeight_Language = f8 with noconstant(0.0), private
declare drawHeight_SensoryDef = f8 with noconstant(0.0), private
declare drawHeight_SpeechComp = f8 with noconstant(0.0), private
declare drawHeight_SpeechExpress = f8 with noconstant(0.0), private
declare drawHeight_SpeechMem = f8 with noconstant(0.0), private
declare drawHeight_SpeechProd = f8 with noconstant(0.0), private
declare drawHeight_PDPatient = f8 with noconstant(0.0), private
declare drawHeight_PDFamily = f8 with noconstant(0.0), private
declare drawHeight_PDSecurity = f8 with noconstant(0.0), private
declare drawHeight_PDBedside = f8 with noconstant(0.0), private
declare __SPEECHCHAR = vc with NoConstant(build2(data->speech_char,char(0))),protect
declare __SWALLOWDIFF = vc with NoConstant(build2(data->swallow_diff,char(0))),protect
declare __LANGUAGE = vc with NoConstant(build2(data->language,char(0))),protect
declare __SENSORYDEF = vc with NoConstant(build2(data->sensory_deficits,char(0))),protect
declare __SPEECHCOMP = vc with NoConstant(build2(concat("Comprehension:  ",trim(data->speech_comp,3)),char(0))),protect
declare __SPEECHEXPRESS = vc with NoConstant(build2(concat("Expression:  ",trim(data->speech_express,3)),char(0))),protect
declare __SPEECHMEM = vc with NoConstant(build2(concat("Memory and Judgement:  ",trim(data->speech_memory,3)),char(0))),protect
declare __SPEECHPROD = vc with NoConstant(build2(concat("Production:  ",trim(data->speech_prod,3)),char(0))),protect
declare __PDPATIENT = vc with NoConstant(build2(concat("With Patient:  ",trim(data->pd_patient,3)),char(0))),protect
declare __PDFAMILY = vc with NoConstant(build2(concat("With Family:  ",trim(data->pd_family,3)),char(0))),protect
declare __PDSECURITY = vc with NoConstant(build2(concat("Sent to Security:  ",trim(data->pd_security,3)),char(0))),protect
declare __PDBEDSIDE = vc with NoConstant(build2(concat("At Bedside:  ",trim(data->pd_bedside,3)),char(0))),protect
if (bContinue=0)
	set _RemSpeechChar = 1
	set _RemSwallowDiff = 1
	set _RemLanguage = 1
	set _RemSensoryDef = 1
	set _RemSpeechComp = 1
	set _RemSpeechExpress = 1
	set _RemSpeechMem = 1
	set _RemSpeechProd = 1
	set _RemPDPatient = 1
	set _RemPDFamily = 1
	set _RemPDSecurity = 1
	set _RemPDBedside = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.615
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.438
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemSpeechChar = _RemSpeechChar
if (_RemSpeechChar > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSpeechChar,size(__SPEECHCHAR)-_RemSpeechChar+1,
__SPEECHCHAR)))
set drawHeight_SpeechChar = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSpeechChar = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSpeechChar,size(__SPEECHCHAR)-_RemSpeechChar+1,__SPEECHCHAR))))
; subtract null
	set _RemSpeechChar = _RemSpeechChar+RptSD->m_drawLength
else
	set _RemSpeechChar = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSpeechChar
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.625
endif
set RptSD->m_x = OffsetX + 1.563
set RptSD->m_width = 4.563
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSwallowDiff = _RemSwallowDiff
if (_RemSwallowDiff > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSwallowDiff,size(__SWALLOWDIFF)-_RemSwallowDiff+1,
__SWALLOWDIFF)))
set drawHeight_SwallowDiff = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSwallowDiff = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSwallowDiff,size(__SWALLOWDIFF)-_RemSwallowDiff+1,__SWALLOWDIFF))))
; subtract null
	set _RemSwallowDiff = _RemSwallowDiff+RptSD->m_drawLength
else
	set _RemSwallowDiff = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSwallowDiff
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.615
endif
set RptSD->m_x = OffsetX + 6.208
set RptSD->m_width = 1.292
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemLanguage = _RemLanguage
if (_RemLanguage > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemLanguage,size(__LANGUAGE)-_RemLanguage+1,__LANGUAGE))
)
set drawHeight_Language = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemLanguage = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemLanguage,size(__LANGUAGE)-_RemLanguage+1,__LANGUAGE)))) ; subtract null
	set _RemLanguage = _RemLanguage+RptSD->m_drawLength
else
	set _RemLanguage = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemLanguage
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.333
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSensoryDef = _RemSensoryDef
if (_RemSensoryDef > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSensoryDef,size(__SENSORYDEF)-_RemSensoryDef+1,
__SENSORYDEF)))
set drawHeight_SensoryDef = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSensoryDef = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSensoryDef,size(__SENSORYDEF)-_RemSensoryDef+1,__SENSORYDEF))))
; subtract null
	set _RemSensoryDef = _RemSensoryDef+RptSD->m_drawLength
else
	set _RemSensoryDef = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSensoryDef
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.250
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSpeechComp = _RemSpeechComp
if (_RemSpeechComp > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSpeechComp,size(__SPEECHCOMP)-_RemSpeechComp+1,
__SPEECHCOMP)))
set drawHeight_SpeechComp = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSpeechComp = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSpeechComp,size(__SPEECHCOMP)-_RemSpeechComp+1,__SPEECHCOMP))))
; subtract null
	set _RemSpeechComp = _RemSpeechComp+RptSD->m_drawLength
else
	set _RemSpeechComp = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSpeechComp
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 2.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSpeechExpress = _RemSpeechExpress
if (_RemSpeechExpress > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSpeechExpress,size(__SPEECHEXPRESS)-_RemSpeechExpress
+1,__SPEECHEXPRESS)))
set drawHeight_SpeechExpress = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSpeechExpress = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSpeechExpress,size(__SPEECHEXPRESS)-_RemSpeechExpress+1,__SPEECHEXPRESS)
))) ; subtract null
	set _RemSpeechExpress = _RemSpeechExpress+RptSD->m_drawLength
else
	set _RemSpeechExpress = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSpeechExpress
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.438
endif
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 2.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSpeechMem = _RemSpeechMem
if (_RemSpeechMem > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSpeechMem,size(__SPEECHMEM)-_RemSpeechMem+1,
__SPEECHMEM)))
set drawHeight_SpeechMem = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSpeechMem = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSpeechMem,size(__SPEECHMEM)-_RemSpeechMem+1,__SPEECHMEM))))
; subtract null
	set _RemSpeechMem = _RemSpeechMem+RptSD->m_drawLength
else
	set _RemSpeechMem = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSpeechMem
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.438
endif
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.313
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemSpeechProd = _RemSpeechProd
if (_RemSpeechProd > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemSpeechProd,size(__SPEECHPROD)-_RemSpeechProd+1,
__SPEECHPROD)))
set drawHeight_SpeechProd = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemSpeechProd = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemSpeechProd,size(__SPEECHPROD)-_RemSpeechProd+1,__SPEECHPROD))))
; subtract null
	set _RemSpeechProd = _RemSpeechProd+RptSD->m_drawLength
else
	set _RemSpeechProd = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemSpeechProd
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.010
endif
set RptSD->m_x = OffsetX + 5.813
set RptSD->m_width = 1.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemPDPatient = _RemPDPatient
if (_RemPDPatient > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPDPatient,size(__PDPATIENT)-_RemPDPatient+1,
__PDPATIENT)))
set drawHeight_PDPatient = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPDPatient = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPDPatient,size(__PDPATIENT)-_RemPDPatient+1,__PDPATIENT))))
; subtract null
	set _RemPDPatient = _RemPDPatient+RptSD->m_drawLength
else
	set _RemPDPatient = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPDPatient
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.000
endif
set RptSD->m_x = OffsetX + 3.750
set RptSD->m_width = 1.875
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemPDFamily = _RemPDFamily
if (_RemPDFamily > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPDFamily,size(__PDFAMILY)-_RemPDFamily+1,__PDFAMILY))
)
set drawHeight_PDFamily = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPDFamily = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPDFamily,size(__PDFAMILY)-_RemPDFamily+1,__PDFAMILY)))) ; subtract null
	set _RemPDFamily = _RemPDFamily+RptSD->m_drawLength
else
	set _RemPDFamily = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPDFamily
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.010
endif
set RptSD->m_x = OffsetX + 1.875
set RptSD->m_width = 1.813
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemPDSecurity = _RemPDSecurity
if (_RemPDSecurity > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPDSecurity,size(__PDSECURITY)-_RemPDSecurity+1,
__PDSECURITY)))
set drawHeight_PDSecurity = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPDSecurity = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPDSecurity,size(__PDSECURITY)-_RemPDSecurity+1,__PDSECURITY))))
; subtract null
	set _RemPDSecurity = _RemPDSecurity+RptSD->m_drawLength
else
	set _RemPDSecurity = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPDSecurity
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.021
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.750
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemPDBedside = _RemPDBedside
if (_RemPDBedside > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPDBedside,size(__PDBEDSIDE)-_RemPDBedside+1,
__PDBEDSIDE)))
set drawHeight_PDBedside = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPDBedside = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPDBedside,size(__PDBEDSIDE)-_RemPDBedside+1,__PDBEDSIDE))))
; subtract null
	set _RemPDBedside = _RemPDBedside+RptSD->m_drawLength
else
	set _RemPDBedside = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPDBedside
endif
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Vision/Hearing/Speech/Other Mechanical Aids",char(0)))
endif
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Speech Characteristics",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Sensory Deficits",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 6.188
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Language",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 1.563
set RptSD->m_width = 2.625
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Swallowing Difficulty/Aspiration Risk",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.813
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Personal Devices",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Speech",char(0)))
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.615
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.438
set RptSD->m_height = drawHeight_SpeechChar
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
if (nCalc = RPT_RENDER AND _HoldRemSpeechChar > 0)
; DRAW TEXT --- SpeechChar
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSpeechChar,size(__SPEECHCHAR)-_HoldRemSpeechChar+
1,__SPEECHCHAR)))
else
	set _RemSpeechChar = _HoldRemSpeechChar
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.625
endif
set RptSD->m_x = OffsetX + 1.563
set RptSD->m_width = 4.563
set RptSD->m_height = drawHeight_SwallowDiff
if (nCalc = RPT_RENDER AND _HoldRemSwallowDiff > 0)
; DRAW TEXT --- SwallowDiff
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSwallowDiff,size(__SWALLOWDIFF)-
_HoldRemSwallowDiff+1,__SWALLOWDIFF)))
else
	set _RemSwallowDiff = _HoldRemSwallowDiff
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.615
endif
set RptSD->m_x = OffsetX + 6.208
set RptSD->m_width = 1.292
set RptSD->m_height = drawHeight_Language
if (nCalc = RPT_RENDER AND _HoldRemLanguage > 0)
; DRAW TEXT --- Language
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemLanguage,size(__LANGUAGE)-_HoldRemLanguage+1,
__LANGUAGE)))
else
	set _RemLanguage = _HoldRemLanguage
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.333
set RptSD->m_height = drawHeight_SensoryDef
if (nCalc = RPT_RENDER AND _HoldRemSensoryDef > 0)
; DRAW TEXT --- SensoryDef
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSensoryDef,size(__SENSORYDEF)-_HoldRemSensoryDef+
1,__SENSORYDEF)))
else
	set _RemSensoryDef = _HoldRemSensoryDef
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.250
set RptSD->m_height = drawHeight_SpeechComp
if (nCalc = RPT_RENDER AND _HoldRemSpeechComp > 0)
; DRAW TEXT --- SpeechComp
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSpeechComp,size(__SPEECHCOMP)-_HoldRemSpeechComp+
1,__SPEECHCOMP)))
else
	set _RemSpeechComp = _HoldRemSpeechComp
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.188
endif
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 2.688
set RptSD->m_height = drawHeight_SpeechExpress
if (nCalc = RPT_RENDER AND _HoldRemSpeechExpress > 0)
; DRAW TEXT --- SpeechExpress
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSpeechExpress,size(__SPEECHEXPRESS)-
_HoldRemSpeechExpress+1,__SPEECHEXPRESS)))
else
	set _RemSpeechExpress = _HoldRemSpeechExpress
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.438
endif
set RptSD->m_x = OffsetX + 4.813
set RptSD->m_width = 2.688
set RptSD->m_height = drawHeight_SpeechMem
if (nCalc = RPT_RENDER AND _HoldRemSpeechMem > 0)
; DRAW TEXT --- SpeechMem
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSpeechMem,size(__SPEECHMEM)-_HoldRemSpeechMem+1,
__SPEECHMEM)))
else
	set _RemSpeechMem = _HoldRemSpeechMem
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 1.438
endif
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.313
set RptSD->m_height = drawHeight_SpeechProd
if (nCalc = RPT_RENDER AND _HoldRemSpeechProd > 0)
; DRAW TEXT --- SpeechProd
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemSpeechProd,size(__SPEECHPROD)-_HoldRemSpeechProd+
1,__SPEECHPROD)))
else
	set _RemSpeechProd = _HoldRemSpeechProd
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.010
endif
set RptSD->m_x = OffsetX + 5.813
set RptSD->m_width = 1.688
set RptSD->m_height = drawHeight_PDPatient
if (nCalc = RPT_RENDER AND _HoldRemPDPatient > 0)
; DRAW TEXT --- PDPatient
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPDPatient,size(__PDPATIENT)-_HoldRemPDPatient+1,
__PDPATIENT)))
else
	set _RemPDPatient = _HoldRemPDPatient
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.000
endif
set RptSD->m_x = OffsetX + 3.750
set RptSD->m_width = 1.875
set RptSD->m_height = drawHeight_PDFamily
if (nCalc = RPT_RENDER AND _HoldRemPDFamily > 0)
; DRAW TEXT --- PDFamily
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPDFamily,size(__PDFAMILY)-_HoldRemPDFamily+1,
__PDFAMILY)))
else
	set _RemPDFamily = _HoldRemPDFamily
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.010
endif
set RptSD->m_x = OffsetX + 1.875
set RptSD->m_width = 1.813
set RptSD->m_height = drawHeight_PDSecurity
if (nCalc = RPT_RENDER AND _HoldRemPDSecurity > 0)
; DRAW TEXT --- PDSecurity
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPDSecurity,size(__PDSECURITY)-_HoldRemPDSecurity+
1,__PDSECURITY)))
else
	set _RemPDSecurity = _HoldRemPDSecurity
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 2.021
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.750
set RptSD->m_height = drawHeight_PDBedside
if (nCalc = RPT_RENDER AND _HoldRemPDBedside > 0)
; DRAW TEXT --- PDBedside
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPDBedside,size(__PDBEDSIDE)-_HoldRemPDBedside+1,
__PDBEDSIDE)))
else
	set _RemPDBedside = _HoldRemPDBedside
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine VisionSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine BowelBladderSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(BowelBladderSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine BowelBladderSection(nCalc)
 
subroutine BowelBladderSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.840000), private
declare __URINARYELIM = vc with NoConstant(build2(data->urinary_elim,char(0))),protect
declare __DATELASTBM = vc with NoConstant(build2(data->last_bm,char(0))),protect
declare __CLININDICATION = vc with NoConstant(build2(data->clinical_ind,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Bowel & Bladder",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Urinary Elimination",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 5.625
set RptSD->m_width = 1.875
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date of Last Bowel Movement",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 1.375
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Clinical Indication",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.479
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- UrinaryElim
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __URINARYELIM)
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 5.625
set RptSD->m_width = 1.875
set RptSD->m_height = 0.188
; DRAW TEXT --- DateLastBM
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DATELASTBM)
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 2.063
set RptSD->m_height = 0.188
; DRAW TEXT --- ClinIndication
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CLININDICATION)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine BowelBladderSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine OstomySection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(OstomySectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine OstomySection(nCalc,maxHeight,bContinue)
 
subroutine OstomySectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.450000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_FieldName4 = f8 with noconstant(0.0), private
declare __FIELDNAME4 = vc with NoConstant(build2(if (os_num = 1)
  data->ostomy_1
elseif (os_num = 2)
  data->ostomy_2
elseif (os_num = 3)
  data->ostomy_3
endif,char(0))),protect
declare __FIELDNAME5 = vc with NoConstant(build2(if (os_num = 1)
  "Ostomy #1"
elseif (os_num = 2)
  "Ostomy #2"
elseif (os_num = 3)
  "Ostomy #3"
endif,char(0))),protect
if (bContinue=0)
	set _RemFieldName4 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.219
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.500
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemFieldName4 = _RemFieldName4
if (_RemFieldName4 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName4,size(__FIELDNAME4)-_RemFieldName4+1,
__FIELDNAME4)))
set drawHeight_FieldName4 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName4 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName4,size(__FIELDNAME4)-_RemFieldName4+1,__FIELDNAME4))))
; subtract null
	set _RemFieldName4 = _RemFieldName4+RptSD->m_drawLength
else
	set _RemFieldName4 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName4
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.219
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.500
set RptSD->m_height = drawHeight_FieldName4
if (nCalc = RPT_RENDER AND _HoldRemFieldName4 > 0)
; DRAW TEXT --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName4,size(__FIELDNAME4)-_HoldRemFieldName4+
1,__FIELDNAME4)))
else
	set _RemFieldName4 = _HoldRemFieldName4
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.073
set RptSD->m_width = 2.115
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10BU0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME5)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine OstomySectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine BowelBladder2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(BowelBladder2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine BowelBladder2(nCalc)
 
subroutine BowelBladder2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.150000), private
declare __URINARYINSERT = vc with NoConstant(build2(data->uc_insert,char(0))),protect
declare __CATHETERTYPE = vc with NoConstant(build2(data->catheter_type,char(0))),protect
declare __CATHETERSIZE = vc with NoConstant(build2(data->catheter_size,char(0))),protect
declare __INSERTIONSITE = vc with NoConstant(build2(data->insertion_site,char(0))),protect
declare __CATHDISDTTM = vc with NoConstant(build2(data->uc_discon_dt_tm,char(0))),protect
declare __BALLOONINFLATION = vc with NoConstant(build2(data->balloon_inflation,char(0))),protect
declare __CATHDISCONTINUE = vc with NoConstant(build2(data->uc_discon,char(0))),protect
declare __CATHINSERTDTTM = vc with NoConstant(build2(data->uc_insert_dt_tm,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.625
set RptSD->m_height = 0.219
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Urinary Catheter Insertion",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 6.438
set RptSD->m_width = 0.875
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Insertion Site",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 3.562
set RptSD->m_width = 1.125
set RptSD->m_height = 0.406
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catheter Insertion Date/Time",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.875
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catheter Size",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Balloon Inflation",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catheter Type",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.938
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- UrinaryInsert
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __URINARYINSERT)
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 1.292
set RptSD->m_height = 0.271
; DRAW TEXT --- CatheterType
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CATHETERTYPE)
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.188
set RptSD->m_height = 0.271
; DRAW TEXT --- CatheterSize
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CATHETERSIZE)
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 6.438
set RptSD->m_width = 0.938
set RptSD->m_height = 0.271
; DRAW TEXT --- InsertionSite
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __INSERTIONSITE)
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 1.000
set RptSD->m_height = 0.271
; DRAW TEXT --- CathDisDTTM
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CATHDISDTTM)
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 1.656
set RptSD->m_height = 0.260
; DRAW TEXT --- BalloonInflation
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __BALLOONINFLATION)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 2.063
set RptSD->m_width = 1.000
set RptSD->m_height = 0.313
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catheter Discontinued",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 1.313
set RptSD->m_height = 0.406
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catheter Discontiued Date/Time",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.427
set RptSD->m_x = OffsetX + 2.073
set RptSD->m_width = 1.427
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- CathDiscontinue
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CATHDISCONTINUE)
set RptSD->m_y = OffsetY + 0.427
set RptSD->m_x = OffsetX + 3.615
set RptSD->m_width = 1.198
set RptSD->m_height = 0.260
; DRAW TEXT --- CathInsertDTTM
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CATHINSERTDTTM)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine BowelBladder2ABS(nCalc,OffsetX,OffsetY)
 
subroutine DiagProbHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DiagProbHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DiagProbHeader(nCalc)
 
subroutine DiagProbHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.470000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = bor(bor(RPT_SDTOPBORDER,RPT_SDBOTTOMBORDER),RPT_SDLEFTBORDER)
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Diagnosis",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Infectious Illness",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.000
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Problems",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DiagProbHeaderABS(nCalc,OffsetX,OffsetY)
 
subroutine DiagAllerBldSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(DiagAllerBldSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine DiagAllerBldSection(nCalc,maxHeight,bContinue)
 
subroutine DiagAllerBldSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.290000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_Diagnosis = f8 with noconstant(0.0), private
declare drawHeight_InfectIllness = f8 with noconstant(0.0), private
declare drawHeight_Problems = f8 with noconstant(0.0), private
declare __DIAGNOSIS = vc with NoConstant(build2(data->diagnosis,char(0))),protect
declare __INFECTILLNESS = vc with NoConstant(build2(data->infect_illness,char(0))),protect
declare __PROBLEMS = vc with NoConstant(build2(data->problems,char(0))),protect
if (bContinue=0)
	set _RemDiagnosis = 1
	set _RemInfectIllness = 1
	set _RemProblems = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.406
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemDiagnosis = _RemDiagnosis
if (_RemDiagnosis > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemDiagnosis,size(__DIAGNOSIS)-_RemDiagnosis+1,
__DIAGNOSIS)))
set drawHeight_Diagnosis = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemDiagnosis = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemDiagnosis,size(__DIAGNOSIS)-_RemDiagnosis+1,__DIAGNOSIS))))
; subtract null
	set _RemDiagnosis = _RemDiagnosis+RptSD->m_drawLength
else
	set _RemDiagnosis = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemDiagnosis
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.010
endif
set RptSD->m_x = OffsetX + 2.594
set RptSD->m_width = 2.375
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemInfectIllness = _RemInfectIllness
if (_RemInfectIllness > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemInfectIllness,size(__INFECTILLNESS)-_RemInfectIllness
+1,__INFECTILLNESS)))
set drawHeight_InfectIllness = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemInfectIllness = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemInfectIllness,size(__INFECTILLNESS)-_RemInfectIllness+1,__INFECTILLNESS)
))) ; subtract null
	set _RemInfectIllness = _RemInfectIllness+RptSD->m_drawLength
else
	set _RemInfectIllness = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemInfectIllness
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.010
endif
set RptSD->m_x = OffsetX + 5.073
set RptSD->m_width = 2.458
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemProblems = _RemProblems
if (_RemProblems > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemProblems,size(__PROBLEMS)-_RemProblems+1,__PROBLEMS))
)
set drawHeight_Problems = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemProblems = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemProblems,size(__PROBLEMS)-_RemProblems+1,__PROBLEMS)))) ; subtract null
	set _RemProblems = _RemProblems+RptSD->m_drawLength
else
	set _RemProblems = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemProblems
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.406
set RptSD->m_height = drawHeight_Diagnosis
if (nCalc = RPT_RENDER AND _HoldRemDiagnosis > 0)
; DRAW TEXT --- Diagnosis
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemDiagnosis,size(__DIAGNOSIS)-_HoldRemDiagnosis+1,
__DIAGNOSIS)))
else
	set _RemDiagnosis = _HoldRemDiagnosis
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.010
endif
set RptSD->m_x = OffsetX + 2.594
set RptSD->m_width = 2.375
set RptSD->m_height = drawHeight_InfectIllness
if (nCalc = RPT_RENDER AND _HoldRemInfectIllness > 0)
; DRAW TEXT --- InfectIllness
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemInfectIllness,size(__INFECTILLNESS)-
_HoldRemInfectIllness+1,__INFECTILLNESS)))
else
	set _RemInfectIllness = _HoldRemInfectIllness
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.010
endif
set RptSD->m_x = OffsetX + 5.073
set RptSD->m_width = 2.458
set RptSD->m_height = drawHeight_Problems
if (nCalc = RPT_RENDER AND _HoldRemProblems > 0)
; DRAW TEXT --- Problems
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemProblems,size(__PROBLEMS)-_HoldRemProblems+1,
__PROBLEMS)))
else
	set _RemProblems = _HoldRemProblems
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine DiagAllerBldSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine AllergyBloodHeader(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(AllergyBloodHeaderABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine AllergyBloodHeader(nCalc)
 
subroutine AllergyBloodHeaderABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 3.750
set RptSD->m_width = 3.750
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Blood Product Transfusion",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_borders = bor(bor(RPT_SDTOPBORDER,RPT_SDBOTTOMBORDER),RPT_SDLEFTBORDER)
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.750
set RptSD->m_height = 0.396
set _DummyFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Allergies/Sensitivites",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine AllergyBloodHeaderABS(nCalc,OffsetX,OffsetY)
 
subroutine AllergyBlood(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(AllergyBloodABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine AllergyBlood(nCalc,maxHeight,bContinue)
 
subroutine AllergyBloodABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.360000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_Allergies = f8 with noconstant(0.0), private
declare drawHeight_BloodProduct = f8 with noconstant(0.0), private
declare __ALLERGIES = vc with NoConstant(build2(data->allergies,char(0))),protect
declare __BLOODPRODUCT = vc with NoConstant(build2(data->blood_product,char(0))),protect
if (bContinue=0)
	set _RemAllergies = 1
	set _RemBloodProduct = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 3.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemAllergies = _RemAllergies
if (_RemAllergies > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemAllergies,size(__ALLERGIES)-_RemAllergies+1,
__ALLERGIES)))
set drawHeight_Allergies = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemAllergies = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemAllergies,size(__ALLERGIES)-_RemAllergies+1,__ALLERGIES))))
; subtract null
	set _RemAllergies = _RemAllergies+RptSD->m_drawLength
else
	set _RemAllergies = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemAllergies
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.813
set RptSD->m_width = 3.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemBloodProduct = _RemBloodProduct
if (_RemBloodProduct > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemBloodProduct,size(__BLOODPRODUCT)-_RemBloodProduct+1,
__BLOODPRODUCT)))
set drawHeight_BloodProduct = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemBloodProduct = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemBloodProduct,size(__BLOODPRODUCT)-_RemBloodProduct+1,__BLOODPRODUCT))))
; subtract null
	set _RemBloodProduct = _RemBloodProduct+RptSD->m_drawLength
else
	set _RemBloodProduct = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemBloodProduct
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 3.688
set RptSD->m_height = drawHeight_Allergies
if (nCalc = RPT_RENDER AND _HoldRemAllergies > 0)
; DRAW TEXT --- Allergies
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemAllergies,size(__ALLERGIES)-_HoldRemAllergies+1,
__ALLERGIES)))
else
	set _RemAllergies = _HoldRemAllergies
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.813
set RptSD->m_width = 3.688
set RptSD->m_height = drawHeight_BloodProduct
if (nCalc = RPT_RENDER AND _HoldRemBloodProduct > 0)
; DRAW TEXT --- BloodProduct
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemBloodProduct,size(__BLOODPRODUCT)-
_HoldRemBloodProduct+1,__BLOODPRODUCT)))
else
	set _RemBloodProduct = _HoldRemBloodProduct
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine AllergyBloodABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine CodeStatAdvDir(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(CodeStatAdvDirABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine CodeStatAdvDir(nCalc)
 
subroutine CodeStatAdvDirABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(2.340000), private
declare __CODESTATUS = vc with NoConstant(build2(data->code_status,char(0))),protect
declare __ADVDIRTYPE = vc with NoConstant(build2(data->adv_dir_type,char(0))),protect
declare __ADVDIRDATE = vc with NoConstant(build2(data->adv_dir_date,char(0))),protect
declare __ADVDIR = vc with NoConstant(build2(data->adv_dir,char(0))),protect
declare __POAINACTDATE = vc with NoConstant(build2(data->inact_poa_date,char(0))),protect
declare __POAACTDATE = vc with NoConstant(build2(data->act_poa_date,char(0))),protect
declare __ACTPOA = vc with NoConstant(build2(data->activation_poa,char(0))),protect
declare __GUARDIANSHIP = vc with NoConstant(build2(data->guardianship,char(0))),protect
declare __POWEROFATTORNEY = vc with NoConstant(build2(data->power_of_attorney,char(0))),protect
declare __GUARDIANSHIP12 = vc with NoConstant(build2(data->guard_date,char(0))),protect
declare __GUARDIANSHIP13 = vc with NoConstant(build2(data->guard_type,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 32
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.438
set RptSD->m_height = 0.250
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- CodeStatus
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CODESTATUS)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Code Status/Advance Directive",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 2.063
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Advance Directive Date",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.125
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Advance Directive",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.875
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Code Status",char(0)))
set RptSD->m_y = OffsetY + 1.938
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Guardianship",char(0)))
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.438
set RptSD->m_height = 0.396
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Health Care Power of Attorney Name",char(0)))
set RptSD->m_y = OffsetY + 0.875
set RptSD->m_x = OffsetX + 4.375
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Advance Directive Type",char(0)))
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + 5.625
set RptSD->m_width = 1.438
set RptSD->m_height = 0.396
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Power of Attorney Inactivation Date",char(0)))
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + 4.188
set RptSD->m_width = 1.438
set RptSD->m_height = 0.396
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Power of Attorney Activation Date",char(0)))
set RptSD->m_y = OffsetY + 1.313
set RptSD->m_x = OffsetX + 2.438
set RptSD->m_width = 1.438
set RptSD->m_height = 0.396
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Activation of  Power of Attorney",char(0)))
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 4.375
set RptSD->m_width = 2.438
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- AdvDirType
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADVDIRTYPE)
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 2.063
set RptSD->m_width = 2.125
set RptSD->m_height = 0.250
; DRAW TEXT --- AdvDirDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADVDIRDATE)
set RptSD->m_y = OffsetY + 1.063
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.750
set RptSD->m_height = 0.250
; DRAW TEXT --- AdvDir
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ADVDIR)
set RptSD->m_y = OffsetY + 1.625
set RptSD->m_x = OffsetX + 5.625
set RptSD->m_width = 1.500
set RptSD->m_height = 0.250
; DRAW TEXT --- POAInactDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __POAINACTDATE)
set RptSD->m_y = OffsetY + 1.625
set RptSD->m_x = OffsetX + 4.188
set RptSD->m_width = 1.250
set RptSD->m_height = 0.250
; DRAW TEXT --- POAActDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __POAACTDATE)
set RptSD->m_y = OffsetY + 1.625
set RptSD->m_x = OffsetX + 2.438
set RptSD->m_width = 1.500
set RptSD->m_height = 0.250
; DRAW TEXT --- ActPOA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ACTPOA)
set RptSD->m_y = OffsetY + 2.125
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.875
set RptSD->m_height = 0.188
; DRAW TEXT --- Guardianship
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __GUARDIANSHIP)
set RptSD->m_y = OffsetY + 1.625
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.313
set RptSD->m_height = 0.250
; DRAW TEXT --- PowerOfAttorney
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __POWEROFATTORNEY)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.938
set RptSD->m_x = OffsetX + 4.125
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Guardianship Date",char(0)))
set RptSD->m_y = OffsetY + 1.938
set RptSD->m_x = OffsetX + 2.063
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Type of Guardianship",char(0)))
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 2.125
set RptSD->m_x = OffsetX + 4.125
set RptSD->m_width = 1.500
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- Guardianship12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __GUARDIANSHIP12)
set RptSD->m_y = OffsetY + 2.125
set RptSD->m_x = OffsetX + 2.063
set RptSD->m_width = 1.875
set RptSD->m_height = 0.188
; DRAW TEXT --- Guardianship13
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __GUARDIANSHIP13)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine CodeStatAdvDirABS(nCalc,OffsetX,OffsetY)
 
subroutine FallCodeVacSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(FallCodeVacSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine FallCodeVacSection(nCalc,maxHeight,bContinue)
 
subroutine FallCodeVacSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.790000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_Vaccines = f8 with noconstant(0.0), private
declare __FALLRISK = vc with NoConstant(build2(if (cnvtint(data->fall_risk) >= 5)
  "At Risk"
else
  "Not at Risk"
endif,char(0))),protect
declare __VACCINES = vc with NoConstant(build2(data->vaccines,char(0))),protect
if (bContinue=0)
	set _RemVaccines = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.406
endif
set RptSD->m_x = OffsetX + 4.031
set RptSD->m_width = 3.406
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemVaccines = _RemVaccines
if (_RemVaccines > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemVaccines,size(__VACCINES)-_RemVaccines+1,__VACCINES))
)
set drawHeight_Vaccines = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemVaccines = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemVaccines,size(__VACCINES)-_RemVaccines+1,__VACCINES)))) ; subtract null
	set _RemVaccines = _RemVaccines+RptSD->m_drawLength
else
	set _RemVaccines = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemVaccines
endif
set RptSD->m_flags = 276
set RptSD->m_borders = bor(bor(RPT_SDTOPBORDER,RPT_SDBOTTOMBORDER),RPT_SDRIGHTBORDER)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.313
set RptSD->m_width = 4.188
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Vaccines",char(0)))
endif
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 28
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.417
set RptSD->m_x = OffsetX + 0.010
set RptSD->m_width = 1.552
set RptSD->m_height = 0.333
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- FallRisk
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FALLRISK)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.406
endif
set RptSD->m_x = OffsetX + 4.031
set RptSD->m_width = 3.406
set RptSD->m_height = drawHeight_Vaccines
if (nCalc = RPT_RENDER AND _HoldRemVaccines > 0)
; DRAW TEXT --- Vaccines
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemVaccines,size(__VACCINES)-_HoldRemVaccines+1,
__VACCINES)))
else
	set _RemVaccines = _HoldRemVaccines
endif
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.313
set RptSD->m_height = 0.396
set _DummyFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Fall Risk",char(0)))
endif
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine FallCodeVacSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine LimbAlertSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LimbAlertSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LimbAlertSection(nCalc)
 
subroutine LimbAlertSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.750000), private
declare __LIMBALERT = vc with NoConstant(build2(data->limb_alert,char(0))),protect
declare __LIMBREASON = vc with NoConstant(build2(data->limb_reason,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = bor(bor(RPT_SDTOPBORDER,RPT_SDBOTTOMBORDER),RPT_SDRIGHTBORDER)
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.313
set RptSD->m_width = 4.188
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Limb Alert Reason",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 24
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.417
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 1.688
set RptSD->m_height = 0.333
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- LimbAlert
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __LIMBALERT)
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.406
set RptSD->m_x = OffsetX + 3.562
set RptSD->m_width = 3.875
set RptSD->m_height = 0.344
; DRAW TEXT --- LimbReason
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __LIMBREASON)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.313
set RptSD->m_height = 0.396
set _DummyFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Limb Alert",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LimbAlertSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine SkinConSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(SkinConSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine SkinConSection(nCalc)
 
subroutine SkinConSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.880000), private
declare __SKININTEGRITY = vc with NoConstant(build2(data->skin_integ,char(0))),protect
declare __SKININTEGRISK = vc with NoConstant(build2(if (cnvtint(data->skin_integ_risk) <= 18)
  "At Risk"
else
  "Not at Risk"
endif,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Skin Condition",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Skin Integrity",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 1.375
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Skin Integrity Risk",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.615
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.313
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- SkinIntegrity
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SKININTEGRITY)
set RptSD->m_y = OffsetY + 0.583
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 1.813
set RptSD->m_height = 0.260
; DRAW TEXT --- SkinIntegRisk
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SKININTEGRISK)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine SkinConSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine SkinAbnormSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(SkinAbnormSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine SkinAbnormSection(nCalc,maxHeight,bContinue)
 
subroutine SkinAbnormSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.570000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_FieldName3 = f8 with noconstant(0.0), private
declare __FIELDNAME2 = vc with NoConstant(build2(concat("Skin Abnormality #",trim(data->skin_abnorm[cntr].skin_num,3)),char(0))),
protect
declare __FIELDNAME3 = vc with NoConstant(build2(data->skin_abnorm[cntr].skin_detail,char(0))),protect
if (bContinue=0)
	set _RemFieldName3 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.281
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.354
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemFieldName3 = _RemFieldName3
if (_RemFieldName3 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName3,size(__FIELDNAME3)-_RemFieldName3+1,
__FIELDNAME3)))
set drawHeight_FieldName3 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName3 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName3,size(__FIELDNAME3)-_RemFieldName3+1,__FIELDNAME3))))
; subtract null
	set _RemFieldName3 = _RemFieldName3+RptSD->m_drawLength
else
	set _RemFieldName3 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName3
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 3.438
set RptSD->m_height = 0.281
set _oldFont = uar_rptSetFont(_hReport, _Times10BU0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME2)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.281
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.354
set RptSD->m_height = drawHeight_FieldName3
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
if (nCalc = RPT_RENDER AND _HoldRemFieldName3 > 0)
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName3,size(__FIELDNAME3)-_HoldRemFieldName3+
1,__FIELDNAME3)))
else
	set _RemFieldName3 = _HoldRemFieldName3
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine SkinAbnormSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine WoundSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(WoundSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine WoundSection(nCalc,maxHeight,bContinue)
 
subroutine WoundSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.540000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_FieldName1 = f8 with noconstant(0.0), private
declare __FIELDNAME0 = vc with NoConstant(build2(concat("Incision and Wound Care #",trim(data->wound_care[cntr].wound_num,3)),char
(0))),protect
declare __FIELDNAME1 = vc with NoConstant(build2(data->wound_care [cntr].wound_detail,char(0))),protect
if (bContinue=0)
	set _RemFieldName1 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.354
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemFieldName1 = _RemFieldName1
if (_RemFieldName1 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName1,size(__FIELDNAME1)-_RemFieldName1+1,
__FIELDNAME1)))
set drawHeight_FieldName1 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName1 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName1,size(__FIELDNAME1)-_RemFieldName1+1,__FIELDNAME1))))
; subtract null
	set _RemFieldName1 = _RemFieldName1+RptSD->m_drawLength
else
	set _RemFieldName1 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName1
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.031
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 3.375
set RptSD->m_height = 0.281
set _oldFont = uar_rptSetFont(_hReport, _Times10BU0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.354
set RptSD->m_height = drawHeight_FieldName1
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
if (nCalc = RPT_RENDER AND _HoldRemFieldName1 > 0)
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName1,size(__FIELDNAME1)-_HoldRemFieldName1+
1,__FIELDNAME1)))
else
	set _RemFieldName1 = _HoldRemFieldName1
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine WoundSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine CentralLineCareSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(CentralLineCareSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine CentralLineCareSection(nCalc)
 
subroutine CentralLineCareSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.400000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Central Line Care",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine CentralLineCareSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine CLDetailSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(CLDetailSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine CLDetailSection(nCalc,maxHeight,bContinue)
 
subroutine CLDetailSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.500000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_FieldName0 = f8 with noconstant(0.0), private
declare __FIELDNAME0 = vc with NoConstant(build2(if (cl_num = 1)
  data->central_line1
elseif (cl_num = 2)
  data->central_line2
elseif (cl_num = 3)
  data->central_line3
elseif (cl_num =4)
  data->central_line4
endif,char(0))),protect
declare __FIELDNAME3 = vc with NoConstant(build2(if (cl_num = 1)
  "Central IV #1"
elseif (cl_num = 2)
  "Central IV #2"
elseif (cl_num = 3)
  "Central IV #3"
elseif (cl_num =4)
  "Central IV #4"
endif,char(0))),protect
if (bContinue=0)
	set _RemFieldName0 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemFieldName0 = _RemFieldName0
if (_RemFieldName0 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,
__FIELDNAME0)))
set drawHeight_FieldName0 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName0 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,__FIELDNAME0))))
; subtract null
	set _RemFieldName0 = _RemFieldName0+RptSD->m_drawLength
else
	set _RemFieldName0 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName0
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = drawHeight_FieldName0
if (nCalc = RPT_RENDER AND _HoldRemFieldName0 > 0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName0,size(__FIELDNAME0)-_HoldRemFieldName0+
1,__FIELDNAME0)))
else
	set _RemFieldName0 = _HoldRemFieldName0
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.031
set RptSD->m_x = OffsetX + 0.010
set RptSD->m_width = 2.115
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10BU0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME3)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine CLDetailSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine ElimAssistance(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(ElimAssistanceABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine ElimAssistance(nCalc)
 
subroutine ElimAssistanceABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(3.540000), private
declare __ELIMASSISTANCE = vc with NoConstant(build2(data->elim_assistance,char(0))),protect
declare __FIELDNAME20 = vc with NoConstant(build2(data->activity_status,char(0))),protect
declare __FIELDNAME21 = vc with NoConstant(build2(data->feeding_assist,char(0))),protect
declare __FIELDNAME22 = vc with NoConstant(build2(data->assistive_device,char(0))),protect
declare __FIELDNAME23 = vc with NoConstant(build2(data->activity_assistance,char(0))),protect
declare __FIELDNAME24 = vc with NoConstant(build2(data->foley_catheter,char(0))),protect
declare __FIELDNAME25 = vc with NoConstant(build2(data->ha_bed_bath,char(0))),protect
declare __FIELDNAME26 = vc with NoConstant(build2(data->ha_shave,char(0))),protect
declare __FIELDNAME27 = vc with NoConstant(build2(data->ha_peri_care,char(0))),protect
declare __FIELDNAME28 = vc with NoConstant(build2(data->ha_oral_care,char(0))),protect
declare __FIELDNAME29 = vc with NoConstant(build2(data->ha_shower,char(0))),protect
declare __FIELDNAME11 = vc with NoConstant(build2(data->diet_order,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Self Care/Functional Performance",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Activity",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 5.000
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Nutrition",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_borders = bor(RPT_SDTOPBORDER,RPT_SDBOTTOMBORDER)
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 2.500
set RptSD->m_height = 0.396
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Hygiene",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.500
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Activity Status",char(0)))
set RptSD->m_y = OffsetY + 2.188
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.125
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Assistive Device",char(0)))
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 2.063
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Feeding Assistance",char(0)))
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 1.750
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Hygiene Assistance",char(0)))
set RptSD->m_y = OffsetY + 1.500
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.750
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Activity Assistance",char(0)))
set RptSD->m_y = OffsetY + 2.813
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 2.438
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Elimination Assistance Every Two Hours",char(0)))
set RptSD->m_y = OffsetY + 2.313
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 1.750
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Foley Catheter Care Done",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 3.063
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 2.438
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- ElimAssistance
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ELIMASSISTANCE)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 0.688
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10U0)
; DRAW LABEL --- FieldName15
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Bed Bath:",char(0)))
set RptSD->m_y = OffsetY + 1.750
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 0.688
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName16
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Shave:",char(0)))
set RptSD->m_y = OffsetY + 1.500
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 0.688
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName17
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Peri Care:",char(0)))
set RptSD->m_y = OffsetY + 1.250
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 0.688
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName18
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Oral Care:",char(0)))
set RptSD->m_y = OffsetY + 2.000
set RptSD->m_x = OffsetX + 2.563
set RptSD->m_width = 0.688
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName19
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Shower:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 0.073
set RptSD->m_width = 2.365
set RptSD->m_height = 0.438
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName20
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME20)
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 2.365
set RptSD->m_height = 0.438
; DRAW TEXT --- FieldName21
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME21)
set RptSD->m_y = OffsetY + 2.375
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.365
set RptSD->m_height = 0.438
; DRAW TEXT --- FieldName22
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME22)
set RptSD->m_y = OffsetY + 1.688
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.365
set RptSD->m_height = 0.438
; DRAW TEXT --- FieldName23
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME23)
set RptSD->m_y = OffsetY + 2.510
set RptSD->m_x = OffsetX + 2.573
set RptSD->m_width = 2.365
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName24
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME24)
set RptSD->m_y = OffsetY + 1.000
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 1.833
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName25
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME25)
set RptSD->m_y = OffsetY + 1.750
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 1.833
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName26
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME26)
set RptSD->m_y = OffsetY + 1.500
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 1.833
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName27
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME27)
set RptSD->m_y = OffsetY + 1.250
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 1.833
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName28
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME28)
set RptSD->m_y = OffsetY + 2.000
set RptSD->m_x = OffsetX + 3.188
set RptSD->m_width = 1.833
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName29
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME29)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.500
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 2.063
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Diet Order",char(0)))
set RptSD->m_y = OffsetY + 1.688
set RptSD->m_x = OffsetX + 5.063
set RptSD->m_width = 2.375
set RptSD->m_height = 1.750
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME11)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine ElimAssistanceABS(nCalc,OffsetX,OffsetY)
 
subroutine MentalStatusSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(MentalStatusSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine MentalStatusSection(nCalc,maxHeight,bContinue)
 
subroutine MentalStatusSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.900000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_Orientation = f8 with noconstant(0.0), private
declare drawHeight_LevelCons = f8 with noconstant(0.0), private
declare __ORIENTATION = vc with NoConstant(build2(data->orientation,char(0))),protect
declare __GAIT = vc with NoConstant(build2(data->gait,char(0))),protect
declare __LEVELCONS = vc with NoConstant(build2(data->level_cons,char(0))),protect
if (bContinue=0)
	set _RemOrientation = 1
	set _RemLevelCons = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.635
endif
set RptSD->m_x = OffsetX + 0.073
set RptSD->m_width = 2.240
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemOrientation = _RemOrientation
if (_RemOrientation > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemOrientation,size(__ORIENTATION)-_RemOrientation+1,
__ORIENTATION)))
set drawHeight_Orientation = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemOrientation = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemOrientation,size(__ORIENTATION)-_RemOrientation+1,__ORIENTATION))))
; subtract null
	set _RemOrientation = _RemOrientation+RptSD->m_drawLength
else
	set _RemOrientation = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemOrientation
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.625
endif
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 2.813
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemLevelCons = _RemLevelCons
if (_RemLevelCons > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemLevelCons,size(__LEVELCONS)-_RemLevelCons+1,
__LEVELCONS)))
set drawHeight_LevelCons = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemLevelCons = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemLevelCons,size(__LEVELCONS)-_RemLevelCons+1,__LEVELCONS))))
; subtract null
	set _RemLevelCons = _RemLevelCons+RptSD->m_drawLength
else
	set _RemLevelCons = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemLevelCons
endif
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Mental Status/Behavior",char(0)))
endif
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Orientation",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Gait",char(0)))
endif
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 1.375
set RptSD->m_height = 0.219
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Level of Consciousness",char(0)))
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.635
endif
set RptSD->m_x = OffsetX + 0.073
set RptSD->m_width = 2.240
set RptSD->m_height = drawHeight_Orientation
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
if (nCalc = RPT_RENDER AND _HoldRemOrientation > 0)
; DRAW TEXT --- Orientation
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemOrientation,size(__ORIENTATION)-
_HoldRemOrientation+1,__ORIENTATION)))
else
	set _RemOrientation = _HoldRemOrientation
endif
set RptSD->m_flags = 12
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 2.240
set RptSD->m_height = 0.260
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- Gait
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __GAIT)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.625
endif
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 2.813
set RptSD->m_height = drawHeight_LevelCons
if (nCalc = RPT_RENDER AND _HoldRemLevelCons > 0)
; DRAW TEXT --- LevelCons
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemLevelCons,size(__LEVELCONS)-_HoldRemLevelCons+1,
__LEVELCONS)))
else
	set _RemLevelCons = _HoldRemLevelCons
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine MentalStatusSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine VitalSignsSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(VitalSignsSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine VitalSignsSection(nCalc)
 
subroutine VitalSignsSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.810000), private
declare __CORETEMP = vc with NoConstant(build2(data->core_temp,char(0))),protect
declare __DIABP = vc with NoConstant(build2(data->dia_bp,char(0))),protect
declare __SYSBP = vc with NoConstant(build2(data->sys_bp,char(0))),protect
declare __ACTWEIGHT = vc with NoConstant(build2(data->act_weight,char(0))),protect
declare __HEIGHT = vc with NoConstant(build2(data->height,char(0))),protect
declare __PERIPHPULSERATE = vc with NoConstant(build2(data->peri_pulse,char(0))),protect
declare __RESPRATE = vc with NoConstant(build2(data->resp_rate,char(0))),protect
declare __BPLOCATION = vc with NoConstant(build2(data->bp_loc,char(0))),protect
declare __O2FLOWRATE = vc with NoConstant(build2(data->o2_flow_rate,char(0))),protect
declare __SP02 = vc with NoConstant(build2(data->spo2,char(0))),protect
declare __OXYGENTHERAPY = vc with NoConstant(build2(data->oxygen_therapy,char(0))),protect
declare __APICAL_HR = vc with NoConstant(build2(data->apical_hr,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Vital Signs",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Core Temprature",char(0)))
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Actual Weight",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Height",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 1.438
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Systolic Blood Pressure",char(0)))
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("BP Location",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 1.500
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Diastolic Blood Pressure",char(0)))
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 1.375
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Peripheral Pulse Rate",char(0)))
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 1.188
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Respiratory Rate",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 1.156
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- CoreTemp
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __CORETEMP)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 1.156
set RptSD->m_height = 0.260
; DRAW TEXT --- DiaBP
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __DIABP)
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 1.156
set RptSD->m_height = 0.260
; DRAW TEXT --- SysBP
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SYSBP)
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 1.156
set RptSD->m_height = 0.198
; DRAW TEXT --- ActWeight
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ACTWEIGHT)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 1.156
set RptSD->m_height = 0.260
; DRAW TEXT --- Height
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __HEIGHT)
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 6.625
set RptSD->m_width = 1.094
set RptSD->m_height = 0.260
; DRAW TEXT --- PeriphPulseRate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PERIPHPULSERATE)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 6.625
set RptSD->m_width = 0.875
set RptSD->m_height = 0.260
; DRAW TEXT --- RespRate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RESPRATE)
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 1.156
set RptSD->m_height = 0.198
; DRAW TEXT --- BPLocation
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __BPLOCATION)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.438
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.063
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Oxygen Therapy",char(0)))
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 2.500
set RptSD->m_width = 1.063
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("O2 Flow Rate",char(0)))
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.750
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("SpO2",char(0)))
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 1.188
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Apical Heart Rate",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 1.156
set RptSD->m_height = 0.198
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- O2FlowRate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __O2FLOWRATE)
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 1.156
set RptSD->m_height = 0.198
; DRAW TEXT --- Sp02
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __SP02)
set RptSD->m_y = OffsetY + 1.438
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 6.375
set RptSD->m_height = 0.375
; DRAW TEXT --- OxygenTherapy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __OXYGENTHERAPY)
set RptSD->m_y = OffsetY + 0.938
set RptSD->m_x = OffsetX + 6.625
set RptSD->m_width = 0.875
set RptSD->m_height = 0.198
; DRAW TEXT --- Apical_hr
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __APICAL_HR)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine VitalSignsSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine PainSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(PainSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine PainSection(nCalc,maxHeight,bContinue)
 
subroutine PainSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.560000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_FieldName0 = f8 with noconstant(0.0), private
declare __FIELDNAME0 = vc with NoConstant(build2(if (p_num = 1)
  data->pain1
elseif (p_num = 2)
  data->pain2
elseif (p_num = 3)
  data->pain3
endif,char(0))),protect
declare __PAINNAME = vc with NoConstant(build2(if (p_num = 1)
  "Pain #1"
elseif (p_num = 2)
  "Pain #2"
elseif (p_num = 3)
  "Pain #3"
endif,char(0))),protect
if (bContinue=0)
	set _RemFieldName0 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.281
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.500
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemFieldName0 = _RemFieldName0
if (_RemFieldName0 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,
__FIELDNAME0)))
set drawHeight_FieldName0 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName0 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,__FIELDNAME0))))
; subtract null
	set _RemFieldName0 = _RemFieldName0+RptSD->m_drawLength
else
	set _RemFieldName0 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName0
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.281
endif
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.500
set RptSD->m_height = drawHeight_FieldName0
if (nCalc = RPT_RENDER AND _HoldRemFieldName0 > 0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName0,size(__FIELDNAME0)-_HoldRemFieldName0+
1,__FIELDNAME0)))
else
	set _RemFieldName0 = _HoldRemFieldName0
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.073
set RptSD->m_width = 2.115
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10BU0)
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- PainName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAINNAME)
endif
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine PainSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine InsuranceInfoSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(InsuranceInfoSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine InsuranceInfoSection(nCalc)
 
subroutine InsuranceInfoSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.970000), private
declare __FIELDNAME0 = vc with NoConstant(build2(data->hp_plan_name,char(0))),protect
declare __FIELDNAME1 = vc with NoConstant(build2(data->hp_fin_class,char(0))),protect
declare __FIELDNAME2 = vc with NoConstant(build2(data->hp_plan_type,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- Insurance
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Insurance Information",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 2.250
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 5.563
set RptSD->m_width = 1.938
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME1)
set RptSD->m_y = OffsetY + 0.688
set RptSD->m_x = OffsetX + 2.875
set RptSD->m_width = 1.750
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME2)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 5.563
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Financial Class",char(0)))
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 2.875
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Plan Type",char(0)))
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.031
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Plan Name",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine InsuranceInfoSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine NotesSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(NotesSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine NotesSection(nCalc)
 
subroutine NotesSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.990000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 276
set RptSD->m_borders = RPT_SDALLBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.396
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set oldBackColor = uar_RptSetBackColor(_hReport,
uar_rptEncodeColor(192,192,192))
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Interdisciplinary Team Notes",char(0)))
set oldBackColor = uar_RptResetBackColor(_hReport)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 0.755,OffsetX+7.417, OffsetY+0.755)
; DRAW LINE --- FieldName2
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.755,OffsetX+7.417, OffsetY+1.755)
; DRAW LINE --- FieldName3
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.505,OffsetX+7.417, OffsetY+1.505)
; DRAW LINE --- FieldName4
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.255,OffsetX+7.417, OffsetY+1.255)
; DRAW LINE --- FieldName5
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 1.005,OffsetX+7.417, OffsetY+1.005)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine NotesSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)
 
subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.000000), private
declare __FIELDNAME3 = vc with NoConstant(build2(concat("Patient Plan of Care, Page  ",cnvtstring(nPAGE)),char(0))),protect
declare __FIELDNAME4 = vc with NoConstant(build2(data->pat_name,char(0))),protect
declare __FIELDNAME0 = vc with NoConstant(build2(data->facility,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.240
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 1.875
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10I0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Mayo Clinic Health System",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.021
set RptSD->m_x = OffsetX + 5.813
set RptSD->m_width = 1.688
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME3)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 5.813
set RptSD->m_width = 1.688
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10I0)
; DRAW TEXT --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME4)
set RptSD->m_y = OffsetY + 0.021
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.813
set RptSD->m_height = 0.229
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_MN_TRANS_CARE_NH_POC"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set RptFont->m_bold = RPT_ON
set _Times12B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 10
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_underline = RPT_ON
set _Times10BU0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_OFF
set _Times10U0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_italic = RPT_ON
set RptFont->m_underline = RPT_OFF
set _Times10I0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

