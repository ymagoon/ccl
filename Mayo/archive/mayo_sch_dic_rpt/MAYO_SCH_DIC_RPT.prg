/***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod Date     Engineer             Comment                            *
 *--- -------- -------------------- -----------------------------------*
 *000 00/00/00 Unknown              Unknown                            *
 *001 08/30/11 Akcia - SE			efficiency changes				   *
 *002 10/18/11 Rob Banks            Modify to use DB2                  *
 ******************** End of Modification Log **************************/
DROP PROGRAM   mayo_sch_dic_rpt : DBA  GO
CREATE PROGRAM  mayo_sch_dic_rpt : DBA
PROMPT "Output to File/Printer/MINE" ="MINE" ,
"FACILITY" = 0 ,
"APPOINTMENT DATE" ="CURDATE" ,
"OUTPUT FORMAT" ="REPORT"
 WITH  OUTDEV , FACILITY , APPOINTMENTDATE , OUTPUTFORMAT

/*** START 002 ***/
;*********************************************************************
;*** If PROD / CERT then run as 2nd oracle instance to improve
;*** efficiency. Will auto Fail-over to Instance 1 if Instance 2 down.
;*********************************************************************
IF(CURDOMAIN = "PROD")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/fullmoon@mhprbrpt'
ELSEIF(CURDOMAIN = "MHPRD")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/fullmoon@mhprbrpt'
ELSEIF(CURDOMAIN="MHCRT")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/java4t2@mhcrtrpt'
ENDIF ;CURDOMAIN
;*** Write instance ccl ran in to the log file
;SET Iname = fillstring(10," ")
;SELECT INTO value("mayo_logfiles:mayo_instance2.log")
;  run_date = format(sysdate,";;q")
; ,Iname = substring(1,7,instance_name)
;FROM v$instance
;DETAIL
;  col  1 run_date
;  col +1 curprog
;  col +1 " *Instance="
;  col +1 Iname
;with nocounter
;   , format
;****************** End of INSTANCE 2 routine ************************
/*** END 002 ***/
 
FREE SET HOLD
 
RECORD  HOLD  (
 1  CNT  =  I4
 1  QUAL [*]
 2  PERSON_ID  =  F8
 2  ENCNTR_ID  =  F8
 2  SCH_EVENT_ID  =  F8
 2  NAME_LAST  =  VC
 2  NAME_FIRST  =  VC
 2  NAME_MIDDLE  =  VC
 2  NAME_FULL  =  VC
 2  PERSON_MRN  =  VC
 2  PERSON_FIN  =  VC
 2  APPT
 3  BEG_DT_TM  =  DQ8
 3  APPT_ID  =  F8
 3  APPT_LOCATION_CD  =  F8
 3  APPT_LOCATION  =  VC
 3  APPT_BLD_CD  =  F8
 3  FULL_NAME_DOC  =  VC
 3  FACILITY_DISPLAY  =  VC )
 
DECLARE  FACILTIY_NAME  =  VC
 
SET  FACILTIY_NAME  =  UAR_GET_CODE_DISPLAY ( $FACILITY )
 
DECLARE  PERSON_MRN  =  F8
 
SET  PERSON_MRN  =  UAR_GET_CODE_BY ("DISPLAY" ,  319 , "MRN" )
 
DECLARE  PERSON_FIN  =  F8
 
SET  PERSON_FIN  =  UAR_GET_CODE_BY ("DISPLAY_KEY" ,  319 , "FINNBR" )
 
DECLARE  DOCTOR_NAME  =  F8
 
SET  DOCTOR_NAME  =  UAR_GET_CODE_BY ("MEANING" ,  333 , "ATTENDDOC" )
 
DECLARE  CLINIC_NOTE  =  F8
 
SET  CLINIC_NOTE  =  UAR_GET_CODE_BY ("DISPLAY" ,  72 , "Clinic Note" )
 
DECLARE  PRINT_PAGE_NBR  =  I2  WITH  PROTECT , NOCONSTANT ( 0 )
 
DECLARE  APPT_DATE  =  VC  WITH  PROTECT , CONSTANT ( $APPOINTMENTDATE )
 
 CALL ECHO ("Retrieving all appointments of a day in a facility with no clinical notes..." )
 
SELECT  INTO "nl:"
FROM ( NURSE_UNIT  N ),
( SCH_APPT  A ),
( ENCOUNTER  E ),
( PERSON  P ),
( ENCNTR_ALIAS  ENA ),
( ENCNTR_ALIAS  ENA1 ),
( ENCNTR_PRSNL_RELTN  EPR ),
( PRSNL  PL )
 PLAN ( N
WHERE (N.LOC_FACILITY_CD= $FACILITY ) AND (N.ACTIVE_IND= 1 ) AND (N.BEG_EFFECTIVE_DT_TM<=
 CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (N.END_EFFECTIVE_DT_TM>= CNVTDATETIME ( CURDATE ,
 CURTIME3 )))
 AND ( A
;001 WHERE (A.APPT_LOCATION_CD=N.LOCATION_CD)
WHERE (A.APPT_LOCATION_CD+0=N.LOCATION_CD)			;001
and a.beg_dt_tm between CNVTDATETIME(CONCAT(APPT_DATE," 00:00:00")) and CNVTDATETIME(CONCAT(APPT_DATE," 23:59:59"))  ;se
;001  AND (A.BEG_DT_TM>= CNVTDATETIME ( CONCAT ( APPT_DATE ," 00:00:00" )))
;001  AND (A.BEG_DT_TM<= CNVTDATETIME ( CONCAT ( APPT_DATE , " 23:59:59" )))
AND (A.ACTIVE_IND= 1 )
AND (A.ROLE_MEANING="PATIENT" )
AND (A.STATE_MEANING="CHECKED IN" )
AND (A.VERSION_DT_TM= CNVTDATETIME ("31-DEC-2100" ))
AND (A.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE,  CURTIME3 ))
AND (A.END_EFFECTIVE_DT_TM>= CNVTDATETIME ( CURDATE ,  CURTIME3 ))
AND  NOT (EXISTS((SELECT "x"
FROM ( CLINICAL_EVENT  CE )
WHERE (ce.person_id = a.person_id) ;001
and (CE.ENCNTR_ID+0 = a.ENCNTR_ID)
AND (CE.EVENT_CD = CLINIC_NOTE )
and (ce.valid_until_dt_tm > sysdate)))  ))
 AND ( E
WHERE (E.ENCNTR_ID=(A.ENCNTR_ID )))
 AND ( P
WHERE (P.PERSON_ID=(A.PERSON_ID )))
 AND ( ENA
WHERE (ENA.ENCNTR_ID=E.ENCNTR_ID) AND (ENA.ENCNTR_ALIAS_TYPE_CD= PERSON_MRN ) AND (ENA.ACTIVE_IND=
 1 ) AND (ENA.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (
ENA.END_EFFECTIVE_DT_TM>= CNVTDATETIME ( CURDATE ,  CURTIME3 )))
 AND ( ENA1
WHERE (ENA1.ENCNTR_ID=E.ENCNTR_ID) AND (ENA1.ENCNTR_ALIAS_TYPE_CD= PERSON_FIN ) AND (ENA1.ACTIVE_IND
= 1 ) AND (ENA1.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (
ENA1.END_EFFECTIVE_DT_TM>= CNVTDATETIME ( CURDATE ,  CURTIME3 )))
 AND ( EPR
WHERE (EPR.ENCNTR_ID= OUTERJOIN (E.ENCNTR_ID)) AND (EPR.ENCNTR_PRSNL_R_CD= OUTERJOIN ( DOCTOR_NAME )
) AND (ENA.ACTIVE_IND= OUTERJOIN ( 1 )) AND (ENA.BEG_EFFECTIVE_DT_TM<= OUTERJOIN ( CNVTDATETIME (
 CURDATE ,  CURTIME3 ))) AND (ENA.END_EFFECTIVE_DT_TM>= OUTERJOIN ( CNVTDATETIME ( CURDATE ,
 CURTIME3 ))))
 AND ( PL
WHERE (PL.PERSON_ID= OUTERJOIN (EPR.PRSNL_PERSON_ID)))
 
ORDER BY A.SCH_APPT_ID
 
HEAD A.SCH_APPT_ID
 HOLD -> CNT =( HOLD -> CNT + 1 ),
IF ( ( MOD ( HOLD -> CNT ,  100 )= 1 ) )  STAT = ALTERLIST ( HOLD -> QUAL , ( HOLD -> CNT + 99 ))
ENDIF
, HOLD -> QUAL [ HOLD -> CNT ]-> PERSON_ID =P.PERSON_ID, HOLD -> QUAL [ HOLD -> CNT ]-> ENCNTR_ID =
E.ENCNTR_ID, HOLD -> QUAL [ HOLD -> CNT ]-> SCH_EVENT_ID =A.SCH_EVENT_ID, HOLD -> QUAL [ HOLD ->
 CNT ]-> NAME_LAST =P.NAME_LAST, HOLD -> QUAL [ HOLD -> CNT ]-> NAME_FIRST =P.NAME_FIRST, HOLD ->
 QUAL [ HOLD -> CNT ]-> NAME_MIDDLE =P.NAME_MIDDLE, HOLD -> QUAL [ HOLD -> CNT ]-> NAME_FULL =
P.NAME_FULL_FORMATTED, HOLD -> QUAL [ HOLD -> CNT ]-> PERSON_MRN = SUBSTRING ( 1 ,  20 ,  CNVTALIAS
(ENA.ALIAS,  PERSON_MRN )), HOLD -> QUAL [ HOLD -> CNT ]-> PERSON_FIN = SUBSTRING ( 1 ,  20 ,
 CNVTALIAS (ENA1.ALIAS,  PERSON_FIN )), HOLD -> QUAL [ HOLD -> CNT ]-> APPT -> BEG_DT_TM =
A.BEG_DT_TM, HOLD -> QUAL [ HOLD -> CNT ]-> APPT -> APPT_ID =A.SCH_APPT_ID, HOLD -> QUAL [ HOLD ->
 CNT ]-> APPT -> APPT_LOCATION_CD =A.APPT_LOCATION_CD, HOLD -> QUAL [ HOLD -> CNT ]-> APPT ->
 APPT_LOCATION = UAR_GET_CODE_DISPLAY (A.APPT_LOCATION_CD), HOLD -> QUAL [ HOLD -> CNT ]-> APPT ->
 APPT_BLD_CD =N.LOC_BUILDING_CD, HOLD -> QUAL [ HOLD -> CNT ]-> APPT -> FULL_NAME_DOC =
PL.NAME_FULL_FORMATTED, HOLD -> QUAL [ HOLD -> CNT ]-> APPT -> FACILITY_DISPLAY =
 UAR_GET_CODE_DISPLAY (N.LOC_FACILITY_CD)
 WITH  NOCOUNTER
 
SET  STAT  =  ALTERLIST ( HOLD -> QUAL ,  HOLD -> CNT )
 
 CALL ECHO ("Data Retrived...." )
 
 CALL ECHORECORD ( HOLD )
 
IF ( ( $OUTPUTFORMAT ="REPORT" ) )
 EXECUTE REPORTRTL
%i ccluserdir:mayo_sch_dic_rpt.dvl
 
;DECLARE  _CREATEFONTS ( DUMMY ) =  NULL  WITH  PROTECT
;DECLARE  _CREATEPENS ( DUMMY ) =  NULL  WITH  PROTECT
;DECLARE  LAYOUTQUERY ( DUMMY ) =  NULL  WITH  PROTECT
;DECLARE  PAGEBREAK ( DUMMY ) =  NULL  WITH  PROTECT
;DECLARE  FINALIZEREPORT (( SSENDREPORT = VC )) =  NULL  WITH  PROTECT
;DECLARE  HEADPAGESECTION (( NCALC = I2 )) =  F8  WITH  PROTECT
;DECLARE  HEADPAGESECTIONABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH
; PROTECT
;DECLARE  DETAILSECTION (( NCALC = I2 )) =  F8  WITH  PROTECT
;DECLARE  DETAILSECTIONABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PROTECT
;DECLARE  FOOTPAGESECTION (( NCALC = I2 )) =  F8  WITH  PROTECT
;DECLARE  FOOTPAGESECTIONABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH
; PROTECT
;DECLARE  INITIALIZEREPORT ( DUMMY ) =  NULL  WITH  PROTECT
;DECLARE  _HREPORT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _YOFFSET  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
;DECLARE  _XOFFSET  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
;DECLARE  RPT_RENDER  =  I2  WITH  CONSTANT ( 0 ), PROTECT
;DECLARE  _CRLF  =  VC  WITH  CONSTANT ( CONCAT ( CHAR ( 13 ),  CHAR ( 10 ))), PROTECT
;DECLARE  RPT_CALCHEIGHT  =  I2  WITH  CONSTANT ( 1 ), PROTECT
;DECLARE  _YSHIFT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
;DECLARE  _XSHIFT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
;DECLARE  _SENDTO  =  VC  WITH  NOCONSTANT ("" ), PROTECT
;DECLARE  _RPTERR  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _RPTSTAT  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _OLDFONT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _OLDPEN  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _DUMMYFONT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _DUMMYPEN  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _FDRAWHEIGHT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
;DECLARE  _RPTPAGE  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _OUTPUTTYPE  =  I2  WITH  NOCONSTANT ( RPT_POSTSCRIPT ), PROTECT
;DECLARE  _TIMES100  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _PEN14S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
;SUBROUTINE   LAYOUTQUERY  ( DUMMY  )
;
; CALL INITIALIZEREPORT ( 0 )
;SELECT
; DSEQ =D1.SEQ,
; APPT_FACILITY_DISPLAY = SUBSTRING ( 1 ,  30 ,  CNVTUPPER ( HOLD -> QUAL [D1.SEQ]-> APPT ->
; FACILITY_DISPLAY ))
;FROM ( DUMMYT  D1  WITH  SEQ = VALUE ( SIZE ( HOLD -> QUAL ,  5 )))
; PLAN ( D1 )
;
;ORDER BY  APPT_FACILITY_DISPLAY ,
; DSEQ
;
;HEAD REPORT
; _D0 =D1.SEQ,
; _FENDDETAIL =( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM ),
; _FENDDETAIL =( _FENDDETAIL - FOOTPAGESECTION ( RPT_CALCHEIGHT )),
; FACILITY_PRINT = 0
;HEAD PAGE
;
;IF ( ( CURPAGE > 1 ) )  DUMMY_VAL = PAGEBREAK ( 0 )
;ENDIF
;,
; DUMMY_VAL = HEADPAGESECTION ( RPT_RENDER )
;HEAD  APPT_FACILITY_DISPLAY
;
;IF ( ( FACILITY_PRINT = 1 ) ) BREAK
;ENDIF
;, FACILITY_PRINT = 1
;DETAIL
; _FDRAWHEIGHT = DETAILSECTION ( RPT_CALCHEIGHT ),
;
;IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
;ENDIF
;,
; DUMMY_VAL = DETAILSECTION ( RPT_RENDER )
;FOOT PAGE
; _YHOLD = _YOFFSET ,
; _YOFFSET = _FENDDETAIL ,
; DUMMY_VAL = FOOTPAGESECTION ( RPT_RENDER ),
; _YOFFSET = _YHOLD
; WITH  NOCOUNTER , SEPARATOR =" " , FORMAT
; CALL FINALIZEREPORT ( _SENDTO )
;
;END ;Subroutine
;
;SUBROUTINE   PAGEBREAK  ( DUMMY  )
;
;SET  _RPTPAGE  =  UAR_RPTENDPAGE ( _HREPORT )
;SET  _RPTPAGE  =  UAR_RPTSTARTPAGE ( _HREPORT )
;SET  _YOFFSET  =  RPTREPORT -> M_MARGINTOP
;
;END ;Subroutine
;
;SUBROUTINE   FINALIZEREPORT  ( SSENDREPORT  )
;
;SET  _RPTPAGE  =  UAR_RPTENDPAGE ( _HREPORT )
;SET  _RPTSTAT  =  UAR_RPTENDREPORT ( _HREPORT )
;DECLARE  SFILENAME  =  VC  WITH  NOCONSTANT ( TRIM ( SSENDREPORT )), PRIVATE
;DECLARE  BPRINT  =  I2  WITH  NOCONSTANT ( 0 ), PRIVATE
;IF ( ( TEXTLEN ( SFILENAME )> 0 ) )
;SET  BPRINT  =  CHECKQUEUE ( SFILENAME )
;IF (  BPRINT  )
; EXECUTE CPM_CREATE_FILE_NAME "RPT" ,
;"PS"
;SET  SFILENAME  =  CPM_CFN_INFO -> FILE_NAME_PATH
;ENDIF
;
;ENDIF
;
;SET  _RPTSTAT  =  UAR_RPTPRINTTOFILE ( _HREPORT ,  NULLTERM ( SFILENAME ))
;IF (  BPRINT  )
;SET  SPOOL  VALUE ( SFILENAME ) VALUE ( SSENDREPORT ) WITH  DELETED
;ENDIF
;
;DECLARE  _ERRORFOUND  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
;DECLARE  _ERRCNT  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
;SET  _ERRORFOUND  =  UAR_RPTFIRSTERROR ( _HREPORT ,  RPTERROR )
;WHILE ( ( _ERRORFOUND = RPT_ERRORFOUND ) AND ( _ERRCNT < 512 ))
;
;SET  _ERRCNT  = ( _ERRCNT + 1 )
;SET  STAT  =  ALTERLIST ( RPTERRORS -> ERRORS ,  _ERRCNT )
;SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_SEVERITY  =  RPTERROR -> M_SEVERITY
;SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_TEXT  =  RPTERROR -> M_TEXT
;SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_SOURCE  =  RPTERROR -> M_SOURCE
;SET  _ERRORFOUND  =  UAR_RPTNEXTERROR ( _HREPORT ,  RPTERROR )
;
;ENDWHILE
;
;SET  _RPTSTAT  =  UAR_RPTDESTROYREPORT ( _HREPORT )
;
;END ;Subroutine
;
;SUBROUTINE   HEADPAGESECTION  ( NCALC  )
;
;DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
;SET  A1  =  HEADPAGESECTIONABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
;
;
;END ;Subroutine
;
;SUBROUTINE   HEADPAGESECTIONABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
;
;DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 1.500000 ), PRIVATE
;IF ( ( NCALC = RPT_RENDER ) )
;SET  RPTSD -> M_FLAGS  =  20
;SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDINGWIDTH  =  0.000
;SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
;SET  RPTSD -> M_ROTATIONANGLE  =  0
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.500 )
;SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
;SET  RPTSD -> M_WIDTH  =  7.500
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 (
;"Appointment Without Dictation/Transcription" ,  CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.250 )
;SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
;SET  RPTSD -> M_WIDTH  =  7.500
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 (
;"Clinic Dictation Compliance Report" ,  CHAR ( 0 )))
;SET  RPTSD -> M_FLAGS  =  16
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
;SET  RPTSD -> M_X  = ( OFFSETX + 1.250 )
;SET  RPTSD -> M_WIDTH  =  5.125
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ( FACILTIY_NAME ,  CHAR ( 0 ))
;)
;SET  RPTSD -> M_FLAGS  =  4
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.813 )
;SET  RPTSD -> M_X  = ( OFFSETX + 2.688 )
;SET  RPTSD -> M_WIDTH  =  1.510
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("Date of Appointment :" ,
; CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 1.198 )
;SET  RPTSD -> M_X  = ( OFFSETX + 0.875 )
;SET  RPTSD -> M_WIDTH  =  0.854
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("Patient Name" ,  CHAR ( 0 ))
;)
;SET  RPTSD -> M_Y  = ( OFFSETY + 1.188 )
;SET  RPTSD -> M_X  = ( OFFSETX + 3.063 )
;SET  RPTSD -> M_WIDTH  =  0.521
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("MRN" ,  CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 1.188 )
;SET  RPTSD -> M_X  = ( OFFSETX + 4.250 )
;SET  RPTSD -> M_WIDTH  =  0.521
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("FIN" ,  CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 1.188 )
;SET  RPTSD -> M_X  = ( OFFSETX + 5.500 )
;SET  RPTSD -> M_WIDTH  =  1.063
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("Provider Name" ,  CHAR ( 0 )
;))
;SET  RPTSD -> M_FLAGS  =  0
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.813 )
;SET  RPTSD -> M_X  = ( OFFSETX + 3.938 )
;SET  RPTSD -> M_WIDTH  =  0.875
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ( APPT_DATE ,  CHAR ( 0 )))
;SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.125 ), ( OFFSETY + 1.380 ), ( OFFSETX +
; 9.750 ), ( OFFSETY + 1.380 ))
;SET  RPTSD -> M_FLAGS  =  4
;SET  RPTSD -> M_Y  = ( OFFSETY + 1.188 )
;SET  RPTSD -> M_X  = ( OFFSETX + 7.625 )
;SET  RPTSD -> M_WIDTH  =  1.760
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("Appointment Location" ,
; CHAR ( 0 )))
;SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
;SET  _YOFFSET  = ( OFFSETY + SECTIONHEIGHT )
;ENDIF
; RETURN ( SECTIONHEIGHT )
;
;
;END ;Subroutine
;
;SUBROUTINE   DETAILSECTION  ( NCALC  )
;
;DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
;SET  A1  =  DETAILSECTIONABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
;
;
;END ;Subroutine
;
;SUBROUTINE   DETAILSECTIONABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
;
;DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.250000 ), PRIVATE
;IF ( ( NCALC = RPT_RENDER ) )
;SET  RPTSD -> M_FLAGS  =  32
;SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDINGWIDTH  =  0.000
;SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
;SET  RPTSD -> M_ROTATIONANGLE  =  0
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
;SET  RPTSD -> M_X  = ( OFFSETX + 0.313 )
;SET  RPTSD -> M_WIDTH  =  2.500
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 (
;IF ( ( HOLD -> QUAL [D1.SEQ]-> NAME_LAST != NULL ) )  CONCAT ( HOLD -> QUAL [D1.SEQ]-> NAME_LAST ,
;", " ,  HOLD -> QUAL [D1.SEQ]-> NAME_FIRST )
;ENDIF
;,  CHAR ( 0 )))
;SET  RPTSD -> M_FLAGS  =  16
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
;SET  RPTSD -> M_X  = ( OFFSETX + 2.813 )
;SET  RPTSD -> M_WIDTH  =  0.875
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 (
;IF ( ( HOLD -> QUAL [D1.SEQ]-> PERSON_MRN != NULL ) )  HOLD -> QUAL [D1.SEQ]-> PERSON_MRN
;ENDIF
;,  CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
;SET  RPTSD -> M_X  = ( OFFSETX + 4.000 )
;SET  RPTSD -> M_WIDTH  =  0.688
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 (
;IF ( ( HOLD -> QUAL [D1.SEQ]-> PERSON_FIN != NULL ) )  HOLD -> QUAL [D1.SEQ]-> PERSON_FIN
;ENDIF
;,  CHAR ( 0 )))
;SET  RPTSD -> M_FLAGS  =  32
;SET  RPTSD -> M_Y  = ( OFFSETY + - ( 0.009 ))
;SET  RPTSD -> M_X  = ( OFFSETX + 5.500 )
;SET  RPTSD -> M_WIDTH  =  2.125
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ( HOLD -> QUAL [D1.SEQ]->
; APPT -> FULL_NAME_DOC ,  CHAR ( 0 )))
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
;SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
;SET  RPTSD -> M_WIDTH  =  2.063
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ( HOLD -> QUAL [D1.SEQ]->
; APPT -> APPT_LOCATION ,  CHAR ( 0 )))
;SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
;SET  _YOFFSET  = ( OFFSETY + SECTIONHEIGHT )
;ENDIF
; RETURN ( SECTIONHEIGHT )
;
;
;END ;Subroutine
;
;SUBROUTINE   FOOTPAGESECTION  ( NCALC  )
;
;DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
;SET  A1  =  FOOTPAGESECTIONABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
;
;
;END ;Subroutine
;
;SUBROUTINE   FOOTPAGESECTIONABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
;
;DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.380000 ), PRIVATE
;IF ( ( NCALC = RPT_RENDER ) )
;SET  RPTSD -> M_FLAGS  =  64
;SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
;SET  RPTSD -> M_PADDINGWIDTH  =  0.000
;SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
;SET  RPTSD -> M_ROTATIONANGLE  =  0
;SET  RPTSD -> M_Y  = ( OFFSETY + 0.125 )
;SET  RPTSD -> M_X  = ( OFFSETX + 1.500 )
;SET  RPTSD -> M_WIDTH  =  7.500
;SET  RPTSD -> M_HEIGHT  =  0.260
;SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
;IF ( ( PRINT_PAGE_NBR = 1 ) )
;SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ( CONCAT ("Page " ,
; CNVTSTRING ( CURPAGE )),  CHAR ( 0 )))
;ENDIF
;
;SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
;SET  _YOFFSET  = ( OFFSETY + SECTIONHEIGHT )
;ENDIF
; RETURN ( SECTIONHEIGHT )
;
;
;END ;Subroutine
;
;SUBROUTINE   INITIALIZEREPORT  ( DUMMY  )
;
;SET  RPTREPORT -> M_RECSIZE  =  100
;SET  RPTREPORT -> M_REPORTNAME  = "MAYO_SCH_DIC_RPT"
;SET  RPTREPORT -> M_PAGEWIDTH  =  8.50
;SET  RPTREPORT -> M_PAGEHEIGHT  =  11.00
;SET  RPTREPORT -> M_ORIENTATION  =  RPT_LANDSCAPE
;SET  RPTREPORT -> M_MARGINLEFT  =  0.50
;SET  RPTREPORT -> M_MARGINRIGHT  =  0.50
;SET  RPTREPORT -> M_MARGINTOP  =  0.50
;SET  RPTREPORT -> M_MARGINBOTTOM  =  0.50
;SET  RPTREPORT -> M_HORZPRINTOFFSET  =  _XSHIFT
;SET  RPTREPORT -> M_VERTPRINTOFFSET  =  _YSHIFT
;SET  _YOFFSET  =  RPTREPORT -> M_MARGINTOP
;SET  _XOFFSET  =  RPTREPORT -> M_MARGINLEFT
;SET  _HREPORT  =  UAR_RPTCREATEREPORT ( RPTREPORT ,  _OUTPUTTYPE ,  RPT_INCHES )
;SET  _RPTERR  =  UAR_RPTSETERRORLEVEL ( _HREPORT ,  RPT_ERROR )
;SET  _RPTSTAT  =  UAR_RPTSTARTREPORT ( _HREPORT )
;SET  _RPTPAGE  =  UAR_RPTSTARTPAGE ( _HREPORT )
; CALL _CREATEFONTS ( 0 )
; CALL _CREATEPENS ( 0 )
;
;END ;Subroutine
;
;SUBROUTINE   _CREATEFONTS  ( DUMMY  )
;
;SET  RPTFONT -> M_RECSIZE  =  50
;SET  RPTFONT -> M_FONTNAME  =  RPT_TIMES
;SET  RPTFONT -> M_POINTSIZE  =  10
;SET  RPTFONT -> M_BOLD  =  RPT_OFF
;SET  RPTFONT -> M_ITALIC  =  RPT_OFF
;SET  RPTFONT -> M_UNDERLINE  =  RPT_OFF
;SET  RPTFONT -> M_STRIKETHROUGH  =  RPT_OFF
;SET  RPTFONT -> M_RGBCOLOR  =  RPT_BLACK
;SET  _TIMES100  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
;
;END ;Subroutine
;
;SUBROUTINE   _CREATEPENS  ( DUMMY  )
;
;SET  RPTPEN -> M_RECSIZE  =  16
;SET  RPTPEN -> M_PENWIDTH  =  0.014
;SET  RPTPEN -> M_PENSTYLE  =  0
;SET  RPTPEN -> M_RGBCOLOR  =  RPT_BLACK
;SET  _PEN14S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
;
;END ;Subroutine
 
SET  _SENDTO  =  $1
IF ( ( CNVTLOWER ( SUBSTRING ( 1 ,  10 ,  _SENDTO ))="cer_print/" ) AND ( CNVTLOWER ( SUBSTRING ((
 TEXTLEN ( _SENDTO )- 3 ),  4 ,  _SENDTO ))!=".dat" ) )
SET  _SENDTO  =  CONCAT ( _SENDTO , ".dat" )
ENDIF
 
 CALL LayoutQuery(0)
ELSE
SELECT  INTO  $1
 PATIENTNAME = CONCAT ( HOLD -> QUAL [D.SEQ]-> NAME_LAST , ", " ,  HOLD -> QUAL [D.SEQ]->
 NAME_FIRST ),
 MRN = HOLD -> QUAL [D.SEQ]-> PERSON_MRN ,
 FIN = HOLD -> QUAL [D.SEQ]-> PERSON_FIN ,
 PROVIDERNAME = HOLD -> QUAL [D.SEQ]-> APPT -> FULL_NAME_DOC ,
 APPOINTMENTLOCATION = HOLD -> QUAL [D.SEQ]-> APPT -> APPT_LOCATION
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( HOLD -> CNT ))
 PLAN ( D )
 
 WITH  NOCOUNTER , FORMAT , SEPARATOR =" "
ENDIF

/*** START 002 ***/
;*** After report put back to instance 1
IF(CURDOMAIN = "PROD")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/fullmoon@mhprb1'
ELSEIF(CURDOMAIN = "MHPRD")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/fullmoon@mhprb1'
ELSEIF(CURDOMAIN="MHCRT")
  FREE DEFINE oraclesystem
  DEFINE oraclesystem 'v500/java4t2@mhcrt1'
ENDIF ;CURDOMAIN
/*** END 002 ***/
 
 END GO
 
