 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
SELECT
	Dseq = d1.seq
	, APPT_FACILITY_DISPLAY = SUBSTRING(1, 30,cnvtupper( HOLD->qual[D1.SEQ].appt.facility_display))
 
FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(HOLD->qual, 5)))
 
PLAN D1
 
ORDER BY
	APPT_FACILITY_DISPLAY
	, Dseq
 
 
 
Head Report
	_d0 = d1.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageWidth-RptReport->m_marginBottom
_fEndDetail = _fEndDetail-FootPageSection(RPT_CALCHEIGHT)
 
 
/****** YOUR CODE BEGINS HERE ******/
facility_print = 0
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = HeadPageSection(RPT_RENDER)
 
Head APPT_FACILITY_DISPLAY
 
/****** YOUR CODE BEGINS HERE ******/
if (facility_print = 1)
  break
endif
 
facility_print = 1
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
 
Foot Page
_YHold = _YOffset
_YOffset = _fEndDetail
dummy_val = FootPageSection(RPT_RENDER)
_YOffset = _YHold
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)
 
subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.500000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Appointment Without Dictation/Transcription",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Clinic Dictation Compliance Report",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.250
set RptSD->m_width = 5.125
set RptSD->m_height = 0.260
; DRAW TEXT --- FacilityName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(faciltiy_name,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 1.510
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date of Appointment :",char(0)))
set RptSD->m_y = OffsetY + 1.198
set RptSD->m_x = OffsetX + 0.875
set RptSD->m_width = 0.854
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Name",char(0)))
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 3.063
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN",char(0)))
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("FIN",char(0)))
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 5.500
set RptSD->m_width = 1.063
set RptSD->m_height = 0.260
; DRAW LABEL --- ProviderName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Provider Name",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.813
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.875
set RptSD->m_height = 0.260
; DRAW TEXT --- Date
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(appt_date,char(0)))
; DRAW LINE --- FieldName16
set _rptStat = uar_rptLine( _hReport,OffsetX+0.125,OffsetY+ 1.380,OffsetX+9.750, OffsetY+1.380)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 1.188
set RptSD->m_x = OffsetX + 7.625
set RptSD->m_width = 1.760
set RptSD->m_height = 0.260
; DRAW LABEL --- AppointmentLocation
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Appointment Location",char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 32
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.313
set RptSD->m_width = 2.500
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- PatientName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(if(hold->qual [d1.seq].name_last != NULL)
concat(hold->qual [d1.seq].name_last,", ",hold->qual [d1.seq].name_first)
endif,char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.813
set RptSD->m_width = 0.875
set RptSD->m_height = 0.260
; DRAW TEXT --- MRN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(if(hold->qual [d1.seq].person_MRN!= NULL)
hold->qual [d1.seq].person_MRN
endif,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
; DRAW TEXT --- FIN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(if(hold->qual [d1.seq].person_FIN!= NULL)
hold->qual [d1.seq].person_FIN
endif,char(0)))
set RptSD->m_flags = 32
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.500
set RptSD->m_width = 2.125
set RptSD->m_height = 0.260
; DRAW TEXT --- PhysicainName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(hold->qual [d1.seq].appt .full_name_doc,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 7.750
set RptSD->m_width = 2.063
set RptSD->m_height = 0.260
; DRAW TEXT --- ApptLocation
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(hold->qual [d1.seq].appt .appt_location,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)
 
subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 64
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 1.500
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (print_page_nbr =1)
; DRAW TEXT --- PageNumber
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(CONCAT("Page ",cnvtstring(CURPAGE)),char(0)))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_SCH_DIC_RPT"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

