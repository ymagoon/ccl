 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare headersection1(nCalc=i2) = f8 with Protect
declare headersection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection4(nCalc=i2) = f8 with Protect
declare LayoutSection4ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection0(nCalc=i2) = f8 with Protect
declare LayoutSection0ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection1(nCalc=i2) = f8 with Protect
declare LayoutSection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HEADERSECTION(nCalc=i2) = f8 with Protect
declare HEADERSECTIONABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _OutputType = i2 with noConstant(RPT_PDF),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen13S0C0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
SELECT
FROM
	(DUMMYT   D1  WITH SEQ =  SIZE(REPLY->QUAL))
	, (DUMMYT   D2  WITH SEQ =  1)
 
PLAN D1 where maxrec(d2,size(REPLY->Qual[d1.seq].ITEM_QUAL,5))
JOIN D2
 
 
 
Head Report
	_d0 = d1.seq
	_d1 = d2.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
 
 
Head Page
 
/****** YOUR CODE BEGINS HERE ******/
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = headersection1(RPT_RENDER)
for (z = 1 to size(frm2->addr_qual,5))
   dummy_val = LayoutSection4(RPT_RENDER)
endfor
dummy_val = HEADERSECTION(RPT_RENDER)
dummy_val = LayoutSection0(RPT_RENDER)
/*----- YOUR CODE ENDS HERE -----*/
 
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
 
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine headersection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(headersection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine headersection1(nCalc)
 
subroutine headersection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 4.563
set RptSD->m_width = 1.813
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Mayo Clinic Health System",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.021
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.813
set RptSD->m_height = 0.188
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW TEXT --- facility
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(frm2->facility,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine headersection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection4(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection4ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection4(nCalc)
 
subroutine LayoutSection4ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.813
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(substring(1,50,frm2->addr_qual [z].line),char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection4ABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(REPLY->QUAL [D1.SEQ].item_qual [D2.SEQ].HEADER_FLAG < 1))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (D2.SEQ < 3)
	set _penCond = _pen13S0C0
	set _fntCond = _Times10B0
else
	set _penCond = _pen14S0C0
	set _fntCond = _Times100
endif
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.490
set RptSD->m_height = 0.188
set _oldFont = uar_rptSetFont(_hReport, _fntCond)
set _oldPen = uar_rptSetPen(_hReport,_penCond)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(REPLY->QUAL [D1.SEQ].item_qual [D2.SEQ].LINE,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection0(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection0ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection0(nCalc)
 
subroutine LayoutSection0ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.094,OffsetX+7.510, OffsetY+0.094)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection0ABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection1(nCalc)
 
subroutine LayoutSection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.270000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.130,OffsetX+2.063, OffsetY+0.130)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine HEADERSECTION(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HEADERSECTIONABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HEADERSECTION(nCalc)
 
subroutine HEADERSECTIONABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.760000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.885
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Name:",char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 1.104
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date of Birth/Sex:",char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 1.219
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Admit/Service Date:",char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 1.094
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Discharge Date:",char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 4.792
set RptSD->m_width = 0.521
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN:",char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 4.771
set RptSD->m_width = 0.521
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("FIN:",char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 4.771
set RptSD->m_width = 0.792
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Type:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.271
set RptSD->m_width = 5.406
set RptSD->m_height = 0.188
; DRAW TEXT --- Pat_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(frm2->name,char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 1.271
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- b_date
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(concat(format(frm2->birth_dt_tm,"mm/dd/yyyy;;d")," ",trim(frm2->sex))
,char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 1.271
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- admt_date
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(format(frm2->admit_dt_tm ,"mm/dd/yyyy;;d"),char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 1.271
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- Disch_dt
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(format(frm2->disch_dt_tm ,"mm/dd/yyyy;;d"),char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 5.646
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- MRN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(frm2->mrn,char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 5.646
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- FIN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(frm2->fin,char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 5.688
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- Pat_type
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(frm2->encntr_type,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HEADERSECTIONABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_UPLOAD_PF_D_GRP_C2"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_penWidth = 0.014
set _pen13S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

