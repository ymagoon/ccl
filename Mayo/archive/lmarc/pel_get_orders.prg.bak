drop program pel_get_orders go
create program pel_get_orders
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
 
with OUTDEV
 
 
call echo("starting program here .......")
 
 
 
 
 
 
 
 
set lf = char(10)
set cr = char(13)
 
 
declare fin_cd = f8  with public,constant(uar_get_code_by("MEANING",319,"FIN NBR"))
declare mailing_addr_cd = f8  with public,constant(uar_get_code_by("MEANING",212,"MAILING"))
declare bus_ADDR_CD = f8  with public,constant(uar_get_code_by("MEANING",212,"BUSINESS"))
declare bus_phone_cd = f8  with public,constant(uar_get_code_by("MEANING",43,"BUSINESS"))
declare home_phone_cd = f8  with public,constant(uar_get_code_by("MEANING",43,"HOME"))
declare HOME_ADDR_CD = f8  with public,constant(uar_get_code_by("MEANING",212,"HOME"))
declare fax_cd = f8  with public,constant(uar_get_code_by("MEANING",43,"FAX BUS"))
declare action_type_cd = f8 with public,constant(uar_get_code_by("MEANING",6003,"ORDER"))
declare order_status_cd = f8 with public,constant(uar_get_code_by("MEANING",6004,"FUTURE"))
declare ord_comment_cd = f8 with public,constant(uar_get_code_by("MEANING",14,"ORD COMMENT"))
declare SSN_ALIAS_CD = f8 with public,constant(uar_get_code_by("MEANING",4,"SSN"))
declare PERSON_RELTN_TYPE_CD = f8 with public,constant(uar_get_code_by("MEANING",351,"INSURED"))
declare GUARANTOR_CD = f8 with public,constant(uar_get_code_by("MEANING",351,"DEFGUAR"))
set lidx = 0
 
 
record temp1
(1 enc[*]
   2 account_nbr = vc
   2 encntr_id = f8
   2 person_id = f8
		  2 name = vc
		  2 mrn = vc
		  2 fin = vc
			2 cnt = i4
			2 birth_dt_tm = dq8
			2 sex_cd = f8
			2 sex = vc
			2 admit_dt_tm = dq8
			2 disch_dt_tm = dq8
			2 encntr_type_cd = f8
			2 encntr_type = vc
			2 facility_cd = f8
			2 facility = vc
			2 addr_qual[*]
   			3 line = vc
 
  ;**
 
   2  ICNT = I2
 
   2  GUAR_NAME = VC
   2  GUAR_RELT_TO_PAT  =  VC
   2  GUAR_PHONE  =  VC
   2  GUAR_ADDR1  =  VC
   2  GUAR_ADDR2 = VC
   2  GUAR_CSZ  =  VC
   2  dept_name = vc
  ;**
     2 ord[*]
       3 name = c50
       3 dt_tm = vc
       3 order_id = f8
       3 ord_phys_id = f8
       3 ord_phys_name = vc
       3 entered_by_id = f8
       3 entered_by_name = vc
       3 REQ_TIMEFRAME_LABEL = VC
       3 REQ_TIMEFRAME_VALUE = VC
       3 ORD_DETAIL = vc
       3 STATUS = VC
       3 CAT_TYPE = VC
       3 det[*]
       	 4 detail_seq = i4
       	 4 field_id = f8
       	 4 name = vc
       	 4 value = vc
       3 comments = vc
 
)
 
 if (validate (DREC->LINE_CNT,999) = 999)
RECORD DREC
 (1  LINE_CNT  =  I4
  1  DISPLAY_LINE  =  VC
  1  LINE_QUAL [*]
    2  DISP_LINE  =  VC)
 
endif
 
 
DECLARE OE_ENC_CD = F8
DECLARE OE_SPEC_CD = F8
DECLARE OE_WT_CD = F8
DECLARE OE_HGT_CD = F8
DECLARE OE_REQ_TIME_CD = F8
 
SET OE_ENC_CD = 0.0
SET OE_SPEC_CD = 0.0
SET OE_WT_CD = 0.0
SET OE_HGT_CD = 0.0
SET OE_REQ_TIME_CD = 0.0
 
SELECT
FROM ORDER_ENTRY_FIELDS OEF
PLAN OEF
	WHERE OEF.description IN ("Ambulatory EMR Encounter","Specimen Description Micro",
							"Weight - EC","Height - EC","Ambulatory Requested Timeframe")
DETAIL
	IF (OEF.description = "Ambulatory EMR Encounter")
 
		OE_ENC_CD = OEF.oe_field_id
	ELSEIF (OEF.description = "Specimen Description Micro" )
		OE_SPEC_CD = OEF.oe_field_id
	ELSEIF (OEF.description = "Weight - EC")
		OE_WT_CD = OEF.oe_field_id
	ELSEIF (OEF.description = "Height - EC")
		OE_HGT_CD = OEF.oe_field_id
	ELSEIF (OEF.description = "Ambulatory Requested Timeframe")
		OE_REQ_TIME_CD = OEF.oe_field_id
	 ENDIF
WITH NOCOUNTER
 
SELECT into "nl:"
cat_type = uar_get_code_display(o.catalog_type_cd),
;detail_id = build(od1.order_id,od1.action_sequence,od1.detail_sequence),
O.*;,OD.*
;, sort_seq = if(CV.DISPLAY_KEY = "AMBULATORYCOPYTOPROVIDER")
;                 10
;             elseif (od1.oe_field_meaning = "ICD9")
;                 20
;             elseif (OD1.oe_field_id = OE_SPEC_CD)
;                 50
;			 elseif (OD1.oe_field_id = OE_HGT_CD)
;			     25
;			 elseif (OD1.oe_field_id = OE_WT_CD)
;			     30
;			 ELSE
;			 	100
;			endif
 FROM ORDERS  O,
; ORDER_DETAIL OD,
; encntr_alias ea,
; encounter e,
; order_detail od1,
; code_value cv,
 encounter e1,
 person p
; oe_format_fields off
 
 PLAN e1
 	where e1.encntr_id =     6164465.00 ;request->visit[1].encntr_id
 join p
 	where p.person_id = e1.person_id
 join O
; 	WHERE O.person_id =    e1.person_id
    where o.encntr_id = e1.encntr_id
 
 order by cnvtdatetime(o.orig_order_dt_tm) desc ;, o.catalog_type_cd,o.order_id ;, sort_seq
;                   ,od.oe_field_display_value
 head report
 	enc_cnt = 0
 	o_cnt = 0
 
; head e1.encntr_id
 	enc_cnt = enc_cnt + 1
 	stat = alterlist(temp1->enc,enc_cnt)
; 	temp1->enc[enc_cnt].account_nbr = od.oe_field_display_value
 	temp1->enc[enc_cnt].encntr_id = e1.encntr_id
 	temp1->enc[enc_cnt].person_id = e1.person_id
 	   temp1->enc[enc_cnt].name = p.name_full_formatted
   temp1->enc[enc_cnt].admit_dt_tm = e1.reg_dt_tm
   temp1->enc[enc_cnt].disch_dt_tm = e1.disch_dt_tm
   temp1->enc[enc_cnt].birth_dt_tm = p.birth_dt_tm
   temp1->enc[enc_cnt].sex_cd = p.sex_cd
   temp1->enc[enc_cnt].facility_cd = e1.loc_facility_cd
   temp1->enc[enc_cnt].facility = uar_get_code_display(e1.loc_facility_cd)
   temp1->enc[enc_cnt].sex = uar_get_code_display(p.sex_cd)
   temp1->enc[enc_cnt].encntr_type_cd = e1.encntr_type_cd
   temp1->enc[enc_cnt].encntr_type = uar_get_code_display(e1.encntr_type_cd)
 	dept_cnt = 0
 	o_cnt = 0
 
; head o.catalog_type_cd
 	dept_cnt = dept_cnt +1
; 	stat = alterlist(temp1->enc[enc_cnt].dept,dept_cnt)
; 	temp1->enc[enc_cnt].dept_name = substring(1,3,uar_get_code_display(o.catalog_type_cd))
; 	o_cnt = 0
 head o.order_id
 	o_cnt = o_cnt + 1
 	stat = alterlist(temp1->enc[enc_cnt].ord,o_cnt)
 	temp1->enc[enc_cnt].ord[o_cnt].dt_tm = format(o.orig_order_dt_tm, "mm/dd/yyyy;;d")
 	temp1->enc[enc_cnt].ord[o_cnt].name = o.hna_order_mnemonic
 	temp1->enc[enc_cnt].ord[o_cnt].order_id = o.order_id
 	temp1->enc[enc_cnt].ord[o_cnt].ord_detail = o.order_detail_display_line
 	temp1->enc[enc_cnt].ord[o_cnt].status = uar_get_code_display(o.order_status_cd)
 	temp1->enc[enc_cnt].ord[o_cnt].cat_type = uar_get_code_display(o.catalog_type_cd)
	d_cnt = 0
 
 with nocounter
 
 
 
 
 
 
 
for (x1 = 1 to size(temp1->enc,5))
 
 select pa.*
from person_alias pa
plan pa
	where pa.person_id = temp1->enc[x1].person_id
	and pa.active_ind = 1
	and pa.end_effective_dt_tm > sysdate
	and pa.person_alias_type_cd = 10
detail
   temp1->enc[x1].mrn = pa.alias
 with nocounter
 
select into "nl:"
from
     encounter e,
     address a,
     encntr_alias ea
plan e
	where e.encntr_id = temp1->enc[x1].encntr_id
join a
	where a.parent_entity_id = e.loc_facility_cd
	and a.parent_entity_name = "LOCATION"
	and a.active_ind = 1
	and a.end_effective_dt_tm > sysdate
 
join ea
	where ea.encntr_id = e.encntr_id
	and ea.active_ind = 1
	and ea.end_effective_dt_tm > sysdate
	and ea.encntr_alias_type_cd = 1077
head report
   a_cnt = 0
detail
   if (a.street_addr > " ")
       a_cnt = a_cnt + 1
       stat = alterlist(temp1->enc[x1].addr_qual,a_cnt)
       temp1->enc[x1].addr_qual[a_cnt].line = a.street_addr
   endif
   if (a.street_addr2 > " ")
       a_cnt = a_cnt + 1
       stat = alterlist(temp1->enc[x1].addr_qual,a_cnt)
       temp1->enc[x1].addr_qual[a_cnt].line = a.street_addr2
   endif
   if (a.street_addr3 > " ")
       a_cnt = a_cnt + 1
       stat = alterlist(temp1->enc[x1].addr_qual,a_cnt)
       temp1->enc[x1].addr_qual[a_cnt].line = a.street_addr3
   endif
   if (a.street_addr4 > " ")
       a_cnt = a_cnt + 1
       stat = alterlist(temp1->enc[x1].addr_qual,a_cnt)
       temp1->enc[x1].addr_qual[a_cnt].line = a.street_addr4
   endif
 city_state = fillstring(100," ")
      city_state = a.city
   if (a.state > "")
      city_state = concat (trim(city_state), ", ",trim(a.state))
   else
      city_state = concat (trim(city_state), ", ",trim(uar_get_code_display(a.state_cd)))
   endif
      city_state = concat (trim(city_state), " ",trim(a.zipcode))
       a_cnt = a_cnt + 1
       stat = alterlist(temp1->enc[x1].addr_qual,a_cnt)
       temp1->enc[x1].addr_qual[a_cnt].line = trim(city_state)
    temp1->enc[x1].fin =  ea.alias
with nocounter
 
 
;;**************************************
 
;	for (x2 = 1 to size(temp1->enc[x1].dept,5))
		for (x3 = 1 to size(temp1->enc[x1].ord,5))
			; *******  GET ordering physician  *******
			select
			from order_action oa,
			PERSON P
			plan oa
				where oa.order_id = temp1->enc[x1].ord[x3].order_id
				and oa.action_type_cd = action_type_cd
			JOIN P
				WHERE P.person_id = OA.order_provider_id
			DETAIL
				temp1->enc[x1].ord[x3].ord_phys_id = OA.order_provider_id
				temp1->enc[x1].ord[x3].ord_phys_name = P.name_full_formatted
			WITH NOCOUNTER
 
			; *******  GET order Comments  *******
			select
			from order_comment oc,
			long_text lt
			plan oc
				where oc.order_id = temp1->enc[x1].ord[x3].order_id
				and oc.comment_type_cd = ord_comment_cd
			join lt
				where lt.long_text_id = oc.long_text_id
			detail
				temp1->enc[x1].ord[x3].comments = lt.long_text
			with nocounter
 			set temp1->enc[x1].ord[x3].comments = replace(temp1->enc[x1].ord[x3].comments,
 			                                                       lf," ",0)
 
		endfor ;x3
;	endfor ;x2
endfor ;x1
call echo ("at end of file")
call echorecord(temp1)
call echo (build("addr_qual =", size(temp1->enc[1].addr_qual,5)))
 
  set lidx = 0
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
 
Execute reportrtl
 
%i ccluserdir:pel_get_orders.dvl
set _SendTo=$1
 
;;if (cnvtlower(substring(1,10,_SendTo)) = "cer_print/"
;;  and cnvtlower(substring(textlen(_SendTo)-3,4,_SendTo)) != ".dat")
;;  set _SendTo = concat(_SendTo,".dat")
;;endif
;
call LayoutQuery(0)
 
;; select into $outdev
;;    status =  substring(1,25,temp1->enc[1].ord[d.seq].status),
;;    catalog_type = substring(1,25,temp1->enc[1].ord[d.seq].cat_type),
;;    start_date = temp1->enc[1].ord[d.seq].dt_tm,
;;    orderable = substring(1,255,temp1->enc[1].ord[d.seq].name),
;;    order_detail = substring(1,255,temp1->enc[1].ord[d.seq].ord_detail),
;;    provider = substring(1,50,temp1->enc[1].ord[d.seq].ord_phys_name),
;;    order_dt_tm = temp1->enc[1].ord[d.seq].dt_tm
;;    , COMMENTS = substring(1,255,temp1->enc[1].ord[d.seq].comments)
;; from (dummyt d with seq = size(temp1->enc[1].ord,5))
;;
;;
;;
;;
;;with nocounter, SEPARATOR = " ", FORMAT
 
# exit_program
free record temp1
 
 
end
go
