 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare headsection1(nCalc=i2) = f8 with Protect
declare headsection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare headSection2(nCalc=i2) = f8 with Protect
declare headSection2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare PatInfoSection(nCalc=i2) = f8 with Protect
declare PatInfoSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare ItemheadSection(nCalc=i2) = f8 with Protect
declare ItemheadSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OrderDetailSection0(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare OrderDetailSection0ABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CommentSection1(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare CommentSection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _OutputType = i2 with noConstant(RPT_PDF),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContOrderDetailSection0 = i2 with NoConstant(0),protect
declare _Remorder_detail = i2 with NoConstant(1),protect
declare _bContCommentSection1 = i2 with NoConstant(0),protect
declare _Remcomment = i2 with NoConstant(1),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
SELECT
FROM
	(DUMMYT   D1  WITH seq =  size(temp1->enc[1].ord, 5))
 
 
 
Head Report
	_d0 = d1.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
 
 
Head Page
 
/****** YOUR CODE BEGINS HERE ******/
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = headsection1(RPT_RENDER)
 
for (z= 1 to size(temp1->enc[1].addr_qual,5))
   dummy_val = headSection2(RPT_RENDER)
endfor
dummy_val = PatInfoSection(RPT_RENDER)
dummy_val = ItemheadSection(RPT_RENDER)
/*----- YOUR CODE ENDS HERE -----*/
 
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
 
; keep together
if (_fEndDetail > _YOffset+_fDrawHeight)
	_bHoldContinue = 0
	_fDrawHeight = _fDrawHeight+OrderDetailSection0(RPT_CALCHEIGHT,_fEndDetail-_YOffset-_fDrawHeight,_bHoldContinue)
	if (_bHoldContinue=1) ; force a break to happen
		_fDrawHeight = _fEndDetail + 1
	endif
endif
 
 
; keep together
if (_fEndDetail > _YOffset+_fDrawHeight)
	_bHoldContinue = 0
	_fDrawHeight = _fDrawHeight+CommentSection1(RPT_CALCHEIGHT,_fEndDetail-_YOffset-_fDrawHeight,_bHoldContinue)
	if (_bHoldContinue=1) ; force a break to happen
		_fDrawHeight = _fEndDetail + 1
	endif
endif
 
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
_bContOrderDetailSection0 = 0
; begin grow loop
bFirstTime = 1
while (_bContOrderDetailSection0=1 OR bFirstTime=1)
 
; calculate section height
_bHoldContinue = _bContOrderDetailSection0
_fDrawHeight = OrderDetailSection0(RPT_CALCHEIGHT,_fEndDetail-_YOffset,_bHoldContinue)
 
 
; keep together
if (_fEndDetail > _YOffset+_fDrawHeight)
	_bHoldContinue = 0
	_fDrawHeight = _fDrawHeight+CommentSection1(RPT_CALCHEIGHT,_fEndDetail-_YOffset-_fDrawHeight,_bHoldContinue)
	if (_bHoldContinue=1) ; force a break to happen
		_fDrawHeight = _fEndDetail + 1
	endif
endif
 
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
; keep section if doesn't fit (one time only)
elseif (_bHoldContinue=1 AND _bContOrderDetailSection0 = 0)
	break
endif
 
dummy_val = OrderDetailSection0(RPT_RENDER,_fEndDetail-_YOffset,_bContOrderDetailSection0)
bFirstTime = 0
endwhile
_bContCommentSection1 = 0
; begin grow loop
bFirstTime = 1
while (_bContCommentSection1=1 OR bFirstTime=1)
 
; calculate section height
_bHoldContinue = _bContCommentSection1
_fDrawHeight = CommentSection1(RPT_CALCHEIGHT,_fEndDetail-_YOffset,_bHoldContinue)
 
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
; keep section if doesn't fit (one time only)
elseif (_bHoldContinue=1 AND _bContCommentSection1 = 0)
	break
endif
 
dummy_val = CommentSection1(RPT_RENDER,_fEndDetail-_YOffset,_bContCommentSection1)
bFirstTime = 0
endwhile
 
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine headsection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(headsection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine headsection1(nCalc)
 
subroutine headsection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 2.177
set RptSD->m_height = 0.188
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- facility
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].facility,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 3.052
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Mayo Clinic Health System",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine headsection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine headSection2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(headSection2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine headSection2(nCalc)
 
subroutine headSection2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 2.063
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].addr_qual [z].line,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine headSection2ABS(nCalc,OffsetX,OffsetY)
 
subroutine PatInfoSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PatInfoSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PatInfoSection(nCalc)
 
subroutine PatInfoSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.760000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 0.885
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Name:",char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 1.104
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Date of Birth/Sex:",char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 1.219
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Admit/Service Date:",char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 0.042
set RptSD->m_width = 1.094
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Discharge Date:",char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 4.823
set RptSD->m_width = 0.521
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN:",char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 4.792
set RptSD->m_width = 0.521
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("FIN:",char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 4.792
set RptSD->m_width = 0.792
set RptSD->m_height = 0.188
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Type:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.292
set RptSD->m_width = 5.406
set RptSD->m_height = 0.188
; DRAW TEXT --- Pat_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].name,char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 1.292
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- b_date
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(concat(format(temp1->enc [1].birth_dt_tm,"mm/dd/yyyy;;d")," ",trim(
temp1->enc [1].sex)),char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 1.292
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- admt_date
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(format(temp1->enc [1].admit_dt_tm ,"mm/dd/yyyy;;d"),char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 1.292
set RptSD->m_width = 3.156
set RptSD->m_height = 0.188
; DRAW TEXT --- Disch_dt
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(format(temp1->enc [1].disch_dt_tm ,"mm/dd/yyyy;;d"),char(0)))
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 5.667
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- MRN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].mrn,char(0)))
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 5.667
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- FIN
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].fin,char(0)))
set RptSD->m_y = OffsetY + 0.573
set RptSD->m_x = OffsetX + 5.667
set RptSD->m_width = 1.792
set RptSD->m_height = 0.188
; DRAW TEXT --- Pat_type
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].encntr_type,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PatInfoSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine ItemheadSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(ItemheadSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine ItemheadSection(nCalc)
 
subroutine ItemheadSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.380000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 1.042
set RptSD->m_height = 0.219
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Order status",char(0)))
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 1.198
set RptSD->m_width = 1.302
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Catalog type",char(0)))
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 2.594
set RptSD->m_width = 0.750
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Start Date",char(0)))
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 3.448
set RptSD->m_width = 1.063
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Orderable",char(0)))
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 4.490
set RptSD->m_width = 0.938
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Provider",char(0)))
set RptSD->m_y = OffsetY + 0.094
set RptSD->m_x = OffsetX + 6.125
set RptSD->m_width = 1.063
set RptSD->m_height = 0.219
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Order date",char(0)))
; DRAW LINE --- FieldName6
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.323,OffsetX+7.490, OffsetY+0.323)
; DRAW LINE --- FieldName7
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.052,OffsetX+7.490, OffsetY+0.052)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine ItemheadSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.021
set RptSD->m_width = 1.042
set RptSD->m_height = 0.240
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Order_status
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].STATUS,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.219
set RptSD->m_width = 1.271
set RptSD->m_height = 0.260
; DRAW TEXT --- Cat_type
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].CAT_TYPE,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 0.844
set RptSD->m_height = 0.260
; DRAW TEXT --- Start_dt_tm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].dt_tm,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.438
set RptSD->m_width = 1.063
set RptSD->m_height = 0.260
; DRAW TEXT --- orderable
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].name,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 1.563
set RptSD->m_height = 0.260
; DRAW TEXT --- provider
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].ord_phys_name,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.125
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
; DRAW TEXT --- order_dt_tm
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(temp1->enc [1].ord [d1.seq].dt_tm,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine OrderDetailSection0(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(OrderDetailSection0ABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine OrderDetailSection0(nCalc,maxHeight,bContinue)
 
subroutine OrderDetailSection0ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.250000), private
declare growSum = i4 with noconstant(0), private
if (bContinue=0)
	set _Remorder_detail = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.688
set RptSD->m_width = 6.813
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemorder_detail = _Remorder_detail
if (_Remorder_detail > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remorder_detail,size(temp1->enc [1].ord [d1.seq].
ORD_DETAIL)-_Remorder_detail+1,temp1->enc [1].ord [d1.seq].ORD_DETAIL)))
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remorder_detail = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remorder_detail,size(temp1->enc [1].ord [d1.seq].ORD_DETAIL)-
_Remorder_detail+1,temp1->enc [1].ord [d1.seq].ORD_DETAIL)))) ; subtract null
	set _Remorder_detail = _Remorder_detail+RptSD->m_drawLength
else
	set _Remorder_detail = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remorder_detail
endif
set RptSD->m_flags = 4
if (nCalc = RPT_RENDER AND _HoldRemorder_detail > 0)
; DRAW TEXT --- order_detail
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemorder_detail,size(temp1->enc [1].ord [d1.seq].
ORD_DETAIL)-_HoldRemorder_detail+1,temp1->enc [1].ord [d1.seq].ORD_DETAIL)))
else
	set _Remorder_detail = _HoldRemorder_detail
endif
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.188
set RptSD->m_width = 0.438
set RptSD->m_height = 0.260
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Detail:",char(0)))
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine OrderDetailSection0ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine CommentSection1(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(CommentSection1ABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine CommentSection1(nCalc,maxHeight,bContinue)
 
subroutine CommentSection1ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.250000), private
declare growSum = i4 with noconstant(0), private
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(trim(temp1->enc [1].ord [d1.seq].comments) > ""))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (bContinue=0)
	set _Remcomment = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 1.000
set RptSD->m_width = 6.500
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemcomment = _Remcomment
if (_Remcomment > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remcomment,size(temp1->enc [1].ord [d1.seq].comments)-
_Remcomment+1,temp1->enc [1].ord [d1.seq].comments)))
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remcomment = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remcomment,size(temp1->enc [1].ord [d1.seq].comments)-_Remcomment+1,temp1->
enc [1].ord [d1.seq].comments)))) ; subtract null
	set _Remcomment = _Remcomment+RptSD->m_drawLength
else
	set _Remcomment = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remcomment
endif
set RptSD->m_flags = 4
if (nCalc = RPT_RENDER AND _HoldRemcomment > 0)
; DRAW TEXT --- comment
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemcomment,size(temp1->enc [1].ord [d1.seq].comments
)-_HoldRemcomment+1,temp1->enc [1].ord [d1.seq].comments)))
else
	set _Remcomment = _HoldRemcomment
endif
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.188
set RptSD->m_width = 0.719
set RptSD->m_height = 0.260
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Comment:",char(0)))
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine CommentSection1ABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "PEL_GET_ORDERS"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

