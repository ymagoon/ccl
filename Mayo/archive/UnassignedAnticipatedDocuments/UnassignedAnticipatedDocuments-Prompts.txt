drop program UnassignedAnticipatedDocuments go
create program UnassignedAnticipatedDocuments
 
;Use this if your site populates ARRIVE_DT_TM on the encounter table
;PLAN E WHERE E.ARRIVE_DT_TM > CNVTDATETIME(CURDATE - ENCOUNTER_LOOK_BACK_IN_DAYS, curtime3)
;Use this if your site populates REG_DT_TM on the encounter table
;PLAN E WHERE E.REG_DT_TM > CNVTDATETIME(CURDATE - ENCOUNTER_LOOK_BACK_IN_DAYS, curtime3)
 
prompt
	"Output to File/Printer/MINE" = "MINE"
	, "+/- Days Dynamic Doc was created" = "2"
	, "Days to look back for active encounters" = "30"
 
with OUTDEV, MTCHRNG, LOOKBACK
 
declare ANTICIPATED_CD = f8 with noconstant(UAR_GET_CODE_BY("MEANING", 8,"ANTICIPATED"))
declare DYNDOC_CD = f8 with noconstant(UAR_GET_CODE_BY("MEANING", 29520, "DYNDOC"))
declare MRN_CD = f8 with noconstant(UAR_GET_CODE_BY("MEANING", 319, "MRN"))
declare FIN_NBR_CD = f8 with noconstant(UAR_GET_CODE_BY("MEANING", 319, "FIN NBR"))
declare MDOC_CD = f8 with noconstant(UAR_GET_CODE_BY("MEANING",53,"MDOC"))
; Script will look active encounters in the last ENCOUNTER_LOOK_BACK_IN_DAYS days to
; limit the search. Update according to your specific flows.
declare ENCOUNTER_LOOK_BACK_IN_DAYS = i4 with constant(cnvtint($LOOKBACK)) ;
; Script will look for Dyn Docs created in +/-MATCH_RANGE_IN_DAYS to match the
; outstanding anticipated notes. Expand/Limit for your specific flows.
declare MATCH_RANGE_IN_DAYS = i4 with constant(cnvtint($MTCHRNG))
 
SELECT INTO $OUTDEV
	PATIENT = P.NAME_FULL_FORMATTED
	, MRN = EA_MRN.ALIAS
	, FIN = EA_FIN.ALIAS
	, NOTE_TITLE = CE_NOTE.EVENT_TITLE_TEXT
	, NOTE_TYPE = CE_NOTE.EVENT_TAG
	, NOTE_AUTHOR = PR_NOTE.NAME_FULL_FORMATTED
	, ANTICIPATED_AUTHOR = PR_ANT.NAME_FULL_FORMATTED
	, NOTE_DATE_OF_SERVICE = FORMAT(CE_NOTE.EVENT_END_DT_TM, 'MM/DD/YYYY HH:MM;;d')
	, ANTICIPATED_DATE_OF_SERVICE = FORMAT(CE_ANT.EVENT_END_DT_TM, 'MM/DD/YYYY HH:MM;;d')
	, ANTICIPATED_EVENT_ID = CE_ANT.EVENT_ID
	, NOTE_EVENT_ID = CE_NOTE.EVENT_ID
	, PATIENT_ID = P.PERSON_ID
	, NOTE_AUTHOR_ID = PR_NOTE.PERSON_ID
	, ANTICIPATED_AUTHOR_ID = PR_ANT.PERSON_ID
 
FROM
	ENCOUNTER   E
	, CLINICAL_EVENT   CE_ANT
	, CLINICAL_EVENT   CE_NOTE
	, PERSON   P
	, ENCNTR_ALIAS   EA_MRN
	, ENCNTR_ALIAS   EA_FIN
	, PRSNL PR_NOTE
	, PRSNL PR_ANT
 
PLAN E WHERE E.UPDT_DT_TM > CNVTDATETIME(CURDATE - ENCOUNTER_LOOK_BACK_IN_DAYS, curtime3)
	AND E.ENCNTR_ID != 0.0
	AND E.PERSON_ID != 0.0
JOIN CE_ANT WHERE CE_ANT.ENCNTR_ID = E.ENCNTR_ID
	AND CE_ANT.RESULT_STATUS_CD = ANTICIPATED_CD
	AND CE_ANT.EVENT_CLASS_CD = MDOC_CD
	AND CE_ANT.VALID_UNTIL_DT_TM > CNVTDATETIME(CURDATE, curtime3)
JOIN CE_NOTE WHERE CE_NOTE.ENCNTR_ID = CE_ANT.ENCNTR_ID
	AND CE_NOTE.EVENT_CD = CE_ANT.EVENT_CD
	AND CE_NOTE.ENTRY_MODE_CD = DYNDOC_CD
	AND CE_NOTE.EVENT_CLASS_CD = MDOC_CD
	AND CE_NOTE.VALID_UNTIL_DT_TM > CNVTDATETIME(CURDATE, curtime3)
	AND CE_NOTE.EVENT_END_DT_TM <= CE_ANT.EVENT_END_DT_TM + MATCH_RANGE_IN_DAYS
	AND CE_NOTE.EVENT_END_DT_TM >= CE_ANT.EVENT_END_DT_TM - MATCH_RANGE_IN_DAYS
JOIN EA_MRN WHERE EA_MRN.ENCNTR_ALIAS_TYPE_CD = OUTERJOIN(MRN_CD)
	AND EA_MRN.ENCNTR_ID = OUTERJOIN(CE_ANT.ENCNTR_ID)
JOIN EA_FIN WHERE EA_FIN.ENCNTR_ALIAS_TYPE_CD = OUTERJOIN(FIN_NBR_CD)
	AND EA_FIN.ENCNTR_ID = OUTERJOIN(CE_ANT.ENCNTR_ID)
JOIN P WHERE P.PERSON_ID = E.PERSON_ID
JOIN PR_NOTE WHERE PR_NOTE.PERSON_ID = CE_NOTE.PERFORMED_PRSNL_ID
JOIN PR_ANT WHERE PR_ANT.PERSON_ID = CE_ANT.PERFORMED_PRSNL_ID
 
ORDER BY
	E.PERSON_ID
	, CE_ANT.EVENT_ID
 
WITH MAXREC = 500, NOCOUNTER, SEPARATOR=" ", FORMAT
 
end
go
 