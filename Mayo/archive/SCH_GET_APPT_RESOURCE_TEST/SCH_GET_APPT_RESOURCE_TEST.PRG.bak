/*~BB~************************************************************************
      *                                                                      *
      *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
      *                              Technology, Inc.                        *
      *       Revision      (c) 1984-1995 Cerner Corporation                 *
      *                                                                      *
      *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
      *  This material contains the valuable properties and trade secrets of *
      *  Cerner Corporation of Kansas City, Missouri, United States of       *
      *  America (Cerner), embodying substantial creative efforts and        *
      *  confidential information, ideas and expressions, no part of which   *
      *  may be reproduced or transmitted in any form or by any means, or    *
      *  retained in any storage or retrieval system without the express     *
      *  written permission of Cerner.                                       *
      *                                                                      *
      *  Cerner is a registered mark of Cerner Corporation.                  *
      *                                                                      *
  ~BE~***********************************************************************/
 
/*****************************************************************************
 
        Source file name:       sch_get_appt_resource_test.prg
        Object name:            sch_get_appt_resource_test
        Request #:              650324
 
        Product:                DCP
        Product Team:           Scheduling
        HNA Version:            500
        CCL Version:            4.0
 
        Program purpose:        Get info on appt.
 
        Tables read:            sch_appt, sch_event, sch_event_patient,
                                sch_schedule, person
        Tables updated:                None
        Executing from:
 
        Special Notes:
 
******************************************************************************/
 
;~DB~************************************************************************
;    *                      GENERATED MODIFICATION CONTROL LOG              *
;    ************************************************************************
;    *                                                                      *
;    *Mod Date     Engineer             Comment                             *
;    *--- -------- -------------------- ----------------------------------- *
;     001 02/12/96 Qian Rong            Initial Release                     *
;     002 11/11/98 Wu,Lei               Add PERHOMPHONE,PERBUSPHONE         *
;     003 11/24/98 Wu,Lei               Add PERBIRTHDTTM                    *
;     004 01/22/98 Wu.Lei               Add bit mask                        *
;     005 05/24/98 Wu.Lei               Add person_id to take advantage of  *
;                                       the index in sch_appt               *
;     006 06/07/00 Roger Underwood      Add "order by" so dup appts are     *
;                                       not passed back to client           *
;     007 08/08/01 Wu,Lei               (18775) Enable Security             *
;     008 10/10/01 Wu,Lei               (19156) Add "interval"              *
;     009 01/10/01 Wu,Lei               (22753) Support Diagnoses Entered in PowerChart Office *
;     010 05/12/02 Ryan Hamilton        (25108) Return Slot Information     *
;     011 09/03/02 Ryan Hamilton        (28102) Remove ORAHINTS             *
;     012 09/09/02 Ryan Hamilton        (28102) Only Return Patient appointment if viewing your own schedule *
;   30103 02/03/03 Brian Heiting        Add Patient Seen information
;   30870 03/24/03 Chinh Luu            Added UTC phase II                  *
;   39121 12/03/03 Vince Barkman        Patseen Performance Enhancement     *
;   40110 01/29/04 Vince Barkman        Fix CAPEP00116336                   *
;   49578 01/05/05 Jiansheng Chen       Fix CAPEP00149082                   *
;   87486 09/08/06 Brian Heiting        RBAC and Security Server changes CR 1-619843245
;  251273 03/31/10 Lei Wu               Enhancement to add scheduling comments and schedule blocks
;  261924 07/02/10 Michael Ciccotti     Day view dropping missing appointments
;  307380 09/16/11 Jiansheng Chen       Performance correction CR 1-5031568841
;  328036 05/08/12 Vince Barkman        Fix CR 1-5900300123 Incorrect CBO appt bounding
;  334991 08/14/12 Ash More             ESM: Correction to CBO Performance Issue
;  999999 05/31/13 Qian Rong		Performance test
;~DE~************************************************************************
 
;~END~ ******************  END OF ALL MODCONTROL BLOCKS  ********************
 
drop program sch_get_appt_resource_test:dba go
create program sch_get_appt_resource_test:dba
 
;~DB~***************************************************************************
;    *                         GENERATED MODIFICATION CONTROL LOG              *
;    ***************************************************************************
;    *                                                                         *
;    *   Mod Date     Engineer             Comment                             *
;    *------ -------- -------------------- ----------------------------------- *
;      42233   09/16/04 Kim Jones            Adding mod block.  Adding validates
;                                          to decrease conflicts between other
;                                          header files that declare the same
;                                          variables (ex. pm_header_constants) *
;      89521   03/08/06 Brian Heiting        Add last_mod
;~DE~***************************************************************************
;~END~ *********************  END OF ALL MODCONTROL BLOCKS  ********************

if (validate(ACTION_NONE,-1) != 0)
   declare ACTION_NONE = i2 with protect, noconstant(0)
endif
if (validate(ACTION_ADD, -1) != 1)
   declare ACTION_ADD = i2 with protect, noconstant(1)
endif
if (validate(ACTION_CHG,-1) != 2)
   declare ACTION_CHG = i2 with protect, noconstant(2)
endif
if (validate(ACTION_DEL,-1) != 3)
   declare ACTION_DEL = i2 with protect, noconstant(3)
endif
if (validate(ACTION_GET,-1) != 4)
   declare ACTION_GET = i2 with protect, noconstant(4)
endif
if (validate(ACTION_INA,-1) != 5)
   declare ACTION_INA = i2 with protect, noconstant(5)
endif
if (validate(ACTION_ACT,-1) != 6)
   declare ACTION_ACT = i2 with protect, noconstant(6)
endif
if (validate(ACTION_TEMP,-1) != 999)
   declare ACTION_TEMP = i2 with protect, noconstant(999)
endif
if (validate(TRUE,-1) != 1)
   declare TRUE = i2 with protect, noconstant(1)
endif
if (validate(FALSE,-1) != 0)
  declare FALSE = i2 with protect, noconstant(0)
endif
if (validate(GEN_NBR_ERROR,-1) != 3)
   declare GEN_NBR_ERROR = i2 with protect, noconstant(3)
endif
if (validate(INSERT_ERROR,-1) != 4)
   declare INSERT_ERROR = i2 with protect, noconstant(4)
endif
if (validate(UPDATE_ERROR,-1) != 5)
   declare UPDATE_ERROR = i2 with protect, noconstant(5)
endif
if (validate(REPLACE_ERROR,-1) != 6)
   declare REPLACE_ERROR = i2 with protect, noconstant(6)
endif
if (validate(DELETE_ERROR,-1) != 7)
   declare DELETE_ERROR = i2 with protect, noconstant(7)
endif
if (validate(UNDELETE_ERROR,-1) != 8)
   declare UNDELETE_ERROR = i2 with protect, noconstant(8)
endif
if (validate(REMOVE_ERROR,-1) != 9)
   declare REMOVE_ERROR = i2 with protect, noconstant(9)
endif
if (validate(ATTRIBUTE_ERROR,-1) != 10)
   declare ATTRIBUTE_ERROR = i2 with protect, noconstant(10)
endif
if (validate(LOCK_ERROR,-1) != 11)
   declare LOCK_ERROR = i2 with protect, noconstant(11)
endif
if (validate(NONE_FOUND,-1) != 12)
   declare NONE_FOUND = i2 with protect, noconstant(12)
endif
if (validate(SELECT_ERROR,-1) != 13)
   declare SELECT_ERROR = i2 with protect, noconstant(13)
endif
if (validate(UPDATE_CNT_ERROR,-1) != 14)
   declare UPDATE_CNT_ERROR = i2 with protect, noconstant(14)
endif
if (validate(NOT_FOUND,-1) != 15)
   declare NOT_FOUND = i2 with protect, noconstant(15)
endif
if (validate(VERSION_INSERT_ERROR,-1) != 16)
   declare VERSION_INSERT_ERROR = i2 with protect, noconstant(16)
endif
if (validate(INACTIVATE_ERROR,-1) != 17)
   declare INACTIVATE_ERROR = i2 with protect, noconstant(17)
endif
if (validate(ACTIVATE_ERROR,-1) != 18)
   declare ACTIVATE_ERROR = i2 with protect, noconstant(18)
endif
if (validate(VERSION_DELETE_ERROR,-1) != 19)
   declare VERSION_DELETE_ERROR = i2 with protect, noconstant(19)
endif
if (validate(UAR_ERROR,-1) != 20)
   declare UAR_ERROR = i2 with protect, noconstant(20)
endif
if (validate(DUPLICATE_ERROR,-1) != 21)
   declare DUPLICATE_ERROR = i2 with protect, noconstant(21 )                                ;42372
endif
if (validate(CCL_ERROR,-1) != 22)
   declare CCL_ERROR = i2 with protect, noconstant(22)                                       ;42372
endif
if (validate(EXECUTE_ERROR,-1) != 23)
   declare EXECUTE_ERROR = i2 with protect, noconstant(23)                                   ;42372
endif
if (validate(failed,-1) != 0)
   declare failed  = i2 with protect, noconstant(FALSE)
endif
if (validate(table_name,"ZZZ") = "ZZZ")
   declare table_name = vc with protect, noconstant("")
else
   set table_name = fillstring(100," ")
endif
if (validate(call_echo_ind,-1) != 0)
   declare call_echo_ind = i2 with protect, noconstant(FALSE)
endif
if (validate(i_version,-1) != 0)
   declare i_version = i2 with protect, noconstant(0)
endif
if (validate(program_name,"ZZZ") = "ZZZ")
   declare program_name = vc with protect, noconstant(fillstring(30, " "))
endif
if (validate(sch_security_id,-1) != 0)
   declare sch_security_id = f8 with protect, noconstant(0.0)
endif
if (validate(last_mod, "NOMOD") = "NOMOD")
   declare last_mod = c5 with private, noconstant("")                                        ;89521
endif



if(validate(schuar_def, 999)=999)
   call echo("Declaring schuar_def")
   declare schuar_def = i2 with persist
   set schuar_def = 1

   declare uar_sch_check_security(sec_type_cd=f8(ref),
                                  parent1_id=f8(ref),
                                  parent2_id=f8(ref),
                                  parent3_id=f8(ref),
                                  sec_id=f8(ref),
                                  user_id=f8(ref)) = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_check_security", persist

   declare uar_sch_security_insert(user_id=f8(ref),
                                   sec_type_cd=f8(ref),
                                   parent1_id=f8(ref),
                                   parent2_id=f8(ref),
                                   parent3_id=f8(ref),
                                   sec_id=f8(ref)) = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_security_insert", persist

   declare uar_sch_security_perform() = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_security_perform", persist

   declare uar_sch_check_security_ex(user_id=f8(ref),
                                     sec_type_cd=f8(ref),
                                     parent1_id=f8(ref),
                                     parent2_id=f8(ref),
                                     parent3_id=f8(ref),
                                     sec_id=f8(ref)) = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_check_security_ex", persist
 
   ;87486+
   declare uar_sch_check_security_ex2(user_id=f8(ref),
                                     sec_type_cd=f8(ref),
                                     parent1_id=f8(ref),
                                     parent2_id=f8(ref),
                                     parent3_id=f8(ref),
                                     sec_id=f8(ref),
                                     position_cd=f8(ref)) = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_check_security_ex2", persist
 
   declare uar_sch_security_insert_ex2(user_id=f8(ref),
                                   sec_type_cd=f8(ref),
                                   parent1_id=f8(ref),
                                   parent2_id=f8(ref),
                                   parent3_id=f8(ref),
                                   sec_id=f8(ref),
                                   position_cd=f8(ref)) = i4
      with image_axp="shrschuar",image_aix="libshrschuar.a(libshrschuar.o)",uar="uar_sch_security_insert_ex2", persist
   ;87486-
endif   

/*****************************
* get code values from code set and meaning
* (code_set and cdf_meaning passed by value)
* (code_variable passed by reference)
******************************/

declare cdf_meaning        = c12 with public, noconstant(fillstring(12, " "))                          
declare GetCodeValue(code_set = i4, cdf_meaning = c12, code_variable = f8(ref)) = f8                   

subroutine GetCodeValue(code_set, cdf_meaning, code_variable)
   set stat = uar_get_meaning_by_codeset(code_set, cdf_meaning, 1, code_variable)
   if (stat != 0 or code_variable <= 0)
      call echo (build("Invalid select on CODE_SET (",code_set,"),  CDF_MEANING(",cdf_meaning,1,code_variable,")"))
      set FAILED = UAR_ERROR
      go to exit_script                    ;==> the scripts calling this sub need to have a #exit_script section
   endif
end



/************************************************************************
 *                                                                      *
 *  Copyright Notice:  (c) 1983 Laboratory Information Systems &        *
 *                              Technology, Inc.                        *
 *       Revision      (c) 1984-2001 Cerner Corporation                 *
 *                                                                      *
 *  Cerner (R) Proprietary Rights Notice:  All rights reserved.         *
 *  This material contains the valuable properties and trade secrets of *
 *  Cerner Corporation of Kansas City, Missouri, United States of       *
 *  America (Cerner), embodying substantial creative efforts and        *
 *  confidential information, ideas and expressions, no part of which   *
 *  may be reproduced or transmitted in any form or by any means, or    *
 *  retained in any storage or retrieval system without the express     *
 *  written permission of Cerner.                                       *
 *                                                                      *
 *  Cerner is a registered mark of Cerner Corporation.                  *
 *                                                                      *
 ************************************************************************

          Date Written:       03/26/03
          Source file name:   sch_utc_sub.inc
          Object name:
          Request #:

          Product:            CORE V500
          Product Team:       CORE V500
          HNA Version:        V500
          CCL Version:

          Program purpose:    This include file contains utc subroutines.

          Tables read:
          Tables updated:
          Executing from:

          Special Notes:

 ***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod Date     Engineer             Comment                            *
 *--- -------- -------------------- -----------------------------------*
 30870 03/26/03 Chinh Luu          Initial Release
 ***********************************************************************

 ******************  END OF ALL MODCONTROL BLOCKS  ********************/

/**********************************************************************/
/* Declares                                                           */
/**********************************************************************/
 declare s_format_utc_date (date, tz_index, option) = vc

 /*********************************************************************
* Name: s_format_utc_date
* Purpose: format the absolute datetime applying the timezone index
* Inputs:  date -  converted date (dq8)
*          tz_index - time zone index (i4)
* Outputs: Formatted date (vc)
***********************************************************************/
subroutine s_format_utc_date (date, tz_index, option)
  if (curutc)
     if (tz_index > 0)
        return (format(datetimezone(date,tz_index),option))
     else
        return (format(datetimezone(date,curtimezonesys),option))
     endif
  else
     return (format(date,option))
  endif
end


set call_echo_ind = request->call_echo_ind

/*****************************************************************************
* Define request and reply records
*****************************************************************************/
/*
record request
(
  1 call_echo_ind = i2
  1 secured_scheme_ind = f8                                                                                           ;010
  1 secured_scheme_id = f8                                                                                            ;010
  1 load_order_diag_ind = i2                                                                                          ;009
  1 disviewpat_ind = i2                                                                                                      ;012
  1 qual[*]
    2  resource_cd = f8
    2  beg_dt_tm = dq8
    2  end_dt_tm = dq8
    2  person_ind = i2                                                                                                       ;012
    2  resource_ind = i2                                                                                                     ;012
  1 load_block_schedule_ind;       // 251273
)
*/
 
record reply
(
  1 qual_cnt                            = i4
  1 qual[*]
    2 resource_cd                       = f8
    2 person_id                         = f8    ; 005
    2 qual_cnt                          = i4
    2 appointment[*]
      3 sch_appt_id                     = f8
      3 appt_type_cd                    = f8
      3 appt_type_desc                  = vc
      3 beg_dt_tm                       = dq8
      3 end_dt_tm                       = dq8
      3 sch_state_cd                    = f8
      3 sch_state_disp                  = vc
      3 state_meaning                   = vc
      3 sch_event_id                    = f8
      3 schedule_seq                    = i4
      3 schedule_id                     = f8
      3 location_cd                     = f8
      3 appt_reason_free                = vc
      3 location_freetext               = vc
      3 appt_synonym_cd                 = f8
      3 appt_synonym_free               = vc
      3 duration                        = i4
      3 setup_duration                  = i4
      3 cleanup_duration                = i4
      3 appt_scheme_id                  = f8
      3 req_prsnl_id                    = f8
      3 req_prsnl_name                  = vc
      3 primary_resource_cd             = f8
      3 primary_resource_mnem           = vc
      3 slot_type_id                    = f8
      3 slot_mnemonic                   = vc
      3 slot_scheme_id                  = f8
      3 description                     = vc
      3 apply_list_id                   = f8
      3 slot_state_cd                   = f8
      3 slot_state_meaning              = vc
      3 def_slot_id                     = f8
      3 apply_slot_id                   = f8
      3 booking_id                      = f8
      3 contiguous_ind                  = i2
      3 bit_mask                        = i4                                                     ;004
      3 interval                        = i4                                                     ;008
      3 appttype_sec_ind                = i2                                                     ;007
      3 location_sec_ind                = i2                                                     ;007
      3 slottype_sec_ind                = i2                                                                           ;010
      3 order_diagnosis                 = vc                                                                           ;009
      3 qual_cnt                        = i4
      3 patient[*]
        4 person_id                     = f8
        4 name                          = vc
        4 encntr_id                     = f8
        4 parent_id                     = f8
        4 person_hom_phone              = vc                                                     ;002
        4 person_bus_phone              = vc                                                     ;002
        4 birth_dt_tm                   = vc                                                     ;003
      3 def_qual_cnt = i4                                                                                              ;010
      3 def_qual [*]                                                                                                   ;010
        4 appt_def_id = f8                                                                                             ;010
        4 beg_dt_tm = dq8                                                                                              ;010
        4 end_dt_tm = dq8                                                                                              ;010
        4 duration = i4                                                                                                ;010
        4 slot_type_id = f8                                                                                            ;010
        4 sch_flex_id = f8                                                                                             ;010
        4 interval = i4                                                                                                ;010
        4 slot_mnemonic = vc                                                                                           ;010
        4 description = vc                                                                                             ;010
        4 slot_scheme_id = f8                                                                                          ;010
        4 slottype_sec_ind = i2                                                                                        ;010
      3 patseen_dt_tm                   = dq8   ;30103
      3 wait_time                       = vc    ;30103
      3 anesthesia_type                 = vc    ;30103
      3 primary_order                   = vc    ;30103
      3 scheduling_comment         = vc    ;251273
      3 comment_sec_ind             = i2     ;251273
      3 block_schedule_ind            = i2     ;251273
%i cclsource:status_block.inc
)
 
 
free set t_record
record t_record
(
  1 current_dt_tm = dq8
  1 diag_qual_alloc = i4                                                                                               ;009
  1 diag_qual_cnt = i4                                                                                                 ;009
  1 diag_qual [*]                                                                                                      ;009
    2 diagnosis_id = f8                                                                                                ;009
)
declare max_appt_cnt = i4 with public, noconstant(0)                                                                   ;009
declare max_appt_time = i4 with public, noconstant(720)																   ;328036
set t_record->current_dt_tm = cnvtdatetime(curdate,curtime3)
 
/*****************************************************************************
* Initialize variables
*****************************************************************************/
declare t_granted          = i2  with private, noconstant(0)                                            ;007
declare t_perform_security = i2  with private, noconstant(0)                                            ;007
declare t_index            = i4  with private, noconstant(0)                                            ;007
declare view_action_cd     = f8  with public, noconstant(0.0)                                           ;007
declare appttype_type_cd   = f8  with public, noconstant(0.0)                                           ;007
declare location_type_cd   = f8  with public, noconstant(0.0)                                           ;007
declare slottype_type_cd   = f8  with public, noconstant(0.0)                                                          ;010
 
declare secured_appttype_cd   = f8  with public, noconstant(0.0)                                        ;007
declare secured_appttype_disp = vc  with public, noconstant                                             ;007
declare secured_location_cd   = f8  with public, noconstant(0.0)                                        ;007
declare secured_location_disp = vc  with public, noconstant                                             ;007
declare secured_slottype_cd   = f8  with public, noconstant(0.0)                                                       ;010
declare secured_slottype_disp = vc  with public, noconstant                                                            ;010
declare pref_type_cd          = f8  with public, noconstant(0.0)                                                       ;010
 
declare commentTextTypeCd = f8  with public, noconstant(0.0)   ;251273
declare commentSubTextCd = f8  with public, noconstant(0.0)     ;251273
declare apptcomm_type_cd = f8  with public, noconstant(0.0)     ;251273
declare disviewldur_pref_type_cd = f8  with public, noconstant(0.0)                                ;307380
declare system_disviewlongdur = i2  with public, noconstant(0)                                     ;307380 
 
set cdf_meaning = "VIEW"                                                                              ;007
call GetCodeValue(16166, cdf_meaning, view_action_cd)                                                 ;007
 
set cdf_meaning = "APPTTYPE"                                                                          ;007
call GetCodeValue(16165, cdf_meaning, appttype_type_cd)                                               ;007
 
set cdf_meaning = "APPTTYPE"                                                                          ;007
call GetCodeValue(23011, cdf_meaning, secured_appttype_cd)                                            ;007
set secured_appttype_disp = uar_get_code_display(secured_appttype_cd)                                 ;007
 
set cdf_meaning = "LOCATION"                                                                          ;007
call GetCodeValue(16165, cdf_meaning, location_type_cd)                                               ;007
 
set cdf_meaning = "LOCATION"                                                                          ;007
call GetCodeValue(23011, cdf_meaning, secured_location_cd)                                            ;007
set secured_location_disp = uar_get_code_display(secured_location_cd)                                 ;007
 
set cdf_meaning = "SLOTTYPE"                                                                                           ;010
call GetCodeValue(16165, cdf_meaning, slottype_type_cd)                                                                ;010
 
set cdf_meaning = "SLOTTYPE"                                                                                           ;010
call GetCodeValue(23011, cdf_meaning, secured_slottype_cd)                                                             ;010
set secured_slottype_disp = uar_get_code_display(secured_slottype_cd)                                                  ;010
 
set cdf_meaning = "COMMENT"                                                       ;251273
call GetCodeValue(15149, cdf_meaning, commentTextTypeCd)        ;251273
call GetCodeValue(15589, cdf_meaning, commentSubTextCd)         ;251273
 
set cdf_meaning = "APPTCOMM"                                                      ;251273
call GetCodeValue(16165, cdf_meaning, apptcomm_type_cd)          ;251273
 

set cdf_meaning = "DISVIEWLDUR"                                                                                       ;307380
call GetCodeValue(23010, cdf_meaning, disviewldur_pref_type_cd)                                                       ;307380
 
select into "nl:"                                                                                                     ;307380
   a.pref_id                                                                                                          ;307380
from sch_pref a                                                                                                       ;307380
plan a where                                                                                                          ;307380
   a.pref_type_cd = disviewldur_pref_type_cd                                                                          ;307380
    and a.parent_table = "SYSTEM"                                                                                     ;307380
    and a.parent_id = 0                                                                                               ;307380
    and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")                                                     ;307380
detail                                                                                                                ;307380
   system_disviewlongdur = a.pref_value                                                                               ;307380
with nocounter
 
if (system_disviewlongdur > 0)                                                                                        ;328036
   set max_appt_time = system_disviewlongdur * 25                                                                     ;328036
   if (max_appt_time > 720)                                                                                           ;328036
      set max_appt_time = 720                                                                                         ;328036
   endif                                                                                                              ;328036
endif                                                                                                                 ;328036
 
if (request->secured_scheme_ind = 0)                                                                                   ;010
   set cdf_meaning = "DEFSECSCHEME"                                                                                    ;010
   call GetCodeValue(23010, cdf_meaning, pref_type_cd)                                                                 ;010
                                                                                                                       ;010
   select into "nl:"                                                                                                   ;010
      a.pref_id                                                                                                        ;010
   from sch_pref a                                                                                                     ;010
   plan a where                                                                                                        ;010
     a.pref_type_cd = pref_type_cd                                                                                     ;010
      and a.parent_table = "SYSTEM"                                                                                    ;010
      and a.parent_id = 0                                                                                              ;010
      and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")                                                    ;010
   detail                                                                                                              ;010
      request->secured_scheme_id = a.pref_value                                                                        ;010
   with nocounter                                                                                                      ;010
   if (curqual = 0)                                                                                                    ;010
      set request->secured_scheme_id = 0.0                                                                             ;010
   endif                                                                                                               ;010
endif                                                                                                                  ;010
 
set reply->status_data->status = "F"
set reply->qual_cnt = size(request->qual, 5)
set stat = alterlist(reply->qual, reply->qual_cnt)
 
/*****************************************************************************
* Select 2nd level of reply so the reply will be ordered by resource
*****************************************************************************/
for (i = 1 to reply->qual_cnt)
   set reply->qual[i]->resource_cd = request->qual[i]->resource_cd
   set reply->qual[i]->qual_cnt = 0
endfor
 
/*****************************************************************************
* Get person_id for each resource to advance search by using index in sch_appt  ; 005
*****************************************************************************/
 
select into "nl:"
   d.seq,
   r.person_id
from
   (dummyt d with seq = value(reply->qual_cnt)),
   sch_resource r
plan d
join r where
   r.resource_cd = reply->qual[d.seq]->resource_cd
    and r.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
    and r.active_ind = 1
detail
  reply->qual[d.seq]->person_id = r.person_id
with nocounter
 
/*****************************************************************************
* 251273 Load Blocked Schedule Times for Resources
*****************************************************************************/
if (request->load_block_schedule_ind)
   set table_name = "SCH_DATE_COMMENT"
   select into "nl:"
      d.seq,
      a.date_comment_id
   from
      (dummyt d with seq = value(reply->qual_cnt)),
      sch_date_comment a,
      sch_action b
   plan d
   join a where
      a.parent_id = reply->qual[d.seq]->resource_cd
       and a.parent_table = "SCH_RESOURCE"
       and cnvtdatetime(request->qual[d.seq]->end_dt_tm) > a.beg_dt_tm
       and cnvtdatetime(request->qual[d.seq]->beg_dt_tm) < a.end_dt_tm
       and a.text_type_meaning = "RESBLOCK"
       and a.sub_text_meaning = "RESBLOCK"
       and a.state_meaning = "APPLIED"
   join b where
       b.parent_table = "SCH_DATE_COMMENT"
        and b.parent_id = a.date_comment_id
   detail
      reply->qual[d.seq]->qual_cnt = reply->qual[d.seq]->qual_cnt + 1
      if (mod(reply->qual[d.seq]->qual_cnt, 10) = 1)
         stat = alterlist(reply->qual[d.seq]->appointment, reply->qual[d.seq]->qual_cnt + 9)
      endif
 
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->block_schedule_ind = 1
 
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->beg_dt_tm  = cnvtdatetime(a.beg_dt_tm)
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->end_dt_tm  = cnvtdatetime(a.end_dt_tm)
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->duration
         = abs(datetimediff(cnvtdatetime(a.beg_dt_tm),cnvtdatetime(a.end_dt_tm),4))
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->interval = 5
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->scheduling_comment = a.mnemonic
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_type_desc = "Blocked Schedule"
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_reason_free = uar_get_code_display(b.sch_reason_cd)
   with nocounter
endif
 
/*****************************************************************************
* Select the general information and appointment comments
*****************************************************************************/
 
if (request->disviewpat_ind != 1)                                                                                            ;012
   declare disviewpat_ind = i2 with public, noconstant(0)                                                                    ;012
   declare disviewpat_cd = f8 with public, noconstant(0.0)                                                                   ;012
   declare disviewpat_meaning = c12 with public, noconstant("DISVIEWPAT")                                                    ;012
   call GetCodeValue(23010, disviewpat_meaning, disviewpat_cd)                                                               ;012
                                                                                                                             ;012
   select into "nl:"                                                                                                         ;012
      a.pref_id                                                                                                              ;012
   from sch_pref a                                                                                                           ;012
   plan a where                                                                                                              ;012
     a.pref_type_cd = disviewpat_cd                                                                                          ;012
      and a.parent_table = "SYSTEM"                                                                                          ;012
      and a.parent_id = 0                                                                                                    ;012
      and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")                                                          ;012
   detail                                                                                                                    ;012
     disviewpat_ind = a.pref_value                                                                                           ;012
   with nocounter                                                                                                            ;012
                                                                                                                             ;012
   for (i = 1 to reply->qual_cnt)                                                                                            ;012
      set request->qual[i]->resource_ind = 1                                                                                 ;012
      set request->qual[i]->person_ind = 1 - disviewpat_ind                                                                  ;012
   endfor                                                                                                                    ;012
endif                                                                                                                        ;012
 
declare blockschedule_overlap_ind = i2 with public, noconstant(0)         ;251273
 

;307380 - You may remove these lines for you next change of this script
;307380 set table_name = "SCH_APPT"
;307380 select into "nl:"
;307380    d.seq,
;307380    a.sch_appt_id,
;307380    e.updt_cnt
;39121   ea_exists = decode(ea.seq,1,0)                  ;30103
 
;307380 from sch_appt a,
;307380    sch_appt_def ad,
;307380    sch_event_disp e,
;39121   sch_event_action ea,                            ;30103
;307380    (dummyt d with seq = value(reply->qual_cnt))
;307380 plan d
;307380 join a where
;011    a.person_id = reply->qual[d.seq]->person_id
;011     and a.resource_cd = request->qual[d.seq]->resource_cd
;307380    a.person_id between reply->qual[d.seq]->person_id and reply->qual[d.seq]->person_id              ;011
;307380     and a.resource_cd between request->qual[d.seq]->resource_cd and reply->qual[d.seq]->resource_cd ;011
;307380     and cnvtdatetime(request->qual[d.seq]->end_dt_tm) > a.beg_dt_tm
;307380     and cnvtdatetime(request->qual[d.seq]->beg_dt_tm) < a.end_dt_tm
;307380     and (a.sch_event_id+0 > 0 or a.slot_state_meaning != "REMOVED")
;307380     and ((a.role_meaning = "PATIENT" and request->qual[d.seq]->person_ind = 1)            ;012
;49578   or(a.role_meaning != "PATIENT" and request->qual[d.seq]->resource_ind = 1))                                   ;012
;307380      or ((a.role_meaning = NULL or a.role_meaning != "PATIENT") and request->qual[d.seq]->resource_ind = 1))      ;49578
;307380     and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;307380     and a.active_ind = 1
;307380 join ad where
;307380    ad.apply_def_id = a.apply_def_id
;307380     and cnvtdatetime(t_record->current_dt_tm) >= ad.vis_beg_dt_tm
;307380     and cnvtdatetime(t_record->current_dt_tm) < ad.vis_end_dt_tm
;307380     and ad.def_state_meaning != "REMOVED"
;307380     and ad.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;307380 join e where
;307380    e.sch_event_id = a.sch_event_id
;307380    and (e.schedule_id = a.schedule_id or e.schedule_id = 0)
;307380     and e.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;010 order by d.seq,a.sch_appt_id ; 006
;39121 join ea where  ;30103
;39121   ea.sch_event_id = outerjoin(a.sch_event_id)
;39121   and ea.schedule_id = outerjoin(a.schedule_id)
;39121   and ea.action_meaning = outerjoin("PATSEEN")
;39121   and ea.version_dt_tm = outerjoin(cnvtdatetime("31-DEC-2100 00:00:00.00"))

;307380+ ==> Only change I made here is the change unbound to bound for beg_dt_tm and end_dt_tm when
;        ==> system_disviewlongdur is on
set table_name = "SCH_APPT"
;328036 select if (system_disviewlongdur = 0)
;328036   from sch_appt a,
;328036      sch_appt_def ad,
;328036      sch_event_disp e,
;328036      (dummyt d with seq = value(reply->qual_cnt))
;328036   plan d
;328036   join a where
;328036      a.person_id between reply->qual[d.seq]->person_id and reply->qual[d.seq]->person_id
;328036       and a.resource_cd between request->qual[d.seq]->resource_cd and reply->qual[d.seq]->resource_cd
;328036       and cnvtdatetime(request->qual[d.seq]->end_dt_tm) > a.beg_dt_tm
;328036       and cnvtdatetime(request->qual[d.seq]->beg_dt_tm) < a.end_dt_tm
;328036       and (a.sch_event_id+0 > 0 or a.slot_state_meaning != "REMOVED")
;328036       and ((a.role_meaning = "PATIENT" and request->qual[d.seq]->person_ind = 1)
;328036        or ((a.role_meaning = NULL or a.role_meaning != "PATIENT") and request->qual[d.seq]->resource_ind = 1))
;328036       and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;328036       and a.active_ind = 1
;328036   join ad where
;328036      ad.apply_def_id = a.apply_def_id
;328036       and cnvtdatetime(t_record->current_dt_tm) >= ad.vis_beg_dt_tm
;328036       and cnvtdatetime(t_record->current_dt_tm) < ad.vis_end_dt_tm
;328036       and ad.def_state_meaning != "REMOVED"
;328036       and ad.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;328036   join e where
;328036      e.sch_event_id = a.sch_event_id
;328036       and (e.schedule_id = a.schedule_id or e.schedule_id = 0)
;328036       and e.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;328036else
   select into "nl:"                                                                                          ;328036
      d.seq,                                                                                                  ;328036
      a.sch_appt_id,                                                                                          ;328036
      e.updt_cnt                                                                                              ;328036
   from sch_appt a,
      sch_appt_def ad,
      sch_event_disp e,
      (dummyt d with seq = value(reply->qual_cnt))
   plan d
   join a where
; 999999      a.person_id between reply->qual[d.seq]->person_id and reply->qual[d.seq]->person_id
      a.person_id = reply->qual[d.seq]->person_id								;999999
; 999999       and a.resource_cd between request->qual[d.seq]->resource_cd and reply->qual[d.seq]->resource_cd
	and a.resource_cd = request->qual[d.seq]->resource_cd							;999999
;328036       and a.beg_dt_tm between cnvtdatetime(datetimeadd(request->qual[d.seq]->beg_dt_tm, (-25.0/24.0)))
       and a.beg_dt_tm between cnvtdatetime(datetimeadd(request->qual[d.seq]->beg_dt_tm, (-max_appt_time/24.0))) ;328036
                       and cnvtdatetime(datetimeadd(request->qual[d.seq]->end_dt_tm, (-1.0/1440.0)))
       and a.end_dt_tm between cnvtdatetime(datetimeadd(request->qual[d.seq]->beg_dt_tm, (1.0/1440.0)))
;328036                       and cnvtdatetime(datetimeadd(request->qual[d.seq]->end_dt_tm, (25.0/24.0)))
       and cnvtdatetime(datetimeadd(request->qual[d.seq]->end_dt_tm, (max_appt_time/24.0)))                   ;328036
       and (a.sch_event_id+0 > 0 or a.slot_state_meaning != "REMOVED")
       and ((a.role_meaning = "PATIENT" and request->qual[d.seq]->person_ind = 1)
        or ((a.role_meaning = NULL or a.role_meaning != "PATIENT") and request->qual[d.seq]->resource_ind = 1))       
       and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
       and a.active_ind = 1
   join ad where
      ad.apply_def_id = a.apply_def_id
       and cnvtdatetime(t_record->current_dt_tm) >= ad.vis_beg_dt_tm
       and cnvtdatetime(t_record->current_dt_tm) < ad.vis_end_dt_tm
       and ad.def_state_meaning != "REMOVED"
       and ad.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
   join e where
      e.sch_event_id = a.sch_event_id
       and (e.schedule_id = a.schedule_id or e.schedule_id = 0)
       and e.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
;328036endif
;328036into "nl:"
;328036   d.seq,
;328036   a.sch_appt_id,
;328036   e.updt_cnt
;307380-
order by d.seq, a.sch_appt_id, cnvtdatetime(ad.beg_dt_tm)                                                              ;010
head d.seq
   count2 = 0
head a.sch_appt_id
   ;251273+
   blockschedule_overlap_ind = 0
   if (request->load_block_schedule_ind =1 and a.sch_event_id > 0)
      for (i = 1 to reply->qual[d.seq]->qual_cnt)
         if (reply->qual[d.seq]->appointment[i]->block_schedule_ind = 0) ; no more block schedule for this resource
            i = reply->qual[d.seq]->qual_cnt + 1
         ;261924 endif
         ;261924 if (a.beg_dt_tm < reply->qual[d.seq]->appointment[i]->end_dt_tm
         elseif (a.beg_dt_tm < reply->qual[d.seq]->appointment[i]->end_dt_tm ;261924
            and a.end_dt_tm > reply->qual[d.seq]->appointment[i]->beg_dt_tm)
            blockschedule_overlap_ind = 1
            i = reply->qual[d.seq]->qual_cnt + 1
         endif
      endfor
   endif
   ;251273-
 
   if (blockschedule_overlap_ind = 0) ;251273 appt did not overlap with any block schedule
      reply->qual[d.seq]->qual_cnt = reply->qual[d.seq]->qual_cnt + 1
      if (mod(reply->qual[d.seq]->qual_cnt, 10) = 1)
         stat = alterlist(reply->qual[d.seq]->appointment, reply->qual[d.seq]->qual_cnt + 9)
      endif
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->sch_appt_id = a.sch_appt_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->beg_dt_tm  = a.beg_dt_tm
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->end_dt_tm  = a.end_dt_tm
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->sch_state_cd = a.sch_state_cd
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->state_meaning = a.state_meaning
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->sch_event_id = a.sch_event_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->schedule_seq = a.schedule_seq
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->schedule_id = a.schedule_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_type_cd = 0
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->duration = a.duration
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->setup_duration = a.setup_duration
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->cleanup_duration = a.cleanup_duration
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_scheme_id = a.appt_scheme_id
 
      if (ad.apply_def_id > 0)
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_type_id = ad.slot_type_id
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_mnemonic = ad.slot_mnemonic
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_scheme_id = ad.slot_scheme_id
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->description = ad.description
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->interval = ad.interval ;008
      else
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_type_id = a.slot_type_id
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_mnemonic = a.slot_mnemonic
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_scheme_id = a.slot_scheme_id
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->description = a.description
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->interval = 0 ;008
      endif
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->apply_list_id = a.apply_list_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_state_cd = a.slot_state_cd
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->slot_state_meaning = a.slot_state_meaning
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_slot_id = a.def_slot_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->apply_slot_id = a.apply_slot_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->booking_id = a.booking_id
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->contiguous_ind = a.contiguous_ind
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->bit_mask = a.bit_mask ;004
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt = 0
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt = 0                                     ;010
   ;39121   if (ea_exists = 1 and ea.perform_dt_tm)                                                                           ;30103
   ;39121      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patseen_dt_tm = cnvtdatetime(ea.perform_dt_tm)  ;30103
   ;39121      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->wait_time                                       ;30103
   ;39121         = cnvtstring(datetimediff(ea.perform_dt_tm, a.beg_dt_tm, 4))                                                ;30103
   endif ;251273
head ad.appt_def_id
   if (blockschedule_overlap_ind = 0) ;251273 appt did not overlap with any block schedule
      reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt
         = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt + 1
      t_def = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt
      if (mod(t_def,10) = 1)
         stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual, t_def + 9)
      endif
      if (ad.apply_def_id > 0)
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->appt_def_id = ad.appt_def_id
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->beg_dt_tm = cnvtdatetime(ad.beg_dt_tm),
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->end_dt_tm = cnvtdatetime(ad.end_dt_tm),
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->duration = ad.duration,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_type_id = ad.slot_type_id,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->sch_flex_id = ad.sch_flex_id,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->interval = ad.interval,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_mnemonic = ad.slot_mnemonic,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->description = ad.description,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_scheme_id = ad.slot_scheme_id
      else
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->appt_def_id = 0
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->beg_dt_tm = cnvtdatetime(a.beg_dt_tm),
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->end_dt_tm = cnvtdatetime(a.end_dt_tm),
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->duration = a.duration,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_type_id = a.slot_type_id,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->sch_flex_id = 0,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->interval = 0,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_mnemonic = a.slot_mnemonic,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->description = a.description,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual[t_def]->slot_scheme_id = a.slot_scheme_id
      endif
   endif  ;251273
detail
   if (blockschedule_overlap_ind = 0) ;251273 appt did not overlap with any block schedule)
      if ((e.schedule_id = 0 or e.schedule_id = a.schedule_id)
   ;010     and (e.sch_appt_id = 0 or e.sch_appt_id = a.sch_appt_id))
       and (e.sch_appt_id = 0 or e.sch_appt_id = a.sch_appt_id)                                                          ;010
       and reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt = 1)                              ;010
          case (e.disp_field_id)
            of 1:   ; "SCHLOCATION"
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->location_freetext = e.disp_display
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->location_cd = e.disp_value
            of 2:   ; PAT_PERSON
               t_index = 0
               for (i = 1 to reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
                  if (reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[i]->parent_id = e.parent_id)
                     t_index = i
                  endif
               endfor
               if (t_index = 0)
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                     = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt + 1
                  t_index = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                  if (mod(t_index, 10) = 1)
                     stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient, t_index + 9)
                  endif
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id  = e.disp_value
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = e.disp_display
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->parent_id = e.parent_id
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = 0
               else
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id  = e.disp_value
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = e.disp_display
               endif
            of 3:   ; PAT_ENCNTR
               t_index = 0
               for (i = 1 to reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
                  if (reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[i]->parent_id = e.parent_id)
                     t_index = i
                  endif
               endfor
               if (t_index = 0)
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                     = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt + 1
                  t_index = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                  if (mod(t_index, 10) = 1)
                     stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient, t_index + 9)
                  endif
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id  = 0
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = e.disp_display
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->parent_id = e.parent_id
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = e.disp_value
               else
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = e.disp_value
               endif
            of 5:   ; PRIMARY_RES
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->primary_resource_cd = e.disp_value
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->primary_resource_mnem = e.disp_display
            of 6:   ; APPT_TYPE
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_type_desc = e.disp_display
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_type_cd = e.disp_value
            of 7:   ; APPT_SYN
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_synonym_cd = e.disp_value
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_synonym_free = e.disp_display
            of 8:   ; REQUESTOR
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->req_prsnl_id = e.disp_value
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->req_prsnl_name = e.disp_display
            of 9:   ; APPT_REASON
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->appt_reason_free = e.disp_display
            of 11:  ; PRIMARYORDER - 30103
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->primary_order = e.disp_display  ;30103
 
           of 13:   ; PERHOMPHONE                                                                          ;002
               t_index = 0
               for (i = 1 to reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
                  if (reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[i]->parent_id = e.parent_id)
                     t_index = i
                  endif
               endfor
               if (t_index = 0)
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                     = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt + 1
                  t_index = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                  if (mod(t_index, 10) = 1)
                     stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient, t_index + 9)
                  endif
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id = 0
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_hom_phone = e.disp_display
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_bus_phone = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->birth_dt_tm = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->parent_id = e.parent_id
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = 0
               else
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_hom_phone = e.disp_display
               endif
            of 14:   ; PERBUSPHONE                                                                             ;002
               t_index = 0
               for (i = 1 to reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
                  if (reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[i]->parent_id = e.parent_id)
                     t_index = i
                  endif
               endfor
               if (t_index = 0)
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                     = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt + 1
                  t_index = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                  if (mod(t_index, 10) = 1)
                     stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient, t_index + 9)
                  endif
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id = 0
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_hom_phone = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->birth_dt_tm = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_bus_phone = e.disp_display
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->parent_id = e.parent_id
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = 0
               else
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_bus_phone = e.disp_display
               endif
            of 15:   ; PERBIRTHDTTM            ;003
               t_index = 0
               for (i = 1 to reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
                  if (reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[i]->parent_id = e.parent_id)
                     t_index = i
                  endif
               endfor
               if (t_index = 0)
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                     = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt + 1
                  t_index = reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt
                  if (mod(t_index, 10) = 1)
                     stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient, t_index + 9)
                  endif
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_id = 0
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_hom_phone = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->person_bus_phone = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->name = ""
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->parent_id = e.parent_id
                  reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->encntr_id = 0
   ;30870         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->birth_dt_tm = e.disp_display
   ;30870      else
   ;30870         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->birth_dt_tm = e.disp_display
               endif
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient[t_index]->birth_dt_tm    ;30870
                  = s_format_utc_date (e.disp_dt_tm, validate(e.disp_tz,0),";4;q")                             ;30870
            of 27:  ; ANESTHTYPE - 30103
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->anesthesia_type = e.disp_display  ;30103
            of 36:  ; Patseen Date/Time 39121
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patseen_dt_tm = cnvtdatetime(e.disp_dt_tm)  ;39121
               reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->wait_time                                    ;39121
   ;40110                = cnvtstring(datetimediff(ed.disp_dt_tm, a.beg_dt_tm, 4))                                         ;39121
                  = cnvtstring(datetimediff(e.disp_dt_tm, a.beg_dt_tm, 4))                                                 ;40110
         endcase
      endif
   endif
   foot a.sch_appt_id
   if (mod(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt, 10) != 0)
      stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->def_qual_cnt)
   endif
   if (mod(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt, 10) != 0)
      stat = alterlist(reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->patient,
         reply->qual[d.seq]->appointment[reply->qual[d.seq]->qual_cnt]->qual_cnt)
   endif
foot d.seq
   if (mod(reply->qual[d.seq]->qual_cnt, 10) != 0)
      stat = alterlist(reply->qual[d.seq]->appointment, reply->qual[d.seq]->qual_cnt)
   endif
   if (reply->qual[d.seq]->qual_cnt > max_appt_cnt)                                                                    ;009
      max_appt_cnt = reply->qual[d.seq]->qual_cnt                                                                      ;009
   endif                                                                                                               ;009
;334991  with nocounter
with nocounter, RDBCBOREPARSE       ;334991
;011 ,orahint("INDEX(A XIE99SCH_APPT) INDEX(AD XIE1SCH_APPT_DEF) INDEX(E XIE3SCH_EVENT_DISP)")
 
;251273 appointment qual may have been sized in loading block schedule as well
for(i = 1 to reply->qual_cnt)
   if (mod(reply->qual[i]->qual_cnt, 10) != 0)
      set stat = alterlist(reply->qual[i]->appointment, reply->qual[i]->qual_cnt)
   endif
endfor
 
 
#load_diagnosis                                                                                                        ;009
if (request->load_order_diag_ind = 1 and max_appt_cnt > 0)                                                             ;009
   declare order_attach_cd = f8 with public, noconstant(0.0)                                                           ;009
   set cdf_meaning = "ORDER"                                                                                           ;009
   call GetCodeValue(16110, cdf_meaning, order_attach_cd)                                                              ;009
 
   ;==> Pre assign a max number of expected records                                                                    ;009
   set t_record->diag_qual_alloc = 25                                                                                  ;009
   set stat = alterlist(t_record->diag_qual, t_record->diag_qual_alloc)                                                ;009
 
   declare t_string = vc with public, noconstant                                                                       ;009
   declare t_temp = f8 with public, noconstant(0.0)                                                                    ;009
   select into "nl:"                                                                                                   ;009
      d.seq                                                                                                            ;009
   from (dummyt d1 with seq = value(reply->qual_cnt)),                                                                 ;009
      (dummyt d2 with seq = value(max_appt_cnt)),                                                                      ;009
      sch_event_attach ea,                                                                                             ;009
      dcp_entity_reltn dcp,                                                                                            ;009
      diagnosis d,                                                                                                     ;009
      nomenclature n                                                                                                   ;009
   plan d1 where                                                                                                       ;009
      reply->qual[d1.seq]->qual_cnt > 0                                                                                ;009
   join d2 where                                                                                                       ;009
      d2.seq <= reply->qual[d1.seq]->qual_cnt                                                                          ;009
       and reply->qual[d1.seq]->appointment[d2.seq]->sch_event_id > 0                                                  ;009
       and reply->qual[d1.seq]->appointment[d2.seq]->schedule_seq > 0                                                  ;009
   join ea where                                                                                                       ;009
      ea.sch_event_id = reply->qual[d1.seq]->appointment[d2.seq]->sch_event_id                                         ;009
       and ea.attach_type_cd = order_attach_cd                                                                         ;009
       and ea.beg_schedule_seq <= reply->qual[d1.seq]->appointment[d2.seq]->schedule_seq                               ;009
       and ea.end_schedule_seq >= reply->qual[d1.seq]->appointment[d2.seq]->schedule_seq                               ;009
       and ea.state_meaning != "REMOVED"                                                                               ;009
       and ea.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")                                                  ;009
   join dcp where                                                                                                      ;009
      dcp.entity1_id = ea.order_id                                                                                     ;009
       and dcp.entity_reltn_mean = "ORDERS/DIAGN"                                                                      ;009
       and dcp.active_ind = 1                                                                                          ;009
   join d where                                                                                                        ;009
      d.diagnosis_id = dcp.entity2_id                                                                                  ;009
       and d.active_ind = 1                                                                                            ;009
   join n where                                                                                                        ;009
      n.nomenclature_id = d.nomenclature_id                                                                            ;009
   order by d1.seq, d2.seq, dcp.rank_sequence, ea.order_seq_nbr                                                        ;009
   head d1.seq                                                                                                         ;009
      t_record->diag_qual_cnt = 0                                                                                      ;009
   head d2.seq                                                                                                         ;009
      t_record->diag_qual_cnt = 0                                                                                      ;009
   detail                                                                                                              ;009
      ;==> Check to see if the diagnosis already exists                                                                ;009
      t_index = 0                                                                                                      ;009
      for (i = 1 to t_record->diag_qual_cnt)                                                                           ;009
         if (t_record->diag_qual[i]->diagnosis_id = d.diagnosis_id)                                                    ;009
            t_index = i                                                                                                ;009
            i = t_record->diag_qual_cnt + 1                                                                            ;009
         endif                                                                                                         ;009
      endfor                                                                                                           ;009
      if (t_index = 0)                                                                                                 ;009
         ;==> Determine the display value                                                                              ;009
         if (n.nomenclature_id > 0 and n.source_string > " ")                                                          ;009
            t_string = n.source_string                                                                                 ;009
         else                                                                                                          ;009
            t_string = d.diag_ftdesc                                                                                   ;009
         endif                                                                                                         ;009
         ;==> Check to see if this is the first diagnosis                                                              ;009
         if (t_record->diag_qual_cnt = 0)                                                                              ;009
            reply->qual[d1.seq]->appointment[d2.seq]->order_diagnosis = trim(t_string)                                 ;009
         else                                                                                                          ;009
            reply->qual[d1.seq]->appointment[d2.seq]->order_diagnosis                                                  ;009
               = concat(trim(reply->qual[d1.seq]->appointment[d2.seq]->order_diagnosis),"; ",t_string)                 ;009
         endif                                                                                                         ;009
         ;==> Add the DIAGNOSIS_ID to T_RECORD->DIAG_QUAL.                                                             ;009
         t_record->diag_qual_cnt = t_record->diag_qual_cnt + 1                                                         ;009
         if (t_record->diag_qual_cnt > t_record->diag_qual_alloc)                                                      ;009
            t_record->diag_qual_alloc = t_record->diag_qual_alloc + 25                                                 ;009
            stat = alterlist(t_record->diag_qual, t_record->diag_qual_alloc)                                           ;009
          endif                                                                                                         ;009
         t_record->diag_qual[t_record->diag_qual_cnt]->diagnosis_id = d.diagnosis_id                                   ;009
      endif                                                                                                            ;009
   with nocounter                                                                                                      ;009
endif
 
 
/*****************************************************************************
* 251273 Load event comment
*****************************************************************************/
select into "nl:"
   d1.seq,
   d2.seq,
   a.updt_cnt,
   l.updt_cnt
from
   (dummyt d1 with seq = value(reply->qual_cnt)),
   (dummyt d2 with seq = value(max_appt_cnt)),
   sch_event_comm a,
   long_text l
plan d1 where
   reply->qual[d1.seq]->qual_cnt > 0
join d2 where
   d2.seq <= reply->qual[d1.seq]->qual_cnt
    and reply->qual[d1.seq]->appointment[d2.seq]->sch_event_id > 0
    and reply->qual[d1.seq]->appointment[d2.seq]->schedule_seq > 0
join a where
   a.sch_event_id = reply->qual[d1.seq]->appointment[d2.seq]->sch_event_id
    and a.sch_action_id = 0
    and a.text_type_cd = commentTextTypeCd
    and a.sub_text_cd = commentSubTextCd
    and a.version_dt_tm = cnvtdatetime("31-DEC-2100 00:00:00.00")
join l where
   l.long_text_id = a.text_id
detail
    reply->qual[d1.seq]->appointment[d2.seq]->scheduling_comment = l.long_text
with nocounter
 
/*****************************************************************************
* Check Security
*****************************************************************************/
 
if (request->security_ind = 1)                                                                                         ;010
   set t_perform_security = 0                                                                                          ;010
   for (i = 1 to reply->qual_cnt)                                                                                      ;010
      for (j = 1 to reply->qual[i]->qual_cnt)                                                                          ;010
         set reply->qual[i]->appointment[j]->appttype_sec_ind = 1                                                      ;010
         if (reply->qual[i]->appointment[j]->appt_type_cd > 0)                                                         ;010
;87486            set reply->qual[i]->appointment[j]->appttype_sec_ind = uar_sch_security_insert(reqinfo->updt_id,           ;010
;87486               appttype_type_cd,reply->qual[i]->appointment[j]->appt_type_cd, view_action_cd, 0.0, sch_security_id)    ;010
            set reply->qual[i]->appointment[j]->appttype_sec_ind = uar_sch_security_insert_ex2(reqinfo->updt_id,        ;87486
               appttype_type_cd,reply->qual[i]->appointment[j]->appt_type_cd, view_action_cd, 0.0, sch_security_id,     ;87486
               reqinfo->position_cd)                                                                                    ;87486
            if (sch_security_id = 0.0 and reply->qual[i]->appointment[j]->appttype_sec_ind = 0)                        ;010
              set reply->qual[i]->appointment[j]->appttype_sec_ind = 2                                                 ;010
              set t_perform_security = 1                                                                               ;010
            endif                                                                                                      ;010
         endif                                                                                                         ;010
                                                                                                                       ;010
         set reply->qual[i]->appointment[j]->location_sec_ind = 1                                                      ;010
         if (reply->qual[i]->appointment[j]->location_cd > 0)                                                          ;010
;87486            set reply->qual[i]->appointment[j]->location_sec_ind = uar_sch_security_insert(reqinfo->updt_id,           ;010
;87486               location_type_cd, reply->qual[i]->appointment[j]->location_cd, view_action_cd, 0.0, sch_security_id)    ;010
            set reply->qual[i]->appointment[j]->location_sec_ind = uar_sch_security_insert_ex2(reqinfo->updt_id,        ;87486
               location_type_cd, reply->qual[i]->appointment[j]->location_cd, view_action_cd, 0.0, sch_security_id,     ;87486
               reqinfo->position_cd)                                                                                    ;87486
            if (sch_security_id = 0.0 and reply->qual[i]->appointment[j]->location_sec_ind = 0)                        ;010
               set reply->qual[i]->appointment[j]->location_sec_ind = 2                                                ;010
               set t_perform_security = 1                                                                              ;010
            endif                                                                                                      ;010
         endif                                                                                                         ;010
 
         ;251273+
         set reply->qual[i]->appointment[j]->comment_sec_ind = 1
         if (textlen(reply->qual[i]->appointment[j]->scheduling_comment) > 0)
            set reply->qual[i]->appointment[j]->comment_sec_ind = uar_sch_security_insert_ex2(reqinfo->updt_id,
               apptcomm_type_cd, reply->qual[i]->appointment[j]->appt_type_cd, commentSubTextCd,
               view_action_cd,
               sch_security_id,
               reqinfo->position_cd)
            if (sch_security_id = 0.0 and reply->qual[i]->appointment[j]->comment_sec_ind = 0)
               set reply->qual[i]->appointment[j]->comment_sec_ind = 2
               set t_perform_security = 1
            endif
         endif
         ;251273-
 
         set reply->qual[i]->appointment[j]->slottype_sec_ind = 1                                                      ;010
         if (reply->qual[i]->appointment[j]->slot_type_id > 0)                                                         ;010
;87486            set reply->qual[i]->appointment[j]->slottype_sec_ind = uar_sch_security_insert(reqinfo->updt_id,           ;010
;87486               slottype_type_cd, reply->qual[i]->appointment[j]->slot_type_id, view_action_cd, 0.0, sch_security_id)   ;010
            set reply->qual[i]->appointment[j]->slottype_sec_ind = uar_sch_security_insert_ex2(reqinfo->updt_id,        ;87486
               slottype_type_cd, reply->qual[i]->appointment[j]->slot_type_id, view_action_cd, 0.0, sch_security_id,    ;87486
               reqinfo->position_cd)                                                                                    ;87486
            if (sch_security_id = 0.0 and reply->qual[i]->appointment[j]->slottype_sec_ind = 0)                        ;010
               set reply->qual[i]->appointment[j]->slottype_sec_ind = 2                                                ;010
               set t_perform_security = 1                                                                              ;010
            endif                                                                                                      ;010
         endif                                                                                                         ;010
                                                                                                                       ;010
         for (k = 1 to reply->qual[i]->appointment[j]->def_qual_cnt)                                                   ;010
            set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind = 1                                      ;010
            if (reply->qual[i]->appointment[j]->def_qual[k]->slot_type_id > 0)                                         ;010
;87486               set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind                                       ;010
;87486                  = uar_sch_security_insert(reqinfo->updt_id, slottype_type_cd,                                        ;010
;87486                  reply->qual[i]->appointment[j]->def_qual[k]->slot_type_id, view_action_cd, 0.0, sch_security_id)     ;010
               set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind                                        ;87486
                  = uar_sch_security_insert_ex2(reqinfo->updt_id, slottype_type_cd,                                     ;87486
                  reply->qual[i]->appointment[j]->def_qual[k]->slot_type_id, view_action_cd, 0.0, sch_security_id,      ;87486
                  reqinfo->position_cd)                                                                                 ;87486
               if (sch_security_id = 0.0 and reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind = 0)        ;010
                  set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind = 2                                ;010
                  set t_perform_security = 1                                                                           ;010
               endif                                                                                                   ;010
            endif                                                                                                      ;010
         endfor                                                                                                        ;010
      endfor                                                                                                           ;010
   endfor                                                                                                              ;010
   if (t_perform_security = 1)                                                                                         ;010
      set t_granted = uar_sch_security_perform()                                                                       ;010
      for (i = 1 to reply->qual_cnt)                                                                                   ;010
         for (j = 1 to reply->qual[i]->qual_cnt)                                                                       ;010
            if (reply->qual[i]->appointment[j]->appttype_sec_ind = 2)                                                  ;010
;87486               set reply->qual[i]->appointment[j]->appttype_sec_ind                                                    ;010
;87486                  = uar_sch_check_security_ex(reqinfo->updt_id, appttype_type_cd,                                      ;010
;87486                     reply->qual[i]->appointment[j]->appt_type_cd, view_action_cd, 0.0,sch_security_id)                ;010
               set reply->qual[i]->appointment[j]->appttype_sec_ind                                                     ;87486
                  = uar_sch_check_security_ex2(reqinfo->updt_id, appttype_type_cd,                                      ;87486
                     reply->qual[i]->appointment[j]->appt_type_cd, view_action_cd, 0.0,sch_security_id,                 ;87486
                     reqinfo->position_cd)                                                                              ;87486
            endif                                                                                                      ;010
            if (reply->qual[i]->appointment[j]->location_sec_ind = 2)                                                  ;010
;87486               set reply->qual[i]->appointment[j]->location_sec_ind                                                    ;010
;87486                  = uar_sch_check_security_ex(reqinfo->updt_id, location_type_cd,                                      ;010
;87486                     reply->qual[i]->appointment[j]->location_cd, view_action_cd, 0.0,sch_security_id)                 ;010
               set reply->qual[i]->appointment[j]->location_sec_ind                                                     ;87486
                  = uar_sch_check_security_ex2(reqinfo->updt_id, location_type_cd,                                      ;87486
                     reply->qual[i]->appointment[j]->location_cd, view_action_cd, 0.0,sch_security_id,                  ;87486
                     reqinfo->position_cd)                                                                              ;87486
            endif
 
            ;251273+
            if (reply->qual[i]->appointment[j]->comment_sec_ind = 2)
               set reply->qual[i]->appointment[j]->comment_sec_ind
                  = uar_sch_check_security_ex2(reqinfo->updt_id, apptcomm_type_cd,
                     reply->qual[i]->appointment[j]->appt_type_cd, commentSubTextCd,
                     view_action_cd,
                     sch_security_id,
                     reqinfo->position_cd)
            endif
            ;251273-
 
            if (reply->qual[i]->appointment[j]->slottype_sec_ind = 2)                                                  ;010
;87486               set reply->qual[i]->appointment[j]->slottype_sec_ind                                                    ;010
;87486                  = uar_sch_check_security_ex(reqinfo->updt_id, slottype_type_cd,                                      ;010
;87486                     reply->qual[i]->appointment[j]->slot_type_id, view_action_cd, 0.0,sch_security_id)                ;010
               set reply->qual[i]->appointment[j]->slottype_sec_ind                                                     ;87486
                  = uar_sch_check_security_ex2(reqinfo->updt_id, slottype_type_cd,                                      ;87486
                     reply->qual[i]->appointment[j]->slot_type_id, view_action_cd, 0.0,sch_security_id,                 ;87486
                     reqinfo->position_cd)                                                                              ;87486
            endif                                                                                                      ;010
            for (k = 1 to reply->qual[i]->appointment[j]->def_qual_cnt)                                                ;010
               if (reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind = 2)                                  ;010
;87486                  set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind                                    ;010
;87486                     = uar_sch_check_security_ex(reqinfo->updt_id, slottype_type_cd,                                   ;010
;87486                        reply->qual[i]->appointment[j]->def_qual[k]->slot_type_id, view_action_cd, 0.0,sch_security_id);010
                  set reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind                                     ;87486
                     = uar_sch_check_security_ex2(reqinfo->updt_id, slottype_type_cd,                                   ;87486
                        reply->qual[i]->appointment[j]->def_qual[k]->slot_type_id, view_action_cd, 0.0,sch_security_id, ;87486
                        reqinfo->position_cd)                                                                           ;87486
               endif                                                                                                   ;010
            endfor                                                                                                     ;010
         endfor                                                                                                        ;010
      endfor                                                                                                           ;010
   endif
   for (i = 1 to reply->qual_cnt)
      for (j = 1 to reply->qual[i]->qual_cnt)
         if (reply->qual[i]->appointment[j]->slottype_sec_ind = 0)
            set reply->qual[i]->appointment[j]->slot_mnemonic = secured_slottype_disp
         endif
         if (reply->qual[i]->appointment[j]->appttype_sec_ind = 0
             or reply->qual[i]->appointment[j]->location_sec_ind = 0)
            set reply->qual[i]->appointment[j]->appt_synonym_free = secured_appttype_disp
            set reply->qual[i]->appointment[j]->appt_type_desc = secured_appttype_disp
            set reply->qual[i]->appointment[j]->location_freetext = ""
            set reply->qual[i]->appointment[j]->sch_state_disp = ""
            set reply->qual[i]->appointment[j]->primary_resource_mnem = ""
            set reply->qual[i]->appointment[j]->req_prsnl_name = ""
            set reply->qual[i]->appointment[j]->appt_reason_free = ""
            set reply->qual[i]->appointment[j]->scheduling_comment = ""   ;251273
            for (k = 1 to reply->qual[i]->appointment[j]->qual_cnt)
               set reply->qual[i]->appointment[j]->patient[k]->name = ""
               set reply->qual[i]->appointment[j]->patient[k]->person_hom_phone = ""
               set reply->qual[i]->appointment[j]->patient[k]->person_bus_phone = ""
               set reply->qual[i]->appointment[j]->patient[k]->birth_dt_tm = ""
            endfor
         endif
         if (reply->qual[i]->appointment[j]->comment_sec_ind = 0)             ;251273
            set reply->qual[i]->appointment[j]->scheduling_comment = ""     ;251273
         endif                                                                                                ;251273
         for (k = 1 to reply->qual[i]->appointment[j]->def_qual_cnt)
            if (reply->qual[i]->appointment[j]->def_qual[k]->slottype_sec_ind = 0)
               set reply->qual[i]->appointment[j]->def_qual[k]->slot_mnemonic = secured_slottype_disp
            endif
         endfor
      endfor
   endfor
endif
 
/*****************************************************************************
* Exit script
*****************************************************************************/
#exit_script
if (failed = FALSE)
   set reply->status_data->status = "S"
else
   set reply->status_data->status = "Z"
   if (failed != TRUE)
      case (failed)
         of SELECT_ERROR:
            set reply->status_data->subeventstatus[1]->
               operationname = "SELECT"
         else
            set reply->status_data->subeventstatus[1]->
               operationname = "UNKNOWN"
      endcase
      set reply->status_data->subeventstatus[1]->
         operationstatus = "Z"
      set reply->status_data->subeventstatus[1]->
         targetobjectname = "TABLE"
      set reply->status_data->subeventstatus[1]->
         targetobjectvalue = table_name
   endif
endif
 
if (request->call_echo_ind)
   call echorecord(reply)
endif
 
end go
