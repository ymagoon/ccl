set auth_cd                     = uar_get_code_by("MEANING",14167,"YES"                            ) go
set fin_type_cd                 = uar_get_code_by("meaning"    ,319  ,"FIN NBR"                    ) go
set mrn_type_cd                 = uar_get_code_by("meaning"    ,319  ,"MRN"                        ) go
set domain_cd                   = uar_get_code_by("MEANING",339,"CENSUS"                           ) go
set selfpay_cd                  = uar_get_code_by("MEANING",354,"SELFPAY"                          ) go



SELECT
Patient_Name = p.name_full_formatted,
Age = cnvtage(p.birth_dt_tm),
Gender = uar_get_code_display(p.sex_cd),
Scheduled_Date = sch.beg_dt_tm,
a1.END_EFFECTIVE_DT_TM,
fin=trim(fin.alias),
mrn=trim(mrn.alias),
Patient_type = uar_get_code_display(e.encntr_type_cd),
sch.state_meaning,
Appointment_type = sche.appt_synonym_free,
sch_Location = uar_get_code_display(sch.appt_location_cd),
a1.TOTAL_SERVICE_NBR,
Auth_status = UAR_GET_CODE_DISPLAY(a1.cert_status_cd),
a1.auth_nbr,
hp_priority=EVALUATE(epr1.priority_seq,1,"Primary",2,"Secondary",3,"Tertiary",4,"Quaternary","Other"),
hp1.plan_name,
e.reg_dt_tm,
e.disch_dt_tm,
Room = UAR_GET_CODE_DISPLAY(e.loc_room_cd),
Bed = UAR_GET_CODE_DISPLAY(e.loc_bed_cd),
Scheduler = pr.name_full_formatted,
p.person_id,
e.encntr_id



FROM 
encntr_domain ed,
encounter          e,
person             p,
encntr_alias       fin,
encntr_alias       mrn,
prsnl              pr,
authorization      a1,
health_plan        hp1,
encntr_plan_auth_r epa,
encntr_plan_reltn  epr1,
sch_appt           sch,
sch_event          sche


plan ed
  where ed.person_id > 0
  and ed.encntr_domain_type_cd +0 = DOMAIN_CD
  and ed.loc_facility_cd in "<Facility Multiple: Choose Facility>"
  and ed.active_ind +0 = 1
  and ed.beg_effective_dt_tm +0 <= cnvtdatetime(curdate,curtime3)
  and ed.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

Join e
  where e.encntr_id = ed.encntr_id
  and   e.active_ind +0 =1
  and   e.disch_dt_tm +0 = NULL
  and   e.beg_effective_dt_tm +0 <= cnvtdatetime(curdate,curtime3)
  and   e.end_effective_dt_tm +0 >= cnvtdatetime(curdate,curtime3)

join p
  where p.person_id = e.person_id
  and p.active_ind +0 = 1

Join fin
  Where fin.encntr_id = e.encntr_id
  and   fin.encntr_alias_type_cd = fin_type_cd
  and   fin.active_ind = 1
  and   fin.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and   fin.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

Join mrn
  Where mrn.encntr_id = e.encntr_id
  and   mrn.encntr_alias_type_cd = mrn_type_cd
  and   mrn.active_ind = 1
  and   mrn.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and   mrn.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join epr1
  where epr1.encntr_id = e.encntr_id
  and epr1.active_ind = 1
  and epr1.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and epr1.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join epa
  where epa.encntr_plan_reltn_id = epr1.encntr_plan_reltn_id
  and epa.active_ind = 1
  and epa.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and epa.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join a1
  where a1.authorization_id = epa.authorization_id
  and a1.active_ind = 1
  and a1.auth_required_cd = AUTH_CD
  and a1.end_effective_dt_tm != cnvtdatetime("31-DEC-2100")

join sch
  where sch.encntr_id = e.encntr_id
  and sch.beg_dt_tm > a1.END_EFFECTIVE_DT_TM
  and sch.state_meaning = "CONFIRMED"
  and sch.active_ind = 1

join sche
  where sche.sch_event_id = sch.sch_event_id
  and sche.active_ind +0 = 1

join pr
  where pr.person_id = sch.active_status_prsnl_id
  and pr.active_ind +0 = 1
  and pr.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and pr.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join hp1
  where hp1.health_plan_id = a1.health_plan_id
  and hp1.active_ind = 1
  and hp1.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and hp1.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
  and hp1.financial_class_cd != selfpay_cd

order by hp1.plan_name

with nocounter


