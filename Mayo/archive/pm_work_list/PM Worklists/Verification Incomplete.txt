set fin_cd = UAR_GET_CODE_BY("DISPLAYKEY",319,"FINNBR") go
set mrn_cd = UAR_GET_CODE_BY("DISPLAYKEY",319,"MRN") go
set required_cd = uar_get_code_by("DISPLAYKEY",14665,"REQUIRED") go
set pending_cd = uar_get_code_by("DISPLAYKEY",14665, "PENDING") go
set not_verified_cd = uar_get_code_by("DISPLAYKEY",14665,"NOTVERIFIED") go
set verified_cd = uar_get_code_by("DISPLAYKEY",14665,"VERIFIED") go
set selfpay_cd = uar_get_code_by("MEANING",354,"SELFPAY") go
set domain_cd = uar_get_code_by("MEANING",339,"CENSUS") go
set scanning_cd = UAR_GET_CODE_BY("DISPLAYKEY",71,"SCANNING") go
set transcription_cd = UAR_GET_CODE_BY("DISPLAYKEY",71,"TRANSCRIPTION") go
set clientpre_cd = UAR_GET_CODE_BY("DISPLAYKEY",71,"CLIENTPREREG") go
set referred_cd = UAR_GET_CODE_BY("DISPLAYKEY",71,"REFERREDCLIENT") go
set outmessg_cd = UAR_GET_CODE_BY("DISPLAYKEY",71,"OUTPATIENTMESSAGE") go

SELECT
Person_Name = p.name_full_formatted,
e.est_arrive_dt_tm,
FIN = trim(ea.alias),
MRN = trim(ea2.alias),
sch.state_meaning,
verify_status = uar_get_code_display(epr3.verify_status_cd),
verify_date = epr3.verify_dt_tm,
hp_priority=EVALUATE(epr3.priority_seq,1,"Primary",2,"Secondary",3,"Tertiary",4,"Quaternary","Other"),
Primary_Plan = hp.plan_name,
e.encntr_id,
p.person_id

FROM 
encounter e,
sch_appt sch,
sch_event sche,
person p,
encntr_alias ea,
encntr_alias ea2,
encntr_plan_reltn epr3,
health_plan hp,
encntr_domain ed,
dummyt d3

plan ed 
where ed.end_effective_dt_tm > cnvtdatetime(curdate-5,0) 
and ed.loc_facility_cd in "<Facility Multiple: Choose Facility>"
and ed.encntr_domain_type_cd = domain_cd
and ed.active_ind = 1
join e
  WHERE ed.encntr_id = e.encntr_id 
   AND (e.disch_dt_tm +0 = NULL or datetimecmp(cnvtdatetime(curdate,0),e.disch_dt_tm)<=3)
   AND e.encntr_type_cd NOT in(scanning_cd,transcription_cd,clientpre_cd,referred_cd,outmessg_cd)
   AND e.active_ind = 1
   AND e.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
   AND e.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
   and e.encntr_id in( (select sch.encntr_id from sch_appt sch, sch_event sche
                          where sch.encntr_id = e.encntr_id 
                           AND sch.beg_dt_tm between cnvtdatetime(curdate,-1) and
                                                     cnvtdatetime(curdate+3,curtime3)
                           AND sch.state_meaning = "CONFIRMED"
                           AND sch.active_ind = 1
                           AND sche.sch_event_id = sch.sch_event_id
                           AND sche.active_ind +0 = 1
                        UNION
                        (select e2.encntr_id from encounter e2
                           where e2.encntr_id = e.encntr_id
                            AND ( (e2.est_arrive_dt_tm between cnvtdatetime(curdate,-1) and 
                                                                cnvtdatetime(curdate+3,curtime3))
                                   OR
                                   (e2.reg_dt_tm !=NULL))
                            AND e2.active_ind = 1
                            AND e2.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
                            AND e2.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
                            AND e2.encntr_id not in( SELECT sch2.encntr_id
                                                        FROM sch_appt sch2, sch_event sche2
                                                        where sch2.encntr_id = e2.encntr_id
                                                            AND sch2.beg_dt_tm between cnvtdatetime(curdate-30,0) 
                                                            AND cnvtdatetime(curdate+3,curtime3)
                                                        AND sch2.state_meaning = "CONFIRMED"
                                                        AND sch2.active_ind = 1
                                                        AND sche2.sch_event_id = sch2.sch_event_id
                                                        AND sche2.active_ind +0 = 1)))) 

                       
JOIN p WHERE ed.person_id = p.person_id
AND p.active_ind = 1
AND p.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
AND p.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

JOIN ea WHERE ea.encntr_id = outerjoin(ed.encntr_id)
AND ea.encntr_alias_type_cd = outerjoin(fin_cd)
AND ea.active_ind = outerjoin(1)
AND ea.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate,curtime3))
AND ea.end_effective_dt_tm >= outerjoin(cnvtdatetime(curdate,curtime3))

JOIN ea2 WHERE ea2.encntr_id = outerjoin(ed.encntr_id)
AND ea2.encntr_alias_type_cd = outerjoin(mrn_cd)
AND ea2.active_ind = outerjoin(1)
AND ea2.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate,curtime3))
AND ea2.end_effective_dt_tm >= outerjoin(cnvtdatetime(curdate,curtime3))

JOIN epr3 WHERE epr3.encntr_id = outerjoin(ed.encntr_id)
and epr3.verify_status_cd in (required_cd, pending_cd, not_verified_cd, verified_cd)
AND epr3.active_ind = outerjoin(1)
AND epr3.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate,curtime3))
AND epr3.end_effective_dt_tm >= outerjoin(cnvtdatetime(curdate,curtime3))

JOIN hp WHERE hp.health_plan_id = outerjoin(epr3.health_plan_id)
and hp.financial_class_cd != selfpay_cd
AND hp.active_ind = outerjoin(1)
AND hp.beg_effective_dt_tm <= outerjoin(cnvtdatetime(curdate,curtime3))
AND hp.end_effective_dt_tm >= outerjoin(cnvtdatetime(curdate,curtime3))

join d3
join sch where sch.encntr_id = ed.encntr_id
 and sch.state_meaning = "CONFIRMED"
 and sch.active_ind = 1
 and sch.beg_dt_tm between cnvtdatetime(curdate,-1) and cnvtdatetime(curdate+3,curtime3)

join sche where sch.sch_event_id = sche.sch_event_id

ORDER BY e.est_arrive_dt_tm, hp.plan_name

WITH nocounter,outerjoin=d3, dontcare=sch, dontcare=sche, maxread(sch,1)



