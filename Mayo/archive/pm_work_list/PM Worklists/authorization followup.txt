set auth_cd = uar_get_code_by("MEANING",14167,"YES") go
set fin_type_cd = uar_get_code_by("meaning"    ,319  ,"FIN NBR") go
set mrn_type_cd = uar_get_code_by("meaning"    ,319  ,"MRN") go
set approved_cd = uar_get_code_by("displaykey",14155,"APPROVED") go
set submitted_cd = uar_get_code_by("displaykey",14155,"SUBMITTED") go
set domain_cd = uar_get_code_by("MEANING",339,"CENSUS") go 
set selfpay_cd = uar_get_code_by("MEANING",354,"SELFPAY") go

SELECT
     p.name_full_formatted,
     Exp_Arrival = decode(sch.beg_dt_tm,concat(format(sch.beg_dt_tm,"MM/DD/YYYY HH:MM;;D")," SCH"),
                               concat(format(e.est_arrive_dt_tm,"MM/DD/YYYY HH:MM;;D")," EST")),
     e.reg_dt_tm,
     e.disch_dt_tm,
     a1.END_EFFECTIVE_DT_TM,
     Amt_Auth = a1.TOTAL_SERVICE_NBR,
     Auth_Status = UAR_GET_CODE_DISPLAY(a1.cert_status_cd),
     Auth_Nbr = a1.auth_nbr,
     hp_priority=EVALUATE(epr1.priority_seq,1,"Primary",2,"Secondary",3,"Tertiary",4,"Quaternary","Other"),
     hp1.plan_name,
     fin=trim(ea.alias),
     mrn=trim(ea2.alias),
     Room = UAR_GET_CODE_DISPLAY(e.loc_room_cd),
     Bed = UAR_GET_CODE_DISPLAY(e.loc_bed_cd),
     Enc_Type = UAR_GET_CODE_DISPLAY(e.encntr_type_cd),
     p.person_id,
     e.encntr_id


FROM encntr_domain ed,
     encounter         e,
     person            p,
     encntr_alias      ea,
     encntr_alias      ea2,
     encntr_plan_reltn epr1,
     encntr_plan_auth_r epa,
     authorization     a1,
     health_plan       hp1,
     sch_appt sch,
     dummyt d3,
     dummyt d4

plan ed
where ed.end_effective_dt_tm > cnvtdatetime(curdate-5,0)
 and ed.encntr_domain_type_cd = DOMAIN_CD
 and ed.loc_facility_cd in "<Facility Multiple: Choose Facility>"
 and ed.active_ind = 1
 and ed.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)

join e
  where e.encntr_id = ed.encntr_id
  and   e.active_ind +0 =1
  and   e.beg_effective_dt_tm +0 <= cnvtdatetime(curdate,curtime3)
  and   e.end_effective_dt_tm +0 >= cnvtdatetime(curdate,curtime3)
   AND (e.disch_dt_tm +0 = NULL or datetimecmp(cnvtdatetime(curdate,0),e.disch_dt_tm + 0)<=3)
   and e.encntr_id + 0 in( (select sch.encntr_id from sch_appt sch, sch_event sche
                          where sch.encntr_id = e.encntr_id 
                           AND sch.beg_dt_tm + 0 between cnvtdatetime(curdate,0) and cnvtdatetime(curdate+30,curtime3)
                           AND sch.state_meaning = "CONFIRMED"
                           AND sch.active_ind = 1
                           AND sche.sch_event_id = sch.sch_event_id
                           AND sche.active_ind +0 = 1
                        UNION
                        (select e2.encntr_id from encounter e2
                           where e2.encntr_id = e.encntr_id
                            AND ( (e2.est_arrive_dt_tm + 0 between cnvtdatetime(curdate,0) 
                                                           and cnvtdatetime(curdate+30,curtime3))
                                   OR
                                   (e2.reg_dt_tm + 0 !=NULL))
                            AND e2.active_ind = 1
                            AND e2.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
                            AND e2.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
                            AND e2.encntr_id + 0 not in( SELECT sch2.encntr_id
                                                        FROM sch_appt sch2, sch_event sche2
                                                        where sch2.encntr_id = e2.encntr_id 
                                                        AND sch2.beg_dt_tm + 0 between cnvtdatetime(curdate-30,0) 
                                                           AND cnvtdatetime(curdate+30,curtime3) 
                                                        AND sch2.state_meaning = "CONFIRMED"
                                                        AND sch2.active_ind = 1
                                                        AND sche2.sch_event_id = sch2.sch_event_id
                                                        AND sche2.active_ind +0 = 1))))



join p
  where p.person_id = e.person_id 
  and p.active_ind = 1
  and p.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and p.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

 
join ea2 
  Where ea2.encntr_id = e.encntr_id
  and   ea2.encntr_alias_type_cd = mrn_type_cd
  and   ea2.active_ind = 1
  and   ea2.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and   ea2.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join ea 
  Where ea.encntr_id = e.encntr_id
  and   ea.encntr_alias_type_cd = fin_type_cd
  and   ea.active_ind = 1
  and   ea.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
  and   ea.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)   
  
join epr1
where epr1.encntr_id = ea.encntr_id 
 and epr1.active_ind = 1
 and epr1.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
 and epr1.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join epa
 where epa.encntr_plan_reltn_id = epr1.encntr_plan_reltn_id
 and epa.active_ind = 1
 and epa.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
 and epa.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join a1 
 where a1.authorization_id = epa.authorization_id 
 and a1.active_ind = 1
 and a1.auth_required_cd = AUTH_CD
 and a1.cert_status_cd not in(submitted_cd, approved_cd)
 and a1.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
 and a1.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)

join hp1
where hp1.health_plan_id = a1.health_plan_id 
 and hp1.active_ind = 1
 and hp1.beg_effective_dt_tm <= cnvtdatetime(curdate,curtime3)
 and hp1.end_effective_dt_tm >= cnvtdatetime(curdate,curtime3)
 and hp1.financial_class_cd != selfpay_cd
 
join d3

join sch where sch.encntr_id = e.encntr_id
 and sch.state_meaning = "CONFIRMED"
 and sch.active_ind = 1
 and sch.beg_dt_tm + 0 between cnvtdatetime(curdate,0) and cnvtdatetime(curdate+30,curtime3)
join d4

order by  Exp_Arrival, a1.END_EFFECTIVE_DT_TM

WITH nocounter, dontcare=sch, maxread(sch,1)
