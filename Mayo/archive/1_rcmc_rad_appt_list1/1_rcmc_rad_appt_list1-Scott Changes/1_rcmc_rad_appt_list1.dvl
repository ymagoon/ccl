 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare __LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadReportSection(nCalc=i2) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadQUAL_APPT_LOCATIONSection(nCalc=i2) = f8 with Protect
declare HeadQUAL_APPT_LOCATIONSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadQUAL_TESTDATESection(nCalc=i2) = f8 with Protect
declare HeadQUAL_TESTDATESectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _Times60 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times12B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _Times14B0 = i4 with NoConstant(0),protect
declare _pen14S0C12632256 = i4 with NoConstant(0),protect
declare _pen14S0C8421504 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
 
call __LayoutQuery(0)
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine __LayoutQuery(dummy)
SELECT
	QUAL_APPT_LOCATION = SUBSTRING(1, 30, REC->qual[D1.SEQ].appt_location)
	, QUAL_ORDER_ID = REC->qual[D1.SEQ].order_id
	, QUAL_TESTDATE = REC->qual[D1.SEQ].testdate
 
FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(REC->qual, 5)))
 
PLAN D1
 
ORDER BY
	QUAL_APPT_LOCATION
	, QUAL_TESTDATE
 
 
 
Head Report
	_d0 = d1.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
 
; calculate section height
_fDrawHeight = HeadReportSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>RptReport->m_pageHeight-RptReport->m_marginBottom)
	call PageBreak(0)
endif
 
dummy_val = HeadReportSection(RPT_RENDER)
 
Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
 
Head QUAL_APPT_LOCATION
; calculate section height
_fDrawHeight = HeadQUAL_APPT_LOCATIONSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadQUAL_APPT_LOCATIONSection(RPT_RENDER)
 
Head QUAL_TESTDATE
; calculate section height
_fDrawHeight = HeadQUAL_TESTDATESection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadQUAL_TESTDATESection(RPT_RENDER)
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
 
Foot QUAL_TESTDATE
	row+0
 
Foot QUAL_APPT_LOCATION
	row+0
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
end ;__LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadReportSection(nCalc)
 
subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.470000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 2.813
set RptSD->m_width = 2.688
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times14B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("RCMC Radiology Appointment List",char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C12632256)
; DRAW RECTANGLE --- FieldName1
set _rptStat = uar_rptRect ( _hReport, OffsetX+2.688, OffsetY+0.063, 2.875, 0.323, RPT_NOFILL, RPT_WHITE)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadQUAL_APPT_LOCATIONSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadQUAL_APPT_LOCATIONSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadQUAL_APPT_LOCATIONSection(nCalc)
 
subroutine HeadQUAL_APPT_LOCATIONSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.270000), private
declare __FIELDNAME0 = vc with NoConstant(build2(rec->qual [d1.seq].appt_location,char(0))),protect
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C8421504)
; DRAW RECTANGLE --- FieldName15
set _rptStat = uar_rptRect ( _hReport, OffsetX+0.000, OffsetY+0.000, 7.563, 0.260, RPT_FILL,
uar_rptEncodeColor(192,192,192))
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.010
set RptSD->m_x = OffsetX + 1.750
set RptSD->m_width = 4.281
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadQUAL_APPT_LOCATIONSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadQUAL_TESTDATESection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadQUAL_TESTDATESectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadQUAL_TESTDATESection(nCalc)
 
subroutine HeadQUAL_TESTDATESectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.060000), private
declare __FIELDNAME0 = vc with NoConstant(build2(rec->qual [d1.seq].testdate,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.375
set RptSD->m_width = 0.313
set RptSD->m_height = 0.063
set _oldFont = uar_rptSetFont(_hReport, _Times60)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadQUAL_TESTDATESectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.500000), private
declare __FIELDNAME1 = vc with NoConstant(build2(rec->qual [d1.seq].appt_time,char(0))),protect
declare __FIELDNAME2 = vc with NoConstant(build2(rec->qual [d1.seq].patient_name,char(0))),protect
declare __FIELDNAME3 = vc with NoConstant(build2(rec->qual [d1.seq].exma,char(0))),protect
declare __FIELDNAME8 = vc with NoConstant(build2(rec->qual [d1.seq].mrn,char(0))),protect
declare __FIELDNAME16 = vc with NoConstant(build2(rec->qual [d1.seq].dob,char(0))),protect
declare __FIELDNAME12 = vc with NoConstant(build2(rec->qual [d1.seq].signs,char(0))),protect
declare __FIELDNAME14 = vc with NoConstant(build2(rec->qual [d1.seq].comment,char(0))),protect
declare __FIELDNAME5 = vc with NoConstant(build2(rec->qual [d1.seq].ordering_prv,char(0))),protect
declare __FIELDNAME15 = vc with NoConstant(build2(rec->qual [d1.seq].testdate,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.688
set RptSD->m_height = 0.250
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME1)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.813
set RptSD->m_width = 2.938
set RptSD->m_height = 0.313
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME2)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 3.063
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME3)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.531
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN: ",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 0.625
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME8)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName9
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("DOB:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 0.500
set RptSD->m_width = 0.771
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName16
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME16)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.063
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Signs/symptoms:",char(0)))
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 1.063
set RptSD->m_width = 6.313
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME12)
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName13
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Comments:",char(0)))
set RptSD->m_y = OffsetY + 0.750
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 6.625
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName14
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME14)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.990
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Requesting MD:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 1.896
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME5)
set RptSD->m_y = OffsetY + 0.375
set RptSD->m_x = OffsetX + 3.938
set RptSD->m_width = 0.698
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName15
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME15)
; DRAW LINE --- FieldName6
set _rptStat = uar_rptLine( _hReport,OffsetX+-0.062,OffsetY+ 1.443,OffsetX+7.438, OffsetY+1.443)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "1_RCMC_RAD_APPT_LIST1"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 14
set RptFont->m_bold = RPT_ON
set _Times14B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set _Times12B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 6
set RptFont->m_bold = RPT_OFF
set _Times60 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_rgbColor =
uar_rptEncodeColor(192,192,192)
set _pen14S0C12632256 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_rgbColor =  RPT_GRAY
set _pen14S0C8421504 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

