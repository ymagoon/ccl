;*** Generated by TRANSLATE, verify before re-including in CCL ***
DROP PROGRAM 1_LM_RTORDERSCCL2 :DBA GO
CREATE PROGRAM 1_LM_RTORDERSCCL2 :DBA
PROMPT "Output to File/Printer/MINE" = "MINE" ,
"Facilities:" = 0 ,
"OUTPUT" = 0
WITH OUTDEV ,FACILITY ,EXCEL
SET MAXSECS = 1800
DECLARE MAXORDERCNT = I4
SET MAXORDERCNT = 0
RECORD DATA (
  1 QUAL_CNT = I4
  1 QUAL [*]
    2 ENCNTR_ID = F8
    2 PERSON_ID = F8
    2 NAME = VC
    2 DOB = VC
    2 AGE = VC
    2 SEX = VC
    2 FIN = VC
    2 MRN = VC
    2 HRN = VC
    2 RFV = VC
    2 UNIT = VC
    2 ROOM = VC
    2 ISOL = VC
    2 DX = VC
    2 ATTENDING = VC
    2 CONSULTING = VC
    2 PROBLEMS = VC
    2 RES_STATUS = VC
    2 ORD_CNT = I4
    2 ORD [*]
      3 ORDER_ID = F8
      3 NAME = VC
      3 DETS = VC
      3 PRN = VC
      3 SORT = I4
      3 FREQ = VC
      3 SPE_INS = VC
)
SELECT DISTINCT INTO "NL:"
E_LOC_ROOM_DISP = UAR_GET_CODE_DISPLAY (E.LOC_ROOM_CD ) ,
E_LOC_NURSE_UNIT_DISP = UAR_GET_CODE_DISPLAY (E.LOC_NURSE_UNIT_CD ) ,
P.NAME_FULL_FORMATTED ,
O_CATALOG_DISP = UAR_GET_CODE_DISPLAY (O.CATALOG_CD ) ,
OD.OE_FIELD_DISPLAY_VALUE ,
ODR.OE_FIELD_DISPLAY_VALUE ,
ODRDE.OE_FIELD_DISPLAY_VALUE ,
ODRDER.OE_FIELD_DISPLAY_VALUE ,
O_ORDER_STATUS_DISP = UAR_GET_CODE_DISPLAY (O.ORDER_STATUS_CD ) ,
O.ORDER_ID ,
O.PERSON_ID ,
O.ENCNTR_ID ,
E_LOC_FACILITY_DISP = UAR_GET_CODE_DISPLAY (E.LOC_FACILITY_CD ) ,
E_LOC_BUILDING_DISP = UAR_GET_CODE_DISPLAY (E.LOC_BUILDING_CD )
FROM (ORDERS O ) ,
(PERSON P ) ,
(ENCNTR_DOMAIN E ) ,
(ENCOUNTER EN ) ,
(ENCNTR_ALIAS EA ) ,
(ENCNTR_ALIAS EA1 ) ,
(DUMMYT D1 ) ,
(ORDER_DETAIL OD ) ,
(DUMMYT D2 ) ,
(ORDER_DETAIL ODR ) ,
(DUMMYT D6 ) ,
(ORDERS ORD ) ,
(DUMMYT D7 ) ,
(ORDER_DETAIL ODRDE ) ,
(DUMMYT D4 ) ,
(ORDER_DETAIL ODRDER )
PLAN (O
WHERE (O.UPDT_DT_TM > (CNVTDATETIME (CURDATE ,235959 ) - 60 ) ) AND (O.CATALOG_CD IN (544883423.00 ,
730685645.00 ,
545212289.00 ,
615036479.00 ,
604374573.00 ,
730685645.00 ,
545246298.00 ,
604375424.00 ,
65841406.00 ,
14944323.00 ,
35258020.00 ,
505532821.00 ,
3490624.00 ,
266244329.00 ,
7441712.00 ,
7659307.00 ,
131440791.00 ,
133501369.00 ,
288895512.00 ,
3490626.00 ,
65841369.00 ,
114688400.00 ,
247742803.00 ,
3490553.00 ,
288898336.00 ,
288898405.00 ,
3490637.00 ,
545870807.00 ,
73384585.00 ,
79596399.00 ,
256953923.00 ,
288908514.00 ,
115756796.00 ,
3490583.00 ,
115756819.00 ,
115756807.00 ,
15599133.00 ,
115756843.00 ,
115756852.00 ,
115756861.00 ,
115756828.00 ,
115756836.00 ,
3490674.00 ,
3802511.00 ,
25122893.00 ,
268765427.00 ,
3490676.00 ,
115756916.00 ,
25122883.00 ,
545094568.00 ,
545094618.00 ,
130936304.00 ,
130936316.00 ,
497276947.00 ,
135815968.00 ,
115756899.00 ,
115756908.00 ,
497277365.00 ,
135816157.00 ,
115756882.00 ,
115756892.00 ,
544930091.00 ,
545045606.00 ,
545075012.00 ,
3490685.00 ,
25122903.00 ,
549758119.00 ,
549758221.00 ,
135852870.00 ,
135852880.00 ,
222964990.00 ,
222964972.00 ,
7441656.00 ,
550053882.00 ,
3490622.00 ,
319836167.00 ,
65841387.00 ,
266256306.00 ,
3490701.00 ,
549694693.00 ,
3490695.00 ,
290315584.00 ,
3490699.00 ,
319836909.00 ,
28258707.00 ,
14627818.00 ,
14628010.00 ,
544945233.00 ,
545046342.00 ,
545079390.00 ,
14628036.00 ,
549758497.00 ,
549758556.00 ,
266244877.00 ,
266244871.00 ,
550137079.00 ,
14628255.00 ,
14628525.00 ,
131437517.00 ,
268764931.00 ,
266244316.00 ,
291184477.00 ,
291185051.00 ,
14628833.00 ,
132992822.00 ,
719709983.00 ,
135816167.00 ,
135816184.00 ,
181731090.00 ,
293402001.00 ,
8584865.00 ,
3490657.00 ,
550112996.00 ,
550113020.00 ,
550113044.00 ,
291181406.00 ,
291181602.00 ,
289450719.00 ,
3490713.00 ,
288888905.00 ,
7441674.00 ,
288893002.00 ,
18123074.00 ,
18123341.00 ,
3490725.00 ) ) AND (O.ORDER_STATUS_CD IN (2546 ,
2547 ,
2548 ,
2549 ,
2550 ,
643466 ,
2551 ,
2553 ) ) AND (O.TEMPLATE_ORDER_ID = 0 ) )
AND (E
WHERE (O.ENCNTR_ID = E.ENCNTR_ID ) AND (E.LOC_FACILITY_CD IN ($FACILITY ) ) )
AND (EN
WHERE (O.ENCNTR_ID = EN.ENCNTR_ID ) )
AND (EA
WHERE (EN.ENCNTR_ID = EA.ENCNTR_ID ) AND (EA.ACTIVE_IND = 1 ) AND (EA.END_EFFECTIVE_DT_TM >
CNVTDATETIME (CURDATE ,CURTIME ) ) AND (EA.ENCNTR_ALIAS_TYPE_CD = 1077.0 ) )
AND (EA1
WHERE (EN.ENCNTR_ID = EA1.ENCNTR_ID ) AND (EA1.ACTIVE_IND = 1 ) AND (EA1.END_EFFECTIVE_DT_TM >
CNVTDATETIME (CURDATE ,CURTIME ) ) AND (EA1.ENCNTR_ALIAS_TYPE_CD = 1079.00 ) )
AND (P
WHERE (O.PERSON_ID = P.PERSON_ID ) )
AND (D6 )
AND (ORD
WHERE (OUTERJOIN (O.ENCNTR_ID ) = ORD.ENCNTR_ID ) AND (ORD.CATALOG_CD = 3512742 ) )
AND (D7 )
AND (ODRDE
WHERE (ODRDE.ORDER_ID = ORD.ORDER_ID ) AND (ODRDE.OE_FIELD_MEANING = "ISOLATIONCODE" ) AND (
ODRDE.UPDT_DT_TM IN (
(SELECT
MAX (UPDT_DT_TM )
FROM (ORDER_DETAIL ODRDEMAX )
WHERE (ODRDE.ORDER_ID = ODRDEMAX.ORDER_ID ) AND (ODRDEMAX.OE_FIELD_MEANING = "ISOLATIONCODE" ) ) )
) )
AND (D1 )
AND (OD
WHERE (OUTERJOIN (O.ORDER_ID ) = OD.ORDER_ID ) AND (OD.OE_FIELD_MEANING = "FREQ" ) AND (
OD.UPDT_DT_TM IN (
(SELECT
MAX (UPDT_DT_TM )
FROM (ORDER_DETAIL ODMAX )
WHERE (OD.ORDER_ID = ODMAX.ORDER_ID ) AND (ODMAX.OE_FIELD_MEANING = "FREQ" ) ) ) ) )
AND (D2 )
AND (ODR
WHERE (OUTERJOIN (O.ORDER_ID ) = ODR.ORDER_ID ) AND (ODR.OE_FIELD_MEANING = "SCH/PRN" ) AND (
ODR.UPDT_DT_TM IN (
(SELECT
MAX (UPDT_DT_TM )
FROM (ORDER_DETAIL ODRMAX )
WHERE (ODR.ORDER_ID = ODRMAX.ORDER_ID ) AND (ODRMAX.OE_FIELD_MEANING = "SCH/PRN" ) ) ) ) )
AND (D4 )
AND (ODRDER
WHERE (OUTERJOIN (O.ORDER_ID ) = ODRDER.ORDER_ID ) AND (ODRDER.OE_FIELD_MEANING = "SPECINX" ) AND (
ODRDER.UPDT_DT_TM IN (
(SELECT
MAX (UPDT_DT_TM )
FROM (ORDER_DETAIL ODRDERMAX )
WHERE (ODRDER.ORDER_ID = ODRDERMAX.ORDER_ID ) AND (ODRDERMAX.OE_FIELD_MEANING = "SPECINX" ) ) ) ) )
ORDER BY O.ENCNTR_ID ,
O.ORDER_ID
HEAD REPORT
DATA->QUAL_CNT = 0
HEAD E.ENCNTR_ID
DATA->QUAL_CNT = (DATA->QUAL_CNT + 1 ) ,STAT = ALTERLIST (DATA->QUAL ,DATA->QUAL_CNT ) ,DATA->QUAL[
DATA->QUAL_CNT ]->ENCNTR_ID = O.ENCNTR_ID ,DATA->QUAL[DATA->QUAL_CNT ]->AGE = CNVTAGE (
P.BIRTH_DT_TM ) ,DATA->QUAL[DATA->QUAL_CNT ]->DOB = FORMAT (P.BIRTH_DT_TM ,"@SHORTDATE" ) ,DATA->
QUAL[DATA->QUAL_CNT ]->FIN = EA.ALIAS ,DATA->QUAL[DATA->QUAL_CNT ]->MRN = EA1.ALIAS ,DATA->QUAL[DATA
->QUAL_CNT ]->NAME = P.NAME_FULL_FORMATTED ,DATA->QUAL[DATA->QUAL_CNT ]->PERSON_ID = P.PERSON_ID ,
DATA->QUAL[DATA->QUAL_CNT ]->RFV = EN.REASON_FOR_VISIT ,DATA->QUAL[DATA->QUAL_CNT ]->SEX =
UAR_GET_CODE_DISPLAY (P.SEX_CD ) ,DATA->QUAL[DATA->QUAL_CNT ]->UNIT =
IF ((E.LOC_NURSE_UNIT_CD IN (540556926.00 ,
540546277.00 ,
43199228.00 ,
731364612.00 ,
540553379.00 ,
540574922.00 ) ) ) "ED/OBS"
ELSEIF ((E.LOC_NURSE_UNIT_CD IN (11004468.00 ,
177886319.00 ,
177893453.00 ,
177890657.00 ,
179653105.00 ,
177894544.00 ,
177892486.00 ,
3186601.00 ,
3186602.00 ,
3186600.00 ) ) ) "2ND LUTHER"
ELSEIF ((E.LOC_NURSE_UNIT_CD IN (3186524.00 ,
731831419.00 ,
10697808.00 ,
3186645.00 ,
3186674.00 ) ) ) "NEURO/BH"
ELSEIF ((E.LOC_NURSE_UNIT_CD IN (683731.00 ,
28026680.00 ,
28026679.00 ) ) ) "CCU"
ELSEIF ((E.LOC_NURSE_UNIT_CD IN (172222695.00 ,
172221055.00 ) ) ) "3RD LUTHER"
ELSEIF ((E.LOC_NURSE_UNIT_CD IN (172225126.00 ,
172223946.00 ) ) ) "4TH LUTHER"
ELSE UAR_GET_CODE_DISPLAY (E.LOC_NURSE_UNIT_CD )
ENDIF
,DATA->QUAL[DATA->QUAL_CNT ]->ROOM = UAR_GET_CODE_DISPLAY (E.LOC_ROOM_CD ) ,DATA->QUAL[DATA->
QUAL_CNT ]->ISOL = SUBSTRING (1 ,11 ,ODRDE.OE_FIELD_DISPLAY_VALUE ) ,DATA->QUAL[DATA->QUAL_CNT ]->
ORD_CNT = 0
DETAIL
DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT = (DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT + 1 ) ,
STAT = ALTERLIST (DATA->QUAL[DATA->QUAL_CNT ]->ORD ,DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->NAME = SUBSTRING (1 ,90 ,
O_CATALOG_DISP ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->FREQ = SUBSTRING (1 ,9 ,
OD.OE_FIELD_DISPLAY_VALUE ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->ORDER_ID = O.ORDER_ID ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->DETS = TRIM (REPLACE (
O.CLINICAL_DISPLAY_LINE ,BUILD (TRIM (SUBSTRING (1 ,9 ,OD.OE_FIELD_DISPLAY_VALUE ) ,3 ) ,"," ) ," "
) ,3 ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->SPE_INS = SUBSTRING (1 ,
120 ,ODRDER.OE_FIELD_DISPLAY_VALUE ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->PRN = SUBSTRING (1 ,4 ,
ODR.OE_FIELD_DISPLAY_VALUE ) ,
DATA->QUAL[DATA->QUAL_CNT ]->ORD[DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ]->SORT =
IF ((((ODR.OE_FIELD_ID = NULL ) ) OR ((ODR.OE_FIELD_DISPLAY_VALUE = "No" ) )) ) 1
ELSE 2
ENDIF
FOOT  E.ENCNTR_ID
IF ((MAXORDERCNT < DATA->QUAL[DATA->QUAL_CNT ]->ORD_CNT ) ) MAXORDERCNT = DATA->QUAL[DATA->QUAL_CNT
]->ORD_CNT
ENDIF
WITH MAXREC = 1000 ,MAXCOL = 300 ,MAXROW = 500 ,DONTCARE = ORD ,DONTCARE = ODRDE ,DONTCARE = OD ,
DONTCARE = ODR ,DONTCARE = ODRDER ,OUTERJOIN = D7 ,OUTERJOIN = D6 ,OUTERJOIN = D4 ,OUTERJOIN = D2 ,
OUTERJOIN = D1 ,DIO = 08 ,NOHEADING ,FORMAT = VARIABLE ,TIME = VALUE (MAXSECS )
SELECT INTO "nl:"
FROM (DUMMYT D WITH SEQ = DATA->QUAL_CNT ) ,
(DIAGNOSIS DX )
PLAN (D )
AND (DX
WHERE (DATA->QUAL[D.SEQ ]->ENCNTR_ID = DX.ENCNTR_ID ) AND (DX.ACTIVE_IND = 1 ) AND (
DX.END_EFFECTIVE_DT_TM > CNVTDATETIME (CURDATE ,CURTIME ) ) AND (DX.DIAG_CLASS_CD = 674232.00 ) )
ORDER BY DX.ENCNTR_ID
HEAD DX.ENCNTR_ID
GETONE = 0
DETAIL
IF ((GETONE = 0 ) ) DIAG_DISP = TRIM (DX.DIAGNOSIS_DISPLAY ,3 )
ELSE DIAG_DISP = BUILD (DIAG_DISP ,TRIM (DX.DIAGNOSIS_DISPLAY ,3 ) )
ENDIF
FOOT  DX.ENCNTR_ID
DATA->QUAL[D.SEQ ]->DX = DIAG_DISP
WITH NOCOUNTER
SELECT INTO "nl:"
FROM (DUMMYT D WITH SEQ = DATA->QUAL_CNT ) ,
(ENCNTR_PRSNL_RELTN EPR ) ,
(PRSNL P )
PLAN (D )
AND (EPR
WHERE (EPR.ENCNTR_ID = DATA->QUAL[D.SEQ ]->ENCNTR_ID ) AND (EPR.ACTIVE_IND = 1 ) AND (
EPR.END_EFFECTIVE_DT_TM > CNVTDATETIME (CURDATE ,CURTIME ) ) AND (EPR.ENCNTR_PRSNL_R_CD = 1119.00 )
)
AND (P
WHERE (EPR.PRSNL_PERSON_ID = P.PERSON_ID ) )
DETAIL
DATA->QUAL[D.SEQ ]->ATTENDING = P.NAME_FULL_FORMATTED
WITH NOCOUNTER
SELECT INTO "nl:"
FROM (DUMMYT D WITH SEQ = DATA->QUAL_CNT ) ,
(ENCNTR_PRSNL_RELTN EPR ) ,
(PRSNL P )
PLAN (D )
AND (EPR
WHERE (EPR.ENCNTR_ID = DATA->QUAL[D.SEQ ]->ENCNTR_ID ) AND (EPR.ACTIVE_IND = 1 ) AND (
EPR.END_EFFECTIVE_DT_TM > CNVTDATETIME (CURDATE ,CURTIME ) ) AND (EPR.ENCNTR_PRSNL_R_CD = 1121.00 )
)
AND (P
WHERE (EPR.PRSNL_PERSON_ID = P.PERSON_ID ) )
DETAIL
DATA->QUAL[D.SEQ ]->CONSULTING = P.NAME_FULL_FORMATTED
WITH NOCOUNTER
SELECT INTO "nl:"
FROM (DUMMYT D WITH SEQ = DATA->QUAL_CNT ) ,
(PROBLEM P ) ,
(NOMENCLATURE N )
PLAN (D )
AND (P
WHERE (DATA->QUAL[D.SEQ ]->PERSON_ID = P.PERSON_ID ) AND (P.ACTIVE_IND = 1 ) AND (
P.END_EFFECTIVE_DT_TM > CNVTDATETIME (CURDATE ,CURTIME ) ) AND (P.ACTIVE_STATUS_CD = 188 ) )
AND (N
WHERE (P.NOMENCLATURE_ID = N.NOMENCLATURE_ID ) AND (N.SOURCE_IDENTIFIER IN ("496" ,
"428" ,
"493" ,
"480*" ,
"481*" ,
"482*" ,
"483*" ,
"484*" ,
"486*" ,
"135" ,
"514" ,
"425*" ,
"512" ,
"466*" ,
"490*" ,
"491*" ,
"493*" ,
"496*" ,
"327.23" ,
"515" ,
"162.9" ,
"518*" ,
"416.9" ,
"518.89" ,
"516.8" ,
"466.19" ,
"464.4" ,
"493.90" ) ) )
ORDER BY P.PERSON_ID
HEAD P.PERSON_ID
GETONE = 0
DETAIL
IF ((GETONE = 0 ) ) PROB_DISP = TRIM (N.MNEMONIC ,3 ) ,GETONE = 1
ELSE PROB_DISP = BUILD (PROB_DISP ,TRIM (N.MNEMONIC ,3 ) )
ENDIF
FOOT  P.PERSON_ID
DATA->QUAL[D.SEQ ]->PROBLEMS = PROB_DISP
WITH NOCOUNTER
SELECT INTO "nl:"
FROM (DUMMYT D WITH SEQ = DATA->QUAL_CNT ) ,
(ORDERS O ) ,
(ORDER_DETAIL OD )
PLAN (D )
AND (O
WHERE (DATA->QUAL[D.SEQ ]->ENCNTR_ID = O.ENCNTR_ID ) AND (O.CATALOG_CD = 2958523.00 ) AND (
O.ACTIVE_IND = 1 ) AND (O.ORDER_STATUS_CD = 2550.00 ) )
AND (OD
WHERE (OD.ORDER_ID = O.ORDER_ID ) AND (OD.OE_FIELD_MEANING_ID = 229.00 ) )
DETAIL
DATA->QUAL[D.SEQ ]->RES_STATUS = OD.OE_FIELD_DISPLAY_VALUE
WITH NOCOUNTER
IF (($EXCEL = 2 ) )
SELECT INTO $1
QUAL_NAME = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->NAME ) ,
QUAL_DOB = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->DOB ) ,
QUAL_AGE = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->AGE ) ,
QUAL_FIN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->FIN ) ,
QUAL_MRN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->MRN ) ,
QUAL_SEX = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->SEX ) ,
QUAL_RFV = SUBSTRING (1 ,130 ,DATA->QUAL[D1.SEQ ]->RFV ) ,
QUAL_UNIT = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->UNIT ) ,
QUAL_ISOL = SUBSTRING (1 ,7 ,DATA->QUAL[D1.SEQ ]->ISOL ) ,
QUAL_ROOM = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->ROOM ) ,
QUAL_DX = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->DX ) ,
QUAL_ATTENDING = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->ATTENDING ) ,
QUAL_CONSULTING = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->CONSULTING ) ,
QUAL_PROBLEMS = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->PROBLEMS ) ,
QUAL_RES_STATUS = SUBSTRING (1 ,7 ,DATA->QUAL[D1.SEQ ]->RES_STATUS ) ,
ORD_NAME = SUBSTRING (1 ,150 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->NAME ) ,
ORD_DETS = SUBSTRING (23 ,150 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->DETS ) ,
ORD_DETS1 = SUBSTRING (173 ,83 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->DETS ) ,
ORD_PRN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->PRN ) ,
ORD_SORT = DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->SORT ,
ORD_FREQ = SUBSTRING (1 ,20 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->FREQ ) ,
ORD_SPE_INS = SUBSTRING (1 ,100 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->SPE_INS )
FROM (DUMMYT D1 WITH SEQ = VALUE (SIZE (DATA->QUAL ,5 ) ) ) ,
(DUMMYT D2 WITH SEQ = MAXORDERCNT )
PLAN (D1 )
AND (D2
WHERE (D2.SEQ <= DATA->QUAL[D1.SEQ ]->ORD_CNT ) )
ORDER BY QUAL_UNIT ,
QUAL_ROOM ,
QUAL_NAME ,
ORD_SORT
HEAD REPORT
LINE = FILLSTRING (250 ,"-" ) ,
DASH_LINE = CONCAT ("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - " ,
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - " ,
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - " ,
"- - - - - - - - - - - - - - - - - - - - - - - - - - - -" ) ,
DBL_LINE = FILLSTRING (150 ,"=" ) ,
X_POS = 0 ,
Y_POS = 0 ,
X_OFFSET = 0 ,
Y_OFFSET = 0 ,
A_POS = 30 ,
B_POS = (A_POS + 91 ) ,
C_POS = 216 ,
D_POS = 396 ,
E_POS = 160 ,
F_POS = 180 ,
G_POS = (F_POS + 10 ) ,
H_POS = 250 ,
I_POS = 290 ,
J_POS = 576 ,
K_POS = 300 ,
L_POS = 650 ,
M_POS = 130 ,
N_POS = 316 ,
O_POS = 416 ,
P_POS = 516 ,
Q_POS = 591 ,
R_POS = 656 ,
HEADER_TOP_POS = 18 ,
PAGE_NO_POS = 648 ,
REPORT_DT_POS = 72 ,
TOP_BOX_POS = 400 ,
TOP_RES_POS = 536 ,
TOP_LEG_POS = 80 ,
OFFSET = 3 ,
HALF_LINE = 6 ,
MID_LINE = 9 ,
1_LINE = 12 ,
1_5_LINE = 18 ,
2_LINE = 24 ,
3_LINE = 36 ,
CURRENT_ROW_KNT = 0 ,
"{f/8}{cpi/15}" ,
"{PS/792 0 translate 90 rotate/}" ,
MACRO (ADD_ROW_CHECK )
CURRENT_ROW_KNT = (CURRENT_ROW_KNT + 1 ) ,
IF ((Y_POS > 530 ) ) BREAK,Y_POS = (Y_POS + 1_LINE ) ,X_POS = A_POS
ENDIF
ENDMACRO
,
MACRO (PRINT_LINE )
X_POS = A_POS ,
Y_POS = (Y_POS + HALF_LINE ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
LINE ,
ROW + 1 ,
Y_POS = (Y_POS + HALF_LINE )
ENDMACRO
,
MACRO (PRINT_DASH_LINE )
X_POS = A_POS ,
Y_POS = (Y_POS + HALF_LINE ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
DASH_LINE ,
ROW + 1 ,
Y_POS = (Y_POS + HALF_LINE )
ENDMACRO
,
MACRO (PRINT_DBL_LINE )
X_POS = A_POS ,
Y_POS = (Y_POS + HALF_LINE ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
DBL_LINE ,
ROW + 1 ,
Y_POS = (Y_POS + HALF_LINE )
ENDMACRO
HEAD PAGE
IF ((CURPAGE > 1 ) ) "{PS/792 0 translate 90 rotate/}" ,ROW + 1
ENDIF
,
X_POS = A_POS ,
Y_POS = HEADER_TOP_POS ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
"{b}Page {endb} " ,
CURPAGE ,
ROW + 1 ,
Y_POS = (Y_POS + MID_LINE ) ,
X_POS = C_POS ,
Y_POS = HEADER_TOP_POS ,
RNAME = "Active RT Orders Report" ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
"{b}" ,
RNAME ,
"{endb} " ,
X_POS = D_POS ,
DATE_DISP = FORMAT (CNVTDATETIME (CURDATE ,CURTIME ) ,"@SHORTDATETIME" ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
"{b}Run Date/Time: {endb} " ,
DATE_DISP ,
ROW + 1 ,
X_POS = A_POS ,
Y_POS = (Y_POS + 1_LINE ) ,
ROW + 1
HEAD QUAL_UNIT
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}" ,QUAL_UNIT ,"{endb} " ,Y_POS = (Y_POS + 1_LINE ) ,ROW
+ 1 ,PRINT_LINE ,Y_POS = (Y_POS + 1_LINE ) ,ROW + 1
HEAD QUAL_NAME
IF (((ROW + 7 ) >= MAXROW ) ) BREAK
ENDIF
,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,DISP1 = BUILD ("{b}" ,QUAL_ROOM ,"{endb}" ) ,DISP1 ,X_POS = (
X_POS + 35 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,DISP2 = BUILD ("{b}" ,QUAL_NAME ,"{endb}" ) ,DISP2 ,X_POS = (
X_POS + 140 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,QUAL_AGE ,X_POS = (X_POS + 55 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}Attending: {endb} " ,QUAL_ATTENDING ,X_POS = (X_POS +
175 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}Reason For Visit: {endb} " ,QUAL_RFV ,Y_POS = (Y_POS +
1_LINE ) ,ROW + 1 ,X_POS = A_POS ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}" ,QUAL_ISOL ,X_POS = (X_POS + 35 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"FIN# " ,QUAL_FIN ,X_POS = (X_POS + 70 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"MR- " ,QUAL_MRN ,X_POS = (X_POS + 70 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"DOB-" ,QUAL_DOB ,X_POS = (X_POS + 55 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"Consulting: {endb} " ,QUAL_CONSULTING ,X_POS = (X_POS + 175
) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}Problems: {endb} " ,QUAL_PROBLEMS ,Y_POS = (Y_POS +
1_LINE ) ,ROW + 1 ,X_POS = A_POS ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}" ,QUAL_RES_STATUS ,Y_POS = (Y_POS + 1_LINE ) ,ROW + 1 ,
PRINT_DASH_LINE
HEAD ORD_SORT
X_POS = (A_POS + 4 ) ,
IF ((ORD_SORT = 1 ) )
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}SCHD {endb}"
ELSE
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,"{b}PRN {endb}"
ENDIF
DETAIL
X_POS = (A_POS + 45 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
ORD_NAME ,
X_POS = (X_POS + 200 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
ORD_FREQ ,
X_POS = (X_POS + 75 ) ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
ORD_DETS ,
X_POS = A_POS ,
Y_POS = (Y_POS + 1_LINE ) ,
ROW + 1
FOOT  ORD_SORT
X_POS = A_POS ,
IF ((ORD_SORT = 1 ) ) PRINT_LINE
ELSE PRINT_LINE
ENDIF
FOOT  QUAL_UNIT
BREAK
FOOT PAGE
X_POS = A_POS ,
Y_POS = (Y_POS + 1_LINE ) ,
ROW + 1
FOOT REPORT
X_POS = A_POS ,
Y_POS = (Y_POS + 1_LINE ) ,
ROW + 1 ,
CALL PRINT (CALCPOS (X_POS ,Y_POS ) ) ,
"{b}" ,
"Total Pages: " ,
CURPAGE ,
"{endb}"
WITH NOCOUNTER ,FORMAT ,SEPARATOR = " " ,LANDSCAPE ,DIO = POSTSCRIPT ,MAXROW = 49 ,MAXCOL = 900 ,
SKIPREPORT = 0
ELSE
	SELECT INTO $1
		QUAL_NAME = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->NAME ) ,
		QUAL_DOB = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->DOB ) ,
		QUAL_AGE = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->AGE ) ,
		QUAL_FIN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->FIN ) ,
		QUAL_MRN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->MRN ) ,
		QUAL_SEX = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->SEX ) ,
		QUAL_RFV = SUBSTRING (1 ,130 ,DATA->QUAL[D1.SEQ ]->RFV ) ,
		QUAL_UNIT = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->UNIT ) ,
		QUAL_ISOL = SUBSTRING (1 ,30 ,DATA->QUAL[D1.SEQ ]->ISOL ) ,
		QUAL_ROOM = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->ROOM ) ,
		QUAL_DX = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->DX ) ,
		QUAL_ATTENDING = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->ATTENDING ) ,
		QUAL_CONSULTING = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->CONSULTING ) ,
		QUAL_PROBLEMS = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->PROBLEMS ) ,
		QUAL_RES_STATUS = SUBSTRING (1 ,50 ,DATA->QUAL[D1.SEQ ]->RES_STATUS ) ,
		ORD_NAME = SUBSTRING (1 ,150 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->NAME ) ,
		ORD_PRN = SUBSTRING (1 ,10 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->PRN ) ,
		ORD_SORT = DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->SORT ,
		ORD_FREQ = SUBSTRING (1 ,20 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->FREQ ) ,
		ORD_SPE_INS = SUBSTRING (1 ,100 ,DATA->QUAL[D1.SEQ ]->ORD[D2.SEQ ]->SPE_INS )
	FROM (DUMMYT D1 WITH SEQ = VALUE (SIZE (DATA->QUAL ,5 ) ) ) ,
		(DUMMYT D2 WITH SEQ = 1 )
	PLAN (D1
;	WHERE (D2.SEQ = VALUE (SIZE (DATA->QUAL[D1.SEQ ]->ORD ,5 ) ) ) )
	WHERE MAXREC(D2 , SIZE (DATA->QUAL[D1.SEQ ]->ORD ,5 ) ) ) 
	AND (D2 )
	ORDER BY QUAL_UNIT ,
	QUAL_ROOM ,
	QUAL_NAME ,
	ORD_SORT
	WITH NOCOUNTER ,FORMAT ,SEPARATOR = " "
ENDIF
CALL ECHORECORD (DATA )
END GO
