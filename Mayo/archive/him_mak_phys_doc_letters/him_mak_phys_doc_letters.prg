/**************************************************************************
                      MODIFICATION CONTROL LOG                 *
**************************************************************************
 Mod Date     Engineer      Comment
 --- -------- ------------  ---------------------------------------
 000 06/07/12 Akcia - SE    translated copy of Cerner's HIM_MAK_PHYSICIAN_LETTERS
 001 06/07/12 Akcia - SE    make multiple enhancements per cab 16417
 
*************************************************************************/
DROP PROGRAM   HIM_MAK_PHYS_DOC_LETTERS : DBA  GO
CREATE PROGRAM  HIM_MAK_PHYS_DOC_LETTERS : DBA
 
FREE SET TEXT_REPLY
 
RECORD  TEXT_REPLY  (
1  TEXT_REPLY_QUAL [*]
2  TEXT  =  VC )
 
FREE SET ADDRESS_REPLY
 
RECORD  ADDRESS_REPLY  (
1  ADDRESS_QUAL [*]
2  PHYSICIAN_ID  =  F8
2  PHYSICIAN_NAME  =  VC
2  PHYSICIAN_LAST_NAME  =  C25
2  ADDRESS1  =  C43
2  ADDRESS2  =  VC
2  ADDRESS3  =  VC
2  ADDRESS4  =  VC
2  CITY_LINE  =  C78
2  PHONE_NUM  =  C20
2  FAX_NUM  =  C20
2  LICENSE_NBR  =  C20 )
 
IF ( ( VALIDATE ( REPLY -> STATUS_DATA -> STATUS , "Z" )="Z" ) )
FREE SET REPLY
RECORD  REPLY  (
1  REPLY_QUAL [*]
2  PHYSICIAN_ID  =  F8
2  PHYSICIAN_NAME  =  VC
2  ON_HOLD  =  I2
2  DETAIL_QUAL [*]
3  ENCNTR_ID  =  F8
3  ORGANIZATION_ID  =  F8
3  ORGANIZATION_NAME  =  C50
3  PATIENT_ID  =  C20
3  PAT_MRN  =  C20
3  FIN_NBR  =  C20
3  PATIENT_NAME  =  C16
;001 3  DOCUMENT  =  C15
;001 3  DEFICIENCY  =  C15
3  DOCUMENT  =  C25		;001
3  DEFICIENCY  =  C25	;001
3  DEFICIENCY_CD  =  F8
3  DISCH_DATE  =  DQ8
3  ALLOC_DATE  =  DQ8
3  ADMIT_DATE  =  DQ8
;001 3  PATIENT_TYPE  =  C12
3  PATIENT_TYPE  =  C25		;001
3  DEF_AGE  =  I2
3  ON_HOLD  =  I2
1  FILE_NAME  =  VC
1  STATUS_DATA
2  STATUS  =  C1
2  SUBEVENTSTATUS [1 ]
3  OPERATIONNAME  =  C25
3  OPERATIONSTATUS  =  C1
3  TARGETOBJECTNAME  =  C25
3  TARGETOBJECTVALUE  =  VC )
ENDIF
 
 
FREE SET TEMP
 
RECORD  TEMP  (
1  REPLY_QUAL [*]
2  PHYSICIAN_ID  =  F8
2  PHYSICIAN_NAME  =  VC
2  ORG_SUSP_QUAL [*]
3  ORGANIZATION_ID  =  F8
3  SUSPENSION_DT_TM  =  DQ8
3  SUSPENSION_TZ  =  I4
2  SUSPENSION_FLAG  =  I2
2  DETAIL_QUAL [*]
3  ENCNTR_ID  =  F8
3  ORGANIZATION_ID  =  F8
3  ORGANIZATION_NAME  =  C50
3  PATIENT_ID  =  C20
3  PAT_MRN  =  C20
3  FIN_NBR  =  C20
3  PATIENT_NAME  =  C16
;001 3  DOCUMENT  =  C15
;001 3  DEFICIENCY  =  C15
3  DOCUMENT  =  C25		;001
3  DEFICIENCY  =  C25	;001
3  DEFICIENCY_CD  =  F8
3  DISCH_DATE  =  DQ8
3  ALLOC_DATE  =  DQ8
3  ADMIT_DATE  =  DQ8
;001 3  PATIENT_TYPE  =  C12
3  PATIENT_TYPE  =  C25		;001
3  DEF_AGE  =  I2
3  ON_HOLD  =  I2 )
 
RECORD  HIM_REQUEST_STRUCT  (
1  OUTPUT_DEST_CD  =  F8
1  FILE_NAME  =  VC
1  COPIES  =  I4
1  OUTPUT_HANDLE_ID  =  F8
1  NUMBER_OF_COPIES  =  I4
1  TRANSMIT_DT_TM  =  DQ8
1  PRIORITY_VALUE  =  I4
1  REPORT_TITLE  =  VC
1  SERVER  =  VC
1  COUNTRY_CODE  =  C3
1  AREA_CODE  =  C10
1  EXCHANGE  =  C10
1  SUFFIX  =  C50 )
 
RECORD  HIM_REPLY_STRUCT  (
1  STS  =  I4
1  STATUS_DATA
2  STATUS  =  C1
2  SUBEVENTSTATUS [1 ]
3  OPERATIONNAME  =  C25
3  OPERATIONSTATUS  =  C1
3  TARGETOBJECTNAME  =  C25
3  TARGETOBJECTVALUE  =  VC )
 
DECLARE  BOUTPUTDEST  =  I2  WITH  PUBLIC , NOCONSTANT (0 )
 
DECLARE  SQUEUENAME  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  PRINT_HOLD_FILE  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  PRINT_HOLD_FILE_NAME  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  HOLD_FILE  =  VC  WITH  PROTECT , NOCONSTANT ("" )
 
IF ( ( VALIDATE ( HIM_DEFICIENCY_CDS_INCLUDED )=0 ) )
DECLARE  HIM_DEFICIENCY_CDS_INCLUDED  =  I2  WITH  PUBLIC , CONSTANT (1 )
DECLARE  PERFORM_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  SIGN_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  COSIGN_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  MODIFY_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  REQUESTED_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  PENDING_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  COMPLETED_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  INERROR_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  TRANSCRIBE_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  REQ_DICT_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  REQ_SIGN_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  PEND_SIGN_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  REQ_MOD_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  PEND_TRANS_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
DECLARE  PEND_AGE_IND  =  I2  WITH  PUBLIC , NOCONSTANT (0 )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (21 , "PERFORM" , 1 ,  PERFORM_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (21 , "SIGN" , 1 ,  SIGN_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (21 , "COSIGN" , 1 ,  COSIGN_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (21 , "MODIFY" , 1 ,  MODIFY_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (21 , "TRANSCRIBE" , 1 ,  TRANSCRIBE_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (103 , "REQUESTED" , 1 ,  REQUESTED_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (103 , "PENDING" , 1 ,  PENDING_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (103 , "INERROR" , 1 ,  INERROR_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (103 , "COMPLETED" , 1 ,  COMPLETED_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (14030 , "PEND DICT" , 1 ,  REQ_DICT_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (14030 , "EXPECT SIGN" , 1 ,  PEND_SIGN_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (14030 , "PEND SIGN" , 1 ,  REQ_SIGN_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (14030 , "PEND MODIFY" , 1 ,  REQ_MOD_CD )
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (14030 , "PEND TRANS" , 1 ,  PEND_TRANS_CD )
DECLARE  IREQ_PERFORM  =  I2  WITH  PROTECT , CONSTANT (1 )
DECLARE  IPEND_SIGN  =  I2  WITH  PROTECT , CONSTANT (2 )
DECLARE  IREQ_SIGN  =  I2  WITH  PROTECT , CONSTANT (3 )
DECLARE  IREQ_MODIFY  =  I2  WITH  PROTECT , CONSTANT (4 )
DECLARE  IUNDECLARED  =  I2  WITH  PROTECT , CONSTANT (99 )
SELECT  INTO "nl:"
FROM ( CODE_VALUE_EXTENSION  CVE )
 
WHERE (CVE.CODE_SET=14030 ) AND (CVE.CODE_VALUE= PEND_SIGN_CD ) AND (CVE.FIELD_NAME="age_ind" )
 
DETAIL
 PEND_AGE_IND = CNVTINT (CVE.FIELD_VALUE)
 WITH  NOCOUNTER
ENDIF
 
 
IF ( ( VALIDATE ( HIM_R_SYSTEM_PARAMS_INC )=0 ) )
DECLARE  HIM_R_SYSTEM_PARAMS_INC  =  I2  WITH  PUBLIC , NOCONSTANT (1 )
DECLARE  MULTIFACILITY_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  TRACKING_ORDERS_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  PENDING_SIGNS_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  VISIT_AGING_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  DOC_AGING_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  PHYS_HOLD_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  VISIT_HOLD_IND  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  DAYS_TO_DELINQ  =  I4  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  DAYS_TO_SUSPEND  =  I4  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  LOADING_LETTERS  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  LOADING_POWERVISION  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  ORDER_DELINQ_HOURS  =  I2  WITH  PROTECT , NOCONSTANT (0 )
DECLARE  ORDER_SUSP_HOURS  =  I2  WITH  PROTECT , NOCONSTANT (0 )
SELECT  INTO "nl:"
FROM ( HIM_SYSTEM_PARAMS  HP )
 
WHERE (HP.HIM_SYSTEM_PARAMS_ID>0 ) AND (HP.ACTIVE_IND=1 )
 
DETAIL
 MULTIFACILITY_IND =HP.FACILITY_LOGIC_IND,
 TRACKING_ORDERS_IND =HP.ORDER_TRACKING_IND,
 PENDING_SIGNS_IND =HP.PENDING_SIGNS_IND,
 VISIT_AGING_IND =HP.VISITAGING_IND,
 DOC_AGING_IND =HP.DOCAGING_IND,
 PHYS_HOLD_IND =HP.DOCAGING_PHYS_HOLD_IND,
 VISIT_HOLD_IND =HP.DOCAGING_VISIT_HOLD_IND,
 DAYS_TO_SUSPEND =HP.DAYS_TO_SUSPEND,
 DAYS_TO_DELINQ =HP.DAYS_TO_DELINQUENT,
 LOADING_LETTERS =HP.LOADING_LETTERS_IND,
 LOADING_POWERVISION =HP.LOADING_POWERVISION_IND,
 ORDER_DELINQ_HOURS =(HP.ORDER_DELINQUENT_DAYS*24 ),
 ORDER_SUSP_HOURS =(HP.ORDER_SUSPENSION_DAYS*24 )
 WITH  NOCOUNTER
DECLARE  HIM_MULTIFACILITY_IND  =  I2  WITH  PUBLIC , CONSTANT ( MULTIFACILITY_IND )
DECLARE  HIM_TRACKING_ORDERS_IND  =  I2  WITH  PUBLIC , CONSTANT ( TRACKING_ORDERS_IND )
DECLARE  HIM_PENDING_SIGNS_IND  =  I2  WITH  PUBLIC , CONSTANT ( PENDING_SIGNS_IND )
DECLARE  HIM_VISIT_AGING_IND  =  I2  WITH  PUBLIC , CONSTANT ( VISIT_AGING_IND )
DECLARE  HIM_DOC_AGING_IND  =  I2  WITH  PUBLIC , CONSTANT ( DOC_AGING_IND )
DECLARE  HIM_PHYS_HOLD_IND  =  I2  WITH  PUBLIC , CONSTANT ( PHYS_HOLD_IND )
DECLARE  HIM_VISIT_HOLD_IND  =  I2  WITH  PUBLIC , CONSTANT ( VISIT_HOLD_IND )
DECLARE  HIM_DAYS_TO_SUSPEND  =  I4  WITH  PUBLIC , CONSTANT ( DAYS_TO_SUSPEND )
DECLARE  HIM_DAYS_TO_DELINQ  =  I4  WITH  PUBLIC , CONSTANT ( DAYS_TO_DELINQ )
DECLARE  HIM_LOADING_LETTERS_IND  =  I2  WITH  PUBLIC , CONSTANT ( LOADING_LETTERS )
DECLARE  HIM_LOADING_PV_IND  =  I2  WITH  PUBLIC , CONSTANT ( LOADING_POWERVISION )
DECLARE  HIM_ORDER_DELINQ_HRS  =  I2  WITH  PUBLIC , CONSTANT ( ORDER_DELINQ_HOURS )
DECLARE  HIM_ORDER_SUSP_HRS  =  I2  WITH  PUBLIC , CONSTANT ( ORDER_SUSP_HOURS )
ENDIF
 
 
IF ( ( VALIDATE ( I18NUAR_DEF , 999 )=999 ) )
 CALL ECHO ("Declaring i18nuar_def" )
DECLARE  I18NUAR_DEF  =  I2  WITH  PERSIST
SET  I18NUAR_DEF  = 1
DECLARE  UAR_I18NLOCALIZATIONINIT (( P1 = I4 ), ( P2 = VC ), ( P3 = VC ), ( P4 = F8 )) =  I4  WITH
 PERSIST
DECLARE  UAR_I18NGETMESSAGE (( P1 = I4 ), ( P2 = VC ), ( P3 = VC )) =  VC  WITH  PERSIST
DECLARE  UAR_I18NBUILDMESSAGE () =  VC  WITH  PERSIST
DECLARE  UAR_I18NGETHIJRIDATE (( IMONTH = I2 ( VAL )), ( IDAY = I2 ( VAL )), ( IYEAR = I2 ( VAL )),
( SDATEFORMATTYPE = VC ( REF ))) =  C50  WITH  IMAGE_AXP ="shri18nuar" , IMAGE_AIX =
"libi18n_locale.a(libi18n_locale.o)" , UAR ="uar_i18nGetHijriDate" , PERSIST
DECLARE  UAR_I18NBUILDFULLFORMATNAME (( SFIRST = VC ( REF )), ( SLAST = VC ( REF )), ( SMIDDLE = VC
( REF )), ( SDEGREE = VC ( REF )), ( STITLE = VC ( REF )), ( SPREFIX = VC ( REF )), ( SSUFFIX = VC (
 REF )), ( SINITIALS = VC ( REF )), ( SORIGINAL = VC ( REF ))) =  C250  WITH  IMAGE_AXP =
"shri18nuar" , IMAGE_AIX ="libi18n_locale.a(libi18n_locale.o)" , UAR ="i18nBuildFullFormatName" ,
 PERSIST
DECLARE  UAR_I18NGETARABICTIME (( CTIME = VC ( REF ))) =  C20  WITH  IMAGE_AXP ="shri18nuar" ,
 IMAGE_AIX ="libi18n_locale.a(libi18n_locale.o)" , UAR ="i18n_GetArabicTime" , PERSIST
ENDIF
 
 
DECLARE  I18NHANDLE  =  I4  WITH  PUBLIC , NOCONSTANT (0 )
 
SET  STAT  =  UAR_I18NLOCALIZATIONINIT ( I18NHANDLE ,  CURPROG , "" ,  CURCCLREV )
 
DECLARE  I18NLICNOLABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"NO: " , "NO:" ))
 
DECLARE  I18NTELLABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "TEL: "
, "TEL:" ))
 
DECLARE  I18NFAXLABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "FAX: "
, "FAX:" ))
 
DECLARE  I18NDEARDRLABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"Dear Dr." , "Dear Dr." ))
 
DECLARE  I18NPAGELABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "Page"
, "Page" ))
 
DECLARE  I18NFACILITY  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"Facility:" , "Facility:" ))
 
DECLARE  I18NPATIENT  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"PATIENT" , "PATIENT" ))
 
DECLARE  I18NADMISSION  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"ADMISSION" , "ADMISSION" ))
 
DECLARE  I18NADMIT  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "ADMIT" ,
"ADMIT" ))
 
DECLARE  I18NDISCHARGE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,	;001
"DISCHARGE" , "DISCHARGE" ))																	;001
 
DECLARE  I18NALLOCATION  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"ALLOCATION" , "ALLOCATION" ))
 
DECLARE  I18NALLOC  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "ALLOC" ,
"ALLOC" ))
 
DECLARE  I18NDEFIC  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "DEFIC" ,
"DEFIC" ))
 
;001  DECLARE  I18NMRN  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "MRN" ,"MRN" ))
 DECLARE  I18NFIN  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "FIN" ,"FIN" ))	  ;001
 
DECLARE  I18NNAME  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "NAME" ,
"NAME" ))
 
DECLARE  I18NPATIENTNAME  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"PATIENT NAME" , "PATIENT NAME" ))
 
DECLARE  I18NDOCUMENT  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"DOCUMENT" , "DOCUMENT" ))
 
DECLARE  I18NDEFICIENCY  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"DEFICIENCY" , "DEFICIENCY" ))
 
DECLARE  I18NSTATUS  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "STATUS"
, "STATUS" ))
 
DECLARE  I18NPATIENTTYPE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,			;001
"PATIENT TYPE" , "PATIENT TYPE" ))																		;001
 
DECLARE  I18NDATE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "DATE" ,
"DATE" ))
 
DECLARE  I18NAGE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE , "AGE" ,
"AGE" ))
 
DECLARE  I18NHOLDFLAG  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"HoldFlag" , "#" ))
 
DECLARE  I18NHOLDLABEL  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"HoldLabel" , "- chart on hold at time of printing" ))
 
DECLARE  I18NQUALDEFZERO  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"QualDefZero" , "Qualified deficiencies have an age greater than zero." ))
 
DECLARE  I18NEMAILFORMATNOTE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"EmailFontNote" ,
"(Note:  For best results, use Courier New, 8-point font when you view or print this message.)" ))
 
DECLARE  ORG_SIZE  =  I4  WITH  PROTECT , NOCONSTANT
 
SET  ORG_SIZE  =  SIZE ( REQUEST -> ORG_QUAL , 5 )
 
DECLARE  CITY_LINE  =  VC  WITH  PROTECT , NOCONSTANT ( FILLSTRING (78 , " " ))
 
DECLARE  DASH  =  VC  WITH  PROTECT , NOCONSTANT ( FILLSTRING (132 , "-" ))
 
DECLARE  DASH_EMAIL  =  VC  WITH  PUBLIC , CONSTANT ( FILLSTRING (114 , "-" ))
 
DECLARE  LINE_CNT  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  TEXT_CNT  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  ADDRESS_CNT  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  PAGE_NUM  =  I2  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  PAGE_NUM_FMT  =  VC  WITH  PROTECT , NOCONSTANT ("  " )
 
DECLARE  PAGE_TOP  =  C1  WITH  PROTECT , NOCONSTANT ("N" )
 
DECLARE  COUNT1  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  COUNT2  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  COUNT3  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  COUNT4  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  X  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  Y  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  Z  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  D  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  CHART_AGES  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  PRINT_LETTER  =  C1  WITH  PROTECT , NOCONSTANT ("N" )
 
DECLARE  PREV_ENCNTR_ID  =  F8  WITH  PROTECT , NOCONSTANT (0.0 )
 
DECLARE  END_PHYSICIAN  =  C1  WITH  PROTECT , NOCONSTANT ("N" )
 
DECLARE  PRSNL_TYPE_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  PROFILE_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  BUSINESS_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  PHONE_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  FAX_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  LETTER_TYPE_CD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  LINE  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  LINE_TEMP  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  MSEMAILTEXT  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
 EXECUTE PREFRTL
 
DECLARE  SFORMATDISTTYPEAVAIL (( P_SDISTTYPE = VC )) =  VC
 
DECLARE  BVALIDDISTTYPEPREF (( P_SDISTTYPE = VC )) =  I4
 
DECLARE  ADDCONTEXTID_LETTERSDIST (( P_SCTXIDSPARSEROOT = VC ), ( P_LCTXID = I4 ), ( P_SCONTEXTID =
 VC )) =  I4
 
DECLARE  BISITEMVALUESAVAIL (( P_SVALUESPARSEROOT = VC ), ( P_SVALUE = VC )) =  I4
 
DECLARE  PROCESSPREFNEWCHANGES (( P_SPRSNLQUALROOT = VC ), ( P_SPROCESSMODE = VC ), ( P_BLOADPREF =
 I2 ), ( P_SLOADALLFLAG = VC ), ( P_NLOADALLPHYSICIANIND = I2 )) =  I4
 
DECLARE  GETEMAILFORMATMSGPREF (( PR_SEMAILFORMATMSGPREF = VC ( REF )), ( NDEBUGIND = I2 )) =  I4
 
IF ( ( VALIDATE ( MBPREF_LETTERS_DIST_INCLUDED ,  FALSE )= TRUE ) )  GO TO
 HIM_PREF_LETTERS_DIST_SUBS
ENDIF
 
 
DECLARE  MBPREF_LETTERS_DIST_INCLUDED  =  I4  WITH  PUBLIC , CONSTANT ( TRUE )
 
DECLARE  MSPREF_CONTEXT_USER  =  VC  WITH  PUBLIC , CONSTANT ("user" )
 
DECLARE  MSPREF_SECTION_HIM_MODULE  =  VC  WITH  PUBLIC , CONSTANT ("him_module" )
 
DECLARE  MSPREF_SECT_ID_DEFICIENCY  =  VC  WITH  PUBLIC , CONSTANT ("deficiency" )
 
DECLARE  MSPREF_ENTRY_LETTERS_DIST  =  VC  WITH  PUBLIC , CONSTANT ("letters_dist" )
 
DECLARE  MSPREF_CONTEXT_DEFAULT  =  VC  WITH  PUBLIC , CONSTANT ("default" )
 
DECLARE  MSPREF_CONTEXT_ID_SYSTEM  =  VC  WITH  PUBLIC , CONSTANT ("system" )
 
DECLARE  MSPREF_SECTION_HIM_MODULE_GLOBAL  =  VC  WITH  PUBLIC , CONSTANT ("him_module_global" )
 
DECLARE  MSPREF_ENTRY_EMAIL_FMT_MSG  =  VC  WITH  PUBLIC , CONSTANT ("letters_email_format_msg" )
 
DECLARE  MSPREF_VALUE_EMAIL_FMT_MSG_SUPPRESS  =  VC  WITH  PUBLIC , CONSTANT ("SUPPRESS" )
 
DECLARE  MSPREF_DIST_TYPE_EMAIL  =  VC  WITH  PUBLIC , CONSTANT ("EMAIL" )
 
DECLARE  MSPREF_DIST_TYPE_FAX  =  VC  WITH  PUBLIC , CONSTANT ("FAX" )
 
DECLARE  MSPREF_DIST_TYPE_PAPER  =  VC  WITH  PUBLIC , CONSTANT ("PAPER" )
 
DECLARE  MSPREF_DIST_TYPE_NEW_CHANGES  =  VC  WITH  PUBLIC , CONSTANT ("NEW_CHANGES" )
 
DECLARE  MSPREF_DIST_TYPE_AVAIL_SUFFIX  =  VC  WITH  PUBLIC , CONSTANT ("_AVAIL" )
 
DECLARE  MSPREF_NEW_CHG_MODE_SET_DEFAULT  =  VC  WITH  PUBLIC , CONSTANT ("SET_DEFAULT" )
 
DECLARE  MSPREF_NEW_CHG_MODE_NEW_CHANGES  =  VC  WITH  PUBLIC , CONSTANT ("NEW_CHANGES" )
 
DECLARE  MSLOAD_ALL_PRSNL  =  VC  WITH  PUBLIC , CONSTANT ("PRSNL" )
 
DECLARE  MSLOAD_ALL_PREF  =  VC  WITH  PUBLIC , CONSTANT ("PREF" )
 
DECLARE  MSLOAD_ALL_QUAL  =  VC  WITH  PUBLIC , CONSTANT ("QUAL" )
 
# HIM_PREF_LETTERS_DIST_SUBS
 
SUBROUTINE   SFORMATDISTTYPEAVAIL  ( P_SDISTTYPE  )
 
DECLARE  SDISTTYPEAVAIL  =  VC  WITH  PRIVATE , NOCONSTANT ("" )
IF ( ( FINDSTRING ( MSPREF_DIST_TYPE_AVAIL_SUFFIX ,  P_SDISTTYPE )>0 ) )
SET  SDISTTYPEAVAIL  =  P_SDISTTYPE
ELSE
SET  SDISTTYPEAVAIL  =  BUILD ( P_SDISTTYPE ,  MSPREF_DIST_TYPE_AVAIL_SUFFIX )
ENDIF
 RETURN ( SDISTTYPEAVAIL )
 
 
END ;Subroutine
 
 
SUBROUTINE   BVALIDDISTTYPEPREF  ( P_SDISTTYPE  )
 
DECLARE  BRETURN  =  I4  WITH  PRIVATE , NOCONSTANT ( FALSE )
IF (  (( ( P_SDISTTYPE = MSPREF_DIST_TYPE_EMAIL ) )  OR  ( (( ( P_SDISTTYPE = MSPREF_DIST_TYPE_FAX )
 )  OR  (( P_SDISTTYPE = MSPREF_DIST_TYPE_PAPER ) ))  ))  )
SET  BRETURN  =  TRUE
ENDIF
 RETURN ( BRETURN )
 
 
END ;Subroutine
 
 
SUBROUTINE   ADDCONTEXTID_LETTERSDIST  ( P_SCTXIDSPARSEROOT ,  P_LCTXID ,  P_SCONTEXTID  )
 RETURN ( ADDCONTEXTID_ONEENTRY ( P_SCTXIDSPARSEROOT ,  P_LCTXID ,  MSPREF_CONTEXT_USER ,
 P_SCONTEXTID ,  MSPREF_SECTION_HIM_MODULE ,  MSPREF_SECT_ID_DEFICIENCY ,
 MSPREF_ENTRY_LETTERS_DIST ))
 
 
END ;Subroutine
 
 
SUBROUTINE   BISITEMVALUESAVAIL  ( P_SVALUESPARSEROOT ,  P_SVALUE  )
 
DECLARE  BRETURN  =  I4  WITH  PRIVATE , NOCONSTANT ( FALSE )
DECLARE  SVALUEAVAILFORMAT  =  VC  WITH  PRIVATE , NOCONSTANT ("" )
SET  SVALUEAVAILFORMAT  =  SFORMATDISTTYPEAVAIL ( P_SVALUE )
IF ( ( SVALUEAVAILFORMAT = SFORMATDISTTYPEAVAIL ( MSPREF_DIST_TYPE_PAPER )) )
SET  BRETURN  =  TRUE
ELSE
SET  BRETURN  =  BISITEMVALUES ( P_SVALUESPARSEROOT ,  SVALUEAVAILFORMAT )
ENDIF
 RETURN ( BRETURN )
 
 
END ;Subroutine
 
 
SUBROUTINE   GETEMAILFORMATMSGPREF  ( PR_SEMAILFORMATMSGPREF ,  P_NDEBUGIND  )
 
DECLARE  BRETURN  =  I4  WITH  PRIVATE , NOCONSTANT ( FALSE )
DECLARE  LSTAT  =  I4  WITH  PRIVATE , NOCONSTANT (0 )
SET  PR_SEMAILFORMATMSGPREF  = ""
FREE RECORD EMAILFORMATMSG_REQUEST
RECORD  EMAILFORMATMSG_REQUEST  (
1  CONTEXTIDS [*]
2  SCONTEXTID  =  VC )
FREE RECORD EMAILFORMATMSG_REPLY
RECORD  EMAILFORMATMSG_REPLY  (
1  CONTEXTIDS [*]
2  SCONTEXTNAME  =  VC
2  SCONTEXTID  =  VC
2  SSECTIONNAME  =  VC
2  SSECTIONID  =  VC
2  ENTRIES [*]
3  SENTRYNAME  =  VC
3  VALUES [*]
4  SVALUE  =  VC
1  STATUS_DATA
2  STATUS  =  C1
2  SUBEVENTSTATUS [1 ]
3  OPERATIONNAME  =  C25
3  OPERATIONSTATUS  =  C1
3  TARGETOBJECTNAME  =  C25
3  TARGETOBJECTVALUE  =  VC )
FREE SET GGETPREFCTXID_REQUEST
DECLARE  GGETPREFCTXID_REQUEST  =  VC  WITH  PUBLIC , NOCONSTANT ("EmailFormatMsg_Request" )
FREE SET GGETPREFCTXID_CONTEXTIDS
DECLARE  GGETPREFCTXID_CONTEXTIDS  =  VC  WITH  PUBLIC , NOCONSTANT ("ContextIds" )
FREE SET GGETPREFCTXID_CONTEXTID
DECLARE  GGETPREFCTXID_CONTEXTID  =  VC  WITH  PUBLIC , NOCONSTANT ("sContextId" )
FREE SET GGETPREFCTXID_REPLY
DECLARE  GGETPREFCTXID_REPLY  =  VC  WITH  PUBLIC , NOCONSTANT ("EmailFormatMsg_Reply" )
FREE SET GGETPREFCTXID_SCONTEXTNAME
DECLARE  GGETPREFCTXID_SCONTEXTNAME  =  VC  WITH  PUBLIC , NOCONSTANT ( MSPREF_CONTEXT_DEFAULT )
FREE SET GGETPREFCTXID_SSECTIONNAME
DECLARE  GGETPREFCTXID_SSECTIONNAME  =  VC  WITH  PUBLIC , NOCONSTANT (
 MSPREF_SECTION_HIM_MODULE_GLOBAL )
FREE SET GGETPREFCTXID_SSECTIONID
DECLARE  GGETPREFCTXID_SSECTIONID  =  VC  WITH  PUBLIC , NOCONSTANT ( MSPREF_SECT_ID_DEFICIENCY )
FREE SET GGETPREFCTXID_SENTRYNAME
DECLARE  GGETPREFCTXID_SENTRYNAME  =  VC  WITH  PUBLIC , NOCONSTANT ( MSPREF_ENTRY_EMAIL_FMT_MSG )
SET  LSTAT  =  ALTERLIST ( EMAILFORMATMSG_REQUEST -> CONTEXTIDS , 1 )
SET  EMAILFORMATMSG_REQUEST -> CONTEXTIDS [1 ]-> SCONTEXTID  =  MSPREF_CONTEXT_ID_SYSTEM
IF ( ( VALIDATE ( MNPREFDEBUGIND , 99 )=99 ) )
DECLARE  MNPREFDEBUGIND  =  I2  WITH  PUBLIC , NOCONSTANT (0 )
ENDIF
 
SET  MNPREFDEBUGIND  =  P_NDEBUGIND
 EXECUTE HIM_GET_PREF_BY_CONTEXT_ID
IF ( ( EMAILFORMATMSG_REPLY -> STATUS_DATA -> STATUS  IN ("S" ,
"Z" )) )
SET  BRETURN  =  TRUE
IF ( ( SIZE ( EMAILFORMATMSG_REPLY -> CONTEXTIDS , 5 )>0 ) )
IF ( ( SIZE ( EMAILFORMATMSG_REPLY -> CONTEXTIDS [1 ]-> ENTRIES , 5 )>0 ) )
IF ( ( SIZE ( EMAILFORMATMSG_REPLY -> CONTEXTIDS [1 ]-> ENTRIES [1 ]-> VALUES , 5 )>0 ) )
SET  PR_SEMAILFORMATMSGPREF  =  EMAILFORMATMSG_REPLY -> CONTEXTIDS [1 ]-> ENTRIES [1 ]-> VALUES [1 ]
-> SVALUE
ENDIF
 
ENDIF
 
ENDIF
 
ENDIF
 RETURN ( BRETURN )
 
 
END ;Subroutine
 
 
# EXIT_HIM_PREF_LETTERS_DIST
 
DECLARE  MSLETTERSDISTPREF  =  C20  WITH  PRIVATE , NOCONSTANT ("" )
 
DECLARE  MSEMAILADDRESS  =  VC  WITH  PRIVATE , NOCONSTANT ("" )
 
DECLARE  PROFILE_LETTER_TYPE_CS  =  I4  WITH  PUBLIC , CONSTANT (14429 )
 
DECLARE  CV_EXT_RETURN_EMAIL_ADDRESS  =  VC  WITH  PUBLIC , CONSTANT ("RETURN EMAIL ADDRESS" )
 
DECLARE  MSRETURNEMAILADDRESS  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  MDPROFILELETTERTYPECD  =  F8  WITH  PUBLIC , NOCONSTANT (0.0 )
 
DECLARE  MSEMAILFORMATMSGPREF  =  VC  WITH  PUBLIC , NOCONSTANT ("" )
 
DECLARE  MLLETTEROUTCNT  =  I4  WITH  PRIVATE , NOCONSTANT (0 )
 
DECLARE  I18NSUSPENDEDNOTICE  =  VC  WITH  PUBLIC , NOCONSTANT ( UAR_I18NGETMESSAGE ( I18NHANDLE ,
"SuspensionNotice" , "Suspension Date:" ))
 
DECLARE  STRING2LENGTH  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  ORG_CNT  =  I4  WITH  PROTECT , NOCONSTANT (0 )
 
DECLARE  STRING1  =  VC  WITH  PROTECT , NOCONSTANT ("" )
 
DECLARE  STRING2  =  VC  WITH  PROTECT , NOCONSTANT ("" )
 
DECLARE  FORMATTEDSUSPDT  =  VC  WITH  PROTECT , NOCONSTANT ("" )
 
SET  X_POS  = 20
 
SET  Y_POS  = 80
 
DECLARE  MED_SERVICE_GROUP  =  C255
 
SET  MED_SERVICE_FOUND_IND  = 0
 
DECLARE  LCOUNT  =  I4  WITH  PUBLIC , NOCONSTANT (0 )
 
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (320 , "DOCNBR" , 1 ,  PRSNL_TYPE_CD )
 
SET  PROFILE_CD  =  UAR_GET_CODE_BY ("MEANING" , 106 , "PROFILE" )
 
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (212 , "BUSINESS" , 1 ,  BUSINESS_CD )
 
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (43 , "BUSINESS" , 1 ,  PHONE_CD )
 
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (43 , "FAX BUS" , 1 ,  FAX_CD )
 
SET  STAT  =  UAR_GET_MEANING_BY_CODESET (1303 , "LETTER" , 1 ,  LETTER_TYPE_CD )
 
 CALL GETEMAILFORMATMSGPREF ( MSEMAILFORMATMSGPREF , 0 )
 
IF ( ( PEND_AGE_IND =1 ) )
SET  REQUEST -> PEND_DEFIC_IND  = 1
ENDIF
 
 
SELECT  INTO "nl:"
 PROFILE_LETTER_TYPE_CD = UAR_GET_CODE_BY ("DISPLAY" ,  PROFILE_LETTER_TYPE_CS ,  NULLTERM ( TRIM (
WP.DESCRIPTION, 3 )))
FROM ( WP_TEMPLATE  WP ),
( LONG_TEXT  LT )
 PLAN ( WP
WHERE (WP.TEMPLATE_TYPE_CD= LETTER_TYPE_CD ) AND ( CNVTUPPER (WP.DESCRIPTION)= CNVTUPPER ( REQUEST
-> LETTER_DESCRIPTION )) AND (WP.ACTIVITY_TYPE_CD= PROFILE_CD ))
 AND ( LT
WHERE (WP.TEMPLATE_ID=LT.PARENT_ENTITY_ID) AND (LT.PARENT_ENTITY_NAME="WP_TEMPLATE_TEXT" ))
 
ORDER BY WP.TEMPLATE_ID
 
HEAD REPORT
 DATE_INCR_POS =1 ,
 STAT = ALTERLIST ( TEXT_REPLY -> TEXT_REPLY_QUAL , 100 )
HEAD WP.TEMPLATE_ID
 MDPROFILELETTERTYPECD = PROFILE_LETTER_TYPE_CD
DETAIL
 LINE = TRIM (LT.LONG_TEXT),
 
FOR (  I  = 1  TO 10  )
 DATE_CHAR ="%%%date" , DATE_POS = FINDSTRING ( DATE_CHAR ,  LINE ,  DATE_INCR_POS ),
IF ( ( DATE_POS >0 ) )  DATE_INCR_POS =( DATE_POS +7 ),
IF ( ( SUBSTRING (( DATE_INCR_POS +2 ), 1 ,  LINE )!="%" ) )  DATE_INCR = CNVTINT ( SUBSTRING (
 DATE_INCR_POS , 3 ,  LINE )),
IF ( ( SUBSTRING (( DATE_INCR_POS +5 ), 1 ,  LINE )="%" ) )  STRING1 = SUBSTRING (1 , (
 DATE_INCR_POS +4 ),  LINE ),  STRING2LENGTH =( SIZE ( LINE , 1 )-( DATE_INCR_POS +6 )),  STRING2 =
 SUBSTRING (( DATE_INCR_POS +6 ), ( STRING2LENGTH +1 ),  LINE ),  LINE = CONCAT ( STRING1 ,
 STRING2 )
ENDIF
 
ELSE   DATE_INCR = CNVTINT ( SUBSTRING ( DATE_INCR_POS , 2 ,  LINE ))
ENDIF
,  CURRENT_DATE = CNVTDATETIME ( CURDATE ,  CURTIME ),  DATE_VALUE =( CNVTDATE ( CURRENT_DATE )+
 DATE_INCR ),  DATE_INSERT = FORMAT ( DATE_VALUE , "mmm dd, yyyy;;d" ),  LEN = MOVESTRING (
 DATE_INSERT , 1 ,  LINE ,  DATE_POS , 12 )
ENDIF
 
 
ENDFOR
,
 LINEFEED_CHAR = CONCAT ( CHAR (10 )),
 START_POS =1 ,
 DONE ="F" ,
 
WHILE ( ( DONE ="F" ))
 LINE_SIZE = SIZE ( LINE , 1 ), LINE_LENG = FINDSTRING ( LINEFEED_CHAR ,  LINE ), TEXT_CNT =(
 TEXT_CNT +1 ),
IF ( ( TEXT_CNT > SIZE ( TEXT_REPLY -> TEXT_REPLY_QUAL , 5 )) )  STAT = ALTERLIST ( TEXT_REPLY ->
 TEXT_REPLY_QUAL , ( TEXT_CNT +9 ))
ENDIF
,
IF ( ( LINE_LENG =0 ) )  TEXT_REPLY -> TEXT_REPLY_QUAL [ TEXT_CNT ]-> TEXT = SUBSTRING (1 ,  SIZE (
 LINE ),  LINE ),  DONE ="T"
ELSE   TEXT_REPLY -> TEXT_REPLY_QUAL [ TEXT_CNT ]-> TEXT = TRIM ( SUBSTRING (1 ,  LINE_LENG ,  LINE
)),  START_POS =(1 + LINE_LENG ),  LINE_TEMP = LINE ,  LINE = TRIM ( SUBSTRING ( START_POS ,
 LINE_SIZE ,  LINE_TEMP ))
ENDIF
 
 
ENDWHILE
 
FOOT REPORT
 STAT = ALTERLIST ( TEXT_REPLY -> TEXT_REPLY_QUAL ,  TEXT_CNT )
 WITH  NOCOUNTER
 
SELECT  INTO "nl:"
CVE.FIELD_VALUE
FROM ( CODE_VALUE_EXTENSION  CVE )
 PLAN ( CVE
WHERE (CVE.CODE_VALUE= MDPROFILELETTERTYPECD ) AND (CVE.FIELD_NAME= CV_EXT_RETURN_EMAIL_ADDRESS )
 AND (CVE.CODE_SET= PROFILE_LETTER_TYPE_CS ))
 
 
DETAIL
 MSRETURNEMAILADDRESS =CVE.FIELD_VALUE
 WITH  NOCOUNTER
 
IF ( ( SIZE ( TRIM ( MSRETURNEMAILADDRESS , 3 ))=0 ) )
SET  MSRETURNEMAILADDRESS  =  UAR_I18NGETMESSAGE ( I18NHANDLE , "ReturnEmailUnspecified" ,
"Unspecified" )
ENDIF
 
 
SET  REQUESTS  =  SIZE ( REQUEST -> PHYSICIAN_QUAL , 5 )
 
SELECT  INTO "nl:"
D1.SEQ,
 PHYSICIAN_LAST_NAME = SUBSTRING (1 , 25 , P.NAME_LAST),
 PHYSICIAN_FULL_NAME = SUBSTRING (1 , 25 , P.NAME_FULL_FORMATTED),
 PHYSICIAN_ID = REQUEST -> PHYSICIAN_QUAL [D1.SEQ]-> PHYSICIAN_ID ,
 STATE = UAR_GET_CODE_DISPLAY (A.STATE_CD),
P1.PHONE_NUM"####################"
,
 LICENSE_NBR = SUBSTRING (1 , 20 ,  TRIM ( CNVTALIAS (PA.ALIAS, PA.ALIAS_POOL_CD))),
P2.PHONE_NUM"####################"
 
FROM ( DUMMYT  D1  WITH  SEQ = VALUE ( REQUESTS )),
( PRSNL  P ),
( ADDRESS  A ),
( PHONE  P1 ),
( PRSNL_ALIAS  PA ),
( PHONE  P2 )
 PLAN ( D1 )
 AND ( P
WHERE (P.PERSON_ID= REQUEST -> PHYSICIAN_QUAL [D1.SEQ]-> PHYSICIAN_ID ) AND (P.ACTIVE_IND=1 ))
 AND ( PA
WHERE (PA.PERSON_ID= OUTERJOIN (P.PERSON_ID)) AND (PA.PRSNL_ALIAS_TYPE_CD= OUTERJOIN (
 PRSNL_TYPE_CD )) AND (PA.BEG_EFFECTIVE_DT_TM<= OUTERJOIN ( CNVTDATETIME ( CURDATE ,  CURTIME3 )))
 AND (PA.END_EFFECTIVE_DT_TM>= OUTERJOIN ( CNVTDATETIME ( CURDATE ,  CURTIME3 ))) AND (PA.ACTIVE_IND
= OUTERJOIN (1 )))
 AND ( A
WHERE (A.PARENT_ENTITY_ID= OUTERJOIN (P.PERSON_ID)) AND (A.ADDRESS_TYPE_CD= OUTERJOIN ( BUSINESS_CD
)) AND (A.PARENT_ENTITY_NAME= OUTERJOIN ("PERSON" )) AND (A.BEG_EFFECTIVE_DT_TM<= OUTERJOIN (
 CNVTDATETIME ( CURDATE ,  CURTIME3 ))) AND (A.END_EFFECTIVE_DT_TM>= OUTERJOIN ( CNVTDATETIME (
 CURDATE ,  CURTIME3 ))) AND (A.ACTIVE_IND= OUTERJOIN (1 )))
 AND ( P1
WHERE (P1.PARENT_ENTITY_ID= OUTERJOIN (P.PERSON_ID)) AND (P1.PHONE_TYPE_CD= OUTERJOIN ( PHONE_CD ))
 AND (P1.PARENT_ENTITY_NAME= OUTERJOIN ("PERSON" )) AND (P1.BEG_EFFECTIVE_DT_TM<= OUTERJOIN (
 CNVTDATETIME ( CURDATE ,  CURTIME3 ))) AND (P1.END_EFFECTIVE_DT_TM>= OUTERJOIN ( CNVTDATETIME (
 CURDATE ,  CURTIME3 ))) AND (P1.ACTIVE_IND= OUTERJOIN (1 )))
 AND ( P2
WHERE (P2.PARENT_ENTITY_ID= OUTERJOIN (P.PERSON_ID)) AND (P2.PHONE_TYPE_CD= OUTERJOIN ( FAX_CD ))
 AND (P2.PARENT_ENTITY_NAME= OUTERJOIN ("PERSON" )) AND (P2.BEG_EFFECTIVE_DT_TM<= OUTERJOIN (
 CNVTDATETIME ( CURDATE ,  CURTIME3 ))) AND (P2.END_EFFECTIVE_DT_TM>= OUTERJOIN ( CNVTDATETIME (
 CURDATE ,  CURTIME3 ))) AND (P2.ACTIVE_IND= OUTERJOIN (1 )))
 
ORDER BY  PHYSICIAN_ID
 
HEAD REPORT
 TELE = FILLSTRING (20 , " " ),
 FAX = FILLSTRING (20 , " " ),
 CITY_LINE = FILLSTRING (78 , " " )
HEAD  PHYSICIAN_ID
 ADDRESS_CNT =( ADDRESS_CNT +1 ), STAT = ALTERLIST ( ADDRESS_REPLY -> ADDRESS_QUAL ,  ADDRESS_CNT ),
 PHONE_NUM = CNVTALPHANUM (P1.PHONE_NUM), FAX_NUM = CNVTALPHANUM (P2.PHONE_NUM), ZIP = FORMAT (
A.ZIPCODE, "#####" ),
IF ( (P1.PHONE_NUM= NULL ) )  TELE = FILLSTRING (20 , " " )
ELSE   TELE = FORMAT ( PHONE_NUM , "(###)###-####" )
ENDIF
,
IF ( (P2.PHONE_NUM= NULL ) )  FAX = FILLSTRING (20 , " " )
ELSE   FAX = FORMAT ( FAX_NUM , "(###)###-####" )
ENDIF
,
IF ( (A.CITY!= NULL ) )
IF ( (A.STATE!= NULL ) )  CITY_LINE = CONCAT ( TRIM (A.CITY), ", " ,  TRIM (A.STATE), "  " ,  TRIM (
A.ZIPCODE))
ELSE   CITY_LINE = CONCAT ( TRIM (A.CITY), ", " ,  TRIM ( STATE ), "  " ,  TRIM (A.ZIPCODE))
ENDIF
 
ELSE   CITY_LINE = FILLSTRING (78 , " " )
ENDIF
, ADDRESS_REPLY -> ADDRESS_QUAL [ ADDRESS_CNT ]-> PHYSICIAN_ID = PHYSICIAN_ID , ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> PHYSICIAN_NAME = TRIM ( PHYSICIAN_FULL_NAME , 3 ), ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> PHYSICIAN_LAST_NAME = PHYSICIAN_LAST_NAME , ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> ADDRESS1 = SUBSTRING (1 , 40 , A.STREET_ADDR), ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> ADDRESS2 = SUBSTRING (1 , 40 , A.STREET_ADDR2), ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> ADDRESS3 = SUBSTRING (1 , 40 , A.STREET_ADDR3), ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> ADDRESS4 = SUBSTRING (1 , 40 , A.STREET_ADDR4), ADDRESS_REPLY ->
 ADDRESS_QUAL [ ADDRESS_CNT ]-> CITY_LINE = CITY_LINE , ADDRESS_REPLY -> ADDRESS_QUAL [ ADDRESS_CNT
]-> PHONE_NUM = TELE , ADDRESS_REPLY -> ADDRESS_QUAL [ ADDRESS_CNT ]-> FAX_NUM = FAX ,
 ADDRESS_REPLY -> ADDRESS_QUAL [ ADDRESS_CNT ]-> LICENSE_NBR = LICENSE_NBR
FOOT   PHYSICIAN_ID
 XBOGUSVAR =0
 WITH  NOCOUNTER
 
 EXECUTE HIM_GET_DELINQ_DOC_INFO
 
SET  REPLIES  =  SIZE ( REPLY -> REPLY_QUAL , 5 )
 
FOR (  X  = 1  TO  REPLIES  )
 
SET  DET_QUAL  =  SIZE ( REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL , 5 )
SET  Y  = 0
SET  STAT  =  ALTERLIST ( TEMP -> REPLY_QUAL ,  X )
SET  TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID  =  REPLY -> REPLY_QUAL [ X ]-> PHYSICIAN_ID
SET  TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_NAME  =  REPLY -> REPLY_QUAL [ X ]-> PHYSICIAN_NAME
SELECT  INTO "nl:"
 ORGANIZATION_ID = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [D.SEQ]-> ORGANIZATION_ID ,
 DEF_AGE = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [D.SEQ]-> DEF_AGE ,
 ENCNTR_ID = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [D.SEQ]-> ENCNTR_ID
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( DET_QUAL ))
ORDER BY  ORGANIZATION_ID ,
 DEF_AGE  DESC ,		;001
 ENCNTR_ID				;001
;001 ENCNTR_ID,
;001 DEF_AGE  DESC
 
HEAD  ORGANIZATION_ID
 ORG_CNT =( ORG_CNT +1 ),
IF ( ( ORG_CNT > SIZE ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL , 5 )) )  STAT = ALTERLIST ( TEMP
-> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL , ( ORG_CNT +9 ))
ENDIF
, TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]-> ORGANIZATION_ID = ORGANIZATION_ID
DETAIL
 Y =( Y +1 ),
 STAT = ALTERLIST ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL ,  Y ),
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ENCNTR_ID = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL
[D.SEQ]-> ENCNTR_ID ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ORGANIZATION_ID = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> ORGANIZATION_ID ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ORGANIZATION_NAME = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> ORGANIZATION_NAME ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> PATIENT_ID = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> PATIENT_ID ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> PAT_MRN = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [
D.SEQ]-> PAT_MRN ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> FIN_NBR = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [
D.SEQ]-> FIN_NBR ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> PATIENT_NAME = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> PATIENT_NAME ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> DOCUMENT = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [
D.SEQ]-> DOCUMENT ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> DEFICIENCY = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> DEFICIENCY ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ALLOC_DATE = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> ALLOC_DATE ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ADMIT_DATE = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> ADMIT_DATE ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> DISCH_DATE = REPLY -> REPLY_QUAL [ X ]->
 				DETAIL_QUAL [D.SEQ]-> DISCH_DATE ,  ;se
TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> PATIENT_TYPE = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> PATIENT_TYPE ,
 TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> DEF_AGE = REPLY -> REPLY_QUAL [ X ]-> DETAIL_QUAL [
D.SEQ]-> DEF_AGE ,
 
IF ( ( REPLY -> REPLY_QUAL [ X ]-> ON_HOLD =1 ) )  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]->
 ON_HOLD =1
ELSE   TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ Y ]-> ON_HOLD = REPLY -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [D.SEQ]-> ON_HOLD
ENDIF
 
FOOT   ORGANIZATION_ID
 XBOGUSVAR =1
FOOT REPORT
 STAT = ALTERLIST ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL ,  ORG_CNT ),
 ORG_CNT =0
 WITH  NOCOUNTER
SELECT  INTO "nl:"
D.SEQ
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( SIZE ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL , 5 ))),
( PRSNL_SUSPENSION  PS )
 PLAN ( D )
 AND ( PS
WHERE (PS.PRSNL_ID= TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID ) AND (PS.ORGANIZATION_ID= TEMP ->
 REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [D.SEQ]-> ORGANIZATION_ID ) AND (PS.SUSP_END_DT_TM>= CNVTDATETIME
( CURDATE ,  CURTIME3 )) AND (PS.SUSP_BEGIN_DT_TM<= CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (
PS.ACTIVE_IND=1 ))
 
ORDER BY D.SEQ
 
HEAD D.SEQ
 ORG_CNT =( ORG_CNT +1 ), TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [D.SEQ]-> SUSPENSION_DT_TM =
PS.SUSP_BEGIN_DT_TM, TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [D.SEQ]-> SUSPENSION_TZ =
PS.SUSP_BEGIN_TZ
FOOT  D.SEQ
 XBOGUSVAR =1
FOOT REPORT
 
IF ( ( ORG_CNT =0 ) )  TEMP -> REPLY_QUAL [ X ]-> SUSPENSION_FLAG =0
ELSEIF ( ( ORG_CNT = SIZE ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL , 5 )) )  TEMP -> REPLY_QUAL [
 X ]-> SUSPENSION_FLAG =1
ELSE   TEMP -> REPLY_QUAL [ X ]-> SUSPENSION_FLAG =2
ENDIF
 
 WITH  NOCOUNTER
SET  ORG_CNT  = 0
 
ENDFOR
 
 
SET  ADDRESSES  =  SIZE ( ADDRESS_REPLY -> ADDRESS_QUAL , 5 )
 
FOR (  X  = 1  TO  REPLIES  )
 
SET  PSIZE  = 0
SET  PSIZE  =  SIZE ( REQUEST -> PHYSICIAN_QUAL , 5 )
SET  MSLETTERSDISTPREF  = ""
SET  MSEMAILADDRESS  = ""
FOR (  Y  = 1  TO  PSIZE  )
 
IF ( ( TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID = REQUEST -> PHYSICIAN_QUAL [ Y ]-> PHYSICIAN_ID ) )
SET  LCOUNT  =  Y
SET  MSLETTERSDISTPREF  =  REQUEST -> PHYSICIAN_QUAL [ Y ]-> LETTERS_DIST_PREF
SET  MSEMAILADDRESS  =  REQUEST -> PHYSICIAN_QUAL [ Y ]-> EMAIL_ADDRESS
SET  Y  =  PSIZE
ENDIF
 
 
ENDFOR
 
 CALL ECHO ( BUILD ("Lcount outside of Loop=" ,  LCOUNT ))
SET  MED_SERVICE_FOUND_IND  = 0
SET  MED_SERVICE_GROUP  =  FILLSTRING (40 , " " )
IF ( ( REQUEST -> PRINT_MED_SERVICE_IND =1 ) )
SELECT  INTO "nl:"
 PRSNL_GROUP_TYPE = UAR_GET_CODE_MEANING (PG.PRSNL_GROUP_TYPE_CD)
FROM ( PRSNL_GROUP_RELTN  PGR ),
( PRSNL_GROUP  PG )
 PLAN ( PGR
WHERE (PGR.PERSON_ID= TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID ) AND (PGR.BEG_EFFECTIVE_DT_TM<=
 CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (PGR.END_EFFECTIVE_DT_TM>= CNVTDATETIME ( CURDATE ,
 CURTIME3 )) AND (PGR.ACTIVE_IND=1 ))
 AND ( PG
WHERE (PG.PRSNL_GROUP_ID=PGR.PRSNL_GROUP_ID))
 
 
DETAIL
 
IF ( ( PRSNL_GROUP_TYPE ="MEDSERVICE" ) )  MED_SERVICE_FOUND_IND =1 ,  MED_SERVICE_GROUP =
PG.PRSNL_GROUP_NAME
ENDIF
 
 WITH  NOCOUNTER
ENDIF
 
CASE (  MSLETTERSDISTPREF  )
 OF  MSPREF_DIST_TYPE_FAX :
SET  TEMP_TIME  =  CNVTSTRING ( CURTIME3 , 7 , 0 ,  R )
SET  HOLD_FILE  =  BUILD ("cer_print:him" ,  TEMP_TIME ,  LCOUNT , ".dat" )
 CALL ECHO ( BUILD ("Hold_File =" ,  HOLD_FILE ))
 
SELECT  INTO  VALUE ( HOLD_FILE )
 PHYSICIAN = BUILD ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_NAME ,  TEMP -> REPLY_QUAL [
 X ]-> PHYSICIAN_ID ),
 PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID
; ,DEFIC_AGE = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> DEF_AGE "###;r"  ;001
FROM ( DUMMYT  D2  WITH  SEQ = VALUE ( ADDRESSES )),
( HIM_SYSTEM_PARAMS  HIM )
 PLAN ( D2
WHERE ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]->
 PHYSICIAN_ID ))
 AND ( HIM
WHERE (HIM.ACTIVE_IND=1 ))
 
ORDER BY  PHYSICIAN
; ,DEFIC_AGE		;001
HEAD REPORT
 CUR_DAY = FORMAT ( CURDATE , "@WEEKDAYNAME;;d" ),
 CUR_DATE = FORMAT ( CURDATE , "@LONGDATE;;Q" ),
 CUR_TIME = FORMAT ( CURTIME , "@TIMENOSECONDS;;M" ),
;001  DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 )),
 DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 ), "  ",trim(CUR_TIME,3)),			;001
 PAGE_TOP_IND =0 ,
 LAST_NAME = FILLSTRING (25 , " " )
HEAD  PHYSICIAN
 PAGE_TOP_IND =0 , ROW_CNT =0 , PAGE_TOP ="Y" , COUNT4 =0 , PREV_ENCNTR_ID =0 , END_PHYSICIAN ="N" ,
 CHART_COUNT =0 , ENCNTR_CNT =0 , ROW +1 , COL 000 ,"{FONT/0}{CPI/14}" ,
 CALL PRINT ( CALCPOS ( X_POS , (10 + Y_POS ))),"{FONT/8}" , REQUEST -> FULL_REPORT_NAME , ROW +1 ,
 COL 000 ,
IF ( ( REQUEST -> PRINT_MED_SERVICE_IND =1 ) AND ( MED_SERVICE_FOUND_IND =1 ) )
 CALL PRINT ( CALCPOS ( X_POS , (30 + Y_POS ))), "{FONT/8}" ,  MED_SERVICE_GROUP ,  ROW +1 ,
 CALL PRINT ( CALCPOS ( X_POS , (40 + Y_POS ))), "{FONT/8}" ,  DATE_LINE ,  ROW_CNT =17
ELSE
 CALL PRINT ( CALCPOS ( X_POS , (30 + Y_POS ))), "{FONT/8}" ,  DATE_LINE ,  ROW_CNT =16
ENDIF
, ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_NAME ,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , I18NLICNOLABEL , ROW +1 ,
 CALL PRINT ( CALCPOS ((394 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> LICENSE_NBR "#######"
, ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> ADDRESS1 ,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , I18NTELLABEL , ROW +1 ,
 CALL PRINT ( CALCPOS ((401 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHONE_NUM , ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS2 >" " ) )
 CALL PRINT ( CALCPOS ((55 + X_POS ), (120 + Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY -> ADDRESS_QUAL
[D2.SEQ]-> ADDRESS2
ENDIF
,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (120 + Y_POS ))),"{FONT/8}" , I18NFAXLABEL ,
 CALL PRINT ( CALCPOS ((408 + X_POS ), (120 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> FAX_NUM , ROW_CNT =( ROW_CNT +1 ), NEW_Y_POS =200 , ROW_CNT =20 ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 >" " ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 ,  ROW_CNT =( ROW_CNT +1 ),  NEW_Y_POS =210 ,  ROW_CNT =21
ENDIF
,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 >" " ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 ,  NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 )
ENDIF
, ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))),"{FONT/8}" , ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> CITY_LINE , NEW_Y_POS =( NEW_Y_POS +30 ), ROW_CNT =( ROW_CNT +3 ), ROW +1 ,
 COL 000 , LAST_NAME = CONCAT ( I18NDEARDRLABEL , " " ,  TRIM ( ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_LAST_NAME , 3 ), ":" ),
 CALL PRINT ( CALCPOS ( X_POS , (20 + NEW_Y_POS ))),"{FONT/8}" , LAST_NAME , NEW_Y_POS =( NEW_Y_POS
+30 ), ROW_CNT =( ROW_CNT +3 ),
FOR (  LINE_CNT  = 1  TO  SIZE ( TEXT_REPLY -> TEXT_REPLY_QUAL , 5 ) )
 ROW +1 , COL 000 ,"{FONT/8}{CPI/14}" ,
 CALL PRINT ( CALCPOS ( X_POS , (10 + NEW_Y_POS ))),"{FONT/8}" , TEXT_REPLY -> TEXT_REPLY_QUAL [
 LINE_CNT ]-> TEXT , NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ),
;001  IF ( ( ROW_CNT >=65 ) )
IF ( ( ROW_CNT >=45 ) )  			;001
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  NEW_Y_POS =0 ,  ROW_CNT =0
ENDIF
 
 
ENDFOR
,
;001  IF ( (( ROW_CNT +6 )>=60 ) )
IF ( (( ROW_CNT +6 )>=40 ) )			;001
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  NEW_Y_POS =0 ,  ROW_CNT =0
ENDIF
, PREV_ORG =9999 , WRITE_HEADER_IND =0
DETAIL
 REPLY_QUAL_SIZE = SIZE ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL , 5 ),
 
FOR (  COUNT4  = 1  TO  REPLY_QUAL_SIZE  )
 PRINT_LETTER ="Y" ,
IF ( ( PRINT_LETTER ="Y" ) )
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_ID != PREV_ORG ) )  ORG_CNT
=( ORG_CNT +1 ),  PREV_ORG = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_ID ,
 WRITE_HEADER_IND =1 ,
IF ( ( PAGE_TOP_IND =1 ) )  PAGE_TOP_IND =0 ,  NEW_Y_POS =( NEW_Y_POS +60 ),  ROW_CNT =( ROW_CNT +6
)
ELSE   NEW_Y_POS =( NEW_Y_POS +60 ),  ROW_CNT =( ROW_CNT +6 )
ENDIF
 
ELSEIF ( ( PAGE_TOP ="Y" ) )  WRITE_HEADER_IND =1
ELSE   WRITE_HEADER_IND =0
ENDIF
,
IF ( ( WRITE_HEADER_IND =1 ) )
;001  IF ( ( ROW_CNT >=57 ) )
IF ( ( ROW_CNT >=37 ) )  			;001
IF ( ( END_PHYSICIAN ="N" ) )
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  PAGE_TOP ="Y" ,  NEW_Y_POS =40 ,  ROW_CNT =4
ENDIF
 
ENDIF
,  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  I18NFACILITY , " " ,
 CALL PRINT ( CALCPOS ((55 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_NAME ,
 CALL PRINT ( CALCPOS (400 ,  NEW_Y_POS )), "{FONT/8}" ,  ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]->
 PHYSICIAN_NAME ,  NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),
IF ( ( TEMP -> REPLY_QUAL [ X ]-> SUSPENSION_FLAG >0 ) AND ( TEMP -> REPLY_QUAL [ X ]->
 ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_DT_TM > NULL ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  I18NSUSPENDEDNOTICE ,  ROW +
1 ,  FORMATTEDSUSPDT = FORMAT ( DATETIMEZONE ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]
-> SUSPENSION_DT_TM ,  TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_TZ , 1 ),
"@SHORTDATE;4;q" ),
 CALL PRINT ( CALCPOS ((40 + X_POS ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  FORMATTEDSUSPDT ,
 NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 )
ENDIF
,  ROW +1 ,  COL 000 ,"{CPI/12}",
 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENT ,
 CALL PRINT ( CALCPOS ((430 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NADMIT ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NALLOC ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFIC ,  NEW_Y_POS =(
 NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  ROW +1 ,  COL 000 ,
;001  CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  I18NMRN ,  ROW +1 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  I18NFIN ,  ROW +1 ,		;001
 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NNAME ,  ROW +1 ,
IF (  HIM_TRACKING_ORDERS_IND  )
 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFICIENCY ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NSTATUS
ELSE
 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDOCUMENT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFIC
ENDIF
,
 CALL PRINT ( CALCPOS ((430 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,
;001  CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((465 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENTTYPE ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NAGE ,  NEW_Y_POS =(
 NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,
"-----------------------------------------" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,
"---------------------------------" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" , "--------------------------" ,
 ROW +1 ,
 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" , "----------------------------" ,
 ROW +1 ,
 CALL PRINT ( CALCPOS ((430 + X_POS ),  NEW_Y_POS )), "{FONT/8}" , "------------" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" , "------------	   ----------" ,
 NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  PAGE_TOP ="N"
ENDIF
,  HOLD_DEF_AGE = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> DEF_AGE , "###" ),
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ENCNTR_ID != PREV_ENCNTR_ID ) )  ROW +1
,  COL 000 ,
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ON_HOLD =1 ) )
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}" ,  I18NHOLDFLAG
ENDIF
,  ROW +1 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL
;001   [ COUNT4 ]-> PAT_MRN ,  ROW +1 ,
[ COUNT4 ]-> FIN_NBR ,  ROW +1 ,	;001
;001 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((103 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->		;001
 DETAIL_QUAL [ COUNT4 ]-> PATIENT_NAME ,
 PREV_ENCNTR_ID = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [
 COUNT4 ]-> ENCNTR_ID
ENDIF
,  ROW +1 ,  COL 000 ,
 DISCH_DT = FORMAT(TEMP->REPLY_QUAL[X]->DETAIL_QUAL[COUNT4]->DISCH_DATE, "@SHORTDATE4YR"),			;001
ADMIT_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]->ADMIT_DATE , "@SHORTDATE" ),
  ALLOC_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]
-> ALLOC_DATE , "@SHORTDATE" ),
;001 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((210 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> DOCUMENT ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((325 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> DEFICIENCY ,
 CALL PRINT ( CALCPOS ((430 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  ADMIT_DT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((465 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->		;001
 DETAIL_QUAL [ COUNT4 ]-> PATIENT_TYPE ,  ROW +1 ,													;001
 
;001 CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  ALLOC_DT ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((545 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> DEF_AGE "###;r"
,
;001  IF ( ( ROW_CNT >=61 ) )
IF ( ( ROW_CNT >=41 ) )  			;001
IF ( ( END_PHYSICIAN ="N" ) )
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  PAGE_TOP ="Y" ,  NEW_Y_POS =40 ,  ROW_CNT =4
ENDIF
 
ELSE   NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 )
ENDIF
 
ENDIF
 
 
ENDFOR
 
FOOT   PHYSICIAN
 ORG_CNT =0 , NEW_Y_POS =( NEW_Y_POS +20 ), ROW_CNT =( ROW_CNT +2 ), ROW +1 , COL 000 ,"{CPI/14}",
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )),"{FONT/8}" , I18NHOLDFLAG ,"  " , I18NHOLDLABEL ,
 NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )),"{FONT/8}" , I18NQUALDEFZERO , ROW +1 ,
 CALL PRINT ( CALCPOS ((200 + X_POS ),  NEW_Y_POS )),"{FONT/8}" ," " , NEW_Y_POS =( NEW_Y_POS +40 ),
 ROW_CNT =( ROW_CNT +4 ),
IF ( ( SIZE ( ADDRESS_REPLY -> ADDRESS_QUAL , 5 )>=D2.SEQ) )  PAGE_TOP ="Y" ,  END_PHYSICIAN ="Y"
ENDIF
,
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))),"{FONT/8}" ," "
 WITH  NOCOUNTER , DIO =36 , MAXCOL =400 , MAXROW =700
IF ( ( CURQUAL >0 ) )
SET  MLLETTEROUTCNT  = ( MLLETTEROUTCNT +1 )
SET  PHYSICIAN_ID  =  TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID
 EXECUTE HIM_FAX_FILE
ENDIF
 
 OF  MSPREF_DIST_TYPE_EMAIL :
SET  TEMP_TIME  =  CNVTSTRING ( CURTIME3 , 7 , 0 ,  R )
SET  HOLD_FILE  =  BUILD ("CER_PRINT:HIM" ,  TEMP_TIME , ".DAT" )
 
SELECT  INTO  VALUE ( HOLD_FILE )
 PHYSICIAN = BUILD ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_NAME ,  TEMP -> REPLY_QUAL [
 X ]-> PHYSICIAN_ID ),
 PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID
 ;,DEFIC_AGE = TEMP -> REPLY_QUAL [ X ]->DETAIL_QUAL [ COUNT4 ]-> DEF_AGE "###;r"	;001
FROM ( DUMMYT  D2  WITH  SEQ = VALUE ( ADDRESSES )),
( HIM_SYSTEM_PARAMS  HIM )
 PLAN ( D2
WHERE ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]->
 PHYSICIAN_ID ))
 AND ( HIM
WHERE (HIM.ACTIVE_IND=1 ))
 
ORDER BY  PHYSICIAN
; ,DEFIC_AGE			;001
 
HEAD REPORT
 CUR_DAY = FORMAT ( CURDATE , "@WEEKDAYNAME;;d" ),
 CUR_DATE = FORMAT ( CURDATE , "@LONGDATE;;Q" ),
 CUR_TIME = FORMAT ( CURTIME , "@TIMENOSECONDS;;M" ),
;001  DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 )),
 DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 ), "  ",trim(CUR_TIME,3)),			;001
 PAGE_TOP_IND =0 ,
 LAST_NAME = FILLSTRING (25 , " " ),
 IROWPLUS =1 ,
 IROW =0 ,
 
MACRO ( ROW_PLUS )
 
FOR (  IROW  = 1  TO  IROWPLUS  )
 ROW +1
 
ENDFOR
,
 IROWPLUS =1
ENDMACRO
 
HEAD  PHYSICIAN
 LDETAILCNT =0 , LDETAIL =0 , PREV_ENCNTR_ID =0 ,
IF ( ( MSEMAILFORMATMSGPREF != MSPREF_VALUE_EMAIL_FMT_MSG_SUPPRESS ) )  COL 000 ,
 I18NEMAILFORMATNOTE ,  IROWPLUS =4 ,  ROW_PLUS
ENDIF
,
IF ( ( REQUEST -> PRINT_MED_SERVICE_IND =1 ) AND ( MED_SERVICE_FOUND_IND =1 ) )  COL 000 ,
 MED_SERVICE_GROUP ,  ROW_PLUS
ENDIF
, COL 000 , DATE_LINE , IROWPLUS =4 , ROW_PLUS , COL 000 , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]->
 PHYSICIAN_NAME , COL 054 , I18NLICNOLABEL ," " , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]->
 LICENSE_NBR "#######"
, ROW_PLUS , COL 000 , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS1 , COL 054 , I18NTELLABEL ,
" " , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHONE_NUM , ROW_PLUS ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS2 >" " ) )  COL 000 ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS2
ENDIF
, COL 054 , I18NFAXLABEL ," " , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> FAX_NUM , ROW_PLUS ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 >" " ) )  COL 000 ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 ,  ROW_PLUS
ENDIF
,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 >" " ) )  COL 000 ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 ,  ROW_PLUS
ENDIF
, COL 000 , ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> CITY_LINE , IROWPLUS =2 , ROW_PLUS , LAST_NAME
= CONCAT ( I18NDEARDRLABEL , " " ,  TRIM ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]->
 PHYSICIAN_LAST_NAME , 3 ), ":" ), COL 000 , LAST_NAME , ROW_PLUS ,
FOR (  LINE_CNT  = 1  TO  SIZE ( TEXT_REPLY -> TEXT_REPLY_QUAL , 5 ) )
 ROW_PLUS , COL 000 , TEXT_REPLY -> TEXT_REPLY_QUAL [ LINE_CNT ]-> TEXT
 
ENDFOR
, PREV_ORG =9999
DETAIL
 LDETAILCNT = SIZE ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL , 5 ),
 
FOR (  LDETAIL  = 1  TO  LDETAILCNT  )
 PRINT_LETTER ="Y" ,
IF ( ( PRINT_LETTER ="Y" ) )
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> ORGANIZATION_ID != PREV_ORG ) )
 ORG_CNT =( ORG_CNT +1 ),  PREV_ORG = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]->
 ORGANIZATION_ID ,  IROWPLUS =3 ,  ROW_PLUS ,  COL 002 ,  I18NFACILITY , " " ,  TEMP -> REPLY_QUAL [
 X ]-> DETAIL_QUAL [ LDETAIL ]-> ORGANIZATION_NAME ,  COL 075 ,  ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_NAME ,  ROW_PLUS ,
IF ( ( TEMP -> REPLY_QUAL [ X ]-> SUSPENSION_FLAG >0 ) AND ( TEMP -> REPLY_QUAL [ X ]->
 ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_DT_TM > NULL ) )  FORMATTEDSUSPDT = FORMAT ( DATETIMEZONE (
 TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_DT_TM ,  TEMP -> REPLY_QUAL [ X ]
-> ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_TZ , 1 ), "@SHORTDATE;4;q" ),  COL 002 ,
 I18NSUSPENDEDNOTICE , " " ,  FORMATTEDSUSPDT ,  ROW_PLUS
ENDIF
,  COL 082 ,  I18NADMISSION ,  COL 094 ,  I18NALLOCATION ,  COL 106 ,  I18NDEFICIENCY ,  ROW_PLUS ,
;001 COL 005 ,  I18NMRN ,  COL 027 ,  I18NPATIENTNAME ,
 COL 005 ,  I18NFIN ,  COL 027 ,  I18NPATIENTNAME ,			;001
IF (  HIM_TRACKING_ORDERS_IND  )  COL 045 ,  I18NDEFICIENCY ,  COL 062 ,  I18NSTATUS
ELSE   COL 045 ,  I18NDOCUMENT ,  COL 062 ,  I18NDEFICIENCY
ENDIF
,  COL 085 ,  I18NDATE ,  COL 097 ,  I18NDATE ,  COL 109 ,  I18NAGE ,  ROW_PLUS ,  COL 002 ,
 DASH_EMAIL ,  ROW_PLUS
ENDIF
,  HOLD_DEF_AGE = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> DEF_AGE , "###" ),
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> ENCNTR_ID != PREV_ENCNTR_ID ) )
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> ON_HOLD =1 ) )  COL 002 ,  I18NHOLDFLAG
ENDIF
;001  ,  COL 005 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> PAT_MRN ,
,  COL 005 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> FIN_NBR ,  	;001
;001  COL 027 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> PATIENT_NAME ,
COL 019 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> PATIENT_NAME ,  	;001
PREV_ENCNTR_ID = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> ENCNTR_ID
ENDIF
,   DISCH_DT = FORMAT(TEMP->REPLY_QUAL[X]->DETAIL_QUAL[LDETAIL]->DISCH_DATE, "@SHORTDATE4YR"),  ;001
ADMIT_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> ADMIT_DATE ,"@SHORTDATE" ),
ALLOC_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]->
 ALLOC_DATE , "@SHORTDATE" ),  COL 045 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]->
 DOCUMENT ,  COL 062 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL ]-> DEFICIENCY ,
 CALL CENTER ( ADMIT_DT , 083 , 092 ),
 col 095 ,  TEMP -> REPLY_QUAL [ X ]->		;001
 DETAIL_QUAL [ COUNT4 ]-> PATIENT_TYPE ,  ROW +1 ,													;001
 ;001  CALL CENTER ( ALLOC_DT , 095 , 104 ),
 COL 109 ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ LDETAIL]-> DEF_AGE "###;r"
,  ROW_PLUS
ENDIF
 
 
ENDFOR
 
FOOT   PHYSICIAN
 ORG_CNT =0 , IROWPLUS =2 , ROW_PLUS , COL 002 , I18NHOLDFLAG ,"  " , I18NHOLDLABEL , ROW_PLUS ,
 COL 002 , I18NQUALDEFZERO
 WITH  NOCOUNTER , MAXCOL =3000 , MAXROW =5 , NOHEADING , FORMFEED = NONE
IF ( ( CURQUAL >0 ) )
SET  MLLETTEROUTCNT  = ( MLLETTEROUTCNT +1 )
SET  MSEMAILTEXT  = ""
FREE DEFINE RTL3
DEFINE  RTL3  HOLD_FILE
SELECT  INTO "nl:"
R.LINE
FROM ( RTL3T  R )
 
HEAD REPORT
 BFIRSTLINE = TRUE
DETAIL
 
IF ( ( BFIRSTLINE = TRUE ) )  MSEMAILTEXT = TRIM (R.LINE),  BFIRSTLINE = FALSE
ELSE   MSEMAILTEXT = CONCAT ( MSEMAILTEXT ,  CHAR (10 ),  TRIM (R.LINE, 1 ))
ENDIF
 
 WITH  NOCOUNTER
FREE DEFINE RTL3
 CALL UAR_SEND_MAIL ( NULLTERM ( TRIM ( MSEMAILADDRESS , 3 )),  NULLTERM ( CONCAT ( TRIM ( REQUEST
-> FULL_REPORT_NAME , 3 ), " - " ,  TRIM ( TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_NAME , 3 ))),
 NULLTERM ( MSEMAILTEXT ),  NULLTERM ( TRIM ( MSRETURNEMAILADDRESS , 3 )), 1 , "IPM.Note" )
ENDIF
 
 ELSE
SET  BOUTPUTDEST  =  FALSE
SET  SQUEUENAME  = ""

 
SELECT  INTO "nl:"
FROM ( OUTPUT_DEST  OD ),
( DEVICE  D )
 PLAN ( OD
WHERE (OD.OUTPUT_DEST_CD= REQUEST -> OUTPUT_DEST_CD ))
 AND ( D
WHERE (D.DEVICE_CD=OD.DEVICE_CD))
 
 
DETAIL
 SQUEUENAME =D.NAME
 WITH  NOCOUNTER
IF (  (( ( TEXTLEN ( TRIM ( REQUEST -> PRINTER_ID , 3 ))=0 ) )  OR  (( REQUEST -> PRINTER_ID !=
 SQUEUENAME ) AND ( REQUEST -> OUTPUT_DEST_CD >0 ) ))  )
SET  TEMP_TIME  =  CNVTSTRING ( CURTIME3 , 6 , 0 ,  R )
SET  PRINT_HOLD_FILE  =  BUILD ("CER_PRINT:HIM" ,  TEMP_TIME ,  LCOUNT , ".DAT" )
SET  PRINT_HOLD_FILE_NAME  =  BUILD ("HIM" ,  TEMP_TIME ,  LCOUNT , ".DAT" )
IF ( ( REQUEST -> OUTPUT_DEST_CD >0 ) )
SET  BOUTPUTDEST  =  TRUE
SET  HIM_REQUEST_STRUCT -> FILE_NAME  =  PRINT_HOLD_FILE
SET  HIM_REQUEST_STRUCT -> OUTPUT_DEST_CD  =  REQUEST -> OUTPUT_DEST_CD
SET  HIM_REQUEST_STRUCT -> COPIES  = 1
SET  HIM_REQUEST_STRUCT -> NUMBER_OF_COPIES  = 1
SET  HIM_REQUEST_STRUCT -> TRANSMIT_DT_TM  =  CNVTDATETIME ( CURDATE ,  CURTIME3 )
SET  HIM_REQUEST_STRUCT -> PRIORITY_VALUE  = 0
SET  HIM_REQUEST_STRUCT -> REPORT_TITLE  = "Phys Doc Letters"
SET  HIM_REQUEST_STRUCT -> COUNTRY_CODE  = " "
SET  HIM_REQUEST_STRUCT -> AREA_CODE  = " "
SET  HIM_REQUEST_STRUCT -> EXCHANGE  = " "
SET  HIM_REQUEST_STRUCT -> SUFFIX  = " "
ENDIF
 
ELSE
SET  PRINT_HOLD_FILE  =  VALUE ( REQUEST -> PRINTER_ID )
SET  PRINT_HOLD_FILE_NAME  =  VALUE ( REQUEST -> PRINTER_ID )
ENDIF
,
  call echorecord(temp)
  
SELECT  INTO  VALUE ( PRINT_HOLD_FILE )
 PHYSICIAN = BUILD ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_NAME ,  TEMP -> REPLY_QUAL [
 X ]-> PHYSICIAN_ID ),
 PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]-> PHYSICIAN_ID
; ,DEFIC_AGE = TEMP -> REPLY_QUAL [ X ]->DETAIL_QUAL [ COUNT4 ]-> DEF_AGE "###;r"	;001
FROM ( DUMMYT  D2  WITH  SEQ = VALUE ( ADDRESSES )),
( HIM_SYSTEM_PARAMS  HIM )
 PLAN ( D2
WHERE ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> PHYSICIAN_ID = TEMP -> REPLY_QUAL [ X ]->
 PHYSICIAN_ID ))
 AND ( HIM
WHERE (HIM.ACTIVE_IND=1 ))
 
ORDER BY  PHYSICIAN
;,DEFIC_AGE		;001
 
HEAD REPORT
 ROW_CNT =0 ,
 CUR_DAY = FORMAT ( CURDATE , "@WEEKDAYNAME;;d" ),
 CUR_DATE = FORMAT ( CURDATE , "@LONGDATE;;Q" ),
 CUR_TIME = FORMAT ( CURTIME , "@TIMENOSECONDS;;M" ),
;001  DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 )),
 DATE_LINE = CONCAT ( TRIM ( CUR_DAY , 3 ), ", " ,  TRIM ( CUR_DATE , 3 ), "  ",trim(CUR_TIME,3)),			;001
 PAGE_TOP_IND =0 ,
 LAST_NAME = FILLSTRING (25 , " " )
 pend_dic_cnt = 0			;001
 pend_sig_cnt = 0			;001
 
head page																		;001
 COL 000 ,"{PS/792 0 translate 90 rotate/}{font/8}{CPI/14}" , ROW +1 			;001
 
HEAD  PHYSICIAN
 pend_dic_cnt = 0		;001
 pend_sig_cnt = 0		;001
 PAGE_TOP_IND =0 , ROW_CNT =0 , PAGE_NUM =0 , PAGE_TOP ="Y" , COUNT4 =0 , PREV_ENCNTR_ID =0 ,
 END_PHYSICIAN ="N" , CHART_COUNT =0 , ENCNTR_CNT =0 , ROW +1 , COL 000 ,"{FONT/8}{CPI/14}" ,
 CALL PRINT ( CALCPOS ( X_POS , (10 + Y_POS ))),"{FONT/8}{BOLD}" , REQUEST -> FULL_REPORT_NAME ,
 ROW +1 , COL 000 ,
IF ( ( REQUEST -> PRINT_MED_SERVICE_IND =1 ) AND ( MED_SERVICE_FOUND_IND =1 ) )
 CALL PRINT ( CALCPOS ( X_POS , (30 + Y_POS ))), "{FONT/8}" ,  MED_SERVICE_GROUP ,  ROW +1 ,
 CALL PRINT ( CALCPOS ( X_POS , (40 + Y_POS ))), "{FONT/8}" ,  DATE_LINE ,  ROW_CNT =17
ELSE
 CALL PRINT ( CALCPOS ( X_POS , (30 + Y_POS ))), "{FONT/8}" ,  DATE_LINE ,  ROW_CNT =16
ENDIF
, ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_NAME , ROW +1 ,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , I18NLICNOLABEL , ROW +1 ,
 CALL PRINT ( CALCPOS ((394 + X_POS ), (100 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> LICENSE_NBR "#######"
, ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> ADDRESS1 , ROW +1 ,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , I18NTELLABEL , ROW +1 ,
 CALL PRINT ( CALCPOS ((401 + X_POS ), (110 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHONE_NUM , ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS2 >" " ) )
 CALL PRINT ( CALCPOS ((55 + X_POS ), (120 + Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY -> ADDRESS_QUAL
[D2.SEQ]-> ADDRESS2
ENDIF
, ROW +1 ,
 CALL PRINT ( CALCPOS ((374 + X_POS ), (120 + Y_POS ))),"{FONT/8}" , I18NFAXLABEL , ROW +1 ,
 CALL PRINT ( CALCPOS ((408 + X_POS ), (120 + Y_POS ))),"{FONT/8}" , ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> FAX_NUM , ROW_CNT =( ROW_CNT +1 ), NEW_Y_POS =200 , ROW_CNT =20 ,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 >" " ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS3 ,  ROW_CNT =( ROW_CNT +1 ),  NEW_Y_POS =210 ,  ROW_CNT =21
ENDIF
,
IF ( ( ADDRESS_REPLY -> ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 >" " ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" ,  ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> ADDRESS4 ,  NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 )
ENDIF
, ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ), (10 + NEW_Y_POS ))),"{FONT/8}" , ADDRESS_REPLY ->
 ADDRESS_QUAL [D2.SEQ]-> CITY_LINE , NEW_Y_POS =( NEW_Y_POS +30 ), ROW_CNT =( ROW_CNT +3 ), ROW +1 ,
 COL 000 , LAST_NAME = CONCAT ( I18NDEARDRLABEL , " " ,  TRIM ( ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_LAST_NAME , 3 ), ":" ),
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )),"{FONT/8}" , LAST_NAME , NEW_Y_POS =( NEW_Y_POS +20 ),
 ROW_CNT =( ROW_CNT +2 ),
FOR (  LINE_CNT  = 1  TO  SIZE ( TEXT_REPLY -> TEXT_REPLY_QUAL , 5 ) )
 ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )),"{FONT/8}" , TEXT_REPLY -> TEXT_REPLY_QUAL [ LINE_CNT
]-> TEXT , NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ),
;001  IF ( ( ROW_CNT >=65 ) )
IF ( ( ROW_CNT >=45 ) )  			;001
 ROW +1 ,  COL 000 ,  PAGE_NUM =( PAGE_NUM +1 ),  PAGE_NUM_FMT = FORMAT (
 PAGE_NUM , "##" ),
 CALL PRINT ( CALCPOS ((275 + X_POS ), 670 )), "{FONT/8}" , "Page" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((300 + X_POS ), 670 )), "{FONT/8}" ,  PAGE_NUM_FMT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  ROW_CNT =0 ,  NEW_Y_POS =0 ,  ROW_CNT =0
ENDIF
 
 
ENDFOR
, PREV_ORG =9999 , WRITE_HEADER_IND =0
DETAIL
 REPLY_QUAL_SIZE = SIZE ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL , 5 ),
 
FOR (  COUNT4  = 1  TO  REPLY_QUAL_SIZE  )
 PRINT_LETTER ="Y" ,
IF ( ( PRINT_LETTER ="Y" ) )
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_ID != PREV_ORG ) )  ORG_CNT
=( ORG_CNT +1 ),  PREV_ORG = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_ID ,
 WRITE_HEADER_IND =1 ,
IF ( ( PAGE_TOP_IND =1 ) )  PAGE_TOP_IND =0 ,  NEW_Y_POS =( NEW_Y_POS +60 ),  ROW_CNT =( ROW_CNT +6
)
ELSE   NEW_Y_POS =( NEW_Y_POS +60 ),  ROW_CNT =( ROW_CNT +6 )
ENDIF
 
ELSEIF ( ( PAGE_TOP ="Y" ) )  WRITE_HEADER_IND =1
ELSE   WRITE_HEADER_IND =0
ENDIF
,
IF ( ( WRITE_HEADER_IND =1 ) )
;001  IF ( ( ROW_CNT >=64 ) )
IF ( ( ROW_CNT >=44 ) )  			;001
NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),
IF ( ( END_PHYSICIAN ="N" ) )  PAGE_NUM =( PAGE_NUM +1 ),  PAGE_NUM_FMT = FORMAT ( PAGE_NUM , "##" )
,  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((275 + X_POS ), 700 )), "{FONT/8}" , "Page" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((300 + X_POS ), 700 )), "{FONT/8}" ,  PAGE_NUM_FMT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  PAGE_TOP ="Y" ,  NEW_Y_POS =20 ,  ROW_CNT =2
ENDIF
 
ENDIF
,  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  I18NFACILITY , " " ,  ROW +
1 ,
 CALL PRINT ( CALCPOS ((55 + X_POS ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> ORGANIZATION_NAME ,  ROW +1 ,
 CALL PRINT ( CALCPOS (400 ,  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  ADDRESS_REPLY -> ADDRESS_QUAL [
D2.SEQ]-> PHYSICIAN_NAME ,  NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),
 
IF ( ( TEMP -> REPLY_QUAL [ X ]-> SUSPENSION_FLAG >0 ) AND ( TEMP -> REPLY_QUAL [ X ]->
 ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_DT_TM > NULL ) )  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  I18NSUSPENDEDNOTICE ,  ROW +
1 ,  FORMATTEDSUSPDT = FORMAT ( DATETIMEZONE ( TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]
-> SUSPENSION_DT_TM ,  TEMP -> REPLY_QUAL [ X ]-> ORG_SUSP_QUAL [ ORG_CNT ]-> SUSPENSION_TZ , 1 ),
"@SHORTDATE;4;q" ),
 CALL PRINT ( CALCPOS ((100 + X_POS ),  NEW_Y_POS )), "{FONT/8}{BOLD}" ,  FORMATTEDSUSPDT ,
 NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 )
ENDIF
 NEW_Y_POS =( NEW_Y_POS +10 )
,  ROW +1 ,  COL 000 ,"{CPI/12}",
;001 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((73 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENT ,  ROW +1 ,		;001
;001  CALL PRINT ( CALCPOS ((460 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NADMIT ,  ROW +1 ,
;001  CALL PRINT ( CALCPOS ((530 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDISCHARGE ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((485 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NADMIT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((550 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDISCHARGE ,  ROW +1 ,
;001  CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NALLOC ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFIC ,  NEW_Y_POS =(
 CALL PRINT ( CALCPOS ((720 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFIC ,  NEW_Y_POS =(			;001
 NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  ROW +1 ,  COL 000 ,
;001 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  I18NMRN ,  ROW +1 ,
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  I18NFIN ,  ROW +1 ,		;001
;001 CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NNAME ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((73 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NNAME ,  ROW +1 ,			;001
IF (  HIM_TRACKING_ORDERS_IND  )
;001 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFICIENCY ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NSTATUS
 CALL PRINT ( CALCPOS ((220 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFICIENCY ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((385 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NSTATUS
ELSE
 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDOCUMENT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDEFIC
ENDIF
,  ROW +1 ,
;001  CALL PRINT ( CALCPOS ((460 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,
;001  CALL PRINT ( CALCPOS ((530 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((485 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,			;001
 CALL PRINT ( CALCPOS ((550 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,			;001
;001 CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NDATE ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((455 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENTTYPE ,  ROW +1 ,		;001
 CALL PRINT ( CALCPOS ((615 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NPATIENTTYPE ,  ROW +1 ,		;001
;001 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NAGE ,  NEW_Y_POS =(
 CALL PRINT ( CALCPOS ((720 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  I18NAGE ,  NEW_Y_POS =(
 NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}" ,  DASH ,  ROW +1 ,  NEW_Y_POS =(
 NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),  PAGE_TOP ="N"
ENDIF
,  HOLD_DEF_AGE = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> DEF_AGE , "###" ),
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ENCNTR_ID != PREV_ENCNTR_ID ) )  ROW +1
,  COL 000 ,
IF ( ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]-> ON_HOLD =1 ) )
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), "{FONT/8}" ,  I18NHOLDFLAG
ENDIF
,"{CPI/12}",
 CALL PRINT ( CALCPOS ( X_POS ,  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL
;001  [ COUNT4 ]-> PAT_MRN ,  ROW +1 ,
[ COUNT4 ]-> FIN_NBR ,  ROW +1 ,		;001
;001  CALL PRINT ( CALCPOS ((133 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((73 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->		;001
 DETAIL_QUAL [ COUNT4 ]-> PATIENT_NAME ,
 PREV_ENCNTR_ID = TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [COUNT4 ]-> ENCNTR_ID
ENDIF
,  ROW +1 ,  COL 000 ,
 DISCH_DT = FORMAT(TEMP->REPLY_QUAL[X]->DETAIL_QUAL[COUNT4]->DISCH_DATE, "@SHORTDATE4YR"),	;001
ADMIT_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]->
 ADMIT_DATE , "@SHORTDATE" ),  ALLOC_DT = FORMAT ( TEMP -> REPLY_QUAL [ X ]-> DETAIL_QUAL [ COUNT4 ]
-> ALLOC_DATE , "@SHORTDATE" ),
;001 CALL PRINT ( CALCPOS ((245 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((220 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 DETAIL_QUAL [ COUNT4 ]-> DOCUMENT ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((335 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((385 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->			;001
 DETAIL_QUAL [ COUNT4 ]-> DEFICIENCY ,  ROW +1 ,
 if (TEMP->REPLY_QUAL[X]->DETAIL_QUAL[COUNT4]->DEFICIENCY = "Pending Dictation")					;001
   pend_dic_cnt = pend_dic_cnt + 1																	;001
 elseif (TEMP->REPLY_QUAL[X]->DETAIL_QUAL[COUNT4]->DEFICIENCY = "Pending Signature")				;001
   pend_sig_cnt = pend_sig_cnt + 1																	;001
 endif																								;001
 CALL PRINT ( CALCPOS ((485 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  ADMIT_DT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((550 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  DISCH_DT ,  ROW +1 ,			;001
 CALL PRINT ( CALCPOS ((615 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->		;001
 DETAIL_QUAL [ COUNT4 ]-> PATIENT_TYPE ,  ROW +1 ,													;001
;001  CALL PRINT ( CALCPOS ((480 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  ALLOC_DT ,  ROW +1 ,
;001 CALL PRINT ( CALCPOS ((535 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->
 CALL PRINT ( CALCPOS ((720 + X_POS ),  NEW_Y_POS )), "{FONT/8}" ,  TEMP -> REPLY_QUAL [ X ]->			;001
 DETAIL_QUAL [ COUNT4 ]-> DEF_AGE "###;r"
,  NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),
;001  IF ( ( ROW_CNT >=68 ) )
IF ( ( ROW_CNT >=48 ) )  			;001
NEW_Y_POS =( NEW_Y_POS +10 ),  ROW_CNT =( ROW_CNT +1 ),
IF ( ( END_PHYSICIAN ="N" ) )  PAGE_NUM =( PAGE_NUM +1 ),  PAGE_NUM_FMT = FORMAT ( PAGE_NUM , "##" )
,  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((275 + X_POS ), 700 )), "{FONT/8}" , "Page" ,
 CALL PRINT ( CALCPOS ((300 + X_POS ), 700 )), "{FONT/8}" ,  PAGE_NUM_FMT ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((575 + X_POS ), (10 + NEW_Y_POS ))), "{FONT/8}" , " " , BREAK,  PAGE_TOP_IND
=1 ,  PAGE_TOP ="Y" ,  NEW_Y_POS =20 ,  ROW_CNT =2
ENDIF
 
ENDIF
 
ENDIF
 
 
ENDFOR
 
FOOT   PHYSICIAN
 ORG_CNT =0 , ROW +1 , COL 000 ,"{CPI/14}", NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ),
 CALL PRINT ( CALCPOS ((10 + X_POS ),  NEW_Y_POS )),"{FONT/8}Number of Pending Dictation charts:  " ,	;001
 CALL PRINT ( CALCPOS ((190 + X_POS ),  NEW_Y_POS )),"{FONT/8}" , pend_dic_cnt "###" 					;001
 NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ),													;001
 CALL PRINT ( CALCPOS ((10 + X_POS ),  NEW_Y_POS )),"{FONT/8}Number of Pending Signature charts:  " ,	;001
 CALL PRINT ( CALCPOS ((190 + X_POS ),  NEW_Y_POS )),"{FONT/8}" , pend_sig_cnt "###" 					;001
 NEW_Y_POS =( NEW_Y_POS +20 ),ROW_CNT =( ROW_CNT +2 ), ROW +1 ,
 COL 000 ,"{CPI/14}", CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), I18NHOLDFLAG ,"  " , I18NHOLDLABEL ,
 NEW_Y_POS =( NEW_Y_POS +10 ), ROW_CNT =( ROW_CNT +1 ), ROW +1 , COL 000 ,
 CALL PRINT ( CALCPOS (( X_POS -5 ),  NEW_Y_POS )), I18NQUALDEFZERO ,
IF ( ( SIZE ( ADDRESS_REPLY -> ADDRESS_QUAL , 5 )>=D2.SEQ) )  PAGE_NUM =( PAGE_NUM +1 ),
 PAGE_NUM_FMT = FORMAT ( PAGE_NUM , "##" ),  ROW +1 ,  COL 000 ,
 CALL PRINT ( CALCPOS ((275 + X_POS ), 700 )), "{FONT/8}" , "Page" ,  ROW +1 ,
 CALL PRINT ( CALCPOS ((300 + X_POS ), 700 )), "{FONT/8}" ,  PAGE_NUM_FMT ,  PAGE_TOP ="Y" ,
 END_PHYSICIAN ="Y"
ENDIF
 
 WITH  NOCOUNTER , DIO =8 , MAXCOL =400 , MAXROW =700
IF ( ( CURQUAL >0 ) )
IF (  BOUTPUTDEST  )
 EXECUTE SYS_OUTPUTDEST_PRINT WITH  REPLACE ( REQUEST ,  HIM_REQUEST_STRUCT ),
 REPLACE ( REPLY ,  HIM_REPLY_STRUCT )
IF ( ( HIM_REPLY_STRUCT -> STS =1 ) )
COMMIT
SET  MLLETTEROUTCNT  = ( MLLETTEROUTCNT +1 )
ELSE
SET  ERR  =  FILLSTRING (50 , " " )
SET  ERR  =  BUILD ( TRIM ("SYS_OUTPUT_DEST Error code: " ),  CNVTSTRING ( HIM_REPLY_STRUCT -> STS )
)
ENDIF
 
ELSE
SET  MLLETTEROUTCNT  = ( MLLETTEROUTCNT +1 )
ENDIF
 
ENDIF
 
 ENDCASE
 
 
ENDFOR
 
 
IF ( ( MLLETTEROUTCNT =0 ) )
SET  REPLY -> STATUS_DATA -> STATUS  = "F"
SET  REPLY -> STATUS_DATA -> SUBEVENTSTATUS [1 ]-> OPERATIONNAME  = "SELECT"
SET  REPLY -> STATUS_DATA -> SUBEVENTSTATUS [1 ]-> OPERATIONSTATUS  = "F"
SET  REPLY -> STATUS_DATA -> SUBEVENTSTATUS [1 ]-> TARGETOBJECTNAME  = "TABLE"
SET  REPLY -> STATUS_DATA -> SUBEVENTSTATUS [1 ]-> TARGETOBJECTVALUE  = "TABLE"
ELSE
SET  REPLY -> STATUS_DATA -> STATUS  = "S"
ENDIF
 
 
FREE DEFINE RTL3
 
 CALL ECHORECORD ( REPLY )
 END GO
 
