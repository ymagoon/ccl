/************************************************************************
          Date Written:       04/28/11
          Source file name:   mayo_mn_30_day_readmission.prg
          Object name:        mayo_mn_30_day_readmission
          Request #:
 
          Program purpose:   30 day readmission report
 
          Executing from:     Explorer Menu
 
 ***********************************************************************
 *                  GENERATED MODIFICATION CONTROL LOG                 *
 ***********************************************************************
 *                                                                     *
 *Mod Date     Engineer             Comment                            *
 *--- -------- -------------------- -----------------------------------*
 *000 04/28/11 Akcia      initial release                              *
 *001 08/01/13 Akcia	   add check on age of > 18 and ops logic
 *002 08/28/13 Akcia		 add additional nurse units to ignore and add to both encounter joins
 *003 11/20/14 Akcia	  multiple changes for redo of report
 ***********************************************************************
 
  ******************  END OF ALL MODCONTROL BLOCKS  ********************/
 
drop program mayo_mn_30_day_readmission:dba go
create program mayo_mn_30_day_readmission:dba
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
	;<<hidden>>"Facility Group" = ""
	, "Select Facilities" = 0
	, "Nurse Unit" = 0
	, "Start Date" = CURDATE
	, "End Date" = CURDATE
 
with OUTDEV, facility, nurse_unit, start_date, end_date
 
;start 001
declare ops_ind = c1 with noconstant("N")
set ops_ind =  validate(request->batch_selection, "Z")
 
if (ops_ind = "Z")
	set beg_dt = cnvtdatetime(cnvtdate($start_date),0)
  set end_dt = cnvtdatetime(cnvtdate($end_date),235959)
else
	set beg_dt = datetimefind(cnvtlookbehind("1,M",sysdate),"M","B","B")
  set end_dt = datetimefind(cnvtlookbehind("1,M",sysdate),"M","E","E")
endif
;end 001
 
 
declare foll_up_attempted_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "RFRFOLLOWUPATTEMPTED"))			;003
declare foll_up_completed_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "RFRFOLLOWUPCOMPLETED"))			;003
declare high_risk_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "HIGHRISKFORREADMISSION"))				;003
declare inter_risk_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "INTERMEDIATERISKFORREADMISSION"))		;003
 
declare inpatient_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 71, "INPATIENT"))
declare observation_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 71, "OBSERVATION"))			;003
 
declare mrn_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 319, "MRN"))
declare fin_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 319, "FINNBR"))
declare teach_eval_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "TEACHINGEVALUATION"))
declare disch_phone_call_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "HOSPITALDISCHARGEPHONECALL"))
declare disch_follow_up_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 72, "DISCHARGEFOLLOWUPFORM"))
declare prim_phys_cd = f8 with protect, constant(uar_get_code_by("MEANING", 331, "PCP"))
declare att_phys_cd = f8 with protect, constant(uar_get_code_by("MEANING", 333, "ATTENDDOC"))
declare bh_nu1_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 220, "AUHOPSYCH"))
declare bh_nu2_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 220, "LASFIPBH"))
declare bh_nu3_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 220, "FAFNLUTZWING"))	;002
declare bh_nu4_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 220, "MAIJMENTALHLT"))		;002
declare disch_hosp_pat_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 200, "DISCHARGEHOSPITALPATIENT"))	;003				;003
declare order_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 6003, "ORDER"))	;003				;003
declare npi_cd = f8 with protect, constant(uar_get_code_by("DISPLAYKEY", 263, "NPI"))
 
 
declare age_back_18 = dq8 with protect, constant(cnvtlookbehind("18,Y",sysdate)) 			;001
;if (reflect($nurse_unit) = "C1")
;  set nurse_unit_where = " 1 = 1 "
;else
;  set nurse_unit_where = " e.loc_nurse_unit_cd =  "
;endif
;
 
 
record data (
1 qual[*]
  2 person_id = f8
  2 disch_encntr_id = f8
  2 readmit_encntr_id = f8
  2 mrn = vc
  2 pat_name = vc
  2 disch_date= vc
  2 readmit_date = vc
  2 score = vc
  2 nur_unit = vc
;003  2 admit_unit = vc
  2 admit_fin = vc
  2 disch_fin = vc
  2 prim_care_phys = vc
  2 attend_phys = vc
  2 teach_back = c3
;003   2 disch_service = vc
  2 disch_prov = vc				;003
  2 discharged_to = vc			;003
  2 disch_reason= vc
  2 admit_reason = vc
  2 call_back = vc
  2 foll_up_comp = vc			;003
  2 prim_npi = c20		;003
  2 eligible = c1			;003
1 radmits_tot = i2
  1 teach_back_tot = i2
;003  1 disch_phone_tot = i2
1 readmits_teach_success = i2		;003
1 readmits_success  = i2			;003
;003  1 teach_call_tot = i2
1 score_high = i2
1 score_med = i2
1 score_low = i2
1 eligible_tot = i2				;003
1 eligible_called = i2			;003
1 eligible_success = i2			;003
1 eligible_unsuccess = i2		;003
)
 
record display (
1 qual[*]
  2 col_mrn = vc
  2 col_name = vc
  2 col_dis_dt = vc
  2 col_readmit = vc
  2 col_score = vc
  2 col_prim_phys = vc
  2 col_prim_npi = c25		;003
  2 col_attend_phys = vc
  2 col_unit = vc
;003  2 col_ad_unit = vc
  2 col_ad_fin = vc
  2 col_ds_fin = vc
  2 col_teach = vc
;003  2 col_dis_serv = vc
  2 col_dis_prov = vc			;003
  2 col_dis_to = vc				;003
  2 col_dis_reason = vc
  2 col_admit_rea = vc
  2 col_call = vc
  2 col_foll_up_comp = vc			;003
 
)
 
 
select if (reflect($nurse_unit) = "C1")
	plan e
;001	where e.reg_dt_tm between cnvtdatetime(cnvtdate($start_date),0) and cnvtdatetime(cnvtdate($end_date),235959)
	where e.reg_dt_tm between cnvtdatetime(cnvtdate(beg_dt),0) and cnvtdatetime(cnvtdate(end_dt),235959)	;001
	  and e.active_ind = 1
	  and e.end_effective_dt_tm > sysdate
;003 	  and e.encntr_type_cd = inpatient_cd
	  and e.encntr_type_cd in ( inpatient_cd,observation_cd)			;003
	  and e.loc_facility_cd = $facility
	  and e.loc_nurse_unit_cd > 0
;002	  and not e.loc_nurse_unit_cd in (bh_nu1_cd,bh_nu2_cd)
	  and not e.loc_nurse_unit_cd in (bh_nu1_cd,bh_nu2_cd,bh_nu3_cd,bh_nu4_cd)			;002
 
	join e1
	where e1.person_id = e.person_id
	  and e1.encntr_id != e.encntr_id
    and e1.disch_dt_tm between e.reg_dt_tm-30 and e.reg_dt_tm
	  and e1.active_ind = 1
	  and e1.end_effective_dt_tm > sysdate
;003 	  and 1e.encntr_type_cd = inpatient_cd
	  and e1.encntr_type_cd in ( inpatient_cd,observation_cd)			;003
	  and e1.loc_facility_cd = $facility				;002
	  and e1.loc_nurse_unit_cd > 0							;002
	  and not e1.loc_nurse_unit_cd in (bh_nu1_cd,bh_nu2_cd,bh_nu3_cd,bh_nu4_cd)			;002
 
	join p
	where p.person_id = e1.person_id
	  and p.birth_dt_tm < cnvtdatetime(age_back_18)				;001
 
	join ea
	where ea.encntr_id = e1.encntr_id
	  and ea.end_effective_dt_tm > sysdate
	  and ea.active_ind = 1
	  and ea.encntr_alias_type_cd = mrn_cd
 
join ea1
where ea1.encntr_id = e1.encntr_id
  and ea1.end_effective_dt_tm > sysdate
  and ea1.active_ind = 1
  and ea1.encntr_alias_type_cd = fin_cd
 
join ea2
where ea2.encntr_id = e.encntr_id
  and ea2.end_effective_dt_tm > sysdate
  and ea2.active_ind = 1
  and ea2.encntr_alias_type_cd = fin_cd
 
join ppr
	where ppr.person_id = outerjoin(p.person_id)
	  and ppr.active_ind = outerjoin(1)
	  and ppr.end_effective_dt_tm > outerjoin(sysdate)
	  and ppr.person_prsnl_r_cd = outerjoin(prim_phys_cd)
 
join p1
  where p1.person_id = outerjoin(ppr.prsnl_person_id)
 
;start 003
join pa1
where pa1.person_id = outerjoin(ppr.prsnl_person_id)
  and pa1.alias_pool_cd = outerjoin(npi_cd)
  and pa1.active_ind = outerjoin(1)
  and pa1.end_effective_dt_tm > outerjoin(sysdate)
;end 003
 
join epr
	where epr.encntr_id = outerjoin(e1.encntr_id)
	  and epr.active_ind = outerjoin(1)
	  and epr.end_effective_dt_tm > outerjoin(sysdate)
	  and epr.encntr_prsnl_r_cd = outerjoin(att_phys_cd)
 
join p2
  where p2.person_id = outerjoin(epr.prsnl_person_id)
 
;start 003
join o
where o.encntr_id = outerjoin(e1.encntr_id)
  and o.catalog_cd = outerjoin(disch_hosp_pat_cd)
  and o.active_ind = outerjoin(1)
 
join oa
where oa.order_id = outerjoin(o.order_id)
  and oa.action_type_cd = outerjoin(order_cd)
 
join pl
where pl.person_id = outerjoin(oa.order_provider_id)
 
join od
where od.order_id = outerjoin(o.order_id)
  and od.oe_field_id = outerjoin(801149786.00)
 
;end 003
endif
 
 
into "nl:"
from
encounter e,
encounter e1,
person p,
encntr_alias ea,
encntr_alias ea1,
encntr_alias ea2,
person_prsnl_reltn ppr,
person p1,
prsnl_alias pa1,		;003
encntr_prsnl_reltn epr,
person p2,
orders o,			;003
order_action oa,		;003
order_detail od,
prsnl pl 			;003
 
plan e
;001	where e.reg_dt_tm between cnvtdatetime(cnvtdate($start_date),0) and cnvtdatetime(cnvtdate($end_date),235959)
	where e.reg_dt_tm between cnvtdatetime(cnvtdate(beg_dt),0) and cnvtdatetime(cnvtdate(end_dt),235959)	;001
	  and e.active_ind = 1
	  and e.end_effective_dt_tm > sysdate
;003 	  and e.encntr_type_cd = inpatient_cd
	  and e.encntr_type_cd in ( inpatient_cd,observation_cd)			;003
	  and e.loc_facility_cd = $facility
	  and e.loc_nurse_unit_cd = $nurse_unit
 
join e1
where e1.person_id = e.person_id
  and e1.encntr_id != e.encntr_id
  and e1.disch_dt_tm between e.reg_dt_tm-30 and e.reg_dt_tm
  and e1.active_ind = 1
  and e1.end_effective_dt_tm > sysdate
;003 	  and e1.encntr_type_cd = inpatient_cd
	  and e1.encntr_type_cd in ( inpatient_cd,observation_cd)			;003
	and e1.loc_facility_cd = $facility						;002
	and e1.loc_nurse_unit_cd = $nurse_unit				;002
 
join p
where p.person_id = e.person_id
  and p.birth_dt_tm < cnvtdatetime(age_back_18)				;001
 
join ea
where ea.encntr_id = e1.encntr_id
  and ea.end_effective_dt_tm > sysdate
  and ea.active_ind = 1
  and ea.encntr_alias_type_cd = mrn_cd
 
join ea1
where ea1.encntr_id = e1.encntr_id
  and ea1.end_effective_dt_tm > sysdate
  and ea1.active_ind = 1
  and ea1.encntr_alias_type_cd = fin_cd
 
join ea2
where ea2.encntr_id = e.encntr_id
  and ea2.end_effective_dt_tm > sysdate
  and ea2.active_ind = 1
  and ea2.encntr_alias_type_cd = fin_cd
 
join ppr
	where ppr.person_id = outerjoin(p.person_id)
	  and ppr.active_ind = outerjoin(1)
	  and ppr.end_effective_dt_tm > outerjoin(sysdate)
	  and ppr.person_prsnl_r_cd = outerjoin(prim_phys_cd)
 
join p1
  where p1.person_id = outerjoin(ppr.prsnl_person_id)
 
;start 003
join pa1
where pa1.person_id = outerjoin(ppr.prsnl_person_id)
  and pa1.alias_pool_cd = outerjoin(npi_cd)
  and pa1.active_ind = outerjoin(1)
  and pa1.end_effective_dt_tm > outerjoin(sysdate)
;end 003
 
join epr
	where epr.encntr_id = outerjoin(e1.encntr_id)
	  and epr.active_ind = outerjoin(1)
	  and epr.end_effective_dt_tm > outerjoin(sysdate)
	  and epr.encntr_prsnl_r_cd = outerjoin(att_phys_cd)
 
join p2
  where p2.person_id = outerjoin(epr.prsnl_person_id)
 
;start 003
join o
where o.encntr_id = outerjoin(e1.encntr_id)
  and o.catalog_cd = outerjoin(disch_hosp_pat_cd)
  and o.active_ind = outerjoin(1)
 
join oa
where oa.order_id = outerjoin(o.order_id)
  and oa.action_type_cd = outerjoin(order_cd)
 
join pl
where pl.person_id = outerjoin(oa.order_provider_id)
 
join od
where od.order_id = outerjoin(o.order_id)
  and od.oe_field_id = outerjoin(801149786.00)
 
;end 003
 
 
order p.name_full_formatted,ea2.alias,e1.disch_dt_tm desc
 
head report
cnt = 0
 
head ea2.alias
cnt = cnt + 1
stat = alterlist(data->qual,cnt)
data->qual[cnt].person_id  = e1.person_id
data->qual[cnt].disch_encntr_id  = e1.encntr_id
data->qual[cnt].readmit_encntr_id =  e.encntr_id
data->qual[cnt].mrn  = cnvtalias(ea.alias,ea.alias_pool_cd)
data->qual[cnt].pat_name = p.name_full_formatted
data->qual[cnt].disch_date = format(e1.disch_dt_tm,"mm/dd/yy hh:mm;;d")
data->qual[cnt].readmit_date = format(e.reg_dt_tm,"mm/dd/yy hh:mm;;d")
data->qual[cnt].nur_unit = uar_get_code_display(e1.loc_nurse_unit_cd)
;003 data->qual[cnt].admit_unit = uar_get_code_display(e.loc_nurse_unit_cd)
data->qual[cnt].admit_fin = cnvtalias(ea2.alias,ea2.alias_pool_cd)
data->qual[cnt].disch_fin = cnvtalias(ea1.alias,ea1.alias_pool_cd)
data->qual[cnt].prim_care_phys = p1.name_full_formatted
data->qual[cnt].attend_phys = p2.name_full_formatted
;003  data->qual[cnt].disch_service = uar_get_code_display(e1.med_service_cd)
data->qual[cnt].disch_prov = pl.name_full_formatted		;003
data->qual[cnt].discharged_to = od.oe_field_display_value
data->qual[cnt].disch_reason = e1.reason_for_visit
data->qual[cnt].admit_reason = e.reason_for_visit
data->qual[cnt].teach_back = "No"
data->qual[cnt].prim_npi = pa1.alias			;003
 
if (od.oe_field_display_value in ("Home","Other (Special Instructions)"))		;003
  data->qual[cnt].eligible = "Y"			;003
  data->eligible_tot = data->eligible_tot + 1			;003
else										;003
  data->qual[cnt].eligible = "N"			;003
endif										;003
data->radmits_tot = data->radmits_tot + 1
 
with nocounter
 
select into "nl:"
from
(dummyt d with seq = size(data->qual,5)),
clinical_event ce,
ce_coded_result ccr
 
plan d
 
join ce
where ce.person_id = data->qual[d.seq].person_id
  and ce.event_cd = teach_eval_cd
  and ce.encntr_id = data->qual[d.seq].disch_encntr_id
  and ce.valid_until_dt_tm > sysdate
  and not ce.result_status_cd in (28.00,29.00,30.00,31.00)
 
join ccr
where ccr.event_id = ce.event_id
  and ccr.valid_until_dt_tm > sysdate
  and ccr.descriptor = "Able to teach back"
 
order d.seq
 
head d.seq
data->qual[d.seq].teach_back = "Yes"
data->teach_back_tot = data->teach_back_tot + 1
 
with nocounter
 
;start 003
;select into "nl:"
;from
;(dummyt d with seq = size(data->qual,5)),
;clinical_event ce
;
;plan d
;
;join ce
;where ce.person_id = data->qual[d.seq].person_id
;  and ce.event_cd in (disch_phone_call_cd,disch_follow_up_cd)
;  and ce.encntr_id = data->qual[d.seq].disch_encntr_id
;  and ce.valid_until_dt_tm > sysdate
;  and not ce.result_status_cd in (28.00,29.00,30.00,31.00)
;  and ce.view_level = 1
;
;order d.seq, ce.event_end_dt_tm desc
;
;head d.seq
;;data->qual[d.seq].call_back = format(ce.event_end_dt_tm,"mm/dd/yy hh:mm;;d")
;data->disch_phone_tot = data->disch_phone_tot + 1
;if (data->qual[d.seq].teach_back = "Yes")
;  data->teach_call_tot = data->teach_call_tot + 1
;endif
;with nocounter
 
 
select into "nl:"
from
(dummyt d with seq = size(data->qual,5)),
clinical_event ce
 
plan d
 
join ce
where ce.person_id = data->qual[d.seq].person_id
  and ce.event_cd in (foll_up_attempted_cd,foll_up_completed_cd)
  and ce.encntr_id = data->qual[d.seq].disch_encntr_id
  and ce.valid_until_dt_tm > sysdate
  and not ce.result_status_cd in (28.00,29.00,30.00,31.00)
  and ce.view_level = 1
 
order d.seq, ce.event_cd, ce.event_end_dt_tm desc
 
head report
attempted = "N"
 
head d.seq
attempted = "N"
 
head ce.event_cd
 
case (ce.event_cd)
  of foll_up_attempted_cd: data->qual[d.seq].call_back = concat(format(ce.event_end_dt_tm,"mm/dd/yy;;d"),"  ",trim(ce.result_val,3))
  							if (data->qual[d.seq].eligible = "Y")
  							  data->eligible_unsuccess = data->eligible_unsuccess + 1
  							  data->eligible_called = data->eligible_called + 1
  							  attempted = "Y"
  							endif
 
  of foll_up_completed_cd: data->qual[d.seq].foll_up_comp = format(ce.event_end_dt_tm,"mm/dd/yy;;d")
  							if (data->qual[d.seq].eligible = "Y")
  							  data->eligible_success = data->eligible_success + 1
  							  if (attempted = "Y")
  							    data->eligible_unsuccess = data->eligible_unsuccess - 1
  							  endif
  							  if (attempted = "N")
  							    data->eligible_called = data->eligible_called + 1
  							  endif
  							endif
  							data->readmits_success = data->readmits_success + 1
  							if (data->qual[d.seq].teach_back = "Yes")
  							   data->readmits_teach_success = data->readmits_teach_success + 1
  							endif
 
endcase
 
with nocounter
 
select into "nl:"
from
(dummyt d with seq = size(data->qual,5)),
clinical_event ce
 
plan d
 
join ce
where ce.person_id = data->qual[d.seq].person_id
  and ce.event_cd in (high_risk_cd,inter_risk_cd)
  and ce.encntr_id = data->qual[d.seq].disch_encntr_id
  and ce.valid_until_dt_tm > sysdate
  and not ce.result_status_cd in (28.00,29.00,30.00,31.00)
  and ce.view_level = 1
 
order d.seq, ce.event_end_dt_tm desc
 
head d.seq
 
case (ce.event_cd)
  of high_risk_cd:  data->qual[d.seq].score = ce.result_val
  					data->score_high = data->score_high + 1
  					call echo(d.seq)
  					call echo(data->score_high)
  of inter_risk_cd:  data->qual[d.seq].score = ce.result_val
  					data->score_med = data->score_med + 1
endcase
 
with nocounter
;end 003
 
declare dcnt = i4
 ;;
set dcnt = 4
set stat = alterlist(display->qual,dcnt)
;003    set display->qual[1].col_mrn = "30 Day Readmission Report"
set display->qual[1].col_mrn = concat("30 Day Readmission Report for ",trim(uar_get_code_display($facility),3))		;003
set display->qual[2].col_mrn = concat(format(cnvtdate($start_date),"mm/dd/yy;;d")," - ",format(cnvtdate($end_date),"mm/dd/yy;;d"))
set display->qual[4].col_mrn = "MRN"
set display->qual[4].col_name = "Name"
set display->qual[4].col_dis_dt = "Discharge Date"
set display->qual[4].col_readmit = "Readmission"
set display->qual[4].col_score = "Score"
set display->qual[4].col_unit = "Discharge Unit"
;003  set display->qual[4].col_ad_unit = "Admit Unit"
set display->qual[4].col_ad_fin = "Admit FIN"
set display->qual[4].col_ds_fin = "Discharge FIN"
set display->qual[4].col_attend_phys = "Attending Physician"
 
set display->qual[4].col_prim_phys = "Primary Physician"
set display->qual[4].col_prim_npi = "Primary Physician NPI"			;003
 
set display->qual[4].col_teach = "Teach Back"
;003  set display->qual[4].col_dis_serv = "Disch Service"
set display->qual[4].col_dis_prov = "Disch Provider"			;003
set display->qual[4].col_dis_to = "Discharged To"			;003
;003  set display->qual[4].col_dis_reason = "Disch Reason"
set display->qual[4].col_dis_reason = "Reason for Visit"			;003
set display->qual[4].col_admit_rea = "Admit Reason"
;003  set display->qual[4].col_call = "Call Back"
set display->qual[4].col_call = "Follow Up Attempted"						;003
set display->qual[4].col_foll_up_comp = "Follow Up Completed"			;003
 
for (x = 1 to size(data->qual,5))
  set dcnt = dcnt + 1
  set stat = alterlist(display->qual,dcnt)
  set display->qual[dcnt].col_mrn = data->qual[x].mrn
  set display->qual[dcnt].col_name = data->qual[x].pat_name
  set display->qual[dcnt].col_dis_dt = data->qual[x].disch_date
  set display->qual[dcnt].col_readmit = data->qual[x].readmit_date
  set display->qual[dcnt].col_score = data->qual[x].score
  set display->qual[dcnt].col_unit = data->qual[x].nur_unit
;003  set display->qual[dcnt].col_ad_unit = data->qual[x].admit_unit
  set display->qual[dcnt].col_ad_fin = data->qual[x].admit_fin
  set display->qual[dcnt].col_ds_fin = data->qual[x].disch_fin
  set display->qual[dcnt].col_attend_phys = data->qual[x].attend_phys
  set display->qual[dcnt].col_prim_phys = data->qual[x].prim_care_phys
  set display->qual[dcnt].col_prim_npi = data->qual[x].prim_npi			;003
  set display->qual[dcnt].col_teach = data->qual[x].teach_back
;003  set display->qual[dcnt].col_dis_serv = data->qual[x].disch_service
  set display->qual[dcnt].col_dis_prov = data->qual[x].disch_prov		;003
  set display->qual[dcnt].col_dis_to = data->qual[x].discharged_to		;003
  set display->qual[dcnt].col_dis_reason = data->qual[x].disch_reason
  set display->qual[dcnt].col_admit_rea = data->qual[x].admit_reason
  set display->qual[dcnt].col_call = data->qual[x].call_back
  set display->qual[dcnt].col_foll_up_comp = data->qual[x].foll_up_comp  		;003
endfor
 
set dcnt = dcnt + 18
set stat = alterlist(display->qual,dcnt)
set dcnt = dcnt - 16
set display->qual[dcnt].col_mrn = "Total Patients Readmitted for the Period:"
set display->qual[dcnt].col_name = cnvtstring(data->radmits_tot)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Score Range Totals: High:"
set display->qual[dcnt].col_name = cnvtstring(data->score_high)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Medium:"
set display->qual[dcnt].col_name = cnvtstring(data->score_med)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Low:"
set display->qual[dcnt].col_name = cnvtstring(data->radmits_tot-(data->score_high+data->score_med))
set dcnt = dcnt + 2
set display->qual[dcnt].col_mrn = "Total Readmitted Patients that received Teach-Back:"
set display->qual[dcnt].col_name = cnvtstring(data->teach_back_tot)
set dcnt = dcnt + 1
;003  set display->qual[dcnt].col_mrn = "Total Patient Readmitted that received both Teach-Back and Post Discharge Phone Call:"
set display->qual[dcnt].col_mrn = "Total Readmitted Patients that received both Teach-Back and successfully contacted:"	;003
set display->qual[dcnt].col_name = cnvtstring(data->readmits_teach_success)
;003  set display->qual[dcnt].col_name = cnvtstring(data->teach_call_tot)
set dcnt = dcnt + 1
;003  set display->qual[dcnt].col_mrn = "Total Patient Readmitted that received a Post Discharge Phone Call:"
set display->qual[dcnt].col_mrn = "Total Readmitted Patients successfully contacted:"				;003
set display->qual[dcnt].col_name = cnvtstring(data->readmits_success)
;003  set display->qual[dcnt].col_name = cnvtstring(data->disch_phone_tot)
;start 003
set dcnt = dcnt + 2
set display->qual[dcnt].col_mrn = "Total eligible patients:"
set display->qual[dcnt].col_name = cnvtstring(data->eligible_tot)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Total eligible patients called (successful and unsuccessful):"
set display->qual[dcnt].col_name = cnvtstring(data->eligible_called)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Total eligible patients successfully contacted:"
set display->qual[dcnt].col_name = cnvtstring(data->eligible_success)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Total eligible patients unsuccessfully contacted:"
set display->qual[dcnt].col_name = cnvtstring(data->eligible_unsuccess)
set dcnt = dcnt + 1
set display->qual[dcnt].col_mrn = "Eligible patients not called:"
set display->qual[dcnt].col_name = cnvtstring((data->eligible_tot -data->eligible_called ))
 
 ;end 003
 
select into $outdev
;003   column1 = substring(1,50,display->qual[d.seq].col_mrn),
column1 = substring(1,90,display->qual[d.seq].col_mrn),
column2 = substring(1,50,display->qual[d.seq].col_name),
column3 = substring(1,50,display->qual[d.seq].col_dis_dt),
column4 = substring(1,50,display->qual[d.seq].col_unit),
;003 column5 = substring(1,50,display->qual[d.seq].col_dis_serv) ,
column5 = substring(1,50,display->qual[d.seq].col_dis_prov) ,			;003
column6 = substring(1,50,display->qual[d.seq].col_dis_reason) ,
column7 = substring(1,50,display->qual[d.seq].col_ds_fin),
column8 = substring(1,50,display->qual[d.seq].col_score),
column9 = substring(1,50,display->qual[d.seq].col_teach),
column10 = substring(1,50,display->qual[d.seq].col_dis_to),
column11 = substring(1,50,display->qual[d.seq].col_call),
column12 = substring(1,50,display->qual[d.seq].col_foll_up_comp),		;003
column13 = substring(1,50,display->qual[d.seq].col_attend_phys),
;003  column12 = " ",
column14 = substring(1,50,display->qual[d.seq].col_readmit),
;003  column14 = substring(1,50,display->qual[d.seq].col_ad_unit),
column15 = substring(1,50,display->qual[d.seq].col_ad_fin),
column16 = substring(1,50,display->qual[d.seq].col_admit_rea),
column17 = substring(1,50,display->qual[d.seq].col_prim_phys),
column18 = substring(1,50,display->qual[d.seq].col_prim_npi)		;003
 
from
(dummyt d with seq = size(display->qual,5))
 
with format, separator = " "
 
end go
 
 
