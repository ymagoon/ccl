 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadFacilitySection(nCalc=i2) = f8 with Protect
declare HeadFacilitySectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadTransferListSection0(nCalc=i2) = f8 with Protect
declare HeadTransferListSection0ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadPatientSection1(nCalc=i2) = f8 with Protect
declare HeadPatientSection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadReportSection(nCalc=i2) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare detailSection(nCalc=i2) = f8 with Protect
declare detailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare footPatientSection(nCalc=i2) = f8 with Protect
declare footPatientSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
SELECT
	QUAL_FACILITY_NAME = SUBSTRING(1, 30, REC->qual[D1.SEQ].facility_name)
	, QUAL_PATIENT_NAME = SUBSTRING(1, 30, REC->qual[D1.SEQ].patient_name)
	, QUAL_ADDRESS = SUBSTRING(1, 30, REC->qual[D1.SEQ].address)
	, QUAL_CITY = SUBSTRING(1, 30, REC->qual[D1.SEQ].CITY)
	, QUAL_STATE = SUBSTRING(1, 30, REC->qual[D1.SEQ].STATE)
	, QUAL_ZIP = SUBSTRING(1, 30, REC->qual[D1.SEQ].ZIP)
	, QUAL_DOB = SUBSTRING(1, 30, REC->qual[D1.SEQ].dob)
	, QUAL_SEX = SUBSTRING(1, 30, REC->qual[D1.SEQ].sex)
	, QUAL_GROUP_NAME = SUBSTRING(1, 30, REC->qual[D1.SEQ].group_name)
	, ORDERS_TEST_NAME = SUBSTRING(1, 30, REC->qual[D1.SEQ].orders[D2.SEQ].Test_name)
	, ORDERS_ICD9_CODE = SUBSTRING(1, 30, REC->qual[D1.SEQ].orders[D2.SEQ].ICD9_code)
	, ORDERS_DIAGNOSIS = SUBSTRING(1, 30, REC->qual[D1.SEQ].orders[D2.SEQ].Diagnosis)
	, ORDERS_COLLECTION_LIST_NBR = REC->qual[D1.SEQ].orders[D2.SEQ].collection_list_nbr
	, ACCN_ACCESSION_NBR = SUBSTRING(1, 30, REC->qual[D1.SEQ].orders[D2.SEQ].accn[D3.SEQ].Accession_nbr)
 
FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(REC->qual, 5)))
	, (DUMMYT   D2  WITH SEQ = 1)
	, (DUMMYT   D3  WITH SEQ = 1)
 
PLAN D1 WHERE MAXREC(D2, SIZE(REC->qual[D1.SEQ].orders, 5))
and REC->qual[D1.SEQ].health_plan_id > 0
JOIN D2 WHERE MAXREC(D3, SIZE(REC->qual[D1.SEQ].orders[D2.SEQ].accn, 5))
JOIN D3
 
ORDER BY
	QUAL_FACILITY_NAME
	, ORDERS_COLLECTION_LIST_NBR
	, QUAL_PATIENT_NAME
	, ACCN_ACCESSION_NBR
 
 
 
Head Report
	_d0 = d1.seq
	_d1 = d2.seq
	_d2 = d3.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
_fEndDetail = _fEndDetail-FootPageSection(RPT_CALCHEIGHT)
 
 
Head Page
 
/****** YOUR CODE BEGINS HERE ******/
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = HeadFacilitySection(RPT_RENDER)
dummy_val = HeadTransferListSection0(RPT_RENDER)
 list_nbr_prnt_ind = 1
/*----- YOUR CODE ENDS HERE -----*/
 
 
Head ORDERS_COLLECTION_LIST_NBR
 
/****** YOUR CODE BEGINS HERE ******/
if (list_nbr_prnt_ind = 0)
; calculate section height
_fDrawHeight = HeadTransferListSection0(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadTransferListSection0(RPT_RENDER)
else
   list_nbr_prnt_ind = 0
endif
/*----- YOUR CODE ENDS HERE -----*/
 
 
Head QUAL_PATIENT_NAME
; calculate section height
_fDrawHeight = HeadPatientSection1(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadPatientSection1(RPT_RENDER)
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
 
Foot QUAL_PATIENT_NAME
; calculate section height
_fDrawHeight = footPatientSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = footPatientSection(RPT_RENDER)
 
Foot Page
_YHold = _YOffset
_YOffset = _fEndDetail
dummy_val = FootPageSection(RPT_RENDER)
_YOffset = _YHold
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadFacilitySection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadFacilitySectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadFacilitySection(nCalc)
 
subroutine HeadFacilitySectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.250
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- facility0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].facility_name,char(0)))
set RptSD->m_flags = 20
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Transfer List Report",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadFacilitySectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadTransferListSection0(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadTransferListSection0ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadTransferListSection0(nCalc)
 
subroutine HeadTransferListSection0ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.833
set RptSD->m_height = 0.188
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Transfer List#",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.813
set RptSD->m_width = 0.750
set RptSD->m_height = 0.188
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- transfer_list
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].collection_list_nbr,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadTransferListSection0ABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadPatientSection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPatientSection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPatientSection1(nCalc)
 
subroutine HeadPatientSection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.750000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.979
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- Patient_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].patient_name,char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.823
set RptSD->m_height = 0.250
; DRAW TEXT --- Patient_add
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].address,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.188
set RptSD->m_width = 0.875
set RptSD->m_height = 0.260
; DRAW TEXT --- sex
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].sex,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.542
set RptSD->m_width = 1.448
set RptSD->m_height = 0.250
; DRAW TEXT --- dob
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].dob,char(0)))
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.698
set RptSD->m_height = 0.260
; DRAW TEXT --- city_state_zip
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(concat(rec->qual [d1.seq].CITY,",  ",rec->qual [d1.seq].STATE,rec->
qual [d1.seq].ZIP),char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.260
set RptSD->m_x = OffsetX + 4.188
set RptSD->m_width = 1.052
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Health Care Plan:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 5.250
set RptSD->m_width = 2.052
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].health_plan_type,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.469
set RptSD->m_x = OffsetX + 4.167
set RptSD->m_width = 0.958
set RptSD->m_height = 0.281
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Policy Number:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.490
set RptSD->m_x = OffsetX + 5.260
set RptSD->m_width = 2.177
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].policy_nbr,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPatientSection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadReportSection(nCalc)
 
subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.560000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.042
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 3.865
set RptSD->m_height = 0.521
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("mayo lab in transit report",char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine detailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(detailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine detailSection(nCalc)
 
subroutine detailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.940000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.021
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 1.313
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Ordering Physician:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.302
set RptSD->m_width = 2.833
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- ordering_phy
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].ord_phy_name,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.198
set RptSD->m_width = 0.302
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("NPI:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.531
set RptSD->m_width = 1.781
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- NPI
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].ord_phy_npi,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.260
set RptSD->m_x = OffsetX + 4.198
set RptSD->m_width = 0.990
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Accession Nbr:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.260
set RptSD->m_x = OffsetX + 5.271
set RptSD->m_width = 2.052
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- accn_nbr
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].accn [d3.seq].Accession_nbr,char(0
)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Test Name:",char(0)))
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("ICD9 Code:",char(0)))
set RptSD->m_y = OffsetY + 0.521
set RptSD->m_x = OffsetX + 2.031
set RptSD->m_width = 0.615
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Diagnosis:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.240
set RptSD->m_x = OffsetX + 0.792
set RptSD->m_width = 3.365
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- Test_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].Test_name,char(0)))
set RptSD->m_y = OffsetY + 0.500
set RptSD->m_x = OffsetX + 0.823
set RptSD->m_width = 1.146
set RptSD->m_height = 0.260
; DRAW TEXT --- icd9_code
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].ICD9_code,char(0)))
set RptSD->m_y = OffsetY + 0.521
set RptSD->m_x = OffsetX + 2.708
set RptSD->m_width = 4.729
set RptSD->m_height = 0.260
; DRAW TEXT --- Diagnosis_name
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [d1.seq].orders [d2.seq].Diagnosis,char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine detailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine footPatientSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(footPatientSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine footPatientSection(nCalc)
 
subroutine footPatientSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine footPatientSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)
 
subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- PageOfPage
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rpt_pageofpage,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_LAB_IN_TRANSIT"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

