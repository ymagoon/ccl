DROP PROGRAM   HIM_MAK_DEFIC_BY_PHYS_DET_LYT3  GO
CREATE PROGRAM  HIM_MAK_DEFIC_BY_PHYS_DET_LYT3
;    *******************************************************************************************************
;    *Mod Date     Engineer      CAB #  Comment                                                            *
;    *--- -------- ------------ ------- ------------------------------------------------------------------ *
;                                                                                                          *
;    * 001 04/10/14 m063907	 	53169   Changed the display of the DEFICIENCY_AGE to days and hours for    *
;                                        Excel formt                                                       *
;    *******************************************************************************************************
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
	, "Facility(ies)" = 0
	, "Physician(s)" = 0
	, "Excel Output" = 0
 
with OUTDEV, ORGANIZATIONS, PHYSICIAN, excel
 
 EXECUTE REPORTRTL
 
IF ( ( VALIDATE ( I18NUAR_DEF ,  999 )= 999 ) )
 CALL ECHO ("Declaring i18nuar_def" )
DECLARE  I18NUAR_DEF  =  I2  WITH  PERSIST
SET  I18NUAR_DEF  =  1
DECLARE  UAR_I18NLOCALIZATIONINIT (( P1 = I4 ), ( P2 = VC ), ( P3 = VC ), ( P4 = F8 )) =  I4  WITH
 PERSIST
DECLARE  UAR_I18NGETMESSAGE (( P1 = I4 ), ( P2 = VC ), ( P3 = VC )) =  VC  WITH  PERSIST
DECLARE  UAR_I18NBUILDMESSAGE () =  VC  WITH  PERSIST
DECLARE  UAR_I18NGETHIJRIDATE (( IMONTH = I2 ( VAL )), ( IDAY = I2 ( VAL )), ( IYEAR = I2 ( VAL )),
( SDATEFORMATTYPE = VC ( REF ))) =  C50  WITH  IMAGE_AXP ="shri18nuar" , IMAGE_AIX =
"libi18n_locale.a(libi18n_locale.o)" , UAR ="uar_i18nGetHijriDate" , PERSIST
DECLARE  UAR_I18NBUILDFULLFORMATNAME (( SFIRST = VC ( REF )), ( SLAST = VC ( REF )), ( SMIDDLE = VC
( REF )), ( SDEGREE = VC ( REF )), ( STITLE = VC ( REF )), ( SPREFIX = VC ( REF )), ( SSUFFIX = VC (
 REF )), ( SINITIALS = VC ( REF )), ( SORIGINAL = VC ( REF ))) =  C250  WITH  IMAGE_AXP =
"shri18nuar" , IMAGE_AIX ="libi18n_locale.a(libi18n_locale.o)" , UAR ="i18nBuildFullFormatName" ,
 PERSIST
DECLARE  UAR_I18NGETARABICTIME (( CTIME = VC ( REF ))) =  C20  WITH  IMAGE_AXP ="shri18nuar" ,
 IMAGE_AIX ="libi18n_locale.a(libi18n_locale.o)" , UAR ="i18n_GetArabicTime" , PERSIST
ENDIF
DECLARE  FILLQUALWITHFACILITYNAMES (( ORGANIZATIONS = VC ( REF ))) =  NULL  WITH  PROTECT
DECLARE  HIMGETNAMESFORCODEVALUES (( DATA = VC ( REF ))) =  NULL  WITH  PROTECT
DECLARE  HIMGETNAMESFROMTABLE (( DATA = VC ( REF )), ( TABLENAME = VC ), ( NAME = VC ), ( ID = VC ))
 =  NULL  WITH  PROTECT
DECLARE  GETDATAFROMPROMPT (( PARAMETERNUMBER = I1 ), ( DATA = VC ( REF ))) =  NULL  WITH  PROTECT
DECLARE  HIMRENDERNODATAREPORT (( DATASIZE = I4 ), ( OUTPUTDEVICE = VC )) =  I1  WITH  PROTECT
DECLARE  I1MULTIFACILITYLOGICIND  =  I1  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  I2MULTIFACILITYLOGICIND  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  F8DATERANGEADD  =  F8  WITH  CONSTANT ( 0.99998842592592592592592592592593 ), PROTECT
DECLARE  I18NALLFACILITIES  =  VC  WITH  NOCONSTANT ("" ), PROTECT
SET  I18NHANDLEHIM  =  0
SET  LRETVAL  =  UAR_I18NLOCALIZATIONINIT ( I18NHANDLEHIM ,  CURPROG , "" ,  CURCCLREV )
SET  I18NALLFACILITIES  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_PRMPT_KEY_0" ,
"All Facilities" )
 
SELECT  INTO "nl:"
FROM ( HIM_SYSTEM_PARAMS  H )
WHERE (H.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (H.END_EFFECTIVE_DT_TM>=
 CNVTDATETIME ( CURDATE ,  CURTIME3 )) AND (H.ACTIVE_IND= 1 )
 
HEAD REPORT
 I2MULTIFACILITYLOGICIND =H.FACILITY_LOGIC_IND
DETAIL
 ROW + 0
 WITH  NOCOUNTER
 
IF ( ( I2MULTIFACILITYLOGICIND != 0 ) )
SET  I1MULTIFACILITYLOGICIND  =  1
ELSE
SELECT  INTO "nl:"
 SEC_IND = CNVTINT (D.INFO_NUMBER)
FROM ( DM_INFO  D )
 
WHERE (D.INFO_DOMAIN="SECURITY" ) AND (D.INFO_NAME="SEC_ORG_RELTN" )
 
DETAIL
 I1MULTIFACILITYLOGICIND = SEC_IND
 WITH  NOCOUNTER
IF ( ( I1MULTIFACILITYLOGICIND != 0 ) )
SET  I1MULTIFACILITYLOGICIND  =  1
ENDIF
 
ENDIF
 
 
SUBROUTINE   GETDATAFROMPROMPT  ( PARAMETERNUMBER ,  DATA  )
 
SET  INPUTNUM  =  PARAMETERNUMBER
SET  CTYPE  =  REFLECT ( PARAMETER ( INPUTNUM ,  0 ))
SET  PARNUM  =  0
SET  NSTOP  =  CNVTINT ( SUBSTRING ( 2 ,  19 ,  CTYPE ))
IF ( ( NSTOP > 0 ) )
CASE (  SUBSTRING ( 1 ,  1 ,  CTYPE ) )
 OF "C" :
SET  VCPARAMETERDATA  =  PARAMETER ( INPUTNUM ,  PARNUM )
IF ( ( VCPARAMETERDATA !="" ) )
SET  STAT  =  ALTERLIST ( DATA -> QUAL ,  1 )
SET  DATA -> QUAL [ 1 ]-> ITEM_NAME  =  VCPARAMETERDATA
ENDIF
 
 OF "F" :
SET  F8PARAMETERDATA  =  PARAMETER ( INPUTNUM ,  PARNUM )
IF ( ( F8PARAMETERDATA != 0 ) )
SET  STAT  =  ALTERLIST ( DATA -> QUAL ,  1 )
SET  DATA -> QUAL [ 1 ]-> ITEM_ID  =  F8PARAMETERDATA
ENDIF
 
 OF "I" :
SET  I4PARAMETERDATA  =  PARAMETER ( INPUTNUM ,  PARNUM )
IF ( ( I4PARAMETERDATA != 0 ) )
SET  STAT  =  ALTERLIST ( DATA -> QUAL ,  1 )
SET  DATA -> QUAL [ 1 ]-> ITEM_ID  =  I4PARAMETERDATA
ENDIF
 
 OF "L" :
SET  STAT  =  ALTERLIST ( DATA -> QUAL ,  NSTOP )
WHILE ( ( PARNUM < NSTOP ))
 
SET  PARNUM  = ( PARNUM + 1 )
SET  DATA -> QUAL [ PARNUM ]-> ITEM_ID  =  PARAMETER ( INPUTNUM ,  PARNUM )
 
ENDWHILE
 
 ELSE
SET  NOTHING  =  NULL
 ENDCASE
 
ENDIF
 
 
END ;Subroutine
 
 
SUBROUTINE   FILLQUALWITHFACILITYNAMES  ( ORGANIZATIONS  )
 
 CALL HIMGETNAMESFROMTABLE ( ORGANIZATIONS , "organization" , "org_name" , "organization_id" )
 
END ;Subroutine
 
 
SUBROUTINE   HIMGETNAMESFORCODEVALUES  ( DATA  )
 
FOR (  INDEX  =  1  TO  SIZE ( DATA -> QUAL ,  5 ) )
 
SET  DATA -> QUAL [ INDEX ]-> ITEM_NAME  =  UAR_GET_CODE_DISPLAY ( DATA -> QUAL [ INDEX ]-> ITEM_ID
)
 
ENDFOR
 
 
END ;Subroutine
 
 
SUBROUTINE   HIMGETNAMESFROMTABLE  ( DATA ,  TABLENAME ,  NAME ,  ID  )
 
DECLARE  I4DATACOUNT  =  I4  WITH  NOCONSTANT ( SIZE ( DATA -> QUAL ,  5 )), PROTECT
DECLARE  I4DATAINDEX  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 CALL PARSER ( BUILD2 ('select into "nl:"' , " DATA_NAME = substring(1,200,d." ,  NAME , ")" ,
",DATA_ID = d." ,  ID , " " , " from " ,  TABLENAME , " d " , " where " ,
"expand(i4DataIndex, 1, i4DataCount," , "d." ,  ID , ", data->qual[i4DataIndex].item_id)" ,
" order DATA_NAME, DATA_ID " , " head report " , "		i4DataIndex = 0 " , " head DATA_ID " ,
" i4DataIndex = i4DataIndex + 1 " , " data->qual[i4DataIndex].item_name = DATA_NAME " ,
" data->qual[i4DataIndex].item_id = DATA_ID " , " detail row+0 with noCounter go" ))
 
END ;Subroutine
 
 
SUBROUTINE   HIMRENDERNODATAREPORT  ( DATASIZE ,  OUTPUTDEVICE  )
 
IF ( ( DATASIZE = 0 ) )
 EXECUTE REPORTRTL
SELECT  INTO  $OUTDEV
FROM ( DUAL  D )
 
HEAD REPORT
 COL  0 ,
"No data found."
 WITH  NOCOUNTER  RETURN ( 1 )
 
ELSE   RETURN ( 0 )
 
ENDIF
 
 
END ;Subroutine
 
DECLARE  CRLF  =  C2  WITH  CONSTANT ( CONCAT ( CHAR ( 13 ),  CHAR ( 10 ))), PROTECT
DECLARE  SPACE  =  C1  WITH  CONSTANT ( CHAR ( 9 )), PROTECT
DECLARE  HIM_PROGRAM_NAME  =  VC  WITH  CONSTANT ( REQUEST -> PROGRAM_NAME ), PROTECT
DECLARE  HIM_WINDOW  =  I1  WITH  CONSTANT ( 1 ), PROTECT
DECLARE  HIM_RENDER_PARAMS  =  VC  WITH  CONSTANT (
IF (  FINDSTRING ("," ,  REQUEST -> PARAMS ) )  BUILD ("mine" ,  SUBSTRING ( FINDSTRING ("," ,
 REQUEST -> PARAMS ),  TEXTLEN ( REQUEST -> PARAMS ),  REPLACE ( REQUEST -> PARAMS , '"' , "^" ,  0
)))
ELSE  "mine"
ENDIF
), PROTECT
DECLARE  HIM_PROMPT  =  I1  WITH  CONSTANT ( 0 ), PROTECT
DECLARE  HIM_DASH  =  I1  WITH  CONSTANT ( 1 ), PROTECT
DECLARE  VCTODAYDATETIME  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  VCUSER  =  VC  WITH  NOCONSTANT ("                " ), PROTECT
DECLARE  I18NDATEPRINTED  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NUSERPRINTED  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NPROMPTSFILTERS  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NFACILITIES  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NDATERANGE  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NTO  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NFROM  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  I18NREQUESTLOCATION  =  VC  WITH  NOCONSTANT ("" ), PROTECT
DECLARE  MAKELISTOFQUALITEMNAMES (( DATA = VC ( REF )), ( DEFAULT = VC )) =  VC  WITH  PROTECT
DECLARE  GETDATERANGEDISPLAY (( DATES = VC ( REF )), ( TYPE = I1 )) =  VC  WITH  PROTECT
DECLARE  CNVTMINSTODAYSHOURSMINS (( MINS = I4 )) =  VC  WITH  PROTECT
 
 EXECUTE REPORTRTL
 
SET  VCTODAYDATETIME  =  FORMAT ( CNVTDATETIME ( CURDATE ,  CURTIME3 ), "@SHORTDATETIME;;Q" )
SET  I18NDATEPRINTED  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_0" , "Date Printed:" )
SET  I18NUSERPRINTED  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_1" , "User Who Printed:")
SET  I18NPROMPTSFILTERS  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_2" ,"Prompts/Filters:" )
SET  I18NFACILITIES  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_3" , "Facility(ies):" )
SET  I18NDATERANGE  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_4" , "Date Range:" )
SET  I18NFROM  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_5" , "From" )
SET  I18NTO  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_6" , "To" )
SET  I18NREQUESTLOCATION  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "HIM_LYT_KEY_7" ,"Requesting Location:" )
 
SELECT  INTO "nl:"
FROM ( PRSNL  P )
WHERE (P.PERSON_ID= REQINFO -> UPDT_ID ) AND (P.ACTIVE_IND= 1 )
 
DETAIL
 VCUSER =P.NAME_FULL_FORMATTED
 WITH  NOCOUNTER , MAXQUAL ( P ,  1 )
 
SUBROUTINE   GETDATERANGEDISPLAY  ( DATES ,  TYPE  )
 
DECLARE  VCFILTERDATERANGE  =  VC  WITH  NOCONSTANT ("" ), PRIVATE
CASE (  TYPE  )
 OF  HIM_PROMPT :
IF ( ( CNVTDATE ( DATES -> BEGINNING_DATE )> 0 ) AND ( CNVTDATE ( DATES -> ENDING_DATE )> 0 ) )
SET  VCFILTERDATERANGE  =  BUILD2 ( I18NFROM , " " ,  FORMAT ( DATES -> BEGINNING_DATE ,
"@SHORTDATE;;Q" ), " " , " " ,  I18NTO , " " ,  FORMAT ( DATES -> ENDING_DATE , "@SHORTDATE;;Q" ))
ELSE
SET  VCFILTERDATERANGE  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "NORANGE1" , "No Range" )
ENDIF
 
 OF  HIM_DASH :
IF ( ( CNVTDATE ( DATES -> BEGINNING_DATE )> 0 ) AND ( CNVTDATE ( DATES -> ENDING_DATE )> 0 ) )
SET  VCFILTERDATERANGE  =  BUILD2 ( FORMAT ( DATES -> BEGINNING_DATE , "@SHORTDATE;;Q" ), " -  " ,
 FORMAT ( DATES -> ENDING_DATE , "@SHORTDATE;;Q" ))
ELSE
SET  VCFILTERDATERANGE  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "NORANGE2" , "NO RANGE" )
ENDIF
 
 ELSE
SET  VCFILTERDATERANGE  =  UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "NODATESFOUND" , "No Dates Found" )
 ENDCASE
 RETURN ( VCFILTERDATERANGE )
 
 
END ;Subroutine
 
 
SUBROUTINE   CNVTMINSTODAYSHOURSMINS  ( MINS  )
 
DECLARE  HOURS  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  DAYS  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  VCTIME  =  VC  WITH  NOCONSTANT ("" ), PROTECT
SET  DAYS  = ( MINS /( 60 * 24 ))
IF ( ( DAYS < 1 ) )
SET  MINS  =  MOD ( MINS , ( 60 * 24 ))
SET  HOURS  = ( MINS / 60 )
SET  MINS  =  MOD ( MINS ,  60 )
SET  VCTIME  =  BUILD2 ( FORMAT ( HOURS , "##;P0" ), " hrs " ,  FORMAT ( MINS , "##;P0" ), " mins" )
ELSE
SET  VCTIME  =  BUILD2 ( DAYS , " days " )
ENDIF
 RETURN ( VCTIME )
 
 
END ;Subroutine
 
 
SUBROUTINE   MAKELISTOFQUALITEMNAMES  ( DATA ,  DEFAULT  )
 
DECLARE  I4LINECOUNT  =  I4  WITH  NOCONSTANT ( 1 ), PROTECT
DECLARE  I4QUALCOUNT  =  I4  WITH  NOCONSTANT ( SIZE ( DATA -> QUAL ,  5 )), PROTECT
DECLARE  I4COUNT  =  I4  WITH  NOCONSTANT ( 1 ), PROTECT
DECLARE  LIST  =  VC  WITH  NOCONSTANT (" " ), PROTECT
IF ( ( I4QUALCOUNT = 0 ) )
SET  LIST  =  DEFAULT
ELSE
FOR (  I4COUNT  =  1  TO  I4QUALCOUNT  )
 
IF ( ( I4COUNT = I4QUALCOUNT ) )
IF ( ( SIZE ( TRIM ( DATA -> QUAL [ I4COUNT ]-> ITEM_NAME ,  3 ))> 0 ) )
SET  LIST  =  BUILD2 ( LIST ,  TRIM ( DATA -> QUAL [ I4COUNT ]-> ITEM_NAME ,  3 ))
ENDIF
 
ELSE
IF ( ( SIZE ( TRIM ( DATA -> QUAL [ I4COUNT ]-> ITEM_NAME ,  3 ))> 0 ) )
SET  LIST  =  BUILD2 ( LIST ,  TRIM ( DATA -> QUAL [ I4COUNT ]-> ITEM_NAME ,  3 ), "; " )
ENDIF
 
ENDIF
 
 
ENDFOR
 
ENDIF
 RETURN ( LIST )
 
 
END ;Subroutine
 
 
FREE RECORD ORGANIZATIONS
 
RECORD  ORGANIZATIONS  (
 1  QUAL [*]
 2  ITEM_ID  =  F8
 2  ITEM_NAME  =  VC )
 
FREE RECORD PHYSICIANS
 
RECORD  PHYSICIANS  (
 1  QUAL [*]
 2  ITEM_ID  =  F8
 2  ITEM_NAME  =  VC )
 
FREE RECORD DATA
 
RECORD  DATA  (
 1  QUAL [*]
 2  PATIENT_NAME  =  VC
 2  PATIENT_ID  =  F8
 2  PATIENT_TYPE_CD  =  F8
 2  ORGANIZATION_NAME  =  VC
 2  ORGANIZATION_ID  =  F8
 2  MRN  =  VC
 2  FIN  =  VC
 2  PHYSICIAN_NAME  =  VC
 2  PHYSICIAN_ID  =  F8
 2  ENCNTR_ID  =  F8
 2  CHART_ALLOC_DT_TM  =  DQ8
 2  CHART_AGE  =  I4
 2  DISCH_DT_TM  =  DQ8
 2  LOCATION  =  VC
 2  PATIENT_ABS_BIRTH_DT_TM  =  DQ8
 2  PATIENT_ACTIVE_IND  =  I2
 2  PATIENT_ACTIVE_STATUS_CD  =  F8
 2  PATIENT_ACTIVE_STATUS_DT_TM  =  DQ8
 2  PATIENT_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  PATIENT_ARCHIVE_ENV_ID  =  F8
 2  PATIENT_ARCHIVE_STATUS_CD  =  F8
 2  PATIENT_ARCHIVE_STATUS_DT_TM  =  DQ8
 2  PATIENT_AUTOPSY_CD  =  F8
 2  PATIENT_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  PATIENT_BIRTH_DT_CD  =  F8
 2  PATIENT_BIRTH_DT_TM  =  DQ8
 2  PATIENT_BIRTH_PREC_FLAG  =  I2
 2  PATIENT_BIRTH_TZ  =  I4
 2  PATIENT_CAUSE_OF_DEATH  =  VC
 2  PATIENT_CAUSE_OF_DEATH_CD  =  F8
 2  PATIENT_CITIZENSHIP_CD  =  F8
 2  PATIENT_CONCEPTION_DT_TM  =  DQ8
 2  PATIENT_CONFID_LEVEL_CD  =  F8
 2  PATIENT_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  PATIENT_CREATE_DT_TM  =  DQ8
 2  PATIENT_CREATE_PRSNL_ID  =  F8
 2  PATIENT_DATA_STATUS_CD  =  F8
 2  PATIENT_DATA_STATUS_DT_TM  =  DQ8
 2  PATIENT_DATA_STATUS_PRSNL_ID  =  F8
 2  PATIENT_DECEASED_CD  =  F8
 2  PATIENT_DECEASED_DT_TM  =  DQ8
 2  PATIENT_DECEASED_SOURCE_CD  =  F8
 2  PATIENT_END_EFFECTIVE_DT_TM  =  DQ8
 2  PATIENT_ETHNIC_GRP_CD  =  F8
 2  PATIENT_FT_ENTITY_ID  =  F8
 2  PATIENT_FT_ENTITY_NAME  =  C32
 2  PATIENT_LANGUAGE_CD  =  F8
 2  PATIENT_LANGUAGE_DIALECT_CD  =  F8
 2  PATIENT_LAST_ACCESSED_DT_TM  =  DQ8
 2  PATIENT_LAST_ENCNTR_DT_TM  =  DQ8
 2  PATIENT_MARITAL_TYPE_CD  =  F8
 2  PATIENT_MILITARY_BASE_LOCATION  =  VC
 2  PATIENT_MILITARY_RANK_CD  =  F8
 2  PATIENT_MILITARY_SERVICE_CD  =  F8
 2  PATIENT_MOTHER_MAIDEN_NAME  =  VC
 2  PATIENT_NAME_FIRST  =  VC
 2  PATIENT_NAME_FIRST_KEY  =  VC
 2  PATIENT_NAME_FIRST_KEY_NLS  =  VC
 2  PATIENT_NAME_FIRST_PHONETIC  =  C8
 2  PATIENT_NAME_FIRST_SYNONYM_ID  =  F8
 2  PATIENT_NAME_FULL_FORMATTED  =  VC
 2  PATIENT_NAME_LAST  =  VC
 2  PATIENT_NAME_LAST_KEY  =  VC
 2  PATIENT_NAME_LAST_KEY_NLS  =  VC
 2  PATIENT_NAME_LAST_PHONETIC  =  C8
 2  PATIENT_NAME_MIDDLE  =  VC
 2  PATIENT_NAME_MIDDLE_KEY  =  VC
 2  PATIENT_NAME_MIDDLE_KEY_NLS  =  VC
 2  PATIENT_NAME_PHONETIC  =  C8
 2  PATIENT_NATIONALITY_CD  =  F8
 2  PATIENT_NEXT_RESTORE_DT_TM  =  DQ8
 2  PATIENT_PERSON_ID  =  F8
 2  PATIENT_PERSON_TYPE_CD  =  F8
 2  PATIENT_RACE_CD  =  F8
 2  PATIENT_RELIGION_CD  =  F8
 2  PATIENT_SEX_AGE_CHANGE_IND  =  I2
 2  PATIENT_SEX_CD  =  F8
 2  PATIENT_SPECIES_CD  =  F8
 2  PATIENT_UPDT_DT_TM  =  DQ8
 2  PATIENT_UPDT_ID  =  F8
 2  PATIENT_UPDT_TASK  =  I4
 2  PATIENT_VET_MILITARY_STATUS_CD  =  F8
 2  PATIENT_VIP_CD  =  F8
 2  PHYSICIAN_ACTIVE_IND  =  I2
 2  PHYSICIAN_ACTIVE_STATUS_CD  =  F8
 2  PHYSICIAN_ACTIVE_STATUS_DT_TM  =  DQ8
 2  PHYSICIAN_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  PHYSICIAN_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  PHYSICIAN_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  PHYSICIAN_CREATE_DT_TM  =  DQ8
 2  PHYSICIAN_CREATE_PRSNL_ID  =  F8
 2  PHYSICIAN_DATA_STATUS_CD  =  F8
 2  PHYSICIAN_DATA_STATUS_DT_TM  =  DQ8
 2  PHYSICIAN_DATA_STATUS_PRSNL_ID  =  F8
 2  PHYSICIAN_EMAIL  =  VC
 2  PHYSICIAN_END_EFFECTIVE_DT_TM  =  DQ8
 2  PHYSICIAN_FT_ENTITY_ID  =  F8
 2  PHYSICIAN_FT_ENTITY_NAME  =  C32
 2  PHYSICIAN_NAME_FIRST  =  VC
 2  PHYSICIAN_NAME_FIRST_KEY  =  VC
 2  PHYSICIAN_NAME_FIRST_KEY_NLS  =  VC
 2  PHYSICIAN_NAME_FULL_FORMATTED  =  VC
 2  PHYSICIAN_NAME_LAST  =  VC
 2  PHYSICIAN_NAME_LAST_KEY  =  VC
 2  PHYSICIAN_NAME_LAST_KEY_NLS  =  VC
 2  PHYSICIAN_PASSWORD  =  VC
 2  PHYSICIAN_PERSON_ID  =  F8
 2  PHYSICIAN_PHYSICIAN_IND  =  I2
 2  PHYSICIAN_PHYSICIAN_STATUS_CD  =  F8
 2  PHYSICIAN_POSITION_CD  =  F8
 2  PHYSICIAN_PRIM_ASSIGN_LOC_CD  =  F8
 2  PHYSICIAN_PRSNL_TYPE_CD  =  F8
 2  PHYSICIAN_UPDT_DT_TM  =  DQ8
 2  PHYSICIAN_UPDT_ID  =  F8
 2  PHYSICIAN_UPDT_TASK  =  I4
 2  PHYSICIAN_USERNAME  =  VC
 2  ENCNTR_ACCOMMODATION_CD  =  F8
 2  ENCNTR_ACCOMMODATION_REASON_CD  =  F8
 2  ENCNTR_ACCOMMODATION_REQUEST_CD  =  F8
 2  ENCNTR_ACCOMP_BY_CD  =  F8
 2  ENCNTR_ACTIVE_IND  =  I2
 2  ENCNTR_ACTIVE_STATUS_CD  =  F8
 2  ENCNTR_ACTIVE_STATUS_DT_TM  =  DQ8
 2  ENCNTR_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_ADMIT_MODE_CD  =  F8
 2  ENCNTR_ADMIT_SRC_CD  =  F8
 2  ENCNTR_ADMIT_TYPE_CD  =  F8
 2  ENCNTR_ADMIT_WITH_MEDICATION_CD  =  F8
 2  ENCNTR_ALC_DECOMP_DT_TM  =  DQ8
 2  ENCNTR_ALC_REASON_CD  =  F8
 2  ENCNTR_ALT_LVL_CARE_CD  =  F8
 2  ENCNTR_ALT_LVL_CARE_DT_TM  =  DQ8
 2  ENCNTR_AMBULATORY_COND_CD  =  F8
 2  ENCNTR_ARCHIVE_DT_TM_ACT  =  DQ8
 2  ENCNTR_ARCHIVE_DT_TM_EST  =  DQ8
 2  ENCNTR_ARRIVE_DT_TM  =  DQ8
 2  ENCNTR_ASSIGN_TO_LOC_DT_TM  =  DQ8
 2  ENCNTR_BBD_PROCEDURE_CD  =  F8
 2  ENCNTR_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_CHART_COMPLETE_DT_TM  =  DQ8
 2  ENCNTR_CONFID_LEVEL_CD  =  F8
 2  ENCNTR_CONTRACT_STATUS_CD  =  F8
 2  ENCNTR_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  ENCNTR_COURTESY_CD  =  F8
 2  ENCNTR_CREATE_DT_TM  =  DQ8
 2  ENCNTR_CREATE_PRSNL_ID  =  F8
 2  ENCNTR_DATA_STATUS_CD  =  F8
 2  ENCNTR_DATA_STATUS_DT_TM  =  DQ8
 2  ENCNTR_DATA_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_DEPART_DT_TM  =  DQ8
 2  ENCNTR_DIET_TYPE_CD  =  F8
 2  ENCNTR_DISCH_DISPOSITION_CD  =  F8
 2  ENCNTR_DISCH_DT_TM  =  DQ8
 2  ENCNTR_DISCH_TO_LOCTN_CD  =  F8
 2  ENCNTR_DOC_RCVD_DT_TM  =  DQ8
 2  ENCNTR_ENCNTR_CLASS_CD  =  F8
 2  ENCNTR_ENCNTR_COMPLETE_DT_TM  =  DQ8
 2  ENCNTR_ENCNTR_FINANCIAL_ID  =  F8
 2  ENCNTR_ENCNTR_ID  =  F8
 2  ENCNTR_ENCNTR_STATUS_CD  =  F8
 2  ENCNTR_ENCNTR_TYPE_CD  =  F8
 2  ENCNTR_ENCNTR_TYPE_CLASS_CD  =  F8
 2  ENCNTR_END_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_EST_ARRIVE_DT_TM  =  DQ8
 2  ENCNTR_EST_DEPART_DT_TM  =  DQ8
 2  ENCNTR_EST_LENGTH_OF_STAY  =  I4
 2  ENCNTR_FINANCIAL_CLASS_CD  =  F8
 2  ENCNTR_GUARANTOR_TYPE_CD  =  F8
 2  ENCNTR_INFO_GIVEN_BY  =  C100
 2  ENCNTR_INPATIENT_ADMIT_DT_TM  =  DQ8
 2  ENCNTR_ISOLATION_CD  =  F8
 2  ENCNTR_LOCATION_CD  =  F8
 2  ENCNTR_LOC_BED_CD  =  F8
 2  ENCNTR_LOC_BUILDING_CD  =  F8
 2  ENCNTR_LOC_FACILITY_CD  =  F8
 2  ENCNTR_LOC_NURSE_UNIT_CD  =  F8
 2  ENCNTR_LOC_ROOM_CD  =  F8
 2  ENCNTR_LOC_TEMP_CD  =  F8
 2  ENCNTR_MED_SERVICE_CD  =  F8
 2  ENCNTR_MENTAL_CATEGORY_CD  =  F8
 2  ENCNTR_MENTAL_HEALTH_DT_TM  =  DQ8
 2  ENCNTR_ORGANIZATION_ID  =  F8
 2  ENCNTR_PARENT_RET_CRITERIA_ID  =  F8
 2  ENCNTR_PATIENT_CLASSIFICATION_CD  =  F8
 2  ENCNTR_PA_CURRENT_STATUS_CD  =  F8
 2  ENCNTR_PA_CURRENT_STATUS_DT_TM  =  DQ8
 2  ENCNTR_PERSON_ID  =  F8
 2  ENCNTR_PLACEMENT_AUTH_PRSNL_ID  =  F8
 2  ENCNTR_PREADMIT_TESTING_CD  =  F8
 2  ENCNTR_PRE_REG_DT_TM  =  DQ8
 2  ENCNTR_PRE_REG_PRSNL_ID  =  F8
 2  ENCNTR_PROGRAM_SERVICE_CD  =  F8
 2  ENCNTR_PSYCHIATRIC_STATUS_CD  =  F8
 2  ENCNTR_PURGE_DT_TM_ACT  =  DQ8
 2  ENCNTR_PURGE_DT_TM_EST  =  DQ8
 2  ENCNTR_READMIT_CD  =  F8
 2  ENCNTR_REASON_FOR_VISIT  =  VC
 2  ENCNTR_REFERRAL_RCVD_DT_TM  =  DQ8
 2  ENCNTR_REFERRING_COMMENT  =  VC
 2  ENCNTR_REFER_FACILITY_CD  =  F8
 2  ENCNTR_REGION_CD  =  F8
 2  ENCNTR_REG_DT_TM  =  DQ8
 2  ENCNTR_REG_PRSNL_ID  =  F8
 2  ENCNTR_RESULT_ACCUMULATION_DT_TM  =  DQ8
 2  ENCNTR_SAFEKEEPING_CD  =  F8
 2  ENCNTR_SECURITY_ACCESS_CD  =  F8
 2  ENCNTR_SERVICE_CATEGORY_CD  =  F8
 2  ENCNTR_SITTER_REQUIRED_CD  =  F8
 2  ENCNTR_SPECIALTY_UNIT_CD  =  F8
 2  ENCNTR_TRAUMA_CD  =  F8
 2  ENCNTR_TRAUMA_DT_TM  =  DQ8
 2  ENCNTR_TRIAGE_CD  =  F8
 2  ENCNTR_TRIAGE_DT_TM  =  DQ8
 2  ENCNTR_UPDT_DT_TM  =  DQ8
 2  ENCNTR_UPDT_ID  =  F8
 2  ENCNTR_UPDT_TASK  =  I4
 2  ENCNTR_VALUABLES_CD  =  F8
 2  ENCNTR_VIP_CD  =  F8
 2  ENCNTR_VISITOR_STATUS_CD  =  F8
 2  ENCNTR_ZERO_BALANCE_DT_TM  =  DQ8
 2  ENCNTR_MRN_ACTIVE_IND  =  I2
 2  ENCNTR_MRN_ACTIVE_STATUS_CD  =  F8
 2  ENCNTR_MRN_ACTIVE_STATUS_DT_TM  =  DQ8
 2  ENCNTR_MRN_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_MRN_ALIAS  =  VC
 2  ENCNTR_MRN_ALIAS_POOL_CD  =  F8
 2  ENCNTR_MRN_ASSIGN_AUTHORITY_SYS_CD  =  F8
 2  ENCNTR_MRN_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_MRN_CHECK_DIGIT  =  I4
 2  ENCNTR_MRN_CHECK_DIGIT_METHOD_CD  =  F8
 2  ENCNTR_MRN_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  ENCNTR_MRN_DATA_STATUS_CD  =  F8
 2  ENCNTR_MRN_DATA_STATUS_DT_TM  =  DQ8
 2  ENCNTR_MRN_DATA_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_MRN_ENCNTR_ALIAS_ID  =  F8
 2  ENCNTR_MRN_ENCNTR_ALIAS_TYPE_CD  =  F8
 2  ENCNTR_MRN_ENCNTR_ID  =  F8
 2  ENCNTR_MRN_END_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_MRN_UPDT_DT_TM  =  DQ8
 2  ENCNTR_MRN_UPDT_ID  =  F8
 2  ENCNTR_MRN_UPDT_TASK  =  I4
 2  ENCNTR_FIN_ACTIVE_IND  =  I2
 2  ENCNTR_FIN_ACTIVE_STATUS_CD  =  F8
 2  ENCNTR_FIN_ACTIVE_STATUS_DT_TM  =  DQ8
 2  ENCNTR_FIN_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_FIN_ALIAS  =  VC
 2  ENCNTR_FIN_ALIAS_POOL_CD  =  F8
 2  ENCNTR_FIN_ASSIGN_AUTHORITY_SYS_CD  =  F8
 2  ENCNTR_FIN_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_FIN_CHECK_DIGIT  =  I4
 2  ENCNTR_FIN_CHECK_DIGIT_METHOD_CD  =  F8
 2  ENCNTR_FIN_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  ENCNTR_FIN_DATA_STATUS_CD  =  F8
 2  ENCNTR_FIN_DATA_STATUS_DT_TM  =  DQ8
 2  ENCNTR_FIN_DATA_STATUS_PRSNL_ID  =  F8
 2  ENCNTR_FIN_ENCNTR_ALIAS_ID  =  F8
 2  ENCNTR_FIN_ENCNTR_ALIAS_TYPE_CD  =  F8
 2  ENCNTR_FIN_ENCNTR_ID  =  F8
 2  ENCNTR_FIN_END_EFFECTIVE_DT_TM  =  DQ8
 2  ENCNTR_FIN_UPDT_DT_TM  =  DQ8
 2  ENCNTR_FIN_UPDT_ID  =  F8
 2  ENCNTR_FIN_UPDT_TASK  =  I4
 2  HIM_VISIT_ABSTRACT_COMPLETE_IND  =  I2
 2  HIM_VISIT_ACTIVE_IND  =  I2
 2  HIM_VISIT_ACTIVE_STATUS_CD  =  F8
 2  HIM_VISIT_ACTIVE_STATUS_DT_TM  =  DQ8
 2  HIM_VISIT_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  HIM_VISIT_ALLOCATION_DT_FLAG  =  I2
 2  HIM_VISIT_ALLOCATION_DT_MODIFIER  =  I4
 2  HIM_VISIT_ALLOCATION_DT_TM  =  DQ8
 2  HIM_VISIT_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  HIM_VISIT_CHART_PROCESS_ID  =  F8
 2  HIM_VISIT_CHART_STATUS_CD  =  F8
 2  HIM_VISIT_CHART_STATUS_DT_TM  =  DQ8
 2  HIM_VISIT_ENCNTR_ID  =  F8
 2  HIM_VISIT_END_EFFECTIVE_DT_TM  =  DQ8
 2  HIM_VISIT_PERSON_ID  =  F8
 2  HIM_VISIT_UPDT_DT_TM  =  DQ8
 2  HIM_VISIT_UPDT_ID  =  F8
 2  HIM_VISIT_UPDT_TASK  =  I4
 2  ORG_ACTIVE_IND  =  I2
 2  ORG_ACTIVE_STATUS_CD  =  F8
 2  ORG_ACTIVE_STATUS_DT_TM  =  DQ8
 2  ORG_ACTIVE_STATUS_PRSNL_ID  =  F8
 2  ORG_BEG_EFFECTIVE_DT_TM  =  DQ8
 2  ORG_CONTRIBUTOR_SOURCE_CD  =  F8
 2  ORG_CONTRIBUTOR_SYSTEM_CD  =  F8
 2  ORG_DATA_STATUS_CD  =  F8
 2  ORG_DATA_STATUS_DT_TM  =  DQ8
 2  ORG_DATA_STATUS_PRSNL_ID  =  F8
 2  ORG_END_EFFECTIVE_DT_TM  =  DQ8
 2  ORG_FEDERAL_TAX_ID_NBR  =  VC
 2  ORG_FT_ENTITY_ID  =  F8
 2  ORG_FT_ENTITY_NAME  =  C32
 2  ORG_ORGANIZATION_ID  =  F8
 2  ORG_ORG_CLASS_CD  =  F8
 2  ORG_ORG_NAME  =  VC
 2  ORG_ORG_NAME_KEY  =  VC
 2  ORG_ORG_NAME_KEY_NLS  =  VC
 2  ORG_ORG_STATUS_CD  =  F8
 2  ORG_UPDT_DT_TM  =  DQ8
 2  ORG_UPDT_ID  =  F8
 2  ORG_UPDT_TASK  =  I4
 2  DEFIC_QUAL [*]
 3  DEFICIENCY_NAME  =  VC
 3  STATUS  =  VC
 3  ALLOC_DT_TM  =  DQ8
 3  DEFIC_AGE  =  I4
 3  EVENT_ID  =  F8
 3  ORDER_ID  =  F8
 3  ACTION_SEQUENCE  =  I4
 3  DEFICIENCY_FLAG  =  I2
 3  DOC_QUAL [*]
 4  HIM_EVENT_ACTION_TYPE_CD  =  F8
 4  HIM_EVENT_ACTION_STATUS_CD  =  F8
 4  HIM_EVENT_ALLOCATION_DT_TM  =  DQ8
 4  HIM_EVENT_BEG_EFFECTIVE_DT_TM  =  DQ8
 4  HIM_EVENT_COMPLETED_DT_TM  =  DQ8
 4  HIM_EVENT_ENCNTR_ID  =  F8
 4  HIM_EVENT_END_EFFECTIVE_DT_TM  =  DQ8
 4  HIM_EVENT_EVENT_CD  =  F8
 4  HIM_EVENT_EVENT_ID  =  F8
 4  HIM_EVENT_HIM_EVENT_ALLOCATION_ID  =  F8
 4  HIM_EVENT_PRSNL_ID  =  F8
 4  HIM_EVENT_REQUEST_DT_TM  =  DQ8
 4  HIM_EVENT_UPDT_DT_TM  =  DQ8
 4  HIM_EVENT_UPDT_ID  =  F8
 4  HIM_EVENT_UPDT_TASK  =  F8
 4  HIM_EVENT_ACTIVE_STATUS_CD  =  F8
 4  HIM_EVENT_ACTIVE_DT_TM  =  DQ8
 4  HIM_EVENT_ACTIVE_IND  =  I2
 4  HIM_EVENT_ACTIVE_STATUS_CD  =  F8
 4  HIM_EVENT_ACTIVE_STATUS_PRSNL_ID  =  F8
 4  HIM_EVENT_ACTIVE_STATUS_DT_TM  =  DQ8
 3  ORDER_QUAL [*]
 4  ORDERS_ACTIVE_IND  =  I4
 4  ORDERS_ACTIVE_STATUS_CD  =  F8
 4  ORDERS_ACTIVE_STATUS_DT_TM  =  DQ8
 4  ORDERS_ACTIVE_STATUS_PRSNL_ID  =  F8
 4  ORDERS_ACTIVITY_TYPE_CD  =  F8
 4  ORDERS_AD_HOC_ORDER_FLAG  =  I4
 4  ORDERS_CATALOG_CD  =  F8
 4  ORDERS_CATALOG_TYPE_CD  =  F8
 4  ORDERS_CKI  =  VC
 4  ORDERS_CLINICAL_DISPLAY_LINE  =  VC
 4  ORDERS_COMMENT_TYPE_MASK  =  I4
 4  ORDERS_CONSTANT_IND  =  I4
 4  ORDERS_CONTRIBUTOR_SYSTEM_CD  =  F8
 4  ORDERS_CS_FLAG  =  I4
 4  ORDERS_CS_ORDER_ID  =  F8
 4  ORDERS_CURRENT_START_DT_TM  =  DQ8
 4  ORDERS_CURRENT_START_TZ  =  I4
 4  ORDERS_DCP_CLIN_CAT_CD  =  F8
 4  ORDERS_DEPT_MISC_LINE  =  VC
 4  ORDERS_DEPT_STATUS_CD  =  F8
 4  ORDERS_DISCONTINUE_EFFECTIVE_DT_TM  =  DQ8
 4  ORDERS_DISCONTINUE_EFFECTIVE_TZ  =  I4
 4  ORDERS_DISCONTINUE_IND  =  I4
 4  ORDERS_DISCONTINUE_TYPE_CD  =  F8
 4  ORDERS_ENCNTR_FINANCIAL_ID  =  F8
 4  ORDERS_ENCNTR_ID  =  F8
 4  ORDERS_ESO_NEW_ORDER_IND  =  I4
 4  ORDERS_FREQUENCY_ID  =  F8
 4  ORDERS_FREQ_TYPE_FLAG  =  I4
 4  ORDERS_GROUP_ORDER_FLAG  =  I4
 4  ORDERS_GROUP_ORDER_ID  =  F8
 4  ORDERS_HIDE_FLAG  =  I4
 4  ORDERS_HNA_ORDER_MNEMONIC  =  VC
 4  ORDERS_INCOMPLETE_ORDER_IND  =  I4
 4  ORDERS_INGREDIENT_IND  =  I4
 4  ORDERS_INTEREST_DT_TM  =  DQ8
 4  ORDERS_INTERVAL_IND  =  I4
 4  ORDERS_IV_IND  =  I4
 4  ORDERS_LAST_ACTION_SEQUENCE  =  I4
 4  ORDERS_LAST_CORE_ACTION_SEQUENCE  =  I4
 4  ORDERS_LAST_INGRED_ACTION_SEQUENCE  =  I4
 4  ORDERS_LAST_UPDATE_PROVIDER_ID  =  F8
 4  ORDERS_LINK_NBR  =  F8
 4  ORDERS_LINK_ORDER_FLAG  =  I4
 4  ORDERS_LINK_ORDER_ID  =  F8
 4  ORDERS_LINK_TYPE_FLAG  =  I4
 4  ORDERS_MED_ORDER_TYPE_CD  =  F8
 4  ORDERS_MODIFIED_START_DT_TM  =  DQ8
 4  ORDERS_NEED_DOCTOR_COSIGN_IND  =  I4
 4  ORDERS_NEED_NURSE_REVIEW_IND  =  I4
 4  ORDERS_NEED_PHYSICIAN_VALIDATE_IND  =  I4
 4  ORDERS_NEED_RX_VERIFY_IND  =  I4
 4  ORDERS_OE_FORMAT_ID  =  F8
 4  ORDERS_ORDERABLE_TYPE_FLAG  =  I4
 4  ORDERS_ORDERED_AS_MNEMONIC  =  VC
 4  ORDERS_ORDER_COMMENT_IND  =  I4
 4  ORDERS_ORDER_DETAIL_DISPLAY_LINE  =  VC
 4  ORDERS_ORDER_ID  =  F8
 4  ORDERS_ORDER_MNEMONIC  =  VC
 4  ORDERS_ORDER_STATUS_CD  =  F8
 4  ORDERS_ORIG_ORDER_CONVS_SEQ  =  I4
 4  ORDERS_ORIG_ORDER_DT_TM  =  DQ8
 4  ORDERS_ORIG_ORDER_TZ  =  I4
 4  ORDERS_ORIG_ORD_AS_FLAG  =  I4
 4  ORDERS_OVERRIDE_FLAG  =  I4
 4  ORDERS_PATHWAY_CATALOG_ID  =  F8
 4  ORDERS_PERSON_ID  =  F8
 4  ORDERS_PRN_IND  =  I4
 4  ORDERS_PRODUCT_ID  =  F8
 4  ORDERS_PROJECTED_STOP_DT_TM  =  DQ8
 4  ORDERS_PROJECTED_STOP_TZ  =  I4
 4  ORDERS_REF_TEXT_MASK  =  I4
 4  ORDERS_REMAINING_DOSE_CNT  =  I4
 4  ORDERS_RESUME_EFFECTIVE_DT_TM  =  DQ8
 4  ORDERS_RESUME_EFFECTIVE_TZ  =  I4
 4  ORDERS_RESUME_IND  =  I4
 4  ORDERS_RX_MASK  =  I4
 4  ORDERS_SCH_STATE_CD  =  F8
 4  ORDERS_SOFT_STOP_DT_TM  =  DQ8
 4  ORDERS_SOFT_STOP_TZ  =  I4
 4  ORDERS_STATUS_DT_TM  =  DQ8
 4  ORDERS_STATUS_PRSNL_ID  =  F8
 4  ORDERS_STOP_TYPE_CD  =  F8
 4  ORDERS_SUSPEND_EFFECTIVE_DT_TM  =  DQ8
 4  ORDERS_SUSPEND_EFFECTIVE_TZ  =  I4
 4  ORDERS_SUSPEND_IND  =  I4
 4  ORDERS_SYNONYM_ID  =  F8
 4  ORDERS_TEMPLATE_CORE_ACTION_SEQUENCE  =  I4
 4  ORDERS_TEMPLATE_ORDER_FLAG  =  I4
 4  ORDERS_TEMPLATE_ORDER_ID  =  F8
 4  ORDERS_UPDT_DT_TM  =  DQ8
 4  ORDERS_UPDT_ID  =  F8
 4  ORDERS_UPDT_TASK  =  I4
 4  ORDERS_VALID_DOSE_DT_TM  =  DQ8
 4  ORDER_REVIEW_ACTION_SEQUENCE  =  I4
 4  ORDER_REVIEW_DEPT_CD  =  F8
 4  ORDER_REVIEW_DIGITAL_SIGNATURE_IDENT  =  VC
 4  ORDER_REVIEW_LOCATION_CD  =  F8
 4  ORDER_REVIEW_ORDER_ID  =  F8
 4  ORDER_REVIEW_PROVIDER_ID  =  F8
 4  ORDER_REVIEW_PROXY_PERSONNEL_ID  =  F8
 4  ORDER_REVIEW_PROXY_REASON_CD  =  F8
 4  ORDER_REVIEW_REJECT_REASON_CD  =  F8
 4  ORDER_REVIEW_REVIEWED_STATUS_FLAG  =  I2
 4  ORDER_REVIEW_REVIEW_DT_TM  =  DQ8
 4  ORDER_REVIEW_REVIEW_PERSONNEL_ID  =  F8
 4  ORDER_REVIEW_REVIEW_REQD_IND  =  I2
 4  ORDER_REVIEW_REVIEW_SEQUENCE  =  I4
 4  ORDER_REVIEW_REVIEW_TYPE_FLAG  =  I2
 4  ORDER_REVIEW_REVIEW_TZ  =  I4
 4  ORDER_REVIEW_UPDT_DT_TM  =  DQ8
 4  ORDER_REVIEW_UPDT_ID  =  F8
 4  ORDER_REVIEW_UPDT_TASK  =  I4
 4  ORDER_NOTIF_ACTION_SEQUENCE  =  I4
 4  ORDER_NOTIF_CAUSED_BY_FLAG  =  I2
 4  ORDER_NOTIF_FROM_PRSNL_ID  =  F8
 4  ORDER_NOTIF_NOTIFICATION_COMMENT  =  VC
 4  ORDER_NOTIF_NOTIFICATION_DT_TM  =  DQ8
 4  ORDER_NOTIF_NOTIFICATION_REASON_CD  =  F8
 4  ORDER_NOTIF_NOTIFICATION_STATUS_FLAG  =  I2
 4  ORDER_NOTIF_NOTIFICATION_TYPE_FLAG  =  I2
 4  ORDER_NOTIF_NOTIFICATION_TZ  =  I4
 4  ORDER_NOTIF_ORDER_ID  =  F8
 4  ORDER_NOTIF_ORDER_NOTIFICATION_ID  =  F8
 4  ORDER_NOTIF_PARENT_ORDER_NOTIFICATION_ID  =  F8
 4  ORDER_NOTIF_STATUS_CHANGE_DT_TM  =  DQ8
 4  ORDER_NOTIF_STATUS_CHANGE_TZ  =  I4
 4  ORDER_NOTIF_TO_PRSNL_ID  =  F8
 4  ORDER_NOTIF_UPDT_DT_TM  =  DQ8
 4  ORDER_NOTIF_UPDT_ID  =  F8
 4  ORDER_NOTIF_UPDT_TASK  =  I4
 1  MAX_DEFIC_QUAL_COUNT  =  I4 )
 
IF (  I1MULTIFACILITYLOGICIND  )
 CALL GETDATAFROMPROMPT ( 2 ,  ORGANIZATIONS )
 CALL HIMGETNAMESFROMTABLE ( ORGANIZATIONS , "organization" , "org_name" , "organization_id" )
ENDIF
 CALL GETDATAFROMPROMPT ( 3 ,  PHYSICIANS )
 CALL HIMGETNAMESFROMTABLE ( PHYSICIANS , "prsnl" , "name_full_formatted" , "person_id" )
 
 EXECUTE HIM_MAK_DEFIC_BY_PHYS_DRIVER2
 
IF (  HIMRENDERNODATAREPORT ( SIZE ( DATA -> QUAL ,  5 ),  $OUTDEV ) )  RETURN
ENDIF
DECLARE  _CREATEFONTS ( DUMMY ) =  NULL  WITH  PUBLIC
DECLARE  _CREATEPENS ( DUMMY ) =  NULL  WITH  PUBLIC
DECLARE  CCLBUILDHLINK (( VCPROG = VC ), ( VCPARAMS = VC ), ( NVIEWTYPE = I2 ),
						( VCDESCRIPTION = VC )) =  VC  WITH  PROTECT
DECLARE  PAGEBREAK ( DUMMY ) =  NULL  WITH  PUBLIC
DECLARE  FINALIZEREPORT (( SSENDREPORT = VC )) =  NULL  WITH  PUBLIC
DECLARE  SECTION (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME00 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME00ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME01 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME01ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME02 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME02ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME03 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME03ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME04 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME04ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME05 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME05ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME06 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME06ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME07 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME07ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME08 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME08ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME09 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME09ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME010 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME010ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME011 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME011ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME012 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME012ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME013 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME013ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME014 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME014ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME015 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME015ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME016 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME016ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME017 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME017ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME018 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME018ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME019 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME019ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME020 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME020ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME021 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME021ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME022 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME022ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME023 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME023ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME024 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME024ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME025 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME025ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME026 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME026ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME027 (( NCALC = I2 ), ( MAXHEIGHT = F8 ), ( BCONTINUE = I2 ( REF ))) =  F8  WITH
 PUBLIC
DECLARE  FIELDNAME027ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME028 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME028ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME029 (( NCALC = I2 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME029ABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 )) =  F8  WITH  PUBLIC
DECLARE  FIELDNAME0HTML (( NDUMMY = I2 )) =  NULL  WITH  PUBLIC
DECLARE  SECTIONABS (( NCALC = I2 ), ( OFFSETX = F8 ), ( OFFSETY = F8 ), ( MAXHEIGHT = F8 ), (
 BCONTINUE = I2 ( REF ))) =  F8  WITH  PUBLIC
DECLARE  INITIALIZEREPORT ( DUMMY ) =  NULL  WITH  PUBLIC
DECLARE  _HREPORT  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
DECLARE  _HI18NHANDLE  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
DECLARE  RPT_RENDER  =  I2  WITH  CONSTANT ( 0 ), PROTECT
DECLARE  _CRLF  =  VC  WITH  CONSTANT ( CONCAT ( CHAR ( 13 ),  CHAR ( 10 ))), PROTECT
DECLARE  RPT_CALCHEIGHT  =  I2  WITH  CONSTANT ( 1 ), PROTECT
DECLARE  _YOFFSET  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
DECLARE  _XOFFSET  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
DECLARE  _YSHIFT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
DECLARE  _XSHIFT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
DECLARE  _SENDTO  =  VC  WITH  NOCONSTANT ( $OUTDEV ), PROTECT
DECLARE  _RPTERR  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  _RPTSTAT  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  _OLDFONT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  _OLDPEN  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  _DUMMYFONT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _DUMMYPEN  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _FDRAWHEIGHT  =  F8  WITH  NOCONSTANT ( 0.0 ), PROTECT
 
DECLARE  _RPTPAGE  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _HTMLFILEHANDLE  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _HTMLFILESTAT  =  I4  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _VCWRITELN  =  VC  WITH  PROTECT
 
DECLARE  _BGENERATEHTML  =  I1  WITH  NOCONSTANT ( EVALUATE ( VALIDATE ( REQUEST -> OUTPUT_DEVICE ,
"N" ), "MINE" ,  1 , '"MINE"' ,  1 ,  0 )), PROTECT
 
DECLARE  _OUTPUTTYPE  =  I2  WITH  NOCONSTANT ( RPT_PDF ), PROTECT
 
DECLARE  _BHOLDCONTINUE  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _BCONTSECTION  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMFACILITYLIST  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME07  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMPHYSICIANLIST  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME08  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMPATIENTNAMEONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMMRNDISPLAYROWONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMFINDISPLAYROWONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMDISCHROWONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME69  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME70  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMDEFICAGEONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCHARTAGEONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMLOCATIONONE  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME019  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMPATIENTNAMETWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMMRNDISPLAYROWTWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMFINDISPLAYROWTWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMDISCHROWTWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME72  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME73  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMDEFICAGETWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCHARTAGETWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMLOCATIONTWO  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME020  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMPHYSTOTALDEF  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMPHYSTOTALDEFIC  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME023  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMCELLNAME6  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME7  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME10  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME024  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMORGANIZATIONTOTAL  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME78  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMORGTOTALDEFIC  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME025  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMCELLNAME23  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME026  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _REMORGANIZATIONTOTAL0  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMGRANDTOTALDEFIC95  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _REMCELLNAME102  =  I2  WITH  NOCONSTANT ( 1 ), PROTECT
 
DECLARE  _BCONTFIELDNAME027  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
 
DECLARE  _TIMES12BI10485760  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _TIMES10B0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _TIMES11B0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _TIMES100  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _TIMES10BI255  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _PEN0S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _PEN20S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _PEN25S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _PEN14S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  _PEN15S0C0  =  I4  WITH  NOCONSTANT ( 0 ), PUBLIC
 
DECLARE  STATUSCOMPLETE  =  F8  WITH  CONSTANT ( UAR_GET_CODE_BY ("MEANING" ,  14172 , "COMPLETE" ))
, PROTECT
 
SUBROUTINE   CCLBUILDHLINK  ( VCPROGNAME ,  VCPARAMS ,  NWINDOW ,  VCDESCRIPTION  )
 
DECLARE  VCRETURN  =  VC  WITH  PRIVATE , NOCONSTANT ( VCDESCRIPTION )
IF ( ( _HTMLFILEHANDLE != 0 ) )
SET  VCRETURN  =  BUILD (^<a href='javascript:CCLLINK("^ ,  VCPROGNAME , '","' ,  VCPARAMS , '",' ,
 NWINDOW , ")'>" ,  VCDESCRIPTION , "</a>" )
ENDIF
 RETURN ( VCRETURN )
 
 
END ;Subroutine
 
 
SUBROUTINE   PAGEBREAK  ( DUMMY  )
 
SET  _RPTPAGE  =  UAR_RPTENDPAGE ( _HREPORT )
SET  _RPTPAGE  =  UAR_RPTSTARTPAGE ( _HREPORT )
SET  _YOFFSET  =  RPTREPORT -> M_MARGINTOP
 
END ;Subroutine
 
 
SUBROUTINE   FINALIZEREPORT  ( SSENDREPORT  )
 
 
if($excel)
SELECT into $outdev
 
 ORGANIZATION_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORGANIZATION_NAME ),
 PHYSICIAN_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME ),
 PATIENT_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME ),
 MRN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> MRN ),
 FIN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> FIN ),
 DISCH_DT_TM = format(DATA -> QUAL [D.SEQ]-> DISCH_DT_TM, "@SHORTDATETIME") ,
 DEFICIENCY_NAME = SUBSTRING(1,100,BUILD(DATA->QUAL[D.SEQ]->DEFIC_QUAL[DDEFIC.SEQ]->DEFICIENCY_NAME )),
 DEFICIENCY_STATUS = SUBSTRING(1,30,BUILD (DATA->QUAL[D.SEQ]->DEFIC_QUAL[DDEFIC.SEQ]->STATUS )),
;001 DEFICIENCY_AGE_HOURS = DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE ,
 DEFICIENCY_AGE_HOURS = IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE > 0 ) )  							;001
						 concat( trim(cnvtstring((DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE/24))), 		;001
						         " Days ",																					;001
						        trim(cnvtstring((mod(DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE, 24)))), 	;001
						         " Hours")																					;001
							ELSE  																							;001
								"--"																						;001
							ENDIF,																							;001
 
 
 CHART_AGE_DAYS = DATA -> QUAL [D.SEQ]-> CHART_AGE ,
 LOCATION = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> LOCATION )
 
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( SIZE ( DATA -> QUAL ,  5 ))),
( DUMMYT  DDEFIC  WITH  SEQ = VALUE ( DATA -> MAX_DEFIC_QUAL_COUNT ))
 PLAN ( D
WHERE (D.SEQ> 0 ))
 AND ( DDEFIC
WHERE (DDEFIC.SEQ<= SIZE ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL ,  5 )))
 
ORDER BY  	ORGANIZATION_NAME ,
			PHYSICIAN_NAME ,
 			DISCH_DT_TM ,
 			PATIENT_NAME,
 			DEFICIENCY_NAME ,
 			DEFICIENCY_STATUS
 
WITH  FORMAT , NOCOUNTER , separator = " "
 
else
 
IF (  _HTMLFILEHANDLE  )
SET  _HTMLFILESTAT  =  UAR_FWRITE ("</html>" ,  1 ,  7 ,  _HTMLFILEHANDLE )
SET  _HTMLFILESTAT  =  UAR_FCLOSE ( _HTMLFILEHANDLE )
ELSE
SET  _RPTPAGE  =  UAR_RPTENDPAGE ( _HREPORT )
SET  _RPTSTAT  =  UAR_RPTENDREPORT ( _HREPORT )
DECLARE  SFILENAME  =  VC  WITH  NOCONSTANT ( TRIM ( SSENDREPORT )), PRIVATE
DECLARE  BPRINT  =  I2  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( TEXTLEN ( SFILENAME )> 0 ) )
SET  BPRINT  =  CHECKQUEUE ( SFILENAME )
IF (  BPRINT  )
 EXECUTE CPM_CREATE_FILE_NAME "RPT" ,
"PS"
SET  SFILENAME  =  CPM_CFN_INFO -> FILE_NAME_PATH
ENDIF
 
ENDIF
 
SET  _RPTSTAT  =  UAR_RPTPRINTTOFILE ( _HREPORT ,  NULLTERM ( SFILENAME ))
IF (  BPRINT  )
SET  SPOOL  VALUE ( SFILENAME ) VALUE ( SSENDREPORT ) WITH  DELETED
ENDIF
 
DECLARE  _ERRORFOUND  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
DECLARE  _ERRCNT  =  I2  WITH  NOCONSTANT ( 0 ), PROTECT
SET  _ERRORFOUND  =  UAR_RPTFIRSTERROR ( _HREPORT ,  RPTERROR )
WHILE ( ( _ERRORFOUND = RPT_ERRORFOUND ) AND ( _ERRCNT < 512 ))
 
SET  _ERRCNT  = ( _ERRCNT + 1 )
SET  STAT  =  ALTERLIST ( RPTERRORS -> ERRORS ,  _ERRCNT )
SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_SEVERITY  =  RPTERROR -> M_SEVERITY
SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_TEXT  =  RPTERROR -> M_TEXT
SET  RPTERRORS -> ERRORS [ _ERRCNT ]-> M_SOURCE  =  RPTERROR -> M_SOURCE
SET  _ERRORFOUND  =  UAR_RPTNEXTERROR ( _HREPORT ,  RPTERROR )
 
ENDWHILE
 
SET  _RPTSTAT  =  UAR_RPTDESTROYREPORT ( _HREPORT )
ENDIF
 
endif
 
END ;Subroutine
 
 
SUBROUTINE   SECTION  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  SECTIONABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME00  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME00ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME00ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.121448 ), PRIVATE
IF (  NOT ( _BGENERATEHTML  ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.121
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10BI255 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( CCLBUILDHLINK (
 HIM_PROGRAM_NAME ,  HIM_RENDER_PARAMS ,  HIM_WINDOW , "Printer Friendly Version" ),  CHAR ( 0 ))))
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME01  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME01ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME01ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.472141 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  1040
SET  RPTSD -> M_BORDERS  =  BOR ( BOR ( RPT_SDTOPBORDER ,  RPT_SDLEFTBORDER ),  RPT_SDRIGHTBORDER )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.472
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES12BI10485760 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName0" , "Deficiency Reporting by Physician" ),
 CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME02  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME02ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME02ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.403105 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  528
SET  RPTSD -> M_BORDERS  =  BOR ( BOR ( RPT_SDBOTTOMBORDER ,  RPT_SDLEFTBORDER ),
 RPT_SDRIGHTBORDER )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.403
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES12BI10485760 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName81" , "Detailed Report" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME03  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME03ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME03ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.118369 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  0
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.118
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( BLANK ,  CHAR (
 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME04  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME04ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME04ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.221932 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.222
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( I18NDATEPRINTED
,  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  8.625
SET  RPTSD -> M_HEIGHT  =  0.222
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( VCTODAYDATETIME
,  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME05  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME05ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME05ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.227359 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.227
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( I18NUSERPRINTED
,  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  8.625
SET  RPTSD -> M_HEIGHT  =  0.227
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( VCUSER ,  CHAR (
 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME06  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME06ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME06ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.194872 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.195
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 I18NPROMPTSFILTERS ,  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  8.625
SET  RPTSD -> M_HEIGHT  =  0.195
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME07  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME07ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME07ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.235275 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF (  NOT ( I1MULTIFACILITYLOGICIND  ) )  RETURN ( 0.0 )
 
ENDIF
 
IF ( ( BCONTINUE = 0 ) )
SET  _REMFACILITYLIST  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  261
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.438 )
SET  RPTSD -> M_WIDTH  =  6.563
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMFACILITYLIST  =  _REMFACILITYLIST
IF ( ( _REMFACILITYLIST > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMFACILITYLIST , (( SIZE ( NULLTERM ( BUILD2 ( FACILITYLIST ,  CHAR ( 0 ))))- _REMFACILITYLIST )+
 1 ),  NULLTERM ( BUILD2 ( FACILITYLIST ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMFACILITYLIST  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMFACILITYLIST , (( SIZE (
 NULLTERM ( BUILD2 ( FACILITYLIST ,  CHAR ( 0 ))))- _REMFACILITYLIST )+ 1 ),  NULLTERM ( BUILD2 (
 FACILITYLIST ,  CHAR ( 0 ))))))) )
SET  _REMFACILITYLIST  = ( _REMFACILITYLIST + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMFACILITYLIST  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMFACILITYLIST )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  2.062
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( I18NFACILITIES ,
 CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  260
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.438 )
SET  RPTSD -> M_WIDTH  =  6.563
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMFACILITYLIST > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMFACILITYLIST , (( SIZE ( NULLTERM ( BUILD2 ( FACILITYLIST ,  CHAR ( 0 ))))-
 _HOLDREMFACILITYLIST )+ 1 ),  NULLTERM ( BUILD2 ( FACILITYLIST ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMFACILITYLIST  =  _HOLDREMFACILITYLIST
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.44
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.44 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.438 ),  OFFSETY , ( OFFSETX + 3.438 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME08  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME08ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME08ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.213961 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( BCONTINUE = 0 ) )
SET  _REMPHYSICIANLIST  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  261
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.438 )
SET  RPTSD -> M_WIDTH  =  6.563
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMPHYSICIANLIST  =  _REMPHYSICIANLIST
IF ( ( _REMPHYSICIANLIST > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMPHYSICIANLIST , (( SIZE ( NULLTERM ( BUILD2 ( PHYSICIANLIST ,  CHAR ( 0 ))))-
 _REMPHYSICIANLIST )+ 1 ),  NULLTERM ( BUILD2 ( PHYSICIANLIST ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMPHYSICIANLIST  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMPHYSICIANLIST , (( SIZE (
 NULLTERM ( BUILD2 ( PHYSICIANLIST ,  CHAR ( 0 ))))- _REMPHYSICIANLIST )+ 1 ),  NULLTERM ( BUILD2 (
 PHYSICIANLIST ,  CHAR ( 0 ))))))) )
SET  _REMPHYSICIANLIST  = ( _REMPHYSICIANLIST + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMPHYSICIANLIST  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMPHYSICIANLIST )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  2.062
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName4" , "Physician(s):" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  260
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.438 )
SET  RPTSD -> M_WIDTH  =  6.563
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMPHYSICIANLIST > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMPHYSICIANLIST , (( SIZE ( NULLTERM ( BUILD2 ( PHYSICIANLIST ,  CHAR ( 0 ))))-
 _HOLDREMPHYSICIANLIST )+ 1 ),  NULLTERM ( BUILD2 ( PHYSICIANLIST ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMPHYSICIANLIST  =  _HOLDREMPHYSICIANLIST
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.44
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.44 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.438 ),  OFFSETY , ( OFFSETX + 3.438 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME09  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME09ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME09ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.238194 ), PRIVATE
IF (  NOT ( NEGATE ( _BGENERATEHTML ) ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  576
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.238
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( PAGEOFPAGE ,
 CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME010  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME010ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME010ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.202081 ), PRIVATE
IF (  NOT (( ROWCOUNT > 1 ) ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName27" , "Patient" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  1088
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName53" , "Discharge" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName24" , "Deficiency" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName5" , "Chart" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.202
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME011  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME011ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME011ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.184983 ), PRIVATE
IF (  NOT (( ROWCOUNT > 1 ) ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDBOTTOMBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName33" , "Name" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName31" , "MRN" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName32" , "FIN" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName54" , "Date" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName66" , "Deficiency" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName29" , "Status" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName8" , "Age" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName217" , "Age" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.185
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName203" , "Location" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME012  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME012ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME012ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.121509 ), PRIVATE
IF (  NOT ( 0  ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDBOTTOMBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.122
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN15S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME013  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME013ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME013ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.232774 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDBOTTOMBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.233
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN15S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( ORGANIZATION ,
 CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME014  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME014ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME014ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.124496 ), PRIVATE
IF (  NOT ( 0  ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.250
SET  RPTSD -> M_HEIGHT  =  0.124
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.250 )
SET  RPTSD -> M_WIDTH  =  8.750
SET  RPTSD -> M_HEIGHT  =  0.124
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.25 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.250 ),  OFFSETY , ( OFFSETX + 1.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME015  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME015ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME015ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.221932 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.250
SET  RPTSD -> M_HEIGHT  =  0.222
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_physicianDisplay" , "Physician:" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.250 )
SET  RPTSD -> M_WIDTH  =  8.750
SET  RPTSD -> M_HEIGHT  =  0.222
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( PHYSICIANNAME ,
 CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.25 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.250 ),  OFFSETY , ( OFFSETX + 1.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME016  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME016ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME016ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.215565 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName49" , "Patient" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  1088
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName216" , "Discharge" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName211" , "Deficiency" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName219" , "Chart" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.216
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME017  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME017ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME017ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.187497 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  1056
SET  RPTSD -> M_BORDERS  =  RPT_SDBOTTOMBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName41" , "Name" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName39" , "MRN" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName40" , "FIN" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName215" , "Date" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName214" , "Deficiency" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName213" , "Status" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName212" , "Age" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName218" , "Age" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  0.187
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName220" , "Location" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME018  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME018ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME018ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.113176 ), PRIVATE
IF (  NOT ( 0  ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.113
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( BLANK2 ,  CHAR (
 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME019  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME019ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME019ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.210562 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF (  NOT (( MOD ( ROWCOUNT ,  2 )= 1 ) ) )  RETURN ( 0.0 )
 
ENDIF
 
IF ( ( BCONTINUE = 0 ) )
SET  _REMPATIENTNAMEONE  =  1
SET  _REMMRNDISPLAYROWONE  =  1
SET  _REMFINDISPLAYROWONE  =  1
SET  _REMDISCHROWONE  =  1
SET  _REMCELLNAME69  =  1
SET  _REMCELLNAME70  =  1
SET  _REMDEFICAGEONE  =  1
SET  _REMCHARTAGEONE  =  1
SET  _REMLOCATIONONE  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMPATIENTNAMEONE  =  _REMPATIENTNAMEONE
IF ( ( _REMPATIENTNAMEONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMPATIENTNAMEONE , (( SIZE ( NULLTERM ( BUILD2 ( PATIENTNAMEONE ,  CHAR ( 0 ))))-
 _REMPATIENTNAMEONE )+ 1 ),  NULLTERM ( BUILD2 ( PATIENTNAMEONE ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMPATIENTNAMEONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMPATIENTNAMEONE , (( SIZE (
 NULLTERM ( BUILD2 ( PATIENTNAMEONE ,  CHAR ( 0 ))))- _REMPATIENTNAMEONE )+ 1 ),  NULLTERM ( BUILD2
( PATIENTNAMEONE ,  CHAR ( 0 ))))))) )
SET  _REMPATIENTNAMEONE  = ( _REMPATIENTNAMEONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMPATIENTNAMEONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMPATIENTNAMEONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMMRNDISPLAYROWONE  =  _REMMRNDISPLAYROWONE
IF ( ( _REMMRNDISPLAYROWONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMMRNDISPLAYROWONE , (( SIZE ( NULLTERM ( BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))-
 _REMMRNDISPLAYROWONE )+ 1 ),  NULLTERM ( BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMMRNDISPLAYROWONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMMRNDISPLAYROWONE , (( SIZE (
 NULLTERM ( BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))- _REMMRNDISPLAYROWONE )+ 1 ),  NULLTERM (
 BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))))) )
SET  _REMMRNDISPLAYROWONE  = ( _REMMRNDISPLAYROWONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMMRNDISPLAYROWONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMMRNDISPLAYROWONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMFINDISPLAYROWONE  =  _REMFINDISPLAYROWONE
IF ( ( _REMFINDISPLAYROWONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMFINDISPLAYROWONE , (( SIZE ( NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))- _REMFINDISPLAYROWONE )+
 1 ),  NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMFINDISPLAYROWONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMFINDISPLAYROWONE , (( SIZE (
 NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))- _REMFINDISPLAYROWONE )+ 1 ),  NULLTERM ( BUILD2 ( FIN ,
 CHAR ( 0 ))))))) )
SET  _REMFINDISPLAYROWONE  = ( _REMFINDISPLAYROWONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMFINDISPLAYROWONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMFINDISPLAYROWONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMDISCHROWONE  =  _REMDISCHROWONE
IF ( ( _REMDISCHROWONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMDISCHROWONE , (( SIZE ( NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))
))- _REMDISCHROWONE )+ 1 ),  NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))
))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMDISCHROWONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMDISCHROWONE , (( SIZE (
 NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))))- _REMDISCHROWONE )+ 1 ),
 NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))))))) )
SET  _REMDISCHROWONE  = ( _REMDISCHROWONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMDISCHROWONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMDISCHROWONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCELLNAME69  =  _REMCELLNAME69
IF ( ( _REMCELLNAME69 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME69 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))- _REMCELLNAME69 )+
 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME69  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME69 , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))- _REMCELLNAME69 )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICIENCY_NAME ,  CHAR ( 0 ))))))) )
SET  _REMCELLNAME69  = ( _REMCELLNAME69 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME69  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME69 )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCELLNAME70  =  _REMCELLNAME70
IF ( ( _REMCELLNAME70 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME70 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))- _REMCELLNAME70 )
+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME70  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME70 , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))- _REMCELLNAME70 )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICIENCY_STATUS ,  CHAR ( 0 ))))))) )
SET  _REMCELLNAME70  = ( _REMCELLNAME70 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME70  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME70 )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMDEFICAGEONE  =  _REMDEFICAGEONE
IF ( ( _REMDEFICAGEONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMDEFICAGEONE , (( SIZE ( NULLTERM ( BUILD2 ( DEFICAGEONE ,  CHAR ( 0 ))))- _REMDEFICAGEONE )+ 1
),  NULLTERM ( BUILD2 ( DEFICAGEONE ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMDEFICAGEONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMDEFICAGEONE , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICAGEONE ,  CHAR ( 0 ))))- _REMDEFICAGEONE )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICAGEONE ,  CHAR ( 0 ))))))) )
SET  _REMDEFICAGEONE  = ( _REMDEFICAGEONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMDEFICAGEONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMDEFICAGEONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCHARTAGEONE  =  _REMCHARTAGEONE
IF ( ( _REMCHARTAGEONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCHARTAGEONE , (( SIZE ( NULLTERM ( BUILD2 ( CHARTAGEONE ,  CHAR ( 0 ))))- _REMCHARTAGEONE )+ 1
),  NULLTERM ( BUILD2 ( CHARTAGEONE ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCHARTAGEONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCHARTAGEONE , (( SIZE (
 NULLTERM ( BUILD2 ( CHARTAGEONE ,  CHAR ( 0 ))))- _REMCHARTAGEONE )+ 1 ),  NULLTERM ( BUILD2 (
 CHARTAGEONE ,  CHAR ( 0 ))))))) )
SET  _REMCHARTAGEONE  = ( _REMCHARTAGEONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCHARTAGEONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCHARTAGEONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMLOCATIONONE  =  _REMLOCATIONONE
IF ( ( _REMLOCATIONONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMLOCATIONONE , (( SIZE ( NULLTERM ( BUILD2 ( LOCATIONONE ,  CHAR ( 0 ))))- _REMLOCATIONONE )+ 1
),  NULLTERM ( BUILD2 ( LOCATIONONE ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMLOCATIONONE  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMLOCATIONONE , (( SIZE (
 NULLTERM ( BUILD2 ( LOCATIONONE ,  CHAR ( 0 ))))- _REMLOCATIONONE )+ 1 ),  NULLTERM ( BUILD2 (
 LOCATIONONE ,  CHAR ( 0 ))))))) )
SET  _REMLOCATIONONE  = ( _REMLOCATIONONE + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMLOCATIONONE  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMLOCATIONONE )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMPATIENTNAMEONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMPATIENTNAMEONE , (( SIZE ( NULLTERM ( BUILD2 ( PATIENTNAMEONE ,  CHAR ( 0 ))))-
 _HOLDREMPATIENTNAMEONE )+ 1 ),  NULLTERM ( BUILD2 ( PATIENTNAMEONE ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMPATIENTNAMEONE  =  _HOLDREMPATIENTNAMEONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMMRNDISPLAYROWONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMMRNDISPLAYROWONE , (( SIZE ( NULLTERM ( BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))-
 _HOLDREMMRNDISPLAYROWONE )+ 1 ),  NULLTERM ( BUILD2 ( MRNDISPLAYROWONE ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMMRNDISPLAYROWONE  =  _HOLDREMMRNDISPLAYROWONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMFINDISPLAYROWONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMFINDISPLAYROWONE , (( SIZE ( NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))-
 _HOLDREMFINDISPLAYROWONE )+ 1 ),  NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMFINDISPLAYROWONE  =  _HOLDREMFINDISPLAYROWONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMDISCHROWONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMDISCHROWONE , (( SIZE ( NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR (
 0 ))))- _HOLDREMDISCHROWONE )+ 1 ),  NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),
 CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMDISCHROWONE  =  _HOLDREMDISCHROWONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME69 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME69 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))-
 _HOLDREMCELLNAME69 )+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME69  =  _HOLDREMCELLNAME69
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME70 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME70 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))-
 _HOLDREMCELLNAME70 )+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME70  =  _HOLDREMCELLNAME70
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMDEFICAGEONE > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMDEFICAGEONE , (( SIZE ( NULLTERM ( BUILD2 ( DEFICAGEONE ,  CHAR ( 0 ))))-
 _HOLDREMDEFICAGEONE )+ 1 ),  NULLTERM ( BUILD2 ( DEFICAGEONE ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMDEFICAGEONE  =  _HOLDREMDEFICAGEONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCHARTAGEONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCHARTAGEONE , (( SIZE ( NULLTERM ( BUILD2 ( CHARTAGEONE ,  CHAR ( 0 ))))-
 _HOLDREMCHARTAGEONE )+ 1 ),  NULLTERM ( BUILD2 ( CHARTAGEONE ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCHARTAGEONE  =  _HOLDREMCHARTAGEONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMLOCATIONONE > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMLOCATIONONE , (( SIZE ( NULLTERM ( BUILD2 ( LOCATIONONE ,  CHAR ( 0 ))))-
 _HOLDREMLOCATIONONE )+ 1 ),  NULLTERM ( BUILD2 ( LOCATIONONE ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMLOCATIONONE  =  _HOLDREMLOCATIONONE
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME020  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME020ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME020ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.232773 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF (  NOT (( MOD ( ROWCOUNT ,  2 )= 0 ) ) )  RETURN ( 0.0 )
 
ENDIF
 
IF ( ( BCONTINUE = 0 ) )
SET  _REMPATIENTNAMETWO  =  1
SET  _REMMRNDISPLAYROWTWO  =  1
SET  _REMFINDISPLAYROWTWO  =  1
SET  _REMDISCHROWTWO  =  1
SET  _REMCELLNAME72  =  1
SET  _REMCELLNAME73  =  1
SET  _REMDEFICAGETWO  =  1
SET  _REMCHARTAGETWO  =  1
SET  _REMLOCATIONTWO  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMPATIENTNAMETWO  =  _REMPATIENTNAMETWO
IF ( ( _REMPATIENTNAMETWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMPATIENTNAMETWO , (( SIZE ( NULLTERM ( BUILD2 ( PATIENT_NAME ,  CHAR ( 0 ))))-
 _REMPATIENTNAMETWO )+ 1 ),  NULLTERM ( BUILD2 ( PATIENT_NAME ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMPATIENTNAMETWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMPATIENTNAMETWO , (( SIZE (
 NULLTERM ( BUILD2 ( PATIENT_NAME ,  CHAR ( 0 ))))- _REMPATIENTNAMETWO )+ 1 ),  NULLTERM ( BUILD2 (
 PATIENT_NAME ,  CHAR ( 0 ))))))) )
SET  _REMPATIENTNAMETWO  = ( _REMPATIENTNAMETWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMPATIENTNAMETWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMPATIENTNAMETWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMMRNDISPLAYROWTWO  =  _REMMRNDISPLAYROWTWO
IF ( ( _REMMRNDISPLAYROWTWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMMRNDISPLAYROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( MRN ,  CHAR ( 0 ))))- _REMMRNDISPLAYROWTWO )+
 1 ),  NULLTERM ( BUILD2 ( MRN ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMMRNDISPLAYROWTWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMMRNDISPLAYROWTWO , (( SIZE (
 NULLTERM ( BUILD2 ( MRN ,  CHAR ( 0 ))))- _REMMRNDISPLAYROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( MRN ,
 CHAR ( 0 ))))))) )
SET  _REMMRNDISPLAYROWTWO  = ( _REMMRNDISPLAYROWTWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMMRNDISPLAYROWTWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMMRNDISPLAYROWTWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMFINDISPLAYROWTWO  =  _REMFINDISPLAYROWTWO
IF ( ( _REMFINDISPLAYROWTWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMFINDISPLAYROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))- _REMFINDISPLAYROWTWO )+
 1 ),  NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMFINDISPLAYROWTWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMFINDISPLAYROWTWO , (( SIZE (
 NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))- _REMFINDISPLAYROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( FIN ,
 CHAR ( 0 ))))))) )
SET  _REMFINDISPLAYROWTWO  = ( _REMFINDISPLAYROWTWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMFINDISPLAYROWTWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMFINDISPLAYROWTWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMDISCHROWTWO  =  _REMDISCHROWTWO
IF ( ( _REMDISCHROWTWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMDISCHROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))
))- _REMDISCHROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))
))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMDISCHROWTWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMDISCHROWTWO , (( SIZE (
 NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))))- _REMDISCHROWTWO )+ 1 ),
 NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR ( 0 ))))))) )
SET  _REMDISCHROWTWO  = ( _REMDISCHROWTWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMDISCHROWTWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMDISCHROWTWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCELLNAME72  =  _REMCELLNAME72
IF ( ( _REMCELLNAME72 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME72 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))- _REMCELLNAME72 )+
 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME72  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME72 , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))- _REMCELLNAME72 )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICIENCY_NAME ,  CHAR ( 0 ))))))) )
SET  _REMCELLNAME72  = ( _REMCELLNAME72 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME72  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME72 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCELLNAME73  =  _REMCELLNAME73
IF ( ( _REMCELLNAME73 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME73 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))- _REMCELLNAME73 )
+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME73  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME73 , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))- _REMCELLNAME73 )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICIENCY_STATUS ,  CHAR ( 0 ))))))) )
SET  _REMCELLNAME73  = ( _REMCELLNAME73 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME73  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME73 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMDEFICAGETWO  =  _REMDEFICAGETWO
IF ( ( _REMDEFICAGETWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMDEFICAGETWO , (( SIZE ( NULLTERM ( BUILD2 ( DEFICAGETWO ,  CHAR ( 0 ))))- _REMDEFICAGETWO )+ 1
),  NULLTERM ( BUILD2 ( DEFICAGETWO ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMDEFICAGETWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMDEFICAGETWO , (( SIZE (
 NULLTERM ( BUILD2 ( DEFICAGETWO ,  CHAR ( 0 ))))- _REMDEFICAGETWO )+ 1 ),  NULLTERM ( BUILD2 (
 DEFICAGETWO ,  CHAR ( 0 ))))))) )
SET  _REMDEFICAGETWO  = ( _REMDEFICAGETWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMDEFICAGETWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMDEFICAGETWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMCHARTAGETWO  =  _REMCHARTAGETWO
IF ( ( _REMCHARTAGETWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCHARTAGETWO , (( SIZE ( NULLTERM ( BUILD2 ( CHARTAGETWO ,  CHAR ( 0 ))))- _REMCHARTAGETWO )+ 1
),  NULLTERM ( BUILD2 ( CHARTAGETWO ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCHARTAGETWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCHARTAGETWO , (( SIZE (
 NULLTERM ( BUILD2 ( CHARTAGETWO ,  CHAR ( 0 ))))- _REMCHARTAGETWO )+ 1 ),  NULLTERM ( BUILD2 (
 CHARTAGETWO ,  CHAR ( 0 ))))))) )
SET  _REMCHARTAGETWO  = ( _REMCHARTAGETWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCHARTAGETWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCHARTAGETWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  _HOLDREMLOCATIONTWO  =  _REMLOCATIONTWO
IF ( ( _REMLOCATIONTWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMLOCATIONTWO , (( SIZE ( NULLTERM ( BUILD2 ( LOCATIONTWO ,  CHAR ( 0 ))))- _REMLOCATIONTWO )+ 1
),  NULLTERM ( BUILD2 ( LOCATIONTWO ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) AND  DISPLAYIND  )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMLOCATIONTWO  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMLOCATIONTWO , (( SIZE (
 NULLTERM ( BUILD2 ( LOCATIONTWO ,  CHAR ( 0 ))))- _REMLOCATIONTWO )+ 1 ),  NULLTERM ( BUILD2 (
 LOCATIONTWO ,  CHAR ( 0 ))))))) )
SET  _REMLOCATIONTWO  = ( _REMLOCATIONTWO + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMLOCATIONTWO  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMLOCATIONTWO )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMPATIENTNAMETWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMPATIENTNAMETWO , (( SIZE ( NULLTERM ( BUILD2 ( PATIENT_NAME ,  CHAR ( 0 ))))-
 _HOLDREMPATIENTNAMETWO )+ 1 ),  NULLTERM ( BUILD2 ( PATIENT_NAME ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMPATIENTNAMETWO  =  _HOLDREMPATIENTNAMETWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.375 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMMRNDISPLAYROWTWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMMRNDISPLAYROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( MRN ,  CHAR ( 0 ))))-
 _HOLDREMMRNDISPLAYROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( MRN ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMMRNDISPLAYROWTWO  =  _HOLDREMMRNDISPLAYROWTWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.375 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMFINDISPLAYROWTWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMFINDISPLAYROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))-
 _HOLDREMFINDISPLAYROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( FIN ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMFINDISPLAYROWTWO  =  _HOLDREMFINDISPLAYROWTWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.250 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMDISCHROWTWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMDISCHROWTWO , (( SIZE ( NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),  CHAR (
 0 ))))- _HOLDREMDISCHROWTWO )+ 1 ),  NULLTERM ( BUILD2 ( FORMAT ( DISCH_DT_TM , "@SHORTDATE" ),
 CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMDISCHROWTWO  =  _HOLDREMDISCHROWTWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.375 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME72 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME72 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))-
 _HOLDREMCELLNAME72 )+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_NAME ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME72  =  _HOLDREMCELLNAME72
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 5.688 )
SET  RPTSD -> M_WIDTH  =  1.188
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME73 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME73 , (( SIZE ( NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))-
 _HOLDREMCELLNAME73 )+ 1 ),  NULLTERM ( BUILD2 ( DEFICIENCY_STATUS ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME73  =  _HOLDREMCELLNAME73
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.875 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMDEFICAGETWO > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMDEFICAGETWO , (( SIZE ( NULLTERM ( BUILD2 ( DEFICAGETWO ,  CHAR ( 0 ))))-
 _HOLDREMDEFICAGETWO )+ 1 ),  NULLTERM ( BUILD2 ( DEFICAGETWO ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMDEFICAGETWO  =  _HOLDREMDEFICAGETWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.750 )
SET  RPTSD -> M_WIDTH  =  0.875
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCHARTAGETWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCHARTAGETWO , (( SIZE ( NULLTERM ( BUILD2 ( CHARTAGETWO ,  CHAR ( 0 ))))-
 _HOLDREMCHARTAGETWO )+ 1 ),  NULLTERM ( BUILD2 ( CHARTAGETWO ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCHARTAGETWO  =  _HOLDREMCHARTAGETWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 8.625 )
SET  RPTSD -> M_WIDTH  =  1.375
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN14S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 232 ,  232 ,  232 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMLOCATIONTWO > 0 ) )
IF (  DISPLAYIND  )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMLOCATIONTWO , (( SIZE ( NULLTERM ( BUILD2 ( LOCATIONTWO ,  CHAR ( 0 ))))-
 _HOLDREMLOCATIONTWO )+ 1 ),  NULLTERM ( BUILD2 ( LOCATIONTWO ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMLOCATIONTWO  =  _HOLDREMLOCATIONTWO
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.375 ),  OFFSETY , ( OFFSETX + 1.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.25
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.375 ),  OFFSETY , ( OFFSETX + 2.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.25 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.38
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.250 ),  OFFSETY , ( OFFSETX + 3.250 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.38 ), ( OFFSETY + 0.00 ), ( OFFSETX + 5.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.375 ),  OFFSETY , ( OFFSETX + 4.375 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.88
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 5.688 ),  OFFSETY , ( OFFSETX + 5.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.88 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.75
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.875 ),  OFFSETY , ( OFFSETX + 6.875 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.75 ), ( OFFSETY + 0.00 ), ( OFFSETX + 8.63
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.750 ),  OFFSETY , ( OFFSETX + 7.750 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.63 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 8.625 ),  OFFSETY , ( OFFSETX + 8.625 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME021  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME021ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME021ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.224157 ), PRIVATE
IF (  NOT ( 0  ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.224
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( BLANK3 ,  CHAR (
 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME022  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME022ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME022ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.118498 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  272
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.118
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME023  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME023ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME023ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.229522 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( BCONTINUE = 0 ) )
SET  _REMPHYSTOTALDEF  =  1
SET  _REMPHYSTOTALDEFIC  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMPHYSTOTALDEF  =  _REMPHYSTOTALDEF
IF ( ( _REMPHYSTOTALDEF > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMPHYSTOTALDEF , (( SIZE ( NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_physTotalDef" , "Total Deficiencies:" ),  CHAR ( 0 ))))- _REMPHYSTOTALDEF )+ 1 ),
 NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_physTotalDef" ,
"Total Deficiencies:" ),  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMPHYSTOTALDEF  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMPHYSTOTALDEF , (( SIZE (
 NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_physTotalDef" ,
"Total Deficiencies:" ),  CHAR ( 0 ))))- _REMPHYSTOTALDEF )+ 1 ),  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_physTotalDef" , "Total Deficiencies:" ),  CHAR ( 0 )))
)))) )
SET  _REMPHYSTOTALDEF  = ( _REMPHYSTOTALDEF + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMPHYSTOTALDEF  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMPHYSTOTALDEF )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  325
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.312 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMPHYSTOTALDEFIC  =  _REMPHYSTOTALDEFIC
IF ( ( _REMPHYSTOTALDEFIC > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMPHYSTOTALDEFIC , (( SIZE ( NULLTERM ( BUILD2 ( PHYSTOTALDEFIC ,  CHAR ( 0 ))))-
 _REMPHYSTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2 ( PHYSTOTALDEFIC ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMPHYSTOTALDEFIC  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMPHYSTOTALDEFIC , (( SIZE (
 NULLTERM ( BUILD2 ( PHYSTOTALDEFIC ,  CHAR ( 0 ))))- _REMPHYSTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2
( PHYSTOTALDEFIC ,  CHAR ( 0 ))))))) )
SET  _REMPHYSTOTALDEFIC  = ( _REMPHYSTOTALDEFIC + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMPHYSTOTALDEFIC  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMPHYSTOTALDEFIC )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  1.312
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMPHYSTOTALDEF > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMPHYSTOTALDEF , (( SIZE ( NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_physTotalDef" , "Total Deficiencies:" ),  CHAR ( 0 ))))- _HOLDREMPHYSTOTALDEF )+ 1 ),
 NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_physTotalDef" ,
"Total Deficiencies:" ),  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMPHYSTOTALDEF  =  _HOLDREMPHYSTOTALDEF
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  324
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 1.312 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMPHYSTOTALDEFIC > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMPHYSTOTALDEFIC , (( SIZE ( NULLTERM ( BUILD2 ( PHYSTOTALDEFIC ,  CHAR ( 0 ))))-
 _HOLDREMPHYSTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2 ( PHYSTOTALDEFIC ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMPHYSTOTALDEFIC  =  _HOLDREMPHYSTOTALDEFIC
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.438 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName86" , "Total Charts:" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  320
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.437 )
SET  RPTSD -> M_WIDTH  =  1.125
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( PHYS_CHART_CNT ,
 CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  272
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.563 )
SET  RPTSD -> M_WIDTH  =  5.438
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 1.31
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.31 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.44
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 1.312 ),  OFFSETY , ( OFFSETX + 1.312 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.44 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.44
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.438 ),  OFFSETY , ( OFFSETX + 2.438 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.44 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.56
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.437 ),  OFFSETY , ( OFFSETX + 3.437 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.56 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.563 ),  OFFSETY , ( OFFSETX + 4.563 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME024  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME024ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME024ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.123415 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( BCONTINUE = 0 ) )
SET  _REMCELLNAME6  =  1
SET  _REMCELLNAME7  =  1
SET  _REMCELLNAME10  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  2.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMCELLNAME6  =  _REMCELLNAME6
IF ( ( _REMCELLNAME6 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING ( _REMCELLNAME6
, (( SIZE ("" )- _REMCELLNAME6 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME6  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME6 , (( SIZE ("" )-
 _REMCELLNAME6 )+ 1 ), "" )))) )
SET  _REMCELLNAME6  = ( _REMCELLNAME6 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME6  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME6 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.000 )
SET  RPTSD -> M_WIDTH  =  1.688
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMCELLNAME7  =  _REMCELLNAME7
IF ( ( _REMCELLNAME7 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING ( _REMCELLNAME7
, (( SIZE ("" )- _REMCELLNAME7 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME7  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME7 , (( SIZE ("" )-
 _REMCELLNAME7 )+ 1 ), "" )))) )
SET  _REMCELLNAME7  = ( _REMCELLNAME7 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME7  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME7 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  325
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMCELLNAME10  =  _REMCELLNAME10
IF ( ( _REMCELLNAME10 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME10 , (( SIZE ("" )- _REMCELLNAME10 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME10  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME10 , (( SIZE ("" )-
 _REMCELLNAME10 )+ 1 ), "" )))) )
SET  _REMCELLNAME10  = ( _REMCELLNAME10 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME10  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME10 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  2.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME6 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME6 , (( SIZE ("" )- _HOLDREMCELLNAME6 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME6  =  _HOLDREMCELLNAME6
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.000 )
SET  RPTSD -> M_WIDTH  =  1.688
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME7 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME7 , (( SIZE ("" )- _HOLDREMCELLNAME7 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME7  =  _HOLDREMCELLNAME7
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.688 )
SET  RPTSD -> M_WIDTH  =  1.250
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  324
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME10 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME10 , (( SIZE ("" )- _HOLDREMCELLNAME10 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME10  =  _HOLDREMCELLNAME10
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.500 )
SET  RPTSD -> M_WIDTH  =  1.062
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  272
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.562 )
SET  RPTSD -> M_WIDTH  =  2.438
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  RPT_WHITE )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.00
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.000 ),  OFFSETY , ( OFFSETX + 2.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.94
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.688 ),  OFFSETY , ( OFFSETX + 3.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.94 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.50
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.938 ),  OFFSETY , ( OFFSETX + 4.938 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.50 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.56
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.500 ),  OFFSETY , ( OFFSETX + 6.500 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.56 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.562 ),  OFFSETY , ( OFFSETX + 7.562 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME025  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME025ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME025ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.229522 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( BCONTINUE = 0 ) )
SET  _REMORGANIZATIONTOTAL  =  1
SET  _REMCELLNAME78  =  1
SET  _REMORGTOTALDEFIC  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  2.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMORGANIZATIONTOTAL  =  _REMORGANIZATIONTOTAL
IF ( ( _REMORGANIZATIONTOTAL > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMORGANIZATIONTOTAL , (( SIZE ( NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))- _REMORGANIZATIONTOTAL )+ 1 ),  NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMORGANIZATIONTOTAL  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMORGANIZATIONTOTAL , (( SIZE (
 NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))- _REMORGANIZATIONTOTAL )+ 1 ),  NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))))) )
SET  _REMORGANIZATIONTOTAL  = ( _REMORGANIZATIONTOTAL + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMORGANIZATIONTOTAL  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMORGANIZATIONTOTAL )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.000 )
SET  RPTSD -> M_WIDTH  =  1.688
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMCELLNAME78  =  _REMCELLNAME78
IF ( ( _REMCELLNAME78 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME78 , (( SIZE ("" )- _REMCELLNAME78 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME78  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME78 , (( SIZE ("" )-
 _REMCELLNAME78 )+ 1 ), "" )))) )
SET  _REMCELLNAME78  = ( _REMCELLNAME78 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME78  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME78 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  325
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  _HOLDREMORGTOTALDEFIC  =  _REMORGTOTALDEFIC
IF ( ( _REMORGTOTALDEFIC > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMORGTOTALDEFIC , (( SIZE ( NULLTERM ( BUILD2 ( ORGTOTALDEFIC ,  CHAR ( 0 ))))-
 _REMORGTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2 ( ORGTOTALDEFIC ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMORGTOTALDEFIC  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMORGTOTALDEFIC , (( SIZE (
 NULLTERM ( BUILD2 ( ORGTOTALDEFIC ,  CHAR ( 0 ))))- _REMORGTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2 (
 ORGTOTALDEFIC ,  CHAR ( 0 ))))))) )
SET  _REMORGTOTALDEFIC  = ( _REMORGTOTALDEFIC + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMORGTOTALDEFIC  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMORGTOTALDEFIC )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  2.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMORGANIZATIONTOTAL > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMORGANIZATIONTOTAL , (( SIZE ( NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))- _HOLDREMORGANIZATIONTOTAL )+ 1 ),  NULLTERM ( BUILD2 (
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMORGANIZATIONTOTAL  =  _HOLDREMORGANIZATIONTOTAL
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 2.000 )
SET  RPTSD -> M_WIDTH  =  1.688
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME78 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME78 , (( SIZE ("" )- _HOLDREMCELLNAME78 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME78  =  _HOLDREMCELLNAME78
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.688 )
SET  RPTSD -> M_WIDTH  =  1.250
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName21" , "Total Deficiencies:" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  324
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMORGTOTALDEFIC > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMORGTOTALDEFIC , (( SIZE ( NULLTERM ( BUILD2 ( ORGTOTALDEFIC ,  CHAR ( 0 ))))-
 _HOLDREMORGTOTALDEFIC )+ 1 ),  NULLTERM ( BUILD2 ( ORGTOTALDEFIC ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMORGTOTALDEFIC  =  _HOLDREMORGTOTALDEFIC
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.500 )
SET  RPTSD -> M_WIDTH  =  1.062
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName89" , "Total Charts:" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  320
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.562 )
SET  RPTSD -> M_WIDTH  =  1.438
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( ORG_CHART_CNT ,
 CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  272
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 9.000 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN25S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 2.00
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 2.000 ),  OFFSETY , ( OFFSETX + 2.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.94
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.688 ),  OFFSETY , ( OFFSETX + 3.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.94 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.50
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.938 ),  OFFSETY , ( OFFSETX + 4.938 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.50 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.56
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.500 ),  OFFSETY , ( OFFSETX + 6.500 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.56 ), ( OFFSETY + 0.00 ), ( OFFSETX + 9.00
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.562 ),  OFFSETY , ( OFFSETX + 7.562 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 9.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 9.000 ),  OFFSETY , ( OFFSETX + 9.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME026  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME026ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME026ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.115210 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( BCONTINUE = 0 ) )
SET  _REMCELLNAME23  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  _HOLDREMCELLNAME23  =  _REMCELLNAME23
IF ( ( _REMCELLNAME23 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME23 , (( SIZE ("" )- _REMCELLNAME23 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME23  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME23 , (( SIZE ("" )-
 _REMCELLNAME23 )+ 1 ), "" )))) )
SET  _REMCELLNAME23  = ( _REMCELLNAME23 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME23  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME23 )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME23 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME23 , (( SIZE ("" )- _HOLDREMCELLNAME23 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME23  =  _HOLDREMCELLNAME23
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME027  ( NCALC ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME027ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ,  MAXHEIGHT ,  BCONTINUE ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME027ABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.229080 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF (  NOT ( I1MULTIFACILITYLOGICIND  ) )  RETURN ( 0.0 )
 
ENDIF
 
IF ( ( BCONTINUE = 0 ) )
SET  _REMORGANIZATIONTOTAL0  =  1
SET  _REMGRANDTOTALDEFIC95  =  1
SET  _REMCELLNAME102  =  1
ENDIF
 
SET  RPTSD -> M_FLAGS  =  293
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  3.688
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  _HOLDREMORGANIZATIONTOTAL0  =  _REMORGANIZATIONTOTAL0
IF ( ( _REMORGANIZATIONTOTAL0 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMORGANIZATIONTOTAL0 , (( SIZE ( NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_organizationTotal0" , "Grand Total For Facilities:" ),  CHAR ( 0 ))))-
 _REMORGANIZATIONTOTAL0 )+ 1 ),  NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_organizationTotal0" , "Grand Total For Facilities:" ),  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMORGANIZATIONTOTAL0  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMORGANIZATIONTOTAL0 , (( SIZE (
 NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_organizationTotal0" ,
"Grand Total For Facilities:" ),  CHAR ( 0 ))))- _REMORGANIZATIONTOTAL0 )+ 1 ),  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_organizationTotal0" , "Grand Total For Facilities:" )
,  CHAR ( 0 ))))))) )
SET  _REMORGANIZATIONTOTAL0  = ( _REMORGANIZATIONTOTAL0 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMORGANIZATIONTOTAL0  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMORGANIZATIONTOTAL0 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  325
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  _HOLDREMGRANDTOTALDEFIC95  =  _REMGRANDTOTALDEFIC95
IF ( ( _REMGRANDTOTALDEFIC95 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMGRANDTOTALDEFIC95 , (( SIZE ( NULLTERM ( BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))-
 _REMGRANDTOTALDEFIC95 )+ 1 ),  NULLTERM ( BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMGRANDTOTALDEFIC95  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMGRANDTOTALDEFIC95 , (( SIZE (
 NULLTERM ( BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))- _REMGRANDTOTALDEFIC95 )+ 1 ),  NULLTERM (
 BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))))) )
SET  _REMGRANDTOTALDEFIC95  = ( _REMGRANDTOTALDEFIC95 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMGRANDTOTALDEFIC95  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMGRANDTOTALDEFIC95 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  325
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 9.000 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  = (( OFFSETY + MAXHEIGHT )- RPTSD -> M_Y )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  _HOLDREMCELLNAME102  =  _REMCELLNAME102
IF ( ( _REMCELLNAME102 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _REMCELLNAME102 , (( SIZE ("" )- _REMCELLNAME102 )+ 1 ), "" )))
IF ( ( RPTSD -> M_HEIGHT >(( OFFSETY + SECTIONHEIGHT )- RPTSD -> M_Y )) )
SET  SECTIONHEIGHT  = (( RPTSD -> M_Y + _FDRAWHEIGHT )- OFFSETY )
ENDIF
 
IF ( ( RPTSD -> M_DRAWLENGTH = 0 ) )
SET  _REMCELLNAME102  =  0
ELSEIF ( ( RPTSD -> M_DRAWLENGTH < SIZE ( NULLTERM ( SUBSTRING ( _REMCELLNAME102 , (( SIZE ("" )-
 _REMCELLNAME102 )+ 1 ), "" )))) )
SET  _REMCELLNAME102  = ( _REMCELLNAME102 + RPTSD -> M_DRAWLENGTH )
ELSE
SET  _REMCELLNAME102  =  0
ENDIF
 
SET  GROWSUM  = ( GROWSUM + _REMCELLNAME102 )
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  292
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  3.688
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMORGANIZATIONTOTAL0 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMORGANIZATIONTOTAL0 , (( SIZE ( NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_organizationTotal0" , "Grand Total For Facilities:" ),  CHAR ( 0 ))))-
 _HOLDREMORGANIZATIONTOTAL0 )+ 1 ),  NULLTERM ( BUILD2 ( UAR_I18NGETMESSAGE ( _HI18NHANDLE ,
"Section_organizationTotal0" , "Grand Total For Facilities:" ),  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMORGANIZATIONTOTAL0  =  _HOLDREMORGANIZATIONTOTAL0
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 3.688 )
SET  RPTSD -> M_WIDTH  =  1.250
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName94" , "Total Deficiencies:" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  324
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 4.938 )
SET  RPTSD -> M_WIDTH  =  1.563
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMGRANDTOTALDEFIC95 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMGRANDTOTALDEFIC95 , (( SIZE ( NULLTERM ( BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))-
 _HOLDREMGRANDTOTALDEFIC95 )+ 1 ),  NULLTERM ( BUILD2 ( TOTAL_DEF_CNT ,  CHAR ( 0 ))))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMGRANDTOTALDEFIC95  =  _HOLDREMGRANDTOTALDEFIC95
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  288
SET  RPTSD -> M_PADDINGWIDTH  =  0.200
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 6.500 )
SET  RPTSD -> M_WIDTH  =  1.062
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName101" , "Total Charts:" ),  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  320
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 7.562 )
SET  RPTSD -> M_WIDTH  =  1.438
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES100 )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( BCONTINUE = 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 ( TOTAL_CHART_CNT
,  CHAR ( 0 ))))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  RPTSD -> M_FLAGS  =  324
SET  RPTSD -> M_PADDING  =  RPT_SDLEFTBORDER
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 9.000 )
SET  RPTSD -> M_WIDTH  =  1.000
SET  RPTSD -> M_HEIGHT  =  SECTIONHEIGHT
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
SET  OLDBACKCOLOR  =  UAR_RPTSETBACKCOLOR ( _HREPORT ,  UAR_RPTENCODECOLOR ( 255 ,  255 ,  128 ))
IF ( ( NCALC = RPT_RENDER ) )
IF ( ( _HOLDREMCELLNAME102 > 0 ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( SUBSTRING (
 _HOLDREMCELLNAME102 , (( SIZE ("" )- _HOLDREMCELLNAME102 )+ 1 ), "" )))
ELSE
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  BUILD2 ("" ,  CHAR ( 0 )))
ENDIF
 
ELSE
SET  _REMCELLNAME102  =  _HOLDREMCELLNAME102
ENDIF
 
SET  OLDBACKCOLOR  =  UAR_RPTRESETBACKCOLOR ( _HREPORT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX + 3.69
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.69 ), ( OFFSETY + 0.00 ), ( OFFSETX + 4.94
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 3.688 ),  OFFSETY , ( OFFSETX + 3.688 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.94 ), ( OFFSETY + 0.00 ), ( OFFSETX + 6.50
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 4.938 ),  OFFSETY , ( OFFSETX + 4.938 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.50 ), ( OFFSETY + 0.00 ), ( OFFSETX + 7.56
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 6.500 ),  OFFSETY , ( OFFSETX + 6.500 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.56 ), ( OFFSETY + 0.00 ), ( OFFSETX + 9.00
), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 7.562 ),  OFFSETY , ( OFFSETX + 7.562 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 9.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 9.000 ),  OFFSETY , ( OFFSETX + 9.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME028  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME028ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME028ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.116587 ), PRIVATE
IF (  NOT ( NOT ( I1MULTIFACILITYLOGICIND  ) ) )  RETURN ( 0.0 )
 
ENDIF
 
SET  RPTSD -> M_FLAGS  =  256
SET  RPTSD -> M_BORDERS  =  RPT_SDTOPBORDER
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.117
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES11B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN15S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD , "" )
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME029  ( NCALC  )
 
DECLARE  A1  =  F8  WITH  NOCONSTANT ( 0.0 ), PRIVATE
SET  A1  =  FIELDNAME029ABS ( NCALC ,  _XOFFSET ,  _YOFFSET ) RETURN ( A1 )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME029ABS  ( NCALC ,  OFFSETX ,  OFFSETY  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 0.265838 ), PRIVATE
SET  RPTSD -> M_FLAGS  =  272
SET  RPTSD -> M_BORDERS  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDING  =  RPT_SDNOBORDERS
SET  RPTSD -> M_PADDINGWIDTH  =  0.000
SET  RPTSD -> M_LINESPACING  =  RPT_SINGLE
SET  RPTSD -> M_ROTATIONANGLE  =  0
SET  RPTSD -> M_Y  = ( OFFSETY + 0.000 )
SET  RPTSD -> M_X  = ( OFFSETX + 0.000 )
SET  RPTSD -> M_WIDTH  =  10.000
SET  RPTSD -> M_HEIGHT  =  0.266
SET  _OLDFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _TIMES10B0 )
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN20S0C0 )
IF ( ( NCALC = RPT_RENDER ) )
SET  _FDRAWHEIGHT  =  UAR_RPTSTRINGDRAW ( _HREPORT ,  RPTSD ,  NULLTERM ( BUILD2 (
 UAR_I18NGETMESSAGE ( _HI18NHANDLE , "Section_CellName44" , "**END OF REPORT**" ),  CHAR ( 0 ))))
ENDIF
 
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
IF ( ( NCALC = 0 ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
SET  _DUMMYFONT  =  UAR_RPTSETFONT ( _HREPORT ,  _OLDFONT )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.00 ), ( OFFSETY + 0.00 ), ( OFFSETX +
 10.00 ), ( OFFSETY + 0.00 ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  OFFSETY , ( OFFSETX + 0.000 ), (
 OFFSETY + SECTIONHEIGHT ))
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 10.000 ),  OFFSETY , ( OFFSETX + 10.000 ), (
 OFFSETY + SECTIONHEIGHT ))
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   FIELDNAME0HTML  ( NDUMMY  )
 
DECLARE  RPT_PAGEOFPAGE  =  VC  WITH  NOCONSTANT ("Page 1 of 1" ), PROTECT
SELECT
 PATIENT_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ID ,
 PATIENT_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME ),
 ALPHA_PATIENT_NAME = SUBSTRING ( 1 ,  100 ,  CNVTUPPER ( DATA -> QUAL [D.SEQ]-> PATIENT_NAME )),
 PATIENT_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_TYPE_CD ,
 ORGANIZATION_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORGANIZATION_NAME ),
 ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ORGANIZATION_ID ,
 MRN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> MRN ),
 FIN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> FIN ),
 ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ID ,
 PHYSICIAN_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME ),
 PHYSICIAN_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ID ,
 LOCATION = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> LOCATION ),
 DISCH_DT_TM = DATA -> QUAL [D.SEQ]-> DISCH_DT_TM ,
 SORT_DISCH_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DISCH_DT_TM != NULL ) )  DATA -> QUAL [D.SEQ]-> DISCH_DT_TM
ELSE   CNVTDATETIME ("31-DEC-2100 00:00:00.00" )
ENDIF
,
 CHART_AGE = DATA -> QUAL [D.SEQ]-> CHART_AGE ,
 DEFICIENCY_NAME = SUBSTRING ( 1 ,  100 ,  BUILD ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]->
 DEFICIENCY_NAME )),
 DEFICIENCY_AGE = DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE ,
 DEFICIENCY_STATUS = SUBSTRING ( 1 ,  30 ,  BUILD ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]->
 STATUS )),
 PHYSICIAN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_IND ,
 PHYSICIAN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_CD ,
 PHYSICIAN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_DT_TM ,
 PHYSICIAN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_PRSNL_ID ,
 PHYSICIAN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_BEG_EFFECTIVE_DT_TM ,
 PHYSICIAN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CONTRIBUTOR_SYSTEM_CD ,
 PHYSICIAN_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CREATE_DT_TM ,
 PHYSICIAN_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CREATE_PRSNL_ID ,
 PHYSICIAN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_CD ,
 PHYSICIAN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_DT_TM ,
 PHYSICIAN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_PRSNL_ID ,
 PHYSICIAN_EMAIL = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_EMAIL ),
 PHYSICIAN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_END_EFFECTIVE_DT_TM ,
 PHYSICIAN_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_FT_ENTITY_ID ,
 PHYSICIAN_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_FT_ENTITY_NAME ),
 PHYSICIAN_NAME_FIRST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_FIRST ),
 PHYSICIAN_NAME_FIRST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_FIRST_KEY
),
 PHYSICIAN_NAME_FIRST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_FIRST_KEY_NLS ),
 PHYSICIAN_NAME_FULL_FORMATTED = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_FULL_FORMATTED ),
 PHYSICIAN_NAME_LAST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_LAST ),
 PHYSICIAN_NAME_LAST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_LAST_KEY ),
 PHYSICIAN_NAME_LAST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_LAST_KEY_NLS ),
 PHYSICIAN_PASSWORD = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_PASSWORD ),
 PHYSICIAN_PERSON_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PERSON_ID ,
 PHYSICIAN_PHYSICIAN_IND = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PHYSICIAN_IND ,
 PHYSICIAN_PHYSICIAN_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PHYSICIAN_STATUS_CD ,
 PHYSICIAN_POSITION_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_POSITION_CD ,
 PHYSICIAN_PRIM_ASSIGN_LOC_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PRIM_ASSIGN_LOC_CD ,
 PHYSICIAN_PRSNL_TYPE_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PRSNL_TYPE_CD ,
 PHYSICIAN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_DT_TM ,
 PHYSICIAN_UPDT_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_ID ,
 PHYSICIAN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_TASK ,
 PHYSICIAN_USERNAME = SUBSTRING ( 1 ,  50 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_USERNAME ),
 PATIENT_ABS_BIRTH_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ABS_BIRTH_DT_TM ,
 PATIENT_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_IND ,
 PATIENT_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_CD ,
 PATIENT_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_DT_TM ,
 PATIENT_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_PRSNL_ID ,
 PATIENT_ARCHIVE_ENV_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_ENV_ID ,
 PATIENT_ARCHIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_STATUS_CD ,
 PATIENT_ARCHIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_STATUS_DT_TM ,
 PATIENT_AUTOPSY_CD = DATA -> QUAL [D.SEQ]-> PATIENT_AUTOPSY_CD ,
 PATIENT_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_BEG_EFFECTIVE_DT_TM ,
 PATIENT_BIRTH_DT_CD = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_DT_CD ,
 PATIENT_BIRTH_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_DT_TM ,
 PATIENT_BIRTH_PREC_FLAG = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_PREC_FLAG ,
 PATIENT_BIRTH_TZ = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_TZ ,
 PATIENT_CAUSE_OF_DEATH = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_CAUSE_OF_DEATH ),
 PATIENT_CAUSE_OF_DEATH_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CAUSE_OF_DEATH_CD ,
 PATIENT_CITIZENSHIP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CITIZENSHIP_CD ,
 PATIENT_CONCEPTION_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_CONCEPTION_DT_TM ,
 PATIENT_CONFID_LEVEL_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CONFID_LEVEL_CD ,
 PATIENT_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CONTRIBUTOR_SYSTEM_CD ,
 PATIENT_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_CREATE_DT_TM ,
 PATIENT_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_CREATE_PRSNL_ID ,
 PATIENT_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_CD ,
 PATIENT_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_DT_TM ,
 PATIENT_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_PRSNL_ID ,
 PATIENT_DECEASED_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_CD ,
 PATIENT_DECEASED_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_DT_TM ,
 PATIENT_DECEASED_SOURCE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_SOURCE_CD ,
 PATIENT_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_END_EFFECTIVE_DT_TM ,
 PATIENT_ETHNIC_GRP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ETHNIC_GRP_CD ,
 PATIENT_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> PATIENT_FT_ENTITY_ID ,
 PATIENT_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> PATIENT_FT_ENTITY_NAME ),
 PATIENT_LANGUAGE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_LANGUAGE_CD ,
 PATIENT_LANGUAGE_DIALECT_CD = DATA -> QUAL [D.SEQ]-> PATIENT_LANGUAGE_DIALECT_CD ,
 PATIENT_LAST_ACCESSED_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_LAST_ACCESSED_DT_TM ,
 PATIENT_LAST_ENCNTR_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_LAST_ENCNTR_DT_TM ,
 PATIENT_MARITAL_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MARITAL_TYPE_CD ,
 PATIENT_MILITARY_BASE_LOCATION = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_MILITARY_BASE_LOCATION ),
 PATIENT_MILITARY_RANK_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MILITARY_RANK_CD ,
 PATIENT_MILITARY_SERVICE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MILITARY_SERVICE_CD ,
 PATIENT_MOTHER_MAIDEN_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_MOTHER_MAIDEN_NAME ),
 PATIENT_NAME_FIRST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST ),
 PATIENT_NAME_FIRST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST_KEY ),
 PATIENT_NAME_FIRST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FIRST_KEY_NLS ),
 PATIENT_NAME_FIRST_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FIRST_PHONETIC ),
 PATIENT_NAME_FIRST_SYNONYM_ID = DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST_SYNONYM_ID ,
 PATIENT_NAME_FULL_FORMATTED = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FULL_FORMATTED ),
 PATIENT_NAME_LAST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_LAST ),
 PATIENT_NAME_LAST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_LAST_KEY ),
 PATIENT_NAME_LAST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_LAST_KEY_NLS ),
 PATIENT_NAME_LAST_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_LAST_PHONETIC ),
 PATIENT_NAME_MIDDLE = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_MIDDLE ),
 PATIENT_NAME_MIDDLE_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_MIDDLE_KEY ),
 PATIENT_NAME_MIDDLE_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_MIDDLE_KEY_NLS ),
 PATIENT_NAME_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_PHONETIC ),
 PATIENT_NATIONALITY_CD = DATA -> QUAL [D.SEQ]-> PATIENT_NATIONALITY_CD ,
 PATIENT_NEXT_RESTORE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_NEXT_RESTORE_DT_TM ,
 PATIENT_PERSON_ID = DATA -> QUAL [D.SEQ]-> PATIENT_PERSON_ID ,
 PATIENT_PERSON_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_PERSON_TYPE_CD ,
 PATIENT_RACE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_RACE_CD ,
 PATIENT_RELIGION_CD = DATA -> QUAL [D.SEQ]-> PATIENT_RELIGION_CD ,
 PATIENT_SEX_AGE_CHANGE_IND = DATA -> QUAL [D.SEQ]-> PATIENT_SEX_AGE_CHANGE_IND ,
 PATIENT_SEX_CD = DATA -> QUAL [D.SEQ]-> PATIENT_SEX_CD ,
 PATIENT_SPECIES_CD = DATA -> QUAL [D.SEQ]-> PATIENT_SPECIES_CD ,
 PATIENT_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_DT_TM ,
 PATIENT_UPDT_ID = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_ID ,
 PATIENT_UPDT_TASK = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_TASK ,
 PATIENT_VET_MILITARY_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_VET_MILITARY_STATUS_CD ,
 PATIENT_VIP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_VIP_CD ,
 ENCNTR_ACCOMMODATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_CD ,
 ENCNTR_ACCOMMODATION_REASON_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_REASON_CD ,
 ENCNTR_ACCOMMODATION_REQUEST_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_REQUEST_CD ,
 ENCNTR_ACCOMP_BY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMP_BY_CD ,
 ENCNTR_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_IND ,
 ENCNTR_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_CD ,
 ENCNTR_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_DT_TM ,
 ENCNTR_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_ADMIT_MODE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_MODE_CD ,
 ENCNTR_ADMIT_SRC_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_SRC_CD ,
 ENCNTR_ADMIT_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_TYPE_CD ,
 ENCNTR_ADMIT_WITH_MEDICATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_WITH_MEDICATION_CD ,
 ENCNTR_ALC_DECOMP_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ALC_DECOMP_DT_TM ,
 ENCNTR_ALC_REASON_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ALC_REASON_CD ,
 ENCNTR_ALT_LVL_CARE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ALT_LVL_CARE_CD ,
 ENCNTR_ALT_LVL_CARE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ALT_LVL_CARE_DT_TM ,
 ENCNTR_AMBULATORY_COND_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_AMBULATORY_COND_CD ,
 ENCNTR_ARCHIVE_DT_TM_ACT = DATA -> QUAL [D.SEQ]-> ENCNTR_ARCHIVE_DT_TM_ACT ,
 ENCNTR_ARCHIVE_DT_TM_EST = DATA -> QUAL [D.SEQ]-> ENCNTR_ARCHIVE_DT_TM_EST ,
 ENCNTR_ARRIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ARRIVE_DT_TM ,
 ENCNTR_ASSIGN_TO_LOC_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ASSIGN_TO_LOC_DT_TM ,
 ENCNTR_BBD_PROCEDURE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_BBD_PROCEDURE_CD ,
 ENCNTR_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_CHART_COMPLETE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_CHART_COMPLETE_DT_TM ,
 ENCNTR_CONFID_LEVEL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONFID_LEVEL_CD ,
 ENCNTR_CONTRACT_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONTRACT_STATUS_CD ,
 ENCNTR_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_COURTESY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_COURTESY_CD ,
 ENCNTR_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_CREATE_DT_TM ,
 ENCNTR_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_CREATE_PRSNL_ID ,
 ENCNTR_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_CD ,
 ENCNTR_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_DT_TM ,
 ENCNTR_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_PRSNL_ID ,
 ENCNTR_DEPART_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DEPART_DT_TM ,
 ENCNTR_DIET_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DIET_TYPE_CD ,
 ENCNTR_DISCH_DISPOSITION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_DISPOSITION_CD ,
 ENCNTR_DISCH_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_DT_TM ,
 ENCNTR_DISCH_TO_LOCTN_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_TO_LOCTN_CD ,
 ENCNTR_DOC_RCVD_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DOC_RCVD_DT_TM ,
 ENCNTR_ENCNTR_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_CLASS_CD ,
 ENCNTR_ENCNTR_COMPLETE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_COMPLETE_DT_TM ,
 ENCNTR_ENCNTR_FINANCIAL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_FINANCIAL_ID ,
 ENCNTR_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_ID ,
 ENCNTR_ENCNTR_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_STATUS_CD ,
 ENCNTR_ENCNTR_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_TYPE_CD ,
 ENCNTR_ENCNTR_TYPE_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_TYPE_CLASS_CD ,
 ENCNTR_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_END_EFFECTIVE_DT_TM ,
 ENCNTR_EST_ARRIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_ARRIVE_DT_TM ,
 ENCNTR_EST_DEPART_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_DEPART_DT_TM ,
 ENCNTR_EST_LENGTH_OF_STAY = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_LENGTH_OF_STAY ,
 ENCNTR_FINANCIAL_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FINANCIAL_CLASS_CD ,
 ENCNTR_GUARANTOR_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_GUARANTOR_TYPE_CD ,
 ENCNTR_INFO_GIVEN_BY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_INFO_GIVEN_BY ),
 ENCNTR_INPATIENT_ADMIT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_INPATIENT_ADMIT_DT_TM ,
 ENCNTR_ISOLATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ISOLATION_CD ,
 ENCNTR_LOCATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOCATION_CD ,
 ENCNTR_LOC_BED_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_BED_CD ,
 ENCNTR_LOC_BUILDING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_BUILDING_CD ,
 ENCNTR_LOC_FACILITY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_FACILITY_CD ,
 ENCNTR_LOC_NURSE_UNIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_NURSE_UNIT_CD ,
 ENCNTR_LOC_ROOM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_ROOM_CD ,
 ENCNTR_LOC_TEMP_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_TEMP_CD ,
 ENCNTR_MED_SERVICE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MED_SERVICE_CD ,
 ENCNTR_MENTAL_CATEGORY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MENTAL_CATEGORY_CD ,
 ENCNTR_MENTAL_HEALTH_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MENTAL_HEALTH_DT_TM ,
 ENCNTR_ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ORGANIZATION_ID ,
 ENCNTR_PARENT_RET_CRITERIA_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PARENT_RET_CRITERIA_ID ,
 ENCNTR_PATIENT_CLASSIFICATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PATIENT_CLASSIFICATION_CD ,
 ENCNTR_PA_CURRENT_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PA_CURRENT_STATUS_CD ,
 ENCNTR_PA_CURRENT_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_PA_CURRENT_STATUS_DT_TM ,
 ENCNTR_PERSON_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PERSON_ID ,
 ENCNTR_PLACEMENT_AUTH_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PLACEMENT_AUTH_PRSNL_ID ,
 ENCNTR_PREADMIT_TESTING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PREADMIT_TESTING_CD ,
 ENCNTR_PRE_REG_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_PRE_REG_DT_TM ,
 ENCNTR_PRE_REG_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PRE_REG_PRSNL_ID ,
 ENCNTR_PROGRAM_SERVICE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PROGRAM_SERVICE_CD ,
 ENCNTR_PSYCHIATRIC_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PSYCHIATRIC_STATUS_CD ,
 ENCNTR_PURGE_DT_TM_ACT = DATA -> QUAL [D.SEQ]-> ENCNTR_PURGE_DT_TM_ACT ,
 ENCNTR_PURGE_DT_TM_EST = DATA -> QUAL [D.SEQ]-> ENCNTR_PURGE_DT_TM_EST ,
 ENCNTR_READMIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_READMIT_CD ,
 ENCNTR_REASON_FOR_VISIT = SUBSTRING ( 1 ,  255 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_REASON_FOR_VISIT ),
 ENCNTR_REFERRAL_RCVD_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_REFERRAL_RCVD_DT_TM ,
 ENCNTR_REFERRING_COMMENT = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_REFERRING_COMMENT
),
 ENCNTR_REFER_FACILITY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_REFER_FACILITY_CD ,
 ENCNTR_REGION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_REGION_CD ,
 ENCNTR_REG_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_REG_DT_TM ,
 ENCNTR_REG_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_REG_PRSNL_ID ,
 ENCNTR_RESULT_ACCUMULATION_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_RESULT_ACCUMULATION_DT_TM ,
 ENCNTR_SAFEKEEPING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SAFEKEEPING_CD ,
 ENCNTR_SECURITY_ACCESS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SECURITY_ACCESS_CD ,
 ENCNTR_SERVICE_CATEGORY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SERVICE_CATEGORY_CD ,
 ENCNTR_SITTER_REQUIRED_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SITTER_REQUIRED_CD ,
 ENCNTR_SPECIALTY_UNIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SPECIALTY_UNIT_CD ,
 ENCNTR_TRAUMA_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_TRAUMA_CD ,
 ENCNTR_TRAUMA_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_TRAUMA_DT_TM ,
 ENCNTR_TRIAGE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_TRIAGE_CD ,
 ENCNTR_TRIAGE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_TRIAGE_DT_TM ,
 ENCNTR_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_DT_TM ,
 ENCNTR_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_ID ,
 ENCNTR_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_TASK ,
 ENCNTR_VALUABLES_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VALUABLES_CD ,
 ENCNTR_VIP_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VIP_CD ,
 ENCNTR_VISITOR_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VISITOR_STATUS_CD ,
 ENCNTR_ZERO_BALANCE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ZERO_BALANCE_DT_TM ,
 ENCNTR_MRN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_IND ,
 ENCNTR_MRN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_CD ,
 ENCNTR_MRN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_DT_TM ,
 ENCNTR_MRN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_MRN_ALIAS = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ALIAS ),
 ENCNTR_MRN_ALIAS_POOL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ALIAS_POOL_CD ,
 ENCNTR_MRN_ASSIGN_AUTHORITY_SYS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ASSIGN_AUTHORITY_SYS_CD ,
 ENCNTR_MRN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_MRN_CHECK_DIGIT = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CHECK_DIGIT ,
 ENCNTR_MRN_CHECK_DIGIT_METHOD_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CHECK_DIGIT_METHOD_CD ,
 ENCNTR_MRN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_MRN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_CD ,
 ENCNTR_MRN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_DT_TM ,
 ENCNTR_MRN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_PRSNL_ID ,
 ENCNTR_MRN_ENCNTR_ALIAS_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ALIAS_ID ,
 ENCNTR_MRN_ENCNTR_ALIAS_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ALIAS_TYPE_CD ,
 ENCNTR_MRN_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ID ,
 ENCNTR_MRN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_END_EFFECTIVE_DT_TM ,
 ENCNTR_MRN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_DT_TM ,
 ENCNTR_MRN_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_ID ,
 ENCNTR_MRN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_TASK ,
 ENCNTR_FIN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_IND ,
 ENCNTR_FIN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_CD ,
 ENCNTR_FIN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_DT_TM ,
 ENCNTR_FIN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_FIN_ALIAS = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ALIAS ),
 ENCNTR_FIN_ALIAS_POOL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ALIAS_POOL_CD ,
 ENCNTR_FIN_ASSIGN_AUTHORITY_SYS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ASSIGN_AUTHORITY_SYS_CD ,
 ENCNTR_FIN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_FIN_CHECK_DIGIT = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CHECK_DIGIT ,
 ENCNTR_FIN_CHECK_DIGIT_METHOD_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CHECK_DIGIT_METHOD_CD ,
 ENCNTR_FIN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_FIN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_CD ,
 ENCNTR_FIN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_DT_TM ,
 ENCNTR_FIN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_PRSNL_ID ,
 ENCNTR_FIN_ENCNTR_ALIAS_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ALIAS_ID ,
 ENCNTR_FIN_ENCNTR_ALIAS_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ALIAS_TYPE_CD ,
 ENCNTR_FIN_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ID ,
 ENCNTR_FIN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_END_EFFECTIVE_DT_TM ,
 ENCNTR_FIN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_DT_TM ,
 ENCNTR_FIN_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_ID ,
 ENCNTR_FIN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_TASK ,
 ORG_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_IND ,
 ORG_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_CD ,
 ORG_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_DT_TM ,
 ORG_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_PRSNL_ID ,
 ORG_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_BEG_EFFECTIVE_DT_TM ,
 ORG_CONTRIBUTOR_SOURCE_CD = DATA -> QUAL [D.SEQ]-> ORG_CONTRIBUTOR_SOURCE_CD ,
 ORG_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ORG_CONTRIBUTOR_SYSTEM_CD ,
 ORG_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_CD ,
 ORG_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_DT_TM ,
 ORG_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_PRSNL_ID ,
 ORG_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_END_EFFECTIVE_DT_TM ,
 ORG_FEDERAL_TAX_ID_NBR = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_FEDERAL_TAX_ID_NBR ),
 ORG_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> ORG_FT_ENTITY_ID ,
 ORG_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> ORG_FT_ENTITY_NAME ),
 ORG_ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ORG_ORGANIZATION_ID ,
 ORG_ORG_CLASS_CD = DATA -> QUAL [D.SEQ]-> ORG_ORG_CLASS_CD ,
 ORG_ORG_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME ),
 ORG_ORG_NAME_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME_KEY ),
 ORG_ORG_NAME_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME_KEY_NLS ),
 ORG_ORG_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_ORG_STATUS_CD ,
 ORG_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_UPDT_DT_TM ,
 ORG_UPDT_ID = DATA -> QUAL [D.SEQ]-> ORG_UPDT_ID ,
 ORG_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ORG_UPDT_TASK ,
 HIM_VISIT_ABSTRACT_COMPLETE_IND = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ABSTRACT_COMPLETE_IND ,
 HIM_VISIT_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_IND ,
 HIM_VISIT_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_CD ,
 HIM_VISIT_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_DT_TM ,
 HIM_VISIT_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_PRSNL_ID ,
 HIM_VISIT_ALLOCATION_DT_FLAG = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_FLAG ,
 HIM_VISIT_ALLOCATION_DT_MODIFIER = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_MODIFIER ,
 HIM_VISIT_ALLOCATION_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_TM ,
 HIM_VISIT_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_BEG_EFFECTIVE_DT_TM ,
 HIM_VISIT_CHART_PROCESS_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_PROCESS_ID ,
 HIM_VISIT_CHART_STATUS_CD = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_STATUS_CD ,
 HIM_VISIT_CHART_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_STATUS_DT_TM ,
 HIM_VISIT_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ENCNTR_ID ,
 HIM_VISIT_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_END_EFFECTIVE_DT_TM ,
 HIM_VISIT_PERSON_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_PERSON_ID ,
 HIM_VISIT_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_DT_TM ,
 HIM_VISIT_UPDT_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_ID ,
 HIM_VISIT_UPDT_TASK = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_TASK ,
 ORDER_NOTIF_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_CAUSED_BY_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_CAUSED_BY_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_FROM_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_FROM_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_COMMENT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_NOTIF_NOTIFICATION_COMMENT )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_STATUS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_STATUS_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_TZ )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_ORDER_NOTIFICATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ORDER_NOTIFICATION_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_PARENT_ORDER_NOTIFICATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_NOTIF_PARENT_ORDER_NOTIFICATION_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_STATUS_CHANGE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_STATUS_CHANGE_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_STATUS_CHANGE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_STATUS_CHANGE_TZ )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_TO_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_TO_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_DEPT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_DEPT_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_DIGITAL_SIGNATURE_IDENT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 64 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_REVIEW_DIGITAL_SIGNATURE_IDENT )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_LOCATION_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_LOCATION_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROVIDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROVIDER_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROXY_PERSONNEL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROXY_PERSONNEL_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROXY_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROXY_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REJECT_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REJECT_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEWED_STATUS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEWED_STATUS_FLAG )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_PERSONNEL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_PERSONNEL_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_REQD_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_REQD_IND )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_TZ )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_IND )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVITY_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVITY_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_AD_HOC_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_AD_HOC_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_CATALOG_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CATALOG_CD )
ELSE  ""
ENDIF
,
 ORDERS_CATALOG_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CATALOG_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_CKI =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CKI )
ELSE  ""
ENDIF
,
 ORDERS_CLINICAL_DISPLAY_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_CLINICAL_DISPLAY_LINE )
ELSE  ""
ENDIF
,
 ORDERS_COMMENT_TYPE_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_COMMENT_TYPE_MASK )
ELSE  ""
ENDIF
,
 ORDERS_CONSTANT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CONSTANT_IND )
ELSE  ""
ENDIF
,
 ORDERS_CONTRIBUTOR_SYSTEM_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CONTRIBUTOR_SYSTEM_CD )
ELSE  ""
ENDIF
,
 ORDERS_CS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CS_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_CS_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CS_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_CURRENT_START_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CURRENT_START_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_CURRENT_START_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CURRENT_START_TZ )
ELSE  ""
ENDIF
,
 ORDERS_DCP_CLIN_CAT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DCP_CLIN_CAT_CD )
ELSE  ""
ENDIF
,
 ORDERS_DEPT_MISC_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DEPT_MISC_LINE )
ELSE  ""
ENDIF
,
 ORDERS_DEPT_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DEPT_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_IND )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_ENCNTR_FINANCIAL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ENCNTR_FINANCIAL_ID )
ELSE  ""
ENDIF
,
 ORDERS_ENCNTR_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ENCNTR_ID )
ELSE  ""
ENDIF
,
 ORDERS_ESO_NEW_ORDER_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ESO_NEW_ORDER_IND )
ELSE  ""
ENDIF
,
 ORDERS_FREQUENCY_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_FREQUENCY_ID )
ELSE  ""
ENDIF
,
 ORDERS_FREQ_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_FREQ_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_GROUP_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_GROUP_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_GROUP_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_GROUP_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_HIDE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_HIDE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_HNA_ORDER_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_HNA_ORDER_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_INCOMPLETE_ORDER_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INCOMPLETE_ORDER_IND )
ELSE  ""
ENDIF
,
 ORDERS_INGREDIENT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INGREDIENT_IND )
ELSE  ""
ENDIF
,
 ORDERS_INTEREST_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INTEREST_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_INTERVAL_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INTERVAL_IND )
ELSE  ""
ENDIF
,
 ORDERS_IV_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_IV_IND )
ELSE  ""
ENDIF
,
 ORDERS_LAST_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_CORE_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_CORE_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_INGRED_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_INGRED_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_UPDATE_PROVIDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_UPDATE_PROVIDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_LINK_NBR =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_NBR )
ELSE  ""
ENDIF
,
 ORDERS_LINK_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_LINK_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_LINK_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_MED_ORDER_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_MED_ORDER_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_MODIFIED_START_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_MODIFIED_START_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_NEED_DOCTOR_COSIGN_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_DOCTOR_COSIGN_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_NURSE_REVIEW_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_NURSE_REVIEW_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_PHYSICIAN_VALIDATE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_PHYSICIAN_VALIDATE_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_RX_VERIFY_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_RX_VERIFY_IND )
ELSE  ""
ENDIF
,
 ORDERS_OE_FORMAT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_OE_FORMAT_ID )
ELSE  ""
ENDIF
,
 ORDERS_ORDERABLE_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDERABLE_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_ORDERED_AS_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_ORDERED_AS_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_COMMENT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_COMMENT_IND )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_DETAIL_DISPLAY_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_ORDER_DETAIL_DISPLAY_LINE )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_CONVS_SEQ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_CONVS_SEQ )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_TZ )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORD_AS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORD_AS_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_OVERRIDE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_OVERRIDE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_PATHWAY_CATALOG_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PATHWAY_CATALOG_ID )
ELSE  ""
ENDIF
,
 ORDERS_PERSON_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PERSON_ID )
ELSE  ""
ENDIF
,
 ORDERS_PRN_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PRN_IND )
ELSE  ""
ENDIF
,
 ORDERS_PRODUCT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PRODUCT_ID )
ELSE  ""
ENDIF
,
 ORDERS_PROJECTED_STOP_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PROJECTED_STOP_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_PROJECTED_STOP_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PROJECTED_STOP_TZ )
ELSE  ""
ENDIF
,
 ORDERS_REF_TEXT_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_REF_TEXT_MASK )
ELSE  ""
ENDIF
,
 ORDERS_REMAINING_DOSE_CNT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_REMAINING_DOSE_CNT )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_IND )
ELSE  ""
ENDIF
,
 ORDERS_RX_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RX_MASK )
ELSE  ""
ENDIF
,
 ORDERS_SCH_STATE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SCH_STATE_CD )
ELSE  ""
ENDIF
,
 ORDERS_SOFT_STOP_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SOFT_STOP_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_SOFT_STOP_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SOFT_STOP_TZ )
ELSE  ""
ENDIF
,
 ORDERS_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDERS_STOP_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STOP_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_IND )
ELSE  ""
ENDIF
,
 ORDERS_SYNONYM_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SYNONYM_ID )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_CORE_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_CORE_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDERS_VALID_DOSE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_VALID_DOSE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTION_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTION_STATUS_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTION_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTION_TYPE_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_IND )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_ALLOCATION_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ALLOCATION_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_BEG_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_BEG_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_COMPLETED_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_COMPLETED_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ENCNTR_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ENCNTR_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_END_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_END_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_EVENT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_EVENT_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_EVENT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_EVENT_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_HIM_EVENT_ALLOCATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_HIM_EVENT_ALLOCATION_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_PRSNL_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_REQUEST_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_REQUEST_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_TASK )
ELSE  ""
ENDIF
 
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( SIZE ( DATA -> QUAL ,  5 ))),
( DUMMYT  DDEFIC  WITH  SEQ = VALUE ( DATA -> MAX_DEFIC_QUAL_COUNT ))
 PLAN ( D
WHERE (D.SEQ> 0 ))
 AND ( DDEFIC
WHERE (DDEFIC.SEQ<= SIZE ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL ,  5 )))
 
ORDER BY  ORGANIZATION_NAME ,
 ORGANIZATION_ID ,
 PHYSICIAN_NAME ,
 PHYSICIAN_ID ,
 SORT_DISCH_DT_TM ,
 ALPHA_PATIENT_NAME ,
 ENCNTR_ID ,
 DEFICIENCY_NAME ,
 DEFICIENCY_STATUS
 
HEAD REPORT
 _VCWRITELN = BUILD2 ("<STYLE>" ,
"table {border-collapse: collapse; empty-cells: show;  border: 0.000in none #000000;}" ,
".FieldName000 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font: italic bold 10pt Times;" , " " , " color: #ff0000;" , " background: #ffffff;" ,
" text-align: left;" , " vertical-align: bottom;}" ,
".FieldName010 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid solid none solid;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font: italic bold 12pt Times;" , " " , " color: #0000a0;" , " " , " text-align: center;" ,
" vertical-align: bottom;}" , ".FieldName020 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none solid solid solid;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font: italic bold 12pt Times;" , " " , " color: #0000a0;" , " " , " text-align: center;" ,
" vertical-align: top;}" , ".FieldName030 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: top;}" , ".FieldName040 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName051 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName072 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName090 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: right;" ,
" vertical-align: top;}" , ".FieldName0100 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0101 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: right;" ,
" vertical-align: bottom;}" , ".FieldName0103 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0104 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0110 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none solid none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0111 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none solid none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0113 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none solid none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0120 { border-width: 0.015in; border-color: #000000;" ,
" border-style: none none solid none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0141 { border-width: 0.014in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: bottom;}" , ".FieldName0180 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0190 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0191 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0193 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0200 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #e8e8e8;" , " text-align: left;"
, " vertical-align: middle;}" , ".FieldName0201 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #e8e8e8;" , " text-align: left;"
, " vertical-align: middle;}" , ".FieldName0203 { border-width: 0.014in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #e8e8e8;" , " text-align: left;"
, " vertical-align: middle;}" , ".FieldName0210 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0220 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffffff;" ,
" text-align: center;" , " vertical-align: middle;}" ,
".FieldName0230 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0231 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0232 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0233 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0234 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: center;" , " vertical-align: middle;}" ,
".FieldName0240 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " background: #ffffff;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0242 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffffff;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0243 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffffff;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0244 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffffff;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0245 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffffff;" ,
" text-align: center;" , " vertical-align: middle;}" ,
".FieldName0250 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0252 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0255 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0256 { border-width: 0.025in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: center;" , " vertical-align: middle;}" ,
".FieldName0260 { border-width: 0.020in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0270 { border-width: 0.020in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0271 { border-width: 0.020in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0272 { border-width: 0.020in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0273 { border-width: 0.020in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.200in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" ,
" text-align: left;" , " vertical-align: middle;}" ,
".FieldName0274 { border-width: 0.020in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:   10pt Times;" , " " , " color: #000000;" , " background: #ffff80;" , " text-align: right;"
, " vertical-align: middle;}" , ".FieldName0280 { border-width: 0.015in; border-color: #000000;" ,
" border-style: solid none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 11pt Times;" , " " , " color: #000000;" , " " , " text-align: left;" ,
" vertical-align: middle;}" , ".FieldName0290 { border-width: 0.020in; border-color: #000000;" ,
" border-style: none none none none;" , " padding: 0.000in 0.000in 0.000in 0.000in;" ,
" font:  bold 10pt Times;" , " " , " color: #000000;" , " " , " text-align: center;" ,
" vertical-align: middle;}" , "</STYLE>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN ="<table width='100%'><caption><thead>" ,
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 
IF (  _BGENERATEHTML  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName000' colspan='20'>" ,  CCLBUILDHLINK ( HIM_PROGRAM_NAME ,  HIM_RENDER_PARAMS ,
 HIM_WINDOW , "Printer Friendly Version" ), "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE (
 _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName010' colspan='20'>" ,
"Deficiency Reporting by Physician" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName020' colspan='20'>" ,
"Detailed Report" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 ROWCOUNT = 0 ,
 BLANK ="" ,
 TOTAL_CHART_CNT = 0 ,
 TOTAL_DEF_CNT = 0 ,
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName030' colspan='20'>" ,
 BLANK , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName040' colspan='3'>" ,
 I18NDATEPRINTED , "</td>" , "<td width='86.250%'" , " class='FieldName030' colspan='17'>" ,
 VCTODAYDATETIME , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName040' colspan='3'>" ,
 I18NUSERPRINTED , "</td>" , "<td width='86.250%'" , " class='FieldName051' colspan='17'>" ,
 VCUSER , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName040' colspan='3'>" ,
 I18NPROMPTSFILTERS , "</td>" , "<td width='86.250%'" , " class='FieldName030' colspan='17'>" , ""
, "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 ALLFACILITIES = UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "ALLFACILITIES" , "All Facilities" ),
 FACILITYLIST = MAKELISTOFQUALITEMNAMES ( ORGANIZATIONS ,  ALLFACILITIES ),
 
IF (  I1MULTIFACILITYLOGICIND  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" ,
" class='FieldName030' colspan='3'>" , "" , "</td>" , "<td width='20.625%'" ,
" class='FieldName040' colspan='5'>" ,  I18NFACILITIES , "</td>" , "<td width='65.625%'" ,
" class='FieldName072' colspan='12'>" ,  FACILITYLIST , "</td>" , "</tr>" ),  _HTMLFILESTAT =
 UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 ALLPHYSICIANS = UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "ALLPHYSICIANS" , "All Physicians" ),
 PHYSICIANLIST = MAKELISTOFQUALITEMNAMES ( PHYSICIANS ,  ALLPHYSICIANS ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName030' colspan='3'>" , "" ,
"</td>" , "<td width='20.625%'" , " class='FieldName040' colspan='5'>" , "Physician(s):" , "</td>"
, "<td width='65.625%'" , " class='FieldName072' colspan='12'>" ,  PHYSICIANLIST , "</td>" ,
"</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 PAGEOFPAGE = RPT_PAGEOFPAGE ,
 
IF (  NEGATE ( _BGENERATEHTML ) )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName090' colspan='20'>" ,  PAGEOFPAGE , "</td>" , "</tr>" ),  _HTMLFILESTAT =
 UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 
IF ( ( ROWCOUNT > 1 ) )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" ,
" class='FieldName0100' colspan='3'>" , "Patient" , "</td>" , "<td width='10.000%'" ,
" class='FieldName0101' colspan='2'>" , "" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0101' colspan='2'>" , "" , "</td>" , "<td width='11.250%'" ,
" class='FieldName0103' colspan='3'>" , "Discharge" , "</td>" , "<td width='13.125%'" ,
" class='FieldName0104' colspan='3'>" , "" , "</td>" , "<td width='11.875%'" ,
" class='FieldName0104' colspan='2'>" , "" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0104' colspan='2'>" , "Deficiency" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0104' colspan='1'>" , "Chart" , "</td>" , "<td width='13.750%'" ,
" class='FieldName0100' colspan='2'>" , "" , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE (
 _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 
IF ( ( ROWCOUNT > 1 ) )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" ,
" class='FieldName0110' colspan='3'>" , "Name" , "</td>" , "<td width='10.000%'" ,
" class='FieldName0111' colspan='2'>" , "MRN" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0111' colspan='2'>" , "FIN" , "</td>" , "<td width='11.250%'" ,
" class='FieldName0113' colspan='3'>" , "Date" , "</td>" , "<td width='13.125%'" ,
" class='FieldName0111' colspan='3'>" , "Deficiency" , "</td>" , "<td width='11.875%'" ,
" class='FieldName0111' colspan='2'>" , "Status" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0111' colspan='2'>" , "Age" , "</td>" , "<td width='8.750%'" ,
" class='FieldName0111' colspan='1'>" , "Age" , "</td>" , "<td width='13.750%'" ,
" class='FieldName0110' colspan='2'>" , "Location" , "</td>" , "</tr>" ),  _HTMLFILESTAT =
 UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 _VCWRITELN ="</thead><tbody>" ,
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
HEAD  ORGANIZATION_NAME
 
IF (  0  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName0120' colspan='20'>" , "" , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE (
 _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
 
HEAD  ORGANIZATION_ID
 ORGANIZATION = ORGANIZATION_NAME , ORG_DEF_CNT = 0 , ORG_CHART_CNT = 0 , _VCWRITELN = BUILD2 (
"<tr>" , "<td width='100.000%'" , " class='FieldName0120' colspan='20'>" ,  ORGANIZATION , "</td>"
, "</tr>" ), _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),
 _HTMLFILEHANDLE )
HEAD  PHYSICIAN_NAME
 
IF (  0  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='12.500%'" ,
" class='FieldName0103' colspan='1'>" , "" , "</td>" , "<td width='87.500%'" ,
" class='FieldName0141' colspan='19'>" , "" , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE (
 _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
 
HEAD  PHYSICIAN_ID
 PHYSICIANNAME = PHYSICIAN_NAME , PHYS_DEF_CNT = 0 , PHYS_CHART_CNT = 0 , _VCWRITELN = BUILD2 (
"<tr>" , "<td width='12.500%'" , " class='FieldName0103' colspan='1'>" , "Physician:" , "</td>" ,
"<td width='87.500%'" , " class='FieldName0141' colspan='19'>" ,  PHYSICIANNAME , "</td>" ,
"</tr>" ), _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE
), _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName0100' colspan='3'>" ,
"Patient" , "</td>" , "<td width='10.000%'" , " class='FieldName0101' colspan='2'>" , "" , "</td>"
, "<td width='8.750%'" , " class='FieldName0101' colspan='2'>" , "" , "</td>" ,
"<td width='11.250%'" , " class='FieldName0103' colspan='3'>" , "Discharge" , "</td>" ,
"<td width='13.125%'" , " class='FieldName0104' colspan='3'>" , "" , "</td>" ,
"<td width='11.875%'" , " class='FieldName0104' colspan='2'>" , "" , "</td>" ,
"<td width='8.750%'" , " class='FieldName0104' colspan='2'>" , "Deficiency" , "</td>" ,
"<td width='8.750%'" , " class='FieldName0104' colspan='1'>" , "Chart" , "</td>" ,
"<td width='13.750%'" , " class='FieldName0100' colspan='2'>" , "" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='13.750%'" , " class='FieldName0110' colspan='3'>" ,
"Name" , "</td>" , "<td width='10.000%'" , " class='FieldName0111' colspan='2'>" , "MRN" , "</td>"
, "<td width='8.750%'" , " class='FieldName0111' colspan='2'>" , "FIN" , "</td>" ,
"<td width='11.250%'" , " class='FieldName0113' colspan='3'>" , "Date" , "</td>" ,
"<td width='13.125%'" , " class='FieldName0111' colspan='3'>" , "Deficiency" , "</td>" ,
"<td width='11.875%'" , " class='FieldName0111' colspan='2'>" , "Status" , "</td>" ,
"<td width='8.750%'" , " class='FieldName0111' colspan='2'>" , "Age" , "</td>" ,
"<td width='8.750%'" , " class='FieldName0111' colspan='1'>" , "Age" , "</td>" ,
"<td width='13.750%'" , " class='FieldName0110' colspan='2'>" , "Location" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
HEAD  ENCNTR_ID
 BLANK2 ="" , DISPLAYIND = 1 , PHYS_CHART_CNT =( PHYS_CHART_CNT + 1 ),
IF (  0  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName0180' colspan='20'>" ,  BLANK2 , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE
( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
 
DETAIL
 PATIENTNAMEONE = PATIENT_NAME ,
 PHYS_DEF_CNT =( PHYS_DEF_CNT + 1 ),
 ROWCOUNT =( ROWCOUNT + 1 ),
 MRNDISPLAYROWONE = MRN ,
 
IF ( ( DEFICIENCY_AGE > 0 ) )  NUM_HOURS = MOD ( DEFICIENCY_AGE ,  24 ),  NUM_DAYS =(
 DEFICIENCY_AGE / 24 ),  DEFICAGEONE = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "DeficAge" ,
"%1 Days %2 Hours" , "ii" ,  NUM_DAYS ,  NUM_HOURS )
ELSE   DEFICAGEONE ="--"
ENDIF
,
 
IF ( ( CHART_AGE > 0 ) )  CHARTAGEONE = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "ChartAge" ,
"%1 Days" , "i" ,  CHART_AGE )
ELSE   CHARTAGEONE ="--"
ENDIF
,
 LOCATIONONE =
IF ( ( SIZE ( TRIM ( LOCATION ))> 0 ) )  LOCATION
ELSE   BUILD ("--" )
ENDIF
,
 
IF ( ( MOD ( ROWCOUNT ,  2 )= 1 ) )  _VCWRITELN = BUILD2 ("<tr>" , " " ),  _HTMLFILESTAT =
 UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='13.750%'" ,
" class='FieldName0190' colspan='3'>" ,  PATIENTNAMEONE , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='13.750%'" , " class='FieldName0190' colspan='3'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='10.000%'" ,
" class='FieldName0191' colspan='2'>" ,  MRNDISPLAYROWONE , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='10.000%'" , " class='FieldName0191' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='8.750%'" ,
" class='FieldName0191' colspan='2'>" ,  FIN , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='8.750%'" , " class='FieldName0191' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='11.250%'" ,
" class='FieldName0193' colspan='3'>" ,  FORMAT ( DISCH_DT_TM , "@SHORTDATE" ), "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='11.250%'" , " class='FieldName0193' colspan='3'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<td width='13.125%'" , " class='FieldName0191' colspan='3'>" ,
 DEFICIENCY_NAME , "</td>" , "<td width='11.875%'" , " class='FieldName0191' colspan='2'>" ,
 DEFICIENCY_STATUS , "</td>" , "<td width='8.750%'" , " class='FieldName0191' colspan='2'>" ,
 DEFICAGEONE , "</td>" , " " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN (
 _VCWRITELN ),  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='8.750%'" ,
" class='FieldName0191' colspan='1'>" ,  CHARTAGEONE , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='8.750%'" , " class='FieldName0191' colspan='1'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='13.750%'" ,
" class='FieldName0190' colspan='2'>" ,  LOCATIONONE , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='13.750%'" , " class='FieldName0190' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("</tr>" ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN (
 _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 
IF ( ( DEFICIENCY_AGE > 0 ) )  NUM_HOURS = MOD ( DEFICIENCY_AGE ,  24 ),  NUM_DAYS =(
 DEFICIENCY_AGE / 24 ),  DEFICAGETWO = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "DeficAge" ,
"%1 Days %2 Hours" , "ii" ,  NUM_DAYS ,  NUM_HOURS )
ELSE   DEFICAGETWO ="--"
ENDIF
,
 
IF ( ( CHART_AGE > 0 ) )  CHARTAGETWO = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "ChartAge" ,
"%1 Days" , "i" ,  CHART_AGE )
ELSE   CHARTAGETWO ="--"
ENDIF
,
 LOCATIONTWO =
IF ( ( SIZE ( TRIM ( LOCATION ))> 0 ) )  LOCATION
ELSE   BUILD ("--" )
ENDIF
,
 
IF ( ( MOD ( ROWCOUNT ,  2 )= 0 ) )  _VCWRITELN = BUILD2 ("<tr>" , " " ),  _HTMLFILESTAT =
 UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='13.750%'" ,
" class='FieldName0200' colspan='3'>" ,  PATIENT_NAME , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='13.750%'" , " class='FieldName0200' colspan='3'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='10.000%'" ,
" class='FieldName0201' colspan='2'>" ,  MRN , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='10.000%'" , " class='FieldName0201' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='8.750%'" ,
" class='FieldName0201' colspan='2'>" ,  FIN , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='8.750%'" , " class='FieldName0201' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='11.250%'" ,
" class='FieldName0203' colspan='3'>" ,  FORMAT ( DISCH_DT_TM , "@SHORTDATE" ), "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='11.250%'" , " class='FieldName0203' colspan='3'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<td width='13.125%'" , " class='FieldName0201' colspan='3'>" ,
 DEFICIENCY_NAME , "</td>" , "<td width='11.875%'" , " class='FieldName0201' colspan='2'>" ,
 DEFICIENCY_STATUS , "</td>" , "<td width='8.750%'" , " class='FieldName0201' colspan='2'>" ,
 DEFICAGETWO , "</td>" , " " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN (
 _VCWRITELN ),  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='8.750%'" ,
" class='FieldName0201' colspan='1'>" ,  CHARTAGETWO , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='8.750%'" , " class='FieldName0201' colspan='1'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 (" " ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN )
,  _HTMLFILEHANDLE ),
IF (  DISPLAYIND  )  _VCWRITELN = BUILD2 ("<td width='13.750%'" ,
" class='FieldName0200' colspan='2'>" ,  LOCATIONTWO , "</td>" , " " )
ELSE   _VCWRITELN = BUILD2 ("<td width='13.750%'" , " class='FieldName0200' colspan='2'>" , "" ,
"</td>" )
ENDIF
,  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("</tr>" ),  _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN (
 _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 BLANK3 ="" ,
 DISPLAYIND = 0 ,
 
IF (  0  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName0210' colspan='20'>" ,  BLANK3 , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE
( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
 
FOOT   PHYSICIAN_ID
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName0220' colspan='20'>" ,
"" , "</td>" , "</tr>" ), _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),
 _HTMLFILEHANDLE ), PHYSTOTALDEFIC = PHYS_DEF_CNT , ORG_DEF_CNT =( ORG_DEF_CNT + PHYS_DEF_CNT ),
 ORG_CHART_CNT =( ORG_CHART_CNT + PHYS_CHART_CNT ), _VCWRITELN = BUILD2 ("<tr>" ,
"<td width='13.125%'" , " class='FieldName0230' colspan='2'>" , "Total Deficiencies:" , "</td>" ,
"<td width='11.250%'" , " class='FieldName0231' colspan='4'>" ,  PHYSTOTALDEFIC , "</td>" ,
"<td width='10.000%'" , " class='FieldName0232' colspan='2'>" , "Total Charts:" , "</td>" ,
"<td width='11.250%'" , " class='FieldName0233' colspan='3'>" ,  PHYS_CHART_CNT , "</td>" ,
"<td width='54.375%'" , " class='FieldName0234' colspan='9'>" , "" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
FOOT   ORGANIZATION_ID
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='20.000%'" , " class='FieldName0240' colspan='4'>" , ""
, "</td>" , "<td width='16.875%'" , " class='FieldName0240' colspan='5'>" , "" , "</td>" ,
"<td width='12.500%'" , " class='FieldName0242' colspan='3'>" , "" , "</td>" ,
"<td width='15.625%'" , " class='FieldName0243' colspan='2'>" , "" , "</td>" ,
"<td width='10.625%'" , " class='FieldName0244' colspan='2'>" , "" , "</td>" ,
"<td width='24.375%'" , " class='FieldName0245' colspan='4'>" , "" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 ORGTOTALDEFIC = ORG_DEF_CNT , TOTAL_DEF_CNT =( TOTAL_DEF_CNT + ORG_DEF_CNT ), TOTAL_CHART_CNT =(
 TOTAL_CHART_CNT + ORG_CHART_CNT ), _VCWRITELN = BUILD2 ("<tr>" , "<td width='20.000%'" ,
" class='FieldName0250' colspan='4'>" ,
IF (  I1MULTIFACILITYLOGICIND  )  BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTALFORORG" ,
"Total for " ),  TRIM ( ORGANIZATION_NAME ,  3 ), ": " )
ELSE   BUILD2 ( UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "TOTAL" , "Total:" ))
ENDIF
, "</td>" , "<td width='16.875%'" , " class='FieldName0250' colspan='5'>" , "" , "</td>" ,
"<td width='12.500%'" , " class='FieldName0252' colspan='3'>" , "Total Deficiencies:" , "</td>" ,
"<td width='15.625%'" , " class='FieldName0231' colspan='2'>" ,  ORGTOTALDEFIC , "</td>" ,
"<td width='10.625%'" , " class='FieldName0232' colspan='2'>" , "Total Charts:" , "</td>" ,
"<td width='14.375%'" , " class='FieldName0255' colspan='3'>" ,  ORG_CHART_CNT , "</td>" ,
"<td width='10.000%'" , " class='FieldName0256' colspan='1'>" , "" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
FOOT REPORT
 _VCWRITELN ="</tbody><tfoot>" ,
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN ="</tfoot>" ,
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName0260' colspan='20'>" ,
"" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 
IF (  I1MULTIFACILITYLOGICIND  )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='36.875%'" ,
" class='FieldName0270' colspan='9'>" , "Grand Total For Facilities:" , "</td>" ,
"<td width='12.500%'" , " class='FieldName0271' colspan='3'>" , "Total Deficiencies:" , "</td>" ,
"<td width='15.625%'" , " class='FieldName0272' colspan='2'>" ,  TOTAL_DEF_CNT , "</td>" ,
"<td width='10.625%'" , " class='FieldName0273' colspan='2'>" , "Total Charts:" , "</td>" ,
"<td width='14.375%'" , " class='FieldName0274' colspan='3'>" ,  TOTAL_CHART_CNT , "</td>" ,
"<td width='10.000%'" , " class='FieldName0272' colspan='1'>" , "" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 
IF (  NOT ( I1MULTIFACILITYLOGICIND  ) )  _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" ,
" class='FieldName0280' colspan='20'>" , "" , "</td>" , "</tr>" ),  _HTMLFILESTAT = UAR_FWRITE (
 _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ENDIF
,
 _VCWRITELN = BUILD2 ("<tr>" , "<td width='100.000%'" , " class='FieldName0290' colspan='20'>" ,
"**END OF REPORT**" , "</td>" , "</tr>" ),
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE ),
 _VCWRITELN ="</table>" ,
 _HTMLFILESTAT = UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
 WITH  NULLREPORT , NOCOUNTER , MEMSORT
 
END ;Subroutine
 
 
SUBROUTINE   SECTIONABS  ( NCALC ,  OFFSETX ,  OFFSETY ,  MAXHEIGHT ,  BCONTINUE  )
 
DECLARE  SECTIONHEIGHT  =  F8  WITH  NOCONSTANT ( 7.500000 ), PRIVATE
DECLARE  GROWSUM  =  I4  WITH  NOCONSTANT ( 0 ), PRIVATE
IF ( ( NCALC = RPT_CALCHEIGHT ) )  RETURN ( SECTIONHEIGHT )
 
ENDIF
 
SET  _OLDPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _PEN0S0C0 )
SET  _YOFFSET  = ( OFFSETY + 0.000 )
SET  _FHOLDOFFSETY  = ( _YOFFSET - OFFSETY )
SELECT
 PATIENT_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ID ,
 PATIENT_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME ),
 ALPHA_PATIENT_NAME = SUBSTRING ( 1 ,  100 ,  CNVTUPPER ( DATA -> QUAL [D.SEQ]-> PATIENT_NAME )),
 PATIENT_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_TYPE_CD ,
 ORGANIZATION_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORGANIZATION_NAME ),
 ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ORGANIZATION_ID ,
 MRN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> MRN ),
 FIN = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> FIN ),
 ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ID ,
 PHYSICIAN_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME ),
 PHYSICIAN_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ID ,
 LOCATION = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> LOCATION ),
 DISCH_DT_TM = DATA -> QUAL [D.SEQ]-> DISCH_DT_TM ,
 SORT_DISCH_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DISCH_DT_TM != NULL ) )  DATA -> QUAL [D.SEQ]-> DISCH_DT_TM
ELSE   CNVTDATETIME ("31-DEC-2100 00:00:00.00" )
ENDIF
,
 CHART_AGE = DATA -> QUAL [D.SEQ]-> CHART_AGE ,
 DEFICIENCY_NAME = SUBSTRING ( 1 ,  100 ,  BUILD ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]->
 DEFICIENCY_NAME )),
 DEFICIENCY_AGE = DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFIC_AGE ,
 DEFICIENCY_STATUS = SUBSTRING ( 1 ,  30 ,  BUILD ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]->
 STATUS )),
 PHYSICIAN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_IND ,
 PHYSICIAN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_CD ,
 PHYSICIAN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_DT_TM ,
 PHYSICIAN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_ACTIVE_STATUS_PRSNL_ID ,
 PHYSICIAN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_BEG_EFFECTIVE_DT_TM ,
 PHYSICIAN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CONTRIBUTOR_SYSTEM_CD ,
 PHYSICIAN_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CREATE_DT_TM ,
 PHYSICIAN_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_CREATE_PRSNL_ID ,
 PHYSICIAN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_CD ,
 PHYSICIAN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_DT_TM ,
 PHYSICIAN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_DATA_STATUS_PRSNL_ID ,
 PHYSICIAN_EMAIL = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_EMAIL ),
 PHYSICIAN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_END_EFFECTIVE_DT_TM ,
 PHYSICIAN_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_FT_ENTITY_ID ,
 PHYSICIAN_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_FT_ENTITY_NAME ),
 PHYSICIAN_NAME_FIRST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_FIRST ),
 PHYSICIAN_NAME_FIRST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_FIRST_KEY
),
 PHYSICIAN_NAME_FIRST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_FIRST_KEY_NLS ),
 PHYSICIAN_NAME_FULL_FORMATTED = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_FULL_FORMATTED ),
 PHYSICIAN_NAME_LAST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_LAST ),
 PHYSICIAN_NAME_LAST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_NAME_LAST_KEY ),
 PHYSICIAN_NAME_LAST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PHYSICIAN_NAME_LAST_KEY_NLS ),
 PHYSICIAN_PASSWORD = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_PASSWORD ),
 PHYSICIAN_PERSON_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PERSON_ID ,
 PHYSICIAN_PHYSICIAN_IND = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PHYSICIAN_IND ,
 PHYSICIAN_PHYSICIAN_STATUS_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PHYSICIAN_STATUS_CD ,
 PHYSICIAN_POSITION_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_POSITION_CD ,
 PHYSICIAN_PRIM_ASSIGN_LOC_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PRIM_ASSIGN_LOC_CD ,
 PHYSICIAN_PRSNL_TYPE_CD = DATA -> QUAL [D.SEQ]-> PHYSICIAN_PRSNL_TYPE_CD ,
 PHYSICIAN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_DT_TM ,
 PHYSICIAN_UPDT_ID = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_ID ,
 PHYSICIAN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> PHYSICIAN_UPDT_TASK ,
 PHYSICIAN_USERNAME = SUBSTRING ( 1 ,  50 ,  DATA -> QUAL [D.SEQ]-> PHYSICIAN_USERNAME ),
 PATIENT_ABS_BIRTH_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ABS_BIRTH_DT_TM ,
 PATIENT_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_IND ,
 PATIENT_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_CD ,
 PATIENT_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_DT_TM ,
 PATIENT_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ACTIVE_STATUS_PRSNL_ID ,
 PATIENT_ARCHIVE_ENV_ID = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_ENV_ID ,
 PATIENT_ARCHIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_STATUS_CD ,
 PATIENT_ARCHIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_ARCHIVE_STATUS_DT_TM ,
 PATIENT_AUTOPSY_CD = DATA -> QUAL [D.SEQ]-> PATIENT_AUTOPSY_CD ,
 PATIENT_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_BEG_EFFECTIVE_DT_TM ,
 PATIENT_BIRTH_DT_CD = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_DT_CD ,
 PATIENT_BIRTH_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_DT_TM ,
 PATIENT_BIRTH_PREC_FLAG = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_PREC_FLAG ,
 PATIENT_BIRTH_TZ = DATA -> QUAL [D.SEQ]-> PATIENT_BIRTH_TZ ,
 PATIENT_CAUSE_OF_DEATH = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_CAUSE_OF_DEATH ),
 PATIENT_CAUSE_OF_DEATH_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CAUSE_OF_DEATH_CD ,
 PATIENT_CITIZENSHIP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CITIZENSHIP_CD ,
 PATIENT_CONCEPTION_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_CONCEPTION_DT_TM ,
 PATIENT_CONFID_LEVEL_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CONFID_LEVEL_CD ,
 PATIENT_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> PATIENT_CONTRIBUTOR_SYSTEM_CD ,
 PATIENT_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_CREATE_DT_TM ,
 PATIENT_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_CREATE_PRSNL_ID ,
 PATIENT_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_CD ,
 PATIENT_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_DT_TM ,
 PATIENT_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> PATIENT_DATA_STATUS_PRSNL_ID ,
 PATIENT_DECEASED_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_CD ,
 PATIENT_DECEASED_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_DT_TM ,
 PATIENT_DECEASED_SOURCE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_DECEASED_SOURCE_CD ,
 PATIENT_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_END_EFFECTIVE_DT_TM ,
 PATIENT_ETHNIC_GRP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_ETHNIC_GRP_CD ,
 PATIENT_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> PATIENT_FT_ENTITY_ID ,
 PATIENT_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> PATIENT_FT_ENTITY_NAME ),
 PATIENT_LANGUAGE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_LANGUAGE_CD ,
 PATIENT_LANGUAGE_DIALECT_CD = DATA -> QUAL [D.SEQ]-> PATIENT_LANGUAGE_DIALECT_CD ,
 PATIENT_LAST_ACCESSED_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_LAST_ACCESSED_DT_TM ,
 PATIENT_LAST_ENCNTR_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_LAST_ENCNTR_DT_TM ,
 PATIENT_MARITAL_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MARITAL_TYPE_CD ,
 PATIENT_MILITARY_BASE_LOCATION = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_MILITARY_BASE_LOCATION ),
 PATIENT_MILITARY_RANK_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MILITARY_RANK_CD ,
 PATIENT_MILITARY_SERVICE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_MILITARY_SERVICE_CD ,
 PATIENT_MOTHER_MAIDEN_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_MOTHER_MAIDEN_NAME ),
 PATIENT_NAME_FIRST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST ),
 PATIENT_NAME_FIRST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST_KEY ),
 PATIENT_NAME_FIRST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FIRST_KEY_NLS ),
 PATIENT_NAME_FIRST_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FIRST_PHONETIC ),
 PATIENT_NAME_FIRST_SYNONYM_ID = DATA -> QUAL [D.SEQ]-> PATIENT_NAME_FIRST_SYNONYM_ID ,
 PATIENT_NAME_FULL_FORMATTED = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_FULL_FORMATTED ),
 PATIENT_NAME_LAST = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_LAST ),
 PATIENT_NAME_LAST_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_LAST_KEY ),
 PATIENT_NAME_LAST_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_LAST_KEY_NLS ),
 PATIENT_NAME_LAST_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_LAST_PHONETIC ),
 PATIENT_NAME_MIDDLE = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_MIDDLE ),
 PATIENT_NAME_MIDDLE_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_MIDDLE_KEY ),
 PATIENT_NAME_MIDDLE_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]->
 PATIENT_NAME_MIDDLE_KEY_NLS ),
 PATIENT_NAME_PHONETIC = SUBSTRING ( 1 ,  8 ,  DATA -> QUAL [D.SEQ]-> PATIENT_NAME_PHONETIC ),
 PATIENT_NATIONALITY_CD = DATA -> QUAL [D.SEQ]-> PATIENT_NATIONALITY_CD ,
 PATIENT_NEXT_RESTORE_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_NEXT_RESTORE_DT_TM ,
 PATIENT_PERSON_ID = DATA -> QUAL [D.SEQ]-> PATIENT_PERSON_ID ,
 PATIENT_PERSON_TYPE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_PERSON_TYPE_CD ,
 PATIENT_RACE_CD = DATA -> QUAL [D.SEQ]-> PATIENT_RACE_CD ,
 PATIENT_RELIGION_CD = DATA -> QUAL [D.SEQ]-> PATIENT_RELIGION_CD ,
 PATIENT_SEX_AGE_CHANGE_IND = DATA -> QUAL [D.SEQ]-> PATIENT_SEX_AGE_CHANGE_IND ,
 PATIENT_SEX_CD = DATA -> QUAL [D.SEQ]-> PATIENT_SEX_CD ,
 PATIENT_SPECIES_CD = DATA -> QUAL [D.SEQ]-> PATIENT_SPECIES_CD ,
 PATIENT_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_DT_TM ,
 PATIENT_UPDT_ID = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_ID ,
 PATIENT_UPDT_TASK = DATA -> QUAL [D.SEQ]-> PATIENT_UPDT_TASK ,
 PATIENT_VET_MILITARY_STATUS_CD = DATA -> QUAL [D.SEQ]-> PATIENT_VET_MILITARY_STATUS_CD ,
 PATIENT_VIP_CD = DATA -> QUAL [D.SEQ]-> PATIENT_VIP_CD ,
 ENCNTR_ACCOMMODATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_CD ,
 ENCNTR_ACCOMMODATION_REASON_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_REASON_CD ,
 ENCNTR_ACCOMMODATION_REQUEST_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMMODATION_REQUEST_CD ,
 ENCNTR_ACCOMP_BY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACCOMP_BY_CD ,
 ENCNTR_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_IND ,
 ENCNTR_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_CD ,
 ENCNTR_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_DT_TM ,
 ENCNTR_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_ADMIT_MODE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_MODE_CD ,
 ENCNTR_ADMIT_SRC_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_SRC_CD ,
 ENCNTR_ADMIT_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_TYPE_CD ,
 ENCNTR_ADMIT_WITH_MEDICATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ADMIT_WITH_MEDICATION_CD ,
 ENCNTR_ALC_DECOMP_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ALC_DECOMP_DT_TM ,
 ENCNTR_ALC_REASON_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ALC_REASON_CD ,
 ENCNTR_ALT_LVL_CARE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ALT_LVL_CARE_CD ,
 ENCNTR_ALT_LVL_CARE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ALT_LVL_CARE_DT_TM ,
 ENCNTR_AMBULATORY_COND_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_AMBULATORY_COND_CD ,
 ENCNTR_ARCHIVE_DT_TM_ACT = DATA -> QUAL [D.SEQ]-> ENCNTR_ARCHIVE_DT_TM_ACT ,
 ENCNTR_ARCHIVE_DT_TM_EST = DATA -> QUAL [D.SEQ]-> ENCNTR_ARCHIVE_DT_TM_EST ,
 ENCNTR_ARRIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ARRIVE_DT_TM ,
 ENCNTR_ASSIGN_TO_LOC_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ASSIGN_TO_LOC_DT_TM ,
 ENCNTR_BBD_PROCEDURE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_BBD_PROCEDURE_CD ,
 ENCNTR_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_CHART_COMPLETE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_CHART_COMPLETE_DT_TM ,
 ENCNTR_CONFID_LEVEL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONFID_LEVEL_CD ,
 ENCNTR_CONTRACT_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONTRACT_STATUS_CD ,
 ENCNTR_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_COURTESY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_COURTESY_CD ,
 ENCNTR_CREATE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_CREATE_DT_TM ,
 ENCNTR_CREATE_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_CREATE_PRSNL_ID ,
 ENCNTR_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_CD ,
 ENCNTR_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_DT_TM ,
 ENCNTR_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_DATA_STATUS_PRSNL_ID ,
 ENCNTR_DEPART_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DEPART_DT_TM ,
 ENCNTR_DIET_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DIET_TYPE_CD ,
 ENCNTR_DISCH_DISPOSITION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_DISPOSITION_CD ,
 ENCNTR_DISCH_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_DT_TM ,
 ENCNTR_DISCH_TO_LOCTN_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_DISCH_TO_LOCTN_CD ,
 ENCNTR_DOC_RCVD_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_DOC_RCVD_DT_TM ,
 ENCNTR_ENCNTR_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_CLASS_CD ,
 ENCNTR_ENCNTR_COMPLETE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_COMPLETE_DT_TM ,
 ENCNTR_ENCNTR_FINANCIAL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_FINANCIAL_ID ,
 ENCNTR_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_ID ,
 ENCNTR_ENCNTR_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_STATUS_CD ,
 ENCNTR_ENCNTR_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_TYPE_CD ,
 ENCNTR_ENCNTR_TYPE_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ENCNTR_TYPE_CLASS_CD ,
 ENCNTR_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_END_EFFECTIVE_DT_TM ,
 ENCNTR_EST_ARRIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_ARRIVE_DT_TM ,
 ENCNTR_EST_DEPART_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_DEPART_DT_TM ,
 ENCNTR_EST_LENGTH_OF_STAY = DATA -> QUAL [D.SEQ]-> ENCNTR_EST_LENGTH_OF_STAY ,
 ENCNTR_FINANCIAL_CLASS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FINANCIAL_CLASS_CD ,
 ENCNTR_GUARANTOR_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_GUARANTOR_TYPE_CD ,
 ENCNTR_INFO_GIVEN_BY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_INFO_GIVEN_BY ),
 ENCNTR_INPATIENT_ADMIT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_INPATIENT_ADMIT_DT_TM ,
 ENCNTR_ISOLATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_ISOLATION_CD ,
 ENCNTR_LOCATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOCATION_CD ,
 ENCNTR_LOC_BED_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_BED_CD ,
 ENCNTR_LOC_BUILDING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_BUILDING_CD ,
 ENCNTR_LOC_FACILITY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_FACILITY_CD ,
 ENCNTR_LOC_NURSE_UNIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_NURSE_UNIT_CD ,
 ENCNTR_LOC_ROOM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_ROOM_CD ,
 ENCNTR_LOC_TEMP_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_LOC_TEMP_CD ,
 ENCNTR_MED_SERVICE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MED_SERVICE_CD ,
 ENCNTR_MENTAL_CATEGORY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MENTAL_CATEGORY_CD ,
 ENCNTR_MENTAL_HEALTH_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MENTAL_HEALTH_DT_TM ,
 ENCNTR_ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_ORGANIZATION_ID ,
 ENCNTR_PARENT_RET_CRITERIA_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PARENT_RET_CRITERIA_ID ,
 ENCNTR_PATIENT_CLASSIFICATION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PATIENT_CLASSIFICATION_CD ,
 ENCNTR_PA_CURRENT_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PA_CURRENT_STATUS_CD ,
 ENCNTR_PA_CURRENT_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_PA_CURRENT_STATUS_DT_TM ,
 ENCNTR_PERSON_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PERSON_ID ,
 ENCNTR_PLACEMENT_AUTH_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PLACEMENT_AUTH_PRSNL_ID ,
 ENCNTR_PREADMIT_TESTING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PREADMIT_TESTING_CD ,
 ENCNTR_PRE_REG_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_PRE_REG_DT_TM ,
 ENCNTR_PRE_REG_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_PRE_REG_PRSNL_ID ,
 ENCNTR_PROGRAM_SERVICE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PROGRAM_SERVICE_CD ,
 ENCNTR_PSYCHIATRIC_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_PSYCHIATRIC_STATUS_CD ,
 ENCNTR_PURGE_DT_TM_ACT = DATA -> QUAL [D.SEQ]-> ENCNTR_PURGE_DT_TM_ACT ,
 ENCNTR_PURGE_DT_TM_EST = DATA -> QUAL [D.SEQ]-> ENCNTR_PURGE_DT_TM_EST ,
 ENCNTR_READMIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_READMIT_CD ,
 ENCNTR_REASON_FOR_VISIT = SUBSTRING ( 1 ,  255 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_REASON_FOR_VISIT ),
 ENCNTR_REFERRAL_RCVD_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_REFERRAL_RCVD_DT_TM ,
 ENCNTR_REFERRING_COMMENT = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_REFERRING_COMMENT
),
 ENCNTR_REFER_FACILITY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_REFER_FACILITY_CD ,
 ENCNTR_REGION_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_REGION_CD ,
 ENCNTR_REG_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_REG_DT_TM ,
 ENCNTR_REG_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_REG_PRSNL_ID ,
 ENCNTR_RESULT_ACCUMULATION_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_RESULT_ACCUMULATION_DT_TM ,
 ENCNTR_SAFEKEEPING_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SAFEKEEPING_CD ,
 ENCNTR_SECURITY_ACCESS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SECURITY_ACCESS_CD ,
 ENCNTR_SERVICE_CATEGORY_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SERVICE_CATEGORY_CD ,
 ENCNTR_SITTER_REQUIRED_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SITTER_REQUIRED_CD ,
 ENCNTR_SPECIALTY_UNIT_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_SPECIALTY_UNIT_CD ,
 ENCNTR_TRAUMA_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_TRAUMA_CD ,
 ENCNTR_TRAUMA_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_TRAUMA_DT_TM ,
 ENCNTR_TRIAGE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_TRIAGE_CD ,
 ENCNTR_TRIAGE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_TRIAGE_DT_TM ,
 ENCNTR_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_DT_TM ,
 ENCNTR_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_ID ,
 ENCNTR_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_UPDT_TASK ,
 ENCNTR_VALUABLES_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VALUABLES_CD ,
 ENCNTR_VIP_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VIP_CD ,
 ENCNTR_VISITOR_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_VISITOR_STATUS_CD ,
 ENCNTR_ZERO_BALANCE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_ZERO_BALANCE_DT_TM ,
 ENCNTR_MRN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_IND ,
 ENCNTR_MRN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_CD ,
 ENCNTR_MRN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_DT_TM ,
 ENCNTR_MRN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_MRN_ALIAS = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ALIAS ),
 ENCNTR_MRN_ALIAS_POOL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ALIAS_POOL_CD ,
 ENCNTR_MRN_ASSIGN_AUTHORITY_SYS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ASSIGN_AUTHORITY_SYS_CD ,
 ENCNTR_MRN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_MRN_CHECK_DIGIT = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CHECK_DIGIT ,
 ENCNTR_MRN_CHECK_DIGIT_METHOD_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CHECK_DIGIT_METHOD_CD ,
 ENCNTR_MRN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_MRN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_CD ,
 ENCNTR_MRN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_DT_TM ,
 ENCNTR_MRN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_DATA_STATUS_PRSNL_ID ,
 ENCNTR_MRN_ENCNTR_ALIAS_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ALIAS_ID ,
 ENCNTR_MRN_ENCNTR_ALIAS_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ALIAS_TYPE_CD ,
 ENCNTR_MRN_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_ENCNTR_ID ,
 ENCNTR_MRN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_END_EFFECTIVE_DT_TM ,
 ENCNTR_MRN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_DT_TM ,
 ENCNTR_MRN_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_ID ,
 ENCNTR_MRN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_MRN_UPDT_TASK ,
 ENCNTR_FIN_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_IND ,
 ENCNTR_FIN_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_CD ,
 ENCNTR_FIN_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_DT_TM ,
 ENCNTR_FIN_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ACTIVE_STATUS_PRSNL_ID ,
 ENCNTR_FIN_ALIAS = SUBSTRING ( 1 ,  200 ,  DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ALIAS ),
 ENCNTR_FIN_ALIAS_POOL_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ALIAS_POOL_CD ,
 ENCNTR_FIN_ASSIGN_AUTHORITY_SYS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ASSIGN_AUTHORITY_SYS_CD ,
 ENCNTR_FIN_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_BEG_EFFECTIVE_DT_TM ,
 ENCNTR_FIN_CHECK_DIGIT = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CHECK_DIGIT ,
 ENCNTR_FIN_CHECK_DIGIT_METHOD_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CHECK_DIGIT_METHOD_CD ,
 ENCNTR_FIN_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_CONTRIBUTOR_SYSTEM_CD ,
 ENCNTR_FIN_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_CD ,
 ENCNTR_FIN_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_DT_TM ,
 ENCNTR_FIN_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_DATA_STATUS_PRSNL_ID ,
 ENCNTR_FIN_ENCNTR_ALIAS_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ALIAS_ID ,
 ENCNTR_FIN_ENCNTR_ALIAS_TYPE_CD = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ALIAS_TYPE_CD ,
 ENCNTR_FIN_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_ENCNTR_ID ,
 ENCNTR_FIN_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_END_EFFECTIVE_DT_TM ,
 ENCNTR_FIN_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_DT_TM ,
 ENCNTR_FIN_UPDT_ID = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_ID ,
 ENCNTR_FIN_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ENCNTR_FIN_UPDT_TASK ,
 ORG_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_IND ,
 ORG_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_CD ,
 ORG_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_DT_TM ,
 ORG_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ORG_ACTIVE_STATUS_PRSNL_ID ,
 ORG_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_BEG_EFFECTIVE_DT_TM ,
 ORG_CONTRIBUTOR_SOURCE_CD = DATA -> QUAL [D.SEQ]-> ORG_CONTRIBUTOR_SOURCE_CD ,
 ORG_CONTRIBUTOR_SYSTEM_CD = DATA -> QUAL [D.SEQ]-> ORG_CONTRIBUTOR_SYSTEM_CD ,
 ORG_DATA_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_CD ,
 ORG_DATA_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_DT_TM ,
 ORG_DATA_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> ORG_DATA_STATUS_PRSNL_ID ,
 ORG_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_END_EFFECTIVE_DT_TM ,
 ORG_FEDERAL_TAX_ID_NBR = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_FEDERAL_TAX_ID_NBR ),
 ORG_FT_ENTITY_ID = DATA -> QUAL [D.SEQ]-> ORG_FT_ENTITY_ID ,
 ORG_FT_ENTITY_NAME = SUBSTRING ( 1 ,  32 ,  DATA -> QUAL [D.SEQ]-> ORG_FT_ENTITY_NAME ),
 ORG_ORGANIZATION_ID = DATA -> QUAL [D.SEQ]-> ORG_ORGANIZATION_ID ,
 ORG_ORG_CLASS_CD = DATA -> QUAL [D.SEQ]-> ORG_ORG_CLASS_CD ,
 ORG_ORG_NAME = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME ),
 ORG_ORG_NAME_KEY = SUBSTRING ( 1 ,  100 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME_KEY ),
 ORG_ORG_NAME_KEY_NLS = SUBSTRING ( 1 ,  202 ,  DATA -> QUAL [D.SEQ]-> ORG_ORG_NAME_KEY_NLS ),
 ORG_ORG_STATUS_CD = DATA -> QUAL [D.SEQ]-> ORG_ORG_STATUS_CD ,
 ORG_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> ORG_UPDT_DT_TM ,
 ORG_UPDT_ID = DATA -> QUAL [D.SEQ]-> ORG_UPDT_ID ,
 ORG_UPDT_TASK = DATA -> QUAL [D.SEQ]-> ORG_UPDT_TASK ,
 HIM_VISIT_ABSTRACT_COMPLETE_IND = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ABSTRACT_COMPLETE_IND ,
 HIM_VISIT_ACTIVE_IND = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_IND ,
 HIM_VISIT_ACTIVE_STATUS_CD = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_CD ,
 HIM_VISIT_ACTIVE_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_DT_TM ,
 HIM_VISIT_ACTIVE_STATUS_PRSNL_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ACTIVE_STATUS_PRSNL_ID ,
 HIM_VISIT_ALLOCATION_DT_FLAG = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_FLAG ,
 HIM_VISIT_ALLOCATION_DT_MODIFIER = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_MODIFIER ,
 HIM_VISIT_ALLOCATION_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ALLOCATION_DT_TM ,
 HIM_VISIT_BEG_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_BEG_EFFECTIVE_DT_TM ,
 HIM_VISIT_CHART_PROCESS_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_PROCESS_ID ,
 HIM_VISIT_CHART_STATUS_CD = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_STATUS_CD ,
 HIM_VISIT_CHART_STATUS_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_CHART_STATUS_DT_TM ,
 HIM_VISIT_ENCNTR_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_ENCNTR_ID ,
 HIM_VISIT_END_EFFECTIVE_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_END_EFFECTIVE_DT_TM ,
 HIM_VISIT_PERSON_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_PERSON_ID ,
 HIM_VISIT_UPDT_DT_TM = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_DT_TM ,
 HIM_VISIT_UPDT_ID = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_ID ,
 HIM_VISIT_UPDT_TASK = DATA -> QUAL [D.SEQ]-> HIM_VISIT_UPDT_TASK ,
 ORDER_NOTIF_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_CAUSED_BY_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_CAUSED_BY_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_FROM_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_FROM_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_COMMENT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_NOTIF_NOTIFICATION_COMMENT )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_STATUS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_STATUS_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_NOTIFICATION_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_NOTIFICATION_TZ )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_ORDER_NOTIFICATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_ORDER_NOTIFICATION_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_PARENT_ORDER_NOTIFICATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_NOTIF_PARENT_ORDER_NOTIFICATION_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_STATUS_CHANGE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_STATUS_CHANGE_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_STATUS_CHANGE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_STATUS_CHANGE_TZ )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_TO_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_TO_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDER_NOTIF_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_NOTIF_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_DEPT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_DEPT_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_DIGITAL_SIGNATURE_IDENT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 64 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDER_REVIEW_DIGITAL_SIGNATURE_IDENT )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_LOCATION_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_LOCATION_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROVIDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROVIDER_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROXY_PERSONNEL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROXY_PERSONNEL_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_PROXY_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_PROXY_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REJECT_REASON_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REJECT_REASON_CD )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEWED_STATUS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEWED_STATUS_FLAG )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_PERSONNEL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_PERSONNEL_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_REQD_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_REQD_IND )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_REVIEW_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_REVIEW_TZ )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDER_REVIEW_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDER_REVIEW_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_IND )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVE_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVE_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDERS_ACTIVITY_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ACTIVITY_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_AD_HOC_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_AD_HOC_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_CATALOG_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CATALOG_CD )
ELSE  ""
ENDIF
,
 ORDERS_CATALOG_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CATALOG_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_CKI =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CKI )
ELSE  ""
ENDIF
,
 ORDERS_CLINICAL_DISPLAY_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_CLINICAL_DISPLAY_LINE )
ELSE  ""
ENDIF
,
 ORDERS_COMMENT_TYPE_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_COMMENT_TYPE_MASK )
ELSE  ""
ENDIF
,
 ORDERS_CONSTANT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CONSTANT_IND )
ELSE  ""
ENDIF
,
 ORDERS_CONTRIBUTOR_SYSTEM_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CONTRIBUTOR_SYSTEM_CD )
ELSE  ""
ENDIF
,
 ORDERS_CS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CS_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_CS_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CS_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_CURRENT_START_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CURRENT_START_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_CURRENT_START_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_CURRENT_START_TZ )
ELSE  ""
ENDIF
,
 ORDERS_DCP_CLIN_CAT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DCP_CLIN_CAT_CD )
ELSE  ""
ENDIF
,
 ORDERS_DEPT_MISC_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DEPT_MISC_LINE )
ELSE  ""
ENDIF
,
 ORDERS_DEPT_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DEPT_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_IND )
ELSE  ""
ENDIF
,
 ORDERS_DISCONTINUE_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_DISCONTINUE_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_ENCNTR_FINANCIAL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ENCNTR_FINANCIAL_ID )
ELSE  ""
ENDIF
,
 ORDERS_ENCNTR_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ENCNTR_ID )
ELSE  ""
ENDIF
,
 ORDERS_ESO_NEW_ORDER_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ESO_NEW_ORDER_IND )
ELSE  ""
ENDIF
,
 ORDERS_FREQUENCY_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_FREQUENCY_ID )
ELSE  ""
ENDIF
,
 ORDERS_FREQ_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_FREQ_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_GROUP_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_GROUP_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_GROUP_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_GROUP_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_HIDE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_HIDE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_HNA_ORDER_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_HNA_ORDER_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_INCOMPLETE_ORDER_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INCOMPLETE_ORDER_IND )
ELSE  ""
ENDIF
,
 ORDERS_INGREDIENT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INGREDIENT_IND )
ELSE  ""
ENDIF
,
 ORDERS_INTEREST_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INTEREST_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_INTERVAL_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_INTERVAL_IND )
ELSE  ""
ENDIF
,
 ORDERS_IV_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_IV_IND )
ELSE  ""
ENDIF
,
 ORDERS_LAST_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_CORE_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_CORE_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_INGRED_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_INGRED_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_LAST_UPDATE_PROVIDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LAST_UPDATE_PROVIDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_LINK_NBR =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_NBR )
ELSE  ""
ENDIF
,
 ORDERS_LINK_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_LINK_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_LINK_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_LINK_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_MED_ORDER_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_MED_ORDER_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_MODIFIED_START_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_MODIFIED_START_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_NEED_DOCTOR_COSIGN_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_DOCTOR_COSIGN_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_NURSE_REVIEW_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_NURSE_REVIEW_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_PHYSICIAN_VALIDATE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_PHYSICIAN_VALIDATE_IND )
ELSE  ""
ENDIF
,
 ORDERS_NEED_RX_VERIFY_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_NEED_RX_VERIFY_IND )
ELSE  ""
ENDIF
,
 ORDERS_OE_FORMAT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_OE_FORMAT_ID )
ELSE  ""
ENDIF
,
 ORDERS_ORDERABLE_TYPE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDERABLE_TYPE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_ORDERED_AS_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_ORDERED_AS_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_COMMENT_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_COMMENT_IND )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_DETAIL_DISPLAY_LINE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 255 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]->
 ORDERS_ORDER_DETAIL_DISPLAY_LINE )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_MNEMONIC =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  SUBSTRING ( 1 ,
 100 ,  DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_MNEMONIC )
ELSE  ""
ENDIF
,
 ORDERS_ORDER_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORDER_STATUS_CD )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_CONVS_SEQ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_CONVS_SEQ )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORDER_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORDER_TZ )
ELSE  ""
ENDIF
,
 ORDERS_ORIG_ORD_AS_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_ORIG_ORD_AS_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_OVERRIDE_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_OVERRIDE_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_PATHWAY_CATALOG_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PATHWAY_CATALOG_ID )
ELSE  ""
ENDIF
,
 ORDERS_PERSON_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PERSON_ID )
ELSE  ""
ENDIF
,
 ORDERS_PRN_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PRN_IND )
ELSE  ""
ENDIF
,
 ORDERS_PRODUCT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PRODUCT_ID )
ELSE  ""
ENDIF
,
 ORDERS_PROJECTED_STOP_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PROJECTED_STOP_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_PROJECTED_STOP_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_PROJECTED_STOP_TZ )
ELSE  ""
ENDIF
,
 ORDERS_REF_TEXT_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_REF_TEXT_MASK )
ELSE  ""
ENDIF
,
 ORDERS_REMAINING_DOSE_CNT =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_REMAINING_DOSE_CNT )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_RESUME_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RESUME_IND )
ELSE  ""
ENDIF
,
 ORDERS_RX_MASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_RX_MASK )
ELSE  ""
ENDIF
,
 ORDERS_SCH_STATE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SCH_STATE_CD )
ELSE  ""
ENDIF
,
 ORDERS_SOFT_STOP_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SOFT_STOP_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_SOFT_STOP_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SOFT_STOP_TZ )
ELSE  ""
ENDIF
,
 ORDERS_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 ORDERS_STOP_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_STOP_TYPE_CD )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_EFFECTIVE_TZ =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_EFFECTIVE_TZ )
ELSE  ""
ENDIF
,
 ORDERS_SUSPEND_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SUSPEND_IND )
ELSE  ""
ENDIF
,
 ORDERS_SYNONYM_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_SYNONYM_ID )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_CORE_ACTION_SEQUENCE =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_CORE_ACTION_SEQUENCE )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_ORDER_FLAG =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_ORDER_FLAG )
ELSE  ""
ENDIF
,
 ORDERS_TEMPLATE_ORDER_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_TEMPLATE_ORDER_ID )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_ID )
ELSE  ""
ENDIF
,
 ORDERS_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_UPDT_TASK )
ELSE  ""
ENDIF
,
 ORDERS_VALID_DOSE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 2 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> ORDER_QUAL [ 1 ]-> ORDERS_VALID_DOSE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTION_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTION_STATUS_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTION_TYPE_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTION_TYPE_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_IND =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_IND )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ACTIVE_STATUS_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ACTIVE_STATUS_PRSNL_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_ALLOCATION_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ALLOCATION_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_BEG_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_BEG_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_COMPLETED_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_COMPLETED_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_ENCNTR_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_ENCNTR_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_END_EFFECTIVE_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_END_EFFECTIVE_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_EVENT_CD =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_EVENT_CD )
ELSE  ""
ENDIF
,
 HIM_EVENT_EVENT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_EVENT_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_HIM_EVENT_ALLOCATION_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_HIM_EVENT_ALLOCATION_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_PRSNL_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_PRSNL_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_REQUEST_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_REQUEST_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_DT_TM =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_DT_TM )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_ID =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_ID )
ELSE  ""
ENDIF
,
 HIM_EVENT_UPDT_TASK =
IF ( ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DEFICIENCY_FLAG = 1 ) )  BUILD ( DATA ->
 QUAL [D.SEQ]-> DEFIC_QUAL [DDEFIC.SEQ]-> DOC_QUAL [ 1 ]-> HIM_EVENT_UPDT_TASK )
ELSE  ""
ENDIF
 
FROM ( DUMMYT  D  WITH  SEQ = VALUE ( SIZE ( DATA -> QUAL ,  5 ))),
( DUMMYT  DDEFIC  WITH  SEQ = VALUE ( DATA -> MAX_DEFIC_QUAL_COUNT ))
 PLAN ( D
WHERE (D.SEQ> 0 ))
 AND ( DDEFIC
WHERE (DDEFIC.SEQ<= SIZE ( DATA -> QUAL [D.SEQ]-> DEFIC_QUAL ,  5 )))
 
ORDER BY  ORGANIZATION_NAME ,
 ORGANIZATION_ID ,
 PHYSICIAN_NAME ,
 PHYSICIAN_ID ,
 SORT_DISCH_DT_TM ,
 ALPHA_PATIENT_NAME ,
 ENCNTR_ID ,
 DEFICIENCY_NAME ,
 DEFICIENCY_STATUS
 
HEAD REPORT
 _D0 = PATIENT_NAME ,
 _D1 = ORGANIZATION_NAME ,
 _D2 = MRN ,
 _D3 = FIN ,
 _D4 = PHYSICIAN_NAME ,
 _D5 = LOCATION ,
 _D6 = DISCH_DT_TM ,
 _D7 = CHART_AGE ,
 _D8 = DEFICIENCY_NAME ,
 _D9 = DEFICIENCY_AGE ,
 _D10 = DEFICIENCY_STATUS ,
 _FENDDETAIL =( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM ),
 _BCONTFIELDNAME07 = 0 ,
 _BCONTFIELDNAME08 = 0 ,
 BFIRSTTIME = 1 ,
 
WHILE (  (( ( _BCONTFIELDNAME07 = 1 ) )  OR  ( (( ( _BCONTFIELDNAME08 = 1 ) )  OR  (( BFIRSTTIME =
 1 ) ))  )) )
 
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME00 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME00 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME01 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME01 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME02 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME02 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME03 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  ROWCOUNT = 0 ,  BLANK ="" ,  TOTAL_CHART_CNT = 0 ,  TOTAL_DEF_CNT = 0 ,  DUMMY_VAL = FIELDNAME03
( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME04 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME04 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME05 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME05 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _FDRAWHEIGHT = FIELDNAME06 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME06 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME08 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME07 ,  _FDRAWHEIGHT = FIELDNAME07 (
 RPT_CALCHEIGHT , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )- _YOFFSET ),
 _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME07 = 0 ) )  _RPTSTAT = UAR_RPTLINE ( _HREPORT
, ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),  _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  ALLFACILITIES = UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "ALLFACILITIES" , "All Facilities" ),
 FACILITYLIST = MAKELISTOFQUALITEMNAMES ( ORGANIZATIONS ,  ALLFACILITIES ),  DUMMY_VAL =
 FIELDNAME07 ( RPT_RENDER , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )- _YOFFSET )
,  _BCONTFIELDNAME07 )
ENDIF
,
IF ( ( _BCONTFIELDNAME07 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME08 ,  _FDRAWHEIGHT = FIELDNAME08 (
 RPT_CALCHEIGHT , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )- _YOFFSET ),
 _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME08 = 0 ) )  _RPTSTAT = UAR_RPTLINE ( _HREPORT
, ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),  _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  ALLPHYSICIANS = UAR_I18NGETMESSAGE ( I18NHANDLEHIM , "ALLPHYSICIANS" , "All Physicians" ),
 PHYSICIANLIST = MAKELISTOFQUALITEMNAMES ( PHYSICIANS ,  ALLPHYSICIANS ),  DUMMY_VAL = FIELDNAME08 (
 RPT_RENDER , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )- _YOFFSET ),
 _BCONTFIELDNAME08 )
ENDIF
, BFIRSTTIME = 0
 
ENDWHILE
 
HEAD PAGE
 
IF ( ( CURPAGE > 1 ) )  _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , (
 OFFSETX + 10.000 ),  _YOFFSET ),  DUMMY_VAL = PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,
 PAGEOFPAGE = RPT_PAGEOFPAGE ,
 DUMMY_VAL = FIELDNAME09 ( RPT_RENDER ),
 DUMMY_VAL = FIELDNAME010 ( RPT_RENDER ),
 DUMMY_VAL = FIELDNAME011 ( RPT_RENDER )
HEAD  ORGANIZATION_NAME
 _FDRAWHEIGHT = FIELDNAME012 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, DUMMY_VAL = FIELDNAME012 ( RPT_RENDER )
HEAD  ORGANIZATION_ID
 _FDRAWHEIGHT = FIELDNAME013 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, ORGANIZATION = ORGANIZATION_NAME , ORG_DEF_CNT = 0 , ORG_CHART_CNT = 0 , DUMMY_VAL = FIELDNAME013
( RPT_RENDER )
HEAD  PHYSICIAN_NAME
 _FDRAWHEIGHT = FIELDNAME014 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, DUMMY_VAL = FIELDNAME014 ( RPT_RENDER )
HEAD  PHYSICIAN_ID
 _FDRAWHEIGHT = FIELDNAME015 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, PHYSICIANNAME = PHYSICIAN_NAME , PHYS_DEF_CNT = 0 , PHYS_CHART_CNT = 0 , DUMMY_VAL = FIELDNAME015
( RPT_RENDER ), _FDRAWHEIGHT = FIELDNAME016 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, DUMMY_VAL = FIELDNAME016 ( RPT_RENDER ), _FDRAWHEIGHT = FIELDNAME017 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, DUMMY_VAL = FIELDNAME017 ( RPT_RENDER )
HEAD  ENCNTR_ID
 _FDRAWHEIGHT = FIELDNAME018 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
, BLANK2 ="" , DISPLAYIND = 1 , PHYS_CHART_CNT =( PHYS_CHART_CNT + 1 ), DUMMY_VAL = FIELDNAME018 (
 RPT_RENDER )
DETAIL
 _BCONTFIELDNAME019 = 0 ,
 _BCONTFIELDNAME020 = 0 ,
 BFIRSTTIME = 1 ,
 
WHILE (  (( ( _BCONTFIELDNAME019 = 1 ) )  OR  ( (( ( _BCONTFIELDNAME020 = 1 ) )  OR  (( BFIRSTTIME =
 1 ) ))  )) )
 
IF ( ( _BCONTFIELDNAME020 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME019 ,  _FDRAWHEIGHT =
 FIELDNAME019 ( RPT_CALCHEIGHT , ( _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME019 = 0 ) ) BREAK
ENDIF
,  PATIENTNAMEONE = PATIENT_NAME ,  PHYS_DEF_CNT =( PHYS_DEF_CNT + 1 ),  ROWCOUNT =( ROWCOUNT + 1 )
,  MRNDISPLAYROWONE = MRN ,
IF ( ( DEFICIENCY_AGE > 0 ) )  NUM_HOURS = MOD ( DEFICIENCY_AGE ,  24 ),  NUM_DAYS =(
 DEFICIENCY_AGE / 24 ),  DEFICAGEONE = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "DeficAge" ,
"%1 Days %2 Hours" , "ii" ,  NUM_DAYS ,  NUM_HOURS )
ELSE   DEFICAGEONE ="--"
ENDIF
,
IF ( ( CHART_AGE > 0 ) )  CHARTAGEONE = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "ChartAge" ,
"%1 Days" , "i" ,  CHART_AGE )
ELSE   CHARTAGEONE ="--"
ENDIF
,  LOCATIONONE =
IF ( ( SIZE ( TRIM ( LOCATION ))> 0 ) )  LOCATION
ELSE   BUILD ("--" )
ENDIF
,  DUMMY_VAL = FIELDNAME019 ( RPT_RENDER , ( _FENDDETAIL - _YOFFSET ),  _BCONTFIELDNAME019 )
ENDIF
,
IF ( ( _BCONTFIELDNAME019 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME020 ,  _FDRAWHEIGHT =
 FIELDNAME020 ( RPT_CALCHEIGHT , ( _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME020 = 0 ) ) BREAK
ENDIF
,
IF ( ( DEFICIENCY_AGE > 0 ) )  NUM_HOURS = MOD ( DEFICIENCY_AGE ,  24 ),  NUM_DAYS =(
 DEFICIENCY_AGE / 24 ),  DEFICAGETWO = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "DeficAge" ,
"%1 Days %2 Hours" , "ii" ,  NUM_DAYS ,  NUM_HOURS )
ELSE   DEFICAGETWO ="--"
ENDIF
,
IF ( ( CHART_AGE > 0 ) )  CHARTAGETWO = UAR_I18NBUILDMESSAGE ( I18NHANDLEHIM , "ChartAge" ,
"%1 Days" , "i" ,  CHART_AGE )
ELSE   CHARTAGETWO ="--"
ENDIF
,  LOCATIONTWO =
IF ( ( SIZE ( TRIM ( LOCATION ))> 0 ) )  LOCATION
ELSE   BUILD ("--" )
ENDIF
,  DUMMY_VAL = FIELDNAME020 ( RPT_RENDER , ( _FENDDETAIL - _YOFFSET ),  _BCONTFIELDNAME020 )
ENDIF
,
IF ( ( _BCONTFIELDNAME019 = 0 ) AND ( _BCONTFIELDNAME020 = 0 ) )  _FDRAWHEIGHT = FIELDNAME021 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
,  BLANK3 ="" ,  DISPLAYIND = 0 ,  DUMMY_VAL = FIELDNAME021 ( RPT_RENDER )
ENDIF
, BFIRSTTIME = 0
 
ENDWHILE
 
FOOT   PHYSICIAN_ID
 _BCONTFIELDNAME023 = 0 , BFIRSTTIME = 1 ,
WHILE (  (( ( _BCONTFIELDNAME023 = 1 ) )  OR  (( BFIRSTTIME = 1 ) )) )
 
IF ( ( _BCONTFIELDNAME023 = 0 ) )  _FDRAWHEIGHT = FIELDNAME022 ( RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ENDIF
,  DUMMY_VAL = FIELDNAME022 ( RPT_RENDER )
ENDIF
, _BHOLDCONTINUE = _BCONTFIELDNAME023 , _FDRAWHEIGHT = FIELDNAME023 ( RPT_CALCHEIGHT , (
 _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME023 = 0 ) ) BREAK
ENDIF
, PHYSTOTALDEFIC = PHYS_DEF_CNT , ORG_DEF_CNT =( ORG_DEF_CNT + PHYS_DEF_CNT ), ORG_CHART_CNT =(
 ORG_CHART_CNT + PHYS_CHART_CNT ), DUMMY_VAL = FIELDNAME023 ( RPT_RENDER , ( _FENDDETAIL - _YOFFSET
),  _BCONTFIELDNAME023 ), BFIRSTTIME = 0
 
ENDWHILE
if (SIZE ( PHYSICIANS -> QUAL ,  5 ) != 1)  ;pel
    break ; pel page break on physician
endif       ;pel
FOOT   ORGANIZATION_ID
 _BCONTFIELDNAME024 = 0 , _BCONTFIELDNAME025 = 0 , BFIRSTTIME = 1 ,
WHILE (  (( ( _BCONTFIELDNAME024 = 1 ) )  OR  ( (( ( _BCONTFIELDNAME025 = 1 ) )  OR  (( BFIRSTTIME =
 1 ) ))  )) )
 
IF ( ( _BCONTFIELDNAME025 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME024 ,  _FDRAWHEIGHT =
 FIELDNAME024 ( RPT_CALCHEIGHT , ( _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME024 = 0 ) ) BREAK
ENDIF
,  DUMMY_VAL = FIELDNAME024 ( RPT_RENDER , ( _FENDDETAIL - _YOFFSET ),  _BCONTFIELDNAME024 )
ENDIF
,
IF ( ( _BCONTFIELDNAME024 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME025 ,  _FDRAWHEIGHT =
 FIELDNAME025 ( RPT_CALCHEIGHT , ( _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) ) BREAK
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME025 = 0 ) ) BREAK
ENDIF
,  ORGTOTALDEFIC = ORG_DEF_CNT ,  TOTAL_DEF_CNT =( TOTAL_DEF_CNT + ORG_DEF_CNT ),  TOTAL_CHART_CNT =
( TOTAL_CHART_CNT + ORG_CHART_CNT ),  DUMMY_VAL = FIELDNAME025 ( RPT_RENDER , ( _FENDDETAIL -
 _YOFFSET ),  _BCONTFIELDNAME025 )
ENDIF
, BFIRSTTIME = 0
 
ENDWHILE
 
FOOT REPORT
 _BCONTFIELDNAME026 = 0 ,
 _BCONTFIELDNAME027 = 0 ,
 BFIRSTTIME = 1 ,
 
WHILE (  (( ( _BCONTFIELDNAME026 = 1 ) )  OR  ( (( ( _BCONTFIELDNAME027 = 1 ) )  OR  (( BFIRSTTIME =
 1 ) ))  )) )
 
IF ( ( _BCONTFIELDNAME027 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME026 ,  _FDRAWHEIGHT =
 FIELDNAME026 ( RPT_CALCHEIGHT , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )-
 _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME026 = 0 ) )  _RPTSTAT = UAR_RPTLINE ( _HREPORT
, ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),  _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME026 ( RPT_RENDER , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT ->
 M_MARGINBOTTOM )- _YOFFSET ),  _BCONTFIELDNAME026 )
ENDIF
,
IF ( ( _BCONTFIELDNAME026 = 0 ) )  _BHOLDCONTINUE = _BCONTFIELDNAME027 ,  _FDRAWHEIGHT =
 FIELDNAME027 ( RPT_CALCHEIGHT , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )-
 _YOFFSET ),  _BHOLDCONTINUE ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTFIELDNAME027 = 0 ) )  _RPTSTAT = UAR_RPTLINE ( _HREPORT
, ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),  _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME027 ( RPT_RENDER , (( RPTREPORT -> M_PAGEWIDTH - RPTREPORT ->
 M_MARGINBOTTOM )- _YOFFSET ),  _BCONTFIELDNAME027 )
ENDIF
,
IF ( ( _BCONTFIELDNAME026 = 0 ) AND ( _BCONTFIELDNAME027 = 0 ) )  _FDRAWHEIGHT = FIELDNAME028 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME028 ( RPT_RENDER )
ENDIF
,
IF ( ( _BCONTFIELDNAME026 = 0 ) AND ( _BCONTFIELDNAME027 = 0 ) )  _FDRAWHEIGHT = FIELDNAME029 (
 RPT_CALCHEIGHT ),
IF ( (( _YOFFSET + _FDRAWHEIGHT )>( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )) )
 _RPTSTAT = UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET ),
 CALL PAGEBREAK ( RPT_RENDER ),  OFFSETY = _YOFFSET
ENDIF
,  DUMMY_VAL = FIELDNAME029 ( RPT_RENDER )
ENDIF
, BFIRSTTIME = 0
 
ENDWHILE
 
 WITH  NULLREPORT , NOCOUNTER , MEMSORT
SET  _RPTSTAT  =  UAR_RPTLINE ( _HREPORT , ( OFFSETX + 0.000 ),  _YOFFSET , ( OFFSETX + 10.000 ),
 _YOFFSET )
SET  _DUMMYPEN  =  UAR_RPTSETPEN ( _HREPORT ,  _OLDPEN )
IF ( ( NCALC = RPT_RENDER ) )
SET  _YOFFSET  = ( _YOFFSET + SECTIONHEIGHT )
ENDIF
 
IF ( ( GROWSUM > 0 ) )
SET  BCONTINUE  =  1
ELSE
SET  BCONTINUE  =  0
ENDIF
 RETURN ( SECTIONHEIGHT )
 
 
END ;Subroutine
 
 
SUBROUTINE   INITIALIZEREPORT  ( DUMMY  )
 
IF ( ( _BGENERATEHTML = 1 ) )
SET  _HTMLFILEHANDLE  =  UAR_FOPEN ( NULLTERM ( _SENDTO ), "w+b" )
SET  _HTMLFILESTAT  =  UAR_FWRITE ("<html>" ,  1 ,  6 ,  _HTMLFILEHANDLE )
SET  _VCWRITELN  =  CONCAT ("<head><script language=javascript>  " ,
"function CCLLINK(program,param,nViewerType)" , '  {var sXMLParams = "<params>";' ,
^  sXMLParams += '<param value="' + param + '"  type="N"/>';^ , '  sXMLParams += "</params>";' ,
"  var outputHTML = top.getGeneratedOutputPage(program, 'MINE', sXMLParams, '', '',nViewerType );"
,
"  if (nViewerType != 1 ) {var outputWin = window.open('about:blank', '', 'location=no,menubar=no,"
, "resizable=yes,scrollbars=yes,status=yes,titlebar=yes,toolbar=no');" ,
"  outputWin.document.write( outputHTML );" , "  outputWin.focus();" ,
"  } else{document.write( outputHTML );}  " , "}</script></head>" )
SET  _HTMLFILESTAT  =  UAR_FWRITE ( _VCWRITELN ,  1 ,  TEXTLEN ( _VCWRITELN ),  _HTMLFILEHANDLE )
ELSE
SET  RPTREPORT -> M_RECSIZE  =  100
SET  RPTREPORT -> M_REPORTNAME  = "HIM_MAK_DEFIC_BY_PHYS_DET_LYT"
SET  RPTREPORT -> M_PAGEWIDTH  =  8.50
SET  RPTREPORT -> M_PAGEHEIGHT  =  11.00
SET  RPTREPORT -> M_ORIENTATION  =  RPT_LANDSCAPE
SET  RPTREPORT -> M_MARGINLEFT  =  0.50
SET  RPTREPORT -> M_MARGINRIGHT  =  0.50
SET  RPTREPORT -> M_MARGINTOP  =  0.50
SET  RPTREPORT -> M_MARGINBOTTOM  =  0.50
SET  RPTREPORT -> M_HORZPRINTOFFSET  =  _XSHIFT
SET  RPTREPORT -> M_VERTPRINTOFFSET  =  _YSHIFT
SELECT  INTO "NL:"
 P_PRINTER_TYPE_CDF = UAR_GET_CODE_MEANING (P.PRINTER_TYPE_CD)
FROM ( OUTPUT_DEST  O ),
( DEVICE  D ),
( PRINTER  P )
 PLAN ( O
WHERE ( CNVTUPPER (O.NAME)= CNVTUPPER ( TRIM ( _SENDTO ))))
 AND ( D
WHERE (D.DEVICE_CD=O.DEVICE_CD))
 AND ( P
WHERE (P.DEVICE_CD=D.DEVICE_CD))
 
 
DETAIL
 
CASE (  CNVTINT ( P_PRINTER_TYPE_CDF ) )
 OF  8 :
 OF  26 :
 OF  29 :  _OUTPUTTYPE = RPT_POSTSCRIPT ,
 _XDIV = 72 ,
 _YDIV = 72
 OF  16 :
 OF  20 :
 OF  24 :  _OUTPUTTYPE = RPT_ZEBRA ,
 _XDIV = 203 ,
 _YDIV = 203
 OF  32 :
 OF  18 :
 OF  19 :
 OF  27 :
 OF  31 :  _OUTPUTTYPE = RPT_INTERMEC ,
 _XDIV = 203 ,
 _YDIV = 203
 ELSE  _XDIV = 1 ,
 _YDIV = 1
 ENDCASE
,
 _SENDTO =D.NAME,
 
IF ( ( _XDIV > 1 ) )  RPTREPORT -> M_HORZPRINTOFFSET =( CNVTREAL (O.LABEL_XPOS)/ _XDIV )
ENDIF
,
 
IF ( ( _XDIV > 1 ) )  RPTREPORT -> M_VERTPRINTOFFSET =( CNVTREAL (O.LABEL_YPOS)/ _YDIV )
ENDIF
 
 WITH  NOCOUNTER
SET  _YOFFSET  =  RPTREPORT -> M_MARGINTOP
SET  _XOFFSET  =  RPTREPORT -> M_MARGINLEFT
SET  _HREPORT  =  UAR_RPTCREATEREPORT ( RPTREPORT ,  _OUTPUTTYPE ,  RPT_INCHES )
SET  _RPTERR  =  UAR_RPTSETERRORLEVEL ( _HREPORT ,  RPT_ERROR )
 CALL _CREATEFONTS ( 0 )
 CALL _CREATEPENS ( 0 )
SET  _RPTSTAT  =  UAR_RPTSTARTREPORT ( _HREPORT )
SET  _RPTPAGE  =  UAR_RPTSTARTPAGE ( _HREPORT )
ENDIF
 
END ;Subroutine
 
 
SUBROUTINE   _CREATEFONTS  ( DUMMY  )
 
SET  RPTFONT -> M_RECSIZE  =  50
SET  RPTFONT -> M_FONTNAME  =  RPT_TIMES
SET  RPTFONT -> M_POINTSIZE  =  10
SET  RPTFONT -> M_BOLD  =  RPT_OFF
SET  RPTFONT -> M_ITALIC  =  RPT_OFF
SET  RPTFONT -> M_UNDERLINE  =  RPT_OFF
SET  RPTFONT -> M_STRIKETHROUGH  =  RPT_OFF
SET  RPTFONT -> M_RGBCOLOR  =  RPT_BLACK
SET  _TIMES100  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
SET  RPTFONT -> M_BOLD  =  RPT_ON
SET  RPTFONT -> M_ITALIC  =  RPT_ON
SET  RPTFONT -> M_RGBCOLOR  =  RPT_RED
SET  _TIMES10BI255  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
SET  RPTFONT -> M_POINTSIZE  =  12
SET  RPTFONT -> M_RGBCOLOR  =  UAR_RPTENCODECOLOR ( 0 ,  0 ,  160 )
SET  _TIMES12BI10485760  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
SET  RPTFONT -> M_POINTSIZE  =  10
SET  RPTFONT -> M_ITALIC  =  RPT_OFF
SET  RPTFONT -> M_RGBCOLOR  =  RPT_BLACK
SET  _TIMES10B0  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
SET  RPTFONT -> M_POINTSIZE  =  11
SET  _TIMES11B0  =  UAR_RPTCREATEFONT ( _HREPORT ,  RPTFONT )
 
END ;Subroutine
 
 
SUBROUTINE   _CREATEPENS  ( DUMMY  )
 
SET  RPTPEN -> M_RECSIZE  =  16
SET  RPTPEN -> M_PENWIDTH  =  0.014
SET  RPTPEN -> M_PENSTYLE  =  0
SET  RPTPEN -> M_RGBCOLOR  =  RPT_BLACK
SET  _PEN14S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
SET  RPTPEN -> M_PENWIDTH  =  0.000
SET  _PEN0S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
SET  RPTPEN -> M_PENWIDTH  =  0.015
SET  RPTPEN -> M_PENSTYLE  =  0
SET  RPTPEN -> M_RGBCOLOR  =  RPT_BLACK
SET  _PEN15S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
SET  RPTPEN -> M_PENWIDTH  =  0.025
SET  RPTPEN -> M_PENSTYLE  =  0
SET  RPTPEN -> M_RGBCOLOR  =  RPT_BLACK
SET  _PEN25S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
SET  RPTPEN -> M_PENWIDTH  =  0.020
SET  RPTPEN -> M_PENSTYLE  =  0
SET  RPTPEN -> M_RGBCOLOR  =  RPT_BLACK
SET  _PEN20S0C0  =  UAR_RPTCREATEPEN ( _HREPORT ,  RPTPEN )
 
END ;Subroutine
 
 
SET  _LRETVAL  =  UAR_I18NLOCALIZATIONINIT ( _HI18NHANDLE ,  CURPROG , "" ,  CURCCLREV )
 
 CALL INITIALIZEREPORT ( 0 )
 
IF ( ( _HTMLFILEHANDLE = 0 ) )
SET  _FENDDETAIL  = ( RPTREPORT -> M_PAGEWIDTH - RPTREPORT -> M_MARGINBOTTOM )
SET  BFIRSTTIME  =  1
WHILE (  (( ( _BCONTSECTION = 1 ) )  OR  (( BFIRSTTIME = 1 ) )) )
 
SET  _BHOLDCONTINUE  =  _BCONTSECTION
SET  _FDRAWHEIGHT  =  SECTION ( RPT_CALCHEIGHT , ( _FENDDETAIL - _YOFFSET ),  _BHOLDCONTINUE )
IF ( (( _YOFFSET + _FDRAWHEIGHT )> _FENDDETAIL ) )
 CALL PAGEBREAK ( 0 )
ELSEIF ( ( _BHOLDCONTINUE = 1 ) AND ( _BCONTSECTION = 0 ) )
 CALL PAGEBREAK ( 0 )
ENDIF
 
SET  DUMMY_VAL  =  SECTION ( RPT_RENDER , ( _FENDDETAIL - _YOFFSET ),  _BCONTSECTION )
SET  BFIRSTTIME  =  0
 
ENDWHILE
 
ELSE
 CALL FIELDNAME0HTML ( 0 )
ENDIF
 
 
 CALL FINALIZEREPORT ( _SENDTO )
 END Go
