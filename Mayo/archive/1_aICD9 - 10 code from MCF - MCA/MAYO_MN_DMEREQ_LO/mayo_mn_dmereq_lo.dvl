 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare _CreateRTF(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare __LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare FacilitySection0(nCalc=i2) = f8 with Protect
declare FacilitySection0ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FacAddrSection(nCalc=i2) = f8 with Protect
declare FacAddrSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection0(nCalc=i2) = f8 with Protect
declare LayoutSection0ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare PatientNameSection(nCalc=i2) = f8 with Protect
declare PatientNameSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare AllergySection(nCalc=i2) = f8 with Protect
declare AllergySectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare AllergyNoteSection(nCalc=i2) = f8 with Protect
declare AllergyNoteSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare PatientAddressSection(nCalc=i2) = f8 with Protect
declare PatientAddressSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailHeadSection(nCalc=i2) = f8 with Protect
declare DetailHeadSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OrderDescSection(nCalc=i2) = f8 with Protect
declare OrderDescSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare SeparatorSection(nCalc=i2) = f8 with Protect
declare SeparatorSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OrderDetailSection(nCalc=i2) = f8 with Protect
declare OrderDetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OrderDescSection2(nCalc=i2) = f8 with Protect
declare OrderDescSection2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare OrderDescSection3(nCalc=i2) = f8 with Protect
declare OrderDescSection3ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection(nCalc=i2) = f8 with Protect
declare FootPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageESigSection(nCalc=i2) = f8 with Protect
declare FootPageESigSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection1(nCalc=i2) = f8 with Protect
declare FootPageSection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection2(nCalc=i2) = f8 with Protect
declare FootPageSection2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare FootPageSection3(nCalc=i2) = f8 with Protect
declare FootPageSection3ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare ControledSubSection(nCalc=i2) = f8 with Protect
declare ControledSubSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare WatermarkSection(nCalc=i2) = f8 with Protect
declare WatermarkSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _RemFieldSigName = i4 with NoConstant(1),protect
declare _hRTF_FieldSigName = i4 with NoConstant(0),protect
declare _RemFieldPrescribedBy = i4 with NoConstant(1),protect
declare _hRTF_FieldPrescribedBy = i4 with NoConstant(0),protect
declare _Times8B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times12B0 = i4 with NoConstant(0),protect
declare _Times14B0 = i4 with NoConstant(0),protect
declare _Times120 = i4 with NoConstant(0),protect
declare _Times1612632256 = i4 with NoConstant(0),protect
declare _pen14S2C0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
 
call __LayoutQuery(0)
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine __LayoutQuery(dummy)
SELECT
FROM
	(dummyt   d  with seq=value(tprint_req->job_knt))
 
plan d where tprint_req->job[d.seq]->output_dest_cd < 1
 
ORDER BY
	d.seq
 
 
 
Head Report
	_d0 = d.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageHeight-RptReport->m_marginBottom
_fEndDetail = _fEndDetail-FootPageSection(RPT_CALCHEIGHT)
 
 
Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = FacilitySection0(RPT_RENDER)
 
/****** YOUR CODE BEGINS HERE ******/
    if (tprint_req->job[d.seq]->phys_addr1 > " ") ;035 Beg
        req_addr_line = tprint_req->job[d.seq]->phys_addr1
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
    if (tprint_req->job[d.seq]->phys_addr2 > " ")
        req_addr_line = tprint_req->job[d.seq]->phys_addr2
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
 
    if (tprint_req->job[d.seq]->phys_addr3 > " ")
        req_addr_line = tprint_req->job[d.seq]->phys_addr3
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
 
    if (tprint_req->job[d.seq]->phys_city > " ")
        req_addr_line = tprint_req->job[d.seq]->phys_city
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
 
    if (tprint_req->job[d.seq]->phys_addr4 > " ")
        req_addr_line = tprint_req->job[d.seq]->phys_addr4
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
;;;
;;; 	;035 Beg Need to Add Physician Phone
 	if (tprint_req->job[d.seq]->phys_phone > " ")
        req_addr_line = tprint_req->job[d.seq]->phys_phone
        dummy_val = FacAddrSection(RPT_RENDER)
    endif
 
; add a couple of blank lines before next section
        req_addr_line = ""
        dummy_val = FacAddrSection(RPT_RENDER)
        req_addr_line = ""
        dummy_val = FacAddrSection(RPT_RENDER)
/*----- YOUR CODE ENDS HERE -----*/
 
 
dummy_val = PatientNameSection(RPT_RENDER)
 
/****** YOUR CODE BEGINS HERE ******/
call echo ("Code segment3 - allergies")
 
    if (demo_info->allergy_knt > 0)
        for (x = 1 to demo_info->allergy_knt)
            if (x < 4)  ;*** Max of 3 lines printed
 
              dummy_val = AllergySection(RPT_RENDER)
 
            endif
        endfor
    else
       x = 0
       dummy_val = AllergySection(RPT_RENDER)
    endif
/*----- YOUR CODE ENDS HERE -----*/
 
 
dummy_val = AllergyNoteSection(RPT_RENDER)
 
/****** YOUR CODE BEGINS HERE ******/
;;;    ;*** address
      add_label =  "Patient Address:"
	  address =  demo_info->pat_addr
      Phone_label =  "Home Phone:"
      phone =  demo_info->pat_hphone
        dummy_val = PatientAddressSection(RPT_RENDER)
 
      add_label =  ""
	  address = demo_info->pat_city
      Phone_label =  "Work Phone:"
      phone =  demo_info->pat_wphone
        dummy_val = PatientAddressSection(RPT_RENDER)
 
 
 
 
        detail_head = "Prescription Details:"
;    detail_head = "TEST"
    detail_date = concat("Date Issued: ",tprint_req->job[d.seq]->phys_ord_dt)
        dummy_val = DetailHeadSection(RPT_RENDER)
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Head d.seq
 
/****** YOUR CODE BEGINS HERE ******/
    forced_page_break = 0
	Sig_section_size = 0.0
	 Sig_section_size = Sig_section_size +  FootPageSection1(RPT_CalcHeight)
	 Sig_section_size = Sig_section_size +  FootPageSection2(RPT_CalcHeight)
	 Sig_section_size = Sig_section_size +  FootPageSection3(RPT_CalcHeight)
 
    if (tprint_req->job[d.seq]->sup_phys_bname > " ")
	 Sig_section_size = Sig_section_size +  FootPageSection3(RPT_CalcHeight)
 
;;;                   if (tprint_req->job[d.seq]->sup_phys_npi > " ")
;;;                       	Prescribed_by = build2(_rtfstart,
;;;    	                     "         NPI #:  ",
;;;    	                     " ",
;;;    	                     tprint_req->job[d.seq]->sup_phys_npi,
;;;    	                     " ",
;;;
;;;    	                      " ",
;;;    	                      _rtfend)
;;;					         dummy_val = FootPageSection3(RPT_RENDER)
;;;
;;;                endif
 
    endif
    if (tprint_req->job[d.seq]->eprsnl_ind = TRUE)
	 Sig_section_size = Sig_section_size +  FootPageSection3(RPT_CalcHeight)
    endif
 
	 Sig_section_size = Sig_section_size +  FootPageESigSection(RPT_CalcHeight)
	 Sig_section_size = Sig_section_size +  FootPageSection1(RPT_CalcHeight)
	 Sig_section_size = Sig_section_size +  FootPageSection2(RPT_CalcHeight)
 
 		if (stamp_dea = TRUE)
			 Sig_section_size = Sig_section_size +  FootPageSection3(RPT_CalcHeight)
    	endif
 
    if (stamp_att = TRUE)
			 Sig_section_size = Sig_section_size +  controledSubSection(RPT_CalcHeight)
    endif
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Detail
 
/****** YOUR CODE BEGINS HERE ******/
  for (j = 1 to tprint_req->job[d.seq]->req_knt)
 
		_fDrawHeight = 0.0
 
       if (tprint_req->job[d.seq]->req[j]->med_knt > 0)
; will it fit
; calculate section height
        for (dsp_cnt = 1 to tprint_req->job[d.seq]->req[j]->med_knt)
            _fDrawHeight = _fDrawHeight + OrderDescSection(RPT_CalcHeight)
        endfor
        ;keep together with next line so there is more than 1 line printed
		endif
 
	    if (tprint_req->job[d.seq].req[j].clin_disp_cnt > 0)
	      for (dsp_cnt = 1 to tprint_req->job[d.seq].req[j].clin_disp_cnt)
	            _fDrawHeight = _fDrawHeight + OrderDescSection2(RPT_CalcHeight)
	        endfor
	    endif
 
 
 
        if (tprint_req->job[d.seq]->req[1]->diag_knt > 0)  ; check the first one that is the only one being filled out
 
	        for (dsp_cnt = 1 to tprint_req->job[d.seq]->req[1]->diag_knt)
	            _fDrawHeight = _fDrawHeight + OrderDescSection(RPT_CalcHeight)
	        endfor
		endif
			; break if bottom of page exceeded
 
		if (_YOffset+_fDrawHeight  >_fEndDetail - Sig_section_size)
;			 dummy_val = ScriptContinuedSection(RPT_RENDER)
			    temp_YOffset = _YOffset
			    forced_page_break = 1
				break
		endif
        forced_page_break = 0
 
 
;Start printing........................................
 
 
 
 
 
 
 
 
 
       if (tprint_req->job[d.seq]->req[j]->med_knt > 0)
        for (med_cnt = 1 to tprint_req->job[d.seq]->req[j]->med_knt)
;;        call echo(build("x = ",x))
;;        call echo(build("d.seq = ",d.seq))
;;        call echo(build("j = ",j))
;;        if (_YOffset+_fDrawHeight  >_fEndDetail - Sig_section_size)
;;		    call echo("break in med name........................")
;;;			 dummy_val = ScriptContinuedSection(RPT_RENDER)
;;		    temp_YOffset = _YOffset
;;			break
;;		endif
;        call echo(build("med_cnt = ",med_cnt))
 
			ord_desc = ""
            if (med_cnt = 1)
                 ord_desc = "Rx: "
            else
                 ord_desc = "    "
 
            endif
            ord_desc = concat(ord_desc,
                              " ",
                               trim(tprint_req->job[d.seq]->req[j]->med[med_cnt]->disp))
 
            dummy_val = OrderDescSection(RPT_RENDER)
        endfor
        endif
;;;    ; call echo("3800")
    if (tprint_req->job[d.seq].req[j].clin_disp_cnt > 0)
      for (dsp_cnt = 1 to tprint_req->job[d.seq].req[j].clin_disp_cnt)
 
 
 
          ord_desc2 =  tprint_req->job[d.seq].req[j].clin_disp[dsp_cnt].disp
          dummy_val = OrderDescSection2(RPT_RENDER)
 
      endfor
    endif
 
        if (tprint_req->job[d.seq]->req[1]->diag_knt > 0)  ; check the first record - It is the only one filled out
 
 
 
 
            for (dsp_cnt = 1 to tprint_req->job[d.seq]->req[j]->diag_knt)
 
 
                if (dsp_cnt = 1)
                    detail_label = "Diagnosis:"
                else
                    detail_label = ""
                endif
                 detail_text = tprint_req->job[d.seq]->req[j]->diag[dsp_cnt]->disp
 
 				 dummy_val = OrderDetailSection(RPT_RENDER)
 				 ;?????
; 				 _oldFont = uar_rptSetFont(_hReport, _Times100)
 
            endfor
        endif
 
;;;
;;;        ;*** do sig
;;;        if (req_fit = FALSE and break_field = "SIG")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb} page ",
;;;                "prescription ---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;        if (tprint_req->job[d.seq]->req[j]->sig_knt > 0)
;
;            for (x = 1 to tprint_req->job[d.seq]->req[j]->sig_knt)
;
;;;                if (x = 1)
;                    dummy_val = dummy_val
;;;                    call print(calcpos(x_pos,y_pos)) "SIG:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->sig[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->sig[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;           endfor
;        endif
;;;
;;;        ;*** do dispense
;;;        if (req_fit = FALSE and break_field = "DISPENSE")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->dispense_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->dispense_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Dispense/Supply:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->dispense[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->dispense[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;        ;*** do dispense duration
;;;        ;BEGIN MOD 001
;;;        if (req_fit = FALSE and break_field = "DISPENSE_DURATION")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->dispense_duration_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->dispense_duration_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Dispense/Supply:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->dispense_duration[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->dispense_duration[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;        ;END MOD 001
;;;
;;;        ;*** do refill
;;;        if (req_fit = FALSE and break_field = "REFILL")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->refill_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->refill_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Refill:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->refill[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->refill[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;        ;*** do special
;;;        if (req_fit = FALSE and break_field = "SPECIAL")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->special_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->special_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Instructions:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->special[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->special[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;        ;*** do prn
;;;        if (req_fit = FALSE and break_field = "PRN")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->prn_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->prn_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "PRN Instructions:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->prn[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->prn[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;        ;*** do indic
;;;        if (req_fit = FALSE and break_field = "INDIC")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->indic_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->indic_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Indications:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->indic[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->indic[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;        ;*** do comment
;;;        if (req_fit = FALSE and break_field = "COMMENT")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->comment_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->comment_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Comments:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->comment[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->comment[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;;
;;;
;;; 		;035 Beg **** do Diagnosis
;;; 		if (req_fit = FALSE and break_field = "DIAGNOSIS")
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}FIRST{endb} page of a {b}2{endb}",
;;;                                          " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            print_footer
;;;            break
;;;
;;;            is_last_page = TRUE
;;;            print_page_frame
;;;            clean_frame = FALSE
;;;        endif
;;;
;;;        if (tprint_req->job[d.seq]->req[j]->diag_knt > 0)
;;;
;;;            for (x = 1 to tprint_req->job[d.seq]->req[j]->diag_knt)
;;;
;;;                if (x = 1)
;;;                    x_pos = d_pos
;;;                    call print(calcpos(x_pos,y_pos)) "Diagnosis:"
;;;                    row + 1
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->diag[x]->disp,"{endb}"
;;;                else
;;;                    x_pos = rx_detail_pos
;;;                    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->req[j]->diag[x]->disp,"{endb}"
;;;                endif
;;;
;;;                row + 1
;;;                y_pos = y_pos + 2_line
;;;                current_row_knt = current_row_knt + 1
;;;            endfor
;;;        endif
;;; 		;035 End
;;;
;          ord_detail3 = fillstring(127,"-")
;          ord_desc2 =  tprint_req->job[d.seq].req[j].clin_disp[x].disp
;          dummy_val = OrderDescSection3(RPT_RENDER)
          dummy_val = SeparatorSection(RPT_RENDER)
 
;;;        x_pos = b_pos + 5
;;;        call print(calcpos(x_pos,y_pos)) sep_line
;;;        row + 1
;;;        y_pos = y_pos + 2_line
;;;        current_row_knt = current_row_knt + 1
;;;
;;;        if (is_last_page = TRUE)
;;;            x_pos = d_pos
;;;            call print(calcpos(x_pos,y_pos)) "***--- Note: This is the {b}LAST{endb} page of a {b}2{endb}",
;;;                                             " page prescription---***"
;;;            row + 1
;;;            y_pos = y_pos + 2_line
;;;            is_last_page = FALSE
;;;        endif
;;;    endif
 
endfor
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Foot d.seq
 
/****** YOUR CODE BEGINS HERE ******/
 
 
/****** YOUR CODE BEGINS HERE ******/
;; FOOT D.SEQ CODE SEGMENT
	    temp_YOffset = _YOffset
 
   if (d.seq < size(tprint_req->job,5))
 
      break
   endif
/*----- YOUR CODE ENDS HERE -----*/
/*----- YOUR CODE ENDS HERE -----*/
 
 
 
Foot Page
_YHold = _YOffset
_YOffset = _fEndDetail
 
/****** YOUR CODE BEGINS HERE ******/
;; FOOT PAGE CODE SEGMENT1
;END OF PAGE
;;;    x_pos = j_pos
    call echo (build("d.seq = ", d.seq))
 
    call echo (build("csa_group =", tprint_req->job[d.seq].csa_group))
    dea_name = ""
    _YOffset = temp_YOffset
 
 
           sig_name =  "X"
           ;build2(_rtfstart," THIS IS ",_rtfbold," BOLD ",_rtfboldend,"text.",_rtfend)
           			  ;build2(_rtfstart," This is some ",_rtfbold," bold",_rtfboldend," text.",_rtfend)
           sig_underline = 1
 
          dummy_val = FootPageSection1(RPT_RENDER)
 
 
 
        sig_desc = "PROVIDER SIGNATURE"
         dummy_val = FootPageSection2(RPT_RENDER)
 
/*
        else
        sig_desc = "SUBSTITUTION PERMITTED"
         dummy_val = FootPageSection2(RPT_RENDER)
 
;;;
;;;
;;;                 ;*** Substitution Permitted
        endif
*/
        Prescribed_by = ""
        dea_name = ""
 		if (stamp_dea = TRUE)
 
;;;	        x_pos = k_pos
	        if (tprint_req->job[d.seq]->phys_dea > " ")
				dea_name = concat("DEA #:  ",tprint_req->job[d.seq]->phys_dea)
			else
				dea_name = "DEA #:  _______________"
 
	        endif
 
;;;	        row + 1
    	endif
;;;;    endif
    	Prescribed_by = build2(_rtfstart,
    	                     " Prescribed by: ",
    	                     _rtfbold,
    	                     " ",
    	                     tprint_req->job[d.seq]->phys_bname,
    	                     " ",
    	                     _rtfboldend,
 
    	                      "  NPI#: ",
    	                      tprint_req->job[d.seq]->phys_npi,
    	                      " ",
    	                      _rtfend)
					 if (stamp_dea = TRUE)
 
			        if (tprint_req->job[d.seq]->phys_dea > " ")
						dea_name = concat("DEA #:  ",tprint_req->job[d.seq]->phys_dea)
					else
						dea_name = "DEA #:  _______________"
 
			        endif
			        endif
	         dummy_val = FootPageSection3(RPT_RENDER)
			dea_name = ""
 
 
 
 
 
;;;
;;;        row + 1
;;;    endif
;;;
;;;
;;;    y_pos = y_pos + 3_line
;;;    x_pos = c_pos
;;;    ;026 Beg call print(calcpos(x_pos,y_pos)) "Prescribed by: {b}",tprint_req->job[d.seq]->phys_bname,"{endb}"
;;;    call print(calcpos(x_pos,y_pos)) "Prescribed by: {b}",tprint_req->job[d.seq]->phys_bname,"{endb}",
;;;    	"   ", "NPI#: " tprint_req->job[d.seq]->phys_npi ;026 End
;;;    row+1
;;;
;;;/
;;;
;;;
;;;    ;MOD 003 Start - Writes the Supervising Physician field if sup_phys_bname is populated
;;;
;?????? need to bold physician name!!!!!!!!!
    if (tprint_req->job[d.seq]->sup_phys_bname > " ")
    	Prescribed_by = build2(_rtfstart,
    	                     " Supervising Physician: ",
    	                     _rtfbold,
    	                     " ",
    	                     tprint_req->job[d.seq]->sup_phys_bname,
    	                     " ",
    	                     _rtfboldend,
 
    	                      " ",
    	                      _rtfend)
					 if (stamp_dea = TRUE)
 
			        if (tprint_req->job[d.seq]->sup_phys_dea  > " ")
						dea_name = concat("DEA #:  ",tprint_req->job[d.seq]->sup_phys_dea )
					else
						dea_name = "DEA #:  _______________"
 
			        endif
			        endif
 
	         dummy_val = FootPageSection3(RPT_RENDER)
			dea_name = ""
 
;;;        x_pos = c_pos
;;;        y_pos = y_pos + 3_line
;;;        call print(calcpos(x_pos,y_pos)) "Supervising Physician: {b}",tprint_req->job[d.seq]->sup_phys_bname,"{endb}"
;;;        row+1
;;;
;;;
;;;
;;;
;;;
;;;            /*** start 028 ***/
                   if (tprint_req->job[d.seq]->sup_phys_npi > " ")
                       	Prescribed_by = build2(_rtfstart,
    	                     "         NPI #:  ",
;    	                     _rtfbold,
    	                     " ",
    	                     tprint_req->job[d.seq]->sup_phys_npi,
    	                     " ",
 ;   	                     _rtfboldend,
 
    	                      " ",
    	                      _rtfend)
;;;                        y_pos = y_pos + 2_line
;;;                        x_pos = j_pos + 8
;;;                        call print(calcpos(x_pos,y_pos))"NPI #:  ",tprint_req->job[d.seq]->sup_phys_npi
;;;                        row + 1
					         dummy_val = FootPageSection3(RPT_RENDER)
 
                endif
                /*** end 028 ***/
 
    endif
;;;    ;MOD 003 Stop
;;;
 
 
 
 
 
    if (tprint_req->job[d.seq]->eprsnl_ind = TRUE)
    	Prescribed_by = build2(_rtfstart,
    	                     " Entered by: ",
    	                     _rtfbold,
    	                     " ",
    	                     tprint_req->job[d.seq]->eprsnl_bname,
    	                     " ",
    	                     _rtfboldend,
 
    	                      " ",
    	                      _rtfend)
 
	         dummy_val = FootPageSection3(RPT_RENDER)
			dea_name = ""
 
;;;        y_pos = y_pos + 2_line
;;;        x_pos = c_pos
;;;        call print(calcpos(x_pos,y_pos)) "Entered by: {b}",tprint_req->job[d.seq]->eprsnl_bname,"{endb}"
;;;        row+1
    endif
 
 
 
 
           esig_name =   build2(_rtfstart,
    	                     " ",
    	                     _rtfbold,
    	                     " ",
    	                     tprint_req->job[d.seq]->phys_bname,
    	                     " ",
    	                     _rtfboldend,
 
    	                      " ",
    	                      " (E-Sig.)",
 	  	                      " ",
     	                      _rtfend)
 
 
           sig_underline = 1
          dummy_val = FootPageESigSection(RPT_RENDER)
 
           sig_name =  tprint_req->job[d.seq]->phys_sign_dt_tm
           sig_underline = 0
           sig_bold = 1
          dummy_val = FootPageSection1(RPT_RENDER)
           sig_bold = 0
;;;        x_pos = j_pos
;;;	    y_pos = y_pos + 2_5_line
;;;        call print(calcpos(x_pos,y_pos-3)) "{b}",tprint_req->job[d.seq]->phys_bname," {endb} (E-Sig.)"
;;;        row + 1
;;;	    call print(calcpos(x_pos,y_pos)) "{b}",signature_line,"{endb}"
;;;    	row + 1
;;;	    y_pos = y_pos + 2_line  ;045
;;;	    x_pos = j_pos    ;045
;;;	    call print(calcpos(x_pos,y_pos)) "{b}",tprint_req->job[d.seq]->phys_sign_dt_tm,"{endb}";045
;;;    	row + 1	;045
;;;
;;;    	row + 1
;;;	    y_pos = y_pos + 2_line
;;;	    x_pos = j_pos + 30
	    if (tprint_req->job[d.seq]->daw > 0)
	            sig_desc = "DISPENSE AS WRITTEN"
         dummy_val = FootPageSection2(RPT_RENDER)
		else
		        sig_desc = "SUBSTITUTION PERMITTED"
         dummy_val = FootPageSection2(RPT_RENDER)
	    endif
;;;	      call print(calcpos(x_pos,y_pos)) "{b}DISPENSE AS WRITTEN{endb}"
;;;	    else
;;;	      call print(calcpos(x_pos,y_pos)) "{b}SUBSTITUTION PERMITTED{endb}"
;;;	    endif
;;;	    row + 1
 		if (stamp_dea = TRUE)
	        if (tprint_req->job[d.seq]->phys_dea > " ")
 				dea_name = concat("DEA #:  ",tprint_req->job[d.seq]->phys_dea)
			else
;				dea_name = "DEA #:  _______________"
				dea_name = "DEA3 #:  _______________"
			endif
			Prescribed_by = ""
	         dummy_val = FootPageSection3(RPT_RENDER)
			dea_name = ""
 
;;;	        x_pos = k_pos
;;;	        if (tprint_req->job[d.seq]->phys_dea > " ")
;;;	            call print(calcpos(x_pos,y_pos+ 3_line))"DEA #:  ",tprint_req->job[d.seq]->phys_dea
;;;	        else
;;;	            call print(calcpos(x_pos,y_pos+ 3_line))"DEA #:  _______________"
;;;	        endif
;;;	        row + 1
    	endif
;     endif
;;; 	;MOD 40 stop
;;;
    if (stamp_att = TRUE)
			Prescribed_by = ""
	         dummy_val = controledSubSection(RPT_RENDER)
 
 
;;;        y_pos = y_pos + 2_line
;;;        x_pos = f_pos + 20
;;;        call print(calcpos(x_pos,y_pos)) "{cpi/16}{b}ATTENTION: THIS RX NOT VALID FOR CONTROLLED SUBSTANCES{endb}{cpi/12}"
;;;        row + 1
    endif
;;;
 
    _YOffset = temp_YOffset
 
;FILL OUT THE RESET OF THE PAGE WITH BORDER
	while ( _YOffset < _fEndDetail)
; call echo(" fillingout reset of page")
;           ord_detail3 = ""
;          ord_detail4 = ""
;          ord_desc2 =  tprint_req->job[d.seq].req[j].clin_disp[x].disp
;          dummy_val = OrderDescSection3(RPT_RENDER)
 
          dummy_val = OrderDescSection3(RPT_RENDER)
 
 
	endwhile
/*----- YOUR CODE ENDS HERE -----*/
 
 
dummy_val = FootPageSection(RPT_RENDER)
 
/****** YOUR CODE BEGINS HERE ******/
;; FOOT PAGE CODE SEGMENT2
 
IF (Print_watermark = 1)
 
   		temp_YOffset = _YOffset
		temp_XOffset = _XOffset
 
		 _YOffset = RptReport->m_marginTop
		 _XOffset = RptReport->m_marginLeft + 0.5
        eop = 0
 
      eop = _XOffset + WatermarkSection(rpt_calcheight)
      cnt2 = 0
w_cnt = 0
for (w_cnt = 1 to 10)
;   while  (eop < _fEndDetail)
      cnt2 = cnt2 + 1
 
      dummy_val = WatermarkSection(RPT_RENDER)
      eop = _XOffset +  WatermarkSection(rpt_calcheight)
      if (cnt2 = 100)
      	eop = _fEndDetail  ; force break
      endif
;   endwhile
endfor
 
 		_YOffset = temp_YOffset
		_XOffset = temp_XOffset
endif
/*----- YOUR CODE ENDS HERE -----*/
 
 
_YOffset = _YHold
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
end ;__LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted,DIO=value(_DIOTYPE)
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine FacilitySection0(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FacilitySection0ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FacilitySection0(nCalc)
 
subroutine FacilitySection0ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.440000), private
declare __FIELDNAME0 = vc with NoConstant(build2(tprint_req->job[d.seq]->phys_site,char(0))),protect
declare __FIELDNAME1 = vc with NoConstant(build2(tprint_req->job [d.seq].phys_facility,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.250
set _oldFont = uar_rptSetFont(_hReport, _Times14B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME0)
set RptSD->m_y = OffsetY + 0.188
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.250
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME1)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FacilitySection0ABS(nCalc,OffsetX,OffsetY)
 
subroutine FacAddrSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FacAddrSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FacAddrSection(nCalc)
 
subroutine FacAddrSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.170000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 7.500
set RptSD->m_height = 0.177
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(req_addr_line,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FacAddrSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection0(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection0ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection0(nCalc)
 
subroutine LayoutSection0ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
declare __PAT_BDATE = vc with NoConstant(build2(demo_info->pat_bday,char(0))),protect
declare __PAT_AGE8 = vc with NoConstant(build2(demo_info->pat_age,char(0))),protect
declare __PAT_SEX = vc with NoConstant(build2(demo_info->pat_sex,char(0))),protect
declare __PAT_WEIGHT = vc with NoConstant(build2(demo_info->pat_weight,char(0))),protect
declare __FIELDNAME7 = vc with NoConstant(build2(demo_info->pat_name,char(0))),protect
declare __PAT_MRN = vc with NoConstant(build2(tprint_req->job[d.seq]->mrn,char(0))),protect
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW RECTANGLE --- FieldName1
set _rptStat = uar_rptRect ( _hReport, OffsetX+0.000, OffsetY+0.000, 7.500, 0.260, RPT_NOFILL, RPT_WHITE)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.063
set RptSD->m_height = 0.219
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Name:",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 2.375
set RptSD->m_width = 0.313
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Age:",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 3.500
set RptSD->m_width = 0.250
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Sex:",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 5.750
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.688
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_bdate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_BDATE)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_age8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_AGE8)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 3.813
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_sex
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_SEX)
; DRAW LINE --- FieldName13
set _rptStat = uar_rptLine( _hReport,OffsetX+7.490,OffsetY+ 0.250,OffsetX+7.490, OffsetY+0.510)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.625
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Birthdate:",char(0)))
; DRAW LINE --- FieldName11
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.469,OffsetX+7.500, OffsetY+0.469)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 4.438
set RptSD->m_width = 0.438
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Weight:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 0.500
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_weight
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_WEIGHT)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 6.313
set RptSD->m_height = 0.250
set _DummyFont = uar_rptSetFont(_hReport, _Times12B0)
; DRAW TEXT --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME7)
; DRAW LINE --- FieldName8
set _rptStat = uar_rptLine( _hReport,OffsetX+-0.010,OffsetY+ 0.250,OffsetX+-0.010, OffsetY+0.510)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 6.125
set RptSD->m_width = 1.313
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- pat_mrn
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_MRN)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection0ABS(nCalc,OffsetX,OffsetY)
 
subroutine PatientNameSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PatientNameSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PatientNameSection(nCalc)
 
subroutine PatientNameSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
declare __FIELDNAME2 = vc with NoConstant(build2(demo_info->pat_name,char(0))),protect
declare __PAT_BDATE = vc with NoConstant(build2(demo_info->pat_bday,char(0))),protect
declare __PAT_AGE8 = vc with NoConstant(build2(demo_info->pat_age,char(0))),protect
declare __PAT_SEX = vc with NoConstant(build2(demo_info->pat_sex,char(0))),protect
declare __PAT_MRN = vc with NoConstant(build2(tprint_req->job[d.seq]->mrn,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.250
set RptSD->m_height = 0.219
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient Name:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.188
set RptSD->m_width = 6.250
set RptSD->m_height = 0.219
set _DummyFont = uar_rptSetFont(_hReport, _Times100)
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME2)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 2.625
set RptSD->m_width = 0.313
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Age:",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 4.063
set RptSD->m_width = 0.250
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Sex:",char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 5.750
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("MRN:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.688
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_bdate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_BDATE)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 2.938
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_age8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_AGE8)
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 4.375
set RptSD->m_width = 0.750
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_sex
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_SEX)
; DRAW LINE --- FieldName13
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.250,OffsetX+7.500, OffsetY+0.510)
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.625
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Birthdate:",char(0)))
; DRAW LINE --- FieldName11
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.469,OffsetX+7.500, OffsetY+0.469)
; DRAW LINE --- FieldName8
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.250,OffsetX+0.000, OffsetY+0.510)
; DRAW RECTANGLE --- FieldName1
set _rptStat = uar_rptRect ( _hReport, OffsetX+0.000, OffsetY+0.000, 7.500, 0.260, RPT_NOFILL, RPT_WHITE)
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 6.125
set RptSD->m_width = 1.313
set RptSD->m_height = 0.260
; DRAW TEXT --- pat_mrn
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __PAT_MRN)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PatientNameSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine AllergySection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(AllergySectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine AllergySection(nCalc)
 
subroutine AllergySectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
declare __FIELDNAME2 = vc with NoConstant(build2(demo_info->allergy[x]->disp,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (x < 2)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Allergies: ",char(0)))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.260)
; DRAW LINE --- FieldName1
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.260)
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.688
set RptSD->m_width = 6.750
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME2)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine AllergySectionABS(nCalc,OffsetX,OffsetY)
 
subroutine AllergyNoteSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(AllergyNoteSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine AllergyNoteSection(nCalc)
 
subroutine AllergyNoteSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.290000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.375
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- LblPharmNote
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Pharmacist please note--Allergy list may be incomplete.",char(0)))
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.260)
; DRAW LINE --- FieldName1
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.260)
; DRAW LINE --- FieldName11
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.261,OffsetX+7.500, OffsetY+0.261)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine AllergyNoteSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine PatientAddressSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(PatientAddressSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine PatientAddressSection(nCalc)
 
subroutine PatientAddressSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.000
set RptSD->m_height = 0.188
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldAddressLabel
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Add_label,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.125
set RptSD->m_width = 4.375
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldAddress
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(address,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.563
set RptSD->m_width = 0.813
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldPhoneLabel
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(phone_label,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.438
set RptSD->m_width = 1.063
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldPhoneNbr
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(phone,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine PatientAddressSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailHeadSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailHeadSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailHeadSection(nCalc)
 
subroutine DetailHeadSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.500000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 5.438
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldDetailHead
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Detail_head,char(0)))
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 5.563
set RptSD->m_width = 1.875
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldDetailDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(detail_date,char(0)))
; DRAW RECTANGLE --- PrescriptionDetailBox
set _rptStat = uar_rptRect ( _hReport, OffsetX+0.000, OffsetY+0.250, 7.500, 0.260, RPT_NOFILL, RPT_WHITE)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailHeadSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine OrderDescSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(OrderDescSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine OrderDescSection(nCalc)
 
subroutine OrderDescSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.200000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.375
set RptSD->m_height = 0.208
set _oldFont = uar_rptSetFont(_hReport, _Times12B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(ord_desc,char(0)))
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.208)
; DRAW LINE --- FieldName1
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.208)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine OrderDescSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine SeparatorSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(SeparatorSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine SeparatorSection(nCalc)
 
subroutine SeparatorSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.130000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.125)
; DRAW LINE --- FieldName1
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.125)
set _DummyPen = uar_rptSetPen(_hReport,_pen14S2C0)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.063,OffsetY+ 0.063,OffsetX+4.188, OffsetY+0.063)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine SeparatorSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine OrderDetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(OrderDetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine OrderDetailSection(nCalc)
 
subroutine OrderDetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.170000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.188
set RptSD->m_width = 1.063
set RptSD->m_height = 0.177
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldDetailLabel
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Detail_label,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.188
set RptSD->m_width = 6.188
set RptSD->m_height = 0.177
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW TEXT --- FieldDetailText
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Detail_text,char(0)))
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.177)
; DRAW LINE --- FieldName5
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.177)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine OrderDetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine OrderDescSection2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(OrderDescSection2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine OrderDescSection2(nCalc)
 
subroutine OrderDescSection2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.200000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.188
set RptSD->m_width = 7.250
set RptSD->m_height = 0.208
set _oldFont = uar_rptSetFont(_hReport, _Times120)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(ord_desc2,char(0)))
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.208)
; DRAW LINE --- FieldName1
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.208)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine OrderDescSection2ABS(nCalc,OffsetX,OffsetY)
 
subroutine OrderDescSection3(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(OrderDescSection3ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine OrderDescSection3(nCalc)
 
subroutine OrderDescSection3ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.260)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.260)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine OrderDescSection3ABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection(nCalc)
 
subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.130000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.125)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.125)
; DRAW LINE --- FieldName11
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.120,OffsetX+7.500, OffsetY+0.120)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageESigSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageESigSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageESigSection(nCalc)
 
subroutine FootPageESigSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW RTF --- FieldSigName
if (_hRTF_FieldSigName = 0)
	set _hRTF_FieldSigName = uar_rptCreateRtf (_hReport,build2(eSig_name,char(0)),3.438)
endif
set _fDrawHeight = 0.260
set _rptStat = uar_rptRtfDraw (_hReport,_hRTF_FieldSigName,OffsetX+4.000,OffsetY+ 0.000,_fDrawHeight)
if (_rptStat != RPT_CONTINUE)
	set _rptStat = uar_rptDestroyRtf (_hReport,_hRTF_FieldSigName)
	set _hRTF_FieldSigName = 0
endif
 
/****** YOUR CODE BEGINS HERE ******/
if (sig_underline = 1)
; DRAW LINE --- FieldName2
set _rptStat = uar_rptLine( _hReport,OffsetX+4.000,OffsetY+ 0.229,OffsetX+7.438, OffsetY+0.229)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.260)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.260)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageESigSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection1(nCalc)
 
subroutine FootPageSection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (sig_bold = 1)
	set _fntCond = _Times10B0
else
	set _fntCond = _Times100
endif
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 3.438
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _fntCond)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldSigName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Sig_name,char(0)))
 
/****** YOUR CODE BEGINS HERE ******/
if (sig_underline = 1)
; DRAW LINE --- FieldName2
set _rptStat = uar_rptLine( _hReport,OffsetX+4.000,OffsetY+ 0.229,OffsetX+7.438, OffsetY+0.229)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.260)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.260)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSection2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection2(nCalc)
 
subroutine FootPageSection2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.188)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.188)
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.063
set RptSD->m_width = 3.240
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldSignatureDesc
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(sig_desc,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSection2ABS(nCalc,OffsetX,OffsetY)
 
subroutine FootPageSection3(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(FootPageSection3ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine FootPageSection3(nCalc)
 
subroutine FootPageSection3ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.188)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.188)
; DRAW RTF --- FieldPrescribedBy
if (_hRTF_FieldPrescribedBy = 0)
	set _hRTF_FieldPrescribedBy = uar_rptCreateRtf (_hReport,build2(Prescribed_by,char(0)),4.688)
endif
set _fDrawHeight = 0.188
set _rptStat = uar_rptRtfDraw (_hReport,_hRTF_FieldPrescribedBy,OffsetX+0.063,OffsetY+ 0.000,_fDrawHeight)
if (_rptStat != RPT_CONTINUE)
	set _rptStat = uar_rptDestroyRtf (_hReport,_hRTF_FieldPrescribedBy)
	set _hRTF_FieldPrescribedBy = 0
endif
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.375
set RptSD->m_width = 1.052
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldDeaText
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(Dea_name,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine FootPageSection3ABS(nCalc,OffsetX,OffsetY)
 
subroutine ControledSubSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(ControledSubSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine ControledSubSection(nCalc)
 
subroutine ControledSubSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.190000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName12
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.000,OffsetX+0.000, OffsetY+0.188)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+7.500,OffsetY+ 0.000,OffsetX+7.500, OffsetY+0.188)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 7.375
set RptSD->m_height = 0.188
set _oldFont = uar_rptSetFont(_hReport, _Times8B0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("ATTENTION: THIS RX NOT VALID FOR CONTROLLED SUBSTANCES",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine ControledSubSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine WatermarkSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(WatermarkSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine WatermarkSection(nCalc)
 
subroutine WatermarkSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.970000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 45
set RptSD->m_y = OffsetY + 0.563
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.125
set RptSD->m_height = 0.344
set _oldFont = uar_rptSetFont(_hReport, _Times1612632256)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Invalid Prescription",char(0)))
set RptSD->m_y = OffsetY + 0.625
set RptSD->m_x = OffsetX + 3.500
set RptSD->m_width = 3.188
set RptSD->m_height = 0.344
; DRAW LABEL --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Invalid Prescription",char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 1.750
set RptSD->m_width = 2.125
set RptSD->m_height = 0.344
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Invalid Prescription",char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.375
set RptSD->m_width = 2.125
set RptSD->m_height = 0.344
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Invalid Prescription",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine WatermarkSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_MN_DMEREQ_LO"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Portrait
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 14
set RptFont->m_bold = RPT_ON
set _Times14B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set _Times12B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 10
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set RptFont->m_bold = RPT_OFF
set _Times120 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 8
set RptFont->m_bold = RPT_ON
set _Times8B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 16
set RptFont->m_bold = RPT_OFF
set RptFont->m_rgbColor =
uar_rptEncodeColor(192,192,192)
set _Times1612632256 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_penStyle = 2
set _pen14S2C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

