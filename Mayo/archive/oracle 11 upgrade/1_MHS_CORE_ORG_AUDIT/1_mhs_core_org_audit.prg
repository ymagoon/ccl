DROP PROGRAM 1_mhs_core_org_audit : DBA GO
 
CREATE PROGRAM 1_mhs_core_org_audit : DBA
 
PROMPT "Enter MINE/CRT/printer/file:" ="MINE"
 
# 1000_INITIALIZE
 
;;SET ACTIVE_STATUS_CD = 0
 
;;SET AUTH_STATUS_CD = 0
 
SET ORG_CLASS_CD = 0
 
SET ORG_CNT = 0
 
;;SET ORG_CD = 0
 
;;SET ADDR_BUS_CD = 0
 
;;SET PHONE_BUS_CD = 0

DECLARE  AUTH_STATUS_CD = F8 WITH PROTECT ,   CONSTANT(REQDATA->AUTH_AUTH_CD)
DECLARE  ACTIVE_STATUS_CD = F8 WITH PROTECT , CONSTANT(REQDATA->ACTIVE_STATUS_CD)
DECLARE  ORG_CD = F8 WITH PROTECT ,           CONSTANT(UAR_GET_CODE_BY("MEANING",396,"ORG"))
DECLARE  ADDR_BUS_CD = F8 WITH PROTECT ,      CONSTANT(UAR_GET_CODE_BY("MEANING",212,"BUSINESS"))
DECLARE  PHONE_BUS_CD = F8 WITH PROTECT ,     CONSTANT(UAR_GET_CODE_BY("MEANING",43 ,"BUSINESS"))



 
SET FILE_NAME = "org_load.csv"
 
SET LINE1 =
 
"org_id|org_name|street_addr|street_addr2|street_addr3|street_addr4|city|state|state_disp|zipcode|country|country_disp|"
 
SET LINE2 =
 
"phone_num|contact|client|employer|facility|hospital|insco|alias_pool_disp1|alias1|alias_pool_disp2|alias2|"
 
SET LINE3 = "alias_pool_disp3|alias3|alias_pool_disp4|alias4|alias_pool_disp5|alias5|comments"
 
SET HEAD_LINE = CONCAT ( TRIM ( LINE1 ), TRIM ( LINE2 ), TRIM ( LINE3 ))
 
SET LINE = FILLSTRING ( 1990 , " " )
 
SET CLIENT_YN = "N"
 
SET EMPLOYER_YN = "N"
 
SET FACILITY_YN = "N"
 
SET HOSPITAL_YN = "N"
 
SET INSCO_YN = "N"
 
IF ( ( VALIDATE ( PM_LONG_MODEL_DATA -> BUILT , 9 )= 9 ) )
 
FREE SET PM_LONG_MODEL_DATA
 
SET TRACE = RECPERSIST
 
RECORD PM_LONG_MODEL_DATA (
 
1 BUILT = I2
 
1 LONG_TEXT_REFERENCE_IND = I2 )
 
SET TRACE = NORECPERSIST
 
SET PM_LONG_MODEL_DATA -> BUILT = 1
 
SELECT INTO "nl:"
 
T.TABLE_NAME
 
FROM ( USER_TABLES T )
 
WHERE (T.TABLE_NAME="LONG_TEXT_REFERENCE" )
 
DETAIL
 
PM_LONG_MODEL_DATA -> LONG_TEXT_REFERENCE_IND = 1
 
WITH NOCOUNTER
 
ENDIF
 
 
 
SET LONG_TEXT_REFERENCE_IND = PM_LONG_MODEL_DATA -> LONG_TEXT_REFERENCE_IND


 
;;SELECT INTO "nl:"
;; 
;;C.CODE_VALUE
;; 
;;FROM ( CODE_VALUE C )
;; 
;;WHERE (C.CODE_SET= 8 ) AND (C.CDF_MEANING="AUTH" ) AND (C.ACTIVE_IND= 1 ) AND (
;; 
;;C.BEGIN_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (C.END_EFFECTIVE_DT_TM>=
;; 
;;CNVTDATETIME ( CURDATE , CURTIME3 ))
;; 
;;DETAIL
;; 
;;AUTH_STATUS_CD =C.CODE_VALUE
;; 
;;WITH NOCOUNTER


;;SELECT INTO "nl:"
;; 
;;C.CODE_VALUE
;; 
;;FROM ( CODE_VALUE C )
;; 
;;WHERE (C.CODE_SET= 48 ) AND (C.CDF_MEANING="ACTIVE" ) AND (C.ACTIVE_IND= 1 ) AND (
;; 
;;C.BEGIN_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (C.END_EFFECTIVE_DT_TM>=
;; 
;;CNVTDATETIME ( CURDATE , CURTIME3 ))
;; 
;;DETAIL
;; 
;;ACTIVE_STATUS_CD =C.CODE_VALUE
;; 
;;WITH NOCOUNTER
 


;;SELECT INTO "nl:"
;; 
;;C.CODE_VALUE
;; 
;;FROM ( CODE_VALUE C )
;; 
;;WHERE (C.CODE_SET= 396 ) AND (C.CDF_MEANING="ORG" ) AND (C.ACTIVE_IND= 1 ) AND (
;; 
;;C.BEGIN_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (C.END_EFFECTIVE_DT_TM>=
;; 
;;CNVTDATETIME ( CURDATE , CURTIME3 ))
;; 
;;DETAIL
;; 
;;ORG_CD =C.CODE_VALUE
;; 
;;WITH NOCOUNTER
 

;;SELECT INTO "nl:"
;; 
;;C.CODE_VALUE
;; 
;;FROM ( CODE_VALUE C )
;; 
;;WHERE (C.CODE_SET= 212 ) AND (C.CDF_MEANING="BUSINESS" ) AND (C.ACTIVE_IND= 1 ) AND (
;; 
;;C.BEGIN_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (C.END_EFFECTIVE_DT_TM>=
;; 
;;CNVTDATETIME ( CURDATE , CURTIME3 ))
;; 
;;DETAIL
;; 
;;ADDR_BUS_CD =C.CODE_VALUE
;; 
;;WITH NOCOUNTER

;;SELECT INTO "nl:"
;; 
;;C.CODE_VALUE
;; 
;;FROM ( CODE_VALUE C )
;; 
;;WHERE (C.CODE_SET= 43 ) AND (C.CDF_MEANING="BUSINESS" ) AND (C.ACTIVE_IND= 1 ) AND (
;; 
;;C.BEGIN_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (C.END_EFFECTIVE_DT_TM>=
;; 
;;CNVTDATETIME ( CURDATE , CURTIME3 ))
;; 
;;DETAIL
;; 
;;PHONE_BUS_CD =C.CODE_VALUE
;; 
;;WITH NOCOUNTER
 
RECORD ORG (
 
1 LIST [*]
 
2 ORGANIZATION_ID = F8
 
2 ORG_NAME = C100
 
2 STREET_ADDR = C100
 
2 STREET_ADDR2 = C100
 
2 STREET_ADDR3 = C100
 
2 STREET_ADDR4 = C100
 
2 CITY = C100
 
2 STATE = C100
 
2 STATE_DISP = C40
 
2 ZIPCODE = C25
 
2 COUNTRY = C100
 
2 COUNTRY_DISP = C40
 
2 PHONE_NUM = C100
 
2 CONTACT = C100
 
2 ALIAS_CNT = I4
 
2 ALIAS [*]
 
3 ALIAS_POOL_DISP = C40
 
3 ALIAS = C100
 
2 TYPE_CNT = I4
 
2 TYPE [*]
 
3 ORG_TYPE_CDF = C40
 
2 COMMENTS = VC )
 
# 2000_MAIN
 
SELECT DISTINCT INTO "nl:"
 
O.SEQ
 
FROM ( ORGANIZATION O )
 
WHERE (O.ORG_NAME_KEY>" " ) AND (O.ACTIVE_IND= 1 ) AND (O.DATA_STATUS_CD= AUTH_STATUS_CD ) AND (
 
O.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (O.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 ))
 
ORDER BY O.ORG_NAME
 
DETAIL
 
ORG_CNT =( ORG_CNT + 1 ),
 
STAT = ALTERLIST ( ORG -> LIST , ORG_CNT ),
 
ORG -> LIST [ ORG_CNT ]-> ORGANIZATION_ID =O.ORGANIZATION_ID,
 
ORG -> LIST [ ORG_CNT ]-> ORG_NAME =O.ORG_NAME
 
;FOOT REPORT 								;JRG--FOR TESTING TO LIMIT RESULTS
;STAT = ALTERLIST ( ORG -> LIST , 3 )		;JRG--FOR TESTING TO LIMIT RESULTS
 
WITH NOCOUNTER
 
;SET ORG_CNT = 3							;JRG--FOR TESTING TO LIMIT RESULTS
 
 
FOR ( X = 1 TO ORG_CNT )
 
SELECT INTO "nl:"
 
A.SEQ
,STATE_DISP = UAR_GET_CODE_DISPLAY(A.STATE_CD)

,COUNTRY_DISP = UAR_GET_CODE_DISPLAY(A.COUNTRY_CD)
 
FROM ( ADDRESS A )
;; 
;;( CODE_VALUE C1 ),
;; 
;;( CODE_VALUE C2 )
 
PLAN ( A
 
WHERE (A.PARENT_ENTITY_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (A.PARENT_ENTITY_NAME=
 
"ORGANIZATION" ) AND (A.ADDRESS_TYPE_CD= ADDR_BUS_CD ) AND (A.ACTIVE_IND= 1 ) AND (
 
A.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (A.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 )))
 
;;AND ( C1
;; 
;;WHERE (C1.CODE_VALUE=A.STATE_CD))
;; 
;;AND ( C2
;; 
;;WHERE (C2.CODE_VALUE=A.COUNTRY_CD))
 
 
 
DETAIL
 
ORG -> LIST [ X ]-> STREET_ADDR =A.STREET_ADDR,
 
ORG -> LIST [ X ]-> STREET_ADDR2 =A.STREET_ADDR2,
 
ORG -> LIST [ X ]-> STREET_ADDR3 =A.STREET_ADDR3,
 
ORG -> LIST [ X ]-> STREET_ADDR4 =A.STREET_ADDR4,
 
ORG -> LIST [ X ]-> CITY =A.CITY,
 
ORG -> LIST [ X ]-> STATE =A.STATE,
 
;;ORG -> LIST [ X ]-> STATE_DISP =C1.DISPLAY,
 ORG -> LIST [ X ]-> STATE_DISP = STATE_DISP,
ORG -> LIST [ X ]-> ZIPCODE =A.ZIPCODE,
 
ORG -> LIST [ X ]-> COUNTRY =A.COUNTRY,
 
;;ORG -> LIST [ X ]-> COUNTRY_DISP =C2.DISPLAY
 ORG -> LIST [ X ]-> COUNTRY_DISP =COUNTRY_DISP
WITH NOCOUNTER
 
ENDFOR
 
 
 
FOR ( X = 1 TO ORG_CNT )
 
SELECT INTO "nl:"
 
P.SEQ
 
FROM ( PHONE P )
 
WHERE (P.PARENT_ENTITY_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (P.PARENT_ENTITY_NAME=
 
"ORGANIZATION" ) AND (P.PHONE_TYPE_CD= PHONE_BUS_CD ) AND (P.ACTIVE_IND= 1 ) AND (
 
P.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (P.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 ))
 
DETAIL
 
ORG -> LIST [ X ]-> PHONE_NUM =P.PHONE_NUM,
 
ORG -> LIST [ X ]-> CONTACT =P.CONTACT
 
WITH NOCOUNTER
 
ENDFOR
 
 
 
FOR ( X = 1 TO ORG_CNT )
 
SET ORG_ALIAS_CNT = 0
 
SELECT INTO "nl:"
 
OA.SEQ
,ALIAS_POOL_DISP = UAR_GET_CODE_DISPLAY(OA.ALIAS_POOL_CD)
 
FROM ( ORGANIZATION_ALIAS OA )
;; 
;;( CODE_VALUE C1 )
 
PLAN ( OA
 
WHERE (OA.ORGANIZATION_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (OA.ACTIVE_IND= 1 ) AND (
 
OA.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (OA.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 )))
 
;;AND ( C1
;; 
;;WHERE (C1.CODE_VALUE=OA.ALIAS_POOL_CD))
 
 
 
DETAIL
 
ORG_ALIAS_CNT =( ORG_ALIAS_CNT + 1 ),
 
STAT = ALTERLIST ( ORG -> LIST [ X ]-> ALIAS , ORG_ALIAS_CNT ),
 
ORG -> LIST [ X ]-> ALIAS [ ORG_ALIAS_CNT ]-> ALIAS =OA.ALIAS,
 
;;ORG -> LIST [ X ]-> ALIAS [ ORG_ALIAS_CNT ]-> ALIAS_POOL_DISP =C1.DISPLAY
 ORG -> LIST [ X ]-> ALIAS [ ORG_ALIAS_CNT ]-> ALIAS_POOL_DISP = ALIAS_POOL_DISP
 
WITH NOCOUNTER
 
SET ORG -> LIST [ X ]-> ALIAS_CNT = ORG_ALIAS_CNT
 
ENDFOR
 
 
 
FOR ( X = 1 TO ORG_CNT )
 
SET ORG_TYPE_CNT = 0
 
SELECT INTO "nl:"
 
O.SEQ
 
FROM ( ORG_TYPE_RELTN O ),
 
( CODE_VALUE C1 )
 
PLAN ( O
 
WHERE (O.ORGANIZATION_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (O.ACTIVE_IND= 1 ) AND (
 
O.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (O.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 )))
 
AND ( C1
 
WHERE (C1.CODE_VALUE=O.ORG_TYPE_CD))
 
 
 
DETAIL
 
ORG_TYPE_CNT =( ORG_TYPE_CNT + 1 ),
 
STAT = ALTERLIST ( ORG -> LIST [ X ]-> TYPE , ORG_TYPE_CNT ),
 
ORG -> LIST [ X ]-> TYPE [ ORG_TYPE_CNT ]-> ORG_TYPE_CDF =C1.CDF_MEANING
 
WITH NOCOUNTER
 
SET ORG -> LIST [ X ]-> TYPE_CNT = ORG_TYPE_CNT
 
ENDFOR
 
 
 
FOR ( X = 1 TO ORG_CNT )
 
IF ( LONG_TEXT_REFERENCE_IND )
 
SELECT INTO "nl:"
 
T.LONG_TEXT
 
FROM ( ORG_INFO O ),
 
( LONG_TEXT_REFERENCE T )
 
PLAN ( O
 
WHERE (O.ORGANIZATION_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (O.ACTIVE_IND= 1 ) AND (
 
O.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (O.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 )))
 
AND ( T
 
WHERE (T.LONG_TEXT_ID=O.LONG_TEXT_ID) AND (T.LONG_TEXT_ID> 0.0 ) AND (T.ACTIVE_IND= 1 ))
 
 
 
DETAIL
 
ORG -> LIST [ X ]-> COMMENTS =T.LONG_TEXT
 
WITH NOCOUNTER
 
ENDIF
 
IF ( ( SIZE ( TRIM ( ORG -> LIST [ X ]-> COMMENTS , 3 ))<= 0 ) )
 
SELECT INTO "nl:"
 
T.LONG_TEXT
 
FROM ( ORG_INFO O ),
 
( LONG_TEXT T )
 
PLAN ( O
 
WHERE (O.ORGANIZATION_ID= ORG -> LIST [ X ]-> ORGANIZATION_ID ) AND (O.ACTIVE_IND= 1 ) AND (
 
O.BEG_EFFECTIVE_DT_TM<= CNVTDATETIME ( CURDATE , CURTIME3 )) AND (O.END_EFFECTIVE_DT_TM>=
 
CNVTDATETIME ( CURDATE , CURTIME3 )))
 
AND ( T
 
WHERE (T.LONG_TEXT_ID=O.LONG_TEXT_ID) AND (T.LONG_TEXT_ID> 0.0 ) AND (T.ACTIVE_IND= 1 ))
 
 
 
DETAIL
 
ORG -> LIST [ X ]-> COMMENTS =T.LONG_TEXT
 
WITH NOCOUNTER
 
ENDIF
 
 
 
ENDFOR
 
 
 
SELECT INTO $1
 
D.SEQ
 
FROM ( DUMMYT D )
 
DETAIL
 
COL 0 ,
 
HEAD_LINE ,
 
FOR ( X = 1 TO ORG_CNT )
 
;ORG_ID = CNVTSTRING(ORG -> LIST [ X ]-> ORGANIZATION_ID),
 
LINE = FILLSTRING ( 1000 , " " ), CLIENT_YN ="N" , EMPLOYER_YN ="N" , FACILITY_YN ="N" ,
 
HOSPITAL_YN ="N" , INSCO_YN ="N" , ROW + 1 , LINE = CONCAT ( TRIM ( ORG -> LIST [ X ]-> ORG_NAME )
 
, "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> STREET_ADDR ), "|" ), LINE =
 
CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> STREET_ADDR2 ), "|" ), LINE = CONCAT ( TRIM (
 
LINE ), TRIM ( ORG -> LIST [ X ]-> STREET_ADDR3 ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM (
 
ORG -> LIST [ X ]-> STREET_ADDR4 ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]
 
-> CITY ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> STATE ), "|" ), LINE =
 
CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> STATE_DISP ), "|" ), LINE = CONCAT ( TRIM (
 
LINE ), TRIM ( ORG -> LIST [ X ]-> ZIPCODE ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG ->
 
LIST [ X ]-> COUNTRY ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]->
 
COUNTRY_DISP ), "|" ), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> PHONE_NUM ), "|"
 
), LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> CONTACT ), "|" ),
 
FOR ( Y = 1 TO ORG -> LIST [ X ]-> TYPE_CNT )
 
IF ( ( ORG -> LIST [ X ]-> TYPE [ Y ]-> ORG_TYPE_CDF ="CLIENT" ) ) CLIENT_YN ="Y"
 
ENDIF
 
,
 
IF ( ( ORG -> LIST [ X ]-> TYPE [ Y ]-> ORG_TYPE_CDF ="EMPLOYER" ) ) EMPLOYER_YN ="Y"
 
ENDIF
 
,
 
IF ( ( ORG -> LIST [ X ]-> TYPE [ Y ]-> ORG_TYPE_CDF ="FACILITY" ) ) FACILITY_YN ="Y"
 
ENDIF
 
,
 
IF ( ( ORG -> LIST [ X ]-> TYPE [ Y ]-> ORG_TYPE_CDF ="HOSPITAL" ) ) HOSPITAL_YN ="Y"
 
ENDIF
 
,
 
IF ( ( ORG -> LIST [ X ]-> TYPE [ Y ]-> ORG_TYPE_CDF ="INSCO" ) ) INSCO_YN ="Y"
 
ENDIF
 
 
 
ENDFOR
 
,
 
IF ( ( CLIENT_YN ="Y" ) ) LINE = CONCAT ( TRIM ( LINE ), "X|" )
 
ELSE LINE = CONCAT ( TRIM ( LINE ), "|" )
 
ENDIF
 
,
 
IF ( ( EMPLOYER_YN ="Y" ) ) LINE = CONCAT ( TRIM ( LINE ), "X|" )
 
ELSE LINE = CONCAT ( TRIM ( LINE ), "|" )
 
ENDIF
 
,
 
IF ( ( FACILITY_YN ="Y" ) ) LINE = CONCAT ( TRIM ( LINE ), "X|" )
 
ELSE LINE = CONCAT ( TRIM ( LINE ), "|" )
 
ENDIF
 
,
 
IF ( ( HOSPITAL_YN ="Y" ) ) LINE = CONCAT ( TRIM ( LINE ), "X|" )
 
ELSE LINE = CONCAT ( TRIM ( LINE ), "|" )
 
ENDIF
 
,
 
IF ( ( INSCO_YN ="Y" ) ) LINE = CONCAT ( TRIM ( LINE ), "X|" )
 
ELSE LINE = CONCAT ( TRIM ( LINE ), "|" )
 
ENDIF
 
,
 
FOR ( Y = 1 TO ORG -> LIST [ X ]-> ALIAS_CNT )
 
LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> ALIAS [ Y ]-> ALIAS_POOL_DISP ), "|" ,
 
TRIM ( ORG -> LIST [ X ]-> ALIAS [ Y ]-> ALIAS ), "|" )
 
ENDFOR
 
,
 
CASE ( ORG -> LIST [ X ]-> ALIAS_CNT )
 
OF 0 : LINE = CONCAT ( TRIM ( LINE ), "||||||||||" )
 
OF 1 : LINE = CONCAT ( TRIM ( LINE ), "||||||||" )
 
OF 2 : LINE = CONCAT ( TRIM ( LINE ), "||||||" )
 
OF 3 : LINE = CONCAT ( TRIM ( LINE ), "||||" )
 
OF 4 : LINE = CONCAT ( TRIM ( LINE ), "||" )
 
ENDCASE
 
, LINE = CONCAT ( TRIM ( LINE ), TRIM ( ORG -> LIST [ X ]-> COMMENTS ))
 
COL 0 ORG -> LIST [ X ]-> ORGANIZATION_ID
COL 18 "|",LINE
 
ENDFOR
 
WITH NOCOUNTER , MAXCOL = 2015 , FORMAT = VARIABLE , NOFORMFEED , MAXROW = 1 , NOHEADING
 
# 9999_END
 
END GO
 
 
