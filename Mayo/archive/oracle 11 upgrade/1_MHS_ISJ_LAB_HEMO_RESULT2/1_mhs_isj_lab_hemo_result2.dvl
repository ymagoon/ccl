 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare LayoutQuery(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadReportSection(nCalc=i2) = f8 with Protect
declare HeadReportSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare HeadQUAL_NAMESection(nCalc=i2) = f8 with Protect
declare HeadQUAL_NAMESectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _pen0S0C0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine LayoutQuery(dummy)
 
call InitializeReport(0)
SELECT
	QUAL_NAME = SUBSTRING(1, 40, REC->qual[D1.SEQ].name)
	, QUAL_PERSON_ID = REC->qual[D1.SEQ].person_id
 
FROM
	(DUMMYT   D1  WITH SEQ = VALUE(SIZE(REC->qual, 5)))
	, (DUMMYT   D2  WITH SEQ =1)
 
PLAN D1 WHERE MAXREC(D2,SIZE(REC->QUAL[D1.SEQ]->LAB,5))
JOIN D2
 
ORDER BY
	QUAL_NAME
	, QUAL_PERSON_ID   DESC
 
 
 
Head Report
	_d0 = d1.seq
	_d1 = d2.seq
; set bottom extent of page
_fEndDetail = RptReport->m_pageWidth-RptReport->m_marginBottom
 
; calculate section height
_fDrawHeight = HeadReportSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>RptReport->m_pageWidth-RptReport->m_marginBottom)
	call PageBreak(0)
endif
 
 
Head Page
if (curpage > 1)
	dummy_val = PageBreak(0)
endif
dummy_val = HeadReportSection(RPT_RENDER)
dummy_val = HeadPageSection(RPT_RENDER)
 
Head QUAL_NAME
; calculate section height
_fDrawHeight = HeadQUAL_NAMESection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = HeadQUAL_NAMESection(RPT_RENDER)
 
Detail
; calculate section height
_fDrawHeight = DetailSection(RPT_CALCHEIGHT)
; break if bottom of page exceeded
if (_YOffset+_fDrawHeight>_fEndDetail)
	break
endif
 
dummy_val = DetailSection(RPT_RENDER)
WITH NOCOUNTER, SEPARATOR=" ", FORMAT
 
 
call FinalizeReport(_SendTo)
 
end ;LayoutQuery
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadReportSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadReportSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadReportSection(nCalc)
 
subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.670000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 20
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 4.313
set RptSD->m_width = 1.677
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("LAB RESULT FOR HEMO",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 3.813
set RptSD->m_width = 2.750
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].loc_facility_name,char(0)))
set RptSD->m_flags = 4
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 0.063
set RptSD->m_width = 1.406
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Report Run Date/Time:",char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 1.438
set RptSD->m_width = 1.375
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(date_time,char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 8.563
set RptSD->m_width = 1.188
set RptSD->m_height = 0.271
; DRAW TEXT --- page_of_page
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(RPT_PageOfPage,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadReportSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)
 
subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.360000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 4
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 7.313
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("IRON",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 8.438
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("UIBC",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 7.813
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("%SAT",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 6.750
set RptSD->m_width = 0.521
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName13
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("FERR",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 0.500
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName14
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("%URR",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 3.313
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- CREA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("CREA",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 0.135
set RptSD->m_height = 0.260
; DRAW LABEL --- K
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("K",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 4.875
set RptSD->m_width = 0.260
set RptSD->m_height = 0.260
; DRAW LABEL --- CA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("CA",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 5.313
set RptSD->m_width = 0.323
set RptSD->m_height = 0.260
; DRAW LABEL --- CCA
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("CCA",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 6.188
set RptSD->m_width = 0.438
set RptSD->m_height = 0.260
; DRAW LABEL --- PHOS
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("PHOS",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 2.125
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName20
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("BUN",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 5.750
set RptSD->m_width = 0.313
set RptSD->m_height = 0.250
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("ALB",char(0)))
set RptSD->m_y = OffsetY + 0.063
set RptSD->m_x = OffsetX + 3.875
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("HGB",char(0)))
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine HeadQUAL_NAMESection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadQUAL_NAMESectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadQUAL_NAMESection(nCalc)
 
subroutine HeadQUAL_NAMESectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.320000), private
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.125
set RptSD->m_x = OffsetX + 0.125
set RptSD->m_width = 2.188
set RptSD->m_height = 0.198
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].name,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadQUAL_NAMESectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine DetailSection(nCalc)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.220000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen0S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (even(d2.seq) = 1)
; DRAW RECTANGLE --- FieldName0
set _rptStat = uar_rptRect ( _hReport, OffsetX+0.500, OffsetY+0.000, 9.125, 0.219, RPT_FILL,
uar_rptEncodeColor(192,192,192))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_flags = 16
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.375
set RptSD->m_width = 0.313
set RptSD->m_height = 0.188
set _DummyPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- FieldName3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].crea_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.500
set RptSD->m_width = 0.188
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].pota_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 4.875
set RptSD->m_width = 0.313
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].callv_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.313
set RptSD->m_width = 0.271
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].cca_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 6.188
set RptSD->m_width = 0.302
set RptSD->m_height = 0.188
; DRAW TEXT --- phos
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].phos_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.750
set RptSD->m_width = 0.313
set RptSD->m_height = 0.188
; DRAW TEXT --- alb
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].alb_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 7.313
set RptSD->m_width = 0.313
set RptSD->m_height = 0.188
; DRAW TEXT --- iron
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].iron_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 8.438
set RptSD->m_width = 0.302
set RptSD->m_height = 0.198
; DRAW TEXT --- uibc
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].uibc_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 7.813
set RptSD->m_width = 0.323
set RptSD->m_height = 0.188
; DRAW TEXT --- sat
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].ironsat_val,char(0)))
set RptSD->m_y = OffsetY + 0.010
set RptSD->m_x = OffsetX + 6.750
set RptSD->m_width = 0.313
set RptSD->m_height = 0.177
; DRAW TEXT --- ferritin
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].ferr_val,char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.563
set RptSD->m_width = 1.125
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName16
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].order_collection_data_time,char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.125
set RptSD->m_width = 0.375
set RptSD->m_height = 0.188
; DRAW TEXT --- FieldName17
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].bun1_val,char(0)))
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 3.885
set RptSD->m_width = 0.427
set RptSD->m_height = 0.219
; DRAW TEXT --- hgb
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].hgb_val,char(0)))
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 2.688
set RptSD->m_width = 0.531
set RptSD->m_height = 0.188
; DRAW TEXT --- urr
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(rec->qual [D1.SEQ].lab [D2.SEQ].urr_val,char(0)))
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "1_MHS_ISJ_LAB_HEMO_RESULT2"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
set RptPen->m_penWidth = 0.000
set _pen0S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 

