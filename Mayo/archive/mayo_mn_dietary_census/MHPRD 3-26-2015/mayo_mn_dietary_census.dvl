 
/**************************************************************
; DVDev DECLARED SUBROUTINES
**************************************************************/
 
declare _CreateFonts(dummy) = null with Protect
declare _CreatePens(dummy) = null with Protect
declare PageBreak(dummy) = null with Protect
declare FinalizeReport(sSendReport=vc) = null with Protect
declare HeadPageSection(nCalc=i2) = f8 with Protect
declare HeadPageSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare DetailSection(nCalc=i2,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare DetailSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8,maxHeight=f8,bContinue=i2(Ref)) = f8 with Protect
declare LayoutSection1(nCalc=i2) = f8 with Protect
declare LayoutSection1ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection2(nCalc=i2) = f8 with Protect
declare LayoutSection2ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare LayoutSection3(nCalc=i2) = f8 with Protect
declare LayoutSection3ABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare BlankSection(nCalc=i2) = f8 with Protect
declare BlankSectionABS(nCalc=i2,OffsetX=f8,OffsetY=f8) = f8 with Protect
declare InitializeReport(dummy) = null with Protect
 
/**************************************************************
; DVDev DECLARED VARIABLES
**************************************************************/
 
declare _hReport = i4 with NoConstant(0),protect
declare _YOffset = f8 with NoConstant(0.0),protect
declare _XOffset = f8 with NoConstant(0.0),protect
declare Rpt_Render = i2 with Constant(0),protect
declare _CRLF = vc with Constant(concat(char(13),char(10))),protect
declare RPT_CalcHeight = i2 with Constant(1),protect
declare _YShift = f8 with NoConstant(0.0),protect
declare _XShift = f8 with NoConstant(0.0),protect
declare _SendTo = vc with NoConstant(""),protect
declare _rptErr = i2 with NoConstant(0),protect
declare _rptStat = i2 with NoConstant(0),protect
declare _oldFont = i4 with NoConstant(0),protect
declare _oldPen = i4 with NoConstant(0),protect
declare _dummyFont = i4 with NoConstant(0),protect
declare _dummyPen = i4 with NoConstant(0),protect
declare _fDrawHeight = f8 with NoConstant(0.0),protect
declare _rptPage = i4 with NoConstant(0),protect
declare _DIOTYPE = i2 with NoConstant(8),protect
declare _OutputType = i2 with noConstant(RPT_PostScript),protect
declare _RemRoomBed = i4 with NoConstant(1),protect
declare _RemPatientName = i4 with NoConstant(1),protect
declare _RemAge = i4 with NoConstant(1),protect
declare _RemAdmitDate = i4 with NoConstant(1),protect
declare _RemLOS = i4 with NoConstant(1),protect
declare _RemFieldName5 = i4 with NoConstant(1),protect
declare _RemDiagnosis = i4 with NoConstant(1),protect
declare _Remdiet = i4 with NoConstant(1),protect
declare _RemFieldName0 = i4 with NoConstant(1),protect
declare _RemFieldName1 = i4 with NoConstant(1),protect
declare _RemFieldName2 = i4 with NoConstant(1),protect
declare _bHoldContinue = i2 with NoConstant(0),protect
declare _bContDetailSection = i2 with NoConstant(0),protect
declare _Times100 = i4 with NoConstant(0),protect
declare _Times12B0 = i4 with NoConstant(0),protect
declare _Times10B0 = i4 with NoConstant(0),protect
declare _pen14S0C0 = i4 with NoConstant(0),protect
 
/**************************************************************
; DVDev DEFINED SUBROUTINES
**************************************************************/
 
subroutine PageBreak(dummy)
set _rptPage = uar_rptEndPage(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
set _YOffset = RptReport->m_marginTop
end ; PageBreak
 
subroutine FinalizeReport(sSendReport)
set _rptPage = uar_rptEndPage(_hReport)
set _rptStat = uar_rptEndReport(_hReport)
declare sFilename = vc with NoConstant(trim(sSendReport)),private
declare bPrint = i2 with NoConstant(0),private
if(textlen(sFilename)>0)
set bPrint = CheckQueue(sFilename)
  if(bPrint)
    execute cpm_create_file_name "RPT","PS"
    set sFilename = cpm_cfn_info->file_name_path
  endif
endif
set _rptStat = uar_rptPrintToFile(_hReport,nullterm(sFileName))
if(bPrint)
  set spool value(sFilename) value(sSendReport) with deleted
endif
declare _errorFound = i2 with noConstant(0),protect
declare _errCnt = i2 with noConstant(0),protect
set _errorFound = uar_RptFirstError( _hReport , RptError )
while ( _errorFound = RPT_ErrorFound and _errCnt < 512 )
   set _errCnt = _errCnt+1
   set stat = AlterList(RptErrors->Errors,_errCnt)
set RptErrors->Errors[_errCnt].m_severity = RptError->m_severity
     set RptErrors->Errors[_errCnt].m_text =  RptError->m_text
     set RptErrors->Errors[_errCnt].m_source = RptError->m_source
   set _errorFound = uar_RptNextError( _hReport , RptError )
endwhile
set _rptStat = uar_rptDestroyReport(_hReport)
end ; FinalizeReport
 
subroutine HeadPageSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(HeadPageSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine HeadPageSection(nCalc)
 
subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(1.000000), private
declare __RUNDATE = vc with NoConstant(build2(format(sysdate,"mm/dd/yy hh:mm;;d"),char(0))),protect
declare __FIELDNAME1 = vc with NoConstant(build2(data->qual[cntr].facility,char(0))),protect
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 0.010
set RptSD->m_width = 1.240
set RptSD->m_height = 0.260
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW TEXT --- RunDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RUNDATE)
set RptSD->m_flags = 64
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 8.625
set RptSD->m_width = 1.406
set RptSD->m_height = 0.271
; DRAW TEXT --- PageofPage
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2(RPT_PageOfPage,char(0)))
set RptSD->m_flags = 260
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + -0.010
set RptSD->m_width = 0.760
set RptSD->m_height = 0.260
set _oldFont = uar_rptSetFont(_hReport, _Times10B0)
; DRAW LABEL --- FieldName4
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Room/Bed",char(0)))
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 0.594
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Patient",char(0)))
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 3.063
set RptSD->m_width = 0.656
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName6
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Age",char(0)))
set RptSD->m_flags = 276
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 3.438
set RptSD->m_width = 0.688
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName7
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Admit Date",char(0)))
set RptSD->m_flags = 260
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 0.375
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName8
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("LOS",char(0)))
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 4.625
set RptSD->m_width = 0.500
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName10
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Braden",char(0)))
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 5.188
set RptSD->m_width = 0.813
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName11
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Diagnosis",char(0)))
set RptSD->m_y = OffsetY + 0.740
set RptSD->m_x = OffsetX + 8.125
set RptSD->m_width = 1.229
set RptSD->m_height = 0.260
; DRAW LABEL --- FieldName12
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Attending Dr",char(0)))
set RptSD->m_flags = 20
set RptSD->m_y = OffsetY + 0.438
set RptSD->m_x = OffsetX + 3.500
set RptSD->m_width = 3.000
set RptSD->m_height = 0.260
set _DummyFont = uar_rptSetFont(_hReport, _Times12B0)
; DRAW LABEL --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, build2("Dietician Patient List",char(0)))
set RptSD->m_flags = 16
set RptSD->m_y = OffsetY + 0.250
set RptSD->m_x = OffsetX + 3.500
set RptSD->m_width = 3.000
set RptSD->m_height = 0.260
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __FIELDNAME1)
set _DummyFont = uar_rptSetFont(_hReport, _oldFont)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine HeadPageSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine DetailSection(nCalc,maxHeight,bContinue)
declare a1=f8 with noconstant(0.0),private
set a1=(DetailSectionABS(nCalc,_XOffset,_YOffset,maxHeight,bContinue))
return (a1)
end ;subroutine DetailSection(nCalc,maxHeight,bContinue)
 
subroutine DetailSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
declare sectionHeight = f8 with noconstant(0.450000), private
declare growSum = i4 with noconstant(0), private
declare drawHeight_RoomBed = f8 with noconstant(0.0), private
declare drawHeight_PatientName = f8 with noconstant(0.0), private
declare drawHeight_Age = f8 with noconstant(0.0), private
declare drawHeight_AdmitDate = f8 with noconstant(0.0), private
declare drawHeight_LOS = f8 with noconstant(0.0), private
declare drawHeight_FieldName5 = f8 with noconstant(0.0), private
declare drawHeight_Diagnosis = f8 with noconstant(0.0), private
declare drawHeight_diet = f8 with noconstant(0.0), private
declare drawHeight_FieldName0 = f8 with noconstant(0.0), private
declare drawHeight_FieldName1 = f8 with noconstant(0.0), private
declare drawHeight_FieldName2 = f8 with noconstant(0.0), private
declare __ROOMBED = vc with NoConstant(build2(concat(data->qual [cntr].room,"   ",data->qual [d.seq].bed),char(0))),protect
declare __PATIENTNAME = vc with NoConstant(build2(data->qual [cntr].pat_name,char(0))),protect
declare __AGE = vc with NoConstant(build2(if (data->qual [cntr].pat_name > " ")
  data->qual [cntr].age
else
 " "
endif,char(0))),protect
declare __ADMITDATE = vc with NoConstant(build2(data->qual [cntr].admit_date,char(0))),protect
declare __LOS = vc with NoConstant(build2(if (data->qual [cntr].pat_name > " ")
  data->qual [cntr].los
else
 " "
endif,char(0))),protect
declare __FIELDNAME5 = vc with NoConstant(build2(data->qual [cntr].braden_score,char(0))),protect
declare __DIAGNOSIS = vc with NoConstant(build2(data->qual [cntr].diagnosis,char(0))),protect
declare __ATTENDING = vc with NoConstant(build2(data->qual [d.seq].attending,char(0))),protect
declare __DIET = vc with NoConstant(build2(concat("Diet: ",data->qual [cntr].diet),char(0))),protect
if (data->qual[d.seq].risks > " ")
declare __FIELDNAME0 = vc with NoConstant(build2(concat("Risks:  ",data->qual[d.seq].risks),char(0))),protect
endif
declare __FIELDNAME1 = vc with NoConstant(build2(concat("WT:  ",trim(data->qual[cntr].weight,3)),char(0))),protect
declare __FIELDNAME2 = vc with NoConstant(build2(concat("HT:  ",trim(data->qual[cntr].height,3)),char(0))),protect
if (bContinue=0)
	set _RemRoomBed = 1
	set _RemPatientName = 1
	set _RemAge = 1
	set _RemAdmitDate = 1
	set _RemLOS = 1
	set _RemFieldName5 = 1
	set _RemDiagnosis = 1
	set _Remdiet = 1
	set _RemFieldName0 = 1
	set _RemFieldName1 = 1
	set _RemFieldName2 = 1
endif
set RptSD->m_flags = 5
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.990
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
set _HoldRemRoomBed = _RemRoomBed
if (_RemRoomBed > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemRoomBed,size(__ROOMBED)-_RemRoomBed+1,__ROOMBED)))
set drawHeight_RoomBed = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemRoomBed = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemRoomBed,size(__ROOMBED)-_RemRoomBed+1,__ROOMBED)))) ; subtract null
	set _RemRoomBed = _RemRoomBed+RptSD->m_drawLength
else
	set _RemRoomBed = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemRoomBed
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 2.250
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemPatientName = _RemPatientName
if (_RemPatientName > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemPatientName,size(__PATIENTNAME)-_RemPatientName+1,
__PATIENTNAME)))
set drawHeight_PatientName = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemPatientName = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemPatientName,size(__PATIENTNAME)-_RemPatientName+1,__PATIENTNAME))))
; subtract null
	set _RemPatientName = _RemPatientName+RptSD->m_drawLength
else
	set _RemPatientName = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemPatientName
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.000
set RptSD->m_width = 0.438
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemAge = _RemAge
if (_RemAge > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemAge,size(__AGE)-_RemAge+1,__AGE)))
set drawHeight_Age = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemAge = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemAge,size(__AGE)-_RemAge+1,__AGE)))) ; subtract null
	set _RemAge = _RemAge+RptSD->m_drawLength
else
	set _RemAge = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemAge
endif
set RptSD->m_flags = 21
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.438
set RptSD->m_width = 0.688
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemAdmitDate = _RemAdmitDate
if (_RemAdmitDate > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemAdmitDate,size(__ADMITDATE)-_RemAdmitDate+1,
__ADMITDATE)))
set drawHeight_AdmitDate = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemAdmitDate = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemAdmitDate,size(__ADMITDATE)-_RemAdmitDate+1,__ADMITDATE))))
; subtract null
	set _RemAdmitDate = _RemAdmitDate+RptSD->m_drawLength
else
	set _RemAdmitDate = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemAdmitDate
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 0.375
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemLOS = _RemLOS
if (_RemLOS > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemLOS,size(__LOS)-_RemLOS+1,__LOS)))
set drawHeight_LOS = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemLOS = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemLOS,size(__LOS)-_RemLOS+1,__LOS)))) ; subtract null
	set _RemLOS = _RemLOS+RptSD->m_drawLength
else
	set _RemLOS = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemLOS
endif
set RptSD->m_flags = 21
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 4.625
set RptSD->m_width = 0.375
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemFieldName5 = _RemFieldName5
if (_RemFieldName5 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName5,size(__FIELDNAME5)-_RemFieldName5+1,
__FIELDNAME5)))
set drawHeight_FieldName5 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName5 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName5,size(__FIELDNAME5)-_RemFieldName5+1,__FIELDNAME5))))
; subtract null
	set _RemFieldName5 = _RemFieldName5+RptSD->m_drawLength
else
	set _RemFieldName5 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName5
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 5.188
set RptSD->m_width = 2.813
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemDiagnosis = _RemDiagnosis
if (_RemDiagnosis > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemDiagnosis,size(__DIAGNOSIS)-_RemDiagnosis+1,
__DIAGNOSIS)))
set drawHeight_Diagnosis = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemDiagnosis = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemDiagnosis,size(__DIAGNOSIS)-_RemDiagnosis+1,__DIAGNOSIS))))
; subtract null
	set _RemDiagnosis = _RemDiagnosis+RptSD->m_drawLength
else
	set _RemDiagnosis = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemDiagnosis
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.260
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.938
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemdiet = _Remdiet
if (_Remdiet > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_Remdiet,size(__DIET)-_Remdiet+1,__DIET)))
set drawHeight_diet = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _Remdiet = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_Remdiet,size(__DIET)-_Remdiet+1,__DIET)))) ; subtract null
	set _Remdiet = _Remdiet+RptSD->m_drawLength
else
	set _Remdiet = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _Remdiet
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 5.000
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
if (data->qual[d.seq].risks > " ")
set _HoldRemFieldName0 = _RemFieldName0
if (_RemFieldName0 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,
__FIELDNAME0)))
set drawHeight_FieldName0 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName0 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName0,size(__FIELDNAME0)-_RemFieldName0+1,__FIELDNAME0))))
; subtract null
	set _RemFieldName0 = _RemFieldName0+RptSD->m_drawLength
else
	set _RemFieldName0 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName0
endif
else
	set _RemFieldName0 = 0
set _HoldRemFieldName0 = _RemFieldName0
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 3.000
set RptSD->m_width = 0.938
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemFieldName1 = _RemFieldName1
if (_RemFieldName1 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName1,size(__FIELDNAME1)-_RemFieldName1+1,
__FIELDNAME1)))
set drawHeight_FieldName1 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName1 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName1,size(__FIELDNAME1)-_RemFieldName1+1,__FIELDNAME1))))
; subtract null
	set _RemFieldName1 = _RemFieldName1+RptSD->m_drawLength
else
	set _RemFieldName1 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName1
endif
set RptSD->m_flags = 5
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 0.875
set RptSD->m_height = OffsetY+maxHeight-RptSD->m_y
set _HoldRemFieldName2 = _RemFieldName2
if (_RemFieldName2 > 0)
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_RemFieldName2,size(__FIELDNAME2)-_RemFieldName2+1,
__FIELDNAME2)))
set drawHeight_FieldName2 = RptSD->m_height
if (RptSD->m_height > OffsetY + sectionHeight - RptSD->m_y)
	set sectionHeight = RptSD->m_y + _fDrawHeight - OffsetY
endif
if (RptSD->m_drawLength = 0)
	set _RemFieldName2 = 0
elseif (RptSD->m_drawLength < size(nullterm(substring(_RemFieldName2,size(__FIELDNAME2)-_RemFieldName2+1,__FIELDNAME2))))
; subtract null
	set _RemFieldName2 = _RemFieldName2+RptSD->m_drawLength
else
	set _RemFieldName2 = 0
endif
	; append remainder to growSum so we know whether or not to continue at the end
	set growSum = growSum + _RemFieldName2
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 0.990
set RptSD->m_height = drawHeight_RoomBed
if (nCalc = RPT_RENDER AND _HoldRemRoomBed > 0)
; DRAW TEXT --- RoomBed
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemRoomBed,size(__ROOMBED)-_HoldRemRoomBed+1,
__ROOMBED)))
else
	set _RemRoomBed = _HoldRemRoomBed
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 0.750
set RptSD->m_width = 2.250
set RptSD->m_height = drawHeight_PatientName
if (nCalc = RPT_RENDER AND _HoldRemPatientName > 0)
; DRAW TEXT --- PatientName
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemPatientName,size(__PATIENTNAME)-
_HoldRemPatientName+1,__PATIENTNAME)))
else
	set _RemPatientName = _HoldRemPatientName
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.000
set RptSD->m_width = 0.438
set RptSD->m_height = drawHeight_Age
if (nCalc = RPT_RENDER AND _HoldRemAge > 0)
; DRAW TEXT --- Age
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemAge,size(__AGE)-_HoldRemAge+1,__AGE)))
else
	set _RemAge = _HoldRemAge
endif
set RptSD->m_flags = 20
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 3.438
set RptSD->m_width = 0.688
set RptSD->m_height = drawHeight_AdmitDate
if (nCalc = RPT_RENDER AND _HoldRemAdmitDate > 0)
; DRAW TEXT --- AdmitDate
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemAdmitDate,size(__ADMITDATE)-_HoldRemAdmitDate+1,
__ADMITDATE)))
else
	set _RemAdmitDate = _HoldRemAdmitDate
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 4.250
set RptSD->m_width = 0.375
set RptSD->m_height = drawHeight_LOS
if (nCalc = RPT_RENDER AND _HoldRemLOS > 0)
; DRAW TEXT --- LOS
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemLOS,size(__LOS)-_HoldRemLOS+1,__LOS)))
else
	set _RemLOS = _HoldRemLOS
endif
set RptSD->m_flags = 20
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 4.625
set RptSD->m_width = 0.375
set RptSD->m_height = drawHeight_FieldName5
if (nCalc = RPT_RENDER AND _HoldRemFieldName5 > 0)
; DRAW TEXT --- FieldName5
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName5,size(__FIELDNAME5)-_HoldRemFieldName5+
1,__FIELDNAME5)))
else
	set _RemFieldName5 = _HoldRemFieldName5
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.000
endif
set RptSD->m_x = OffsetX + 5.188
set RptSD->m_width = 2.813
set RptSD->m_height = drawHeight_Diagnosis
if (nCalc = RPT_RENDER AND _HoldRemDiagnosis > 0)
; DRAW TEXT --- Diagnosis
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemDiagnosis,size(__DIAGNOSIS)-_HoldRemDiagnosis+1,
__DIAGNOSIS)))
else
	set _RemDiagnosis = _HoldRemDiagnosis
endif
set RptSD->m_flags = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 8.125
set RptSD->m_width = 1.875
set RptSD->m_height = 0.281
if (nCalc = RPT_RENDER AND bContinue = 0)
; DRAW TEXT --- Attending
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __ATTENDING)
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.260
endif
set RptSD->m_x = OffsetX + 0.000
set RptSD->m_width = 2.938
set RptSD->m_height = drawHeight_diet
if (nCalc = RPT_RENDER AND _HoldRemdiet > 0)
; DRAW TEXT --- diet
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemdiet,size(__DIET)-_HoldRemdiet+1,__DIET)))
else
	set _Remdiet = _HoldRemdiet
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 4.938
set RptSD->m_width = 5.000
set RptSD->m_height = drawHeight_FieldName0
if (nCalc = RPT_RENDER AND _HoldRemFieldName0 > 0)
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[d.seq].risks > " ")
; DRAW TEXT --- FieldName0
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName0,size(__FIELDNAME0)-_HoldRemFieldName0+
1,__FIELDNAME0)))
endif
/*----- YOUR CODE ENDS HERE -----*/
 
else
	set _RemFieldName0 = _HoldRemFieldName0
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 3.000
set RptSD->m_width = 0.938
set RptSD->m_height = drawHeight_FieldName1
if (nCalc = RPT_RENDER AND _HoldRemFieldName1 > 0)
; DRAW TEXT --- FieldName1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName1,size(__FIELDNAME1)-_HoldRemFieldName1+
1,__FIELDNAME1)))
else
	set _RemFieldName1 = _HoldRemFieldName1
endif
set RptSD->m_flags = 4
if (bContinue)
	set RptSD->m_y = OffsetY
else
	set RptSD->m_y = OffsetY + 0.250
endif
set RptSD->m_x = OffsetX + 4.000
set RptSD->m_width = 0.875
set RptSD->m_height = drawHeight_FieldName2
if (nCalc = RPT_RENDER AND _HoldRemFieldName2 > 0)
; DRAW TEXT --- FieldName2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, nullterm(substring(_HoldRemFieldName2,size(__FIELDNAME2)-_HoldRemFieldName2+
1,__FIELDNAME2)))
else
	set _RemFieldName2 = _HoldRemFieldName2
endif
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
if (nCalc = RPT_RENDER)
	set _YOffset = OffsetY + sectionHeight
endif
	if (growSum > 0)
		set bContinue = 1 ; continue grow
	else
		set bContinue = 0 ; done growing
	endif
return(sectionHeight)
end ;subroutine DetailSectionABS(nCalc,OffsetX,OffsetY,maxHeight,bContinue)
 
subroutine LayoutSection1(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection1ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection1(nCalc)
 
subroutine LayoutSection1ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.270000), private
if (data->qual[cntr].left1 > " ")
declare __LEFT1 = vc with NoConstant(build2(if (data->qual[cntr].left1_type = "A")
  concat("ALBUMIN:  ",data->qual[cntr].left1)
elseif (data->qual[cntr].left1_type = "H")
  concat("GLYCOSYLATED HGB:  ",data->qual[cntr].left1)
else
  concat("SUPPLEMENT:  ",data->qual[cntr].left1)
endif,char(0))),protect
endif
if (data->qual[cntr].right1 > " ")
declare __RIGHT1 = vc with NoConstant(build2(if (data->qual[cntr].right1_type = "A")
  concat("LAST ASSESSMENT:  ",data->qual[cntr].right1)
elseif (data->qual[cntr].right1_type = "E")
  concat("LAST EATEN:  ",data->qual[cntr].right1)
else
  concat(":  ",data->qual[cntr].right1)
endif,char(0))),protect
endif
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(data->qual[cntr].left1 > " " or data->qual[cntr].right1 > " " ))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.042
set RptSD->m_x = OffsetX + 0.375
set RptSD->m_width = 4.625
set RptSD->m_height = 0.229
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].left1 > " ")
; DRAW TEXT --- left1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __LEFT1)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.375
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].right1 > " ")
; DRAW TEXT --- right1
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RIGHT1)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection1ABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection2(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection2ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection2(nCalc)
 
subroutine LayoutSection2ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.250000), private
if (data->qual[cntr].left2 > " ")
declare __LEFT2 = vc with NoConstant(build2(if (data->qual[cntr].left2_type = "A")
  concat("ALBUMIN:  ",data->qual[cntr].left2)
elseif (data->qual[cntr].left2_type = "H")
  concat("GLYCOSYLATED HGB:  ",data->qual[cntr].left2)
else
  concat("SUPPLEMENT:  ",data->qual[cntr].left2)
endif,char(0))),protect
endif
if (data->qual[cntr].right2 > " ")
declare __RIGHT2 = vc with NoConstant(build2(if (data->qual[cntr].right2_type = "A")
  concat("LAST ASSESSMENT:  ",data->qual[cntr].right2)
elseif (data->qual[cntr].right2_type = "E")
  concat("LAST EATEN:  ",data->qual[cntr].right2)
else
  concat(":  ",data->qual[cntr].right2)
endif,char(0))),protect
endif
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(data->qual[cntr].left2 > " " or data->qual[cntr].right2 > " " ))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.375
set RptSD->m_width = 4.625
set RptSD->m_height = 0.250
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].left2 > " ")
; DRAW TEXT --- left2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __LEFT2)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 5.375
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].right2 > " ")
; DRAW TEXT --- right2
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RIGHT2)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection2ABS(nCalc,OffsetX,OffsetY)
 
subroutine LayoutSection3(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(LayoutSection3ABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine LayoutSection3(nCalc)
 
subroutine LayoutSection3ABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.270000), private
if (data->qual[cntr].left3 > " ")
declare __LEFT3 = vc with NoConstant(build2(if (data->qual[cntr].left3_type = "A")
  concat("ALBUMIN:  ",data->qual[cntr].left3)
elseif (data->qual[cntr].left3_type = "H")
  concat("GLYCOSYLATED HGB:  ",data->qual[cntr].left3)
else
  concat("SUPPLEMENT:  ",data->qual[cntr].left3)
endif,char(0))),protect
endif
if (data->qual[cntr].right3 > " ")
declare __RIGHT3 = vc with NoConstant(build2(if (data->qual[cntr].right3_type = "A")
  concat("LAST ASSESSMENT:  ",data->qual[cntr].right3)
elseif (data->qual[cntr].right3_type = "E")
  concat("LAST EATEN:  ",data->qual[cntr].right3)
else
  concat(":  ",data->qual[cntr].right3)
endif,char(0))),protect
endif
 
/****** YOUR CODE BEGINS HERE ******/
if (NOT(data->qual[cntr].left3 > " " or data->qual[cntr].right3 > " " ))
   return (0.0)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
if (nCalc = RPT_RENDER)
set RptSD->m_flags = 0
set RptSD->m_borders = RPT_SDNOBORDERS
set RptSD->m_padding = RPT_SDNOBORDERS
set RptSD->m_paddingWidth = 0.000
set RptSD->m_lineSpacing = RPT_SINGLE
set RptSD->m_rotationAngle = 0
set RptSD->m_y = OffsetY + 0.000
set RptSD->m_x = OffsetX + 0.375
set RptSD->m_width = 4.625
set RptSD->m_height = 0.250
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].left3 > " ")
; DRAW TEXT --- left3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __LEFT3)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set RptSD->m_y = OffsetY + 0.042
set RptSD->m_x = OffsetX + 5.375
set RptSD->m_width = 4.563
set RptSD->m_height = 0.229
 
/****** YOUR CODE BEGINS HERE ******/
if (data->qual[cntr].right3 > " ")
; DRAW TEXT --- right3
set _fDrawHeight = uar_rptStringDraw(_hReport, RptSD, __RIGHT3)
endif
/*----- YOUR CODE ENDS HERE -----*/
 
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine LayoutSection3ABS(nCalc,OffsetX,OffsetY)
 
subroutine BlankSection(nCalc)
declare a1=f8 with noconstant(0.0),private
set a1=(BlankSectionABS(nCalc,_XOffset,_YOffset))
return (a1)
end ;subroutine BlankSection(nCalc)
 
subroutine BlankSectionABS(nCalc,OffsetX,OffsetY)
declare sectionHeight = f8 with noconstant(0.170000), private
if (nCalc = RPT_RENDER)
set _oldPen = uar_rptSetPen(_hReport,_pen14S0C0)
; DRAW LINE --- FieldName0
set _rptStat = uar_rptLine( _hReport,OffsetX+0.000,OffsetY+ 0.083,OffsetX+10.000, OffsetY+0.083)
set _DummyPen = uar_rptSetPen(_hReport,_oldPen)
	set _YOffset = OffsetY + sectionHeight
endif
return(sectionHeight)
end ;subroutine BlankSectionABS(nCalc,OffsetX,OffsetY)
 
subroutine InitializeReport(dummy)
set RptReport->m_recSize = 100
set RptReport->m_reportName = "MAYO_MN_DIETARY_CENSUS"
set RptReport->m_pageWidth = 8.50
set RptReport->m_pageHeight = 11.00
set RptReport->m_orientation = Rpt_Landscape
set RptReport->m_marginLeft = 0.50
set RptReport->m_marginRight = 0.50
set RptReport->m_marginTop = 0.50
set RptReport->m_marginBottom = 0.50
set RptReport->m_horzPrintOffset = _XShift
set RptReport->m_vertPrintOffset = _YShift
set _YOffset = RptReport->m_marginTop
set _XOffset = RptReport->m_marginLeft
set _hReport = uar_rptCreateReport(RptReport, _OutputType,Rpt_Inches)
set _rptErr = uar_rptSetErrorLevel(_hReport,Rpt_Error)
set _rptStat = uar_rptStartReport(_hReport)
set _rptPage = uar_rptStartPage(_hReport)
call _CreateFonts(0)
call _CreatePens(0)
end ;_InitializeReport
 
subroutine _CreateFonts(dummy)
set RptFont->m_recSize = 50
set RptFont->m_fontName = RPT_TIMES
set RptFont->m_pointSize = 10
set RptFont->m_bold = RPT_OFF
set RptFont->m_italic = RPT_OFF
set RptFont->m_underline = RPT_OFF
set RptFont->m_strikethrough = RPT_OFF
set RptFont->m_rgbColor = RPT_BLACK
set _Times100 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_bold = RPT_ON
set _Times10B0 = uar_rptCreateFont(_hReport, RptFont)
set RptFont->m_pointSize = 12
set _Times12B0 = uar_rptCreateFont(_hReport, RptFont)
end;**************Create Fonts*************
 
subroutine _CreatePens(dummy)
set RptPen->m_recSize = 16
set RptPen->m_penWidth = 0.014
set RptPen->m_penStyle = 0
set RptPen->m_rgbColor =  RPT_BLACK
set _pen14S0C0 = uar_rptCreatePen(_hReport,RptPen)
end;**************Create Pen*************
 
;**************Report Layout End*************
 
 

