1);translate ESO_UPT_HOLD_QUEUE go
2);translate ESO_UPT_HOLD_QUEUE_COND go
3)
4);translate ESO_RMV_HOLD_QUEUE go
5);translate ESO_RMV_HOLD_QUEUE_COND go
6)
7)translate ESO_UPDATE_CQM_QUE go
;*** Generated by TRANSLATE, verify before re-including (Debug:N,Optimize:N,DiffEnd:N,Rdb:N) ***
DROP PROGRAM eso_update_cqm_que :dba GO
CREATE PROGRAM eso_update_cqm_que :dba
 RECORD reply (
   1 cqm_fsieso_que [* ]
     2 priority = i4
     2 verbosity_flag = i4
     2 debug_ind = i4
     2 process_status_flag = i4
     2 queue_id = f8
     2 class = c15
     2 type = c15
     2 subtype = c15
     2 subtype_detail = c15
     2 trig_module_identifier = vc
   1 status_data
     2 status = c1
     2 subeventstatus [1 ]
       3 operationname = c15
       3 operationstatus = c1
       3 targetobjectname = c15
       3 targetobjectvalue = vc
 )
 CALL echo ("*** ESO_UPDATE_CQM_QUE  START!! ****" )
 CALL echo ("MOD: 002" )
 SET reply->status_data.status = "F"
 SET i = 0
 SET qual_cnt = 0
 SET qual_cnt = size (request->cqm_fsieso_que ,5 )
 IF (qual_cnt )
  SELECT INTO "nl:"
   cq.queue_id ,
   cq.class ,
   cq.type ,
   cq.subtype ,
   cq.subtype_detail ,
   cq.priority ,
   cq.verbosity_flag ,
   cq.debug_ind ,
   cq.process_status_flag
   FROM (cqm_fsieso_que cq ),
    (dummyt d WITH seq = value (qual_cnt ) )
   PLAN (d )
    JOIN (cq
    WHERE (cq.queue_id = request->cqm_fsieso_que[d.seq ].queue_id )
    AND (cq.process_status_flag = 50 ) )
   HEAD REPORT
    x = 0
   DETAIL
    x = (x + 1 ) ,
    IF ((request->cqm_fsieso_que[x ].process_status_flag = 10 ) ) stat = alterlist (reply->
      cqm_fsieso_que ,x ) ,reply->cqm_fsieso_que[x ].priority = cq.priority ,reply->cqm_fsieso_que[x
     ].verbosity_flag = cq.verbosity_flag ,reply->cqm_fsieso_que[x ].debug_ind = cq.debug_ind ,reply
     ->cqm_fsieso_que[x ].process_status_flag = cq.process_status_flag ,reply->cqm_fsieso_que[x ].
     queue_id = cq.queue_id ,reply->cqm_fsieso_que[x ].class = cq.class ,reply->cqm_fsieso_que[x ].
     type = cq.type ,reply->cqm_fsieso_que[x ].subtype = cq.subtype ,reply->cqm_fsieso_que[x ].
     subtype_detail = cq.subtype_detail ,reply->cqm_fsieso_que[x ].trig_module_identifier = cq
     .trig_module_identifier
    ENDIF
   WITH nocounter
  ;end select
  UPDATE FROM (cqm_fsieso_que cq ),
    (dummyt d WITH seq = value (qual_cnt ) )
   SET cq.process_status_flag = request->cqm_fsieso_que[d.seq ].process_status_flag ,
    cq.updt_cnt = (cq.updt_cnt + 1 )
   PLAN (d )
    JOIN (cq
    WHERE (cq.queue_id = request->cqm_fsieso_que[d.seq ].queue_id )
    AND (cq.process_status_flag = 50 ) )
   WITH nocounter
  ;end update
 ELSE
  CALL echo ("There are NO queue_id(s) to update into the CQM_FSIESO_QUE tbl" )
 ENDIF
 IF ((curqual > 0 ) )
  SET reply->status_data.status = "S"
 ENDIF
 CALL echo ("*** ESO_UPDATE_CQM_QUE  END!! ****" )
END GO
1)

190411:153733 B134316_DVD7              Cost 0.00 Cpu 0.00 Ela 0.00 Dio   0 O0M0R0 P1R0