/*
 *  ---------------------------------------------------------------------------------------------
 *  Script Name:  fsi_common.inc
 *  Description:  Common FSI subroutines and functions
 *  ---------------------------------------------------------------------------------------------
 *  Author:       Yitzhak Magoon     
 *  Creation Date:  11/16/2018
 *  ---------------------------------------------------------------------------------------------
 *  This .inc file is included in various FSI scripts. It contains common functions and subroutines
 *  that are performed in the route_out script and several mod object scripts.
*/

declare get_proc_id(proc_name) = i4
declare get_string_value(string_meaning) = vc
declare get_double_value(string_meaning) = f8
declare get_code_value_display(code_value_text) = vc

/***********************************************
 GET_CODE_VALUE_DISPLAY SUBROUTINE
***********************************************/
subroutine get_code_value_display(code_value_text)
  set pos = findstring(",",code_value_text, 1)
  set code_value = cnvtreal(substring(pos + 1, size(code_value_text,1), code_value_text))
  
  return (uar_get_code_display(code_value))
end

/***********************************************
 GET_STRING_VALUE SUBROUTINE
***********************************************/
subroutine get_string_value(string_meaning)
  declare eso_idx = i4
  declare list_size = i4
  declare statvar = c20

  set eso_idx = 0
  set list_size = 0

  set statvar = (validate(oenobj->cerner, "NOCERNERAREA")) ;todo - fix this
  if (statvar = "NOCERNERAREA")
    return ("-1")
  else
    set eso_idx = 0
    set list_size = 0
    set list_size = size(oenobj->cerner->stringlist,5)
	 
    if (list_size > 0)
      set eso_x = 1
      for (eso_x = eso_x  to list_size)
        if (oenobj->cerner->stringlist[eso_x]->strmeaning = string_meaning)
          set eso_idx = eso_x
        endif
      endfor
    endif
     
	if (eso_idx > 0)
      return (trim(oenobj->cerner->stringlist[eso_idx]->strval))
    else
      return ("0")
    endif
  endif
end   ;get_string_value

/*****************************************
 GET_DOUBLE_VALUE subroutine
*****************************************/
subroutine get_double_value(double_meaning)
  declare eso_idx = i4
  declare list_size = i4
  declare charstat = c100

  set charstat = (validate(oenobj->cerner, "0"))
  if (charstat = "0")
    return(-1)
  else
    set eso_idx = 0
    set list_size = 0
    set list_size = size(oenobj->cerner->doubleList,5)
	
    if( list_size > 0 )
      set eso_x = 1
      for ( eso_x = eso_x to list_size )
        if(oenobj->cerner->doubleList[eso_x]->strMeaning = double_meaning)
          set eso_idx = eso_x
        endif
      endfor
    endif
	
    if( eso_idx > 0 )
      return(oenobj->cerner->doubleList[eso_idx]->dval)
    else
      return(0)
    endif
  endif
end  ;get_double_value

/*************************************
 GET_PROC_ID SUBROUTINE
*************************************/

subroutine get_proc_id(proc_name)
  declare out_pid=i4
  select into "nl:"
    p.interfaceid
  from 
    oen_procinfo p
  where 
    cnvtupper(p.proc_name) = cnvtupper(proc_name)
  detail
    out_pid = p.interfaceid
  with nocounter
  
  if(curqual != 0)
    return(out_pid)
  else
    return (0)
  endif
end ;get_proc_id subroutine