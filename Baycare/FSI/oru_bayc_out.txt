/*
 *  ---------------------------------------------------------------------------------------------
 *  Script Name:  oru_bayc_out
 *  Description:  Script for results outbound
 *  Type:         Modify Object Script
 *  ---------------------------------------------------------------------------------------------
 *  Author:         Chris Eakes and Jim Rachael
 *  Library:        OEOCF23ORUORU
 *  Creation Date:  5/9/02 12:56:22 PM
 *  ---------------------------------------------------------------------------------------------
 *  Mod#  Date    Author       Description & Requestor Information
 *
 *  1:      12/23/10  R Quack     	Added logic for new dr. filter with NPI
 *  2:      12/23/10  R Quack     	Found script was not calling old placer filer script since the name changed
 *                                                     on that script so moved code from that script into this script.
 *  3.      12/23/10  R Quack     	Added baycare header for script standardization
 *  4.      5/25/11   T Dillon      Call child script to take 1st 20 chars of Msg Ctrl ID to shorten to 20 chars (HL7 standard)
 *  5.      5/22/13     PHopkins  	Added CCL script to send the Placer Order number outbound for AP orders
 *  6.      10/29/13  H Kaczmarczyk Added logic to move LOINC coding in OBX from OBX:3.1,.2,.3 to OBX:3.4,.5,.6 
 *                                                                and to copy Lcoding from OBX:3.1,.2 to OBX:3.4,.5      
 *  7.      11/13/13  H Kaczmarczyk Adding Coding to pull the PCPE-Primary Care Physician at the encounter level,
 *                                                               clear lifetime PCP, and block PCPEs entered in Cerner manually.
 *  8.      12/02/13  H Kaczmarczyk Adding Coding to remove DONOTSEND w LOINC values, renumber OBX segments
 *                                                               and ignore messages when all OBX segments have been removed.
 *   9.     9/25/14   H Kaczmarczyk Added Tony's coding for PID 11 e-mail address blocking
 *  10.     10/27/16  H Kaczmarczyk Added coding to blank out all life-time PCP physician identifiers in PD1
 *  11.     11/9/17   J Starke   	Added coding to pull correct ordering phys into obr16
 *  12.     11/13/17  D Olszewski   Adding alias for OBR4.1 instead of L###, ;SR# 418292283
    *  ---------------------------------------------------------------------------------------------
*/

;;AP results, pull the correct order physician from ORDER_ACTION as Pathologist is updated incorrectly
if(oen_reply->RES_ORU_GROUP [1]->OBR [1]->diag_serv_sec_id = "AP")
  declare order_action_type = f8 with public, noconstant(uar_get_code_by("MEANING",6003,"ORDER"))
  declare orgdr_id_cv = f8 with public, noconstant(uar_get_code_by("MEANING", 320, "NPI"))
  declare invision = f8 with public, noconstant(uar_get_code_by("DISPLAYKEY",73,"INVISION"))
  
  execute oencpm_msglog(build("AP Report=", char(0)))
  
  for(oru_x = 1 to size(oen_reply->RES_ORU_GROUP, 5))
    for(y = 1 to size(oen_reply->RES_ORU_GROUP [oru_x]->OBR, 5))
      declare orderid = f8 with public, noconstant(0.0)
	  
      set orderid = cnvtreal(trim(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->placer_ord_nbr [1]->entity_id))
      
	  execute oencpm_msglog(build("*** Order ID = ", orderid, char(0)))
    
      declare order_phys_alias = vc
      declare person_id = f8
      declare order_phys_last = vc
      declare order_phys_first = vc

      select into "nl:"
        oa.action_type_cd,
        oa.order_provider_id
      from 
	    order_action oa
		, prsnl p
      plan oa 
        where oa.order_id = orderid 
          and oa.action_type_cd = order_action_type
      join p 
        where p.person_id = oa.order_provider_id
      detail
        order_phys_last = p.name_last_key
        order_phys_first = p.name_first_key
        person_id = p.person_id
      with nocounter

      declare orgdr_id = vc

      select into "nl:"
        pa.alias
      from prsnl_alias pa
        where pa.person_id = person_id 
          and pa.prsnl_alias_type_cd = orgdr_id_cv
          and pa.active_ind = 1
          and pa.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
      detail
        orgdr_id = pa.alias
      with nocounter
	  
      execute oencpm_msglog(build("*** ORG Dr Number = ", orgdr_id, char(0)))
                      
      ;;Send ordering physician in OBR-16 
      set stat = alterlist(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider, 0)
      set stat = alterlist(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider, 1)
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->id_nbr = orgdr_id
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->last_name = order_phys_last
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->first_name = order_phys_first
      Set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->assign_auth->name_id = "NPI Number"
      Set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->id_type = "National Provider Identifier"
	  
      execute oencpm_msglog(build("*** Ordering Phys = ", 
      oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->last_name, char(0)))

      declare catalo_obr_4_1 = vc
      declare catalo_obr_4_2 = vc
               
      select into "nl:"
        cvo.alias
		, cv.description
      from 
	    orders o
		, code_value_outbound cvo
		, code_value cv
      plan o
        where o.order_id = orderid
      join cvo 
        where cvo.code_value = o.catalog_cd
          and cvo.contributor_source_cd = invision
      join cv 
        where cv.code_value = cvo.code_value
      detail
        catalo_obr_4_1 = cvo.alias
        catalo_obr_4_2 = cv.description
      with nocounter
	  
      set oen_reply->RES_ORU_GROUP [1]->OBR [1]->univ_service_id [1]->identifier = catalo_obr_4_1
      set oen_reply->RES_ORU_GROUP [1]->OBR [1]->univ_service_id [1]->text = catalo_obr_4_2
  
    endfor ;;y
  endfor ;;x
  
;todo - the accession # should be able to be found from order_id instead of having to loop to find the accession_id
  declare listsize = i4
  declare accessionid = vc
  declare ordalias = vc

  set x = 1
  set listsize = size(oen_reply->RES_ORU_GROUP [1]->OBR [1]->filler_field1,5)

  execute oencpm_msglog(build("LISTSIZE = ",listsize))

  for (x = 1 to listsize)
    if (oen_reply->RES_ORU_GROUP [1]->OBR [1]->filler_field1 [x]->field_type = "HNA_ACCNID")
      set accessionid = oen_reply->res_oru_group [1]->obr [1]->filler_field1 [x]->value 
    endif
  endfor

  execute oencpm_msglog(build("Accession id = ",accessionid))

  select
    ao.order_id
	, o.alias
  from 
    accession_order_r ao
	, order_alias o
  plan ao
    where ao.accession_id = cnvtint(accessionid)
  join o 
    where o.order_id = ao.order_id and o.alias not in("",null," ")
  detail
    ordalias = o.alias
  with nocounter
   
  execute oencpm_msglog(build("AP Order Alias = ",ordalias))

  set oen_reply->RES_ORU_GROUP [1]->OBR [1]->placer_ord_nbr [1]->entity_id = ordalias
endif ;;AP

/*********************Add the PCPE to PD1:4 H Kaczmarczyk 11/13/13*******************************************/

declare pt_enctr_id = f8
declare phys_NPInbr = vc
declare phys_name_first = vc
declare phys_name_last = vc

set pt_enctr_id = oen_reply->cerner->encntr_prsnl_info->encntr [1]->encntr_id
set phys_reltn = uar_get_code_by ("MEANING",333,"PCPE")
set phys_number = uar_get_code_by ("DISPLAY",263,"NPI Number")

select into "nl:"
  p.alias
  , pr.name_last
  , pr.name_first
from 
  encntr_prsnl_reltn e
  , prsnl_alias p
  , prsnl pr
plan e
  where e.encntr_id = pt_enctr_id  
    and e.encntr_prsnl_r_cd = phys_reltn  
	and e.manual_create_ind = 0 
join p
  where e.prsnl_person_id = p.person_id   
    and p.alias_pool_cd = phys_number
join pr
  where p.person_id = pr.person_id
detail
  phys_NPInbr = p.alias
  phys_name_first = pr.name_first
  phys_name_last = pr.name_last  
with nocounter

/*********************10/27/16  Add Mod 10: PD1 Clear all old life time PCP identifiers Hope K.************************/

set pd1_size = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1, 5)

if (pd1_size > 0)
  set stat = alterlist(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1, 0)
endif
 
if (phys_NPInbr not in("", NULL, " "))
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->id_nbr =  phys_NPInbr
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->last_name =  phys_name_last
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->first_name = phys_name_first
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->assign_auth->name_id  = "NPI Number"
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->name_type = "Personnel"
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->id_type = "National Provider Identifier"
endif

/* Remove results with an alias of "DONOTSEND" */
declare index_to_remove = i4
set obx_size = size(oen_reply->RES_ORU_GROUP->OBX_GROUP, 5)
set x = 1

; find the OBX segment to remove
while(x <= obx_size)
  set oen_reply->RES_ORU_GROUP ->OBX_GROUP [x]->OBX->set_id = cnvtstring(x)
  set index_to_remove = -1
  
  if (oen_reply->RES_ORU_GROUP->OBX_GROUP [x]->OBX->observation_id->alt_identifier = "DONOTSEND")
    set index_to_remove = x
  endif
  
; remove the unwanted OBX segment
  execute oencpm_msglog(build("remove index is: ", index_to_remove))
  
  if (index_to_remove > -1)
    set stat = alterlist(oen_reply->RES_ORU_GROUP-> OBX_GROUP, obx_size -1, x -1)
    set obx_size = obx_size -1
  else
    set x = x +1
  endif
endwhile

if (size(oen_reply->RES_ORU_GROUP->OBX_GROUP, 5)=0)
  set OenStatus->Ignore=1
endif

#exit_25