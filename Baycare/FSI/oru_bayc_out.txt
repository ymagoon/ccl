/*
 *  ---------------------------------------------------------------------------------------------
 *  Script Name:  oru_bayc_out
 *  Description:  Script for results outbound
 *  Type:         Modify Object Script
 *  ---------------------------------------------------------------------------------------------
 *  Author:         Chris Eakes and Jim Rachael
 *  Library:        OEOCF23ORUORU
 *  Creation Date:  5/9/02 12:56:22 PM
 *  ---------------------------------------------------------------------------------------------
 *  Mod#  Date    Author       Description & Requestor Information
 *
 *  1:      12/23/10  R Quack     Added logic for new dr. filter with NPI
 *  2:      12/23/10  R Quack     Found script was not calling old placer filer script since the name changed
 *                                                     on that script so moved code from that script into this script.
 *  3.      12/23/10  R Quack     Added baycare header for script standardization
 *  4.      5/25/11    T Dillon        Call child script to take 1st 20 chars of Msg Ctrl ID to shorten to 20 chars (HL7 standard)
 *  5.      5/22/13     PHopkins  Added CCL script to send the Placer Order number outbound for AP orders
 *  6.      10/29/13  H Kaczmarczyk   Added logic to move LOINC coding in OBX from OBX:3.1,.2,.3 to OBX:3.4,.5,.6 
 *                                                                and to copy Lcoding from OBX:3.1,.2 to OBX:3.4,.5      
 *  7.      11/13/13  H Kaczmarczyk  Adding Coding to pull the PCPE-Primary Care Physician at the encounter level,
 *                                                               clear lifetime PCP, and block PCPEs entered in Cerner manually.
 *  8.      12/02/13  H Kaczmarczyk Adding Coding to remove DONOTSEND w LOINC values, renumber OBX segments
 *                                                               and ignore messages when all OBX segments have been removed.
*   9.       9/25/14   H Kaczmarczyk Added Tony's coding for PID 11 e-mail address blocking
*  10.     10/27/16  H Kaczmarczyk   Added coding to blank out all life-time PCP physician identifiers in PD1
*  11.     11/9/17  J Starke   Added coding to pull correct ordering phys into obr16
*  12.    11/13/17    D Olszewski       Adding alias for OBR4.1 instead of L###, ;SR# 418292283
    *  ---------------------------------------------------------------------------------------------
*/

If(oen_reply->cerner->oe_info->message_version_cd = 89803074)
 go to exit_25
endif


;;MOD 11, 12
;;AP results, pull the correct order physician from ORDER_ACTION as Pathologist is updated incorrectly
if(oen_reply->RES_ORU_GROUP [1]->OBR [1]->diag_serv_sec_id = "AP")
  execute oencpm_msglog(build("AP Report=", char(0)))
  for(oru_x=1 to size(oen_reply->RES_ORU_GROUP, 5))
    for(y=1 to size(oen_reply->RES_ORU_GROUP [oru_x]->OBR, 5))
      declare orderid = f8 with public, noconstant(0.0)
      set orderid = cnvtreal(trim(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->placer_ord_nbr [1]->entity_id))
      execute oencpm_msglog(build("*** Order ID = ", orderid, char(0)))
    
      declare order_phys_alias = vc
      declare person_id = f8
      declare order_phys_last = vc
      declare order_phys_first = vc

      select into "nl:"
        oa.action_type_cd,
        oa.order_provider_id
      from order_action oa, prsnl p
      plan oa 
      where oa.order_id = orderid 
      and oa.action_type_cd = 2534 ;;order
      join p 
      where p.person_id = oa.order_provider_id
      detail
        order_phys_last = p.name_last_key
        order_phys_first = p.name_first_key
        person_id = p.person_id
      with nocounter

      declare orgdr_id_cv = f8
      set orgdr_id_cv = uar_get_code_by("DISPLAY", 320, "National Provider Identifier")

      declare orgdr_id = vc

      select into "nl:"
        pa.alias
      from prsnl_alias pa
      where pa.person_id = person_id 
      and pa.prsnl_alias_type_cd = orgdr_id_cv
      and pa.active_ind = 1
      and pa.end_effective_dt_tm > cnvtdatetime(curdate, curtime3)
      detail
        orgdr_id = pa.alias
      with nocounter
      execute oencpm_msglog(build("*** ORG Dr Number = ", orgdr_id, char(0)))
                      
      ;;Send ordering physician in OBR-16 
      set stat = alterlist(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider, 0)
      set stat = alterlist(oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider, 1)
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->id_nbr = orgdr_id
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->last_name = order_phys_last
      set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->first_name = order_phys_first
      Set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->assign_auth->name_id = "NPI Number"
      Set oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->id_type = "National Provider Identifier"
      execute oencpm_msglog(build("*** Ordering Phys = ", 
      oen_reply->RES_ORU_GROUP [oru_x]->OBR [y]->ord_provider [1]->last_name, char(0)))


                ;SR# 418292283
               ;Am046889
               
                declare catalo_obr_4_1 = vc
               declare catalo_obr_4_2 = vc
               
                SELECT INTO "nl:"
     cvo.alias, cv.description
     FROM orders o, code_value_outbound cvo, code_value cv
               plan o
     WHERE (o.order_id = orderid )
               join CVO 
                where cvo.code_value = o.catalog_cd
               and cvo.contributor_source_cd = 32762544.00 ; Invision  
                join cv 
                where cv.code_value = cvo.code_value
     DETAIL
      catalo_obr_4_1 = cvo.alias
                 catalo_obr_4_2 = cv.description
     WITH nocounter
               Set oen_reply->RES_ORU_GROUP [1]->OBR [1]->univ_service_id [1]->identifier = catalo_obr_4_1
               Set oen_reply->RES_ORU_GROUP [1]->OBR [1]->univ_service_id [1]->text = catalo_obr_4_2

                ;end Am046889
               ;end SR# 418292283
          
                      
    endfor ;;y
  endfor ;;x
endif ;;AP

/*********************Start Add Mod 7 PID 11 e-mail block T McArtor  08/04/14*******************************************/

declare pid_size = i4
declare p = i4
declare Sstreet = vc
declare Stypes = vc
declare Sother_desig = vc
declare Scity = vc
declare Sstate_prov = vc
declare Scountry = vc
declare Sother_geo_desig = vc
declare Scensus = vc
declare Szip_code = vc

  set pid_size = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address, 5)
  set p = 1

For (p = 1 to pid_size)

  If (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->types = "e-mail")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->street = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->types = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->other_desig = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->city = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->state_prov = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->zip_code = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->country = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->other_geo_desig = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->county = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [p]->census_tract = ""
  Endif
Endfor

If (pid_size>1)
     If (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->types = "Home")
       Set Sstreet = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->street 
       Set Stypes = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->types
       Set Sother_desig = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->other_desig
       Set Scity = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->city
       Set Sstate_prov = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->state_prov
       Set Scountry = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->country 
       Set Sother_geo_desig = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->other_geo_desig
       Set Scensus = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->census_tract 
       Set Szip_code = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->zip_code 
 
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->street = Sstreet
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->types = Stypes
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->other_desig = Sother_desig
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->city = Scity 
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->state_prov = Sstate_prov
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->zip_code = Szip_code
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->country = Scountry
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->other_geo_desig = Sother_geo_desig
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [1]->census_tract = Scensus

       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->street = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->types = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->other_desig = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->city = "" 
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->state_prov = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->zip_code = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->country = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->other_geo_desig = ""
       Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_address [2]->census_tract = ""
    Endif
 Endif

/*********************End Mod7  PID 11 e-mail block   T McArtor  08/04/14*******************************************/


/*********************Add the PCPE to PD1:4 H Kaczmarczyk 11/13/13*******************************************/

declare pt_enctr_id = f8
declare phys_NPInbr = vc
declare phys_name_first = vc
declare phys_name_last = vc

Set pt_enctr_id = oen_reply->cerner->encntr_prsnl_info->encntr [1]->encntr_id
Set phys_reltn = uar_get_code_by ("MEANING",333,"PCPE")
Set phys_number = uar_get_code_by ("DISPLAY",263,"NPI Number")

select into "nl:" 
  P.ALIAS, PR.NAME_LAST, PR.NAME_FIRST
  from ENCNTR_PRSNL_RELTN   E, PRSNL_ALIAS   P, PRSNL   PR
  plan e
    WHERE E.ENCNTR_ID = pt_enctr_id  and E.ENCNTR_PRSNL_R_CD = phys_reltn  and E.MANUAL_CREATE_IND= 0 
  join p
  where E.PRSNL_PERSON_ID = P.PERSON_ID   and P.ALIAS_POOL_CD = phys_number
   join pr
  WHERE P.PERSON_ID = PR.PERSON_ID
  detail
  phys_NPInbr = P.ALIAS
  phys_name_first = PR.NAME_FIRST
  phys_name_last = PR.NAME_LAST  
 WITH NOCOUNTER

/*********************10/27/16  Add Mod 10: PD1 Clear all old life time PCP identifiers Hope K.************************/

 Set pd1_size = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1, 5)

 If (pd1_size>0)
   Set stat = alterlist(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1, 0)
 Endif
 
 If (phys_NPInbr not in( "", NULL, " "))
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->id_nbr =  phys_NPInbr
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->last_name =  phys_name_last
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->first_name = phys_name_first
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->assign_auth->name_id  = "NPI Number"
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->name_type = "Personnel"
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PD1 [1]->pat_primary_provider [1]->id_type = "National Provider Identifier"
 Endif

  /***  12/23/10 R Quack - I had to go back and pull this information out of the Placer Filler Mod Object v4 script
used on the lab orders interface out becuase this result out script was calling that script to do this cleanup.
When we did the script cleanup and standardization efforst we modified the name of the lab mod object script
to orm_lab_outv# and so I don't know how this result mod object script was even calling that old Placer Filler Mod
Object script in Prod but it was somehow and the MSH segment was still being fixed for the Cloverleaf facility ID
and everything.  I only pulled the result section and pasted here for the ORC/OBR;3 order id since this interface
only processes results and we don't need the other portions that were in the lab script specific to orders only. I
also pulled in the logic to call the MSH_FAC_MODOBJ_OUT script and the clean up code for portions of PID/PV1.
***/

;;; 12/23/10 R Quack - This code was already in the previous version of this script so I left it in here.
if(oen_reply->RES_ORU_GROUP [1]->OBR [1]->diag_serv_sec_id = "Pharmacy")
Set OenStatus->Ignore=1
endif




;;; 12/23/10 R Quack - This code was already in the previos version of this script so I left it in here.
if(oen_reply->RES_ORU_GROUP [1]->OBR [1]->diag_serv_sec_id = "Pharmacy")
Set OenStatus->Ignore=1
endif

;;; 12/23/10 R Quack - This code was pulled in from OB lab script as desribed above
/***1/9/2009 - adding logic to put facility code in MSH for cloverleaf routing - FSI redesign***/
execute op_MSH_FAC_MODOBJ_OUT

/**********************Remove PID;5.7 field  R. Quack 4/29/10*****************************************************/
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_name [1]->name_type_cd = ""

/**********************Null SSN Person Reconcile fix   T. Dillon    11/5/07****************************************/
execute OENCPM_MSGLOG (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->ssn_nbr)

if(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->ssn_nbr ="999999999")
  set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->ssn_nbr =""
endif

/*****************Remove PV1;19 sub fields  R. Quack 4/29/10*****************************/
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->check_digit = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->check_digit_scheme = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_auth->name_id = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_auth->univ_id = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_auth->univ_id_type = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->type_cd = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_fac_id->name_id = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_fac_id->univ_id = ""
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr [1]->assign_fac_id->univ_id_type = ""

;;; 12/23/10 R Quack - This code was pulled in from OB lab script as desribed above
/**
Script to keep Cerner's order_id in ORC 3 (filler order #)
**/

/**

MOD                DATE                   NAME                               DESC
001                   5/9/02                    Chris Eakes                    Create

**/

   free set obr_temp
   set obr_temp = size(oen_reply->RES_ORU_GROUP,5)
   execute oencpm_msglog(build("ORC size -> ", obr_temp))

   ;/**ORC**/

   free set c
   set c = 0

   free set res_fill_entity
   free set res_fill_name
   free set res_fill_univ
   free set res_fill_type

   free set res_plac_entity
   free set res_plac_name
   free set res_plac_univ
   free set res_plac_type

   set res_fill_entity = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->entity_id)
   set res_fill_name = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->name_id)
   set res_fill_univ = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->univ_id)
   set res_fill_type = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->univ_id_type)

   set res_plac_entity = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->entity_id)
   set res_plac_name = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->name_id)
   set res_plac_univ = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->univ_id)
   set res_plac_type = trim(oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->univ_id_type)

   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->entity_id =   res_fill_entity
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->name_id = res_fill_name
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->univ_id = res_fill_univ
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->placer_ord_nbr [1]->univ_id_type = res_fill_type

   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->entity_id = res_plac_entity
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->name_id = res_plac_name
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->univ_id = res_plac_univ
   Set oen_reply->RES_ORU_GROUP [1]->ORC [1]->filler_ord_nbr [1]->univ_id_type = res_plac_type

   ;/**OBR**/

   free set res_obr_fill_entity
   free set res_obr_fill_name
   free set res_obr_fill_univ
   free set res_obr_fill_type

   free set res_obr_plac_entity
   free set res_obr_plac_name
   free set res_obr_plac_univ
   free set res_obr_plac_type

   For (c = 1 to obr_temp)
   set res_obr_fill_entity = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->entity_id)
   set res_obr_fill_name = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->name_id)
   set res_obr_fill_univ = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->univ_id)
   set res_obr_fill_type = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->univ_id_type)

   set res_obr_plac_entity = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->entity_id)
   set res_obr_plac_name = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->name_id)
   set res_obr_plac_univ = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->univ_id)
   set res_obr_plac_type = trim(oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->univ_id_type)

   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->entity_id =    res_obr_plac_entity
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->name_id =  res_obr_plac_name
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->univ_id =  res_obr_plac_univ
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->filler_ord_nbr [1]->univ_id_type =   res_obr_plac_type

   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->entity_id =  res_obr_fill_entity
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->name_id =  res_obr_fill_name
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->univ_id = res_obr_fill_univ
   Set oen_reply->RES_ORU_GROUP [c]->OBR [1]->placer_ord_nbr [1]->univ_id_type = res_obr_fill_type
   Endfor

 ;/**OBX**/

 declare x = i4
 declare index_to_remove = i4
 set obx_size = size(oen_reply->RES_ORU_GROUP->OBX_GROUP, 5)
 set x = 1

; find the OBX segment to remove
 while(x <=obx_size)
 set oen_reply->RES_ORU_GROUP ->OBX_GROUP [x]->OBX->set_id = cnvtstring(x)
 set index_to_remove = -1
 if (oen_reply->RES_ORU_GROUP->OBX_GROUP [x]->OBX->observation_id->alt_identifier = "DONOTSEND")
 set index_to_remove = x
 endif
; remove the unwanted OBX segment
 execute oencpm_msglog(build("remove index is: ", index_to_remove))
 if (index_to_remove > -1)
 set stat = alterlist(oen_reply->RES_ORU_GROUP-> OBX_GROUP, obx_size -1, x -1)
 set obx_size = obx_size -1
 else
 set x = x +1
 endif
 endwhile

; relocate LOINC coding

Set num_size = size(oen_reply->RES_ORU_GROUP->OBX_GROUP, 5)
Set lc = 1

For (lc = 1 to num_size)

     free set LOINC_code
     free set LOINC_desc  
     free set LOINC_contrib_sys
     free set Lcode
     free set Lcode_desc
     free set Lcode_contrib_sys 
     free set Dup_Lcode
     free set Dup_Lcode_desc

       If (oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->coding_system != "LOINC")
        Set Dup_Lcode=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->identifier
        Set Dup_Lcode_desc=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->text
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_identifier=Dup_Lcode
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_text =Dup_Lcode_desc
    Endif

       If (oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->coding_system = "LOINC")
        Set LOINC_code=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->identifier
        Set LOINC_desc=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->text
        Set LOINC_contrib_sys=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->
        coding_system 
        Set Lcode=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_identifier 
        Set Lcode_desc=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_text 
        Set Lcode_contrib_sys=oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->
        alt_coding_system 
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->identifier=Lcode
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->text=Lcode_desc
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->coding_system=
        Lcode_contrib_sys
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_identifier=LOINC_code
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_text =LOINC_desc
        Set oen_reply->RES_ORU_GROUP ->OBX_GROUP [lc]->OBX->observation_id->alt_coding_system=
        LOINC_contrib_sys
    Endif
Endfor

;If (size(oen_reply->RES_ORU_GROUP->OBX_GROUP, 5)=0)
; Set OenStatus->Ignore=1
;Endif

/***5/25/11 - adding logic to call child script to trim MSH;10 MsgCtrlID to 20 chars***/
execute OP_MSGCTRL_TRIM_OUT

/*** PHopkins 5/22/13***adding ccl to return the sender's order alias in OBR;19    *****/

DECLARE listsize = i4
DECLARE accessionid = vc
DECLARE ordalias = vc
DECLARE acttype = vc
DECLARE accnfound = i4

free set listsize
set x = 1

set listsize = size(oen_reply->RES_ORU_GROUP [1]->OBR [1]->filler_field1,5)

execute oencpm_msglog(build("LISTSIZE = ",listsize))

for (x = 1 to listsize)
   if (oen_reply->RES_ORU_GROUP [1]->OBR [1]->filler_field1 [x]->field_type = "HNA_ACCNID")

                 SET accessionid = oen_reply->RES_ORU_GROUP [1]->OBR [1]->filler_field1 [x]->value 
	 SET acttype = oen_reply->RES_ORU_GROUP [1]->OBR [1]->diag_serv_sec_id  
   endif
endfor

execute oencpm_msglog(build("Accession id = ",accessionid))
execute oencpm_msglog(build("Activity Type = ",acttype))

IF (acttype = "AP")

   SELECT ao.order_id,o.alias
     FROM accession_order_r ao, order_alias o
      PLAN ao
         WHERE ao.accession_id = cnvtint(accessionid)
             JOIN o where o.order_id = ao.order_id and o.alias not in("",NULL," ")
      DETAIL
             ordalias = o.alias
     WITH nocounter
   
execute oencpm_msglog(build("AP Order Alias = ",ordalias))


Set oen_reply->RES_ORU_GROUP [1]->OBR [1]->placer_ord_nbr [1]->entity_id = ordalias

ENDIF

#exit_25