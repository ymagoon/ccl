1.  Potential Indexes: ABD     Best Index: A      Optimizer’s Choice: A
2.  Potential Indexes: EF      Best Index: E      Optimizer’s Choice: E
3.  Potential Indexes: AC      Best Index: A      Optimizer’s Choice: C
4.  Potential Indexes: BCD     Best Index: D      Optimizer’s Choice: C

On problem 4, given the original fields, D is the best index.  

Adding a +0 to EXT_OWNER_CD reduces the number of fields available.  
At this point, B and D tie because they each index on EXT_CHILD_REFERENCE_ID.

The solution here is not to add the +0, but to fix the index.  
Why would we ever want to include Active_ind and then EXT_PARENT_REFERENCE_ID in an index?
EXT_PARENT_REFERENCE_ID is a very good index by itself and we would then desire it to be the first join in the index.
If we have a query like this in production, it would benefit from having the index of just EXT_CHILD_REFERENCE_ID and EXT_OWNER_CD.