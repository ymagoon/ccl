const ArgumentParser = require("argparse").ArgumentParser;
const jest = require("jest-cli");
const config = require("./jest.conf.js");
const glob = require("glob");
const parser = new ArgumentParser({
    description: "Jest Runner",
    addHelp: false
});
parser.addArgument("--debug", { nargs: 0 });
parser.addArgument("--testNamePattern");
parser.addArgument("--testPathPattern");
parser.addArgument("--setupDir");
const { debug, testNamePattern, testPathPattern, setupDir } = parser.parseArgs();

if (setupDir) {
    config.setupFilesAfterEnv.push(...glob.sync(`${setupDir}/**/*.js`));
}

const updatedConfig = Object.assign(
    config,
    debug ? { runInBand: true } : {},
    testNamePattern ? { testNamePattern } : {}
);

jest.runCLI(updatedConfig, ".")
    .then(({ results }) => {
        const { numFailedTests, numRuntimeErrorTestSuites } = results;

        if (numFailedTests === 0 && numRuntimeErrorTestSuites === 0) {
            process.exitCode = 0;
        } else {
            process.exitCode = 1;
        }
    });
