import { UIComponent, composite } from "MPageFusion";
import { DISPATCH, STATIC_CONTENT_LOCATION_CHANGE } from "../actions";
const { form: { FormTextBox }} = composite;

/**
 * Events private to this control.
 * @type {{VALUE_CHANGE: string}}
 */
const PRIVATE_EVENTS = {
    VALUE_CHANGE: "__StaticContentInput::valueChange__"
};

/**
 * Creates an input for the static content location.
 * @class StaticContentInput
 */
class StaticContentInput extends UIComponent {
    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            value: (value) => this.getChild("input").setProp("value", value)
        }
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            {
                input: new FormTextBox({
                    helperHandler: (_, el) => el("div", {}, [
                        el("div", {}, "The path to the root directory of a local copy of static content."),
                        el(
                            "em",
                            {},
                            "Note: the static content may need to be built without the artifact being tested"
                            + " to ensure the artifact is not overwritten by the existing version."
                        )
                    ]),
                    showHelperText: true,
                    display: "Static Content Location",
                    valueChangeEventName: PRIVATE_EVENTS.VALUE_CHANGE
                })
            }
        ]
    }

    /**
     * @inheritDoc
     */
    afterCreate() {
        this.on(PRIVATE_EVENTS.VALUE_CHANGE, (src, payload) => {
            this.emit(DISPATCH, {
                type: STATIC_CONTENT_LOCATION_CHANGE,
                payload: payload
            });
        });
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mappedChildren) {
        return el("div", {}, [
            mappedChildren.input.render()
        ]);
    }
}

export default StaticContentInput;
