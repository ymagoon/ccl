import * as Fusion from "MPageFusion";

const FormTextBox = Fusion.composite.form.FormTextBox;
const Button = Fusion.atomic.button.Button;
const { emitUsingProp } = Fusion.helpers.props;

const ALIAS_CHANGE = "AddFolder::AliasChange";
const PATH_CHANGE = "AddFolder::PathChange";
const ADD_CLICK = "AddFolder::AddClick";

export default class AddFolder extends Fusion.UIComponent {

    initialProps() {
        return {
            alias: "",
            path: "",
            addEventName: "AddFolder::Add"
        };
    }

    createChildren() {
        return [
            {
                alias: new FormTextBox({
                    display: "Alias",
                    valueChangeEventName: ALIAS_CHANGE
                })
            },
            {
                path: new FormTextBox({
                    display: "Relative or absolute path",
                    valueChangeEventName: PATH_CHANGE
                })
            },
            {
                add: new Button({
                    display: "Add",
                    clickEventName: ADD_CLICK
                })
            }
        ];
    }

    afterCreate() {
        this.on(ALIAS_CHANGE, (source, value) => this.setProp("alias", value.value));
        this.on(PATH_CHANGE, (source, value) => this.setProp("path", value.value));
        this.on(ADD_CLICK, () => {
            this.emit(this.getProp("addEventName"), {
                alias: this.getProp("alias"),
                path: this.getProp("path")
            });
        });
    }

    view(el, props, children, mChildren) {
        return this.renderChildren();
    }
}
