const path = require("path");

const applyDefaultConfig = (config) =>
      Object.assign({}, {
          folders: {}

      }, config);

const readConfig = (gaia, args) =>
    gaia.runCommand(
        "config",
        "readPrivate",
        Object.assign(args, {
            plugin: "contentserver"
        })
    )
      .then(applyDefaultConfig)
      .then((config) => config
            ? Promise.resolve(config)
            : Promise.resolve({})
           );

const saveConfig = (gaia, args, config) =>
    gaia.runCommand(
        "config",
        "writePrivate",
        {
            config: config,
            plugin: "contentserver"
        }
    );

const allFolders = (gaia, args) =>
    readConfig(gaia, args)
      .then((config) => {
          console.log(config.folders);
          return Promise.resolve(config.folders);
      });

const addFolder = (gaia, args) =>
    readConfig(gaia, args)
      .then(
          (config) => {
              if (!config.folders) {
                  config.folders = {};
              }
              config.folders[args.alias] = args.path;
              return saveConfig(
                  gaia,
                  args,
                  config
              );
          });

const removeFolder = (gaia, args) =>
    readConfig(gaia, args)
      .then(
          (config) => {
              config.folders[args.alias] = undefined;
              return saveConfig(
                  gaia,
                  args,
                  config
              );
          }
      );


module.exports = {
    allFolders,
    addFolder,
    removeFolder
};
