"use strict";

const path = require("path");
const ExtractTextPlugin = require("extract-text-webpack-plugin");
const webpack = require("webpack");

const baseConfig = (outPatch = "") => {
    const extractCSS = new ExtractTextPlugin(`./dist/${outPatch}css/mpage-fusion.css`);

    return {
        entry: {
            "mpage-fusion": "./src/main/js/cerner/mpagedev/mpagefusion/api.js",
            "style": "./src/main/less/cerner/mpagedev/mpagefusion/api.less"
        },
        output: {
            path: path.resolve(__dirname, "../../.."),
            filename: `./dist/${outPatch}js/[name].js`,
            library: "MPageFusion",
            libraryTarget: "window"
        },
        resolve: {
            modules: [
                process.cwd(),
                "node_modules"
            ]
        },
        module: {
            rules: [
                {
                    test: /\.(png|svg)$/,
                    use: "url-loader"
                },
                {
                    test: /\.(less|css)$/,
                    loader: extractCSS.extract([ "css-loader?minimize", "less-loader" ])
                }
            ]
        },
        plugins: [
            extractCSS,
            new webpack.optimize.ModuleConcatenationPlugin({}),
            new webpack.optimize.UglifyJsPlugin({
                compress: {
                    warnings: false
                },
                mangle: false,
                minimize: true
            })
        ],
        stats: {
            // Nice colored output
            colors: true
        }
    };
};

const jsLoaderConfig = (type, version, babelConfig) => ({
    test: /\.(js|jsx)$/,
    include: [
        path.join(__dirname, "../../../src/main/js/cerner/mpagedev/mpagefusion"),
        path.join(__dirname, "../../../src/main/i18n/cerner/mpagedev/mpagefusion")
    ],
    use: [
        babelConfig(type, version)
    ]
});

module.exports = {
    baseConfig,
    jsLoaderConfig
};
