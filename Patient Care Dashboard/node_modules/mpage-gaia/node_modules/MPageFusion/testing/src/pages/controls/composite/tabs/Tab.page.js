"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-Tab";
var TAB_LABEL_ACCESSORY = ".mpageui-TabLabel-accessory";
var TAB_LABEL_DISPLAY = ".mpageui-TabLabel-display";
/**
 * The TabPage class
 * @alias module:MPageFusion/testing.composite.navigation.TabControlPage.tab
 * @class TabPage
 * @private
 */

var TabPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(TabPage, _UIComponentPage);

  function TabPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  var _proto = TabPage.prototype;

  /**
   * clicks the tab
   * @memberOf module:MPageFusion/testing.composite.navigation.TabPage
   * @returns {Promise} resolves when the action completes
   */
  _proto.click = function click() {
    return this.getRootElement().then(function (element) {
      return element.click();
    });
  };

  _createClass(TabPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * gets the tab display
     * @memberOf module:MPageFusion/testing.composite.navigation.TabPage
     * @returns {Promise<string>} display
     */

  }, {
    key: "display",
    get: function get() {
      return this.getNestedElement(TAB_LABEL_DISPLAY).then(function (element) {
        return element.getText();
      });
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.navigation.TabPage
     * @returns {Promise<String>} isSelected
     */

  }, {
    key: "isSelected",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("aria-selected");
      }).then(function (element) {
        return JSON.parse(element);
      });
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.navigation.TabPage
     * @returns {Promise<String>} isTabDraggable
     */

  }, {
    key: "isDraggable",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("draggable");
      }).then(function (attribute) {
        return Boolean(attribute);
      });
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.navigation.TabPage
     * @returns {Promise<String>} tabAccessorySelectorList
     */

  }, {
    key: "tabAccessorySelectorList",
    get: function get() {
      return this.selectorList.concat(TAB_LABEL_ACCESSORY);
    }
  }]);

  return TabPage;
}(_UIComponent["default"]);

exports["default"] = TabPage;