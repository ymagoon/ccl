"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-Notify";
/**
 * The Notify class
 * @class module:MPageFusion/testing.atomic.indicator.Notify
 *
 * @example
 * const notify = new Notify(driver);
 * await notify.isDisplayed() - to check whether notify is displayed
 * await notify.isValidTransition("fade") - to check whether its valid transition
 */

var NotifyPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(NotifyPage, _UIComponentPage);

  function NotifyPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  var _proto = NotifyPage.prototype;

  /**
   * Returns the boolean value stating whether the elements transition name is same as argument passed .
   * @param {String} transitionName - transition name.
   * @memberOf module:MPageFusion/testing.atomic.indicator.Notify
   * @returns {Promise<Boolean>} boolean stating whether the elements transition name is same as argument passed.
   */
  _proto.isValidTransition = function isValidTransition(transitionName) {
    return this.getRootElement().then(function (itemsElement) {
      return itemsElement.getAttribute("class");
    }).then(function (classNames) {
      return classNames.includes("mpageui-Notify--" + transitionName + "--enter--active");
    })["catch"](function () {
      return false;
    });
  };

  _createClass(NotifyPage, [{
    key: "elementSelector",

    /**
     * @private
     */
    get: function get() {
      return ROOT_SELECTOR;
    }
  }]);

  return NotifyPage;
}(_UIComponent["default"]);

exports["default"] = NotifyPage;