"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _List = _interopRequireDefault(require("../../../helpers/List"));

var _Checkbox = _interopRequireDefault(require("../../atomic/checkbox/Checkbox.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-CheckboxGroup";
/**
 * The CheckboxGroupPage class
 * @class module:MPageFusion/testing.composite.checkbox.CheckboxGroupPage
 *
 * @example
 * const checkboxGroup = new CheckboxGroupPage(driver);
 * checkboxGroup.checkbox(2).get("isSelected")
 *     .then((isSelected) => {
 *         assert.isTrue(isSelected);
 *     });
 */

var CheckboxGroupPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(CheckboxGroupPage, _UIComponentPage);

  function CheckboxGroupPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(CheckboxGroupPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.checkbox.CheckboxGroupPage
     * @returns {List<module:MPageFusion/testing.atomic.checkbox.CheckboxPage>} checkbox
     */

  }, {
    key: "checkbox",
    get: function get() {
      return (0, _List["default"])({
        list: this,
        itemPage: _Checkbox["default"],
        selectorList: this.selectorList
      });
    }
  }]);

  return CheckboxGroupPage;
}(_UIComponent["default"]);

exports["default"] = CheckboxGroupPage;