"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _List = _interopRequireDefault(require("../../../helpers/List"));

var _Tab = _interopRequireDefault(require("./Tab.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-TabControl";
var TAB_LIST = ".mpageui-TabList";
var CONTENT_SELECTOR = ".mpageui-TabContents";
/**
 * The TabControlPage class
 * @class module:MPageFusion/testing.composite.navigation.TabControlPage
 *
 * @example
 * const tabControl = new TabControlPage(driver);
 * tabControl.tab(1).click()
 */

var TabControlPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(TabControlPage, _UIComponentPage);

  function TabControlPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(TabControlPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.navigation.TabControlPage
     * @returns {List<module:MPageFusion/testing.composite.navigation.TabsPage.tabs>} tabs
     */

  }, {
    key: "tabs",
    get: function get() {
      return (0, _List["default"])({
        list: this,
        itemPage: _Tab["default"],
        selectorList: this.selectorList,
        containerSelector: TAB_LIST
      });
    }
    /**
     * gets the tab content selector list
     * @memberOf module:MPageFusion/testing.composite.navigation.TabControlPage
     * @returns {Array} tabContentSelectorList
     */

  }, {
    key: "tabContentSelectorList",
    get: function get() {
      return this.selectorList.concat(CONTENT_SELECTOR);
    }
    /**
     * gets the index of currently selected tab
     * @memberOf module:MPageFusion/testing.composite.navigation.TabControlPage
     * @returns {Promise<Number>} selectedTabIndex
     */

  }, {
    key: "selectedTabIndex",
    get: function get() {
      return this.tabs.all().then(function (elements) {
        return Promise.all(elements.map(function (element) {
          return element.isSelected;
        }));
      }).then(function (result) {
        return result.indexOf(true);
      });
    }
    /**
     * gets the count of tabs
     * @memberOf module:MPageFusion/testing.composite.navigation.TabControlPage
     * @returns {Promise<Number>} count
     */

  }, {
    key: "count",
    get: function get() {
      return this.tabs.count();
    }
    /**
     * @memberOf module:MPageFusion/testing.composite.navigation.TabControlPage
     * @returns {Promise<String>} tabListOrientation
     */

  }, {
    key: "tabListOrientation",
    get: function get() {
      return this.getNestedElement(TAB_LIST).then(function (element) {
        return element.getAttribute("aria-orientation");
      });
    }
  }]);

  return TabControlPage;
}(_UIComponent["default"]);

exports["default"] = TabControlPage;