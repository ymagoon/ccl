"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _List = _interopRequireDefault(require("../../../helpers/List"));

var _DemographicsDetails = _interopRequireDefault(require("./DemographicsDetails.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-DemographicsBanner";
var PERSON_NAME = ".mpageui-DemographicsBanner-personName";
var APPLICATION_CONTENT = ".mpageui-DemographicsBanner-applicationContent";
var PERSON_DETAILS = ".mpageui-DemographicsBanner-personDetails";
var PERSON_IDENTIFIERS = ".mpageui-DemographicsBanner-identifiers";
/**
 * The DemographicsBannerPage class
 * @class module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
 *
 * @example
 * const demographicsBanner = new DemographicsBannerPage(driver);
 * demographicsBanner.get("personName").then((name) =>  assert(name === "Alfred Fucion");
 */

var DemographicsBannerPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(DemographicsBannerPage, _UIComponentPage);

  function DemographicsBannerPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(DemographicsBannerPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * gets the person name
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<string>} person name
     */

  }, {
    key: "personName",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(PERSON_NAME));
      }).then(function (element) {
        return element.getText();
      });
    }
    /**
    * gets custom content as provided by the consumer
    * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
    * @returns {Promise<string>} custom content as provided by the consumer
    */

  }, {
    key: "applicationContent",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(APPLICATION_CONTENT));
      }).then(function (element) {
        return element.getText();
      });
    }
    /**
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsDetailsPage
     * @returns {List<module:MPageFusion/testing.atomic.demographics.DemographicsDetailsPage>} list of children
     */

  }, {
    key: "demographicsDetails",
    get: function get() {
      return (0, _List["default"])({
        list: this,
        itemPage: _DemographicsDetails["default"],
        selectorList: this.selectorList,
        containerSelector: PERSON_DETAILS
      });
    }
    /**
     * Gets age from demographics details
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<String>} age
     */

  }, {
    key: "age",
    get: function get() {
      return this.demographicsDetails(0).display;
    }
    /**
     * Gets gender from demographics details
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<String>} gender
     */

  }, {
    key: "gender",
    get: function get() {
      return this.demographicsDetails(1).display;
    }
    /**
     * Gets birthDate from demographics details
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<Object>} birthDate
     */

  }, {
    key: "birthDate",
    get: function get() {
      return this.demographicsDetails(2).display.then(function (element) {
        return {
          label: element.split(":\n")[0],
          value: element.split(":\n")[1]
        };
      });
    }
    /**
     * Gets all the other additional details from demographics details
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<Array>} resolves with an array
     */

  }, {
    key: "personAdditionalDetails",
    get: function get() {
      var _this = this;

      return this.demographicsDetails.count().then(function (result) {
        return result > 3 ? _this.additionalDetails : [];
      });
    }
    /**
     * Gets all elements from demographics details
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<Array>} resolves with an array of objects
     */

  }, {
    key: "additionalDetails",
    get: function get() {
      return this.demographicsDetails.all().then(function (elements) {
        return Promise.all(elements.map(function (element) {
          return element.display.then(function (result) {
            return {
              label: result.split(":\n")[0],
              value: result.split(":\n")[1]
            };
          });
        }));
      });
    }
    /**
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsDetailsPage
     * @returns {List<module:MPageFusion/testing.atomic.demographics.DemographicsDetailsPage>} list of children
     */

  }, {
    key: "demographicsIdentifiers",
    get: function get() {
      return (0, _List["default"])({
        list: this,
        itemPage: _DemographicsDetails["default"],
        selectorList: this.selectorList,
        containerSelector: PERSON_IDENTIFIERS
      });
    }
    /**
     * Gets all the demographics identifiers in an array
     * @memberOf module:MPageFusion/testing.atomic.demographics.DemographicsBannerPage
     * @returns {Promise<Array>} resolves with an array
     */

  }, {
    key: "personIdentifiers",
    get: function get() {
      return this.demographicsIdentifiers.all().then(function (elements) {
        return Promise.all(elements.map(function (element) {
          return element.display.then(function (result) {
            return {
              label: result.split(":\n")[0],
              value: result.split(":\n")[1]
            };
          });
        }));
      });
    }
  }]);

  return DemographicsBannerPage;
}(_UIComponent["default"]);

exports["default"] = DemographicsBannerPage;