"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _Select = _interopRequireDefault(require("../../atomic/select/Select.page"));

var _Search = _interopRequireDefault(require("../search/Search.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-ScopedSearch";
/**
 * The ScopedSearchPage class
 * @class module:MPageFusion/test.composite.search.ScopedSearchPage
 *
 * @example
 * const scopedSearch = new ScopedSearchPage(driver);
 * assert(scopedSearch.isDisabled);
 */

var ScopedSearchPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(ScopedSearchPage, _UIComponentPage);

  function ScopedSearchPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(ScopedSearchPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
  }, {
    key: "_select",
    get: function get() {
      return new _Select["default"](this.driver, {
        selectorList: this.selectorList
      });
    }
  }, {
    key: "_search",
    get: function get() {
      return new _Search["default"](this.driver, {
        selectorList: this.selectorList
      });
    }
    /**
     * whether the scopedSearch control is disabled
     * @memberOf module:MPageFusion/testing.composite.scopedSearch.ScopedSearchPage
     * @returns {Promise<boolean>} true or false
     */

  }, {
    key: "isDisabled",
    get: function get() {
      return Promise.all([this._select.isDisabled, this._search.isDisabled]).then(function (results) {
        return Boolean(results[0] && results[1]);
      });
    }
    /**
     * Returns hasSearchFocus prop
     * @memberOf module:MPageFusion/testing.composite.scopedSearch.ScopedSearchPage
     * @returns {Promise<boolean>} true or false
     */

  }, {
    key: "hasSearchFocus",
    get: function get() {
      return this._search.isFocused;
    }
    /**
     * Returns dropDownOptions
     * @memberOf module:MPageFusion/testing.composite.scopedSearch.ScopedSearchPage
     * @returns {Promise<object>} dropDownOptions object
     */

  }, {
    key: "dropDownOptions",
    get: function get() {
      return this._select.options;
    }
    /**
     * Returns searchList options
     * @memberOf module:MPageFusion/testing.composite.scopedSearch.ScopedSearchPage
     * @returns {Promise<object>} searchList options object
     */

  }, {
    key: "searchList",
    get: function get() {
      return this._search.option;
    }
  }]);

  return ScopedSearchPage;
}(_UIComponent["default"]);

exports["default"] = ScopedSearchPage;