"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _List = _interopRequireDefault(require("../../../helpers/List"));

var _SvgIcon = _interopRequireDefault(require("../../atomic/icon/svg/SvgIcon.page"));

var _DetailPanelSubTitle = _interopRequireDefault(require("./DetailPanelSubTitle.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-DetailPanelTitle";
var TITLE = ".mpageui-DetailPanelTitle-title";
var ROOT_SUBTITLE = ".mpageui-DetailPanelTitle-subTitles";
var ICON = ".mpageui-DetailPanelTitle-icon";
/**
 * The DetailPanelTitlePage class
 * @class module:MPageFusion/testing.composite.panel.DetailPanelTitlePage
 */

var DetailPanelTitlePage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(DetailPanelTitlePage, _UIComponentPage);

  function DetailPanelTitlePage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(DetailPanelTitlePage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * returns instance of SvgIconPage instance
     * Example: detailPanel.titleContent.icon.type returns type of the icon.
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelTitlePage
     * @returns {SvgIconPage} instance of SvgIconPage
     */

  }, {
    key: "icon",
    get: function get() {
      return new _SvgIcon["default"](this.driver, {
        selectorList: this.selectorList.concat(ICON)
      });
    }
    /**
     * returns main title of the detail panel
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelTitlePage
     * @returns {Promise<String>} the main title
     */

  }, {
    key: "title",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(TITLE)).then(function (title) {
          return title.getText();
        });
      });
    }
    /**
     * returns selector list for title content
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelTitlePage
     * @returns {Array<String>} title content selector list
     */

  }, {
    key: "titleContentSelectorList",
    get: function get() {
      return this.selectorList.concat(TITLE);
    }
    /**
     * returns list of subtitle
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelTitlePage
     * @returns {List<DetailPanelSubTitle>} list of subtitle
     */

  }, {
    key: "subtitle",
    get: function get() {
      return (0, _List["default"])({
        list: this,
        itemPage: _DetailPanelSubTitle["default"],
        selectorList: this.selectorList,
        containerSelector: ROOT_SUBTITLE
      });
    }
  }]);

  return DetailPanelTitlePage;
}(_UIComponent["default"]);

exports["default"] = DetailPanelTitlePage;