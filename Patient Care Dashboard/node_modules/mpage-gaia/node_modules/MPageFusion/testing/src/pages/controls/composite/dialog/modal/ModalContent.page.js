"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../../UIComponent.page"));

var _ModalHeader = _interopRequireDefault(require("./ModalHeader.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var CONTENT_SELECTOR = ".mpageui-Modal-content";
var BODY_SELECTOR = ".mpageui-Modal-body";
var FOOTER_SELECTOR = ".mpageui-Modal-footer";
var SIZE = {
  SMALL: "small",
  MEDIUM: "medium",
  LARGE: "large",
  CUSTOM: "custom"
};
/**
 * The ModalContentPage class
 * @alias module:MPageFusion/testing.composite.dialog.ModalPage.content
 * @class ModalContentPage
 * @private
 */

var ModalContentPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(ModalContentPage, _UIComponentPage);

  function ModalContentPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(ModalContentPage, [{
    key: "elementSelector",
    get: function get() {
      return CONTENT_SELECTOR;
    }
  }, {
    key: "header",
    get: function get() {
      return new _ModalHeader["default"](this.driver, {
        selectorList: this.selectorList
      });
    }
  }, {
    key: "bodySelectorList",
    get: function get() {
      return this.selectorList.concat(BODY_SELECTOR);
    }
  }, {
    key: "footerSelectorList",
    get: function get() {
      return this.selectorList.concat(FOOTER_SELECTOR);
    }
  }, {
    key: "size",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Object.values(SIZE).find(function (style) {
          return classNames.includes("mpageui-Modal--" + style);
        }) || "";
      });
    }
  }]);

  return ModalContentPage;
}(_UIComponent["default"]);

exports["default"] = ModalContentPage;