"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _FormControl = _interopRequireDefault(require("../FormControl.page"));

var _Search = _interopRequireDefault(require("../../../composite/search/Search.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-FormSearch";
/**
 * The FormCheckboxPage class
 * @class module:MPageFusion/testing.composite.form.FormSearchPage
 *
 * @example
 * const formSearchBar = new FormSearchPage(driver);
 * formSearchBar.option(1).display
 *     .then((display) => {
 *         assert(display === "Sample Label");
 *     });
 */

var FormSearchPage =
/*#__PURE__*/
function (_FormControlPage) {
  _inheritsLoose(FormSearchPage, _FormControlPage);

  function FormSearchPage(driver, options) {
    var _this;

    _this = _FormControlPage.call(this, driver, options) || this;
    _this._search = new _Search["default"](driver, {
      selectorList: _this.selectorList
    });
    return _this;
  }

  var _proto = FormSearchPage.prototype;

  /**
   * sendkeys to the search bar
   * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
   * @param {String} text - the input text
   * @returns {Promise} resolves when the action is completed
   */
  _proto.enterText = function enterText(text) {
    return this._search.enterText(text);
  }
  /**
   * clears text from the search bar textbox
   * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
   * @returns {Promise} resolves when the action is completed
   */
  ;

  _proto.clearText = function clearText() {
    return this._search.clearText();
  }
  /**
   * clicks the search icon button
   * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
   * @returns {Promise} resolves when the action is completed
   */
  ;

  _proto.click = function click() {
    return this._search.click();
  }
  /**
   * clicks the close indicator in the search bar to clear text
   * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
   * @returns {Promise} resolves when the action is completed
   */
  ;

  _proto.clear = function clear() {
    return this._search.clear();
  }
  /**
   * clicks on the search list overlay
   * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
   * @returns {Promise} resolves when the action completes
   */
  ;

  _proto.clickOut = function clickOut() {
    return this._search.clickOut();
  };

  _createClass(FormSearchPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
  }, {
    key: "searchPage",
    get: function get() {
      return this._search;
    }
    /**
     * whether the search bar is disabled
     * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
     * @returns {Promise<boolean>} true or false
     */

  }, {
    key: "isDisabled",
    get: function get() {
      return this._search.isDisabled;
    }
    /**
     * search list item
     * @memberOf module:MPageFusion/testing.composite.form.FormSearchPage
     * @returns {List<module:MPageFusion/testing.composite.search.SearchPage.searchList>} searchList
     */

  }, {
    key: "option",
    get: function get() {
      return this._search.option;
    }
  }]);

  return FormSearchPage;
}(_FormControl["default"]);

exports["default"] = FormSearchPage;