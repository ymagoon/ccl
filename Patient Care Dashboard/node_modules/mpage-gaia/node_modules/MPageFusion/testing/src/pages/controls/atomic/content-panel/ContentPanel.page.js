"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _ContentHeader = _interopRequireDefault(require("../header/content-header/ContentHeader.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-ContentPanel";
var BODY_SELECTOR = ".mpageui-ContentPanel-body";
var THEME = {
  OUTSIDE_RECORDS: "mpageui-u-bg-outside-records"
};
/**
 * The ContentPanelPage class
 * @class module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
 *
 * @example
 * const contentPanel = new ContentPanelPage(driver,"");
 * contentPanel.click()
 */

var ContentPanelPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(ContentPanelPage, _UIComponentPage);

  function ContentPanelPage(driver, args) {
    var _this;

    _this = _UIComponentPage.call(this, driver, args) || this;
    _this._contentHeader = new _ContentHeader["default"](driver, {
      selectorList: _this.selectorList,
      useExactSelector: true
    });
    return _this;
  }

  var _proto = ContentPanelPage.prototype;

  /**
   * toggle the content panel body on click of header
   * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
   * @returns {Promise<string>} click action
   */
  _proto.click = function click() {
    return this._contentHeader.leftAction.click();
  }
  /**
   * whether or not the content panel is collapsed
   * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
   * @returns {Promise<boolean>} isCollapsed
   */
  ;

  /**
   * collapses the content panel
   * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
   * @returns {Promise} - resolves when the action has completed
   */
  _proto.collapse = function collapse() {
    var _this2 = this;

    return this.isCollapsed.then(function (isCollapsed) {
      if (isCollapsed) {
        throw new Error("ContentPanel not expanded");
      } else {
        return _this2._contentHeader.leftAction.click();
      }
    });
  }
  /**
   * expands the content panel
   * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
   * @returns {Promise} - resolves when the action has completed
   */
  ;

  _proto.expand = function expand() {
    var _this3 = this;

    return this.isCollapsed.then(function (isCollapsed) {
      if (!isCollapsed) {
        throw new Error("ContentPanel not collapsed");
      } else {
        return _this3._contentHeader.leftAction.click();
      }
    });
  }
  /**
   * the contentPanel theme
   * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanel
   * @returns {Promise<string>} theme
   */
  ;

  _createClass(ContentPanelPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * gets the content panel body selector list
     * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
     * @returns {Array} selector list
     */

  }, {
    key: "bodySelectorList",
    get: function get() {
      return this.selectorList.concat(BODY_SELECTOR);
    }
    /**
     * gets the content panel footer selector list
     * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
     * @returns {Array} selector list
     */

  }, {
    key: "footerSelectorList",
    get: function get() {
      return this.selectorList;
    }
    /**
     * gets the content panel header display
     * @memberOf module:MPageFusion/testing.atomic.contentPanel.ContentPanelPage
     * @returns {Promise<string>} header display
     */

  }, {
    key: "headerDisplay",
    get: function get() {
      return this._contentHeader.display;
    }
  }, {
    key: "isCollapsed",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(BODY_SELECTOR)).then(function () {
          return false;
        })["catch"](function () {
          return true;
        });
      });
    }
  }, {
    key: "theme",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Object.values(THEME).find(function (backgroundTheme) {
          return classNames.includes(THEME.OUTSIDE_RECORDS);
        }) || "";
      });
    }
  }]);

  return ContentPanelPage;
}(_UIComponent["default"]);

exports["default"] = ContentPanelPage;