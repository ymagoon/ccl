"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _ContentHeader = _interopRequireDefault(require("../../atomic/header/content-header/ContentHeader.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-DetailPanelLayout";
var DETAIL_PANEL_NAMESPACE = ".mpageui-DetailPanelLayout-panel .mpageui-DetailPanel";
var BANNER_SECTION = ".mpageui-DetailPanel-bannersSection";
var TITLE_SECTION = ".mpageui-DetailPanel-titleSection";
var BODY_SECTION = ".mpageui-DetailPanel-bodySection";
var DETAIL_PANEL_SIZES = {
  READING_PANE: "sizeReading",
  FULL_SCREEN: "sizeFullScreen"
};
var CLOSE_BUTTON = ".mpageui-ContentHeader-action-right";
/**
 * The DetailPanelPage class
 * @class module:MPageFusion/testing.composite.panel.DetailPanelPage
 *
 * @example
 * const panel = new composite.panel.DetailPanelPage(driver);
 * panel.isOpen returns state of detail panel
 * panel.size returns the either reading or fullscreen size of panel
 * panel.close() closes the detail panel
 * panel.headerContent retuns instance of ContentHeaderPage instance
 * panel.bodySelectorList returns the selector list for body content
 */

var DetailPanelPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(DetailPanelPage, _UIComponentPage);

  function DetailPanelPage(driver, options) {
    var _this;

    if (options === void 0) {
      options = {
        panelIndex: null
      };
    }

    _this = _UIComponentPage.call(this, driver, options) || this; // Custom value could be set if there are multiple detail panels within the root.

    _this.detailPanelNamespace = options.panelIndex ? ".mpageui-DetailPanelLayout-panel:nth-child(" + options.panelIndex + ") .mpageui-DetailPanel" : DETAIL_PANEL_NAMESPACE;
    return _this;
  }

  var _proto = DetailPanelPage.prototype;

  /**
   * closes the detail panel
   * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
   * @returns {Promise} closes the detail panel
   */
  _proto.close = function close() {
    var _this2 = this;

    // using sendkeys to trigger ENTER key press event on the CLOSE(X) button which is supported in both Desktop and Mobile Web.
    return this.getRootElement().then(function (element) {
      return element.findElement(_seleniumWebdriver.By.css(_this2.detailPanelNamespace + " " + CLOSE_BUTTON)).then(function (closeButton) {
        return closeButton.sendKeys(_seleniumWebdriver.Key.ENTER);
      });
    });
  }
  /**
   * returns content header page instance
   * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
   * @returns {ContentHeaderPage} content header page instance
   */
  ;

  _createClass(DetailPanelPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * returns true if detail panel is open false otherwise
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
     * @returns {Promise<Boolean>} true if open, false otherwise
     */

  }, {
    key: "isOpen",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class").then(function (classNames) {
          return classNames.includes("is-open") || false;
        });
      });
    }
    /**
     * size of the detail panel, reading or fullscreen mode if applied else null
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
     * @returns {Promise<String>} reading or fullscreen mode if applied else null
     */

  }, {
    key: "size",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Object.values(DETAIL_PANEL_SIZES).find(function (size) {
          return classNames.includes("mpageui-DetailPanelLayout--" + size);
        }) || null;
      });
    }
  }, {
    key: "headerContent",
    get: function get() {
      return new _ContentHeader["default"](this.driver, {
        selectorList: this.selectorList.concat(this.detailPanelNamespace)
      });
    }
    /**
     * returns banner selector list
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
     * @returns {Array<String>} banner selector list
     */

  }, {
    key: "bannerContentSelectorList",
    get: function get() {
      return this.selectorList.concat(this.detailPanelNamespace, BANNER_SECTION);
    }
    /**
     * returns title selector list
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
     * @returns {Array<String>} title selector list
     */

  }, {
    key: "titleContentSelectorList",
    get: function get() {
      return this.selectorList.concat(this.detailPanelNamespace, TITLE_SECTION);
    }
    /**
     * returns body selector list
     * @memberOf module:MPageFusion/testing.composite.panel.DetailPanelPage
     * @returns {Array<String>} body selector list
     */

  }, {
    key: "bodyContentSelectorList",
    get: function get() {
      return this.selectorList.concat(this.detailPanelNamespace, BODY_SECTION);
    }
  }]);

  return DetailPanelPage;
}(_UIComponent["default"]);

exports["default"] = DetailPanelPage;