"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../../UIComponent.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-RadioButton";
var RADIOBUTTON_INPUT = ".mpageui-RadioButton-input";
var RADIOBUTTON_DISPLAY = ".mpageui-RadioButton-display";
var RADIOBUTTON_DISABLED = "mpageui-RadioButton--disabled";
var RADIOBUTTON_INLINE = "mpageui-RadioButton--inline";
/**
 * The ButtonPage class
 * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
 */

var RadioButtonPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(RadioButtonPage, _UIComponentPage);

  function RadioButtonPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  var _proto = RadioButtonPage.prototype;

  /**
   * clicks the Radiobutton
   * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
   * @returns {Promise} resolves when the action is completed
   */
  _proto.click = function click() {
    return this.getRootElement().then(function (element) {
      return element.click();
    });
  };

  _createClass(RadioButtonPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * the Radiobutton display
     * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
     * @returns {Promise<string>} display
     */

  }, {
    key: "display",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(RADIOBUTTON_DISPLAY));
      }).then(function (element) {
        return element.getText();
      });
    }
    /**
     * whether the Radiobutton is disabled
     * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
     * @returns {Promise<boolean>} isDisabled
     */

  }, {
    key: "isDisabled",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Boolean(classNames.includes(RADIOBUTTON_DISABLED));
      });
    }
    /**
     * whether the Radiobutton is inline
     * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
     * @returns {Promise<boolean>} isInline
     */

  }, {
    key: "isInline",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Boolean(classNames.includes(RADIOBUTTON_INLINE));
      });
    }
    /**
     * whether the Radiobutton is selected
     * @private module:MPageFusion/testing.composite.select-group.RadioButtonPage
     * @returns {Promise<boolean>} isSelected
     */

  }, {
    key: "isSelected",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(RADIOBUTTON_INPUT));
      }).then(function (inputElement) {
        return inputElement.getAttribute("aria-selected");
      }).then(function (attribute) {
        return Boolean(attribute);
      });
    }
  }]);

  return RadioButtonPage;
}(_UIComponent["default"]);

exports["default"] = RadioButtonPage;