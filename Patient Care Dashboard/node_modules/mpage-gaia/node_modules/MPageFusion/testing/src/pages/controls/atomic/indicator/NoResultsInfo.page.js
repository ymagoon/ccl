"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-NoResultsInfo";
var ACTION_SELECTOR = ".mpageui-NoResultsInfo-action";
var TITLE_SELECTOR = ".mpageui-NoResultsInfo-title--";
var ICON_SELECTOR = ".mpageui-NoResultsInfo-icon--";
var DESCRIPTION_SELECTOR = ".mpageui-NoResultsInfo-description--";
var SIZE = {
  SMALL: "small",
  MEDIUM: "medium",
  LARGE: "large"
};
/**
 * The NoResultsInfoPage class
 * @class module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
 *
 * @example
 * const args = Object.assign({}, { config: { size: SIZE.LARGE } });
 * const noResultsInfo = new NoResultsInfoPage(driver, args);
 * noResultInfo.get("display").then((display) =>  assert(display === "No Results"));
 */

var NoResultsInfoPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(NoResultsInfoPage, _UIComponentPage);

  function NoResultsInfoPage(driver, args) {
    var _this;

    _this = _UIComponentPage.call(this, driver, args.config && args.config.size ? args : Object.assign({}, args, {
      config: Object.assign({}, args.config, {
        size: SIZE.SMALL
      })
    })) || this;
    _this.config = Object.assign({}, args.config);
    return _this;
  }

  _createClass(NoResultsInfoPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
    * the check whether icon is displayed or not
    * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
    * @returns {Promise<Boolean>} isIconDisplayed
    */

  }, {
    key: "isIconDisplayed",
    get: function get() {
      var _this2 = this;

      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css("" + ICON_SELECTOR + _this2.config.size)).then(function () {
          return true;
        })["catch"](function () {
          return false;
        });
      });
    }
    /**
    * the check whether icon is displayed or not
    * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
    * @returns {Promise<Boolean>} isActionVisible
    */

  }, {
    key: "isActionVisible",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(ACTION_SELECTOR)).then(function () {
          return true;
        })["catch"](function () {
          return false;
        });
      });
    }
    /**
    * to get display
    * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
    * @returns {Promise<String>} display
    */

  }, {
    key: "display",
    get: function get() {
      var _this3 = this;

      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css("" + TITLE_SELECTOR + _this3.config.size)).then(function (title) {
          return title.getText();
        })["catch"](function () {
          return "";
        });
      });
    }
    /**
    * to get description
    * @memberOf module:MPageFusion/testing.atomic.indicator.NoResultsInfoPage
    * @returns {Promise<String>} description
    */

  }, {
    key: "description",
    get: function get() {
      var _this4 = this;

      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css("" + DESCRIPTION_SELECTOR + _this4.config.size)).then(function (description) {
          return description.getText();
        })["catch"](function () {
          return "";
        });
      });
    }
  }]);

  return NoResultsInfoPage;
}(_UIComponent["default"]);

exports["default"] = NoResultsInfoPage;