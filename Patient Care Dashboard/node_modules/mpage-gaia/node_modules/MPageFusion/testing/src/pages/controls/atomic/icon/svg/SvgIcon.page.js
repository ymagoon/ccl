"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _SvgIconBase = _interopRequireDefault(require("./SvgIconBase.page"));

var _helpers = require("./helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * The SvgIconPage class can be used for any MPageFusion svg icon.
 * It should be used for getting the type of an unknown icon.
 * @class module:MPageFusion/testing.atomic.icon.svg.SvgIconPage
 *
 * @example
 * // known icon
 * const icon = new SvgIconPage(driver, {
 *     selectorList: [ ".my-icon-wrapper-class" ]
 * });
 *
 * icon.get("type")
 *     .then((type) => {
 *         assert(type === SvgIconPage.TYPES.ATTACHMENT);
 *     });
 *
 * // icon of a particular type
 * const AttachmentPage = atomic.icon.svg.category.content.Attachment;
 * const attachmentIcon = new AttachmentPage(driver);
 *
 * attachmentIcon.isDisplayed()
 *     .then((isDisplayed) => {
 *         assert(isDisplayed);
 *     });
 */
var SvgIconPage =
/*#__PURE__*/
function (_SvgIconBasePage) {
  _inheritsLoose(SvgIconPage, _SvgIconBasePage);

  function SvgIconPage() {
    return _SvgIconBasePage.apply(this, arguments) || this;
  }

  var _proto = SvgIconPage.prototype;

  /**
   * clicks the icon
   * @memberOf module:MPageFusion/testing.atomic.icon.svg.SvgIconPage
   * @returns {Promise} resolves when the action is completed
   */
  _proto.click = function click() {
    return this.getRootElement().then(function (element) {
      return element.click();
    });
  };

  _createClass(SvgIconPage, [{
    key: "type",

    /**
     * Gets the icon type
     * @memberOf module:MPageFusion/testing.atomic.icon.svg.SvgIconPage
     * @returns {Promise<String>} resolves with the icon type
     */
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        var iconClass = classNames.split(/\s+/).find(function (className) {
          return className.includes("mpageui-SvgIcon-");
        });
        return _helpers.classTypeMap[iconClass];
      });
    }
  }]);

  return SvgIconPage;
}(_SvgIconBase["default"]);

exports["default"] = SvgIconPage;
SvgIconPage.TYPES = _helpers.ICON_TYPES;