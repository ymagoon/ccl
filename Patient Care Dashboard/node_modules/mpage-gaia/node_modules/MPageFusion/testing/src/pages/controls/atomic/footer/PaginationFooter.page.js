"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _seleniumWebdriver = require("selenium-webdriver");

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _Button = _interopRequireDefault(require("../../atomic/button/Button.page"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ROOT_SELECTOR = ".mpageui-FooterBase";
var PAGINATION_FIRST_BUTTON = ".mpageui-PaginationFooter-first";
var PAGINATION_LAST_BUTTON = ".mpageui-PaginationFooter-last";
var PAGINATION_LABEL_DISPLAY = ".mpageui-Label";
var PAGINATION_R_SECTION = ".mpageui-FooterBase-rSection";
var PAGINATION_PREVIOUS_BUTTON = ".mpageui-PaginationFooter-previous";
var PAGINATION_NEXT_BUTTON = ".mpageui-PaginationFooter-next";
/**
 * bgStyle Types
 * @enum
 * @type {Object}
 * @memberOf module:MPageFusion/testing.atomic.footer.PaginationFooterPage
 */

var BG_STYLES = {
  ANCHOR: "anchor",
  CANVAS: "canvas"
};
/**
 * The PaginationFooterPage class
 * @class module:MPageFusion/testing.atomic.footer.PaginationFooterPage
 *
 * @example
 * const paginationFooter = new PaginationFooterPage(driver);
 * paginationFooter.display();
 */

var PaginationFooterPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(PaginationFooterPage, _UIComponentPage);

  function PaginationFooterPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  _createClass(PaginationFooterPage, [{
    key: "elementSelector",
    get: function get() {
      return ROOT_SELECTOR;
    }
    /**
     * the pagination display
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<String>} display
     */

  }, {
    key: "display",
    get: function get() {
      return this.getNestedElement(PAGINATION_LABEL_DISPLAY).then(function (element) {
        return element.getText();
      });
    }
    /**
     * background style for the footer
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<String>} backgroundStyle
     */

  }, {
    key: "backgroundStyle",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getAttribute("class");
      }).then(function (classNames) {
        return Object.values(BG_STYLES).find(function (style) {
          return classNames.includes("mpageui-FooterBase-" + style);
        });
      });
    }
    /**
     * show the first button before the previous button
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isFirstVisible
     */

  }, {
    key: "isFirstVisible",
    get: function get() {
      return this.getNestedElement(PAGINATION_R_SECTION).then(function (element) {
        return element.findElements(_seleniumWebdriver.By.css(PAGINATION_FIRST_BUTTON)).then(function (children) {
          return Boolean(children.length);
        });
      });
    }
    /**
     * show the last button after the next button
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isLastVisible
     */

  }, {
    key: "isLastVisible",
    get: function get() {
      return this.getNestedElement(PAGINATION_R_SECTION).then(function (element) {
        return element.findElements(_seleniumWebdriver.By.css(PAGINATION_LAST_BUTTON)).then(function (children) {
          return Boolean(children.length);
        });
      });
    }
    /**
     * the first button
     * @memberOf module:MPageFusion/testing.atomic.footer.PaginationFooterPage
     * @returns {module:MPageFusion/testing.atomic.button.ButtonPage} button
    */

  }, {
    key: "firstButton",
    get: function get() {
      return new _Button["default"](this.driver, {
        selectorList: this.selectorList.concat(PAGINATION_FIRST_BUTTON),
        useExactSelector: true // tells ButtonPage not to look for .mpageui-Button and just use the selector provided

      });
    }
    /**
     * the last button
     * @memberOf module:MPageFusion/testing.atomic.footer.PaginationFooterPage
     * @returns {module:MPageFusion/testing.atomic.button.ButtonPage} button
    */

  }, {
    key: "lastButton",
    get: function get() {
      return new _Button["default"](this.driver, {
        selectorList: this.selectorList.concat(PAGINATION_LAST_BUTTON),
        useExactSelector: true // tells ButtonPage not to look for .mpageui-Button and just use the selector provided

      });
    }
    /**
     * the previous button
     * @memberOf module:MPageFusion/testing.atomic.footer.PaginationFooterPage
     * @returns {module:MPageFusion/testing.atomic.button.ButtonPage} button
    */

  }, {
    key: "previousButton",
    get: function get() {
      return new _Button["default"](this.driver, {
        selectorList: this.selectorList.concat(PAGINATION_PREVIOUS_BUTTON),
        useExactSelector: true // tells ButtonPage not to look for .mpageui-Button and just use the selector provided

      });
    }
    /**
     * the next button
     * @memberOf module:MPageFusion/testing.atomic.footer.PaginationFooterPage
     * @returns {module:MPageFusion/testing.atomic.button.ButtonPage} button
    */

  }, {
    key: "nextButton",
    get: function get() {
      return new _Button["default"](this.driver, {
        selectorList: this.selectorList.concat(PAGINATION_NEXT_BUTTON),
        useExactSelector: true // tells ButtonPage not to look for .mpageui-Button and just use the selector provided

      });
    }
    /**
     * checks the first button is clicked
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isFirstClicked
     */

  }, {
    key: "isFirstClicked",
    get: function get() {
      var _this = this;

      return this.getRootElement().then(function (rootElement) {
        return rootElement.findElement(_seleniumWebdriver.By.css(PAGINATION_FIRST_BUTTON));
      }).then(function (element) {
        return _this.driver.switchTo().activeElement().then(function (activeElement) {
          return _seleniumWebdriver.WebElement.equals(element, activeElement);
        });
      });
    }
    /**
     * checks the last button is clicked
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isLastClicked
     */

  }, {
    key: "isLastClicked",
    get: function get() {
      var _this2 = this;

      return this.getRootElement().then(function (rootElement) {
        return rootElement.findElement(_seleniumWebdriver.By.css(PAGINATION_LAST_BUTTON));
      }).then(function (element) {
        return _this2.driver.switchTo().activeElement().then(function (activeElement) {
          return _seleniumWebdriver.WebElement.equals(element, activeElement);
        });
      });
    }
    /**
     * checks the previous button is clicked
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isPreviousClicked
     */

  }, {
    key: "isPreviousClicked",
    get: function get() {
      var _this3 = this;

      return this.getRootElement().then(function (rootElement) {
        return rootElement.findElement(_seleniumWebdriver.By.css(PAGINATION_PREVIOUS_BUTTON));
      }).then(function (element) {
        return _this3.driver.switchTo().activeElement().then(function (activeElement) {
          return _seleniumWebdriver.WebElement.equals(element, activeElement);
        });
      });
    }
    /**
     * checks the next button is clicked
     * @memberOf module:MPageFusion/testing.atomic.badge.PaginationFooterPage
     * @returns {Promise<Boolean>} isNextClicked
     */

  }, {
    key: "isNextClicked",
    get: function get() {
      var _this4 = this;

      return this.getRootElement().then(function (rootElement) {
        return rootElement.findElement(_seleniumWebdriver.By.css(PAGINATION_NEXT_BUTTON));
      }).then(function (element) {
        return _this4.driver.switchTo().activeElement().then(function (activeElement) {
          return _seleniumWebdriver.WebElement.equals(element, activeElement);
        });
      });
    }
  }]);

  return PaginationFooterPage;
}(_UIComponent["default"]);

exports["default"] = PaginationFooterPage;