"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _UIComponent = _interopRequireDefault(require("../../../UIComponent.page"));

var _seleniumWebdriver = require("selenium-webdriver");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var SELECTOR_LIST = {
  ROOT_SELECTOR: ".mpageui-SearchList-item",
  CARD_SELECTOR: ".mpageui-Card",
  RIGHT_ACCESSORY: ".mpageui-Card-accessory--right"
};
/**
 * The SearchListItemPage class
 * @class module:MPageFusion/test.composite.search.SearchListItemPage
 * @private
 */

var SearchListItemPage =
/*#__PURE__*/
function (_UIComponentPage) {
  _inheritsLoose(SearchListItemPage, _UIComponentPage);

  function SearchListItemPage() {
    return _UIComponentPage.apply(this, arguments) || this;
  }

  var _proto = SearchListItemPage.prototype;

  _proto.select = function select() {
    return this.getRootElement().then(function (element) {
      return element.click();
    });
  };

  _createClass(SearchListItemPage, [{
    key: "elementSelector",
    get: function get() {
      return SELECTOR_LIST.ROOT_SELECTOR;
    }
  }, {
    key: "isSelected",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(SELECTOR_LIST.CARD_SELECTOR)).then(function (value) {
          return Boolean(value.getAttribute("is-selected"));
        });
      })["catch"](function () {
        return false;
      });
    }
    /**
     * the secondary list item text
     * @memberOf module:MPageFusion/testing.composite.search.SearchListItemPage
     * @returns {Promise<string>} more deatils search list text
     * @public
     */

  }, {
    key: "moreDetailsText",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getText();
      }).then(function (text) {
        var textArray = text.split("\n");
        return textArray.length === 2 ? textArray[1] : "";
      });
    }
    /**
     * the list item
     * @memberOf module:MPageFusion/testing.composite.search.SearchListItemPage
     * @returns {Promise<string>} search list text
     * @public
     */

  }, {
    key: "display",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.getText().then(function (value) {
          return value.split("\n").join();
        });
      });
    }
    /**
     * the primary list item text
     * @memberOf module:MPageFusion/testing.composite.search.SearchListItemPage
     * @returns {Promise<string>} search list text without more details
     * @public
     */

  }, {
    key: "primaryText",
    get: function get() {
      return this.getRootElement().then(function (value) {
        return value.getAttribute("aria-label");
      });
    }
    /**
     * This is an optional icon to be displayed on the right side
     * @memberOf module:MPageFusion/testing.composite.search.SearchListItemPage
     * @returns {Promise<String>} className
     */

  }, {
    key: "rightAccessory",
    get: function get() {
      return this.getRootElement().then(function (element) {
        return element.findElement(_seleniumWebdriver.By.css(SELECTOR_LIST.RIGHT_ACCESSORY)).then(function (value) {
          return Boolean(value.getAttribute("mpageui-SvgIcon-Attachment"));
        });
      })["catch"](function () {
        return false;
      });
    }
  }]);

  return SearchListItemPage;
}(_UIComponent["default"]);

exports["default"] = SearchListItemPage;