/**
 * @fileoverview Dom helpers for modal module
 * @author Gyandeep Singh
 */

"use strict";

import { mediaQuery } from "../../../base";
import { bottom } from "../../../helpers/dom/positioning";
import { getDemoBannerElem } from "../../../helpers/dom/dom";
import { isIE } from "../../../helpers/core/compatibility";

/**
 * Default CSS classes for modal
 * @type {{default: string, layover: string, content: string, header: string, body: string, footer: string}}
 */
const defaultCssClasses = {
    default: "mpageui-Modal",
    disclosure: "mpageui-disclosure-element",
    layover: "mpageui-Modal-layover",
    content: "mpageui-Modal-content",
    header: "mpageui-Modal-header",
    body: "mpageui-Modal-body",
    footer: "mpageui-Modal-footer"
};

/**
 * Check if the current size of the screen is small or not
 * @returns {boolean} True it its small
 */
const isSmallerScreen = () => mediaQuery.atMost("XS");

/**
 * Gets the bottom value for the demo banner if present else 0.
 * @returns {int} bottom value for the element
 * @private
 */
const getDemoBannerBottom = () => {
    const demoBannerElem = getDemoBannerElem();

    return demoBannerElem ? bottom(demoBannerElem) : 0;
};

/**
 * Adjust the height of the modal body based on the available space around, header and footer.
 * IE is not smart enough to detect that and produce a scroll bar for the body, all the other browsers can.
 * @param {HTMLElement} modalDomElement - DOM element for modal
 * @returns {undefined}
 */
const sizeAdjustmentIE = (modalDomElement) => {
    const bodyElem = modalDomElement.querySelector(`.${defaultCssClasses.body}`);
    const scrollPosition = bodyElem.scrollTop; // Save scroll position as we are about reset the height
    bodyElem.style.removeProperty("height");

    const headerFooterHeight = modalDomElement.querySelector(`.${defaultCssClasses.header}`).offsetHeight +
        modalDomElement.querySelector(`.${defaultCssClasses.footer}`).offsetHeight;
    const contentElemHeight = modalDomElement.querySelector(`.${defaultCssClasses.content}`).offsetHeight;

    if (bodyElem.scrollHeight + headerFooterHeight > contentElemHeight) {
        bodyElem.style.height = `${contentElemHeight - headerFooterHeight}px`;
    }

    // Only setting scroll position of IE since other browser already maintain their scroll position
    if (isIE()) {
        bodyElem.scrollTop = scrollPosition; // Reapply the scroll position
    }
};

/**
 * Adjust the top of the layover to not cover the demo banner. Since demo banner should always be visible.
 * @param {HTMLElement} modalDomElement - DOM element for modal
 * @returns {undefined}
 */
const adjustLayoverForDemoBanner = (modalDomElement) => {
    modalDomElement.style.top = `${getDemoBannerBottom()}px`; // layover element which is the main element
};

/**
 * Adjust the max height of the main modal dom element based on the demo banner height on non smaller screens.
 * It will not consider demobanner height in scenario of smaller screen since fullscreen behavior accounts for it.
 * @param {HTMLElement} modalDomElement - DOM element for modal
 * @returns {undefined}
 */
const adjustModalMaxHeightForDemoBanner = (modalDomElement) => {
    let maxHeightVal = "none";

    if (!isSmallerScreen()) {
        maxHeightVal = `calc(95vh - ${getDemoBannerBottom()}px)`; // element which contains head, body and footer
    }

    modalDomElement.childNodes[0].style["max-height"] = maxHeightVal;
};

/**
 * Public API
 */
export {
    defaultCssClasses,
    isSmallerScreen,
    sizeAdjustmentIE,
    adjustLayoverForDemoBanner,
    adjustModalMaxHeightForDemoBanner
};
