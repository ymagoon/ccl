"use strict";

/**
 * Checks if a value is null.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is null, otherwise false.
 */
export const isNull = (val) => (val === null);

/**
 * Checks if a value is undefined.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is undefined, otherwise false.
 */
export const isUndefined = (val) => (typeof val === "undefined");

/**
 * Checks if a value is null or undefined.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is null or undefined, otherwise false.
 */
export const isNullOrUndefined = (val) => (isUndefined(val) || isNull(val));

/**
 * Checks if a value is defined.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is defined, otherwise false.
 */
export const isDefined = (val) => !isUndefined(val);

/**
 * Checks if a value is not null.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is not null, otherwise false.
 */
export const isNotNull = (val) => !isNull(val);

/**
 * Checks if a value is not null or undefined.
 * @param {*} val - A value.
 * @returns {boolean} True if the value is not null or undefined, otherwise false.
 */
export const isNotNullOrUndefined = (val) => isDefined(val) && isNotNull(val);
