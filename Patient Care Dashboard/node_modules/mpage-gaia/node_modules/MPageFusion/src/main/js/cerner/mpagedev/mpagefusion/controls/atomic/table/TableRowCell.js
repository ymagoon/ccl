/**
 * @fileoverview TableRowCell class
 * @author Gyandeep Singh
 */

"use strict";

import UIComponent from "../../../base";
import classNames from "classnames";

const hoverClass = "hoverable";
const labelClass = "label";

/**
 * Creates display attributes for the table cell.
 * @param {string | null} columnDisplay - The column display.
 * @returns {Object} The display attributes for the table cell.
 */
const displayAttributes = ({ columnDisplay }) =>
    Object.assign({}, columnDisplay ? {
        "aria-label": columnDisplay
    } : null);

/**
 * Renders the standard table cell content (no custom content provided by
 * the consumer). It will render the column display (if provided) and the
 * display of the table cell.
 * @param {Function} el - A function for creating virtual elements.
 * @param {string} display - The display (cell content) of the table cell.
 * @param {string} columnDisplay - The column display.
 * @param {string} contentClassNames - The class names to apply to the content
 * element.
 * @returns {VDom} The virtual dom display of the table cell.
 */
const renderStandardCell = (el, { display, columnDisplay, contentClassNames = "" }) =>
    el(
        "span",
        {
            class: classNames({
                "mpageui-Table-row-cell-content": true,
                [ contentClassNames ]: !!contentClassNames
            })
        },
        [
            columnDisplay ?
                el(
                    "span",
                    {
                        class: "mpageui-Table-row-cell-label mpageui-u-hide-for-md"
                    },
                    `${columnDisplay}:`
                ) :
                null,
            el(
                "span",
                displayAttributes({ columnDisplay }),
                display === null ? "--" : display
            )
        ]
    );

/**
 * Constructor for TableRowCell
 * @extends UIComponent
 */
export default class TableRowCell extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            display: "",
            title: "",
            defaultClassNames: "mpageui-Table-row-cell",
            classNames: "",
            columnDisplay: "",
            content: [],
            contentClassNames: "",
            selectable: false,
            clickEventName: "tableRowCellClick",
            key: ""
        };
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        const content = this.getProp("content");

        if (content.length > 0) { // if content is defined then display will be ignored
            return content;
        }
        else {
            return [];
        }
    }

    /**
     * @inheritDoc
     */
    view(el, props) {
        // will ignore display if content is provided
        return el(
            "div",
            Object.assign(
                {},
                {
                    class: classNames({
                        [ props.defaultClassNames ]: true,
                        [ props.classNames ]: props.classNames.length > 0,
                        [ hoverClass ]: props.selectable === true,
                        [ labelClass ]: props.columnDisplay.length > 0
                    })
                },
                props.title || props.display ? { title: props.title || props.display } : null,
                props.selectable ? {
                    onclick: this.emit.bind(this, props.clickEventName, this)
                } : null
            ),
            props.content.length > 0 ? this.renderChildren() : renderStandardCell(el, props)
        );
    }
}
