"use strict";
import UIComponent from "../../../base/UIComponent";
import classNames from "classnames";
import TabDragIcon from "../../atomic/icon/svg/category/navigation/Drag";

const NAMESPACE = "mpageui-TabLabel";

/**
 * Renders the accessory provided, before or after the display value of the tab
 *
 * @param {Function} el - A function that returns a single virtual dom element.
 * @param {Object <UIComponent>} accessory - Icon that needs to be displayed in the tab
 * @returns {Object <UIComponent>} returns an object containing the accessory
 */
const renderAccessory = (el, accessory) => el(
    "div",
    {
        class: `${NAMESPACE}-accessory`
    },
    [
        accessory.render()
    ]
);

/**
 * Renders the display value for the tab
 *
 * @param {Function} el - A function that returns a single virtual dom element.
 * @param {Object} props - TabLabel props
 * @returns {Object <UIComponent>} returns an object containing the display value
 */
const renderDisplay = (el, props) => el(
    "div",
    {
        class: `${NAMESPACE}-display`
    },
    [
        props.display
    ]
);

/**
 * @returns {Object<UIComponent>} Drag icon object used to show that dragging setting is available for a tab
 */
const getDragIcon = () => new TabDragIcon({ classNames: `${NAMESPACE}-dragIcon` });

/**
 * TabLabel class is used to display the following:
 * * Left, right accessory
 * * Tab display value
 * * Drag icon signalling availability of drag functionality of a tab within the tabList
 *
 * @class TabLabel
 */
class TabLabel extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            defaultClassNames: NAMESPACE,
            classNames: "",
            leftAccessory: null,
            rightAccessory: null,
            display: ""
        };
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mChildren) {
        return el(
            "div",
            {
                class: classNames({
                    [ props.defaultClassNames ]: true,
                    [ props.classNames ]: (props.classNames !== "")
                }),
                role: "tab"
            },
            [
                props.leftAccessory ? renderAccessory(el, props.leftAccessory) : "",
                renderDisplay(el, props),
                getDragIcon().render(),
                props.rightAccessory ? renderAccessory(el, props.rightAccessory) : ""
            ]
        );
    }
}

export default TabLabel;
