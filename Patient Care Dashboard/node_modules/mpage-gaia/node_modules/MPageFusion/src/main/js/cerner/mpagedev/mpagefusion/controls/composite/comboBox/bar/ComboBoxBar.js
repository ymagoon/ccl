"use strict";
import UIComponent from "../../../../base/UIComponent";
import TextBox from "../../../atomic/textbox";
import Button from "../../../atomic/button";
import ExpandedIcon from "../../../atomic/icon/svg/category/content/Expanded";
import { forwardProp } from "../../../../helpers/props/props";
import classNames from "classnames";
import { THROTTLE_TIME } from "../const";
import { EVENTS, NAMESPACE } from "./const";
import { handleTextBoxKeyDown, handleTextBoxKeyUp, handleTextBoxInput } from "./events";

/**
 * Basic combobox control.
 * Consists of combobox text box and the combobox dropDown button.
 */
class ComboBoxBar extends UIComponent {

    /**
     * @inheritDoc
     */
    initialState() {
        return {
            inputDebounce: 0
        };
    }

    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            blurEventName: EVENTS.BLUR,
            classNames: "",
            confirmEventName: EVENTS.CONFIRM,
            focusEventName: EVENTS.FOCUS,
            inputEventName: EVENTS.INPUT,
            isDisabled: false,
            navigationEventName: EVENTS.NAVIGATION,
            placeholder: "",
            dropDownEventName: EVENTS.DROPDOWN,
            throttle: THROTTLE_TIME,
            value: ""
        };
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            {
                textBox: new TextBox({
                    classNames: `${NAMESPACE}-textBox`,
                    keyDownEventName: TextBox.EVENTS.KEY_DOWN,
                    keyUpEventName: TextBox.EVENTS.KEY_UP
                })
            },
            {
                comboBoxDropDown: new Button({
                    icon: new ExpandedIcon(),
                    type: "link",
                    classNames: `${NAMESPACE}-dropDown`
                })
            }
        ];
    }

    /**
     * @inheritDoc
     */
    propChangeHandlers() {
        return {
            placeholder: forwardProp(this, "placeholder", "textBox"),
            value: forwardProp(this, "value", "textBox"),
            isDisabled: (isDisabled) => {
                this.getChild("textBox").setProp("isDisabled", isDisabled);
                this.getChild("comboBoxDropDown").setProp("disabled", isDisabled);
            }
        };
    }

    /**
     * @inheritDoc
     */
    afterCreate() {
        // TextBox Events handling
        this.on(TextBox.EVENTS.KEY_DOWN, handleTextBoxKeyDown(this, TextBox.EVENTS.KEY_DOWN));
        this.on(TextBox.EVENTS.KEY_UP, handleTextBoxKeyUp(this, TextBox.EVENTS.KEY_UP));
        this.on(TextBox.EVENTS.INPUT, handleTextBoxInput(this, TextBox.EVENTS.INPUT));
        this.convertEventUsingProp(TextBox.EVENTS.BLUR, "blurEventName", (e) => [ this ]);
        this.convertEventUsingProp(TextBox.EVENTS.FOCUS, "focusEventName", (e) => [ this ]);

        // DropDown Click Event
        this.convertEventUsingProp(Button.EVENTS.CLICK, "dropDownEventName", (src) => [ this ]);
    }

    /**
     * @inheritDoc
     */
    view(el, props, children, mappedChildren, { state }) {
        return el(
            "div",
            {
                class: classNames({
                    [ NAMESPACE ]: true,
                    [ props.classNames ]: !!props.classNames
                }),
                onremove: () => {
                    window.clearTimeout(state.inputDebounce);
                }
            },
            this.renderChildren()
        );
    }
}

ComboBoxBar.EVENTS = EVENTS;
export default ComboBoxBar;
