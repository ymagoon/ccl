import UIComponent from "../../../base";
import { Tab } from "../../atomic/tabs";
import { svg } from "../../atomic/icon";
import classNames from "classnames";

const { content: { Add } } = svg;

const namespace = "mpageui-ViewpointAddTab";

const ViewpointAddTabEvents = {
    CLICK: "ViewpointAddTab::click"
};

/**
 * The PlusAddLink class. This is is a private class that is injected into
 * a Tab via the ViewpointPlusAddTab class. Not intended for external use.
 * @class PlusAddLink
 */
class PlusAddLink extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            display: ""
        };
    }
    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            new Add({
                classNames: `${namespace}-addIcon`
            })
        ];
    }

    /**
     * @inheritDoc
     */
    view(el, props, children) {
        return el(
            "a",
            {
                class: `${namespace}-link`,
                role: "button"
            },
            [
                children [ 0 ].render(),
                el(
                    "span",
                    {
                        class: classNames(`${namespace}-display`, "mpageui-u-hide-for-md")
                    },
                    props.display
                )
            ]
        );
    }
}

/**
 * The ViewpointAddTab class.
 * @class ViewpointAddTab
 */
class ViewpointAddTab extends UIComponent {
    /**
     * @inheritDoc
     */
    initialProps() {
        return {
            display: "",
            id: ""
        };
    }

    /**
     * @inheritDoc
     */
    createChildren() {
        return [
            {
                tab: new Tab(
                    {
                        id: this.getProp("id"),
                        defaultClassNames: "mpageui-ViewpointAddTab",
                        draggable: false,
                        clickEventName: ViewpointAddTabEvents.CLICK
                    },
                    [
                        new PlusAddLink({
                            display: this.getProp("display")
                        })
                    ]
                )
            }
        ];
    }

    /**
     * @inheritDoc
     */
    view(el, props, children) {
        return this.getChild("tab").render();
    }
}

ViewpointAddTab.EVENTS = ViewpointAddTabEvents;

export default ViewpointAddTab;
