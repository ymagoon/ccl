import { MenuButton } from "../../button";
import { EVENTS as MAIN_EVENTS } from "../const";

/**
 * Makes a menu-type select group.
 * @param {Object[]} items - Array of select group items.
 * @param {String[]} state - Currently selected ids.
 * @returns {Object[]} Array of items that belong to a menu sub-group.
 */
const makeMenuSelectGroup = (items, state) =>
    items.map((item) => Object.assign({}, item, {
        _meta: { item },
        isSelected: state.includes(item.id)
    }));

/**
 * Due to menus possibly having nested content (sub-menus), this will
 * recursively handle building a menu-type item's content.
 * @param {Object[]} items - Array of menu items.
 * @param {String[]} state - Currently selected ids.
 * @returns {Object[]} Array of menu items.
 */
const buildSubContent = (items, state) => items.map((item) => Object.assign(
    {},
    item,
    {
        _meta: { item }
    },
    (item.isSelected !== undefined) ? {
        isSelected: state.includes(item.id)
    } : null,
    item.submenu ? {
        submenu: buildSubContent(item.submenu, state)
    } : null,
    item.selectGroup ? {
        selectGroup: makeMenuSelectGroup(item.selectGroup, state)
    } : null
));

/**
 * Creates the face-up version of the CollapseGroup select group item (which is a ButtonGroup).
 * @param {Object} item - The select group item.
 * @param {Object} state - The state of the select group item.
 * @returns {MenuButton} The ButtonGroup created from the item and its state.
 */
export const makeFaceUp = (item, state) => new MenuButton({
    _meta: { item },
    display: item.display,
    content: buildSubContent(item.content, state),
    basicActionEventName: MAIN_EVENTS.MENU_ACTION,
    selectionChangeEventName: MAIN_EVENTS.MENU_SELECTION_CHANGE,
    size: item.size || "",
    toggleEventName: MAIN_EVENTS.MENU_TOGGLE
});

/**
 * When a menu-type item is moved to the collapse-menu, it becomes a sub-menu in that menu.
 * As such, we move all the items that were part of the menu into a sub-menu of the
 * collapse-menu.
 * @param {Object} item - A menu item.
 * @param {String[]} state - Currently selected ids.
 * @returns {Object} A sub-menu version of the menu.
 */
export const makeMenuItem = (item, state) => ({
    _meta: { item },
    display: item.display,
    submenu: buildSubContent(item.content, state)
});
