<?xml version="1.0" encoding="ASCII"?>
<EM:ExpertModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:EM="http:///com.cerner.expert/expertmodule/1.0.0" moduleName="CK_MPM_MB_CALC">
  <information>
    <runtimeInformation versionString="001.005" externalFileName="CK_MPM_MB_CALC" lastUpdated="2010-03-09T12:27:10.000-0500" validtionType="PRODUCTION" title="CK_MPM_MB_CALC" reconcileFlag="3" reconcileDate="2019-10-29T20:53:30.000-0400">
      <duration start="2004-07-30T00:00:00.000-0400" end="2104-07-30T19:59:59.000-0400"/>
      <updateUser userName="Raymond , Anne"/>
    </runtimeInformation>
    <documentation author="" institution="" specialist="" purpose="CALCULALTES&#xD;&#xA;RELATIVE INDEX"/>
  </information>
  <expertTemplates>
    <events>
      <event name=""/>
      <event name="ADDPROBLEM"/>
      <event name="ADDTOSCRATCHPAD"/>
      <event name="ALLERGY_EVENT"/>
      <event name="AP_ORDER_EVENT"/>
      <event name="BB_RESULT_EVENT"/>
      <event name="CHART_SERVER_EVENT"/>
      <event name="CLINICALTRIALSCREEN"/>
      <event name="CLINICAL_EVENT"/>
      <event name="CLOSECHART"/>
      <event name="COLLECTION_EVENT"/>
      <event name="DCP_CN_TASK_UPD"/>
      <event name="DCP_MODTASK_EVENT"/>
      <event name="DCP_PW_COND"/>
      <event name="DCP_PW_OUTCOME_EVENT"/>
      <event name="DIAGNOSIS_EVENT"/>
      <event name="EKS_FORMAT"/>
      <event name="EKS_SYNC_TEST01"/>
      <event name="EKS_TEST_02"/>
      <event name="EKS_TEST_EVENT"/>
      <event name="EKS_TEST_EVENT01"/>
      <event name="ENSURE_EVENT"/>
      <event name="EXPERT_EVENT"/>
      <event name="HEALTHE_EVENT"/>
      <event name="HEALTH_MAINT_QUAL_EVENT"/>
      <event name="HIM_ADD_REQUEST"/>
      <event name="HIM_ADMIT_EVENT"/>
      <event name="HIM_PATIENT_INFO_REQUEST"/>
      <event name="HIM_TEST_EVENT"/>
      <event name="HL7_EVENT"/>
      <event name="MB_EXPEDITE"/>
      <event name="MB_RESULT_EVENT"/>
      <event name="MB_SCRIPTED_WORKUPS"/>
      <event name="MB_SUSCEPTIBILITY"/>
      <event name="MDI_RESULT_EVENT"/>
      <event name="MEDCHARTACTIVATE"/>
      <event name="MPI_ADT"/>
      <event name="OPENCHART"/>
      <event name="ORDER_EVENT"/>
      <event name="ORDER_PRO_TEST1"/>
      <event name="PATIENT_EVENT"/>
      <event name="PCA_EXPERT_EVENT"/>
      <event name="Person_Transaction"/>
      <event name="PFT_Add_Account"/>
      <event name="PFT_ADJ_WO"/>
      <event name="pft_check_amount"/>
      <event name="PFT_VEHICLE"/>
      <event name="PNTFLEXREFRANGE"/>
      <event name="POWERPLANFLEX"/>
      <event name="PREGNANCY_EVENT"/>
      <event name="PROBLEM_EVENT"/>
      <event name="PROFIT_1450_CLAIM_EVENT"/>
      <event name="PROFIT_1500_CLAIM_EVENT"/>
      <event name="PROVIDER_CHG_EVENT"/>
      <event name="PROVIDE_EVENT"/>
      <event name="PWRCHRT_ADD_ORDER"/>
      <event name="RESULT_EVENT"/>
      <event name="RESULT_EVENT_CSM"/>
      <event name="RESULT_EVENT_TEST"/>
      <event name="SCH_ACTION_EVENT"/>
      <event name="SIGNORDER"/>
      <event name="SN New Pref Card Created"/>
      <event name="SN_CASE_CHECK_IN_EVENT"/>
      <event name="SN_CASE_EVENT"/>
      <event name="SN_CASE_SCHEDULE_EVENT"/>
      <event name="SN_DOCUMENT_OPEN"/>
      <event name="SN_DOCUMENT_STATE"/>
      <event name="SN_FINALIZE_DOC_EVENT"/>
      <event name="SN_PROCEDURE_SCHEDULE"/>
      <event name="SN_SAVE_PROCEDURE"/>
      <event name="SN_TEST_EVENT"/>
      <event name="SOCIAL_HISTORY_ADD"/>
      <event name="SYNCHEVENT"/>
      <event name="TOCFLEX"/>
      <event name="TOUCHOPENCHART"/>
    </events>
    <evokeTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_COLLECTION" definition="Collection event for procedure PROCEDURE" description="Collected orderable" eventDependency="//@expertTemplates/@events/@event.10" reconcilable="true">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true" reconcileScript="eks_p_collProcedure">
          <statements dependency="PROCEDURE" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/*select &#xD;&#xA; s.mnemonic, oc.primary_mnemonic&#xD;&#xA;from order_catalog_synonym s, order_catalog oc, code_value c&#xD;&#xA;plan c where c.code_set = 6000 and c.active_ind = 1 and c.display_key=&quot;LABORATORY&quot;&#xD;&#xA;join oc where oc.catalog_type_cd = c.code_value&#xD;&#xA;join s where s.catalog_cd = oc.catalog_cd and s.mnemonic>&quot; &quot;&#xD;&#xA;order by cnvtupper(S.MNEMONIC) */"/>
        </arguments>
      </templateDefinitions>
    </evokeTemplates>
    <logicTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_COLL_STATUS" definition="PROCEDURE collection status is STATUS" description="Incoming collected orderable status" eventDependency="//@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.56" reconcilable="true">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true" reconcileScript="eks_p_collProcedure">
          <statements dependency="PROCEDURE" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/*select &#xD;&#xA; s.mnemonic, oc.primary_mnemonic&#xD;&#xA;from order_catalog_synonym s, order_catalog oc, code_value c&#xD;&#xA;plan c where c.code_set = 6000 and c.active_ind = 1 and c.display_key=&quot;LABORATORY&quot;&#xD;&#xA;join oc where oc.catalog_type_cd = c.code_value&#xD;&#xA;join s where s.catalog_cd = oc.catalog_cd and s.mnemonic>&quot; &quot;&#xD;&#xA;order by cnvtupper(S.MNEMONIC) */"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="STATUS" dataType="CHARACTER" validationType="READ_ONLY" required="true" reconcileScript="N/A">
          <stringTable>
            <column value="Pending"/>
            <column value="Pending"/>
          </stringTable>
          <stringTable>
            <column value="Dispatched"/>
            <column value="Dispatched - 0"/>
          </stringTable>
          <stringTable>
            <column value="Collected"/>
            <column value="Collected - 1"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Hold"/>
            <column value="Miss-Hold - 2"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Recoll"/>
            <column value="Miss-Recoll - 3"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Resched"/>
            <column value="Miss-Resched - 4"/>
          </stringTable>
          <stringTable>
            <column value="Canceled"/>
            <column value="Canceled - 5"/>
          </stringTable>
          <stringTable>
            <column value="Inactive"/>
            <column value="Inactive - 6"/>
          </stringTable>
          <stringTable>
            <column value="In-Lab"/>
            <column value="In-Lab"/>
          </stringTable>
          <stringTable>
            <column value="Completed"/>
            <column value="Completed"/>
          </stringTable>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_RESULT_EVAL2" definition="PROCEDURE1 RESULT_STATUS result is EVALUATION VALUE for the same accession number as PROCEDURE2" description="Discrete task assay, status, result value" eventDependency="//@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.21 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.56">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE1" statement="SELECT&#xD;&#xA; T.MNEMONIC,&#xD;&#xA; T.TASK_ASSAY_CD&#xD;&#xA;FROM &#xD;&#xA; DISCRETE_TASK_ASSAY T&#xD;&#xA;ORDER&#xD;&#xA; T.MNEMONIC&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;SELECT&#xD;&#xA; MNEMONIC = DECODE(O.SEQ,O.MNEMONIC,&#xD;&#xA;                   T.SEQ,T.MNEMONIC,&#xD;&#xA;                         FILLSTRING(50,' '))&#xD;&#xA;, TYPE    = DECODE(O.SEQ,'ORDER_CATALOG',&#xD;&#xA;                   T.SEQ,'TASK_ASSAY   ',&#xD;&#xA;                         '             ')&#xD;&#xA;, TYPE_CD = DECODE(O.SEQ,O.CATALOG_CD,&#xD;&#xA;                   T.SEQ,T.TASK_ASSAY_CD,&#xD;&#xA;                   0.0) &#xD;&#xA;&#xD;&#xA;FROM    (DUMMYT D WITH SEQ = 1),&#xD;&#xA;        order_Catalog_synonym O,&#xD;&#xA;        DISCRETE_TASK_ASSAY T,&#xD;&#xA;        CODE_VALUE C&#xD;&#xA;&#xD;&#xA;PLAN D&#xD;&#xA;JOIN ( O  WHERE O.ACTIVE_IND=1 &#xD;&#xA; JOIN C WHERE O.CATALOG_TYPE_CD = C.CODE_VALUE AND C.DISPLAY_KEY = &#xD;&#xA; 'LABORATORY')&#xD;&#xA;ORJOIN T WHERE T.ACTIVE_IND=1&#xD;&#xA;&#xD;&#xA;ORDER MNEMONIC&#xD;&#xA;&#xD;&#xA;SELECT S.MNEMONIC &#xD;&#xA;FROM ORDER_CATALOG_SYNONYM S, CODE_VALUE C&#xD;&#xA;WHERE S.CATALOG_TYPE_CD=C.CODE_VALUE &#xD;&#xA; AND C.DISPLAY_KEY = &quot;LABORATORY&quot;&#xD;&#xA;*/"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="RESULT_STATUS" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="RESULT_STATUS" statement="SELECT&#x9; &#xD;&#xA;  C1.DISPLAY_KEY&#xD;&#xA; ,C1.CODE_VALUE&#xD;&#xA;, C1.DISPLAY&#xD;&#xA; ,C1.DESCRIPTION&#xD;&#xA;FROM CODE_VALUE C1&#xD;&#xA;WHERE C1.CODE_SET = 1901 AND C1.ACTIVE_IND=1&#xD;&#xA; and cnvtdatetime(curdate,curtime3)&#xD;&#xA;  between c1.begin_effective_dt_tm and c1.end_effective_dt_tm&#xD;&#xA;ORDER C1.DISPLAY_KEY&#xD;&#xA;"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="EVALUATION" dataType="CHARACTER" validationType="READ_ONLY" required="true">
          <stringTable>
            <column value="equal to"/>
            <column value="equal to"/>
          </stringTable>
          <stringTable>
            <column value="less than"/>
            <column value="less than"/>
          </stringTable>
          <stringTable>
            <column value="greater than"/>
            <column value="greater than"/>
          </stringTable>
          <stringTable>
            <column value="less than or equal to "/>
            <column value="less than or equal to"/>
          </stringTable>
          <stringTable>
            <column value="greater than or equal to"/>
            <column value="greater than or equal to"/>
          </stringTable>
          <stringTable>
            <column value="between"/>
            <column value="between a range of numbers"/>
          </stringTable>
          <stringTable>
            <column value="outside"/>
            <column value="outside a range of numbers"/>
          </stringTable>
          <stringTable>
            <column value="normal"/>
            <column value="normal"/>
          </stringTable>
          <stringTable>
            <column value="abnormal"/>
            <column value="abnormal"/>
          </stringTable>
          <stringTable>
            <column value="high"/>
            <column value="high"/>
          </stringTable>
          <stringTable>
            <column value="low"/>
            <column value="low"/>
          </stringTable>
          <stringTable>
            <column value="critical"/>
            <column value="critical"/>
          </stringTable>
          <stringTable>
            <column value="review"/>
            <column value="review"/>
          </stringTable>
          <stringTable>
            <column value="linear"/>
            <column value="linear"/>
          </stringTable>
          <stringTable>
            <column value="feasible"/>
            <column value="feasible"/>
          </stringTable>
          <stringTable>
            <column value="not equal to"/>
            <column value="not equal to"/>
          </stringTable>
          <stringTable>
            <column value="alpha"/>
            <column value="result is an alpha value"/>
          </stringTable>
          <stringTable>
            <column value="number"/>
            <column value="result is a number value"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="VALUE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="REFERENTIAL">
          <statements dependency="VALUE" statement="SELECT distinct n.source_string&#xD;&#xA;  from nomenclature n, code_value cv&#xD;&#xA;plan cv where cv.code_set=401 and cv.cdf_meaning = &quot;ALPHA RESPON&quot; and cv.active_ind = 1&#xD;&#xA;join n where n.active_ind=1 and n.principle_type_cd = cv.code_value&#xD;&#xA;   and n.beg_effective_dt_tm &lt;= cnvtdatetime(curdate, curtime3)&#xD;&#xA;   and n.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)&#xD;&#xA;   and n.source_string != &quot; &quot;&#xD;&#xA;order n.source_string_keycap"/>
        </arguments>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
    </logicTemplates>
    <actionTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_RESULT_CREATE" definition="Create RESULT_STATUS result  RESULT for procedure PROCEDURE1 with CHART result comment COMMENT linked to PROCEDURE2" description="Perform/Verify DTA result" recommeded="CAUTION" eventDependency="//@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.15 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.50 //@expertTemplates/@events/@event.56 //@expertTemplates/@events/@event.71">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:FixedListArgument" name="RESULT_STATUS" dataType="CHARACTER" required="true">
          <stringTable>
            <column value="performed"/>
            <column value="performed"/>
          </stringTable>
          <stringTable>
            <column value="verified"/>
            <column value="verified"/>
          </stringTable>
        </arguments>
        <arguments name="RESULT" dataType="CHARACTER" controlType="TEXT_MULTI_LINE"/>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE1" statement="select t.mnemonic, t.task_assay_cd&#xD;&#xA;from discrete_task_assay t&#xD;&#xA;where t.active_ind = 1&#xD;&#xA;order t.mnemonic&#xD;&#xA;/*&#xD;&#xA;select o.order_mnemonic, c.description from&#xD;&#xA;orders o,&#xD;&#xA;order_catalog c&#xD;&#xA;where o.catalog_cd = c.catalog_cd&#xD;&#xA;*/"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="CHART" dataType="CHARACTER" validationType="READ_ONLY" required="true">
          <stringTable>
            <column value="chartable"/>
            <column value="chartable"/>
          </stringTable>
          <stringTable>
            <column value="non chartable"/>
            <column value="non chartable"/>
          </stringTable>
          <stringTable>
            <column value="N/A"/>
            <column value="default Discern note"/>
          </stringTable>
          <stringTable>
            <column value="NONE"/>
            <column value="no comment"/>
          </stringTable>
        </arguments>
        <arguments name="COMMENT" dataType="CHARACTER" controlType="TEXT_MULTI_LINE"/>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
    </actionTemplates>
  </expertTemplates>
  <ruleDefinition>
    <evokeSection>
      <evokes evokeEvent="//@expertTemplates/@events/@event.10">
        <logicExpression xsi:type="EM:Antecedent" id="E1" template="EKS_COLLECTION">
          <facts argument="PROCEDURE">
            <value xsi:type="EM:StringValue" value="RELATIVE INDEX"/>
          </facts>
        </logicExpression>
      </evokes>
    </evokeSection>
    <logicSection>
      <logicExpression xsi:type="EM:InfixExpression">
        <leftExpression xsi:type="EM:Antecedent" id="L1" template="EKS_COLL_STATUS">
          <facts argument="PROCEDURE">
            <value xsi:type="EM:StringValue" value="RELATIVE INDEX"/>
          </facts>
          <facts argument="STATUS">
            <value xsi:type="EM:StringValue" value="In-Lab"/>
          </facts>
        </leftExpression>
        <rightExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="L2" template="EKS_RESULT_EVAL2">
            <facts argument="PROCEDURE1">
              <value xsi:type="EM:StringValue" value="CK"/>
            </facts>
            <facts argument="RESULT_STATUS">
              <value xsi:type="EM:StringValue" value="VERIFIED"/>
            </facts>
            <facts argument="EVALUATION">
              <value xsi:type="EM:StringValue" value="number"/>
            </facts>
            <facts argument="VALUE">
              <value xsi:type="EM:StringValue"/>
            </facts>
            <facts argument="PROCEDURE2">
              <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:Antecedent" id="L3" template="EKS_RESULT_EVAL2">
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="CK"/>
              </facts>
              <facts argument="RESULT_STATUS">
                <value xsi:type="EM:StringValue" value="AUTOVERIFIED"/>
              </facts>
              <facts argument="EVALUATION">
                <value xsi:type="EM:StringValue" value="number"/>
              </facts>
              <facts argument="VALUE">
                <value xsi:type="EM:StringValue"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </leftExpression>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:Antecedent" id="L4" template="EKS_RESULT_EVAL2">
                <facts argument="PROCEDURE1">
                  <value xsi:type="EM:StringValue" value="CKMB"/>
                </facts>
                <facts argument="RESULT_STATUS">
                  <value xsi:type="EM:StringValue" value="VERIFIED"/>
                </facts>
                <facts argument="EVALUATION">
                  <value xsi:type="EM:StringValue" value="number"/>
                </facts>
                <facts argument="VALUE">
                  <value xsi:type="EM:StringValue"/>
                </facts>
                <facts argument="PROCEDURE2">
                  <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
                </facts>
              </leftExpression>
              <rightExpression xsi:type="EM:Antecedent" id="L5" template="EKS_RESULT_EVAL2">
                <facts argument="PROCEDURE1">
                  <value xsi:type="EM:StringValue" value="CKMB"/>
                </facts>
                <facts argument="RESULT_STATUS">
                  <value xsi:type="EM:StringValue" value="AUTOVERIFIED"/>
                </facts>
                <facts argument="EVALUATION">
                  <value xsi:type="EM:StringValue" value="number"/>
                </facts>
                <facts argument="VALUE">
                  <value xsi:type="EM:StringValue"/>
                </facts>
                <facts argument="PROCEDURE2">
                  <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
                </facts>
              </rightExpression>
            </rightExpression>
          </rightExpression>
        </rightExpression>
      </logicExpression>
    </logicSection>
    <actionSection>
      <action xsi:type="EM:ActionGroups">
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@leftExpression"/>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A1" template="EKS_RESULT_CREATE">
              <facts argument="RESULT_STATUS">
                <value xsi:type="EM:StringValue" value="verified"/>
              </facts>
              <facts argument="RESULT">
                <value xsi:type="EM:StringValue" value="(@RESULT:4 / @RESULT:2) * 100"/>
              </facts>
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="RI"/>
              </facts>
              <facts argument="CHART">
                <value xsi:type="EM:StringValue" value="non chartable"/>
              </facts>
              <facts argument="COMMENT">
                <value xsi:type="EM:StringValue" value="Relative Index result created by Discern Expert Rules System"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@rightExpression"/>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A2" template="EKS_RESULT_CREATE">
              <facts argument="RESULT_STATUS">
                <value xsi:type="EM:StringValue" value="verified"/>
              </facts>
              <facts argument="RESULT">
                <value xsi:type="EM:StringValue" value="(@RESULT:5 / @RESULT:2) * 100"/>
              </facts>
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="RI"/>
              </facts>
              <facts argument="CHART">
                <value xsi:type="EM:StringValue" value="non chartable"/>
              </facts>
              <facts argument="COMMENT">
                <value xsi:type="EM:StringValue" value="Relative Index result created by Discern Expert Rules System"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@leftExpression"/>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A3" template="EKS_RESULT_CREATE">
              <facts argument="RESULT_STATUS">
                <value xsi:type="EM:StringValue" value="verified"/>
              </facts>
              <facts argument="RESULT">
                <value xsi:type="EM:StringValue" value="(@RESULT:4 / @RESULT:3) * 100"/>
              </facts>
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="RI"/>
              </facts>
              <facts argument="CHART">
                <value xsi:type="EM:StringValue" value="non chartable"/>
              </facts>
              <facts argument="COMMENT">
                <value xsi:type="EM:StringValue" value="Relative Index result created by Discern Expert Rules System"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@rightExpression"/>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A4" template="EKS_RESULT_CREATE">
              <facts argument="RESULT_STATUS">
                <value xsi:type="EM:StringValue" value="verified"/>
              </facts>
              <facts argument="RESULT">
                <value xsi:type="EM:StringValue" value="(@RESULT:5 / @RESULT:3) * 100"/>
              </facts>
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="RI"/>
              </facts>
              <facts argument="CHART">
                <value xsi:type="EM:StringValue" value="non chartable"/>
              </facts>
              <facts argument="COMMENT">
                <value xsi:type="EM:StringValue" value="Relative Index result created by Discern Expert Rules System"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
      </action>
    </actionSection>
  </ruleDefinition>
</EM:ExpertModule>
