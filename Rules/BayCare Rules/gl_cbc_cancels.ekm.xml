<?xml version="1.0" encoding="ASCII"?>
<EM:ExpertModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:EM="http:///com.cerner.expert/expertmodule/1.0.0" moduleName="GL_CBC_CANCELS">
  <information>
    <runtimeInformation versionString="001.006" externalFileName="GL_CBC_CANCELS" lastUpdated="2017-08-14T08:41:00.000-0400" validtionType="PRODUCTION" title="GL_CBC_CANCELS" reconcileFlag="3" reconcileDate="2018-08-16T01:40:05.000-0400">
      <duration start="2012-05-14T00:00:00.000-0400" end="2100-05-14T19:59:59.000-0400"/>
      <updateUser userName="Raymond , Anne"/>
    </runtimeInformation>
    <documentation author="ANNE RAYMOND" institution="" specialist="" purpose="If there is a Manual Diff w/ CBC order set ordered along with a CBC with Diff, cancel the CBC with Diff.&#xD;&#xA;And if there is a CBC with Diff and a CBC witohout Diff ordered,&#xD;&#xA;cancel the CBC without diff.&#xD;&#xA;This replaces the big/little order dup checking from DORC" explanation="collection event.  If there is a Manual Diff w/ CBC order set ordered along with a CBC with Diff, cancel the CBC with Diff.&#xD;&#xA;And if there is a CBC with Diff and a CBC witohout Diff ordered,&#xD;&#xA;cancel the CBC without diff"/>
  </information>
  <expertTemplates>
    <events>
      <event name=""/>
      <event name="ADDPROBLEM"/>
      <event name="ADDTOSCRATCHPAD"/>
      <event name="ALLERGY_EVENT"/>
      <event name="AP_ORDER_EVENT"/>
      <event name="BB_RESULT_EVENT"/>
      <event name="CHART_SERVER_EVENT"/>
      <event name="CLINICALTRIALSCREEN"/>
      <event name="CLINICAL_EVENT"/>
      <event name="CLOSECHART"/>
      <event name="COLLECTION_EVENT"/>
      <event name="DCP_CN_TASK_UPD"/>
      <event name="DCP_MODTASK_EVENT"/>
      <event name="DCP_PW_COND"/>
      <event name="DCP_PW_OUTCOME_EVENT"/>
      <event name="DIAGNOSIS_EVENT"/>
      <event name="EKS_FORMAT"/>
      <event name="EKS_SYNC_TEST01"/>
      <event name="EKS_TEST_02"/>
      <event name="EKS_TEST_EVENT"/>
      <event name="EKS_TEST_EVENT01"/>
      <event name="ENSURE_EVENT"/>
      <event name="EXPERT_EVENT"/>
      <event name="HEALTHE_EVENT"/>
      <event name="HEALTH_MAINT_QUAL_EVENT"/>
      <event name="HIM_ADD_REQUEST"/>
      <event name="HIM_ADMIT_EVENT"/>
      <event name="HIM_PATIENT_INFO_REQUEST"/>
      <event name="HIM_TEST_EVENT"/>
      <event name="HL7_EVENT"/>
      <event name="MB_EXPEDITE"/>
      <event name="MB_RESULT_EVENT"/>
      <event name="MB_SCRIPTED_WORKUPS"/>
      <event name="MB_SUSCEPTIBILITY"/>
      <event name="MDI_RESULT_EVENT"/>
      <event name="MEDCHARTACTIVATE"/>
      <event name="MPI_ADT"/>
      <event name="OPENCHART"/>
      <event name="ORDER_EVENT"/>
      <event name="ORDER_PRO_TEST1"/>
      <event name="PATIENT_EVENT"/>
      <event name="PCA_EXPERT_EVENT"/>
      <event name="Person_Transaction"/>
      <event name="PFT_Add_Account"/>
      <event name="PFT_ADJ_WO"/>
      <event name="pft_check_amount"/>
      <event name="PFT_VEHICLE"/>
      <event name="PNTFLEXREFRANGE"/>
      <event name="POWERPLANFLEX"/>
      <event name="PROBLEM_EVENT"/>
      <event name="PROFIT_1450_CLAIM_EVENT"/>
      <event name="PROFIT_1500_CLAIM_EVENT"/>
      <event name="PROVIDER_CHG_EVENT"/>
      <event name="PROVIDE_EVENT"/>
      <event name="PWRCHRT_ADD_ORDER"/>
      <event name="RESULT_EVENT"/>
      <event name="RESULT_EVENT_CSM"/>
      <event name="RESULT_EVENT_TEST"/>
      <event name="SCH_ACTION_EVENT"/>
      <event name="SIGNORDER"/>
      <event name="SN New Pref Card Created"/>
      <event name="SN_CASE_CHECK_IN_EVENT"/>
      <event name="SN_CASE_EVENT"/>
      <event name="SN_CASE_SCHEDULE_EVENT"/>
      <event name="SN_DOCUMENT_OPEN"/>
      <event name="SN_DOCUMENT_STATE"/>
      <event name="SN_FINALIZE_DOC_EVENT"/>
      <event name="SN_PROCEDURE_SCHEDULE"/>
      <event name="SN_SAVE_PROCEDURE"/>
      <event name="SN_TEST_EVENT"/>
      <event name="SOCIAL_HISTORY_ADD"/>
      <event name="SYNCHEVENT"/>
      <event name="TOCFLEX"/>
      <event name="TOUCHOPENCHART"/>
    </events>
    <evokeTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_COLLECTION" definition="Collection event for procedure PROCEDURE" description="Collected orderable" eventDependency="//@expertTemplates/@events/@event.10">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="PROCEDURE" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/*select &#xD;&#xA; s.mnemonic, oc.primary_mnemonic&#xD;&#xA;from order_catalog_synonym s, order_catalog oc, code_value c&#xD;&#xA;plan c where c.code_set = 6000 and c.active_ind = 1 and c.display_key=&quot;LABORATORY&quot;&#xD;&#xA;join oc where oc.catalog_type_cd = c.code_value&#xD;&#xA;join s where s.catalog_cd = oc.catalog_cd and s.mnemonic>&quot; &quot;&#xD;&#xA;order by cnvtupper(S.MNEMONIC) */"/>
        </arguments>
      </templateDefinitions>
    </evokeTemplates>
    <logicTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_STOP_LOGIC_L" definition="the following templates are false, MODE logic evaluation" description="Used to control efficiency of Action Group rules" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.7 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.15 //@expertTemplates/@events/@event.22 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.35 //@expertTemplates/@events/@event.37 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.47 //@expertTemplates/@events/@event.48 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.53 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.56 //@expertTemplates/@events/@event.59 //@expertTemplates/@events/@event.70 //@expertTemplates/@events/@event.71 //@expertTemplates/@events/@event.72 //@expertTemplates/@events/@event.73" reconcilable="true">
        <keywords>UTILITY</keywords>
        <arguments xsi:type="EM:FixedListArgument" name="MODE" dataType="CHARACTER" reconcileScript="N/A">
          <defaultValue xsi:type="EM:StringValue" value="STOP"/>
          <stringTable>
            <column value="STOP"/>
            <column value=" "/>
          </stringTable>
          <stringTable>
            <column value="CONTINUE"/>
            <column value=" "/>
          </stringTable>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_COLL_STATUS" definition="PROCEDURE collection status is STATUS" description="Incoming collected orderable status" eventDependency="//@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="PROCEDURE" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/*select &#xD;&#xA; s.mnemonic, oc.primary_mnemonic&#xD;&#xA;from order_catalog_synonym s, order_catalog oc, code_value c&#xD;&#xA;plan c where c.code_set = 6000 and c.active_ind = 1 and c.display_key=&quot;LABORATORY&quot;&#xD;&#xA;join oc where oc.catalog_type_cd = c.code_value&#xD;&#xA;join s where s.catalog_cd = oc.catalog_cd and s.mnemonic>&quot; &quot;&#xD;&#xA;order by cnvtupper(S.MNEMONIC) */"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="STATUS" dataType="CHARACTER" required="true">
          <stringTable>
            <column value="Pending"/>
            <column value="Pending"/>
          </stringTable>
          <stringTable>
            <column value="Dispatched"/>
            <column value="Dispatched - 0"/>
          </stringTable>
          <stringTable>
            <column value="Collected"/>
            <column value="Collected - 1"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Hold"/>
            <column value="Miss-Hold - 2"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Recoll"/>
            <column value="Miss-Recoll - 3"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Resched"/>
            <column value="Miss-Resched - 4"/>
          </stringTable>
          <stringTable>
            <column value="Canceled"/>
            <column value="Canceled - 5"/>
          </stringTable>
          <stringTable>
            <column value="Inactive"/>
            <column value="Inactive - 6"/>
          </stringTable>
          <stringTable>
            <column value="In-Lab"/>
            <column value="In-Lab"/>
          </stringTable>
          <stringTable>
            <column value="Completed"/>
            <column value="Completed"/>
          </stringTable>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_COLL_STATUS2" definition="PROCEDURE1 collection status is STATUS for the same accession number as  PROCEDURE2" description="Collected orderable status" eventDependency="//@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="PROCEDURE1" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/* select &#xD;&#xA; s.mnemonic, s.synonym_id, oc.primary_mnemonic&#xD;&#xA;from order_catalog_synonym s, order_catalog oc, code_value c&#xD;&#xA;plan c where c.code_set = 6000 and c.active_ind = 1 and c.display_key=&quot;LABORATORY&quot;&#xD;&#xA;join oc where oc.catalog_type_cd = c.code_value&#xD;&#xA;join s where s.catalog_cd = oc.catalog_cd and s.mnemonic>&quot; &quot;&#xD;&#xA;order by cnvtupper(S.MNEMONIC) */"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="STATUS" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <stringTable>
            <column value="Pending"/>
            <column value="Pending "/>
          </stringTable>
          <stringTable>
            <column value="Dispatched"/>
            <column value="Dispatched - 0"/>
          </stringTable>
          <stringTable>
            <column value="Collected"/>
            <column value="Collected - 1"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Hold"/>
            <column value="Miss-Hold - 2"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Recoll"/>
            <column value="Miss-Recoll - 3"/>
          </stringTable>
          <stringTable>
            <column value="Miss-Resched"/>
            <column value="Miss-Resched - 4"/>
          </stringTable>
          <stringTable>
            <column value="Canceled"/>
            <column value="Canceled - 5"/>
          </stringTable>
          <stringTable>
            <column value="Inactive"/>
            <column value="Inactive - 6"/>
          </stringTable>
          <stringTable>
            <column value="In-Lab"/>
            <column value="In-Lab"/>
          </stringTable>
          <stringTable>
            <column value="Completed"/>
            <column value="Completed"/>
          </stringTable>
        </arguments>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
    </logicTemplates>
    <actionTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER_CANCEL" definition="Cancel PROCEDURE with reason of REASON" description="Cancel order" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.7 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.15 //@expertTemplates/@events/@event.22 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.35 //@expertTemplates/@events/@event.37 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.53 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.59 //@expertTemplates/@events/@event.70 //@expertTemplates/@events/@event.71 //@expertTemplates/@events/@event.73">
        <keywords>ORDER</keywords>
        <arguments name="PROCEDURE" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
        <arguments xsi:type="EM:ReferentialArgument" name="REASON" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="REASON" statement="EKS_UAR_CODELUP_REFHELP 1309 GO&#xD;&#xA;&#xD;&#xA;/* select display_key from code_value where code_set = 1309 */"/>
        </arguments>
      </templateDefinitions>
    </actionTemplates>
  </expertTemplates>
  <ruleDefinition>
    <evokeSection>
      <evokes evokeEvent="//@expertTemplates/@events/@event.10">
        <logicExpression xsi:type="EM:Antecedent" id="E1" template="EKS_COLLECTION">
          <facts argument="PROCEDURE">
            <value xsi:type="EM:StringValue" value="CBC with Differential"/>
          </facts>
        </logicExpression>
      </evokes>
    </evokeSection>
    <logicSection>
      <logicExpression xsi:type="EM:InfixExpression">
        <leftExpression xsi:type="EM:Antecedent" id="L1" template="EKS_STOP_LOGIC_L">
          <facts argument="MODE">
            <value xsi:type="EM:StringValue" value="STOP"/>
          </facts>
        </leftExpression>
        <rightExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="L2" template="EKS_COLL_STATUS">
            <facts argument="PROCEDURE">
              <value xsi:type="EM:StringValue" value="CBC with Differential"/>
            </facts>
            <facts argument="STATUS">
              <value xsi:type="EM:StringValue" value="Dispatched"/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:Antecedent" id="L3" template="EKS_STOP_LOGIC_L">
              <facts argument="MODE">
                <value xsi:type="EM:StringValue" value="CONTINUE"/>
              </facts>
            </leftExpression>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:Antecedent" id="L4" template="EKS_COLL_STATUS2">
                <facts argument="PROCEDURE1">
                  <value xsi:type="EM:StringValue" value="*MAN DIFF"/>
                </facts>
                <facts argument="STATUS">
                  <value xsi:type="EM:StringValue" value="Dispatched"/>
                </facts>
                <facts argument="PROCEDURE2">
                  <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
                </facts>
              </leftExpression>
              <rightExpression xsi:type="EM:Antecedent" id="L5" template="EKS_COLL_STATUS2">
                <facts argument="PROCEDURE1">
                  <value xsi:type="EM:StringValue" value="CBC  without Differential"/>
                </facts>
                <facts argument="STATUS">
                  <value xsi:type="EM:StringValue" value="Dispatched"/>
                </facts>
                <facts argument="PROCEDURE2">
                  <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
                </facts>
              </rightExpression>
            </rightExpression>
          </rightExpression>
        </rightExpression>
      </logicExpression>
    </logicSection>
    <actionSection>
      <action xsi:type="EM:ActionGroups">
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:InfixExpression">
                <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@leftExpression"/>
                <rightExpression xsi:type="EM:InfixExpression">
                  <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@leftExpression"/>
                  <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@rightExpression"/>
                </rightExpression>
              </rightExpression>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A1" template="EKS_ORDER_CANCEL">
              <facts argument="PROCEDURE">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
              </facts>
              <facts argument="REASON">
                <value xsi:type="EM:StringValue" value="LABDUPLICATEORDER"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
        <actionGroups>
          <logicExpression xsi:type="EM:InfixExpression">
            <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            <rightExpression xsi:type="EM:InfixExpression">
              <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@leftExpression"/>
              <rightExpression xsi:type="EM:InfixExpression">
                <leftExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@leftExpression"/>
                <rightExpression xsi:type="EM:InfixExpression">
                  <leftExpression xsi:type="EM:PrefixExpression">
                    <expression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@leftExpression"/>
                  </leftExpression>
                  <rightExpression xsi:type="EM:LogicReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@rightExpression"/>
                </rightExpression>
              </rightExpression>
            </rightExpression>
          </logicExpression>
          <actionExpression>
            <logicExpression xsi:type="EM:Antecedent" id="A2" template="EKS_ORDER_CANCEL">
              <facts argument="PROCEDURE">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@rightExpression/@rightExpression"/>
              </facts>
              <facts argument="REASON">
                <value xsi:type="EM:StringValue" value="DUPLICATEORDER"/>
              </facts>
            </logicExpression>
          </actionExpression>
        </actionGroups>
      </action>
    </actionSection>
  </ruleDefinition>
</EM:ExpertModule>
