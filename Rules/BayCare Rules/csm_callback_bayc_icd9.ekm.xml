<?xml version="1.0" encoding="ASCII"?>
<EM:ExpertModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:EM="http:///com.cerner.expert/expertmodule/1.0.0" moduleName="CSM_CALLBACK_BAYC_ICD9">
  <information>
    <runtimeInformation versionString="001.013" externalFileName="CSM_CALLBACK_BAYC_ICD9" lastUpdated="2003-02-20T08:29:12.000-0500" validtionType="EXPIRED" title="CSM_CALLBACK_BAYC_ICD9">
      <duration start="2001-10-09T00:00:00.000-0400" end="2003-02-06T23:59:59.000-0500"/>
      <updateUser userName="Cain , Timothy E"/>
    </runtimeInformation>
    <documentation author="KIM ENGEL" institution="" specialist="TIM CAIN" purpose="Removed so dx codes will not qualify for que"/>
  </information>
  <expertTemplates>
    <events>
      <event name=""/>
      <event name="ADDPROBLEM"/>
      <event name="ADDTOSCRATCHPAD"/>
      <event name="ALLERGY_EVENT"/>
      <event name="AP_ORDER_EVENT"/>
      <event name="BB_RESULT_EVENT"/>
      <event name="CHART_SERVER_EVENT"/>
      <event name="CLINICALTRIALSCREEN"/>
      <event name="CLINICAL_EVENT"/>
      <event name="CLOSECHART"/>
      <event name="COLLECTION_EVENT"/>
      <event name="DCP_CN_TASK_UPD"/>
      <event name="DCP_MODTASK_EVENT"/>
      <event name="DCP_PW_COND"/>
      <event name="DCP_PW_OUTCOME_EVENT"/>
      <event name="DIAGNOSIS_EVENT"/>
      <event name="EKS_FORMAT"/>
      <event name="EKS_SYNC_TEST01"/>
      <event name="EKS_TEST_02"/>
      <event name="EKS_TEST_EVENT"/>
      <event name="EKS_TEST_EVENT01"/>
      <event name="ENSURE_EVENT"/>
      <event name="EXPERT_EVENT"/>
      <event name="HEALTHE_EVENT"/>
      <event name="HEALTH_MAINT_QUAL_EVENT"/>
      <event name="HIM_ADD_REQUEST"/>
      <event name="HIM_ADMIT_EVENT"/>
      <event name="HIM_PATIENT_INFO_REQUEST"/>
      <event name="HIM_TEST_EVENT"/>
      <event name="HL7_EVENT"/>
      <event name="MB_EXPEDITE"/>
      <event name="MB_RESULT_EVENT"/>
      <event name="MB_SCRIPTED_WORKUPS"/>
      <event name="MB_SUSCEPTIBILITY"/>
      <event name="MDI_RESULT_EVENT"/>
      <event name="MEDCHARTACTIVATE"/>
      <event name="MPI_ADT"/>
      <event name="OPENCHART"/>
      <event name="ORDER_EVENT"/>
      <event name="ORDER_PRO_TEST1"/>
      <event name="PATIENT_EVENT"/>
      <event name="PCA_EXPERT_EVENT"/>
      <event name="Person_Transaction"/>
      <event name="PFT_Add_Account"/>
      <event name="PFT_ADJ_WO"/>
      <event name="pft_check_amount"/>
      <event name="PFT_VEHICLE"/>
      <event name="PNTFLEXREFRANGE"/>
      <event name="POWERPLANFLEX"/>
      <event name="PREGNANCY_EVENT"/>
      <event name="PROBLEM_EVENT"/>
      <event name="PROFIT_1450_CLAIM_EVENT"/>
      <event name="PROFIT_1500_CLAIM_EVENT"/>
      <event name="PROVIDER_CHG_EVENT"/>
      <event name="PROVIDE_EVENT"/>
      <event name="PWRCHRT_ADD_ORDER"/>
      <event name="RESULT_EVENT"/>
      <event name="RESULT_EVENT_CSM"/>
      <event name="RESULT_EVENT_TEST"/>
      <event name="SCH_ACTION_EVENT"/>
      <event name="SIGNORDER"/>
      <event name="SN New Pref Card Created"/>
      <event name="SN_CASE_CHECK_IN_EVENT"/>
      <event name="SN_CASE_EVENT"/>
      <event name="SN_CASE_SCHEDULE_EVENT"/>
      <event name="SN_DOCUMENT_OPEN"/>
      <event name="SN_DOCUMENT_STATE"/>
      <event name="SN_FINALIZE_DOC_EVENT"/>
      <event name="SN_PROCEDURE_SCHEDULE"/>
      <event name="SN_SAVE_PROCEDURE"/>
      <event name="SN_TEST_EVENT"/>
      <event name="SOCIAL_HISTORY_ADD"/>
      <event name="SYNCHEVENT"/>
      <event name="TOCFLEX"/>
      <event name="TOUCHOPENCHART"/>
    </events>
    <evokeTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="CSM_ORD_E_ENCOUNTER_TYPE" definition="Encounter type ARGUMENT among: ENC_TYPE1,  ENC_TYPE2, ENC_TYPE3, ENC_TYPE4, ENC_TYPE5, ENC_TYPE6, ENC_TYPE7, ENC_TYPE8, ENC_TYPE9, ENC_TYPE10, ENC_TYPE11, ENC_TYPE12, ENC_TYPE13, ENC_TYPE14, ENC_TYPE15, ENC_TYPE16, ENC_TYPE17, ENC_TYPE18, ENC_TYPE19" description="Patient types." eventDependency="//@expertTemplates/@events/@event.57">
        <keywords></keywords>
        <arguments xsi:type="EM:FixedListArgument" name="ARGUMENT" dataType="CHARACTER" controlType="COMBOBOX" required="true">
          <stringTable>
            <column value="IS"/>
            <column value="True indicator"/>
          </stringTable>
          <stringTable>
            <column value="IS NOT"/>
            <column value="False indicator"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE1" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="ENC_TYPE1" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE2" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE2" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE3" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE3" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE4" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE4" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE5" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE5" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE6" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE6" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE7" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE7" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE8" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE8" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE9" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE9" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE10" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE10" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE11" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE11" statement="select concat(trim(display),&quot;    [cd: &quot;,trim(cnvtstring(code_value)),&quot;]&quot;)&#xD;&#xA;from code_value&#xD;&#xA;where code_set = 71&#xD;&#xA;order display"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE12" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE12" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE13" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE13" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE14" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE14" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE15" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE15" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE16" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE16" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE17" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE17" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE18" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE18" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE19" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE19" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
      </templateDefinitions>
    </evokeTemplates>
    <logicTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="CSM_ORD_L_ENCOUNTER_TYPE" definition="Encounter type ARGUMENT among: ENC_TYPE1,  ENC_TYPE2, ENC_TYPE3, ENC_TYPE4, ENC_TYPE5, ENC_TYPE6, ENC_TYPE7, ENC_TYPE8, ENC_TYPE9, ENC_TYPE10, ENC_TYPE11, ENC_TYPE12, ENC_TYPE13, ENC_TYPE14, ENC_TYPE15, ENC_TYPE16, ENC_TYPE17, ENC_TYPE18, ENC_TYPE19" description="Patient types." eventDependency="//@expertTemplates/@events/@event.57">
        <keywords></keywords>
        <arguments xsi:type="EM:FixedListArgument" name="ARGUMENT" dataType="CHARACTER" controlType="COMBOBOX" required="true">
          <stringTable>
            <column value="IS"/>
            <column value="True indicator"/>
          </stringTable>
          <stringTable>
            <column value="IS NOT"/>
            <column value="False indicator"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE1" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="ENC_TYPE1" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE2" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE2" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE3" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE3" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE4" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE4" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE5" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE5" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE6" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE6" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE7" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE7" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE8" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE8" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE9" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE9" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE10" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE10" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE11" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE11" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE12" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE12" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE13" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE13" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE14" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE14" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE15" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE15" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE16" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE16" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE17" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE17" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE18" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE18" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="ENC_TYPE19" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="ENC_TYPE19" statement="select c.display, c.description&#xD;&#xA;from code_value c&#xD;&#xA;where c.code_set = 71&#xD;&#xA;order c.display_key"/>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="CSM_ORD_L_DIAGNOSIS" definition="Diagnosis  ARGUMENT among: DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,  DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,DIAGNOSIS9,DIAGNOSIS10,DIAGNOSIS11,DIAGNOSIS12,  DIAGNOSIS13,DIAGNOSIS14,DIAGNOSIS15,DIAGNOSIS16,DIAGNOSIS17,DIAGNOSIS18,DIAGNOSIS19" description="Template used to determine a diagnosis." eventDependency="//@expertTemplates/@events/@event.57">
        <keywords></keywords>
        <arguments xsi:type="EM:FixedListArgument" name="ARGUMENT" dataType="CHARACTER" controlType="COMBOBOX" required="true">
          <stringTable>
            <column value="IS"/>
            <column value="True"/>
          </stringTable>
          <stringTable>
            <column value="IS NOT"/>
            <column value="False"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS1" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="DIAGNOSIS1" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS1" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS2" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS2" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS2" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS3" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS3" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS3" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS4" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS4" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS4" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS5" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS5" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS5" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS6" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS6" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS6" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS7" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS7" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS7" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS8" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS8" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS8" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS9" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS9" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS9" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS10" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS10" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS10" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS11" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS11" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS11" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS12" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS12" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS12" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS13" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS13" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS13" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS14" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS14" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS14" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS15" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS15" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS15" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS16" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS16" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS16" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS17" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS17" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS17" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS18" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS18" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS18" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="DIAGNOSIS19" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY">
          <statements dependency="DIAGNOSIS19" statement="EKS_SELECT_PREFIX GO"/>
          <statements dependency="DIAGNOSIS19" statement="OS_CSM_GET_DIAGNOSIS_REFHELP GO"/>
        </arguments>
      </templateDefinitions>
    </logicTemplates>
    <actionTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="CSM_ORDER_CALLBACK" definition="Order service request CALLBACK with the priority PRIORITY  link to LINK" description="Order a CSM callback service request with given priority." eventDependency="//@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.57">
        <keywords></keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="CALLBACK" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="CALLBACK" statement="SELECT &#xD;&#xA;              concat( trim(C.CSM_CAT_DESC), &quot; - &quot;,&#xD;&#xA;               trim(S.CSM_SUB_CAT_DESC))&#xD;&#xA;FROM CSM_CATEGORIES C, &#xD;&#xA;           CSM_SUB_CATEGORIES S, &#xD;&#xA;           CSM_CAT_SUB_XREF R&#xD;&#xA;PLAN C WHERE C.CSM_CAT_ID > 0&#xD;&#xA;JOIN S WHERE S.CSM_SUB_CAT_ID > 0&#xD;&#xA;JOIN R WHERE R.CSM_CAT_ID = C.CSM_CAT_ID AND &#xD;&#xA;                           R.CSM_SUB_CAT_ID = S.CSM_SUB_CAT_ID AND&#xD;&#xA;                           R.CSM_CALLBACK_IND = 0 AND R.ACTIVE_IND = 0&#xD;&#xA;"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="PRIORITY" dataType="CHARACTER" controlType="REFERENTIAL" validationType="READ_ONLY" required="true">
          <statements dependency="PRIORITY" statement="select c.csm_prior_desc&#xD;&#xA;from csm_priorities c&#xD;&#xA;where c.csm_prior_id > 0 and c.csm_active_ind = 1"/>
        </arguments>
        <arguments name="LINK" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
    </actionTemplates>
  </expertTemplates>
  <ruleDefinition>
    <evokeSection>
      <evokes evokeEvent="//@expertTemplates/@events/@event.57">
        <logicExpression xsi:type="EM:Antecedent" id="E1" template="CSM_ORD_E_ENCOUNTER_TYPE">
          <facts argument="ARGUMENT">
            <value xsi:type="EM:StringValue" value="IS"/>
          </facts>
          <facts argument="ENC_TYPE1">
            <value xsi:type="EM:StringValue" value="JH Outreach"/>
          </facts>
          <facts argument="ENC_TYPE2">
            <value xsi:type="EM:StringValue" value="MP Outreach"/>
          </facts>
          <facts argument="ENC_TYPE3">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE4">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE5">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE6">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE7">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE8">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE9">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE10">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE11">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE12">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE13">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE14">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE15">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE16">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE17">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE18">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE19">
            <value xsi:type="EM:StringValue"/>
          </facts>
        </logicExpression>
      </evokes>
    </evokeSection>
    <logicSection>
      <logicExpression xsi:type="EM:InfixExpression">
        <leftExpression xsi:type="EM:Antecedent" id="L1" template="CSM_ORD_L_ENCOUNTER_TYPE">
          <facts argument="ARGUMENT">
            <value xsi:type="EM:StringValue" value="IS"/>
          </facts>
          <facts argument="ENC_TYPE1">
            <value xsi:type="EM:StringValue" value="JH Outreach"/>
          </facts>
          <facts argument="ENC_TYPE2">
            <value xsi:type="EM:StringValue" value="MP Outreach"/>
          </facts>
          <facts argument="ENC_TYPE3">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE4">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE5">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE6">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE7">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE8">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE9">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE10">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE11">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE12">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE13">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE14">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE15">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE16">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE17">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE18">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="ENC_TYPE19">
            <value xsi:type="EM:StringValue"/>
          </facts>
        </leftExpression>
        <rightExpression xsi:type="EM:Antecedent" id="L2" template="CSM_ORD_L_DIAGNOSIS">
          <facts argument="ARGUMENT">
            <value xsi:type="EM:StringValue" value="IS"/>
          </facts>
          <facts argument="DIAGNOSIS1">
            <value xsi:type="EM:StringValue" value="0 [id: 1148133]"/>
          </facts>
          <facts argument="DIAGNOSIS2">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS3">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS4">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS5">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS6">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS7">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS8">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS9">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS10">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS11">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS12">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS13">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS14">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS15">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS16">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS17">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS18">
            <value xsi:type="EM:StringValue"/>
          </facts>
          <facts argument="DIAGNOSIS19">
            <value xsi:type="EM:StringValue"/>
          </facts>
        </rightExpression>
      </logicExpression>
    </logicSection>
    <actionSection>
      <action xsi:type="EM:ActionExpression">
        <logicExpression xsi:type="EM:Antecedent" id="A1" template="CSM_ORDER_CALLBACK">
          <facts argument="CALLBACK">
            <value xsi:type="EM:StringValue" value="Call Back - For Dx Code"/>
          </facts>
          <facts argument="PRIORITY">
            <value xsi:type="EM:StringValue" value="72 hrs"/>
          </facts>
          <facts argument="LINK">
            <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression"/>
          </facts>
        </logicExpression>
      </action>
    </actionSection>
  </ruleDefinition>
</EM:ExpertModule>
