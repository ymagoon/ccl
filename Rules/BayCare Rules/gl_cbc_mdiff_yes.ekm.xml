<?xml version="1.0" encoding="ASCII"?>
<EM:ExpertModule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:EM="http:///com.cerner.expert/expertmodule/1.0.0" moduleName="GL_CBC_MDIFF_YES">
  <information>
    <runtimeInformation versionString="001.010" externalFileName="GL_CBC_MDIFF_YES" lastUpdated="2003-11-26T11:00:19.000-0500" validtionType="EXPIRED" title="GL_CBC_MDIFF_YES">
      <duration start="2001-08-29T00:00:00.000-0400" end="2010-08-20T23:59:59.000-0400"/>
      <updateUser userName="Raymond , Anne"/>
    </runtimeInformation>
    <documentation author="K.ENGEL" institution="" specialist=""/>
  </information>
  <expertTemplates>
    <events>
      <event name=""/>
      <event name="ADDPROBLEM"/>
      <event name="ADDTOSCRATCHPAD"/>
      <event name="ALLERGY_EVENT"/>
      <event name="AP_ORDER_EVENT"/>
      <event name="BB_RESULT_EVENT"/>
      <event name="CHART_SERVER_EVENT"/>
      <event name="CLINICALTRIALSCREEN"/>
      <event name="CLINICAL_EVENT"/>
      <event name="CLOSECHART"/>
      <event name="COLLECTION_EVENT"/>
      <event name="DCP_CN_TASK_UPD"/>
      <event name="DCP_MODTASK_EVENT"/>
      <event name="DCP_PW_COND"/>
      <event name="DCP_PW_OUTCOME_EVENT"/>
      <event name="DIAGNOSIS_EVENT"/>
      <event name="EKS_FORMAT"/>
      <event name="EKS_SYNC_TEST01"/>
      <event name="EKS_TEST_02"/>
      <event name="EKS_TEST_EVENT"/>
      <event name="EKS_TEST_EVENT01"/>
      <event name="ENSURE_EVENT"/>
      <event name="EXPERT_EVENT"/>
      <event name="HEALTHE_EVENT"/>
      <event name="HEALTH_MAINT_QUAL_EVENT"/>
      <event name="HIM_ADD_REQUEST"/>
      <event name="HIM_ADMIT_EVENT"/>
      <event name="HIM_PATIENT_INFO_REQUEST"/>
      <event name="HIM_TEST_EVENT"/>
      <event name="HL7_EVENT"/>
      <event name="MB_EXPEDITE"/>
      <event name="MB_RESULT_EVENT"/>
      <event name="MB_SCRIPTED_WORKUPS"/>
      <event name="MB_SUSCEPTIBILITY"/>
      <event name="MDI_RESULT_EVENT"/>
      <event name="MEDCHARTACTIVATE"/>
      <event name="MPI_ADT"/>
      <event name="OPENCHART"/>
      <event name="ORDER_EVENT"/>
      <event name="ORDER_PRO_TEST1"/>
      <event name="PATIENT_EVENT"/>
      <event name="PCA_EXPERT_EVENT"/>
      <event name="Person_Transaction"/>
      <event name="PFT_Add_Account"/>
      <event name="PFT_ADJ_WO"/>
      <event name="pft_check_amount"/>
      <event name="PFT_VEHICLE"/>
      <event name="PNTFLEXREFRANGE"/>
      <event name="POWERPLANFLEX"/>
      <event name="PROBLEM_EVENT"/>
      <event name="PROFIT_1450_CLAIM_EVENT"/>
      <event name="PROFIT_1500_CLAIM_EVENT"/>
      <event name="PROVIDER_CHG_EVENT"/>
      <event name="PROVIDE_EVENT"/>
      <event name="PWRCHRT_ADD_ORDER"/>
      <event name="RESULT_EVENT"/>
      <event name="RESULT_EVENT_CSM"/>
      <event name="RESULT_EVENT_TEST"/>
      <event name="SCH_ACTION_EVENT"/>
      <event name="SIGNORDER"/>
      <event name="SN New Pref Card Created"/>
      <event name="SN_CASE_CHECK_IN_EVENT"/>
      <event name="SN_CASE_EVENT"/>
      <event name="SN_CASE_SCHEDULE_EVENT"/>
      <event name="SN_DOCUMENT_OPEN"/>
      <event name="SN_DOCUMENT_STATE"/>
      <event name="SN_FINALIZE_DOC_EVENT"/>
      <event name="SN_PROCEDURE_SCHEDULE"/>
      <event name="SN_SAVE_PROCEDURE"/>
      <event name="SN_TEST_EVENT"/>
      <event name="SOCIAL_HISTORY_ADD"/>
      <event name="SYNCHEVENT"/>
      <event name="TOCFLEX"/>
      <event name="TOUCHOPENCHART"/>
    </events>
    <evokeTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_RESULT_STA" definition="PROCEDURE result status equals RESULT_STATUS" description="Discrete task assay, status" eventDependency="//@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.55">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE" statement="SELECT&#xD;&#xA; T.MNEMONIC,&#xD;&#xA; T.TASK_ASSAY_CD&#xD;&#xA;FROM &#xD;&#xA; DISCRETE_TASK_ASSAY T&#xD;&#xA;ORDER&#xD;&#xA; T.MNEMONIC&#xD;&#xA;&#xD;&#xA;"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="RESULT_STATUS" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="RESULT_STATUS" statement="SELECT   &#xD;&#xA;  C1.DISPLAY_KEY&#xD;&#xA; ,C1.DESCRIPTION&#xD;&#xA; ,C1.CODE_VALUE&#xD;&#xA;FROM CODE_VALUE C1&#xD;&#xA;WHERE C1.CODE_SET = 1901 AND C1.ACTIVE_IND=1&#xD;&#xA;ORDER C1.DISPLAY_KEY&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;SELECT&#x9; C1.DESCRIPTION&#xD;&#xA;FROM&#x9;CODE_VALUE  C1&#xD;&#xA;WHERE CODE_SET = 1901&#xD;&#xA;ORDER&#x9;C1.CODE_VALUE&#xD;&#xA;*/"/>
        </arguments>
      </templateDefinitions>
    </evokeTemplates>
    <logicTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_RESULT_EVAL" definition="PROCEDURE RESULT_STATUS result is EVALUATION VALUE" description="Incoming discrete task assay, status, result value" eventDependency="//@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.21 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.55">
        <keywords>PATHNET</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE" statement="SELECT&#xD;&#xA; T.MNEMONIC,&#xD;&#xA; T.TASK_ASSAY_CD&#xD;&#xA;FROM &#xD;&#xA; DISCRETE_TASK_ASSAY T&#xD;&#xA;ORDER&#xD;&#xA; T.MNEMONIC&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;SELECT&#xD;&#xA; MNEMONIC = DECODE(O.SEQ,O.MNEMONIC,&#xD;&#xA;                   T.SEQ,T.MNEMONIC,&#xD;&#xA;                         FILLSTRING(50,' '))&#xD;&#xA;, TYPE    = DECODE(O.SEQ,'ORDER_CATALOG',&#xD;&#xA;                   T.SEQ,'TASK_ASSAY   ',&#xD;&#xA;                         '             ')&#xD;&#xA;, TYPE_CD = DECODE(O.SEQ,O.CATALOG_CD,&#xD;&#xA;                   T.SEQ,T.TASK_ASSAY_CD,&#xD;&#xA;                   0.0) &#xD;&#xA;&#xD;&#xA;FROM    (DUMMYT D WITH SEQ = 1),&#xD;&#xA;        order_Catalog_synonym O,&#xD;&#xA;        DISCRETE_TASK_ASSAY T,&#xD;&#xA;        CODE_VALUE C&#xD;&#xA;&#xD;&#xA;PLAN D&#xD;&#xA;JOIN ( O  WHERE O.ACTIVE_IND=1 &#xD;&#xA; JOIN C WHERE O.CATALOG_TYPE_CD = C.CODE_VALUE AND C.DISPLAY_KEY = &#xD;&#xA; 'LABORATORY')&#xD;&#xA;ORJOIN T WHERE T.ACTIVE_IND=1&#xD;&#xA;&#xD;&#xA;ORDER MNEMONIC&#xD;&#xA;&#xD;&#xA;SELECT S.MNEMONIC &#xD;&#xA;FROM ORDER_CATALOG_SYNONYM S, CODE_VALUE C&#xD;&#xA;WHERE S.CATALOG_TYPE_CD=C.CODE_VALUE &#xD;&#xA; AND C.DISPLAY_KEY = &quot;LABORATORY&quot;&#xD;&#xA;*/"/>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="RESULT_STATUS" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="RESULT_STATUS" statement="SELECT&#x9; &#xD;&#xA;  C1.DISPLAY_KEY&#xD;&#xA; ,C1.CODE_VALUE&#xD;&#xA;, C1.DISPLAY&#xD;&#xA; ,C1.DESCRIPTION&#xD;&#xA;FROM CODE_VALUE C1&#xD;&#xA;WHERE C1.CODE_SET = 1901 AND C1.ACTIVE_IND=1&#xD;&#xA; and cnvtdatetime(curdate,curtime3)&#xD;&#xA;  between c1.begin_effective_dt_tm and c1.end_effective_dt_tm&#xD;&#xA;ORDER C1.DISPLAY_KEY&#xD;&#xA;"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="EVALUATION" dataType="CHARACTER" required="true">
          <stringTable>
            <column value="equal to"/>
            <column value="equal to"/>
          </stringTable>
          <stringTable>
            <column value="less than"/>
            <column value="less than"/>
          </stringTable>
          <stringTable>
            <column value="greater than"/>
            <column value="greater than"/>
          </stringTable>
          <stringTable>
            <column value="less than or equal to "/>
            <column value="less than or equal to"/>
          </stringTable>
          <stringTable>
            <column value="greater than or equal to"/>
            <column value="greater than or equal to"/>
          </stringTable>
          <stringTable>
            <column value="between"/>
            <column value="between a range of numbers"/>
          </stringTable>
          <stringTable>
            <column value="outside"/>
            <column value="outside a range  of numbers"/>
          </stringTable>
          <stringTable>
            <column value="normal"/>
            <column value="normal"/>
          </stringTable>
          <stringTable>
            <column value="abnormal"/>
            <column value="abnormal"/>
          </stringTable>
          <stringTable>
            <column value="high"/>
            <column value="high"/>
          </stringTable>
          <stringTable>
            <column value="low"/>
            <column value="low"/>
          </stringTable>
          <stringTable>
            <column value="critical"/>
            <column value="critical"/>
          </stringTable>
          <stringTable>
            <column value="review"/>
            <column value="review"/>
          </stringTable>
          <stringTable>
            <column value="linear"/>
            <column value="linear"/>
          </stringTable>
          <stringTable>
            <column value="feasible"/>
            <column value="feasible"/>
          </stringTable>
          <stringTable>
            <column value="not equal to"/>
            <column value="not equal to"/>
          </stringTable>
          <stringTable>
            <column value="alpha"/>
            <column value="Result is an alpha value"/>
          </stringTable>
          <stringTable>
            <column value="number"/>
            <column value="number"/>
          </stringTable>
        </arguments>
        <arguments xsi:type="EM:ReferentialArgument" name="VALUE" dataType="CHARACTER" controlType="REFERENTIAL" validationType="REFERENTIAL">
          <statements dependency="VALUE" statement="SELECT distinct n.source_string&#xD;&#xA;  from nomenclature n, code_value cv&#xD;&#xA;plan cv where cv.code_set=401 and cv.cdf_meaning = &quot;ALPHA RESPON&quot; and cv.active_ind = 1&#xD;&#xA;join n where n.active_ind=1 and n.principle_type_cd = cv.code_value&#xD;&#xA;   and n.beg_effective_dt_tm &lt;= cnvtdatetime(curdate, curtime3)&#xD;&#xA;   and n.end_effective_dt_tm >= cnvtdatetime(curdate, curtime3)&#xD;&#xA;   and n.source_string != &quot; &quot;&#xD;&#xA;order n.source_string_keycap"/>
        </arguments>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER2" definition="PROCEDURE1 is ordered within NUMBER TIME_UNIT in the DIRECTION from PROCEDURE2" description="A procedure was ordered in the past/future from another procedure" recommeded="NOT_RECOMMENDED" eventDependency="//@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.21 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55">
        <keywords></keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE1" statement="SELECT &#xD;&#xA; S.MNEMONIC,&#xD;&#xA; OC.PRIMARY_MNEMONIC&#xD;&#xA;&#xD;&#xA;FROM  ORDER_CATALOG_SYNONYM S,&#xD;&#xA;            ORDER_CATALOG OC,&#xD;&#xA;             CODE_VALUE C&#xD;&#xA;PLAN S&#xD;&#xA;JOIN C WHERE  S.CATALOG_TYPE_CD=C.CODE_VALUE AND&#xD;&#xA; C.DISPLAY_KEY = &quot;LABORATORY&quot;&#xD;&#xA;JOIN OC WHERE S.CATALOG_CD = OC.CATALOG_CD"/>
        </arguments>
        <arguments name="NUMBER" dataType="FLOAT" required="true"/>
        <arguments xsi:type="EM:ReferentialArgument" name="TIME_UNIT" dataType="CHARACTER" required="true">
          <statements dependency="TIME_UNIT" statement="EKS_GENERAL_REFHELP &quot;TIME_UNIT&quot; GO"/>
        </arguments>
        <arguments xsi:type="EM:FixedListArgument" name="DIRECTION" dataType="CHARACTER" required="true">
          <stringTable>
            <column value="past"/>
            <column value="past"/>
          </stringTable>
          <stringTable>
            <column value="future"/>
            <column value="future"/>
          </stringTable>
          <stringTable>
            <column value="past and or future"/>
            <column value="past and or future"/>
          </stringTable>
        </arguments>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_NOT_ORDERED" definition="PROCEDURE1 has not been ordered on the same accession number as PROCEDURE2" description="Recommend EKS_ORDERS_FIND_L with NOT connector" recommeded="NOT_RECOMMENDED" eventDependency="//@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.55">
        <keywords>ORDER</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE1" statement="execute eks_t_translate_lab_refhelp go&#xD;&#xA;/* SELECT &#xD;&#xA; S.MNEMONIC,&#xD;&#xA; OC.PRIMARY_MNEMONIC&#xD;&#xA;&#xD;&#xA;FROM  ORDER_CATALOG_SYNONYM S,&#xD;&#xA;            ORDER_CATALOG OC,&#xD;&#xA;             CODE_VALUE C&#xD;&#xA;PLAN S&#xD;&#xA;JOIN C WHERE  S.CATALOG_TYPE_CD=C.CODE_VALUE AND&#xD;&#xA; C.DISPLAY_KEY = &quot;LABORATORY&quot;&#xD;&#xA;JOIN OC WHERE S.CATALOG_CD = OC.CATALOG_CD */"/>
        </arguments>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
      </templateDefinitions>
    </logicTemplates>
    <actionTemplates>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER_ADDON" definition="add PROCEDURE1 to PROCEDURE2 with no change to the original order parameters and associate CHART order comment COMMENT to the added procedure" description="Add order to an existing accession" eventDependency="//@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.15 //@expertTemplates/@events/@event.22 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.56 //@expertTemplates/@events/@event.70">
        <keywords>ORDER</keywords>
        <arguments xsi:type="EM:ReferentialArgument" name="PROCEDURE1" dataType="CHARACTER" controlType="REFERENTIAL" validationType="REFERENTIAL" required="true">
          <statements dependency="PROCEDURE1" statement="select ocs.mnemonic,catalog_type=cv.display&#xD;&#xA;from order_catalog oc, order_catalog_synonym ocs, code_value cv&#xD;&#xA;plan oc where oc.orderable_type_flag not in (2,3,6,8,11) and oc.active_ind = 1&#xD;&#xA;and oc.catalog_type_cd > 0&#xD;&#xA;join cv where cv.code_value = oc.catalog_type_cd and&#xD;&#xA;cv.cdf_meaning != &quot;PHARMACY    &quot;&#xD;&#xA;join ocs where ocs.catalog_cd = oc.catalog_cd and&#xD;&#xA;ocs.mnemonic = oc.primary_mnemonic&#xD;&#xA;order cnvtupper(ocs.mnemonic)"/>
        </arguments>
        <arguments name="PROCEDURE2" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
        <arguments xsi:type="EM:FixedListArgument" name="CHART" dataType="CHARACTER" validationType="READ_ONLY" required="true">
          <stringTable>
            <column value="chartable"/>
            <column value="chartable"/>
          </stringTable>
          <stringTable>
            <column value="non chartable"/>
            <column value="non chartable"/>
          </stringTable>
          <stringTable>
            <column value="NONE"/>
            <column value="no comment"/>
          </stringTable>
        </arguments>
        <arguments name="COMMENT" dataType="CHARACTER" controlType="TEXT_MULTI_LINE"/>
      </templateDefinitions>
      <templateDefinitions xsi:type="EM:ExpertTemplate" name="EKS_ORDER_CANCEL" definition="Cancel PROCEDURE with reason of REASON" description="Cancel order" eventDependency="//@expertTemplates/@events/@event.1 //@expertTemplates/@events/@event.2 //@expertTemplates/@events/@event.3 //@expertTemplates/@events/@event.5 //@expertTemplates/@events/@event.7 //@expertTemplates/@events/@event.8 //@expertTemplates/@events/@event.9 //@expertTemplates/@events/@event.10 //@expertTemplates/@events/@event.12 //@expertTemplates/@events/@event.15 //@expertTemplates/@events/@event.22 //@expertTemplates/@events/@event.31 //@expertTemplates/@events/@event.35 //@expertTemplates/@events/@event.37 //@expertTemplates/@events/@event.38 //@expertTemplates/@events/@event.40 //@expertTemplates/@events/@event.41 //@expertTemplates/@events/@event.49 //@expertTemplates/@events/@event.53 //@expertTemplates/@events/@event.55 //@expertTemplates/@events/@event.59 //@expertTemplates/@events/@event.70 //@expertTemplates/@events/@event.71 //@expertTemplates/@events/@event.73">
        <keywords>ORDER</keywords>
        <arguments name="PROCEDURE" dataType="LINK" controlType="TEMPLATE_REFERENCE" required="true"/>
        <arguments xsi:type="EM:ReferentialArgument" name="REASON" dataType="CHARACTER" controlType="REFERENTIAL" required="true">
          <statements dependency="REASON" statement="EKS_UAR_CODELUP_REFHELP 1309 GO&#xD;&#xA;&#xD;&#xA;/* select display_key from code_value where code_set = 1309 */"/>
        </arguments>
      </templateDefinitions>
    </actionTemplates>
  </expertTemplates>
  <ruleDefinition>
    <evokeSection>
      <evokes evokeEvent="//@expertTemplates/@events/@event.55">
        <logicExpression xsi:type="EM:Antecedent" id="E1" template="EKS_RESULT_STA">
          <facts argument="PROCEDURE">
            <value xsi:type="EM:StringValue" value="Man Diff?"/>
          </facts>
          <facts argument="RESULT_STATUS">
            <value xsi:type="EM:StringValue" value="PERFORMED"/>
          </facts>
        </logicExpression>
      </evokes>
    </evokeSection>
    <logicSection>
      <logicExpression xsi:type="EM:InfixExpression">
        <leftExpression xsi:type="EM:Antecedent" id="L1" template="EKS_RESULT_EVAL">
          <facts argument="PROCEDURE">
            <value xsi:type="EM:StringValue" value="Man Diff?"/>
          </facts>
          <facts argument="RESULT_STATUS">
            <value xsi:type="EM:StringValue" value="PERFORMED"/>
          </facts>
          <facts argument="EVALUATION">
            <value xsi:type="EM:StringValue" value="equal to"/>
          </facts>
          <facts argument="VALUE">
            <value xsi:type="EM:StringValue" value="YES"/>
          </facts>
        </leftExpression>
        <rightExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="L2" template="EKS_ORDER2">
            <facts argument="PROCEDURE1">
              <value xsi:type="EM:StringValue" value="*AUTO DIFF"/>
            </facts>
            <facts argument="NUMBER">
              <value xsi:type="EM:FloatValue" floatValue="1.0"/>
            </facts>
            <facts argument="TIME_UNIT">
              <value xsi:type="EM:StringValue" value="minutes"/>
            </facts>
            <facts argument="DIRECTION">
              <value xsi:type="EM:StringValue" value="past and or future"/>
            </facts>
            <facts argument="PROCEDURE2">
              <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:PrefixExpression">
            <expression xsi:type="EM:Antecedent" id="L3" template="EKS_NOT_ORDERED">
              <facts argument="PROCEDURE1">
                <value xsi:type="EM:StringValue" value="*AUTO DIFF"/>
              </facts>
              <facts argument="PROCEDURE2">
                <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
              </facts>
            </expression>
          </rightExpression>
        </rightExpression>
      </logicExpression>
    </logicSection>
    <actionSection>
      <action xsi:type="EM:ActionExpression">
        <logicExpression xsi:type="EM:InfixExpression">
          <leftExpression xsi:type="EM:Antecedent" id="A1" template="EKS_ORDER_ADDON">
            <facts argument="PROCEDURE1">
              <value xsi:type="EM:StringValue" value="*MAN DIFF"/>
            </facts>
            <facts argument="PROCEDURE2">
              <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@leftExpression"/>
            </facts>
            <facts argument="CHART">
              <value xsi:type="EM:StringValue" value="non chartable"/>
            </facts>
            <facts argument="COMMENT">
              <value xsi:type="EM:StringValue" value="Manual Diff procedure added by Discern Expert system."/>
            </facts>
          </leftExpression>
          <rightExpression xsi:type="EM:Antecedent" id="A2" template="EKS_ORDER_CANCEL">
            <facts argument="PROCEDURE">
              <value xsi:type="EM:AntecedentReference" antecedent="//@ruleDefinition/@logicSection/@logicExpression/@rightExpression/@rightExpression/@expression"/>
            </facts>
            <facts argument="REASON">
              <value xsi:type="EM:StringValue" value="CANCELEDBYDISCERNEXPERT"/>
            </facts>
          </rightExpression>
        </logicExpression>
      </action>
    </actionSection>
  </ruleDefinition>
</EM:ExpertModule>
