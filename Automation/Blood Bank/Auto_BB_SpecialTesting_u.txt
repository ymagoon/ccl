drop program Auto_BB_SpecialTesting go
create program Auto_BB_SpecialTesting

/****************Create Record to be sent to program******************************/
record request_cs 
(
   1 code_set = i4
   1 qual[*]
	 2 cdf_meaning 		= c12
     2 display 			= c40
     2 display_key 		= c40
     2 description 		= vc
     2 definition	    = vc
     2 collation_seq	= i4
     2 active_type_cd 	= f8
     2 active_ind		= i2
     2 authentic_ind 	= i2
     2 extension_cnt 	= i4
     2 extension_data[*]
        3 field_name 	= c32
        3 field_type 	= i4
        3 field_value   = vc
)
 
record request_attribute_r 
(
	1 ref_num				= f8
	1 attribute_cd			= f8
	1 bb_isbt_attribute_id	= f8
)

record request_valid
(
   1 code_set = i4
   1 qual[*]
	   2 cdf_meaning 			= vc
	   2 cdf_meaning_valid = i4
     2 display 				= vc
     2 display_key 			= vc
     2 description 			= vc
     2 definition	   		= vc
     2 collation_seq		= i4
     2 active_type_cd 		= f8
     2 active_ind			= i2
     2 authentic_ind 		= i2
     2 extension_cnt 		= i4
     2 extension_data[3]
        3 field_name 		= vc
        3 field_type 		= i4
        3 field_value  		= vc
     2 attribute_mnemonic   = vc
     2 isbt_meaning      = vc
     2 isbt_meaning_valid  = i4
     2 attribute_cd			= f8
     2 attribute_valid_ind	= i4
     2 bb_isbt_attribute_id = f8
)

;SET STAT = MOVEREC(requestin,REQUEST_Process)

/*****************Copy the requestin into the request_valid*************************************/
declare Seq1 = i2
declare Seq2 = i2
set request_valid->code_set = 1612

set stat = alterlist(request_valid->qual,size(requestin->list_0,5))
for (Seq1=1 to size(requestin->List_0,5))
	set Seq2 = 1
	
	set request_valid->qual[Seq1].cdf_meaning = requestin->List_0[Seq1].meaning
	set request_valid->qual[Seq1].display = requestin->List_0[Seq1].display
	set request_valid->qual[Seq1].display_key = cnvtalphanum(cnvtupper(requestin->List_0[Seq1].display))
	set request_valid->qual[Seq1].description = requestin->List_0[Seq1].display
	set request_valid->qual[Seq1].definition = requestin->List_0[Seq1].display
	set request_valid->qual[Seq1].isbt_meaning = requestin->List_0[Seq1].isbt_meaning
	set request_valid->qual[Seq1].collation_seq = 0
	set request_valid->qual[Seq1].active_type_cd = 0
	set request_valid->qual[Seq1].active_ind = 1
	set request_valid->qual[Seq1].authentic_ind = 0
	set request_valid->qual[Seq1].extension_cnt = 3
	
	for (Seq2=1 to 3) ;fix me to be better programming style
	  ;set stat = alterlist(request_valid->qual[Seq1].extension_data,size(requestin->list_0,5))
	
		if (Seq2 = 1)
			set request_valid->qual[Seq1].extension_data[Seq2].field_name = "ChartName"
			set request_valid->qual[Seq1].extension_data[Seq2].field_type = 2
			set request_valid->qual[Seq1].extension_data[Seq2].field_value = requestin->List_0[Seq1].display
		elseif (Seq2 = 2)
			set request_valid->qual[Seq1].extension_data[Seq2].field_name = "barcode"
			set request_valid->qual[Seq1].extension_data[Seq2].field_type = 1
			set request_valid->qual[Seq1].extension_data[Seq2].field_value = requestin->List_0[Seq1].barcode
		else
			set request_valid->qual[Seq1].extension_data[Seq2].field_name = "Opposite"
			set request_valid->qual[Seq1].extension_data[Seq2].field_type = 1
			set request_valid->qual[Seq1].extension_data[Seq2].field_value = "cowabunga" ;0 for now until we see if antigen 

		endif

	endfor
	
	set request_valid->qual[Seq1].attribute_mnemonic = requestin->List_0[Seq1].display
 
endfor

/*********************Validate Data*************************/
declare Seq2 = i2
 
declare CountRows = i4
declare CountInvalidRows = i4
 
set stat = alterlist(request_valid->qual,size(request_valid->qual,5))
 
set CountRows =0
set CountInvalidRows = 0
 
for (Seq2 = 1 to size(request_valid->qual,5))
	set CountRows = CountRows +1

/*********************Get Invalid CDF_MEANING*************************/
if (request_valid->qual[Seq2].cdf_meaning = "+")
    set request_valid->qual[Seq2].cdf_meaning_valid = 1
elseif (request_valid->qual[Seq2].cdf_meaning = "-")
    set request_valid->qual[Seq2].cdf_meaning_valid = 1
elseif (request_valid->qual[Seq2].cdf_meaning = "SPTYP")
    set request_valid->qual[Seq2].cdf_meaning_valid = 1
else
    set request_valid->qual[Seq1].cdf_meaning_valid = 0
    set CountInvalidRows = CountInvalidRows + 1
endif

/*********************Get ISBT Meaning*************************/
    set request_valid->qual[Seq2].attribute_valid_ind = 0
    SELECT into 'nl:'
        standard_display = bia.standard_display
    FROM
        bb_isbt_attribute bia
    Where bia.active_ind = 1
 
    Detail
        request_valid->qual[Seq2].isbt_meaning_valid = 1
    with nocounter
 
    if (request_valid->qual[Seq2].attribute_valid_ind = 0)
        set CountInvalidRows = CountInvalidRows + 1
    endif
	
/*********************Get Invalid Attributes*************************/
set request_valid->qual[Seq2].attribute_valid_ind = 1
    SELECT into 'nl:'
        attribute_cd = cv.code_value
    FROM
        bb_isbt_attribute bia
        , bb_isbt_attribute_r biar
        , code_value cv
    Plan bia where bia.active_ind = 1
        ;cnvtupper may need to be implemented. Validated process to include attributes with excel macro front-end in progress
        and bia.standard_display = request_valid->qual[Seq2].attribute_mnemonic
    Join biar where biar.bb_isbt_attribute_id = bia.bb_isbt_attribute_id
        and biar.active_ind = 1
    Join cv where cv.code_value = biar.attribute_cd
 
    Detail
        request_valid->qual[Seq2].attribute_valid_ind = 0
        request_valid->qual[Seq2].attribute_cd = attribute_cd
    with nocounter
 
    if (request_valid->qual[Seq2].attribute_valid_ind = 0)
        set CountInvalidRows = CountInvalidRows + 1
    endif
endfor

;call echorecord (request_valid)

if (CountInvalid = 0)

  SELECT into 'nl:'
    
  FROM (dummyt d with seq = size(request_valid->qual,5))
 
PLAN D where request_valid->qual[d.seq].isbt_meaning_valid = 1
    and request_valid->qual[d.seq].attribute_valid_ind = 1
    and request_valid->qual[d.seq].cdf_meaning_valid = 1
      
endif
;execute cs_add_code with REPLACE("REQUEST", request_cs) ;replace with new record
;need to get reply here to gather attribute_id to add to bb_isbt_attribute_r table

end
go
